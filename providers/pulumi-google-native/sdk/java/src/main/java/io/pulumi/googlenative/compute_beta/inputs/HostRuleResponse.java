// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class HostRuleResponse extends io.pulumi.resources.InvokeArgs {

    public static final HostRuleResponse Empty = new HostRuleResponse();

    @InputImport(name="description", required=true)
    private final String description;

    public String getDescription() {
        return this.description;
    }

    @InputImport(name="hosts", required=true)
    private final List<String> hosts;

    public List<String> getHosts() {
        return this.hosts;
    }

    @InputImport(name="pathMatcher", required=true)
    private final String pathMatcher;

    public String getPathMatcher() {
        return this.pathMatcher;
    }

    public HostRuleResponse(
        String description,
        List<String> hosts,
        String pathMatcher) {
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
        this.hosts = Objects.requireNonNull(hosts, "expected parameter 'hosts' to be non-null");
        this.pathMatcher = Objects.requireNonNull(pathMatcher, "expected parameter 'pathMatcher' to be non-null");
    }

    private HostRuleResponse() {
        this.description = null;
        this.hosts = List.of();
        this.pathMatcher = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HostRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String description;
        private List<String> hosts;
        private String pathMatcher;

        public Builder() {
    	      // Empty
        }

        public Builder(HostRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.hosts = defaults.hosts;
    	      this.pathMatcher = defaults.pathMatcher;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setHosts(List<String> hosts) {
            this.hosts = Objects.requireNonNull(hosts);
            return this;
        }

        public Builder setPathMatcher(String pathMatcher) {
            this.pathMatcher = Objects.requireNonNull(pathMatcher);
            return this;
        }

        public HostRuleResponse build() {
            return new HostRuleResponse(description, hosts, pathMatcher);
        }
    }
}
