// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.compute_beta.enums.AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AutoscalingPolicyCustomMetricUtilizationArgs extends io.pulumi.resources.ResourceArgs {

    public static final AutoscalingPolicyCustomMetricUtilizationArgs Empty = new AutoscalingPolicyCustomMetricUtilizationArgs();

    @InputImport(name="filter")
    private final @Nullable Input<String> filter;

    public Input<String> getFilter() {
        return this.filter == null ? Input.empty() : this.filter;
    }

    @InputImport(name="metric")
    private final @Nullable Input<String> metric;

    public Input<String> getMetric() {
        return this.metric == null ? Input.empty() : this.metric;
    }

    @InputImport(name="singleInstanceAssignment")
    private final @Nullable Input<Double> singleInstanceAssignment;

    public Input<Double> getSingleInstanceAssignment() {
        return this.singleInstanceAssignment == null ? Input.empty() : this.singleInstanceAssignment;
    }

    @InputImport(name="utilizationTarget")
    private final @Nullable Input<Double> utilizationTarget;

    public Input<Double> getUtilizationTarget() {
        return this.utilizationTarget == null ? Input.empty() : this.utilizationTarget;
    }

    @InputImport(name="utilizationTargetType")
    private final @Nullable Input<AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType> utilizationTargetType;

    public Input<AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType> getUtilizationTargetType() {
        return this.utilizationTargetType == null ? Input.empty() : this.utilizationTargetType;
    }

    public AutoscalingPolicyCustomMetricUtilizationArgs(
        @Nullable Input<String> filter,
        @Nullable Input<String> metric,
        @Nullable Input<Double> singleInstanceAssignment,
        @Nullable Input<Double> utilizationTarget,
        @Nullable Input<AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType> utilizationTargetType) {
        this.filter = filter;
        this.metric = metric;
        this.singleInstanceAssignment = singleInstanceAssignment;
        this.utilizationTarget = utilizationTarget;
        this.utilizationTargetType = utilizationTargetType;
    }

    private AutoscalingPolicyCustomMetricUtilizationArgs() {
        this.filter = Input.empty();
        this.metric = Input.empty();
        this.singleInstanceAssignment = Input.empty();
        this.utilizationTarget = Input.empty();
        this.utilizationTargetType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoscalingPolicyCustomMetricUtilizationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> filter;
        private @Nullable Input<String> metric;
        private @Nullable Input<Double> singleInstanceAssignment;
        private @Nullable Input<Double> utilizationTarget;
        private @Nullable Input<AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType> utilizationTargetType;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoscalingPolicyCustomMetricUtilizationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.metric = defaults.metric;
    	      this.singleInstanceAssignment = defaults.singleInstanceAssignment;
    	      this.utilizationTarget = defaults.utilizationTarget;
    	      this.utilizationTargetType = defaults.utilizationTargetType;
        }

        public Builder setFilter(@Nullable Input<String> filter) {
            this.filter = filter;
            return this;
        }

        public Builder setFilter(@Nullable String filter) {
            this.filter = Input.ofNullable(filter);
            return this;
        }

        public Builder setMetric(@Nullable Input<String> metric) {
            this.metric = metric;
            return this;
        }

        public Builder setMetric(@Nullable String metric) {
            this.metric = Input.ofNullable(metric);
            return this;
        }

        public Builder setSingleInstanceAssignment(@Nullable Input<Double> singleInstanceAssignment) {
            this.singleInstanceAssignment = singleInstanceAssignment;
            return this;
        }

        public Builder setSingleInstanceAssignment(@Nullable Double singleInstanceAssignment) {
            this.singleInstanceAssignment = Input.ofNullable(singleInstanceAssignment);
            return this;
        }

        public Builder setUtilizationTarget(@Nullable Input<Double> utilizationTarget) {
            this.utilizationTarget = utilizationTarget;
            return this;
        }

        public Builder setUtilizationTarget(@Nullable Double utilizationTarget) {
            this.utilizationTarget = Input.ofNullable(utilizationTarget);
            return this;
        }

        public Builder setUtilizationTargetType(@Nullable Input<AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType> utilizationTargetType) {
            this.utilizationTargetType = utilizationTargetType;
            return this;
        }

        public Builder setUtilizationTargetType(@Nullable AutoscalingPolicyCustomMetricUtilizationUtilizationTargetType utilizationTargetType) {
            this.utilizationTargetType = Input.ofNullable(utilizationTargetType);
            return this;
        }

        public AutoscalingPolicyCustomMetricUtilizationArgs build() {
            return new AutoscalingPolicyCustomMetricUtilizationArgs(filter, metric, singleInstanceAssignment, utilizationTarget, utilizationTargetType);
        }
    }
}
