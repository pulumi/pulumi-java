// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.notebooks_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.notebooks_v1.outputs.AcceleratorConfigResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.ContainerImageResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.DiskResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.ReservationAffinityResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.ShieldedInstanceConfigResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.UpgradeHistoryEntryResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.VmImageResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetInstanceResult {
    private final AcceleratorConfigResponse acceleratorConfig;
    private final String bootDiskSizeGb;
    private final String bootDiskType;
    private final ContainerImageResponse containerImage;
    private final String createTime;
    private final String customGpuDriverPath;
    private final String dataDiskSizeGb;
    private final String dataDiskType;
    private final String diskEncryption;
    private final List<DiskResponse> disks;
    private final Boolean installGpuDriver;
    private final List<String> instanceOwners;
    private final String kmsKey;
    private final Map<String,String> labels;
    private final String machineType;
    private final Map<String,String> metadata;
    private final String name;
    private final String network;
    private final String nicType;
    private final Boolean noProxyAccess;
    private final Boolean noPublicIp;
    private final Boolean noRemoveDataDisk;
    private final String postStartupScript;
    private final String proxyUri;
    private final ReservationAffinityResponse reservationAffinity;
    private final String serviceAccount;
    private final List<String> serviceAccountScopes;
    private final ShieldedInstanceConfigResponse shieldedInstanceConfig;
    private final String state;
    private final String subnet;
    private final List<String> tags;
    private final String updateTime;
    private final List<UpgradeHistoryEntryResponse> upgradeHistory;
    private final VmImageResponse vmImage;

    @OutputCustomType.Constructor({"acceleratorConfig","bootDiskSizeGb","bootDiskType","containerImage","createTime","customGpuDriverPath","dataDiskSizeGb","dataDiskType","diskEncryption","disks","installGpuDriver","instanceOwners","kmsKey","labels","machineType","metadata","name","network","nicType","noProxyAccess","noPublicIp","noRemoveDataDisk","postStartupScript","proxyUri","reservationAffinity","serviceAccount","serviceAccountScopes","shieldedInstanceConfig","state","subnet","tags","updateTime","upgradeHistory","vmImage"})
    private GetInstanceResult(
        AcceleratorConfigResponse acceleratorConfig,
        String bootDiskSizeGb,
        String bootDiskType,
        ContainerImageResponse containerImage,
        String createTime,
        String customGpuDriverPath,
        String dataDiskSizeGb,
        String dataDiskType,
        String diskEncryption,
        List<DiskResponse> disks,
        Boolean installGpuDriver,
        List<String> instanceOwners,
        String kmsKey,
        Map<String,String> labels,
        String machineType,
        Map<String,String> metadata,
        String name,
        String network,
        String nicType,
        Boolean noProxyAccess,
        Boolean noPublicIp,
        Boolean noRemoveDataDisk,
        String postStartupScript,
        String proxyUri,
        ReservationAffinityResponse reservationAffinity,
        String serviceAccount,
        List<String> serviceAccountScopes,
        ShieldedInstanceConfigResponse shieldedInstanceConfig,
        String state,
        String subnet,
        List<String> tags,
        String updateTime,
        List<UpgradeHistoryEntryResponse> upgradeHistory,
        VmImageResponse vmImage) {
        this.acceleratorConfig = Objects.requireNonNull(acceleratorConfig);
        this.bootDiskSizeGb = Objects.requireNonNull(bootDiskSizeGb);
        this.bootDiskType = Objects.requireNonNull(bootDiskType);
        this.containerImage = Objects.requireNonNull(containerImage);
        this.createTime = Objects.requireNonNull(createTime);
        this.customGpuDriverPath = Objects.requireNonNull(customGpuDriverPath);
        this.dataDiskSizeGb = Objects.requireNonNull(dataDiskSizeGb);
        this.dataDiskType = Objects.requireNonNull(dataDiskType);
        this.diskEncryption = Objects.requireNonNull(diskEncryption);
        this.disks = Objects.requireNonNull(disks);
        this.installGpuDriver = Objects.requireNonNull(installGpuDriver);
        this.instanceOwners = Objects.requireNonNull(instanceOwners);
        this.kmsKey = Objects.requireNonNull(kmsKey);
        this.labels = Objects.requireNonNull(labels);
        this.machineType = Objects.requireNonNull(machineType);
        this.metadata = Objects.requireNonNull(metadata);
        this.name = Objects.requireNonNull(name);
        this.network = Objects.requireNonNull(network);
        this.nicType = Objects.requireNonNull(nicType);
        this.noProxyAccess = Objects.requireNonNull(noProxyAccess);
        this.noPublicIp = Objects.requireNonNull(noPublicIp);
        this.noRemoveDataDisk = Objects.requireNonNull(noRemoveDataDisk);
        this.postStartupScript = Objects.requireNonNull(postStartupScript);
        this.proxyUri = Objects.requireNonNull(proxyUri);
        this.reservationAffinity = Objects.requireNonNull(reservationAffinity);
        this.serviceAccount = Objects.requireNonNull(serviceAccount);
        this.serviceAccountScopes = Objects.requireNonNull(serviceAccountScopes);
        this.shieldedInstanceConfig = Objects.requireNonNull(shieldedInstanceConfig);
        this.state = Objects.requireNonNull(state);
        this.subnet = Objects.requireNonNull(subnet);
        this.tags = Objects.requireNonNull(tags);
        this.updateTime = Objects.requireNonNull(updateTime);
        this.upgradeHistory = Objects.requireNonNull(upgradeHistory);
        this.vmImage = Objects.requireNonNull(vmImage);
    }

    public AcceleratorConfigResponse getAcceleratorConfig() {
        return this.acceleratorConfig;
    }
    public String getBootDiskSizeGb() {
        return this.bootDiskSizeGb;
    }
    public String getBootDiskType() {
        return this.bootDiskType;
    }
    public ContainerImageResponse getContainerImage() {
        return this.containerImage;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public String getCustomGpuDriverPath() {
        return this.customGpuDriverPath;
    }
    public String getDataDiskSizeGb() {
        return this.dataDiskSizeGb;
    }
    public String getDataDiskType() {
        return this.dataDiskType;
    }
    public String getDiskEncryption() {
        return this.diskEncryption;
    }
    public List<DiskResponse> getDisks() {
        return this.disks;
    }
    public Boolean getInstallGpuDriver() {
        return this.installGpuDriver;
    }
    public List<String> getInstanceOwners() {
        return this.instanceOwners;
    }
    public String getKmsKey() {
        return this.kmsKey;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public String getMachineType() {
        return this.machineType;
    }
    public Map<String,String> getMetadata() {
        return this.metadata;
    }
    public String getName() {
        return this.name;
    }
    public String getNetwork() {
        return this.network;
    }
    public String getNicType() {
        return this.nicType;
    }
    public Boolean getNoProxyAccess() {
        return this.noProxyAccess;
    }
    public Boolean getNoPublicIp() {
        return this.noPublicIp;
    }
    public Boolean getNoRemoveDataDisk() {
        return this.noRemoveDataDisk;
    }
    public String getPostStartupScript() {
        return this.postStartupScript;
    }
    public String getProxyUri() {
        return this.proxyUri;
    }
    public ReservationAffinityResponse getReservationAffinity() {
        return this.reservationAffinity;
    }
    public String getServiceAccount() {
        return this.serviceAccount;
    }
    public List<String> getServiceAccountScopes() {
        return this.serviceAccountScopes;
    }
    public ShieldedInstanceConfigResponse getShieldedInstanceConfig() {
        return this.shieldedInstanceConfig;
    }
    public String getState() {
        return this.state;
    }
    public String getSubnet() {
        return this.subnet;
    }
    public List<String> getTags() {
        return this.tags;
    }
    public String getUpdateTime() {
        return this.updateTime;
    }
    public List<UpgradeHistoryEntryResponse> getUpgradeHistory() {
        return this.upgradeHistory;
    }
    public VmImageResponse getVmImage() {
        return this.vmImage;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AcceleratorConfigResponse acceleratorConfig;
        private String bootDiskSizeGb;
        private String bootDiskType;
        private ContainerImageResponse containerImage;
        private String createTime;
        private String customGpuDriverPath;
        private String dataDiskSizeGb;
        private String dataDiskType;
        private String diskEncryption;
        private List<DiskResponse> disks;
        private Boolean installGpuDriver;
        private List<String> instanceOwners;
        private String kmsKey;
        private Map<String,String> labels;
        private String machineType;
        private Map<String,String> metadata;
        private String name;
        private String network;
        private String nicType;
        private Boolean noProxyAccess;
        private Boolean noPublicIp;
        private Boolean noRemoveDataDisk;
        private String postStartupScript;
        private String proxyUri;
        private ReservationAffinityResponse reservationAffinity;
        private String serviceAccount;
        private List<String> serviceAccountScopes;
        private ShieldedInstanceConfigResponse shieldedInstanceConfig;
        private String state;
        private String subnet;
        private List<String> tags;
        private String updateTime;
        private List<UpgradeHistoryEntryResponse> upgradeHistory;
        private VmImageResponse vmImage;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorConfig = defaults.acceleratorConfig;
    	      this.bootDiskSizeGb = defaults.bootDiskSizeGb;
    	      this.bootDiskType = defaults.bootDiskType;
    	      this.containerImage = defaults.containerImage;
    	      this.createTime = defaults.createTime;
    	      this.customGpuDriverPath = defaults.customGpuDriverPath;
    	      this.dataDiskSizeGb = defaults.dataDiskSizeGb;
    	      this.dataDiskType = defaults.dataDiskType;
    	      this.diskEncryption = defaults.diskEncryption;
    	      this.disks = defaults.disks;
    	      this.installGpuDriver = defaults.installGpuDriver;
    	      this.instanceOwners = defaults.instanceOwners;
    	      this.kmsKey = defaults.kmsKey;
    	      this.labels = defaults.labels;
    	      this.machineType = defaults.machineType;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.nicType = defaults.nicType;
    	      this.noProxyAccess = defaults.noProxyAccess;
    	      this.noPublicIp = defaults.noPublicIp;
    	      this.noRemoveDataDisk = defaults.noRemoveDataDisk;
    	      this.postStartupScript = defaults.postStartupScript;
    	      this.proxyUri = defaults.proxyUri;
    	      this.reservationAffinity = defaults.reservationAffinity;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.serviceAccountScopes = defaults.serviceAccountScopes;
    	      this.shieldedInstanceConfig = defaults.shieldedInstanceConfig;
    	      this.state = defaults.state;
    	      this.subnet = defaults.subnet;
    	      this.tags = defaults.tags;
    	      this.updateTime = defaults.updateTime;
    	      this.upgradeHistory = defaults.upgradeHistory;
    	      this.vmImage = defaults.vmImage;
        }

        public Builder setAcceleratorConfig(AcceleratorConfigResponse acceleratorConfig) {
            this.acceleratorConfig = Objects.requireNonNull(acceleratorConfig);
            return this;
        }

        public Builder setBootDiskSizeGb(String bootDiskSizeGb) {
            this.bootDiskSizeGb = Objects.requireNonNull(bootDiskSizeGb);
            return this;
        }

        public Builder setBootDiskType(String bootDiskType) {
            this.bootDiskType = Objects.requireNonNull(bootDiskType);
            return this;
        }

        public Builder setContainerImage(ContainerImageResponse containerImage) {
            this.containerImage = Objects.requireNonNull(containerImage);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setCustomGpuDriverPath(String customGpuDriverPath) {
            this.customGpuDriverPath = Objects.requireNonNull(customGpuDriverPath);
            return this;
        }

        public Builder setDataDiskSizeGb(String dataDiskSizeGb) {
            this.dataDiskSizeGb = Objects.requireNonNull(dataDiskSizeGb);
            return this;
        }

        public Builder setDataDiskType(String dataDiskType) {
            this.dataDiskType = Objects.requireNonNull(dataDiskType);
            return this;
        }

        public Builder setDiskEncryption(String diskEncryption) {
            this.diskEncryption = Objects.requireNonNull(diskEncryption);
            return this;
        }

        public Builder setDisks(List<DiskResponse> disks) {
            this.disks = Objects.requireNonNull(disks);
            return this;
        }

        public Builder setInstallGpuDriver(Boolean installGpuDriver) {
            this.installGpuDriver = Objects.requireNonNull(installGpuDriver);
            return this;
        }

        public Builder setInstanceOwners(List<String> instanceOwners) {
            this.instanceOwners = Objects.requireNonNull(instanceOwners);
            return this;
        }

        public Builder setKmsKey(String kmsKey) {
            this.kmsKey = Objects.requireNonNull(kmsKey);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setMachineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }

        public Builder setMetadata(Map<String,String> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetwork(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setNicType(String nicType) {
            this.nicType = Objects.requireNonNull(nicType);
            return this;
        }

        public Builder setNoProxyAccess(Boolean noProxyAccess) {
            this.noProxyAccess = Objects.requireNonNull(noProxyAccess);
            return this;
        }

        public Builder setNoPublicIp(Boolean noPublicIp) {
            this.noPublicIp = Objects.requireNonNull(noPublicIp);
            return this;
        }

        public Builder setNoRemoveDataDisk(Boolean noRemoveDataDisk) {
            this.noRemoveDataDisk = Objects.requireNonNull(noRemoveDataDisk);
            return this;
        }

        public Builder setPostStartupScript(String postStartupScript) {
            this.postStartupScript = Objects.requireNonNull(postStartupScript);
            return this;
        }

        public Builder setProxyUri(String proxyUri) {
            this.proxyUri = Objects.requireNonNull(proxyUri);
            return this;
        }

        public Builder setReservationAffinity(ReservationAffinityResponse reservationAffinity) {
            this.reservationAffinity = Objects.requireNonNull(reservationAffinity);
            return this;
        }

        public Builder setServiceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }

        public Builder setServiceAccountScopes(List<String> serviceAccountScopes) {
            this.serviceAccountScopes = Objects.requireNonNull(serviceAccountScopes);
            return this;
        }

        public Builder setShieldedInstanceConfig(ShieldedInstanceConfigResponse shieldedInstanceConfig) {
            this.shieldedInstanceConfig = Objects.requireNonNull(shieldedInstanceConfig);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setSubnet(String subnet) {
            this.subnet = Objects.requireNonNull(subnet);
            return this;
        }

        public Builder setTags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }

        public Builder setUpgradeHistory(List<UpgradeHistoryEntryResponse> upgradeHistory) {
            this.upgradeHistory = Objects.requireNonNull(upgradeHistory);
            return this;
        }

        public Builder setVmImage(VmImageResponse vmImage) {
            this.vmImage = Objects.requireNonNull(vmImage);
            return this;
        }

        public GetInstanceResult build() {
            return new GetInstanceResult(acceleratorConfig, bootDiskSizeGb, bootDiskType, containerImage, createTime, customGpuDriverPath, dataDiskSizeGb, dataDiskType, diskEncryption, disks, installGpuDriver, instanceOwners, kmsKey, labels, machineType, metadata, name, network, nicType, noProxyAccess, noPublicIp, noRemoveDataDisk, postStartupScript, proxyUri, reservationAffinity, serviceAccount, serviceAccountScopes, shieldedInstanceConfig, state, subnet, tags, updateTime, upgradeHistory, vmImage);
        }
    }
}
