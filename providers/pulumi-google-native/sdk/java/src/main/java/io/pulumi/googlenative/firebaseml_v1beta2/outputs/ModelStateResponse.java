// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.firebaseml_v1beta2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.firebaseml_v1beta2.outputs.StatusResponse;
import java.lang.Boolean;
import java.util.Objects;

@OutputCustomType
public final class ModelStateResponse {
    /**
     * Indicates if this model has been published.
     * 
     */
    private final Boolean published;
    /**
     * Indicates the latest validation error on the model if any. A model may have validation errors if there were problems during the model creation/update. e.g. in the case of a TfLiteModel, if a tflite model file was missing or in the wrong format. This field will be empty for valid models.
     * 
     */
    private final StatusResponse validationError;

    @OutputCustomType.Constructor({"published","validationError"})
    private ModelStateResponse(
        Boolean published,
        StatusResponse validationError) {
        this.published = Objects.requireNonNull(published);
        this.validationError = Objects.requireNonNull(validationError);
    }

    /**
     * Indicates if this model has been published.
     * 
     */
    public Boolean getPublished() {
        return this.published;
    }
    /**
     * Indicates the latest validation error on the model if any. A model may have validation errors if there were problems during the model creation/update. e.g. in the case of a TfLiteModel, if a tflite model file was missing or in the wrong format. This field will be empty for valid models.
     * 
     */
    public StatusResponse getValidationError() {
        return this.validationError;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelStateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean published;
        private StatusResponse validationError;

        public Builder() {
    	      // Empty
        }

        public Builder(ModelStateResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.published = defaults.published;
    	      this.validationError = defaults.validationError;
        }

        public Builder setPublished(Boolean published) {
            this.published = Objects.requireNonNull(published);
            return this;
        }

        public Builder setValidationError(StatusResponse validationError) {
            this.validationError = Objects.requireNonNull(validationError);
            return this;
        }

        public ModelStateResponse build() {
            return new ModelStateResponse(published, validationError);
        }
    }
}
