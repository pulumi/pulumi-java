// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ValueArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Bucket is represented as a range, along with replacement values.
 * 
 */
public final class GooglePrivacyDlpV2BucketArgs extends io.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2BucketArgs Empty = new GooglePrivacyDlpV2BucketArgs();

    /**
     * Upper bound of the range, exclusive; type must match min.
     * 
     */
    @InputImport(name="max")
    private final @Nullable Input<GooglePrivacyDlpV2ValueArgs> max;

    public Input<GooglePrivacyDlpV2ValueArgs> getMax() {
        return this.max == null ? Input.empty() : this.max;
    }

    /**
     * Lower bound of the range, inclusive. Type should be the same as max if used.
     * 
     */
    @InputImport(name="min")
    private final @Nullable Input<GooglePrivacyDlpV2ValueArgs> min;

    public Input<GooglePrivacyDlpV2ValueArgs> getMin() {
        return this.min == null ? Input.empty() : this.min;
    }

    /**
     * Replacement value for this bucket.
     * 
     */
    @InputImport(name="replacementValue", required=true)
    private final Input<GooglePrivacyDlpV2ValueArgs> replacementValue;

    public Input<GooglePrivacyDlpV2ValueArgs> getReplacementValue() {
        return this.replacementValue;
    }

    public GooglePrivacyDlpV2BucketArgs(
        @Nullable Input<GooglePrivacyDlpV2ValueArgs> max,
        @Nullable Input<GooglePrivacyDlpV2ValueArgs> min,
        Input<GooglePrivacyDlpV2ValueArgs> replacementValue) {
        this.max = max;
        this.min = min;
        this.replacementValue = Objects.requireNonNull(replacementValue, "expected parameter 'replacementValue' to be non-null");
    }

    private GooglePrivacyDlpV2BucketArgs() {
        this.max = Input.empty();
        this.min = Input.empty();
        this.replacementValue = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2BucketArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GooglePrivacyDlpV2ValueArgs> max;
        private @Nullable Input<GooglePrivacyDlpV2ValueArgs> min;
        private Input<GooglePrivacyDlpV2ValueArgs> replacementValue;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2BucketArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.max = defaults.max;
    	      this.min = defaults.min;
    	      this.replacementValue = defaults.replacementValue;
        }

        public Builder setMax(@Nullable Input<GooglePrivacyDlpV2ValueArgs> max) {
            this.max = max;
            return this;
        }

        public Builder setMax(@Nullable GooglePrivacyDlpV2ValueArgs max) {
            this.max = Input.ofNullable(max);
            return this;
        }

        public Builder setMin(@Nullable Input<GooglePrivacyDlpV2ValueArgs> min) {
            this.min = min;
            return this;
        }

        public Builder setMin(@Nullable GooglePrivacyDlpV2ValueArgs min) {
            this.min = Input.ofNullable(min);
            return this;
        }

        public Builder setReplacementValue(Input<GooglePrivacyDlpV2ValueArgs> replacementValue) {
            this.replacementValue = Objects.requireNonNull(replacementValue);
            return this;
        }

        public Builder setReplacementValue(GooglePrivacyDlpV2ValueArgs replacementValue) {
            this.replacementValue = Input.of(Objects.requireNonNull(replacementValue));
            return this;
        }

        public GooglePrivacyDlpV2BucketArgs build() {
            return new GooglePrivacyDlpV2BucketArgs(max, min, replacementValue);
        }
    }
}
