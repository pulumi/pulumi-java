// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.appengine_v1beta.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class CustomMetricResponse {
    private final String filter;
    private final String metricName;
    private final Double singleInstanceAssignment;
    private final String targetType;
    private final Double targetUtilization;

    @OutputCustomType.Constructor({"filter","metricName","singleInstanceAssignment","targetType","targetUtilization"})
    private CustomMetricResponse(
        String filter,
        String metricName,
        Double singleInstanceAssignment,
        String targetType,
        Double targetUtilization) {
        this.filter = Objects.requireNonNull(filter);
        this.metricName = Objects.requireNonNull(metricName);
        this.singleInstanceAssignment = Objects.requireNonNull(singleInstanceAssignment);
        this.targetType = Objects.requireNonNull(targetType);
        this.targetUtilization = Objects.requireNonNull(targetUtilization);
    }

    public String getFilter() {
        return this.filter;
    }
    public String getMetricName() {
        return this.metricName;
    }
    public Double getSingleInstanceAssignment() {
        return this.singleInstanceAssignment;
    }
    public String getTargetType() {
        return this.targetType;
    }
    public Double getTargetUtilization() {
        return this.targetUtilization;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomMetricResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String filter;
        private String metricName;
        private Double singleInstanceAssignment;
        private String targetType;
        private Double targetUtilization;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomMetricResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.metricName = defaults.metricName;
    	      this.singleInstanceAssignment = defaults.singleInstanceAssignment;
    	      this.targetType = defaults.targetType;
    	      this.targetUtilization = defaults.targetUtilization;
        }

        public Builder setFilter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }

        public Builder setMetricName(String metricName) {
            this.metricName = Objects.requireNonNull(metricName);
            return this;
        }

        public Builder setSingleInstanceAssignment(Double singleInstanceAssignment) {
            this.singleInstanceAssignment = Objects.requireNonNull(singleInstanceAssignment);
            return this;
        }

        public Builder setTargetType(String targetType) {
            this.targetType = Objects.requireNonNull(targetType);
            return this;
        }

        public Builder setTargetUtilization(Double targetUtilization) {
            this.targetUtilization = Objects.requireNonNull(targetUtilization);
            return this;
        }

        public CustomMetricResponse build() {
            return new CustomMetricResponse(filter, metricName, singleInstanceAssignment, targetType, targetUtilization);
        }
    }
}
