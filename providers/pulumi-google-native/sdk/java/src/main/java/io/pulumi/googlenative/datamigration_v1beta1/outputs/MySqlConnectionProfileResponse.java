// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datamigration_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.datamigration_v1beta1.outputs.SslConfigResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class MySqlConnectionProfileResponse {
    private final String cloudSqlId;
    private final String host;
    private final String password;
    private final Boolean passwordSet;
    private final Integer port;
    private final SslConfigResponse ssl;
    private final String username;

    @OutputCustomType.Constructor({"cloudSqlId","host","password","passwordSet","port","ssl","username"})
    private MySqlConnectionProfileResponse(
        String cloudSqlId,
        String host,
        String password,
        Boolean passwordSet,
        Integer port,
        SslConfigResponse ssl,
        String username) {
        this.cloudSqlId = Objects.requireNonNull(cloudSqlId);
        this.host = Objects.requireNonNull(host);
        this.password = Objects.requireNonNull(password);
        this.passwordSet = Objects.requireNonNull(passwordSet);
        this.port = Objects.requireNonNull(port);
        this.ssl = Objects.requireNonNull(ssl);
        this.username = Objects.requireNonNull(username);
    }

    public String getCloudSqlId() {
        return this.cloudSqlId;
    }
    public String getHost() {
        return this.host;
    }
    public String getPassword() {
        return this.password;
    }
    public Boolean getPasswordSet() {
        return this.passwordSet;
    }
    public Integer getPort() {
        return this.port;
    }
    public SslConfigResponse getSsl() {
        return this.ssl;
    }
    public String getUsername() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MySqlConnectionProfileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cloudSqlId;
        private String host;
        private String password;
        private Boolean passwordSet;
        private Integer port;
        private SslConfigResponse ssl;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(MySqlConnectionProfileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudSqlId = defaults.cloudSqlId;
    	      this.host = defaults.host;
    	      this.password = defaults.password;
    	      this.passwordSet = defaults.passwordSet;
    	      this.port = defaults.port;
    	      this.ssl = defaults.ssl;
    	      this.username = defaults.username;
        }

        public Builder setCloudSqlId(String cloudSqlId) {
            this.cloudSqlId = Objects.requireNonNull(cloudSqlId);
            return this;
        }

        public Builder setHost(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }

        public Builder setPassword(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }

        public Builder setPasswordSet(Boolean passwordSet) {
            this.passwordSet = Objects.requireNonNull(passwordSet);
            return this;
        }

        public Builder setPort(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public Builder setSsl(SslConfigResponse ssl) {
            this.ssl = Objects.requireNonNull(ssl);
            return this;
        }

        public Builder setUsername(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }

        public MySqlConnectionProfileResponse build() {
            return new MySqlConnectionProfileResponse(cloudSqlId, host, password, passwordSet, port, ssl, username);
        }
    }
}
