// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.appengine_v1beta.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.appengine_v1beta.enums.NetworkInstanceIpMode;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NetworkArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkArgs Empty = new NetworkArgs();

    @InputImport(name="forwardedPorts")
    private final @Nullable Input<List<String>> forwardedPorts;

    public Input<List<String>> getForwardedPorts() {
        return this.forwardedPorts == null ? Input.empty() : this.forwardedPorts;
    }

    @InputImport(name="instanceIpMode")
    private final @Nullable Input<NetworkInstanceIpMode> instanceIpMode;

    public Input<NetworkInstanceIpMode> getInstanceIpMode() {
        return this.instanceIpMode == null ? Input.empty() : this.instanceIpMode;
    }

    @InputImport(name="instanceTag")
    private final @Nullable Input<String> instanceTag;

    public Input<String> getInstanceTag() {
        return this.instanceTag == null ? Input.empty() : this.instanceTag;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="sessionAffinity")
    private final @Nullable Input<Boolean> sessionAffinity;

    public Input<Boolean> getSessionAffinity() {
        return this.sessionAffinity == null ? Input.empty() : this.sessionAffinity;
    }

    @InputImport(name="subnetworkName")
    private final @Nullable Input<String> subnetworkName;

    public Input<String> getSubnetworkName() {
        return this.subnetworkName == null ? Input.empty() : this.subnetworkName;
    }

    public NetworkArgs(
        @Nullable Input<List<String>> forwardedPorts,
        @Nullable Input<NetworkInstanceIpMode> instanceIpMode,
        @Nullable Input<String> instanceTag,
        @Nullable Input<String> name,
        @Nullable Input<Boolean> sessionAffinity,
        @Nullable Input<String> subnetworkName) {
        this.forwardedPorts = forwardedPorts;
        this.instanceIpMode = instanceIpMode;
        this.instanceTag = instanceTag;
        this.name = name;
        this.sessionAffinity = sessionAffinity;
        this.subnetworkName = subnetworkName;
    }

    private NetworkArgs() {
        this.forwardedPorts = Input.empty();
        this.instanceIpMode = Input.empty();
        this.instanceTag = Input.empty();
        this.name = Input.empty();
        this.sessionAffinity = Input.empty();
        this.subnetworkName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> forwardedPorts;
        private @Nullable Input<NetworkInstanceIpMode> instanceIpMode;
        private @Nullable Input<String> instanceTag;
        private @Nullable Input<String> name;
        private @Nullable Input<Boolean> sessionAffinity;
        private @Nullable Input<String> subnetworkName;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.forwardedPorts = defaults.forwardedPorts;
    	      this.instanceIpMode = defaults.instanceIpMode;
    	      this.instanceTag = defaults.instanceTag;
    	      this.name = defaults.name;
    	      this.sessionAffinity = defaults.sessionAffinity;
    	      this.subnetworkName = defaults.subnetworkName;
        }

        public Builder setForwardedPorts(@Nullable Input<List<String>> forwardedPorts) {
            this.forwardedPorts = forwardedPorts;
            return this;
        }

        public Builder setForwardedPorts(@Nullable List<String> forwardedPorts) {
            this.forwardedPorts = Input.ofNullable(forwardedPorts);
            return this;
        }

        public Builder setInstanceIpMode(@Nullable Input<NetworkInstanceIpMode> instanceIpMode) {
            this.instanceIpMode = instanceIpMode;
            return this;
        }

        public Builder setInstanceIpMode(@Nullable NetworkInstanceIpMode instanceIpMode) {
            this.instanceIpMode = Input.ofNullable(instanceIpMode);
            return this;
        }

        public Builder setInstanceTag(@Nullable Input<String> instanceTag) {
            this.instanceTag = instanceTag;
            return this;
        }

        public Builder setInstanceTag(@Nullable String instanceTag) {
            this.instanceTag = Input.ofNullable(instanceTag);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setSessionAffinity(@Nullable Input<Boolean> sessionAffinity) {
            this.sessionAffinity = sessionAffinity;
            return this;
        }

        public Builder setSessionAffinity(@Nullable Boolean sessionAffinity) {
            this.sessionAffinity = Input.ofNullable(sessionAffinity);
            return this;
        }

        public Builder setSubnetworkName(@Nullable Input<String> subnetworkName) {
            this.subnetworkName = subnetworkName;
            return this;
        }

        public Builder setSubnetworkName(@Nullable String subnetworkName) {
            this.subnetworkName = Input.ofNullable(subnetworkName);
            return this;
        }

        public NetworkArgs build() {
            return new NetworkArgs(forwardedPorts, instanceIpMode, instanceTag, name, sessionAffinity, subnetworkName);
        }
    }
}
