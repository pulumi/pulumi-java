// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.bigquery_v2.outputs.AvroOptionsResponse;
import io.pulumi.googlenative.bigquery_v2.outputs.BigtableOptionsResponse;
import io.pulumi.googlenative.bigquery_v2.outputs.CsvOptionsResponse;
import io.pulumi.googlenative.bigquery_v2.outputs.GoogleSheetsOptionsResponse;
import io.pulumi.googlenative.bigquery_v2.outputs.HivePartitioningOptionsResponse;
import io.pulumi.googlenative.bigquery_v2.outputs.ParquetOptionsResponse;
import io.pulumi.googlenative.bigquery_v2.outputs.TableSchemaResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class ExternalDataConfigurationResponse {
    private final Boolean autodetect;
    private final AvroOptionsResponse avroOptions;
    private final BigtableOptionsResponse bigtableOptions;
    private final String compression;
    private final String connectionId;
    private final CsvOptionsResponse csvOptions;
    private final List<String> decimalTargetTypes;
    private final GoogleSheetsOptionsResponse googleSheetsOptions;
    private final HivePartitioningOptionsResponse hivePartitioningOptions;
    private final Boolean ignoreUnknownValues;
    private final Integer maxBadRecords;
    private final ParquetOptionsResponse parquetOptions;
    private final TableSchemaResponse schema;
    private final String sourceFormat;
    private final List<String> sourceUris;

    @OutputCustomType.Constructor({"autodetect","avroOptions","bigtableOptions","compression","connectionId","csvOptions","decimalTargetTypes","googleSheetsOptions","hivePartitioningOptions","ignoreUnknownValues","maxBadRecords","parquetOptions","schema","sourceFormat","sourceUris"})
    private ExternalDataConfigurationResponse(
        Boolean autodetect,
        AvroOptionsResponse avroOptions,
        BigtableOptionsResponse bigtableOptions,
        String compression,
        String connectionId,
        CsvOptionsResponse csvOptions,
        List<String> decimalTargetTypes,
        GoogleSheetsOptionsResponse googleSheetsOptions,
        HivePartitioningOptionsResponse hivePartitioningOptions,
        Boolean ignoreUnknownValues,
        Integer maxBadRecords,
        ParquetOptionsResponse parquetOptions,
        TableSchemaResponse schema,
        String sourceFormat,
        List<String> sourceUris) {
        this.autodetect = Objects.requireNonNull(autodetect);
        this.avroOptions = Objects.requireNonNull(avroOptions);
        this.bigtableOptions = Objects.requireNonNull(bigtableOptions);
        this.compression = Objects.requireNonNull(compression);
        this.connectionId = Objects.requireNonNull(connectionId);
        this.csvOptions = Objects.requireNonNull(csvOptions);
        this.decimalTargetTypes = Objects.requireNonNull(decimalTargetTypes);
        this.googleSheetsOptions = Objects.requireNonNull(googleSheetsOptions);
        this.hivePartitioningOptions = Objects.requireNonNull(hivePartitioningOptions);
        this.ignoreUnknownValues = Objects.requireNonNull(ignoreUnknownValues);
        this.maxBadRecords = Objects.requireNonNull(maxBadRecords);
        this.parquetOptions = Objects.requireNonNull(parquetOptions);
        this.schema = Objects.requireNonNull(schema);
        this.sourceFormat = Objects.requireNonNull(sourceFormat);
        this.sourceUris = Objects.requireNonNull(sourceUris);
    }

    public Boolean getAutodetect() {
        return this.autodetect;
    }
    public AvroOptionsResponse getAvroOptions() {
        return this.avroOptions;
    }
    public BigtableOptionsResponse getBigtableOptions() {
        return this.bigtableOptions;
    }
    public String getCompression() {
        return this.compression;
    }
    public String getConnectionId() {
        return this.connectionId;
    }
    public CsvOptionsResponse getCsvOptions() {
        return this.csvOptions;
    }
    public List<String> getDecimalTargetTypes() {
        return this.decimalTargetTypes;
    }
    public GoogleSheetsOptionsResponse getGoogleSheetsOptions() {
        return this.googleSheetsOptions;
    }
    public HivePartitioningOptionsResponse getHivePartitioningOptions() {
        return this.hivePartitioningOptions;
    }
    public Boolean getIgnoreUnknownValues() {
        return this.ignoreUnknownValues;
    }
    public Integer getMaxBadRecords() {
        return this.maxBadRecords;
    }
    public ParquetOptionsResponse getParquetOptions() {
        return this.parquetOptions;
    }
    public TableSchemaResponse getSchema() {
        return this.schema;
    }
    public String getSourceFormat() {
        return this.sourceFormat;
    }
    public List<String> getSourceUris() {
        return this.sourceUris;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExternalDataConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean autodetect;
        private AvroOptionsResponse avroOptions;
        private BigtableOptionsResponse bigtableOptions;
        private String compression;
        private String connectionId;
        private CsvOptionsResponse csvOptions;
        private List<String> decimalTargetTypes;
        private GoogleSheetsOptionsResponse googleSheetsOptions;
        private HivePartitioningOptionsResponse hivePartitioningOptions;
        private Boolean ignoreUnknownValues;
        private Integer maxBadRecords;
        private ParquetOptionsResponse parquetOptions;
        private TableSchemaResponse schema;
        private String sourceFormat;
        private List<String> sourceUris;

        public Builder() {
    	      // Empty
        }

        public Builder(ExternalDataConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autodetect = defaults.autodetect;
    	      this.avroOptions = defaults.avroOptions;
    	      this.bigtableOptions = defaults.bigtableOptions;
    	      this.compression = defaults.compression;
    	      this.connectionId = defaults.connectionId;
    	      this.csvOptions = defaults.csvOptions;
    	      this.decimalTargetTypes = defaults.decimalTargetTypes;
    	      this.googleSheetsOptions = defaults.googleSheetsOptions;
    	      this.hivePartitioningOptions = defaults.hivePartitioningOptions;
    	      this.ignoreUnknownValues = defaults.ignoreUnknownValues;
    	      this.maxBadRecords = defaults.maxBadRecords;
    	      this.parquetOptions = defaults.parquetOptions;
    	      this.schema = defaults.schema;
    	      this.sourceFormat = defaults.sourceFormat;
    	      this.sourceUris = defaults.sourceUris;
        }

        public Builder setAutodetect(Boolean autodetect) {
            this.autodetect = Objects.requireNonNull(autodetect);
            return this;
        }

        public Builder setAvroOptions(AvroOptionsResponse avroOptions) {
            this.avroOptions = Objects.requireNonNull(avroOptions);
            return this;
        }

        public Builder setBigtableOptions(BigtableOptionsResponse bigtableOptions) {
            this.bigtableOptions = Objects.requireNonNull(bigtableOptions);
            return this;
        }

        public Builder setCompression(String compression) {
            this.compression = Objects.requireNonNull(compression);
            return this;
        }

        public Builder setConnectionId(String connectionId) {
            this.connectionId = Objects.requireNonNull(connectionId);
            return this;
        }

        public Builder setCsvOptions(CsvOptionsResponse csvOptions) {
            this.csvOptions = Objects.requireNonNull(csvOptions);
            return this;
        }

        public Builder setDecimalTargetTypes(List<String> decimalTargetTypes) {
            this.decimalTargetTypes = Objects.requireNonNull(decimalTargetTypes);
            return this;
        }

        public Builder setGoogleSheetsOptions(GoogleSheetsOptionsResponse googleSheetsOptions) {
            this.googleSheetsOptions = Objects.requireNonNull(googleSheetsOptions);
            return this;
        }

        public Builder setHivePartitioningOptions(HivePartitioningOptionsResponse hivePartitioningOptions) {
            this.hivePartitioningOptions = Objects.requireNonNull(hivePartitioningOptions);
            return this;
        }

        public Builder setIgnoreUnknownValues(Boolean ignoreUnknownValues) {
            this.ignoreUnknownValues = Objects.requireNonNull(ignoreUnknownValues);
            return this;
        }

        public Builder setMaxBadRecords(Integer maxBadRecords) {
            this.maxBadRecords = Objects.requireNonNull(maxBadRecords);
            return this;
        }

        public Builder setParquetOptions(ParquetOptionsResponse parquetOptions) {
            this.parquetOptions = Objects.requireNonNull(parquetOptions);
            return this;
        }

        public Builder setSchema(TableSchemaResponse schema) {
            this.schema = Objects.requireNonNull(schema);
            return this;
        }

        public Builder setSourceFormat(String sourceFormat) {
            this.sourceFormat = Objects.requireNonNull(sourceFormat);
            return this;
        }

        public Builder setSourceUris(List<String> sourceUris) {
            this.sourceUris = Objects.requireNonNull(sourceUris);
            return this;
        }

        public ExternalDataConfigurationResponse build() {
            return new ExternalDataConfigurationResponse(autodetect, avroOptions, bigtableOptions, compression, connectionId, csvOptions, decimalTargetTypes, googleSheetsOptions, hivePartitioningOptions, ignoreUnknownValues, maxBadRecords, parquetOptions, schema, sourceFormat, sourceUris);
        }
    }
}
