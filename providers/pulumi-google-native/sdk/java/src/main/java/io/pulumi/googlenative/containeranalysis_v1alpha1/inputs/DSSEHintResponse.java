// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * This submessage provides human-readable hints about the purpose of the authority. Because the name of a note acts as its resource reference, it is important to disambiguate the canonical name of the Note (which might be a UUID for security purposes) from "readable" names more suitable for debug output. Note that these hints should not be used to look up authorities in security sensitive contexts, such as when looking up attestations to verify.
 * 
 */
public final class DSSEHintResponse extends io.pulumi.resources.InvokeArgs {

    public static final DSSEHintResponse Empty = new DSSEHintResponse();

    /**
     * The human readable name of this attestation authority, for example "cloudbuild-prod".
     * 
     */
    @Import(name="humanReadableName", required=true)
      private final String humanReadableName;

    public String getHumanReadableName() {
        return this.humanReadableName;
    }

    public DSSEHintResponse(String humanReadableName) {
        this.humanReadableName = Objects.requireNonNull(humanReadableName, "expected parameter 'humanReadableName' to be non-null");
    }

    private DSSEHintResponse() {
        this.humanReadableName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DSSEHintResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String humanReadableName;

        public Builder() {
    	      // Empty
        }

        public Builder(DSSEHintResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.humanReadableName = defaults.humanReadableName;
        }

        public Builder humanReadableName(String humanReadableName) {
            this.humanReadableName = Objects.requireNonNull(humanReadableName);
            return this;
        }        public DSSEHintResponse build() {
            return new DSSEHintResponse(humanReadableName);
        }
    }
}
