// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.orgpolicy_v2.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.orgpolicy_v2.inputs.GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesResponse;
import io.pulumi.googlenative.orgpolicy_v2.inputs.GoogleTypeExprResponse;
import java.lang.Boolean;
import java.util.Objects;


public final class GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse Empty = new GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse();

    @InputImport(name="allowAll", required=true)
    private final Boolean allowAll;

    public Boolean getAllowAll() {
        return this.allowAll;
    }

    @InputImport(name="condition", required=true)
    private final GoogleTypeExprResponse condition;

    public GoogleTypeExprResponse getCondition() {
        return this.condition;
    }

    @InputImport(name="denyAll", required=true)
    private final Boolean denyAll;

    public Boolean getDenyAll() {
        return this.denyAll;
    }

    @InputImport(name="enforce", required=true)
    private final Boolean enforce;

    public Boolean getEnforce() {
        return this.enforce;
    }

    @InputImport(name="values", required=true)
    private final GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesResponse values;

    public GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesResponse getValues() {
        return this.values;
    }

    public GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse(
        Boolean allowAll,
        GoogleTypeExprResponse condition,
        Boolean denyAll,
        Boolean enforce,
        GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesResponse values) {
        this.allowAll = Objects.requireNonNull(allowAll, "expected parameter 'allowAll' to be non-null");
        this.condition = Objects.requireNonNull(condition, "expected parameter 'condition' to be non-null");
        this.denyAll = Objects.requireNonNull(denyAll, "expected parameter 'denyAll' to be non-null");
        this.enforce = Objects.requireNonNull(enforce, "expected parameter 'enforce' to be non-null");
        this.values = Objects.requireNonNull(values, "expected parameter 'values' to be non-null");
    }

    private GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse() {
        this.allowAll = null;
        this.condition = null;
        this.denyAll = null;
        this.enforce = null;
        this.values = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean allowAll;
        private GoogleTypeExprResponse condition;
        private Boolean denyAll;
        private Boolean enforce;
        private GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesResponse values;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowAll = defaults.allowAll;
    	      this.condition = defaults.condition;
    	      this.denyAll = defaults.denyAll;
    	      this.enforce = defaults.enforce;
    	      this.values = defaults.values;
        }

        public Builder setAllowAll(Boolean allowAll) {
            this.allowAll = Objects.requireNonNull(allowAll);
            return this;
        }

        public Builder setCondition(GoogleTypeExprResponse condition) {
            this.condition = Objects.requireNonNull(condition);
            return this;
        }

        public Builder setDenyAll(Boolean denyAll) {
            this.denyAll = Objects.requireNonNull(denyAll);
            return this;
        }

        public Builder setEnforce(Boolean enforce) {
            this.enforce = Objects.requireNonNull(enforce);
            return this;
        }

        public Builder setValues(GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesResponse values) {
            this.values = Objects.requireNonNull(values);
            return this;
        }

        public GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse build() {
            return new GoogleCloudOrgpolicyV2PolicySpecPolicyRuleResponse(allowAll, condition, denyAll, enforce, values);
        }
    }
}
