// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MetricRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final MetricRuleArgs Empty = new MetricRuleArgs();

    @InputImport(name="metricCosts")
    private final @Nullable Input<Map<String,String>> metricCosts;

    public Input<Map<String,String>> getMetricCosts() {
        return this.metricCosts == null ? Input.empty() : this.metricCosts;
    }

    @InputImport(name="selector")
    private final @Nullable Input<String> selector;

    public Input<String> getSelector() {
        return this.selector == null ? Input.empty() : this.selector;
    }

    public MetricRuleArgs(
        @Nullable Input<Map<String,String>> metricCosts,
        @Nullable Input<String> selector) {
        this.metricCosts = metricCosts;
        this.selector = selector;
    }

    private MetricRuleArgs() {
        this.metricCosts = Input.empty();
        this.selector = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Map<String,String>> metricCosts;
        private @Nullable Input<String> selector;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricCosts = defaults.metricCosts;
    	      this.selector = defaults.selector;
        }

        public Builder setMetricCosts(@Nullable Input<Map<String,String>> metricCosts) {
            this.metricCosts = metricCosts;
            return this;
        }

        public Builder setMetricCosts(@Nullable Map<String,String> metricCosts) {
            this.metricCosts = Input.ofNullable(metricCosts);
            return this;
        }

        public Builder setSelector(@Nullable Input<String> selector) {
            this.selector = selector;
            return this;
        }

        public Builder setSelector(@Nullable String selector) {
            this.selector = Input.ofNullable(selector);
            return this;
        }

        public MetricRuleArgs build() {
            return new MetricRuleArgs(metricCosts, selector);
        }
    }
}
