// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.vmmigration_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.vmmigration_v1.outputs.CloneJobResponse;
import io.pulumi.googlenative.vmmigration_v1.outputs.ComputeEngineTargetDefaultsResponse;
import io.pulumi.googlenative.vmmigration_v1.outputs.CutoverJobResponse;
import io.pulumi.googlenative.vmmigration_v1.outputs.ReplicationCycleResponse;
import io.pulumi.googlenative.vmmigration_v1.outputs.ReplicationSyncResponse;
import io.pulumi.googlenative.vmmigration_v1.outputs.SchedulePolicyResponse;
import io.pulumi.googlenative.vmmigration_v1.outputs.StatusResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetMigratingVmResult {
    /**
     * Details of the target VM in Compute Engine.
     * 
     */
    private final ComputeEngineTargetDefaultsResponse computeEngineTargetDefaults;
    /**
     * The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).
     * 
     */
    private final String createTime;
    /**
     * The percentage progress of the current running replication cycle.
     * 
     */
    private final ReplicationCycleResponse currentSyncInfo;
    /**
     * The description attached to the migrating VM by the user.
     * 
     */
    private final String description;
    /**
     * The display name attached to the MigratingVm by the user.
     * 
     */
    private final String displayName;
    /**
     * Provides details on the state of the Migrating VM in case of an error in replication.
     * 
     */
    private final StatusResponse error;
    /**
     * The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource.
     * 
     */
    private final String group;
    /**
     * The labels of the migrating VM.
     * 
     */
    private final Map<String,String> labels;
    /**
     * The most updated snapshot created time in the source that finished replication.
     * 
     */
    private final ReplicationSyncResponse lastSync;
    /**
     * The identifier of the MigratingVm.
     * 
     */
    private final String name;
    /**
     * The replication schedule policy.
     * 
     */
    private final SchedulePolicyResponse policy;
    /**
     * The recent clone jobs performed on the migrating VM. This field holds the vm's last completed clone job and the vm's running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the "view" parameter of the Get/List request.
     * 
     */
    private final List<CloneJobResponse> recentCloneJobs;
    /**
     * The recent cutover jobs performed on the migrating VM. This field holds the vm's last completed cutover job and the vm's running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the "view" parameter of the Get/List request.
     * 
     */
    private final List<CutoverJobResponse> recentCutoverJobs;
    /**
     * The unique ID of the VM in the source. The VM's name in vSphere can be changed, so this is not the VM's name but rather its moRef id. This id is of the form vm-.
     * 
     */
    private final String sourceVmId;
    /**
     * State of the MigratingVm.
     * 
     */
    private final String state;
    /**
     * The last time the migrating VM state was updated.
     * 
     */
    private final String stateTime;
    /**
     * The last time the migrating VM resource was updated.
     * 
     */
    private final String updateTime;

    @OutputCustomType.Constructor
    private GetMigratingVmResult(
        @OutputCustomType.Parameter("computeEngineTargetDefaults") ComputeEngineTargetDefaultsResponse computeEngineTargetDefaults,
        @OutputCustomType.Parameter("createTime") String createTime,
        @OutputCustomType.Parameter("currentSyncInfo") ReplicationCycleResponse currentSyncInfo,
        @OutputCustomType.Parameter("description") String description,
        @OutputCustomType.Parameter("displayName") String displayName,
        @OutputCustomType.Parameter("error") StatusResponse error,
        @OutputCustomType.Parameter("group") String group,
        @OutputCustomType.Parameter("labels") Map<String,String> labels,
        @OutputCustomType.Parameter("lastSync") ReplicationSyncResponse lastSync,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("policy") SchedulePolicyResponse policy,
        @OutputCustomType.Parameter("recentCloneJobs") List<CloneJobResponse> recentCloneJobs,
        @OutputCustomType.Parameter("recentCutoverJobs") List<CutoverJobResponse> recentCutoverJobs,
        @OutputCustomType.Parameter("sourceVmId") String sourceVmId,
        @OutputCustomType.Parameter("state") String state,
        @OutputCustomType.Parameter("stateTime") String stateTime,
        @OutputCustomType.Parameter("updateTime") String updateTime) {
        this.computeEngineTargetDefaults = computeEngineTargetDefaults;
        this.createTime = createTime;
        this.currentSyncInfo = currentSyncInfo;
        this.description = description;
        this.displayName = displayName;
        this.error = error;
        this.group = group;
        this.labels = labels;
        this.lastSync = lastSync;
        this.name = name;
        this.policy = policy;
        this.recentCloneJobs = recentCloneJobs;
        this.recentCutoverJobs = recentCutoverJobs;
        this.sourceVmId = sourceVmId;
        this.state = state;
        this.stateTime = stateTime;
        this.updateTime = updateTime;
    }

    /**
     * Details of the target VM in Compute Engine.
     * 
    */
    public ComputeEngineTargetDefaultsResponse getComputeEngineTargetDefaults() {
        return this.computeEngineTargetDefaults;
    }
    /**
     * The time the migrating VM was created (this refers to this resource and not to the time it was installed in the source).
     * 
    */
    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * The percentage progress of the current running replication cycle.
     * 
    */
    public ReplicationCycleResponse getCurrentSyncInfo() {
        return this.currentSyncInfo;
    }
    /**
     * The description attached to the migrating VM by the user.
     * 
    */
    public String getDescription() {
        return this.description;
    }
    /**
     * The display name attached to the MigratingVm by the user.
     * 
    */
    public String getDisplayName() {
        return this.displayName;
    }
    /**
     * Provides details on the state of the Migrating VM in case of an error in replication.
     * 
    */
    public StatusResponse getError() {
        return this.error;
    }
    /**
     * The group this migrating vm is included in, if any. The group is represented by the full path of the appropriate Group resource.
     * 
    */
    public String getGroup() {
        return this.group;
    }
    /**
     * The labels of the migrating VM.
     * 
    */
    public Map<String,String> getLabels() {
        return this.labels;
    }
    /**
     * The most updated snapshot created time in the source that finished replication.
     * 
    */
    public ReplicationSyncResponse getLastSync() {
        return this.lastSync;
    }
    /**
     * The identifier of the MigratingVm.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The replication schedule policy.
     * 
    */
    public SchedulePolicyResponse getPolicy() {
        return this.policy;
    }
    /**
     * The recent clone jobs performed on the migrating VM. This field holds the vm's last completed clone job and the vm's running clone job, if one exists. Note: To have this field populated you need to explicitly request it via the "view" parameter of the Get/List request.
     * 
    */
    public List<CloneJobResponse> getRecentCloneJobs() {
        return this.recentCloneJobs;
    }
    /**
     * The recent cutover jobs performed on the migrating VM. This field holds the vm's last completed cutover job and the vm's running cutover job, if one exists. Note: To have this field populated you need to explicitly request it via the "view" parameter of the Get/List request.
     * 
    */
    public List<CutoverJobResponse> getRecentCutoverJobs() {
        return this.recentCutoverJobs;
    }
    /**
     * The unique ID of the VM in the source. The VM's name in vSphere can be changed, so this is not the VM's name but rather its moRef id. This id is of the form vm-.
     * 
    */
    public String getSourceVmId() {
        return this.sourceVmId;
    }
    /**
     * State of the MigratingVm.
     * 
    */
    public String getState() {
        return this.state;
    }
    /**
     * The last time the migrating VM state was updated.
     * 
    */
    public String getStateTime() {
        return this.stateTime;
    }
    /**
     * The last time the migrating VM resource was updated.
     * 
    */
    public String getUpdateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigratingVmResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComputeEngineTargetDefaultsResponse computeEngineTargetDefaults;
        private String createTime;
        private ReplicationCycleResponse currentSyncInfo;
        private String description;
        private String displayName;
        private StatusResponse error;
        private String group;
        private Map<String,String> labels;
        private ReplicationSyncResponse lastSync;
        private String name;
        private SchedulePolicyResponse policy;
        private List<CloneJobResponse> recentCloneJobs;
        private List<CutoverJobResponse> recentCutoverJobs;
        private String sourceVmId;
        private String state;
        private String stateTime;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMigratingVmResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.computeEngineTargetDefaults = defaults.computeEngineTargetDefaults;
    	      this.createTime = defaults.createTime;
    	      this.currentSyncInfo = defaults.currentSyncInfo;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.error = defaults.error;
    	      this.group = defaults.group;
    	      this.labels = defaults.labels;
    	      this.lastSync = defaults.lastSync;
    	      this.name = defaults.name;
    	      this.policy = defaults.policy;
    	      this.recentCloneJobs = defaults.recentCloneJobs;
    	      this.recentCutoverJobs = defaults.recentCutoverJobs;
    	      this.sourceVmId = defaults.sourceVmId;
    	      this.state = defaults.state;
    	      this.stateTime = defaults.stateTime;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setComputeEngineTargetDefaults(ComputeEngineTargetDefaultsResponse computeEngineTargetDefaults) {
            this.computeEngineTargetDefaults = Objects.requireNonNull(computeEngineTargetDefaults);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setCurrentSyncInfo(ReplicationCycleResponse currentSyncInfo) {
            this.currentSyncInfo = Objects.requireNonNull(currentSyncInfo);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setError(StatusResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }

        public Builder setGroup(String group) {
            this.group = Objects.requireNonNull(group);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setLastSync(ReplicationSyncResponse lastSync) {
            this.lastSync = Objects.requireNonNull(lastSync);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPolicy(SchedulePolicyResponse policy) {
            this.policy = Objects.requireNonNull(policy);
            return this;
        }

        public Builder setRecentCloneJobs(List<CloneJobResponse> recentCloneJobs) {
            this.recentCloneJobs = Objects.requireNonNull(recentCloneJobs);
            return this;
        }

        public Builder setRecentCutoverJobs(List<CutoverJobResponse> recentCutoverJobs) {
            this.recentCutoverJobs = Objects.requireNonNull(recentCutoverJobs);
            return this;
        }

        public Builder setSourceVmId(String sourceVmId) {
            this.sourceVmId = Objects.requireNonNull(sourceVmId);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setStateTime(String stateTime) {
            this.stateTime = Objects.requireNonNull(stateTime);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetMigratingVmResult build() {
            return new GetMigratingVmResult(computeEngineTargetDefaults, createTime, currentSyncInfo, description, displayName, error, group, labels, lastSync, name, policy, recentCloneJobs, recentCutoverJobs, sourceVmId, state, stateTime, updateTime);
        }
    }
}
