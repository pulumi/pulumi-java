// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CloudStorageRegexFileSetArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Set of files to scan.
 * 
 */
public final class GooglePrivacyDlpV2FileSetArgs extends io.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2FileSetArgs Empty = new GooglePrivacyDlpV2FileSetArgs();

    /**
     * The regex-filtered set of files to scan. Exactly one of `url` or `regex_file_set` must be set.
     * 
     */
    @InputImport(name="regexFileSet")
      private final @Nullable Input<GooglePrivacyDlpV2CloudStorageRegexFileSetArgs> regexFileSet;

    public Input<GooglePrivacyDlpV2CloudStorageRegexFileSetArgs> getRegexFileSet() {
        return this.regexFileSet == null ? Input.empty() : this.regexFileSet;
    }

    /**
     * The Cloud Storage url of the file(s) to scan, in the format `gs:///`. Trailing wildcard in the path is allowed. If the url ends in a trailing slash, the bucket or directory represented by the url will be scanned non-recursively (content in sub-directories will not be scanned). This means that `gs://mybucket/` is equivalent to `gs://mybucket/*`, and `gs://mybucket/directory/` is equivalent to `gs://mybucket/directory/*`. Exactly one of `url` or `regex_file_set` must be set.
     * 
     */
    @InputImport(name="url")
      private final @Nullable Input<String> url;

    public Input<String> getUrl() {
        return this.url == null ? Input.empty() : this.url;
    }

    public GooglePrivacyDlpV2FileSetArgs(
        @Nullable Input<GooglePrivacyDlpV2CloudStorageRegexFileSetArgs> regexFileSet,
        @Nullable Input<String> url) {
        this.regexFileSet = regexFileSet;
        this.url = url;
    }

    private GooglePrivacyDlpV2FileSetArgs() {
        this.regexFileSet = Input.empty();
        this.url = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2FileSetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GooglePrivacyDlpV2CloudStorageRegexFileSetArgs> regexFileSet;
        private @Nullable Input<String> url;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2FileSetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.regexFileSet = defaults.regexFileSet;
    	      this.url = defaults.url;
        }

        public Builder setRegexFileSet(@Nullable Input<GooglePrivacyDlpV2CloudStorageRegexFileSetArgs> regexFileSet) {
            this.regexFileSet = regexFileSet;
            return this;
        }

        public Builder setRegexFileSet(@Nullable GooglePrivacyDlpV2CloudStorageRegexFileSetArgs regexFileSet) {
            this.regexFileSet = Input.ofNullable(regexFileSet);
            return this;
        }

        public Builder setUrl(@Nullable Input<String> url) {
            this.url = url;
            return this;
        }

        public Builder setUrl(@Nullable String url) {
            this.url = Input.ofNullable(url);
            return this;
        }
        public GooglePrivacyDlpV2FileSetArgs build() {
            return new GooglePrivacyDlpV2FileSetArgs(regexFileSet, url);
        }
    }
}
