// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datafusion_v1beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.datafusion_v1beta1.enums.VersionType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class VersionArgs extends io.pulumi.resources.ResourceArgs {

    public static final VersionArgs Empty = new VersionArgs();

    @InputImport(name="availableFeatures")
    private final @Nullable Input<List<String>> availableFeatures;

    public Input<List<String>> getAvailableFeatures() {
        return this.availableFeatures == null ? Input.empty() : this.availableFeatures;
    }

    @InputImport(name="defaultVersion")
    private final @Nullable Input<Boolean> defaultVersion;

    public Input<Boolean> getDefaultVersion() {
        return this.defaultVersion == null ? Input.empty() : this.defaultVersion;
    }

    @InputImport(name="type")
    private final @Nullable Input<VersionType> type;

    public Input<VersionType> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    @InputImport(name="versionNumber")
    private final @Nullable Input<String> versionNumber;

    public Input<String> getVersionNumber() {
        return this.versionNumber == null ? Input.empty() : this.versionNumber;
    }

    public VersionArgs(
        @Nullable Input<List<String>> availableFeatures,
        @Nullable Input<Boolean> defaultVersion,
        @Nullable Input<VersionType> type,
        @Nullable Input<String> versionNumber) {
        this.availableFeatures = availableFeatures;
        this.defaultVersion = defaultVersion;
        this.type = type;
        this.versionNumber = versionNumber;
    }

    private VersionArgs() {
        this.availableFeatures = Input.empty();
        this.defaultVersion = Input.empty();
        this.type = Input.empty();
        this.versionNumber = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VersionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> availableFeatures;
        private @Nullable Input<Boolean> defaultVersion;
        private @Nullable Input<VersionType> type;
        private @Nullable Input<String> versionNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(VersionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableFeatures = defaults.availableFeatures;
    	      this.defaultVersion = defaults.defaultVersion;
    	      this.type = defaults.type;
    	      this.versionNumber = defaults.versionNumber;
        }

        public Builder setAvailableFeatures(@Nullable Input<List<String>> availableFeatures) {
            this.availableFeatures = availableFeatures;
            return this;
        }

        public Builder setAvailableFeatures(@Nullable List<String> availableFeatures) {
            this.availableFeatures = Input.ofNullable(availableFeatures);
            return this;
        }

        public Builder setDefaultVersion(@Nullable Input<Boolean> defaultVersion) {
            this.defaultVersion = defaultVersion;
            return this;
        }

        public Builder setDefaultVersion(@Nullable Boolean defaultVersion) {
            this.defaultVersion = Input.ofNullable(defaultVersion);
            return this;
        }

        public Builder setType(@Nullable Input<VersionType> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable VersionType type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public Builder setVersionNumber(@Nullable Input<String> versionNumber) {
            this.versionNumber = versionNumber;
            return this;
        }

        public Builder setVersionNumber(@Nullable String versionNumber) {
            this.versionNumber = Input.ofNullable(versionNumber);
            return this;
        }

        public VersionArgs build() {
            return new VersionArgs(availableFeatures, defaultVersion, type, versionNumber);
        }
    }
}
