// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.networkmanagement_v1beta1.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * For display only. Metadata associated with a Compute Engine VPN gateway.
 * 
 */
public final class VpnGatewayInfoResponse extends io.pulumi.resources.InvokeArgs {

    public static final VpnGatewayInfoResponse Empty = new VpnGatewayInfoResponse();

    /**
     * Name of a VPN gateway.
     * 
     */
    @InputImport(name="displayName", required=true)
    private final String displayName;

    public String getDisplayName() {
        return this.displayName;
    }

    /**
     * IP address of the VPN gateway.
     * 
     */
    @InputImport(name="ipAddress", required=true)
    private final String ipAddress;

    public String getIpAddress() {
        return this.ipAddress;
    }

    /**
     * URI of a Compute Engine network where the VPN gateway is configured.
     * 
     */
    @InputImport(name="networkUri", required=true)
    private final String networkUri;

    public String getNetworkUri() {
        return this.networkUri;
    }

    /**
     * Name of a Google Cloud region where this VPN gateway is configured.
     * 
     */
    @InputImport(name="region", required=true)
    private final String region;

    public String getRegion() {
        return this.region;
    }

    /**
     * URI of a VPN gateway.
     * 
     */
    @InputImport(name="uri", required=true)
    private final String uri;

    public String getUri() {
        return this.uri;
    }

    /**
     * A VPN tunnel that is associated with this VPN gateway. There may be multiple VPN tunnels configured on a VPN gateway, and only the one relevant to the test is displayed.
     * 
     */
    @InputImport(name="vpnTunnelUri", required=true)
    private final String vpnTunnelUri;

    public String getVpnTunnelUri() {
        return this.vpnTunnelUri;
    }

    public VpnGatewayInfoResponse(
        String displayName,
        String ipAddress,
        String networkUri,
        String region,
        String uri,
        String vpnTunnelUri) {
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.ipAddress = Objects.requireNonNull(ipAddress, "expected parameter 'ipAddress' to be non-null");
        this.networkUri = Objects.requireNonNull(networkUri, "expected parameter 'networkUri' to be non-null");
        this.region = Objects.requireNonNull(region, "expected parameter 'region' to be non-null");
        this.uri = Objects.requireNonNull(uri, "expected parameter 'uri' to be non-null");
        this.vpnTunnelUri = Objects.requireNonNull(vpnTunnelUri, "expected parameter 'vpnTunnelUri' to be non-null");
    }

    private VpnGatewayInfoResponse() {
        this.displayName = null;
        this.ipAddress = null;
        this.networkUri = null;
        this.region = null;
        this.uri = null;
        this.vpnTunnelUri = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VpnGatewayInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String displayName;
        private String ipAddress;
        private String networkUri;
        private String region;
        private String uri;
        private String vpnTunnelUri;

        public Builder() {
    	      // Empty
        }

        public Builder(VpnGatewayInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.ipAddress = defaults.ipAddress;
    	      this.networkUri = defaults.networkUri;
    	      this.region = defaults.region;
    	      this.uri = defaults.uri;
    	      this.vpnTunnelUri = defaults.vpnTunnelUri;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setIpAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }

        public Builder setNetworkUri(String networkUri) {
            this.networkUri = Objects.requireNonNull(networkUri);
            return this;
        }

        public Builder setRegion(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }

        public Builder setUri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }

        public Builder setVpnTunnelUri(String vpnTunnelUri) {
            this.vpnTunnelUri = Objects.requireNonNull(vpnTunnelUri);
            return this;
        }

        public VpnGatewayInfoResponse build() {
            return new VpnGatewayInfoResponse(displayName, ipAddress, networkUri, region, uri, vpnTunnelUri);
        }
    }
}
