// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.transcoder_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class ManifestResponse {
    private final String fileName;
    private final List<String> muxStreams;
    private final String type;

    @OutputCustomType.Constructor({"fileName","muxStreams","type"})
    private ManifestResponse(
        String fileName,
        List<String> muxStreams,
        String type) {
        this.fileName = Objects.requireNonNull(fileName);
        this.muxStreams = Objects.requireNonNull(muxStreams);
        this.type = Objects.requireNonNull(type);
    }

    public String getFileName() {
        return this.fileName;
    }
    public List<String> getMuxStreams() {
        return this.muxStreams;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManifestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String fileName;
        private List<String> muxStreams;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(ManifestResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fileName = defaults.fileName;
    	      this.muxStreams = defaults.muxStreams;
    	      this.type = defaults.type;
        }

        public Builder setFileName(String fileName) {
            this.fileName = Objects.requireNonNull(fileName);
            return this;
        }

        public Builder setMuxStreams(List<String> muxStreams) {
            this.muxStreams = Objects.requireNonNull(muxStreams);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public ManifestResponse build() {
            return new ManifestResponse(fileName, muxStreams, type);
        }
    }
}
