// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.gkehub_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.gkehub_v1.inputs.ResourceManifestResponse;
import io.pulumi.googlenative.gkehub_v1.inputs.ResourceOptionsResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class KubernetesResourceResponse extends io.pulumi.resources.InvokeArgs {

    public static final KubernetesResourceResponse Empty = new KubernetesResourceResponse();

    @InputImport(name="connectResources", required=true)
    private final List<ResourceManifestResponse> connectResources;

    public List<ResourceManifestResponse> getConnectResources() {
        return this.connectResources;
    }

    @InputImport(name="membershipCrManifest", required=true)
    private final String membershipCrManifest;

    public String getMembershipCrManifest() {
        return this.membershipCrManifest;
    }

    @InputImport(name="membershipResources", required=true)
    private final List<ResourceManifestResponse> membershipResources;

    public List<ResourceManifestResponse> getMembershipResources() {
        return this.membershipResources;
    }

    @InputImport(name="resourceOptions", required=true)
    private final ResourceOptionsResponse resourceOptions;

    public ResourceOptionsResponse getResourceOptions() {
        return this.resourceOptions;
    }

    public KubernetesResourceResponse(
        List<ResourceManifestResponse> connectResources,
        String membershipCrManifest,
        List<ResourceManifestResponse> membershipResources,
        ResourceOptionsResponse resourceOptions) {
        this.connectResources = Objects.requireNonNull(connectResources, "expected parameter 'connectResources' to be non-null");
        this.membershipCrManifest = Objects.requireNonNull(membershipCrManifest, "expected parameter 'membershipCrManifest' to be non-null");
        this.membershipResources = Objects.requireNonNull(membershipResources, "expected parameter 'membershipResources' to be non-null");
        this.resourceOptions = Objects.requireNonNull(resourceOptions, "expected parameter 'resourceOptions' to be non-null");
    }

    private KubernetesResourceResponse() {
        this.connectResources = List.of();
        this.membershipCrManifest = null;
        this.membershipResources = List.of();
        this.resourceOptions = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubernetesResourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<ResourceManifestResponse> connectResources;
        private String membershipCrManifest;
        private List<ResourceManifestResponse> membershipResources;
        private ResourceOptionsResponse resourceOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(KubernetesResourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectResources = defaults.connectResources;
    	      this.membershipCrManifest = defaults.membershipCrManifest;
    	      this.membershipResources = defaults.membershipResources;
    	      this.resourceOptions = defaults.resourceOptions;
        }

        public Builder setConnectResources(List<ResourceManifestResponse> connectResources) {
            this.connectResources = Objects.requireNonNull(connectResources);
            return this;
        }

        public Builder setMembershipCrManifest(String membershipCrManifest) {
            this.membershipCrManifest = Objects.requireNonNull(membershipCrManifest);
            return this;
        }

        public Builder setMembershipResources(List<ResourceManifestResponse> membershipResources) {
            this.membershipResources = Objects.requireNonNull(membershipResources);
            return this;
        }

        public Builder setResourceOptions(ResourceOptionsResponse resourceOptions) {
            this.resourceOptions = Objects.requireNonNull(resourceOptions);
            return this;
        }

        public KubernetesResourceResponse build() {
            return new KubernetesResourceResponse(connectResources, membershipCrManifest, membershipResources, resourceOptions);
        }
    }
}
