// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.appengine_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.appengine_v1.inputs.CloudBuildOptionsArgs;
import io.pulumi.googlenative.appengine_v1.inputs.ContainerInfoArgs;
import io.pulumi.googlenative.appengine_v1.inputs.ZipInfoArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeploymentArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeploymentArgs Empty = new DeploymentArgs();

    @InputImport(name="cloudBuildOptions")
    private final @Nullable Input<CloudBuildOptionsArgs> cloudBuildOptions;

    public Input<CloudBuildOptionsArgs> getCloudBuildOptions() {
        return this.cloudBuildOptions == null ? Input.empty() : this.cloudBuildOptions;
    }

    @InputImport(name="container")
    private final @Nullable Input<ContainerInfoArgs> container;

    public Input<ContainerInfoArgs> getContainer() {
        return this.container == null ? Input.empty() : this.container;
    }

    @InputImport(name="files")
    private final @Nullable Input<Map<String,String>> files;

    public Input<Map<String,String>> getFiles() {
        return this.files == null ? Input.empty() : this.files;
    }

    @InputImport(name="zip")
    private final @Nullable Input<ZipInfoArgs> zip;

    public Input<ZipInfoArgs> getZip() {
        return this.zip == null ? Input.empty() : this.zip;
    }

    public DeploymentArgs(
        @Nullable Input<CloudBuildOptionsArgs> cloudBuildOptions,
        @Nullable Input<ContainerInfoArgs> container,
        @Nullable Input<Map<String,String>> files,
        @Nullable Input<ZipInfoArgs> zip) {
        this.cloudBuildOptions = cloudBuildOptions;
        this.container = container;
        this.files = files;
        this.zip = zip;
    }

    private DeploymentArgs() {
        this.cloudBuildOptions = Input.empty();
        this.container = Input.empty();
        this.files = Input.empty();
        this.zip = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<CloudBuildOptionsArgs> cloudBuildOptions;
        private @Nullable Input<ContainerInfoArgs> container;
        private @Nullable Input<Map<String,String>> files;
        private @Nullable Input<ZipInfoArgs> zip;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudBuildOptions = defaults.cloudBuildOptions;
    	      this.container = defaults.container;
    	      this.files = defaults.files;
    	      this.zip = defaults.zip;
        }

        public Builder setCloudBuildOptions(@Nullable Input<CloudBuildOptionsArgs> cloudBuildOptions) {
            this.cloudBuildOptions = cloudBuildOptions;
            return this;
        }

        public Builder setCloudBuildOptions(@Nullable CloudBuildOptionsArgs cloudBuildOptions) {
            this.cloudBuildOptions = Input.ofNullable(cloudBuildOptions);
            return this;
        }

        public Builder setContainer(@Nullable Input<ContainerInfoArgs> container) {
            this.container = container;
            return this;
        }

        public Builder setContainer(@Nullable ContainerInfoArgs container) {
            this.container = Input.ofNullable(container);
            return this;
        }

        public Builder setFiles(@Nullable Input<Map<String,String>> files) {
            this.files = files;
            return this;
        }

        public Builder setFiles(@Nullable Map<String,String> files) {
            this.files = Input.ofNullable(files);
            return this;
        }

        public Builder setZip(@Nullable Input<ZipInfoArgs> zip) {
            this.zip = zip;
            return this;
        }

        public Builder setZip(@Nullable ZipInfoArgs zip) {
            this.zip = Input.ofNullable(zip);
            return this;
        }

        public DeploymentArgs build() {
            return new DeploymentArgs(cloudBuildOptions, container, files, zip);
        }
    }
}
