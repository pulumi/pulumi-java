// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.composer_v1beta1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.composer_v1beta1.inputs.SchedulerResourceResponse;
import io.pulumi.googlenative.composer_v1beta1.inputs.WebServerResourceResponse;
import io.pulumi.googlenative.composer_v1beta1.inputs.WorkerResourceResponse;
import java.util.Objects;


public final class WorkloadsConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final WorkloadsConfigResponse Empty = new WorkloadsConfigResponse();

    @InputImport(name="scheduler", required=true)
    private final SchedulerResourceResponse scheduler;

    public SchedulerResourceResponse getScheduler() {
        return this.scheduler;
    }

    @InputImport(name="webServer", required=true)
    private final WebServerResourceResponse webServer;

    public WebServerResourceResponse getWebServer() {
        return this.webServer;
    }

    @InputImport(name="worker", required=true)
    private final WorkerResourceResponse worker;

    public WorkerResourceResponse getWorker() {
        return this.worker;
    }

    public WorkloadsConfigResponse(
        SchedulerResourceResponse scheduler,
        WebServerResourceResponse webServer,
        WorkerResourceResponse worker) {
        this.scheduler = Objects.requireNonNull(scheduler, "expected parameter 'scheduler' to be non-null");
        this.webServer = Objects.requireNonNull(webServer, "expected parameter 'webServer' to be non-null");
        this.worker = Objects.requireNonNull(worker, "expected parameter 'worker' to be non-null");
    }

    private WorkloadsConfigResponse() {
        this.scheduler = null;
        this.webServer = null;
        this.worker = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadsConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SchedulerResourceResponse scheduler;
        private WebServerResourceResponse webServer;
        private WorkerResourceResponse worker;

        public Builder() {
    	      // Empty
        }

        public Builder(WorkloadsConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scheduler = defaults.scheduler;
    	      this.webServer = defaults.webServer;
    	      this.worker = defaults.worker;
        }

        public Builder setScheduler(SchedulerResourceResponse scheduler) {
            this.scheduler = Objects.requireNonNull(scheduler);
            return this;
        }

        public Builder setWebServer(WebServerResourceResponse webServer) {
            this.webServer = Objects.requireNonNull(webServer);
            return this;
        }

        public Builder setWorker(WorkerResourceResponse worker) {
            this.worker = Objects.requireNonNull(worker);
            return this;
        }

        public WorkloadsConfigResponse build() {
            return new WorkloadsConfigResponse(scheduler, webServer, worker);
        }
    }
}
