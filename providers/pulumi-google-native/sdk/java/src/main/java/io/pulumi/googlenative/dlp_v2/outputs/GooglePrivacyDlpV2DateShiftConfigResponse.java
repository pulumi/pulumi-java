// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2CryptoKeyResponse;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2FieldIdResponse;
import java.lang.Integer;
import java.util.Objects;

@OutputCustomType
public final class GooglePrivacyDlpV2DateShiftConfigResponse {
    /**
     * Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context.
     * 
     */
    private final GooglePrivacyDlpV2FieldIdResponse context;
    /**
     * Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be applied to table items.
     * 
     */
    private final GooglePrivacyDlpV2CryptoKeyResponse cryptoKey;
    /**
     * For example, -5 means shift date to at most 5 days back in the past.
     * 
     */
    private final Integer lowerBoundDays;
    /**
     * Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
     * 
     */
    private final Integer upperBoundDays;

    @OutputCustomType.Constructor
    private GooglePrivacyDlpV2DateShiftConfigResponse(
        @OutputCustomType.Parameter("context") GooglePrivacyDlpV2FieldIdResponse context,
        @OutputCustomType.Parameter("cryptoKey") GooglePrivacyDlpV2CryptoKeyResponse cryptoKey,
        @OutputCustomType.Parameter("lowerBoundDays") Integer lowerBoundDays,
        @OutputCustomType.Parameter("upperBoundDays") Integer upperBoundDays) {
        this.context = context;
        this.cryptoKey = cryptoKey;
        this.lowerBoundDays = lowerBoundDays;
        this.upperBoundDays = upperBoundDays;
    }

    /**
     * Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context.
     * 
    */
    public GooglePrivacyDlpV2FieldIdResponse getContext() {
        return this.context;
    }
    /**
     * Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be applied to table items.
     * 
    */
    public GooglePrivacyDlpV2CryptoKeyResponse getCryptoKey() {
        return this.cryptoKey;
    }
    /**
     * For example, -5 means shift date to at most 5 days back in the past.
     * 
    */
    public Integer getLowerBoundDays() {
        return this.lowerBoundDays;
    }
    /**
     * Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
     * 
    */
    public Integer getUpperBoundDays() {
        return this.upperBoundDays;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2DateShiftConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2FieldIdResponse context;
        private GooglePrivacyDlpV2CryptoKeyResponse cryptoKey;
        private Integer lowerBoundDays;
        private Integer upperBoundDays;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2DateShiftConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.context = defaults.context;
    	      this.cryptoKey = defaults.cryptoKey;
    	      this.lowerBoundDays = defaults.lowerBoundDays;
    	      this.upperBoundDays = defaults.upperBoundDays;
        }

        public Builder context(GooglePrivacyDlpV2FieldIdResponse context) {
            this.context = Objects.requireNonNull(context);
            return this;
        }

        public Builder cryptoKey(GooglePrivacyDlpV2CryptoKeyResponse cryptoKey) {
            this.cryptoKey = Objects.requireNonNull(cryptoKey);
            return this;
        }

        public Builder lowerBoundDays(Integer lowerBoundDays) {
            this.lowerBoundDays = Objects.requireNonNull(lowerBoundDays);
            return this;
        }

        public Builder upperBoundDays(Integer upperBoundDays) {
            this.upperBoundDays = Objects.requireNonNull(upperBoundDays);
            return this;
        }
        public GooglePrivacyDlpV2DateShiftConfigResponse build() {
            return new GooglePrivacyDlpV2DateShiftConfigResponse(context, cryptoKey, lowerBoundDays, upperBoundDays);
        }
    }
}
