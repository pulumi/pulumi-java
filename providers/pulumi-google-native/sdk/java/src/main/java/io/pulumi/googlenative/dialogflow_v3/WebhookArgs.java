// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v3;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class WebhookArgs extends io.pulumi.resources.ResourceArgs {

    public static final WebhookArgs Empty = new WebhookArgs();

    @Import(name="agentId", required=true)
      private final Output<String> agentId;

    public Output<String> getAgentId() {
        return this.agentId;
    }

    /**
     * Indicates whether the webhook is disabled.
     * 
     */
    @Import(name="disabled")
      private final @Nullable Output<Boolean> disabled;

    public Output<Boolean> getDisabled() {
        return this.disabled == null ? Output.empty() : this.disabled;
    }

    /**
     * The human-readable name of the webhook, unique within the agent.
     * 
     */
    @Import(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName;
    }

    /**
     * Configuration for a generic web service.
     * 
     */
    @Import(name="genericWebService")
      private final @Nullable Output<GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs> genericWebService;

    public Output<GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs> getGenericWebService() {
        return this.genericWebService == null ? Output.empty() : this.genericWebService;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
     * 
     */
    @Import(name="serviceDirectory")
      private final @Nullable Output<GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs> serviceDirectory;

    public Output<GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs> getServiceDirectory() {
        return this.serviceDirectory == null ? Output.empty() : this.serviceDirectory;
    }

    /**
     * Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
     * 
     */
    @Import(name="timeout")
      private final @Nullable Output<String> timeout;

    public Output<String> getTimeout() {
        return this.timeout == null ? Output.empty() : this.timeout;
    }

    public WebhookArgs(
        Output<String> agentId,
        @Nullable Output<Boolean> disabled,
        Output<String> displayName,
        @Nullable Output<GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs> genericWebService,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs> serviceDirectory,
        @Nullable Output<String> timeout) {
        this.agentId = Objects.requireNonNull(agentId, "expected parameter 'agentId' to be non-null");
        this.disabled = disabled;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.genericWebService = genericWebService;
        this.location = location;
        this.name = name;
        this.project = project;
        this.serviceDirectory = serviceDirectory;
        this.timeout = timeout;
    }

    private WebhookArgs() {
        this.agentId = Output.empty();
        this.disabled = Output.empty();
        this.displayName = Output.empty();
        this.genericWebService = Output.empty();
        this.location = Output.empty();
        this.name = Output.empty();
        this.project = Output.empty();
        this.serviceDirectory = Output.empty();
        this.timeout = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WebhookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> agentId;
        private @Nullable Output<Boolean> disabled;
        private Output<String> displayName;
        private @Nullable Output<GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs> genericWebService;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs> serviceDirectory;
        private @Nullable Output<String> timeout;

        public Builder() {
    	      // Empty
        }

        public Builder(WebhookArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentId = defaults.agentId;
    	      this.disabled = defaults.disabled;
    	      this.displayName = defaults.displayName;
    	      this.genericWebService = defaults.genericWebService;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.serviceDirectory = defaults.serviceDirectory;
    	      this.timeout = defaults.timeout;
        }

        public Builder agentId(Output<String> agentId) {
            this.agentId = Objects.requireNonNull(agentId);
            return this;
        }
        public Builder agentId(String agentId) {
            this.agentId = Output.of(Objects.requireNonNull(agentId));
            return this;
        }
        public Builder disabled(@Nullable Output<Boolean> disabled) {
            this.disabled = disabled;
            return this;
        }
        public Builder disabled(@Nullable Boolean disabled) {
            this.disabled = Output.ofNullable(disabled);
            return this;
        }
        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }
        public Builder genericWebService(@Nullable Output<GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs> genericWebService) {
            this.genericWebService = genericWebService;
            return this;
        }
        public Builder genericWebService(@Nullable GoogleCloudDialogflowCxV3WebhookGenericWebServiceArgs genericWebService) {
            this.genericWebService = Output.ofNullable(genericWebService);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }
        public Builder serviceDirectory(@Nullable Output<GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs> serviceDirectory) {
            this.serviceDirectory = serviceDirectory;
            return this;
        }
        public Builder serviceDirectory(@Nullable GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfigArgs serviceDirectory) {
            this.serviceDirectory = Output.ofNullable(serviceDirectory);
            return this;
        }
        public Builder timeout(@Nullable Output<String> timeout) {
            this.timeout = timeout;
            return this;
        }
        public Builder timeout(@Nullable String timeout) {
            this.timeout = Output.ofNullable(timeout);
            return this;
        }        public WebhookArgs build() {
            return new WebhookArgs(agentId, disabled, displayName, genericWebService, location, name, project, serviceDirectory, timeout);
        }
    }
}
