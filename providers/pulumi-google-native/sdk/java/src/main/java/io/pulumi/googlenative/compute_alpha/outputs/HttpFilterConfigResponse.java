// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class HttpFilterConfigResponse {
    private final String config;
    private final String configTypeUrl;
    private final String filterName;

    @OutputCustomType.Constructor({"config","configTypeUrl","filterName"})
    private HttpFilterConfigResponse(
        String config,
        String configTypeUrl,
        String filterName) {
        this.config = Objects.requireNonNull(config);
        this.configTypeUrl = Objects.requireNonNull(configTypeUrl);
        this.filterName = Objects.requireNonNull(filterName);
    }

    public String getConfig() {
        return this.config;
    }
    public String getConfigTypeUrl() {
        return this.configTypeUrl;
    }
    public String getFilterName() {
        return this.filterName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpFilterConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String config;
        private String configTypeUrl;
        private String filterName;

        public Builder() {
    	      // Empty
        }

        public Builder(HttpFilterConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.configTypeUrl = defaults.configTypeUrl;
    	      this.filterName = defaults.filterName;
        }

        public Builder setConfig(String config) {
            this.config = Objects.requireNonNull(config);
            return this;
        }

        public Builder setConfigTypeUrl(String configTypeUrl) {
            this.configTypeUrl = Objects.requireNonNull(configTypeUrl);
            return this;
        }

        public Builder setFilterName(String filterName) {
            this.filterName = Objects.requireNonNull(filterName);
            return this;
        }

        public HttpFilterConfigResponse build() {
            return new HttpFilterConfigResponse(config, configTypeUrl, filterName);
        }
    }
}
