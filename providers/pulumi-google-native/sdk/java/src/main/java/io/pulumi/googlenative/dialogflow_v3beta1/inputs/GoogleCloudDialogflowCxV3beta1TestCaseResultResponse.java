// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v3beta1.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1ConversationTurnResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Represents a result from running a test case in an agent environment.
 * 
 */
public final class GoogleCloudDialogflowCxV3beta1TestCaseResultResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDialogflowCxV3beta1TestCaseResultResponse Empty = new GoogleCloudDialogflowCxV3beta1TestCaseResultResponse();

    /**
     * The conversation turns uttered during the test case replay in chronological order.
     * 
     */
    @Import(name="conversationTurns", required=true)
      private final List<GoogleCloudDialogflowCxV3beta1ConversationTurnResponse> conversationTurns;

    public List<GoogleCloudDialogflowCxV3beta1ConversationTurnResponse> getConversationTurns() {
        return this.conversationTurns;
    }

    /**
     * Environment where the test was run. If not set, it indicates the draft environment.
     * 
     */
    @Import(name="environment", required=true)
      private final String environment;

    public String getEnvironment() {
        return this.environment;
    }

    /**
     * The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`.
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * Whether the test case passed in the agent environment.
     * 
     */
    @Import(name="testResult", required=true)
      private final String testResult;

    public String getTestResult() {
        return this.testResult;
    }

    /**
     * The time that the test was run.
     * 
     */
    @Import(name="testTime", required=true)
      private final String testTime;

    public String getTestTime() {
        return this.testTime;
    }

    public GoogleCloudDialogflowCxV3beta1TestCaseResultResponse(
        List<GoogleCloudDialogflowCxV3beta1ConversationTurnResponse> conversationTurns,
        String environment,
        String name,
        String testResult,
        String testTime) {
        this.conversationTurns = Objects.requireNonNull(conversationTurns, "expected parameter 'conversationTurns' to be non-null");
        this.environment = Objects.requireNonNull(environment, "expected parameter 'environment' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.testResult = Objects.requireNonNull(testResult, "expected parameter 'testResult' to be non-null");
        this.testTime = Objects.requireNonNull(testTime, "expected parameter 'testTime' to be non-null");
    }

    private GoogleCloudDialogflowCxV3beta1TestCaseResultResponse() {
        this.conversationTurns = List.of();
        this.environment = null;
        this.name = null;
        this.testResult = null;
        this.testTime = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDialogflowCxV3beta1TestCaseResultResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GoogleCloudDialogflowCxV3beta1ConversationTurnResponse> conversationTurns;
        private String environment;
        private String name;
        private String testResult;
        private String testTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDialogflowCxV3beta1TestCaseResultResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conversationTurns = defaults.conversationTurns;
    	      this.environment = defaults.environment;
    	      this.name = defaults.name;
    	      this.testResult = defaults.testResult;
    	      this.testTime = defaults.testTime;
        }

        public Builder conversationTurns(List<GoogleCloudDialogflowCxV3beta1ConversationTurnResponse> conversationTurns) {
            this.conversationTurns = Objects.requireNonNull(conversationTurns);
            return this;
        }
        public Builder conversationTurns(GoogleCloudDialogflowCxV3beta1ConversationTurnResponse... conversationTurns) {
            return conversationTurns(List.of(conversationTurns));
        }
        public Builder environment(String environment) {
            this.environment = Objects.requireNonNull(environment);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder testResult(String testResult) {
            this.testResult = Objects.requireNonNull(testResult);
            return this;
        }
        public Builder testTime(String testTime) {
            this.testTime = Objects.requireNonNull(testTime);
            return this;
        }        public GoogleCloudDialogflowCxV3beta1TestCaseResultResponse build() {
            return new GoogleCloudDialogflowCxV3beta1TestCaseResultResponse(conversationTurns, environment, name, testResult, testTime);
        }
    }
}
