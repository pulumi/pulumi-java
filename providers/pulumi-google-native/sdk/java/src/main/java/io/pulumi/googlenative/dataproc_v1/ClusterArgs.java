// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataproc_v1;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dataproc_v1.inputs.ClusterConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    @InputImport(name="actionOnFailedPrimaryWorkers")
      private final @Nullable Input<String> actionOnFailedPrimaryWorkers;

    public Input<String> getActionOnFailedPrimaryWorkers() {
        return this.actionOnFailedPrimaryWorkers == null ? Input.empty() : this.actionOnFailedPrimaryWorkers;
    }

    /**
     * The cluster name. Cluster names within a project must be unique. Names of deleted clusters can be reused.
     * 
     */
    @InputImport(name="clusterName", required=true)
      private final Input<String> clusterName;

    public Input<String> getClusterName() {
        return this.clusterName;
    }

    /**
     * Optional. The cluster config for a cluster of Compute Engine Instances. Note that Dataproc may set default values, and values may change when clusters are updated.
     * 
     */
    @InputImport(name="config")
      private final @Nullable Input<ClusterConfigArgs> config;

    public Input<ClusterConfigArgs> getConfig() {
        return this.config == null ? Input.empty() : this.config;
    }

    /**
     * Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
     * 
     */
    @InputImport(name="labels")
      private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    /**
     * The Google Cloud Platform project ID that the cluster belongs to.
     * 
     */
    @InputImport(name="project")
      private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="region", required=true)
      private final Input<String> region;

    public Input<String> getRegion() {
        return this.region;
    }

    @InputImport(name="requestId")
      private final @Nullable Input<String> requestId;

    public Input<String> getRequestId() {
        return this.requestId == null ? Input.empty() : this.requestId;
    }

    public ClusterArgs(
        @Nullable Input<String> actionOnFailedPrimaryWorkers,
        Input<String> clusterName,
        @Nullable Input<ClusterConfigArgs> config,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> project,
        Input<String> region,
        @Nullable Input<String> requestId) {
        this.actionOnFailedPrimaryWorkers = actionOnFailedPrimaryWorkers;
        this.clusterName = Objects.requireNonNull(clusterName, "expected parameter 'clusterName' to be non-null");
        this.config = config;
        this.labels = labels;
        this.project = project;
        this.region = Objects.requireNonNull(region, "expected parameter 'region' to be non-null");
        this.requestId = requestId;
    }

    private ClusterArgs() {
        this.actionOnFailedPrimaryWorkers = Input.empty();
        this.clusterName = Input.empty();
        this.config = Input.empty();
        this.labels = Input.empty();
        this.project = Input.empty();
        this.region = Input.empty();
        this.requestId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> actionOnFailedPrimaryWorkers;
        private Input<String> clusterName;
        private @Nullable Input<ClusterConfigArgs> config;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> project;
        private Input<String> region;
        private @Nullable Input<String> requestId;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actionOnFailedPrimaryWorkers = defaults.actionOnFailedPrimaryWorkers;
    	      this.clusterName = defaults.clusterName;
    	      this.config = defaults.config;
    	      this.labels = defaults.labels;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.requestId = defaults.requestId;
        }

        public Builder actionOnFailedPrimaryWorkers(@Nullable Input<String> actionOnFailedPrimaryWorkers) {
            this.actionOnFailedPrimaryWorkers = actionOnFailedPrimaryWorkers;
            return this;
        }

        public Builder actionOnFailedPrimaryWorkers(@Nullable String actionOnFailedPrimaryWorkers) {
            this.actionOnFailedPrimaryWorkers = Input.ofNullable(actionOnFailedPrimaryWorkers);
            return this;
        }

        public Builder clusterName(Input<String> clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }

        public Builder clusterName(String clusterName) {
            this.clusterName = Input.of(Objects.requireNonNull(clusterName));
            return this;
        }

        public Builder config(@Nullable Input<ClusterConfigArgs> config) {
            this.config = config;
            return this;
        }

        public Builder config(@Nullable ClusterConfigArgs config) {
            this.config = Input.ofNullable(config);
            return this;
        }

        public Builder labels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder project(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder region(Input<String> region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }

        public Builder region(String region) {
            this.region = Input.of(Objects.requireNonNull(region));
            return this;
        }

        public Builder requestId(@Nullable Input<String> requestId) {
            this.requestId = requestId;
            return this;
        }

        public Builder requestId(@Nullable String requestId) {
            this.requestId = Input.ofNullable(requestId);
            return this;
        }
        public ClusterArgs build() {
            return new ClusterArgs(actionOnFailedPrimaryWorkers, clusterName, config, labels, project, region, requestId);
        }
    }
}
