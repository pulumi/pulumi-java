// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudbuild_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class BitbucketServerRepositoryIdResponse {
    private final String projectKey;
    private final String repoSlug;
    private final Integer webhookId;

    @OutputCustomType.Constructor({"projectKey","repoSlug","webhookId"})
    private BitbucketServerRepositoryIdResponse(
        String projectKey,
        String repoSlug,
        Integer webhookId) {
        this.projectKey = Objects.requireNonNull(projectKey);
        this.repoSlug = Objects.requireNonNull(repoSlug);
        this.webhookId = Objects.requireNonNull(webhookId);
    }

    public String getProjectKey() {
        return this.projectKey;
    }
    public String getRepoSlug() {
        return this.repoSlug;
    }
    public Integer getWebhookId() {
        return this.webhookId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BitbucketServerRepositoryIdResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String projectKey;
        private String repoSlug;
        private Integer webhookId;

        public Builder() {
    	      // Empty
        }

        public Builder(BitbucketServerRepositoryIdResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.projectKey = defaults.projectKey;
    	      this.repoSlug = defaults.repoSlug;
    	      this.webhookId = defaults.webhookId;
        }

        public Builder setProjectKey(String projectKey) {
            this.projectKey = Objects.requireNonNull(projectKey);
            return this;
        }

        public Builder setRepoSlug(String repoSlug) {
            this.repoSlug = Objects.requireNonNull(repoSlug);
            return this;
        }

        public Builder setWebhookId(Integer webhookId) {
            this.webhookId = Objects.requireNonNull(webhookId);
            return this;
        }

        public BitbucketServerRepositoryIdResponse build() {
            return new BitbucketServerRepositoryIdResponse(projectKey, repoSlug, webhookId);
        }
    }
}
