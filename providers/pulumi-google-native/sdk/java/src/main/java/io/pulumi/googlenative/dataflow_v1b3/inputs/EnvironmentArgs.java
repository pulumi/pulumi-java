// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataflow_v1b3.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.dataflow_v1b3.enums.EnvironmentFlexResourceSchedulingGoal;
import io.pulumi.googlenative.dataflow_v1b3.inputs.DebugOptionsArgs;
import io.pulumi.googlenative.dataflow_v1b3.inputs.WorkerPoolArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Describes the environment in which a Dataflow Job runs.
 * 
 */
public final class EnvironmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final EnvironmentArgs Empty = new EnvironmentArgs();

    /**
     * The type of cluster manager API to use. If unknown or unspecified, the service will attempt to choose a reasonable default. This should be in the form of the API service name, e.g. "compute.googleapis.com".
     * 
     */
    @Import(name="clusterManagerApiService")
      private final @Nullable Output<String> clusterManagerApiService;

    public Output<String> getClusterManagerApiService() {
        return this.clusterManagerApiService == null ? Output.empty() : this.clusterManagerApiService;
    }

    /**
     * The dataset for the current project where various workflow related tables are stored. The supported resource type is: Google BigQuery: bigquery.googleapis.com/{dataset}
     * 
     */
    @Import(name="dataset")
      private final @Nullable Output<String> dataset;

    public Output<String> getDataset() {
        return this.dataset == null ? Output.empty() : this.dataset;
    }

    /**
     * Any debugging options to be supplied to the job.
     * 
     */
    @Import(name="debugOptions")
      private final @Nullable Output<DebugOptionsArgs> debugOptions;

    public Output<DebugOptionsArgs> getDebugOptions() {
        return this.debugOptions == null ? Output.empty() : this.debugOptions;
    }

    /**
     * The list of experiments to enable. This field should be used for SDK related experiments and not for service related experiments. The proper field for service related experiments is service_options.
     * 
     */
    @Import(name="experiments")
      private final @Nullable Output<List<String>> experiments;

    public Output<List<String>> getExperiments() {
        return this.experiments == null ? Output.empty() : this.experiments;
    }

    /**
     * Which Flexible Resource Scheduling mode to run in.
     * 
     */
    @Import(name="flexResourceSchedulingGoal")
      private final @Nullable Output<EnvironmentFlexResourceSchedulingGoal> flexResourceSchedulingGoal;

    public Output<EnvironmentFlexResourceSchedulingGoal> getFlexResourceSchedulingGoal() {
        return this.flexResourceSchedulingGoal == null ? Output.empty() : this.flexResourceSchedulingGoal;
    }

    /**
     * Experimental settings.
     * 
     */
    @Import(name="internalExperiments")
      private final @Nullable Output<Map<String,String>> internalExperiments;

    public Output<Map<String,String>> getInternalExperiments() {
        return this.internalExperiments == null ? Output.empty() : this.internalExperiments;
    }

    /**
     * The Cloud Dataflow SDK pipeline options specified by the user. These options are passed through the service and are used to recreate the SDK pipeline options on the worker in a language agnostic and platform independent way.
     * 
     */
    @Import(name="sdkPipelineOptions")
      private final @Nullable Output<Map<String,String>> sdkPipelineOptions;

    public Output<Map<String,String>> getSdkPipelineOptions() {
        return this.sdkPipelineOptions == null ? Output.empty() : this.sdkPipelineOptions;
    }

    /**
     * Identity to run virtual machines as. Defaults to the default account.
     * 
     */
    @Import(name="serviceAccountEmail")
      private final @Nullable Output<String> serviceAccountEmail;

    public Output<String> getServiceAccountEmail() {
        return this.serviceAccountEmail == null ? Output.empty() : this.serviceAccountEmail;
    }

    /**
     * If set, contains the Cloud KMS key identifier used to encrypt data at rest, AKA a Customer Managed Encryption Key (CMEK). Format: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY
     * 
     */
    @Import(name="serviceKmsKeyName")
      private final @Nullable Output<String> serviceKmsKeyName;

    public Output<String> getServiceKmsKeyName() {
        return this.serviceKmsKeyName == null ? Output.empty() : this.serviceKmsKeyName;
    }

    /**
     * The list of service options to enable. This field should be used for service related experiments only. These experiments, when graduating to GA, should be replaced by dedicated fields or become default (i.e. always on).
     * 
     */
    @Import(name="serviceOptions")
      private final @Nullable Output<List<String>> serviceOptions;

    public Output<List<String>> getServiceOptions() {
        return this.serviceOptions == null ? Output.empty() : this.serviceOptions;
    }

    /**
     * The prefix of the resources the system should use for temporary storage. The system will append the suffix "/temp-{JOBNAME} to this resource prefix, where {JOBNAME} is the value of the job_name field. The resulting bucket and object prefix is used as the prefix of the resources used to store temporary data needed during the job execution. NOTE: This will override the value in taskrunner_settings. The supported resource type is: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     * 
     */
    @Import(name="tempStoragePrefix")
      private final @Nullable Output<String> tempStoragePrefix;

    public Output<String> getTempStoragePrefix() {
        return this.tempStoragePrefix == null ? Output.empty() : this.tempStoragePrefix;
    }

    /**
     * A description of the process that generated the request.
     * 
     */
    @Import(name="userAgent")
      private final @Nullable Output<Map<String,String>> userAgent;

    public Output<Map<String,String>> getUserAgent() {
        return this.userAgent == null ? Output.empty() : this.userAgent;
    }

    /**
     * A structure describing which components and their versions of the service are required in order to run the job.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<Map<String,String>> version;

    public Output<Map<String,String>> getVersion() {
        return this.version == null ? Output.empty() : this.version;
    }

    /**
     * The worker pools. At least one "harness" worker pool must be specified in order for the job to have workers.
     * 
     */
    @Import(name="workerPools")
      private final @Nullable Output<List<WorkerPoolArgs>> workerPools;

    public Output<List<WorkerPoolArgs>> getWorkerPools() {
        return this.workerPools == null ? Output.empty() : this.workerPools;
    }

    /**
     * The Compute Engine region (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1". Mutually exclusive with worker_zone. If neither worker_region nor worker_zone is specified, default to the control plane's region.
     * 
     */
    @Import(name="workerRegion")
      private final @Nullable Output<String> workerRegion;

    public Output<String> getWorkerRegion() {
        return this.workerRegion == null ? Output.empty() : this.workerRegion;
    }

    /**
     * The Compute Engine zone (https://cloud.google.com/compute/docs/regions-zones/regions-zones) in which worker processing should occur, e.g. "us-west1-a". Mutually exclusive with worker_region. If neither worker_region nor worker_zone is specified, a zone in the control plane's region is chosen based on available capacity.
     * 
     */
    @Import(name="workerZone")
      private final @Nullable Output<String> workerZone;

    public Output<String> getWorkerZone() {
        return this.workerZone == null ? Output.empty() : this.workerZone;
    }

    public EnvironmentArgs(
        @Nullable Output<String> clusterManagerApiService,
        @Nullable Output<String> dataset,
        @Nullable Output<DebugOptionsArgs> debugOptions,
        @Nullable Output<List<String>> experiments,
        @Nullable Output<EnvironmentFlexResourceSchedulingGoal> flexResourceSchedulingGoal,
        @Nullable Output<Map<String,String>> internalExperiments,
        @Nullable Output<Map<String,String>> sdkPipelineOptions,
        @Nullable Output<String> serviceAccountEmail,
        @Nullable Output<String> serviceKmsKeyName,
        @Nullable Output<List<String>> serviceOptions,
        @Nullable Output<String> tempStoragePrefix,
        @Nullable Output<Map<String,String>> userAgent,
        @Nullable Output<Map<String,String>> version,
        @Nullable Output<List<WorkerPoolArgs>> workerPools,
        @Nullable Output<String> workerRegion,
        @Nullable Output<String> workerZone) {
        this.clusterManagerApiService = clusterManagerApiService;
        this.dataset = dataset;
        this.debugOptions = debugOptions;
        this.experiments = experiments;
        this.flexResourceSchedulingGoal = flexResourceSchedulingGoal;
        this.internalExperiments = internalExperiments;
        this.sdkPipelineOptions = sdkPipelineOptions;
        this.serviceAccountEmail = serviceAccountEmail;
        this.serviceKmsKeyName = serviceKmsKeyName;
        this.serviceOptions = serviceOptions;
        this.tempStoragePrefix = tempStoragePrefix;
        this.userAgent = userAgent;
        this.version = version;
        this.workerPools = workerPools;
        this.workerRegion = workerRegion;
        this.workerZone = workerZone;
    }

    private EnvironmentArgs() {
        this.clusterManagerApiService = Output.empty();
        this.dataset = Output.empty();
        this.debugOptions = Output.empty();
        this.experiments = Output.empty();
        this.flexResourceSchedulingGoal = Output.empty();
        this.internalExperiments = Output.empty();
        this.sdkPipelineOptions = Output.empty();
        this.serviceAccountEmail = Output.empty();
        this.serviceKmsKeyName = Output.empty();
        this.serviceOptions = Output.empty();
        this.tempStoragePrefix = Output.empty();
        this.userAgent = Output.empty();
        this.version = Output.empty();
        this.workerPools = Output.empty();
        this.workerRegion = Output.empty();
        this.workerZone = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> clusterManagerApiService;
        private @Nullable Output<String> dataset;
        private @Nullable Output<DebugOptionsArgs> debugOptions;
        private @Nullable Output<List<String>> experiments;
        private @Nullable Output<EnvironmentFlexResourceSchedulingGoal> flexResourceSchedulingGoal;
        private @Nullable Output<Map<String,String>> internalExperiments;
        private @Nullable Output<Map<String,String>> sdkPipelineOptions;
        private @Nullable Output<String> serviceAccountEmail;
        private @Nullable Output<String> serviceKmsKeyName;
        private @Nullable Output<List<String>> serviceOptions;
        private @Nullable Output<String> tempStoragePrefix;
        private @Nullable Output<Map<String,String>> userAgent;
        private @Nullable Output<Map<String,String>> version;
        private @Nullable Output<List<WorkerPoolArgs>> workerPools;
        private @Nullable Output<String> workerRegion;
        private @Nullable Output<String> workerZone;

        public Builder() {
    	      // Empty
        }

        public Builder(EnvironmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterManagerApiService = defaults.clusterManagerApiService;
    	      this.dataset = defaults.dataset;
    	      this.debugOptions = defaults.debugOptions;
    	      this.experiments = defaults.experiments;
    	      this.flexResourceSchedulingGoal = defaults.flexResourceSchedulingGoal;
    	      this.internalExperiments = defaults.internalExperiments;
    	      this.sdkPipelineOptions = defaults.sdkPipelineOptions;
    	      this.serviceAccountEmail = defaults.serviceAccountEmail;
    	      this.serviceKmsKeyName = defaults.serviceKmsKeyName;
    	      this.serviceOptions = defaults.serviceOptions;
    	      this.tempStoragePrefix = defaults.tempStoragePrefix;
    	      this.userAgent = defaults.userAgent;
    	      this.version = defaults.version;
    	      this.workerPools = defaults.workerPools;
    	      this.workerRegion = defaults.workerRegion;
    	      this.workerZone = defaults.workerZone;
        }

        public Builder clusterManagerApiService(@Nullable Output<String> clusterManagerApiService) {
            this.clusterManagerApiService = clusterManagerApiService;
            return this;
        }

        public Builder clusterManagerApiService(@Nullable String clusterManagerApiService) {
            this.clusterManagerApiService = Output.ofNullable(clusterManagerApiService);
            return this;
        }

        public Builder dataset(@Nullable Output<String> dataset) {
            this.dataset = dataset;
            return this;
        }

        public Builder dataset(@Nullable String dataset) {
            this.dataset = Output.ofNullable(dataset);
            return this;
        }

        public Builder debugOptions(@Nullable Output<DebugOptionsArgs> debugOptions) {
            this.debugOptions = debugOptions;
            return this;
        }

        public Builder debugOptions(@Nullable DebugOptionsArgs debugOptions) {
            this.debugOptions = Output.ofNullable(debugOptions);
            return this;
        }

        public Builder experiments(@Nullable Output<List<String>> experiments) {
            this.experiments = experiments;
            return this;
        }

        public Builder experiments(@Nullable List<String> experiments) {
            this.experiments = Output.ofNullable(experiments);
            return this;
        }

        public Builder flexResourceSchedulingGoal(@Nullable Output<EnvironmentFlexResourceSchedulingGoal> flexResourceSchedulingGoal) {
            this.flexResourceSchedulingGoal = flexResourceSchedulingGoal;
            return this;
        }

        public Builder flexResourceSchedulingGoal(@Nullable EnvironmentFlexResourceSchedulingGoal flexResourceSchedulingGoal) {
            this.flexResourceSchedulingGoal = Output.ofNullable(flexResourceSchedulingGoal);
            return this;
        }

        public Builder internalExperiments(@Nullable Output<Map<String,String>> internalExperiments) {
            this.internalExperiments = internalExperiments;
            return this;
        }

        public Builder internalExperiments(@Nullable Map<String,String> internalExperiments) {
            this.internalExperiments = Output.ofNullable(internalExperiments);
            return this;
        }

        public Builder sdkPipelineOptions(@Nullable Output<Map<String,String>> sdkPipelineOptions) {
            this.sdkPipelineOptions = sdkPipelineOptions;
            return this;
        }

        public Builder sdkPipelineOptions(@Nullable Map<String,String> sdkPipelineOptions) {
            this.sdkPipelineOptions = Output.ofNullable(sdkPipelineOptions);
            return this;
        }

        public Builder serviceAccountEmail(@Nullable Output<String> serviceAccountEmail) {
            this.serviceAccountEmail = serviceAccountEmail;
            return this;
        }

        public Builder serviceAccountEmail(@Nullable String serviceAccountEmail) {
            this.serviceAccountEmail = Output.ofNullable(serviceAccountEmail);
            return this;
        }

        public Builder serviceKmsKeyName(@Nullable Output<String> serviceKmsKeyName) {
            this.serviceKmsKeyName = serviceKmsKeyName;
            return this;
        }

        public Builder serviceKmsKeyName(@Nullable String serviceKmsKeyName) {
            this.serviceKmsKeyName = Output.ofNullable(serviceKmsKeyName);
            return this;
        }

        public Builder serviceOptions(@Nullable Output<List<String>> serviceOptions) {
            this.serviceOptions = serviceOptions;
            return this;
        }

        public Builder serviceOptions(@Nullable List<String> serviceOptions) {
            this.serviceOptions = Output.ofNullable(serviceOptions);
            return this;
        }

        public Builder tempStoragePrefix(@Nullable Output<String> tempStoragePrefix) {
            this.tempStoragePrefix = tempStoragePrefix;
            return this;
        }

        public Builder tempStoragePrefix(@Nullable String tempStoragePrefix) {
            this.tempStoragePrefix = Output.ofNullable(tempStoragePrefix);
            return this;
        }

        public Builder userAgent(@Nullable Output<Map<String,String>> userAgent) {
            this.userAgent = userAgent;
            return this;
        }

        public Builder userAgent(@Nullable Map<String,String> userAgent) {
            this.userAgent = Output.ofNullable(userAgent);
            return this;
        }

        public Builder version(@Nullable Output<Map<String,String>> version) {
            this.version = version;
            return this;
        }

        public Builder version(@Nullable Map<String,String> version) {
            this.version = Output.ofNullable(version);
            return this;
        }

        public Builder workerPools(@Nullable Output<List<WorkerPoolArgs>> workerPools) {
            this.workerPools = workerPools;
            return this;
        }

        public Builder workerPools(@Nullable List<WorkerPoolArgs> workerPools) {
            this.workerPools = Output.ofNullable(workerPools);
            return this;
        }

        public Builder workerRegion(@Nullable Output<String> workerRegion) {
            this.workerRegion = workerRegion;
            return this;
        }

        public Builder workerRegion(@Nullable String workerRegion) {
            this.workerRegion = Output.ofNullable(workerRegion);
            return this;
        }

        public Builder workerZone(@Nullable Output<String> workerZone) {
            this.workerZone = workerZone;
            return this;
        }

        public Builder workerZone(@Nullable String workerZone) {
            this.workerZone = Output.ofNullable(workerZone);
            return this;
        }
        public EnvironmentArgs build() {
            return new EnvironmentArgs(clusterManagerApiService, dataset, debugOptions, experiments, flexResourceSchedulingGoal, internalExperiments, sdkPipelineOptions, serviceAccountEmail, serviceKmsKeyName, serviceOptions, tempStoragePrefix, userAgent, version, workerPools, workerRegion, workerZone);
        }
    }
}
