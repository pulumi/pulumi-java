// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.compute_alpha.inputs.InterconnectMacsecPreSharedKeyResponse;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;


/**
 * Configuration information for enabling Media Access Control security (Macsec) on this Interconnect between Google and your on-premises router.
 * 
 */
public final class InterconnectMacsecResponse extends io.pulumi.resources.InvokeArgs {

    public static final InterconnectMacsecResponse Empty = new InterconnectMacsecResponse();

    /**
     * If set to true, the Interconnect will be configured with a should-secure MACsec security policy, that allows the Google router to fallback to cleartext traffic if the MKA session cannot be established. By default, the Interconnect will be configured with a must-secure security policy that drops all traffic if the MKA session cannot be established with your router.
     * 
     */
    @Import(name="failOpen", required=true)
      private final Boolean failOpen;

    public Boolean failOpen() {
        return this.failOpen;
    }

    /**
     * A keychain placeholder describing a set of named key objects along with their start times. A MACsec CKN/CAK will be generated for each key in the key chain. Google router will automatically pick the key with the most recent startTime when establishing or re-establishing a MACsec secure link.
     * 
     */
    @Import(name="preSharedKeys", required=true)
      private final List<InterconnectMacsecPreSharedKeyResponse> preSharedKeys;

    public List<InterconnectMacsecPreSharedKeyResponse> preSharedKeys() {
        return this.preSharedKeys;
    }

    public InterconnectMacsecResponse(
        Boolean failOpen,
        List<InterconnectMacsecPreSharedKeyResponse> preSharedKeys) {
        this.failOpen = Objects.requireNonNull(failOpen, "expected parameter 'failOpen' to be non-null");
        this.preSharedKeys = Objects.requireNonNull(preSharedKeys, "expected parameter 'preSharedKeys' to be non-null");
    }

    private InterconnectMacsecResponse() {
        this.failOpen = null;
        this.preSharedKeys = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InterconnectMacsecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean failOpen;
        private List<InterconnectMacsecPreSharedKeyResponse> preSharedKeys;

        public Builder() {
    	      // Empty
        }

        public Builder(InterconnectMacsecResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failOpen = defaults.failOpen;
    	      this.preSharedKeys = defaults.preSharedKeys;
        }

        public Builder failOpen(Boolean failOpen) {
            this.failOpen = Objects.requireNonNull(failOpen);
            return this;
        }
        public Builder preSharedKeys(List<InterconnectMacsecPreSharedKeyResponse> preSharedKeys) {
            this.preSharedKeys = Objects.requireNonNull(preSharedKeys);
            return this;
        }
        public Builder preSharedKeys(InterconnectMacsecPreSharedKeyResponse... preSharedKeys) {
            return preSharedKeys(List.of(preSharedKeys));
        }        public InterconnectMacsecResponse build() {
            return new InterconnectMacsecResponse(failOpen, preSharedKeys);
        }
    }
}
