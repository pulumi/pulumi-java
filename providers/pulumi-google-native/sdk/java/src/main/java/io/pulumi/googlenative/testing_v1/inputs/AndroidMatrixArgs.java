// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * A set of Android device configuration permutations is defined by the the cross-product of the given axes. Internally, the given AndroidMatrix will be expanded into a set of AndroidDevices. Only supported permutations will be instantiated. Invalid permutations (e.g., incompatible models/versions) are ignored.
 * 
 */
public final class AndroidMatrixArgs extends io.pulumi.resources.ResourceArgs {

    public static final AndroidMatrixArgs Empty = new AndroidMatrixArgs();

    /**
     * The ids of the set of Android device to be used. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    @InputImport(name="androidModelIds", required=true)
    private final Input<List<String>> androidModelIds;

    public Input<List<String>> getAndroidModelIds() {
        return this.androidModelIds;
    }

    /**
     * The ids of the set of Android OS version to be used. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    @InputImport(name="androidVersionIds", required=true)
    private final Input<List<String>> androidVersionIds;

    public Input<List<String>> getAndroidVersionIds() {
        return this.androidVersionIds;
    }

    /**
     * The set of locales the test device will enable for testing. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    @InputImport(name="locales", required=true)
    private final Input<List<String>> locales;

    public Input<List<String>> getLocales() {
        return this.locales;
    }

    /**
     * The set of orientations to test with. Use the TestEnvironmentDiscoveryService to get supported options.
     * 
     */
    @InputImport(name="orientations", required=true)
    private final Input<List<String>> orientations;

    public Input<List<String>> getOrientations() {
        return this.orientations;
    }

    public AndroidMatrixArgs(
        Input<List<String>> androidModelIds,
        Input<List<String>> androidVersionIds,
        Input<List<String>> locales,
        Input<List<String>> orientations) {
        this.androidModelIds = Objects.requireNonNull(androidModelIds, "expected parameter 'androidModelIds' to be non-null");
        this.androidVersionIds = Objects.requireNonNull(androidVersionIds, "expected parameter 'androidVersionIds' to be non-null");
        this.locales = Objects.requireNonNull(locales, "expected parameter 'locales' to be non-null");
        this.orientations = Objects.requireNonNull(orientations, "expected parameter 'orientations' to be non-null");
    }

    private AndroidMatrixArgs() {
        this.androidModelIds = Input.empty();
        this.androidVersionIds = Input.empty();
        this.locales = Input.empty();
        this.orientations = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AndroidMatrixArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<String>> androidModelIds;
        private Input<List<String>> androidVersionIds;
        private Input<List<String>> locales;
        private Input<List<String>> orientations;

        public Builder() {
    	      // Empty
        }

        public Builder(AndroidMatrixArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.androidModelIds = defaults.androidModelIds;
    	      this.androidVersionIds = defaults.androidVersionIds;
    	      this.locales = defaults.locales;
    	      this.orientations = defaults.orientations;
        }

        public Builder setAndroidModelIds(Input<List<String>> androidModelIds) {
            this.androidModelIds = Objects.requireNonNull(androidModelIds);
            return this;
        }

        public Builder setAndroidModelIds(List<String> androidModelIds) {
            this.androidModelIds = Input.of(Objects.requireNonNull(androidModelIds));
            return this;
        }

        public Builder setAndroidVersionIds(Input<List<String>> androidVersionIds) {
            this.androidVersionIds = Objects.requireNonNull(androidVersionIds);
            return this;
        }

        public Builder setAndroidVersionIds(List<String> androidVersionIds) {
            this.androidVersionIds = Input.of(Objects.requireNonNull(androidVersionIds));
            return this;
        }

        public Builder setLocales(Input<List<String>> locales) {
            this.locales = Objects.requireNonNull(locales);
            return this;
        }

        public Builder setLocales(List<String> locales) {
            this.locales = Input.of(Objects.requireNonNull(locales));
            return this;
        }

        public Builder setOrientations(Input<List<String>> orientations) {
            this.orientations = Objects.requireNonNull(orientations);
            return this;
        }

        public Builder setOrientations(List<String> orientations) {
            this.orientations = Input.of(Objects.requireNonNull(orientations));
            return this;
        }

        public AndroidMatrixArgs build() {
            return new AndroidMatrixArgs(androidModelIds, androidVersionIds, locales, orientations);
        }
    }
}
