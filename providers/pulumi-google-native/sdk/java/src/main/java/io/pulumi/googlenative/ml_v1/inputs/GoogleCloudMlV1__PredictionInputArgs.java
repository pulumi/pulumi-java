// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.ml_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.ml_v1.enums.GoogleCloudMlV1__PredictionInputDataFormat;
import io.pulumi.googlenative.ml_v1.enums.GoogleCloudMlV1__PredictionInputOutputDataFormat;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Represents input parameters for a prediction job.
 * 
 */
public final class GoogleCloudMlV1__PredictionInputArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudMlV1__PredictionInputArgs Empty = new GoogleCloudMlV1__PredictionInputArgs();

    /**
     * Optional. Number of records per batch, defaults to 64. The service will buffer batch_size number of records in memory before invoking one Tensorflow prediction call internally. So take the record size and memory available into consideration when setting this parameter.
     * 
     */
    @InputImport(name="batchSize")
      private final @Nullable Input<String> batchSize;

    public Input<String> getBatchSize() {
        return this.batchSize == null ? Input.empty() : this.batchSize;
    }

    /**
     * The format of the input data files.
     * 
     */
    @InputImport(name="dataFormat", required=true)
      private final Input<GoogleCloudMlV1__PredictionInputDataFormat> dataFormat;

    public Input<GoogleCloudMlV1__PredictionInputDataFormat> getDataFormat() {
        return this.dataFormat;
    }

    /**
     * The Cloud Storage location of the input data files. May contain wildcards.
     * 
     */
    @InputImport(name="inputPaths", required=true)
      private final Input<List<String>> inputPaths;

    public Input<List<String>> getInputPaths() {
        return this.inputPaths;
    }

    /**
     * Optional. The maximum number of workers to be used for parallel processing. Defaults to 10 if not specified.
     * 
     */
    @InputImport(name="maxWorkerCount")
      private final @Nullable Input<String> maxWorkerCount;

    public Input<String> getMaxWorkerCount() {
        return this.maxWorkerCount == null ? Input.empty() : this.maxWorkerCount;
    }

    /**
     * Use this field if you want to use the default version for the specified model. The string must use the following format: `"projects/YOUR_PROJECT/models/YOUR_MODEL"`
     * 
     */
    @InputImport(name="modelName")
      private final @Nullable Input<String> modelName;

    public Input<String> getModelName() {
        return this.modelName == null ? Input.empty() : this.modelName;
    }

    /**
     * Optional. Format of the output data files, defaults to JSON.
     * 
     */
    @InputImport(name="outputDataFormat")
      private final @Nullable Input<GoogleCloudMlV1__PredictionInputOutputDataFormat> outputDataFormat;

    public Input<GoogleCloudMlV1__PredictionInputOutputDataFormat> getOutputDataFormat() {
        return this.outputDataFormat == null ? Input.empty() : this.outputDataFormat;
    }

    /**
     * The output Google Cloud Storage location.
     * 
     */
    @InputImport(name="outputPath", required=true)
      private final Input<String> outputPath;

    public Input<String> getOutputPath() {
        return this.outputPath;
    }

    /**
     * The Google Compute Engine region to run the prediction job in. See the available regions for AI Platform services.
     * 
     */
    @InputImport(name="region", required=true)
      private final Input<String> region;

    public Input<String> getRegion() {
        return this.region;
    }

    /**
     * Optional. The AI Platform runtime version to use for this batch prediction. If not set, AI Platform will pick the runtime version used during the CreateVersion request for this model version, or choose the latest stable version when model version information is not available such as when the model is specified by uri.
     * 
     */
    @InputImport(name="runtimeVersion")
      private final @Nullable Input<String> runtimeVersion;

    public Input<String> getRuntimeVersion() {
        return this.runtimeVersion == null ? Input.empty() : this.runtimeVersion;
    }

    /**
     * Optional. The name of the signature defined in the SavedModel to use for this job. Please refer to [SavedModel](https://tensorflow.github.io/serving/serving_basic.html) for information about how to use signatures. Defaults to [DEFAULT_SERVING_SIGNATURE_DEF_KEY](https://www.tensorflow.org/api_docs/python/tf/saved_model/signature_constants) , which is "serving_default".
     * 
     */
    @InputImport(name="signatureName")
      private final @Nullable Input<String> signatureName;

    public Input<String> getSignatureName() {
        return this.signatureName == null ? Input.empty() : this.signatureName;
    }

    /**
     * Use this field if you want to specify a Google Cloud Storage path for the model to use.
     * 
     */
    @InputImport(name="uri")
      private final @Nullable Input<String> uri;

    public Input<String> getUri() {
        return this.uri == null ? Input.empty() : this.uri;
    }

    /**
     * Use this field if you want to specify a version of the model to use. The string is formatted the same way as `model_version`, with the addition of the version information: `"projects/YOUR_PROJECT/models/YOUR_MODEL/versions/YOUR_VERSION"`
     * 
     */
    @InputImport(name="versionName")
      private final @Nullable Input<String> versionName;

    public Input<String> getVersionName() {
        return this.versionName == null ? Input.empty() : this.versionName;
    }

    public GoogleCloudMlV1__PredictionInputArgs(
        @Nullable Input<String> batchSize,
        Input<GoogleCloudMlV1__PredictionInputDataFormat> dataFormat,
        Input<List<String>> inputPaths,
        @Nullable Input<String> maxWorkerCount,
        @Nullable Input<String> modelName,
        @Nullable Input<GoogleCloudMlV1__PredictionInputOutputDataFormat> outputDataFormat,
        Input<String> outputPath,
        Input<String> region,
        @Nullable Input<String> runtimeVersion,
        @Nullable Input<String> signatureName,
        @Nullable Input<String> uri,
        @Nullable Input<String> versionName) {
        this.batchSize = batchSize;
        this.dataFormat = Objects.requireNonNull(dataFormat, "expected parameter 'dataFormat' to be non-null");
        this.inputPaths = Objects.requireNonNull(inputPaths, "expected parameter 'inputPaths' to be non-null");
        this.maxWorkerCount = maxWorkerCount;
        this.modelName = modelName;
        this.outputDataFormat = outputDataFormat;
        this.outputPath = Objects.requireNonNull(outputPath, "expected parameter 'outputPath' to be non-null");
        this.region = Objects.requireNonNull(region, "expected parameter 'region' to be non-null");
        this.runtimeVersion = runtimeVersion;
        this.signatureName = signatureName;
        this.uri = uri;
        this.versionName = versionName;
    }

    private GoogleCloudMlV1__PredictionInputArgs() {
        this.batchSize = Input.empty();
        this.dataFormat = Input.empty();
        this.inputPaths = Input.empty();
        this.maxWorkerCount = Input.empty();
        this.modelName = Input.empty();
        this.outputDataFormat = Input.empty();
        this.outputPath = Input.empty();
        this.region = Input.empty();
        this.runtimeVersion = Input.empty();
        this.signatureName = Input.empty();
        this.uri = Input.empty();
        this.versionName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudMlV1__PredictionInputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> batchSize;
        private Input<GoogleCloudMlV1__PredictionInputDataFormat> dataFormat;
        private Input<List<String>> inputPaths;
        private @Nullable Input<String> maxWorkerCount;
        private @Nullable Input<String> modelName;
        private @Nullable Input<GoogleCloudMlV1__PredictionInputOutputDataFormat> outputDataFormat;
        private Input<String> outputPath;
        private Input<String> region;
        private @Nullable Input<String> runtimeVersion;
        private @Nullable Input<String> signatureName;
        private @Nullable Input<String> uri;
        private @Nullable Input<String> versionName;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudMlV1__PredictionInputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.batchSize = defaults.batchSize;
    	      this.dataFormat = defaults.dataFormat;
    	      this.inputPaths = defaults.inputPaths;
    	      this.maxWorkerCount = defaults.maxWorkerCount;
    	      this.modelName = defaults.modelName;
    	      this.outputDataFormat = defaults.outputDataFormat;
    	      this.outputPath = defaults.outputPath;
    	      this.region = defaults.region;
    	      this.runtimeVersion = defaults.runtimeVersion;
    	      this.signatureName = defaults.signatureName;
    	      this.uri = defaults.uri;
    	      this.versionName = defaults.versionName;
        }

        public Builder batchSize(@Nullable Input<String> batchSize) {
            this.batchSize = batchSize;
            return this;
        }

        public Builder batchSize(@Nullable String batchSize) {
            this.batchSize = Input.ofNullable(batchSize);
            return this;
        }

        public Builder dataFormat(Input<GoogleCloudMlV1__PredictionInputDataFormat> dataFormat) {
            this.dataFormat = Objects.requireNonNull(dataFormat);
            return this;
        }

        public Builder dataFormat(GoogleCloudMlV1__PredictionInputDataFormat dataFormat) {
            this.dataFormat = Input.of(Objects.requireNonNull(dataFormat));
            return this;
        }

        public Builder inputPaths(Input<List<String>> inputPaths) {
            this.inputPaths = Objects.requireNonNull(inputPaths);
            return this;
        }

        public Builder inputPaths(List<String> inputPaths) {
            this.inputPaths = Input.of(Objects.requireNonNull(inputPaths));
            return this;
        }

        public Builder maxWorkerCount(@Nullable Input<String> maxWorkerCount) {
            this.maxWorkerCount = maxWorkerCount;
            return this;
        }

        public Builder maxWorkerCount(@Nullable String maxWorkerCount) {
            this.maxWorkerCount = Input.ofNullable(maxWorkerCount);
            return this;
        }

        public Builder modelName(@Nullable Input<String> modelName) {
            this.modelName = modelName;
            return this;
        }

        public Builder modelName(@Nullable String modelName) {
            this.modelName = Input.ofNullable(modelName);
            return this;
        }

        public Builder outputDataFormat(@Nullable Input<GoogleCloudMlV1__PredictionInputOutputDataFormat> outputDataFormat) {
            this.outputDataFormat = outputDataFormat;
            return this;
        }

        public Builder outputDataFormat(@Nullable GoogleCloudMlV1__PredictionInputOutputDataFormat outputDataFormat) {
            this.outputDataFormat = Input.ofNullable(outputDataFormat);
            return this;
        }

        public Builder outputPath(Input<String> outputPath) {
            this.outputPath = Objects.requireNonNull(outputPath);
            return this;
        }

        public Builder outputPath(String outputPath) {
            this.outputPath = Input.of(Objects.requireNonNull(outputPath));
            return this;
        }

        public Builder region(Input<String> region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }

        public Builder region(String region) {
            this.region = Input.of(Objects.requireNonNull(region));
            return this;
        }

        public Builder runtimeVersion(@Nullable Input<String> runtimeVersion) {
            this.runtimeVersion = runtimeVersion;
            return this;
        }

        public Builder runtimeVersion(@Nullable String runtimeVersion) {
            this.runtimeVersion = Input.ofNullable(runtimeVersion);
            return this;
        }

        public Builder signatureName(@Nullable Input<String> signatureName) {
            this.signatureName = signatureName;
            return this;
        }

        public Builder signatureName(@Nullable String signatureName) {
            this.signatureName = Input.ofNullable(signatureName);
            return this;
        }

        public Builder uri(@Nullable Input<String> uri) {
            this.uri = uri;
            return this;
        }

        public Builder uri(@Nullable String uri) {
            this.uri = Input.ofNullable(uri);
            return this;
        }

        public Builder versionName(@Nullable Input<String> versionName) {
            this.versionName = versionName;
            return this;
        }

        public Builder versionName(@Nullable String versionName) {
            this.versionName = Input.ofNullable(versionName);
            return this;
        }
        public GoogleCloudMlV1__PredictionInputArgs build() {
            return new GoogleCloudMlV1__PredictionInputArgs(batchSize, dataFormat, inputPaths, maxWorkerCount, modelName, outputDataFormat, outputPath, region, runtimeVersion, signatureName, uri, versionName);
        }
    }
}
