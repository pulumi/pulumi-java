// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v2;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ContextArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContextArgs Empty = new ContextArgs();

    @InputImport(name="environmentId", required=true)
    private final Input<String> environmentId;

    public Input<String> getEnvironmentId() {
        return this.environmentId;
    }

    @InputImport(name="lifespanCount")
    private final @Nullable Input<Integer> lifespanCount;

    public Input<Integer> getLifespanCount() {
        return this.lifespanCount == null ? Input.empty() : this.lifespanCount;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    @InputImport(name="parameters")
    private final @Nullable Input<Map<String,String>> parameters;

    public Input<Map<String,String>> getParameters() {
        return this.parameters == null ? Input.empty() : this.parameters;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="sessionId", required=true)
    private final Input<String> sessionId;

    public Input<String> getSessionId() {
        return this.sessionId;
    }

    @InputImport(name="userId", required=true)
    private final Input<String> userId;

    public Input<String> getUserId() {
        return this.userId;
    }

    public ContextArgs(
        Input<String> environmentId,
        @Nullable Input<Integer> lifespanCount,
        @Nullable Input<String> location,
        Input<String> name,
        @Nullable Input<Map<String,String>> parameters,
        @Nullable Input<String> project,
        Input<String> sessionId,
        Input<String> userId) {
        this.environmentId = Objects.requireNonNull(environmentId, "expected parameter 'environmentId' to be non-null");
        this.lifespanCount = lifespanCount;
        this.location = location;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.parameters = parameters;
        this.project = project;
        this.sessionId = Objects.requireNonNull(sessionId, "expected parameter 'sessionId' to be non-null");
        this.userId = Objects.requireNonNull(userId, "expected parameter 'userId' to be non-null");
    }

    private ContextArgs() {
        this.environmentId = Input.empty();
        this.lifespanCount = Input.empty();
        this.location = Input.empty();
        this.name = Input.empty();
        this.parameters = Input.empty();
        this.project = Input.empty();
        this.sessionId = Input.empty();
        this.userId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> environmentId;
        private @Nullable Input<Integer> lifespanCount;
        private @Nullable Input<String> location;
        private Input<String> name;
        private @Nullable Input<Map<String,String>> parameters;
        private @Nullable Input<String> project;
        private Input<String> sessionId;
        private Input<String> userId;

        public Builder() {
    	      // Empty
        }

        public Builder(ContextArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environmentId = defaults.environmentId;
    	      this.lifespanCount = defaults.lifespanCount;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.parameters = defaults.parameters;
    	      this.project = defaults.project;
    	      this.sessionId = defaults.sessionId;
    	      this.userId = defaults.userId;
        }

        public Builder setEnvironmentId(Input<String> environmentId) {
            this.environmentId = Objects.requireNonNull(environmentId);
            return this;
        }

        public Builder setEnvironmentId(String environmentId) {
            this.environmentId = Input.of(Objects.requireNonNull(environmentId));
            return this;
        }

        public Builder setLifespanCount(@Nullable Input<Integer> lifespanCount) {
            this.lifespanCount = lifespanCount;
            return this;
        }

        public Builder setLifespanCount(@Nullable Integer lifespanCount) {
            this.lifespanCount = Input.ofNullable(lifespanCount);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setParameters(@Nullable Input<Map<String,String>> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setParameters(@Nullable Map<String,String> parameters) {
            this.parameters = Input.ofNullable(parameters);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setSessionId(Input<String> sessionId) {
            this.sessionId = Objects.requireNonNull(sessionId);
            return this;
        }

        public Builder setSessionId(String sessionId) {
            this.sessionId = Input.of(Objects.requireNonNull(sessionId));
            return this;
        }

        public Builder setUserId(Input<String> userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }

        public Builder setUserId(String userId) {
            this.userId = Input.of(Objects.requireNonNull(userId));
            return this;
        }

        public ContextArgs build() {
            return new ContextArgs(environmentId, lifespanCount, location, name, parameters, project, sessionId, userId);
        }
    }
}
