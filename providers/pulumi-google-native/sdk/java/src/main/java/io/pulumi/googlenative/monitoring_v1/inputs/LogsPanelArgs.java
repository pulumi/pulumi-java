// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A widget that displays a stream of log.
 * 
 */
public final class LogsPanelArgs extends io.pulumi.resources.ResourceArgs {

    public static final LogsPanelArgs Empty = new LogsPanelArgs();

    /**
     * A filter that chooses which log entries to return. See Advanced Logs Queries (https://cloud.google.com/logging/docs/view/advanced-queries). Only log entries that match the filter are returned. An empty filter matches all log entries.
     * 
     */
    @Import(name="filter")
      private final @Nullable Output<String> filter;

    public Output<String> getFilter() {
        return this.filter == null ? Codegen.empty() : this.filter;
    }

    /**
     * The names of logging resources to collect logs for. Currently only projects are supported. If empty, the widget will default to the host project.
     * 
     */
    @Import(name="resourceNames")
      private final @Nullable Output<List<String>> resourceNames;

    public Output<List<String>> getResourceNames() {
        return this.resourceNames == null ? Codegen.empty() : this.resourceNames;
    }

    public LogsPanelArgs(
        @Nullable Output<String> filter,
        @Nullable Output<List<String>> resourceNames) {
        this.filter = filter;
        this.resourceNames = resourceNames;
    }

    private LogsPanelArgs() {
        this.filter = Codegen.empty();
        this.resourceNames = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogsPanelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> filter;
        private @Nullable Output<List<String>> resourceNames;

        public Builder() {
    	      // Empty
        }

        public Builder(LogsPanelArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.resourceNames = defaults.resourceNames;
        }

        public Builder filter(@Nullable Output<String> filter) {
            this.filter = filter;
            return this;
        }
        public Builder filter(@Nullable String filter) {
            this.filter = Codegen.ofNullable(filter);
            return this;
        }
        public Builder resourceNames(@Nullable Output<List<String>> resourceNames) {
            this.resourceNames = resourceNames;
            return this;
        }
        public Builder resourceNames(@Nullable List<String> resourceNames) {
            this.resourceNames = Codegen.ofNullable(resourceNames);
            return this;
        }
        public Builder resourceNames(String... resourceNames) {
            return resourceNames(List.of(resourceNames));
        }        public LogsPanelArgs build() {
            return new LogsPanelArgs(filter, resourceNames);
        }
    }
}
