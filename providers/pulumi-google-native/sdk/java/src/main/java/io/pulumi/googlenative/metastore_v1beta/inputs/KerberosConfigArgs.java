// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.metastore_v1beta.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.metastore_v1beta.inputs.SecretArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Configuration information for a Kerberos principal.
 * 
 */
public final class KerberosConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final KerberosConfigArgs Empty = new KerberosConfigArgs();

    /**
     * A Kerberos keytab file that can be used to authenticate a service principal with a Kerberos Key Distribution Center (KDC).
     * 
     */
    @InputImport(name="keytab")
      private final @Nullable Output<SecretArgs> keytab;

    public Output<SecretArgs> getKeytab() {
        return this.keytab == null ? Output.empty() : this.keytab;
    }

    /**
     * A Cloud Storage URI that specifies the path to a krb5.conf file. It is of the form gs://{bucket_name}/path/to/krb5.conf, although the file does not need to be named krb5.conf explicitly.
     * 
     */
    @InputImport(name="krb5ConfigGcsUri")
      private final @Nullable Output<String> krb5ConfigGcsUri;

    public Output<String> getKrb5ConfigGcsUri() {
        return this.krb5ConfigGcsUri == null ? Output.empty() : this.krb5ConfigGcsUri;
    }

    /**
     * A Kerberos principal that exists in the both the keytab the KDC to authenticate as. A typical principal is of the form primary/instance@REALM, but there is no exact format.
     * 
     */
    @InputImport(name="principal")
      private final @Nullable Output<String> principal;

    public Output<String> getPrincipal() {
        return this.principal == null ? Output.empty() : this.principal;
    }

    public KerberosConfigArgs(
        @Nullable Output<SecretArgs> keytab,
        @Nullable Output<String> krb5ConfigGcsUri,
        @Nullable Output<String> principal) {
        this.keytab = keytab;
        this.krb5ConfigGcsUri = krb5ConfigGcsUri;
        this.principal = principal;
    }

    private KerberosConfigArgs() {
        this.keytab = Output.empty();
        this.krb5ConfigGcsUri = Output.empty();
        this.principal = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KerberosConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SecretArgs> keytab;
        private @Nullable Output<String> krb5ConfigGcsUri;
        private @Nullable Output<String> principal;

        public Builder() {
    	      // Empty
        }

        public Builder(KerberosConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keytab = defaults.keytab;
    	      this.krb5ConfigGcsUri = defaults.krb5ConfigGcsUri;
    	      this.principal = defaults.principal;
        }

        public Builder keytab(@Nullable Output<SecretArgs> keytab) {
            this.keytab = keytab;
            return this;
        }

        public Builder keytab(@Nullable SecretArgs keytab) {
            this.keytab = Output.ofNullable(keytab);
            return this;
        }

        public Builder krb5ConfigGcsUri(@Nullable Output<String> krb5ConfigGcsUri) {
            this.krb5ConfigGcsUri = krb5ConfigGcsUri;
            return this;
        }

        public Builder krb5ConfigGcsUri(@Nullable String krb5ConfigGcsUri) {
            this.krb5ConfigGcsUri = Output.ofNullable(krb5ConfigGcsUri);
            return this;
        }

        public Builder principal(@Nullable Output<String> principal) {
            this.principal = principal;
            return this;
        }

        public Builder principal(@Nullable String principal) {
            this.principal = Output.ofNullable(principal);
            return this;
        }
        public KerberosConfigArgs build() {
            return new KerberosConfigArgs(keytab, krb5ConfigGcsUri, principal);
        }
    }
}
