// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataproc_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class SoftwareConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final SoftwareConfigResponse Empty = new SoftwareConfigResponse();

    @InputImport(name="imageVersion", required=true)
    private final String imageVersion;

    public String getImageVersion() {
        return this.imageVersion;
    }

    @InputImport(name="optionalComponents", required=true)
    private final List<String> optionalComponents;

    public List<String> getOptionalComponents() {
        return this.optionalComponents;
    }

    @InputImport(name="properties", required=true)
    private final Map<String,String> properties;

    public Map<String,String> getProperties() {
        return this.properties;
    }

    public SoftwareConfigResponse(
        String imageVersion,
        List<String> optionalComponents,
        Map<String,String> properties) {
        this.imageVersion = Objects.requireNonNull(imageVersion, "expected parameter 'imageVersion' to be non-null");
        this.optionalComponents = Objects.requireNonNull(optionalComponents, "expected parameter 'optionalComponents' to be non-null");
        this.properties = Objects.requireNonNull(properties, "expected parameter 'properties' to be non-null");
    }

    private SoftwareConfigResponse() {
        this.imageVersion = null;
        this.optionalComponents = List.of();
        this.properties = Map.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SoftwareConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String imageVersion;
        private List<String> optionalComponents;
        private Map<String,String> properties;

        public Builder() {
    	      // Empty
        }

        public Builder(SoftwareConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.imageVersion = defaults.imageVersion;
    	      this.optionalComponents = defaults.optionalComponents;
    	      this.properties = defaults.properties;
        }

        public Builder setImageVersion(String imageVersion) {
            this.imageVersion = Objects.requireNonNull(imageVersion);
            return this;
        }

        public Builder setOptionalComponents(List<String> optionalComponents) {
            this.optionalComponents = Objects.requireNonNull(optionalComponents);
            return this;
        }

        public Builder setProperties(Map<String,String> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }

        public SoftwareConfigResponse build() {
            return new SoftwareConfigResponse(imageVersion, optionalComponents, properties);
        }
    }
}
