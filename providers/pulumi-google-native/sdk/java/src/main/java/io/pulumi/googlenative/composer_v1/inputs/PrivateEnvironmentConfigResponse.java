// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.composer_v1.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.composer_v1.inputs.PrivateClusterConfigResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * The configuration information for configuring a Private IP Cloud Composer environment.
 * 
 */
public final class PrivateEnvironmentConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final PrivateEnvironmentConfigResponse Empty = new PrivateEnvironmentConfigResponse();

    /**
     * Optional. The CIDR block from which IP range for Cloud Composer Network in tenant project will be reserved. Needs to be disjoint from private_cluster_config.master_ipv4_cidr_block and cloud_sql_ipv4_cidr_block. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     * 
     */
    @Import(name="cloudComposerNetworkIpv4CidrBlock", required=true)
      private final String cloudComposerNetworkIpv4CidrBlock;

    public String cloudComposerNetworkIpv4CidrBlock() {
        return this.cloudComposerNetworkIpv4CidrBlock;
    }

    /**
     * The IP range reserved for the tenant project's Cloud Composer network. This field is supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.* and newer.
     * 
     */
    @Import(name="cloudComposerNetworkIpv4ReservedRange", required=true)
      private final String cloudComposerNetworkIpv4ReservedRange;

    public String cloudComposerNetworkIpv4ReservedRange() {
        return this.cloudComposerNetworkIpv4ReservedRange;
    }

    /**
     * Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from `web_server_ipv4_cidr_block`.
     * 
     */
    @Import(name="cloudSqlIpv4CidrBlock", required=true)
      private final String cloudSqlIpv4CidrBlock;

    public String cloudSqlIpv4CidrBlock() {
        return this.cloudSqlIpv4CidrBlock;
    }

    /**
     * Optional. If `true`, a Private IP Cloud Composer environment is created. If this field is set to true, `IPAllocationPolicy.use_ip_aliases` must be set to true for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    @Import(name="enablePrivateEnvironment", required=true)
      private final Boolean enablePrivateEnvironment;

    public Boolean enablePrivateEnvironment() {
        return this.enablePrivateEnvironment;
    }

    /**
     * Optional. Configuration for the private GKE cluster for a Private IP Cloud Composer environment.
     * 
     */
    @Import(name="privateClusterConfig", required=true)
      private final PrivateClusterConfigResponse privateClusterConfig;

    public PrivateClusterConfigResponse privateClusterConfig() {
        return this.privateClusterConfig;
    }

    /**
     * Optional. The CIDR block from which IP range for web server will be reserved. Needs to be disjoint from `private_cluster_config.master_ipv4_cidr_block` and `cloud_sql_ipv4_cidr_block`. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    @Import(name="webServerIpv4CidrBlock", required=true)
      private final String webServerIpv4CidrBlock;

    public String webServerIpv4CidrBlock() {
        return this.webServerIpv4CidrBlock;
    }

    /**
     * The IP range reserved for the tenant project's App Engine VMs. This field is supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.
     * 
     */
    @Import(name="webServerIpv4ReservedRange", required=true)
      private final String webServerIpv4ReservedRange;

    public String webServerIpv4ReservedRange() {
        return this.webServerIpv4ReservedRange;
    }

    public PrivateEnvironmentConfigResponse(
        String cloudComposerNetworkIpv4CidrBlock,
        String cloudComposerNetworkIpv4ReservedRange,
        String cloudSqlIpv4CidrBlock,
        Boolean enablePrivateEnvironment,
        PrivateClusterConfigResponse privateClusterConfig,
        String webServerIpv4CidrBlock,
        String webServerIpv4ReservedRange) {
        this.cloudComposerNetworkIpv4CidrBlock = Objects.requireNonNull(cloudComposerNetworkIpv4CidrBlock, "expected parameter 'cloudComposerNetworkIpv4CidrBlock' to be non-null");
        this.cloudComposerNetworkIpv4ReservedRange = Objects.requireNonNull(cloudComposerNetworkIpv4ReservedRange, "expected parameter 'cloudComposerNetworkIpv4ReservedRange' to be non-null");
        this.cloudSqlIpv4CidrBlock = Objects.requireNonNull(cloudSqlIpv4CidrBlock, "expected parameter 'cloudSqlIpv4CidrBlock' to be non-null");
        this.enablePrivateEnvironment = Objects.requireNonNull(enablePrivateEnvironment, "expected parameter 'enablePrivateEnvironment' to be non-null");
        this.privateClusterConfig = Objects.requireNonNull(privateClusterConfig, "expected parameter 'privateClusterConfig' to be non-null");
        this.webServerIpv4CidrBlock = Objects.requireNonNull(webServerIpv4CidrBlock, "expected parameter 'webServerIpv4CidrBlock' to be non-null");
        this.webServerIpv4ReservedRange = Objects.requireNonNull(webServerIpv4ReservedRange, "expected parameter 'webServerIpv4ReservedRange' to be non-null");
    }

    private PrivateEnvironmentConfigResponse() {
        this.cloudComposerNetworkIpv4CidrBlock = null;
        this.cloudComposerNetworkIpv4ReservedRange = null;
        this.cloudSqlIpv4CidrBlock = null;
        this.enablePrivateEnvironment = null;
        this.privateClusterConfig = null;
        this.webServerIpv4CidrBlock = null;
        this.webServerIpv4ReservedRange = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivateEnvironmentConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cloudComposerNetworkIpv4CidrBlock;
        private String cloudComposerNetworkIpv4ReservedRange;
        private String cloudSqlIpv4CidrBlock;
        private Boolean enablePrivateEnvironment;
        private PrivateClusterConfigResponse privateClusterConfig;
        private String webServerIpv4CidrBlock;
        private String webServerIpv4ReservedRange;

        public Builder() {
    	      // Empty
        }

        public Builder(PrivateEnvironmentConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudComposerNetworkIpv4CidrBlock = defaults.cloudComposerNetworkIpv4CidrBlock;
    	      this.cloudComposerNetworkIpv4ReservedRange = defaults.cloudComposerNetworkIpv4ReservedRange;
    	      this.cloudSqlIpv4CidrBlock = defaults.cloudSqlIpv4CidrBlock;
    	      this.enablePrivateEnvironment = defaults.enablePrivateEnvironment;
    	      this.privateClusterConfig = defaults.privateClusterConfig;
    	      this.webServerIpv4CidrBlock = defaults.webServerIpv4CidrBlock;
    	      this.webServerIpv4ReservedRange = defaults.webServerIpv4ReservedRange;
        }

        public Builder cloudComposerNetworkIpv4CidrBlock(String cloudComposerNetworkIpv4CidrBlock) {
            this.cloudComposerNetworkIpv4CidrBlock = Objects.requireNonNull(cloudComposerNetworkIpv4CidrBlock);
            return this;
        }
        public Builder cloudComposerNetworkIpv4ReservedRange(String cloudComposerNetworkIpv4ReservedRange) {
            this.cloudComposerNetworkIpv4ReservedRange = Objects.requireNonNull(cloudComposerNetworkIpv4ReservedRange);
            return this;
        }
        public Builder cloudSqlIpv4CidrBlock(String cloudSqlIpv4CidrBlock) {
            this.cloudSqlIpv4CidrBlock = Objects.requireNonNull(cloudSqlIpv4CidrBlock);
            return this;
        }
        public Builder enablePrivateEnvironment(Boolean enablePrivateEnvironment) {
            this.enablePrivateEnvironment = Objects.requireNonNull(enablePrivateEnvironment);
            return this;
        }
        public Builder privateClusterConfig(PrivateClusterConfigResponse privateClusterConfig) {
            this.privateClusterConfig = Objects.requireNonNull(privateClusterConfig);
            return this;
        }
        public Builder webServerIpv4CidrBlock(String webServerIpv4CidrBlock) {
            this.webServerIpv4CidrBlock = Objects.requireNonNull(webServerIpv4CidrBlock);
            return this;
        }
        public Builder webServerIpv4ReservedRange(String webServerIpv4ReservedRange) {
            this.webServerIpv4ReservedRange = Objects.requireNonNull(webServerIpv4ReservedRange);
            return this;
        }        public PrivateEnvironmentConfigResponse build() {
            return new PrivateEnvironmentConfigResponse(cloudComposerNetworkIpv4CidrBlock, cloudComposerNetworkIpv4ReservedRange, cloudSqlIpv4CidrBlock, enablePrivateEnvironment, privateClusterConfig, webServerIpv4CidrBlock, webServerIpv4ReservedRange);
        }
    }
}
