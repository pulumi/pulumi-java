// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.pubsub_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.pubsub_v1.outputs.DeadLetterPolicyResponse;
import io.pulumi.googlenative.pubsub_v1.outputs.ExpirationPolicyResponse;
import io.pulumi.googlenative.pubsub_v1.outputs.PushConfigResponse;
import io.pulumi.googlenative.pubsub_v1.outputs.RetryPolicyResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetSubscriptionResult {
    private final Integer ackDeadlineSeconds;
    private final DeadLetterPolicyResponse deadLetterPolicy;
    private final Boolean detached;
    private final Boolean enableMessageOrdering;
    private final ExpirationPolicyResponse expirationPolicy;
    private final String filter;
    private final Map<String,String> labels;
    private final String messageRetentionDuration;
    private final String name;
    private final PushConfigResponse pushConfig;
    private final Boolean retainAckedMessages;
    private final RetryPolicyResponse retryPolicy;
    private final String state;
    private final String topic;
    private final String topicMessageRetentionDuration;

    @OutputCustomType.Constructor({"ackDeadlineSeconds","deadLetterPolicy","detached","enableMessageOrdering","expirationPolicy","filter","labels","messageRetentionDuration","name","pushConfig","retainAckedMessages","retryPolicy","state","topic","topicMessageRetentionDuration"})
    private GetSubscriptionResult(
        Integer ackDeadlineSeconds,
        DeadLetterPolicyResponse deadLetterPolicy,
        Boolean detached,
        Boolean enableMessageOrdering,
        ExpirationPolicyResponse expirationPolicy,
        String filter,
        Map<String,String> labels,
        String messageRetentionDuration,
        String name,
        PushConfigResponse pushConfig,
        Boolean retainAckedMessages,
        RetryPolicyResponse retryPolicy,
        String state,
        String topic,
        String topicMessageRetentionDuration) {
        this.ackDeadlineSeconds = Objects.requireNonNull(ackDeadlineSeconds);
        this.deadLetterPolicy = Objects.requireNonNull(deadLetterPolicy);
        this.detached = Objects.requireNonNull(detached);
        this.enableMessageOrdering = Objects.requireNonNull(enableMessageOrdering);
        this.expirationPolicy = Objects.requireNonNull(expirationPolicy);
        this.filter = Objects.requireNonNull(filter);
        this.labels = Objects.requireNonNull(labels);
        this.messageRetentionDuration = Objects.requireNonNull(messageRetentionDuration);
        this.name = Objects.requireNonNull(name);
        this.pushConfig = Objects.requireNonNull(pushConfig);
        this.retainAckedMessages = Objects.requireNonNull(retainAckedMessages);
        this.retryPolicy = Objects.requireNonNull(retryPolicy);
        this.state = Objects.requireNonNull(state);
        this.topic = Objects.requireNonNull(topic);
        this.topicMessageRetentionDuration = Objects.requireNonNull(topicMessageRetentionDuration);
    }

    public Integer getAckDeadlineSeconds() {
        return this.ackDeadlineSeconds;
    }
    public DeadLetterPolicyResponse getDeadLetterPolicy() {
        return this.deadLetterPolicy;
    }
    public Boolean getDetached() {
        return this.detached;
    }
    public Boolean getEnableMessageOrdering() {
        return this.enableMessageOrdering;
    }
    public ExpirationPolicyResponse getExpirationPolicy() {
        return this.expirationPolicy;
    }
    public String getFilter() {
        return this.filter;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public String getMessageRetentionDuration() {
        return this.messageRetentionDuration;
    }
    public String getName() {
        return this.name;
    }
    public PushConfigResponse getPushConfig() {
        return this.pushConfig;
    }
    public Boolean getRetainAckedMessages() {
        return this.retainAckedMessages;
    }
    public RetryPolicyResponse getRetryPolicy() {
        return this.retryPolicy;
    }
    public String getState() {
        return this.state;
    }
    public String getTopic() {
        return this.topic;
    }
    public String getTopicMessageRetentionDuration() {
        return this.topicMessageRetentionDuration;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer ackDeadlineSeconds;
        private DeadLetterPolicyResponse deadLetterPolicy;
        private Boolean detached;
        private Boolean enableMessageOrdering;
        private ExpirationPolicyResponse expirationPolicy;
        private String filter;
        private Map<String,String> labels;
        private String messageRetentionDuration;
        private String name;
        private PushConfigResponse pushConfig;
        private Boolean retainAckedMessages;
        private RetryPolicyResponse retryPolicy;
        private String state;
        private String topic;
        private String topicMessageRetentionDuration;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSubscriptionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ackDeadlineSeconds = defaults.ackDeadlineSeconds;
    	      this.deadLetterPolicy = defaults.deadLetterPolicy;
    	      this.detached = defaults.detached;
    	      this.enableMessageOrdering = defaults.enableMessageOrdering;
    	      this.expirationPolicy = defaults.expirationPolicy;
    	      this.filter = defaults.filter;
    	      this.labels = defaults.labels;
    	      this.messageRetentionDuration = defaults.messageRetentionDuration;
    	      this.name = defaults.name;
    	      this.pushConfig = defaults.pushConfig;
    	      this.retainAckedMessages = defaults.retainAckedMessages;
    	      this.retryPolicy = defaults.retryPolicy;
    	      this.state = defaults.state;
    	      this.topic = defaults.topic;
    	      this.topicMessageRetentionDuration = defaults.topicMessageRetentionDuration;
        }

        public Builder setAckDeadlineSeconds(Integer ackDeadlineSeconds) {
            this.ackDeadlineSeconds = Objects.requireNonNull(ackDeadlineSeconds);
            return this;
        }

        public Builder setDeadLetterPolicy(DeadLetterPolicyResponse deadLetterPolicy) {
            this.deadLetterPolicy = Objects.requireNonNull(deadLetterPolicy);
            return this;
        }

        public Builder setDetached(Boolean detached) {
            this.detached = Objects.requireNonNull(detached);
            return this;
        }

        public Builder setEnableMessageOrdering(Boolean enableMessageOrdering) {
            this.enableMessageOrdering = Objects.requireNonNull(enableMessageOrdering);
            return this;
        }

        public Builder setExpirationPolicy(ExpirationPolicyResponse expirationPolicy) {
            this.expirationPolicy = Objects.requireNonNull(expirationPolicy);
            return this;
        }

        public Builder setFilter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setMessageRetentionDuration(String messageRetentionDuration) {
            this.messageRetentionDuration = Objects.requireNonNull(messageRetentionDuration);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPushConfig(PushConfigResponse pushConfig) {
            this.pushConfig = Objects.requireNonNull(pushConfig);
            return this;
        }

        public Builder setRetainAckedMessages(Boolean retainAckedMessages) {
            this.retainAckedMessages = Objects.requireNonNull(retainAckedMessages);
            return this;
        }

        public Builder setRetryPolicy(RetryPolicyResponse retryPolicy) {
            this.retryPolicy = Objects.requireNonNull(retryPolicy);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setTopic(String topic) {
            this.topic = Objects.requireNonNull(topic);
            return this;
        }

        public Builder setTopicMessageRetentionDuration(String topicMessageRetentionDuration) {
            this.topicMessageRetentionDuration = Objects.requireNonNull(topicMessageRetentionDuration);
            return this;
        }

        public GetSubscriptionResult build() {
            return new GetSubscriptionResult(ackDeadlineSeconds, deadLetterPolicy, detached, enableMessageOrdering, expirationPolicy, filter, labels, messageRetentionDuration, name, pushConfig, retainAckedMessages, retryPolicy, state, topic, topicMessageRetentionDuration);
        }
    }
}
