// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v3.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.monitoring_v3.outputs.AggregationResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.TriggerResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class MetricAbsenceResponse {
    private final List<AggregationResponse> aggregations;
    private final String duration;
    private final String filter;
    private final TriggerResponse trigger;

    @OutputCustomType.Constructor({"aggregations","duration","filter","trigger"})
    private MetricAbsenceResponse(
        List<AggregationResponse> aggregations,
        String duration,
        String filter,
        TriggerResponse trigger) {
        this.aggregations = Objects.requireNonNull(aggregations);
        this.duration = Objects.requireNonNull(duration);
        this.filter = Objects.requireNonNull(filter);
        this.trigger = Objects.requireNonNull(trigger);
    }

    public List<AggregationResponse> getAggregations() {
        return this.aggregations;
    }
    public String getDuration() {
        return this.duration;
    }
    public String getFilter() {
        return this.filter;
    }
    public TriggerResponse getTrigger() {
        return this.trigger;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricAbsenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<AggregationResponse> aggregations;
        private String duration;
        private String filter;
        private TriggerResponse trigger;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricAbsenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregations = defaults.aggregations;
    	      this.duration = defaults.duration;
    	      this.filter = defaults.filter;
    	      this.trigger = defaults.trigger;
        }

        public Builder setAggregations(List<AggregationResponse> aggregations) {
            this.aggregations = Objects.requireNonNull(aggregations);
            return this;
        }

        public Builder setDuration(String duration) {
            this.duration = Objects.requireNonNull(duration);
            return this;
        }

        public Builder setFilter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }

        public Builder setTrigger(TriggerResponse trigger) {
            this.trigger = Objects.requireNonNull(trigger);
            return this;
        }

        public MetricAbsenceResponse build() {
            return new MetricAbsenceResponse(aggregations, duration, filter, trigger);
        }
    }
}
