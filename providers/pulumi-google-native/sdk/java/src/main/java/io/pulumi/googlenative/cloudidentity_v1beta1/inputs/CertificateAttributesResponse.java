// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudidentity_v1beta1.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.cloudidentity_v1beta1.inputs.CertificateTemplateResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Stores information about a certificate.
 * 
 */
public final class CertificateAttributesResponse extends io.pulumi.resources.InvokeArgs {

    public static final CertificateAttributesResponse Empty = new CertificateAttributesResponse();

    /**
     * The X.509 extension for CertificateTemplate.
     * 
     */
    @InputImport(name="certificateTemplate", required=true)
    private final CertificateTemplateResponse certificateTemplate;

    public CertificateTemplateResponse getCertificateTemplate() {
        return this.certificateTemplate;
    }

    /**
     * The encoded certificate fingerprint.
     * 
     */
    @InputImport(name="fingerprint", required=true)
    private final String fingerprint;

    public String getFingerprint() {
        return this.fingerprint;
    }

    /**
     * The name of the issuer of this certificate.
     * 
     */
    @InputImport(name="issuer", required=true)
    private final String issuer;

    public String getIssuer() {
        return this.issuer;
    }

    /**
     * Serial number of the certificate, Example: "123456789".
     * 
     */
    @InputImport(name="serialNumber", required=true)
    private final String serialNumber;

    public String getSerialNumber() {
        return this.serialNumber;
    }

    /**
     * The subject name of this certificate.
     * 
     */
    @InputImport(name="subject", required=true)
    private final String subject;

    public String getSubject() {
        return this.subject;
    }

    /**
     * The certificate thumbprint.
     * 
     */
    @InputImport(name="thumbprint", required=true)
    private final String thumbprint;

    public String getThumbprint() {
        return this.thumbprint;
    }

    /**
     * Validation state of this certificate.
     * 
     */
    @InputImport(name="validationState", required=true)
    private final String validationState;

    public String getValidationState() {
        return this.validationState;
    }

    /**
     * Certificate not valid at or after this timestamp.
     * 
     */
    @InputImport(name="validityExpirationTime", required=true)
    private final String validityExpirationTime;

    public String getValidityExpirationTime() {
        return this.validityExpirationTime;
    }

    /**
     * Certificate not valid before this timestamp.
     * 
     */
    @InputImport(name="validityStartTime", required=true)
    private final String validityStartTime;

    public String getValidityStartTime() {
        return this.validityStartTime;
    }

    public CertificateAttributesResponse(
        CertificateTemplateResponse certificateTemplate,
        String fingerprint,
        String issuer,
        String serialNumber,
        String subject,
        String thumbprint,
        String validationState,
        String validityExpirationTime,
        String validityStartTime) {
        this.certificateTemplate = Objects.requireNonNull(certificateTemplate, "expected parameter 'certificateTemplate' to be non-null");
        this.fingerprint = Objects.requireNonNull(fingerprint, "expected parameter 'fingerprint' to be non-null");
        this.issuer = Objects.requireNonNull(issuer, "expected parameter 'issuer' to be non-null");
        this.serialNumber = Objects.requireNonNull(serialNumber, "expected parameter 'serialNumber' to be non-null");
        this.subject = Objects.requireNonNull(subject, "expected parameter 'subject' to be non-null");
        this.thumbprint = Objects.requireNonNull(thumbprint, "expected parameter 'thumbprint' to be non-null");
        this.validationState = Objects.requireNonNull(validationState, "expected parameter 'validationState' to be non-null");
        this.validityExpirationTime = Objects.requireNonNull(validityExpirationTime, "expected parameter 'validityExpirationTime' to be non-null");
        this.validityStartTime = Objects.requireNonNull(validityStartTime, "expected parameter 'validityStartTime' to be non-null");
    }

    private CertificateAttributesResponse() {
        this.certificateTemplate = null;
        this.fingerprint = null;
        this.issuer = null;
        this.serialNumber = null;
        this.subject = null;
        this.thumbprint = null;
        this.validationState = null;
        this.validityExpirationTime = null;
        this.validityStartTime = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateAttributesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateTemplateResponse certificateTemplate;
        private String fingerprint;
        private String issuer;
        private String serialNumber;
        private String subject;
        private String thumbprint;
        private String validationState;
        private String validityExpirationTime;
        private String validityStartTime;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateAttributesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateTemplate = defaults.certificateTemplate;
    	      this.fingerprint = defaults.fingerprint;
    	      this.issuer = defaults.issuer;
    	      this.serialNumber = defaults.serialNumber;
    	      this.subject = defaults.subject;
    	      this.thumbprint = defaults.thumbprint;
    	      this.validationState = defaults.validationState;
    	      this.validityExpirationTime = defaults.validityExpirationTime;
    	      this.validityStartTime = defaults.validityStartTime;
        }

        public Builder setCertificateTemplate(CertificateTemplateResponse certificateTemplate) {
            this.certificateTemplate = Objects.requireNonNull(certificateTemplate);
            return this;
        }

        public Builder setFingerprint(String fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }

        public Builder setIssuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }

        public Builder setSerialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }

        public Builder setSubject(String subject) {
            this.subject = Objects.requireNonNull(subject);
            return this;
        }

        public Builder setThumbprint(String thumbprint) {
            this.thumbprint = Objects.requireNonNull(thumbprint);
            return this;
        }

        public Builder setValidationState(String validationState) {
            this.validationState = Objects.requireNonNull(validationState);
            return this;
        }

        public Builder setValidityExpirationTime(String validityExpirationTime) {
            this.validityExpirationTime = Objects.requireNonNull(validityExpirationTime);
            return this;
        }

        public Builder setValidityStartTime(String validityStartTime) {
            this.validityStartTime = Objects.requireNonNull(validityStartTime);
            return this;
        }

        public CertificateAttributesResponse build() {
            return new CertificateAttributesResponse(certificateTemplate, fingerprint, issuer, serialNumber, subject, thumbprint, validationState, validityExpirationTime, validityStartTime);
        }
    }
}
