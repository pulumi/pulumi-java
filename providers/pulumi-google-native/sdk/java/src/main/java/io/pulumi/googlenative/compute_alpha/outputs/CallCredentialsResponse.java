// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_alpha.outputs.MetadataCredentialsFromPluginResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class CallCredentialsResponse {
    /**
     * The type of call credentials to use for GRPC requests to the SDS server. This field can be set to one of the following: - GCE_VM: The local GCE VM service account credentials are used to access the SDS server. - FROM_PLUGIN: Custom authenticator credentials are used to access the SDS server.
     * 
     */
    private final String callCredentialType;
    /**
     * Custom authenticator credentials. Valid if callCredentialType is FROM_PLUGIN.
     * 
     */
    private final MetadataCredentialsFromPluginResponse fromPlugin;

    @OutputCustomType.Constructor({"callCredentialType","fromPlugin"})
    private CallCredentialsResponse(
        String callCredentialType,
        MetadataCredentialsFromPluginResponse fromPlugin) {
        this.callCredentialType = Objects.requireNonNull(callCredentialType);
        this.fromPlugin = Objects.requireNonNull(fromPlugin);
    }

    /**
     * The type of call credentials to use for GRPC requests to the SDS server. This field can be set to one of the following: - GCE_VM: The local GCE VM service account credentials are used to access the SDS server. - FROM_PLUGIN: Custom authenticator credentials are used to access the SDS server.
     * 
     */
    public String getCallCredentialType() {
        return this.callCredentialType;
    }
    /**
     * Custom authenticator credentials. Valid if callCredentialType is FROM_PLUGIN.
     * 
     */
    public MetadataCredentialsFromPluginResponse getFromPlugin() {
        return this.fromPlugin;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CallCredentialsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String callCredentialType;
        private MetadataCredentialsFromPluginResponse fromPlugin;

        public Builder() {
    	      // Empty
        }

        public Builder(CallCredentialsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.callCredentialType = defaults.callCredentialType;
    	      this.fromPlugin = defaults.fromPlugin;
        }

        public Builder setCallCredentialType(String callCredentialType) {
            this.callCredentialType = Objects.requireNonNull(callCredentialType);
            return this;
        }

        public Builder setFromPlugin(MetadataCredentialsFromPluginResponse fromPlugin) {
            this.fromPlugin = Objects.requireNonNull(fromPlugin);
            return this;
        }
        public CallCredentialsResponse build() {
            return new CallCredentialsResponse(callCredentialType, fromPlugin);
        }
    }
}
