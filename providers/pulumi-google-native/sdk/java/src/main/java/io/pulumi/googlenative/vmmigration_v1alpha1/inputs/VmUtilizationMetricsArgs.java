// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.vmmigration_v1alpha1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Utilization metrics values for a single VM.
 * 
 */
public final class VmUtilizationMetricsArgs extends io.pulumi.resources.ResourceArgs {

    public static final VmUtilizationMetricsArgs Empty = new VmUtilizationMetricsArgs();

    /**
     * Average CPU usage, percent.
     * 
     */
    @Import(name="cpuAverage")
      private final @Nullable Output<Integer> cpuAverage;

    public Output<Integer> cpuAverage() {
        return this.cpuAverage == null ? Codegen.empty() : this.cpuAverage;
    }

    /**
     * Average CPU usage, percent.
     * 
     */
    @Import(name="cpuAveragePercent")
      private final @Nullable Output<Integer> cpuAveragePercent;

    public Output<Integer> cpuAveragePercent() {
        return this.cpuAveragePercent == null ? Codegen.empty() : this.cpuAveragePercent;
    }

    /**
     * Max CPU usage, percent.
     * 
     */
    @Import(name="cpuMax")
      private final @Nullable Output<Integer> cpuMax;

    public Output<Integer> cpuMax() {
        return this.cpuMax == null ? Codegen.empty() : this.cpuMax;
    }

    /**
     * Max CPU usage, percent.
     * 
     */
    @Import(name="cpuMaxPercent")
      private final @Nullable Output<Integer> cpuMaxPercent;

    public Output<Integer> cpuMaxPercent() {
        return this.cpuMaxPercent == null ? Codegen.empty() : this.cpuMaxPercent;
    }

    /**
     * Average disk IO rate, in kilobytes per second.
     * 
     */
    @Import(name="diskIoRateAverage")
      private final @Nullable Output<String> diskIoRateAverage;

    public Output<String> diskIoRateAverage() {
        return this.diskIoRateAverage == null ? Codegen.empty() : this.diskIoRateAverage;
    }

    /**
     * Average disk IO rate, in kilobytes per second.
     * 
     */
    @Import(name="diskIoRateAverageKbps")
      private final @Nullable Output<String> diskIoRateAverageKbps;

    public Output<String> diskIoRateAverageKbps() {
        return this.diskIoRateAverageKbps == null ? Codegen.empty() : this.diskIoRateAverageKbps;
    }

    /**
     * Max disk IO rate, in kilobytes per second.
     * 
     */
    @Import(name="diskIoRateMax")
      private final @Nullable Output<String> diskIoRateMax;

    public Output<String> diskIoRateMax() {
        return this.diskIoRateMax == null ? Codegen.empty() : this.diskIoRateMax;
    }

    /**
     * Max disk IO rate, in kilobytes per second.
     * 
     */
    @Import(name="diskIoRateMaxKbps")
      private final @Nullable Output<String> diskIoRateMaxKbps;

    public Output<String> diskIoRateMaxKbps() {
        return this.diskIoRateMaxKbps == null ? Codegen.empty() : this.diskIoRateMaxKbps;
    }

    /**
     * Average memory usage, percent.
     * 
     */
    @Import(name="memoryAverage")
      private final @Nullable Output<Integer> memoryAverage;

    public Output<Integer> memoryAverage() {
        return this.memoryAverage == null ? Codegen.empty() : this.memoryAverage;
    }

    /**
     * Average memory usage, percent.
     * 
     */
    @Import(name="memoryAveragePercent")
      private final @Nullable Output<Integer> memoryAveragePercent;

    public Output<Integer> memoryAveragePercent() {
        return this.memoryAveragePercent == null ? Codegen.empty() : this.memoryAveragePercent;
    }

    /**
     * Max memory usage, percent.
     * 
     */
    @Import(name="memoryMax")
      private final @Nullable Output<Integer> memoryMax;

    public Output<Integer> memoryMax() {
        return this.memoryMax == null ? Codegen.empty() : this.memoryMax;
    }

    /**
     * Max memory usage, percent.
     * 
     */
    @Import(name="memoryMaxPercent")
      private final @Nullable Output<Integer> memoryMaxPercent;

    public Output<Integer> memoryMaxPercent() {
        return this.memoryMaxPercent == null ? Codegen.empty() : this.memoryMaxPercent;
    }

    /**
     * Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     */
    @Import(name="networkThroughputAverage")
      private final @Nullable Output<String> networkThroughputAverage;

    public Output<String> networkThroughputAverage() {
        return this.networkThroughputAverage == null ? Codegen.empty() : this.networkThroughputAverage;
    }

    /**
     * Average network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     */
    @Import(name="networkThroughputAverageKbps")
      private final @Nullable Output<String> networkThroughputAverageKbps;

    public Output<String> networkThroughputAverageKbps() {
        return this.networkThroughputAverageKbps == null ? Codegen.empty() : this.networkThroughputAverageKbps;
    }

    /**
     * Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     */
    @Import(name="networkThroughputMax")
      private final @Nullable Output<String> networkThroughputMax;

    public Output<String> networkThroughputMax() {
        return this.networkThroughputMax == null ? Codegen.empty() : this.networkThroughputMax;
    }

    /**
     * Max network throughput (combined transmit-rates and receive-rates), in kilobytes per second.
     * 
     */
    @Import(name="networkThroughputMaxKbps")
      private final @Nullable Output<String> networkThroughputMaxKbps;

    public Output<String> networkThroughputMaxKbps() {
        return this.networkThroughputMaxKbps == null ? Codegen.empty() : this.networkThroughputMaxKbps;
    }

    public VmUtilizationMetricsArgs(
        @Nullable Output<Integer> cpuAverage,
        @Nullable Output<Integer> cpuAveragePercent,
        @Nullable Output<Integer> cpuMax,
        @Nullable Output<Integer> cpuMaxPercent,
        @Nullable Output<String> diskIoRateAverage,
        @Nullable Output<String> diskIoRateAverageKbps,
        @Nullable Output<String> diskIoRateMax,
        @Nullable Output<String> diskIoRateMaxKbps,
        @Nullable Output<Integer> memoryAverage,
        @Nullable Output<Integer> memoryAveragePercent,
        @Nullable Output<Integer> memoryMax,
        @Nullable Output<Integer> memoryMaxPercent,
        @Nullable Output<String> networkThroughputAverage,
        @Nullable Output<String> networkThroughputAverageKbps,
        @Nullable Output<String> networkThroughputMax,
        @Nullable Output<String> networkThroughputMaxKbps) {
        this.cpuAverage = cpuAverage;
        this.cpuAveragePercent = cpuAveragePercent;
        this.cpuMax = cpuMax;
        this.cpuMaxPercent = cpuMaxPercent;
        this.diskIoRateAverage = diskIoRateAverage;
        this.diskIoRateAverageKbps = diskIoRateAverageKbps;
        this.diskIoRateMax = diskIoRateMax;
        this.diskIoRateMaxKbps = diskIoRateMaxKbps;
        this.memoryAverage = memoryAverage;
        this.memoryAveragePercent = memoryAveragePercent;
        this.memoryMax = memoryMax;
        this.memoryMaxPercent = memoryMaxPercent;
        this.networkThroughputAverage = networkThroughputAverage;
        this.networkThroughputAverageKbps = networkThroughputAverageKbps;
        this.networkThroughputMax = networkThroughputMax;
        this.networkThroughputMaxKbps = networkThroughputMaxKbps;
    }

    private VmUtilizationMetricsArgs() {
        this.cpuAverage = Codegen.empty();
        this.cpuAveragePercent = Codegen.empty();
        this.cpuMax = Codegen.empty();
        this.cpuMaxPercent = Codegen.empty();
        this.diskIoRateAverage = Codegen.empty();
        this.diskIoRateAverageKbps = Codegen.empty();
        this.diskIoRateMax = Codegen.empty();
        this.diskIoRateMaxKbps = Codegen.empty();
        this.memoryAverage = Codegen.empty();
        this.memoryAveragePercent = Codegen.empty();
        this.memoryMax = Codegen.empty();
        this.memoryMaxPercent = Codegen.empty();
        this.networkThroughputAverage = Codegen.empty();
        this.networkThroughputAverageKbps = Codegen.empty();
        this.networkThroughputMax = Codegen.empty();
        this.networkThroughputMaxKbps = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VmUtilizationMetricsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> cpuAverage;
        private @Nullable Output<Integer> cpuAveragePercent;
        private @Nullable Output<Integer> cpuMax;
        private @Nullable Output<Integer> cpuMaxPercent;
        private @Nullable Output<String> diskIoRateAverage;
        private @Nullable Output<String> diskIoRateAverageKbps;
        private @Nullable Output<String> diskIoRateMax;
        private @Nullable Output<String> diskIoRateMaxKbps;
        private @Nullable Output<Integer> memoryAverage;
        private @Nullable Output<Integer> memoryAveragePercent;
        private @Nullable Output<Integer> memoryMax;
        private @Nullable Output<Integer> memoryMaxPercent;
        private @Nullable Output<String> networkThroughputAverage;
        private @Nullable Output<String> networkThroughputAverageKbps;
        private @Nullable Output<String> networkThroughputMax;
        private @Nullable Output<String> networkThroughputMaxKbps;

        public Builder() {
    	      // Empty
        }

        public Builder(VmUtilizationMetricsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpuAverage = defaults.cpuAverage;
    	      this.cpuAveragePercent = defaults.cpuAveragePercent;
    	      this.cpuMax = defaults.cpuMax;
    	      this.cpuMaxPercent = defaults.cpuMaxPercent;
    	      this.diskIoRateAverage = defaults.diskIoRateAverage;
    	      this.diskIoRateAverageKbps = defaults.diskIoRateAverageKbps;
    	      this.diskIoRateMax = defaults.diskIoRateMax;
    	      this.diskIoRateMaxKbps = defaults.diskIoRateMaxKbps;
    	      this.memoryAverage = defaults.memoryAverage;
    	      this.memoryAveragePercent = defaults.memoryAveragePercent;
    	      this.memoryMax = defaults.memoryMax;
    	      this.memoryMaxPercent = defaults.memoryMaxPercent;
    	      this.networkThroughputAverage = defaults.networkThroughputAverage;
    	      this.networkThroughputAverageKbps = defaults.networkThroughputAverageKbps;
    	      this.networkThroughputMax = defaults.networkThroughputMax;
    	      this.networkThroughputMaxKbps = defaults.networkThroughputMaxKbps;
        }

        public Builder cpuAverage(@Nullable Output<Integer> cpuAverage) {
            this.cpuAverage = cpuAverage;
            return this;
        }
        public Builder cpuAverage(@Nullable Integer cpuAverage) {
            this.cpuAverage = Codegen.ofNullable(cpuAverage);
            return this;
        }
        public Builder cpuAveragePercent(@Nullable Output<Integer> cpuAveragePercent) {
            this.cpuAveragePercent = cpuAveragePercent;
            return this;
        }
        public Builder cpuAveragePercent(@Nullable Integer cpuAveragePercent) {
            this.cpuAveragePercent = Codegen.ofNullable(cpuAveragePercent);
            return this;
        }
        public Builder cpuMax(@Nullable Output<Integer> cpuMax) {
            this.cpuMax = cpuMax;
            return this;
        }
        public Builder cpuMax(@Nullable Integer cpuMax) {
            this.cpuMax = Codegen.ofNullable(cpuMax);
            return this;
        }
        public Builder cpuMaxPercent(@Nullable Output<Integer> cpuMaxPercent) {
            this.cpuMaxPercent = cpuMaxPercent;
            return this;
        }
        public Builder cpuMaxPercent(@Nullable Integer cpuMaxPercent) {
            this.cpuMaxPercent = Codegen.ofNullable(cpuMaxPercent);
            return this;
        }
        public Builder diskIoRateAverage(@Nullable Output<String> diskIoRateAverage) {
            this.diskIoRateAverage = diskIoRateAverage;
            return this;
        }
        public Builder diskIoRateAverage(@Nullable String diskIoRateAverage) {
            this.diskIoRateAverage = Codegen.ofNullable(diskIoRateAverage);
            return this;
        }
        public Builder diskIoRateAverageKbps(@Nullable Output<String> diskIoRateAverageKbps) {
            this.diskIoRateAverageKbps = diskIoRateAverageKbps;
            return this;
        }
        public Builder diskIoRateAverageKbps(@Nullable String diskIoRateAverageKbps) {
            this.diskIoRateAverageKbps = Codegen.ofNullable(diskIoRateAverageKbps);
            return this;
        }
        public Builder diskIoRateMax(@Nullable Output<String> diskIoRateMax) {
            this.diskIoRateMax = diskIoRateMax;
            return this;
        }
        public Builder diskIoRateMax(@Nullable String diskIoRateMax) {
            this.diskIoRateMax = Codegen.ofNullable(diskIoRateMax);
            return this;
        }
        public Builder diskIoRateMaxKbps(@Nullable Output<String> diskIoRateMaxKbps) {
            this.diskIoRateMaxKbps = diskIoRateMaxKbps;
            return this;
        }
        public Builder diskIoRateMaxKbps(@Nullable String diskIoRateMaxKbps) {
            this.diskIoRateMaxKbps = Codegen.ofNullable(diskIoRateMaxKbps);
            return this;
        }
        public Builder memoryAverage(@Nullable Output<Integer> memoryAverage) {
            this.memoryAverage = memoryAverage;
            return this;
        }
        public Builder memoryAverage(@Nullable Integer memoryAverage) {
            this.memoryAverage = Codegen.ofNullable(memoryAverage);
            return this;
        }
        public Builder memoryAveragePercent(@Nullable Output<Integer> memoryAveragePercent) {
            this.memoryAveragePercent = memoryAveragePercent;
            return this;
        }
        public Builder memoryAveragePercent(@Nullable Integer memoryAveragePercent) {
            this.memoryAveragePercent = Codegen.ofNullable(memoryAveragePercent);
            return this;
        }
        public Builder memoryMax(@Nullable Output<Integer> memoryMax) {
            this.memoryMax = memoryMax;
            return this;
        }
        public Builder memoryMax(@Nullable Integer memoryMax) {
            this.memoryMax = Codegen.ofNullable(memoryMax);
            return this;
        }
        public Builder memoryMaxPercent(@Nullable Output<Integer> memoryMaxPercent) {
            this.memoryMaxPercent = memoryMaxPercent;
            return this;
        }
        public Builder memoryMaxPercent(@Nullable Integer memoryMaxPercent) {
            this.memoryMaxPercent = Codegen.ofNullable(memoryMaxPercent);
            return this;
        }
        public Builder networkThroughputAverage(@Nullable Output<String> networkThroughputAverage) {
            this.networkThroughputAverage = networkThroughputAverage;
            return this;
        }
        public Builder networkThroughputAverage(@Nullable String networkThroughputAverage) {
            this.networkThroughputAverage = Codegen.ofNullable(networkThroughputAverage);
            return this;
        }
        public Builder networkThroughputAverageKbps(@Nullable Output<String> networkThroughputAverageKbps) {
            this.networkThroughputAverageKbps = networkThroughputAverageKbps;
            return this;
        }
        public Builder networkThroughputAverageKbps(@Nullable String networkThroughputAverageKbps) {
            this.networkThroughputAverageKbps = Codegen.ofNullable(networkThroughputAverageKbps);
            return this;
        }
        public Builder networkThroughputMax(@Nullable Output<String> networkThroughputMax) {
            this.networkThroughputMax = networkThroughputMax;
            return this;
        }
        public Builder networkThroughputMax(@Nullable String networkThroughputMax) {
            this.networkThroughputMax = Codegen.ofNullable(networkThroughputMax);
            return this;
        }
        public Builder networkThroughputMaxKbps(@Nullable Output<String> networkThroughputMaxKbps) {
            this.networkThroughputMaxKbps = networkThroughputMaxKbps;
            return this;
        }
        public Builder networkThroughputMaxKbps(@Nullable String networkThroughputMaxKbps) {
            this.networkThroughputMaxKbps = Codegen.ofNullable(networkThroughputMaxKbps);
            return this;
        }        public VmUtilizationMetricsArgs build() {
            return new VmUtilizationMetricsArgs(cpuAverage, cpuAveragePercent, cpuMax, cpuMaxPercent, diskIoRateAverage, diskIoRateAverageKbps, diskIoRateMax, diskIoRateMaxKbps, memoryAverage, memoryAveragePercent, memoryMax, memoryMaxPercent, networkThroughputAverage, networkThroughputAverageKbps, networkThroughputMax, networkThroughputMaxKbps);
        }
    }
}
