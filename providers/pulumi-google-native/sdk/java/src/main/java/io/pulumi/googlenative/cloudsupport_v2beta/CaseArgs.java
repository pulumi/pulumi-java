// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudsupport_v2beta;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.cloudsupport_v2beta.enums.CasePriority;
import io.pulumi.googlenative.cloudsupport_v2beta.inputs.ActorArgs;
import io.pulumi.googlenative.cloudsupport_v2beta.inputs.CaseClassificationArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CaseArgs extends io.pulumi.resources.ResourceArgs {

    public static final CaseArgs Empty = new CaseArgs();

    /**
     * The issue classification applicable to this case.
     * 
     */
    @Import(name="classification")
      private final @Nullable Output<CaseClassificationArgs> classification;

    public Output<CaseClassificationArgs> getClassification() {
        return this.classification == null ? Codegen.empty() : this.classification;
    }

    /**
     * The user who created the case. Note: The name and email will be obfuscated if the case was created by Google Support.
     * 
     */
    @Import(name="creator")
      private final @Nullable Output<ActorArgs> creator;

    public Output<ActorArgs> getCreator() {
        return this.creator == null ? Codegen.empty() : this.creator;
    }

    /**
     * A broad description of the issue.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The short summary of the issue reported in this case.
     * 
     */
    @Import(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName == null ? Codegen.empty() : this.displayName;
    }

    /**
     * Whether the case is currently escalated.
     * 
     */
    @Import(name="escalated")
      private final @Nullable Output<Boolean> escalated;

    public Output<Boolean> getEscalated() {
        return this.escalated == null ? Codegen.empty() : this.escalated;
    }

    /**
     * The resource name for the case.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The priority of this case. If this is set, do not set severity.
     * 
     */
    @Import(name="priority")
      private final @Nullable Output<CasePriority> priority;

    public Output<CasePriority> getPriority() {
        return this.priority == null ? Codegen.empty() : this.priority;
    }

    /**
     * The email addresses to receive updates on this case.
     * 
     */
    @Import(name="subscriberEmailAddresses")
      private final @Nullable Output<List<String>> subscriberEmailAddresses;

    public Output<List<String>> getSubscriberEmailAddresses() {
        return this.subscriberEmailAddresses == null ? Codegen.empty() : this.subscriberEmailAddresses;
    }

    /**
     * Whether this case was created for internal API testing and should not be acted on by the support team.
     * 
     */
    @Import(name="testCase")
      private final @Nullable Output<Boolean> testCase;

    public Output<Boolean> getTestCase() {
        return this.testCase == null ? Codegen.empty() : this.testCase;
    }

    /**
     * The timezone of the user who created the support case. It should be in a format IANA recognizes: https://www.iana.org/time-zones. There is no additional validation done by the API.
     * 
     */
    @Import(name="timeZone")
      private final @Nullable Output<String> timeZone;

    public Output<String> getTimeZone() {
        return this.timeZone == null ? Codegen.empty() : this.timeZone;
    }

    @Import(name="v2betaId1", required=true)
      private final Output<String> v2betaId1;

    public Output<String> getV2betaId1() {
        return this.v2betaId1;
    }

    @Import(name="v2betumId", required=true)
      private final Output<String> v2betumId;

    public Output<String> getV2betumId() {
        return this.v2betumId;
    }

    public CaseArgs(
        @Nullable Output<CaseClassificationArgs> classification,
        @Nullable Output<ActorArgs> creator,
        @Nullable Output<String> description,
        @Nullable Output<String> displayName,
        @Nullable Output<Boolean> escalated,
        @Nullable Output<String> name,
        @Nullable Output<CasePriority> priority,
        @Nullable Output<List<String>> subscriberEmailAddresses,
        @Nullable Output<Boolean> testCase,
        @Nullable Output<String> timeZone,
        Output<String> v2betaId1,
        Output<String> v2betumId) {
        this.classification = classification;
        this.creator = creator;
        this.description = description;
        this.displayName = displayName;
        this.escalated = escalated;
        this.name = name;
        this.priority = priority;
        this.subscriberEmailAddresses = subscriberEmailAddresses;
        this.testCase = testCase;
        this.timeZone = timeZone;
        this.v2betaId1 = Objects.requireNonNull(v2betaId1, "expected parameter 'v2betaId1' to be non-null");
        this.v2betumId = Objects.requireNonNull(v2betumId, "expected parameter 'v2betumId' to be non-null");
    }

    private CaseArgs() {
        this.classification = Codegen.empty();
        this.creator = Codegen.empty();
        this.description = Codegen.empty();
        this.displayName = Codegen.empty();
        this.escalated = Codegen.empty();
        this.name = Codegen.empty();
        this.priority = Codegen.empty();
        this.subscriberEmailAddresses = Codegen.empty();
        this.testCase = Codegen.empty();
        this.timeZone = Codegen.empty();
        this.v2betaId1 = Codegen.empty();
        this.v2betumId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<CaseClassificationArgs> classification;
        private @Nullable Output<ActorArgs> creator;
        private @Nullable Output<String> description;
        private @Nullable Output<String> displayName;
        private @Nullable Output<Boolean> escalated;
        private @Nullable Output<String> name;
        private @Nullable Output<CasePriority> priority;
        private @Nullable Output<List<String>> subscriberEmailAddresses;
        private @Nullable Output<Boolean> testCase;
        private @Nullable Output<String> timeZone;
        private Output<String> v2betaId1;
        private Output<String> v2betumId;

        public Builder() {
    	      // Empty
        }

        public Builder(CaseArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.classification = defaults.classification;
    	      this.creator = defaults.creator;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.escalated = defaults.escalated;
    	      this.name = defaults.name;
    	      this.priority = defaults.priority;
    	      this.subscriberEmailAddresses = defaults.subscriberEmailAddresses;
    	      this.testCase = defaults.testCase;
    	      this.timeZone = defaults.timeZone;
    	      this.v2betaId1 = defaults.v2betaId1;
    	      this.v2betumId = defaults.v2betumId;
        }

        public Builder classification(@Nullable Output<CaseClassificationArgs> classification) {
            this.classification = classification;
            return this;
        }
        public Builder classification(@Nullable CaseClassificationArgs classification) {
            this.classification = Codegen.ofNullable(classification);
            return this;
        }
        public Builder creator(@Nullable Output<ActorArgs> creator) {
            this.creator = creator;
            return this;
        }
        public Builder creator(@Nullable ActorArgs creator) {
            this.creator = Codegen.ofNullable(creator);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = Codegen.ofNullable(displayName);
            return this;
        }
        public Builder escalated(@Nullable Output<Boolean> escalated) {
            this.escalated = escalated;
            return this;
        }
        public Builder escalated(@Nullable Boolean escalated) {
            this.escalated = Codegen.ofNullable(escalated);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder priority(@Nullable Output<CasePriority> priority) {
            this.priority = priority;
            return this;
        }
        public Builder priority(@Nullable CasePriority priority) {
            this.priority = Codegen.ofNullable(priority);
            return this;
        }
        public Builder subscriberEmailAddresses(@Nullable Output<List<String>> subscriberEmailAddresses) {
            this.subscriberEmailAddresses = subscriberEmailAddresses;
            return this;
        }
        public Builder subscriberEmailAddresses(@Nullable List<String> subscriberEmailAddresses) {
            this.subscriberEmailAddresses = Codegen.ofNullable(subscriberEmailAddresses);
            return this;
        }
        public Builder subscriberEmailAddresses(String... subscriberEmailAddresses) {
            return subscriberEmailAddresses(List.of(subscriberEmailAddresses));
        }
        public Builder testCase(@Nullable Output<Boolean> testCase) {
            this.testCase = testCase;
            return this;
        }
        public Builder testCase(@Nullable Boolean testCase) {
            this.testCase = Codegen.ofNullable(testCase);
            return this;
        }
        public Builder timeZone(@Nullable Output<String> timeZone) {
            this.timeZone = timeZone;
            return this;
        }
        public Builder timeZone(@Nullable String timeZone) {
            this.timeZone = Codegen.ofNullable(timeZone);
            return this;
        }
        public Builder v2betaId1(Output<String> v2betaId1) {
            this.v2betaId1 = Objects.requireNonNull(v2betaId1);
            return this;
        }
        public Builder v2betaId1(String v2betaId1) {
            this.v2betaId1 = Output.of(Objects.requireNonNull(v2betaId1));
            return this;
        }
        public Builder v2betumId(Output<String> v2betumId) {
            this.v2betumId = Objects.requireNonNull(v2betumId);
            return this;
        }
        public Builder v2betumId(String v2betumId) {
            this.v2betumId = Output.of(Objects.requireNonNull(v2betumId));
            return this;
        }        public CaseArgs build() {
            return new CaseArgs(classification, creator, description, displayName, escalated, name, priority, subscriberEmailAddresses, testCase, timeZone, v2betaId1, v2betumId);
        }
    }
}
