// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.apigee_v1.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.googlenative.apigee_v1.outputs.GoogleCloudApigeeV1CustomReportMetricResponse;
import io.pulumi.googlenative.apigee_v1.outputs.GoogleCloudApigeeV1ReportPropertyResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetReportResult {
    /**
     * This field contains the chart type for the report
     * 
     */
    private final String chartType;
    /**
     * Legacy field: not used. This field contains a list of comments associated with custom report
     * 
     */
    private final List<String> comments;
    /**
     * Unix time when the app was created json key: createdAt
     * 
     */
    private final String createdAt;
    /**
     * This contains the list of dimensions for the report
     * 
     */
    private final List<String> dimensions;
    /**
     * This is the display name for the report
     * 
     */
    private final String displayName;
    /**
     * Environment name
     * 
     */
    private final String environment;
    /**
     * This field contains the filter expression
     * 
     */
    private final String filter;
    /**
     * Legacy field: not used. Contains the from time for the report
     * 
     */
    private final String fromTime;
    /**
     * Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt
     * 
     */
    private final String lastModifiedAt;
    /**
     * Last viewed time of this entity as milliseconds since epoch
     * 
     */
    private final String lastViewedAt;
    /**
     * Legacy field: not used This field contains the limit for the result retrieved
     * 
     */
    private final String limit;
    /**
     * This contains the list of metrics
     * 
     */
    private final List<GoogleCloudApigeeV1CustomReportMetricResponse> metrics;
    /**
     * Unique identifier for the report T his is a legacy field used to encode custom report unique id
     * 
     */
    private final String name;
    /**
     * Legacy field: not used. This field contains the offset for the data
     * 
     */
    private final String offset;
    /**
     * Organization name
     * 
     */
    private final String organization;
    /**
     * This field contains report properties such as ui metadata etc.
     * 
     */
    private final List<GoogleCloudApigeeV1ReportPropertyResponse> properties;
    /**
     * Legacy field: not used much. Contains the list of sort by columns
     * 
     */
    private final List<String> sortByCols;
    /**
     * Legacy field: not used much. Contains the sort order for the sort columns
     * 
     */
    private final String sortOrder;
    /**
     * Legacy field: not used. This field contains a list of tags associated with custom report
     * 
     */
    private final List<String> tags;
    /**
     * This field contains the time unit of aggregation for the report
     * 
     */
    private final String timeUnit;
    /**
     * Legacy field: not used. Contains the end time for the report
     * 
     */
    private final String toTime;
    /**
     * Legacy field: not used. This field contains the top k parameter value for restricting the result
     * 
     */
    private final String topk;

    @CustomType.Constructor
    private GetReportResult(
        @CustomType.Parameter("chartType") String chartType,
        @CustomType.Parameter("comments") List<String> comments,
        @CustomType.Parameter("createdAt") String createdAt,
        @CustomType.Parameter("dimensions") List<String> dimensions,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("environment") String environment,
        @CustomType.Parameter("filter") String filter,
        @CustomType.Parameter("fromTime") String fromTime,
        @CustomType.Parameter("lastModifiedAt") String lastModifiedAt,
        @CustomType.Parameter("lastViewedAt") String lastViewedAt,
        @CustomType.Parameter("limit") String limit,
        @CustomType.Parameter("metrics") List<GoogleCloudApigeeV1CustomReportMetricResponse> metrics,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("offset") String offset,
        @CustomType.Parameter("organization") String organization,
        @CustomType.Parameter("properties") List<GoogleCloudApigeeV1ReportPropertyResponse> properties,
        @CustomType.Parameter("sortByCols") List<String> sortByCols,
        @CustomType.Parameter("sortOrder") String sortOrder,
        @CustomType.Parameter("tags") List<String> tags,
        @CustomType.Parameter("timeUnit") String timeUnit,
        @CustomType.Parameter("toTime") String toTime,
        @CustomType.Parameter("topk") String topk) {
        this.chartType = chartType;
        this.comments = comments;
        this.createdAt = createdAt;
        this.dimensions = dimensions;
        this.displayName = displayName;
        this.environment = environment;
        this.filter = filter;
        this.fromTime = fromTime;
        this.lastModifiedAt = lastModifiedAt;
        this.lastViewedAt = lastViewedAt;
        this.limit = limit;
        this.metrics = metrics;
        this.name = name;
        this.offset = offset;
        this.organization = organization;
        this.properties = properties;
        this.sortByCols = sortByCols;
        this.sortOrder = sortOrder;
        this.tags = tags;
        this.timeUnit = timeUnit;
        this.toTime = toTime;
        this.topk = topk;
    }

    /**
     * This field contains the chart type for the report
     * 
    */
    public String getChartType() {
        return this.chartType;
    }
    /**
     * Legacy field: not used. This field contains a list of comments associated with custom report
     * 
    */
    public List<String> getComments() {
        return this.comments;
    }
    /**
     * Unix time when the app was created json key: createdAt
     * 
    */
    public String getCreatedAt() {
        return this.createdAt;
    }
    /**
     * This contains the list of dimensions for the report
     * 
    */
    public List<String> getDimensions() {
        return this.dimensions;
    }
    /**
     * This is the display name for the report
     * 
    */
    public String getDisplayName() {
        return this.displayName;
    }
    /**
     * Environment name
     * 
    */
    public String getEnvironment() {
        return this.environment;
    }
    /**
     * This field contains the filter expression
     * 
    */
    public String getFilter() {
        return this.filter;
    }
    /**
     * Legacy field: not used. Contains the from time for the report
     * 
    */
    public String getFromTime() {
        return this.fromTime;
    }
    /**
     * Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt
     * 
    */
    public String getLastModifiedAt() {
        return this.lastModifiedAt;
    }
    /**
     * Last viewed time of this entity as milliseconds since epoch
     * 
    */
    public String getLastViewedAt() {
        return this.lastViewedAt;
    }
    /**
     * Legacy field: not used This field contains the limit for the result retrieved
     * 
    */
    public String getLimit() {
        return this.limit;
    }
    /**
     * This contains the list of metrics
     * 
    */
    public List<GoogleCloudApigeeV1CustomReportMetricResponse> getMetrics() {
        return this.metrics;
    }
    /**
     * Unique identifier for the report T his is a legacy field used to encode custom report unique id
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Legacy field: not used. This field contains the offset for the data
     * 
    */
    public String getOffset() {
        return this.offset;
    }
    /**
     * Organization name
     * 
    */
    public String getOrganization() {
        return this.organization;
    }
    /**
     * This field contains report properties such as ui metadata etc.
     * 
    */
    public List<GoogleCloudApigeeV1ReportPropertyResponse> getProperties() {
        return this.properties;
    }
    /**
     * Legacy field: not used much. Contains the list of sort by columns
     * 
    */
    public List<String> getSortByCols() {
        return this.sortByCols;
    }
    /**
     * Legacy field: not used much. Contains the sort order for the sort columns
     * 
    */
    public String getSortOrder() {
        return this.sortOrder;
    }
    /**
     * Legacy field: not used. This field contains a list of tags associated with custom report
     * 
    */
    public List<String> getTags() {
        return this.tags;
    }
    /**
     * This field contains the time unit of aggregation for the report
     * 
    */
    public String getTimeUnit() {
        return this.timeUnit;
    }
    /**
     * Legacy field: not used. Contains the end time for the report
     * 
    */
    public String getToTime() {
        return this.toTime;
    }
    /**
     * Legacy field: not used. This field contains the top k parameter value for restricting the result
     * 
    */
    public String getTopk() {
        return this.topk;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReportResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String chartType;
        private List<String> comments;
        private String createdAt;
        private List<String> dimensions;
        private String displayName;
        private String environment;
        private String filter;
        private String fromTime;
        private String lastModifiedAt;
        private String lastViewedAt;
        private String limit;
        private List<GoogleCloudApigeeV1CustomReportMetricResponse> metrics;
        private String name;
        private String offset;
        private String organization;
        private List<GoogleCloudApigeeV1ReportPropertyResponse> properties;
        private List<String> sortByCols;
        private String sortOrder;
        private List<String> tags;
        private String timeUnit;
        private String toTime;
        private String topk;

        public Builder() {
    	      // Empty
        }

        public Builder(GetReportResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chartType = defaults.chartType;
    	      this.comments = defaults.comments;
    	      this.createdAt = defaults.createdAt;
    	      this.dimensions = defaults.dimensions;
    	      this.displayName = defaults.displayName;
    	      this.environment = defaults.environment;
    	      this.filter = defaults.filter;
    	      this.fromTime = defaults.fromTime;
    	      this.lastModifiedAt = defaults.lastModifiedAt;
    	      this.lastViewedAt = defaults.lastViewedAt;
    	      this.limit = defaults.limit;
    	      this.metrics = defaults.metrics;
    	      this.name = defaults.name;
    	      this.offset = defaults.offset;
    	      this.organization = defaults.organization;
    	      this.properties = defaults.properties;
    	      this.sortByCols = defaults.sortByCols;
    	      this.sortOrder = defaults.sortOrder;
    	      this.tags = defaults.tags;
    	      this.timeUnit = defaults.timeUnit;
    	      this.toTime = defaults.toTime;
    	      this.topk = defaults.topk;
        }

        public Builder chartType(String chartType) {
            this.chartType = Objects.requireNonNull(chartType);
            return this;
        }

        public Builder comments(List<String> comments) {
            this.comments = Objects.requireNonNull(comments);
            return this;
        }

        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }

        public Builder dimensions(List<String> dimensions) {
            this.dimensions = Objects.requireNonNull(dimensions);
            return this;
        }

        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder environment(String environment) {
            this.environment = Objects.requireNonNull(environment);
            return this;
        }

        public Builder filter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }

        public Builder fromTime(String fromTime) {
            this.fromTime = Objects.requireNonNull(fromTime);
            return this;
        }

        public Builder lastModifiedAt(String lastModifiedAt) {
            this.lastModifiedAt = Objects.requireNonNull(lastModifiedAt);
            return this;
        }

        public Builder lastViewedAt(String lastViewedAt) {
            this.lastViewedAt = Objects.requireNonNull(lastViewedAt);
            return this;
        }

        public Builder limit(String limit) {
            this.limit = Objects.requireNonNull(limit);
            return this;
        }

        public Builder metrics(List<GoogleCloudApigeeV1CustomReportMetricResponse> metrics) {
            this.metrics = Objects.requireNonNull(metrics);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder offset(String offset) {
            this.offset = Objects.requireNonNull(offset);
            return this;
        }

        public Builder organization(String organization) {
            this.organization = Objects.requireNonNull(organization);
            return this;
        }

        public Builder properties(List<GoogleCloudApigeeV1ReportPropertyResponse> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }

        public Builder sortByCols(List<String> sortByCols) {
            this.sortByCols = Objects.requireNonNull(sortByCols);
            return this;
        }

        public Builder sortOrder(String sortOrder) {
            this.sortOrder = Objects.requireNonNull(sortOrder);
            return this;
        }

        public Builder tags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder timeUnit(String timeUnit) {
            this.timeUnit = Objects.requireNonNull(timeUnit);
            return this;
        }

        public Builder toTime(String toTime) {
            this.toTime = Objects.requireNonNull(toTime);
            return this;
        }

        public Builder topk(String topk) {
            this.topk = Objects.requireNonNull(topk);
            return this;
        }
        public GetReportResult build() {
            return new GetReportResult(chartType, comments, createdAt, dimensions, displayName, environment, filter, fromTime, lastModifiedAt, lastViewedAt, limit, metrics, name, offset, organization, properties, sortByCols, sortOrder, tags, timeUnit, toTime, topk);
        }
    }
}
