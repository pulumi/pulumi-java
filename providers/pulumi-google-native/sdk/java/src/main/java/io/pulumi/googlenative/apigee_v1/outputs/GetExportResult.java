// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.apigee_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetExportResult {
    /**
     * Time the export job was created.
     * 
     */
    private final String created;
    /**
     * Name of the datastore that is the destination of the export job [datastore]
     * 
     */
    private final String datastoreName;
    /**
     * Description of the export job.
     * 
     */
    private final String description;
    /**
     * Error is set when export fails
     * 
     */
    private final String error;
    /**
     * Execution time for this export job. If the job is still in progress, it will be set to the amount of time that has elapsed since`created`, in seconds. Else, it will set to (`updated` - `created`), in seconds.
     * 
     */
    private final String executionTime;
    /**
     * Display name of the export job.
     * 
     */
    private final String name;
    /**
     * Self link of the export job. A URI that can be used to retrieve the status of an export job. Example: `/organizations/myorg/environments/myenv/analytics/exports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
     * 
     */
    private final String self;
    /**
     * Status of the export job. Valid values include `enqueued`, `running`, `completed`, and `failed`.
     * 
     */
    private final String state;
    /**
     * Time the export job was last updated.
     * 
     */
    private final String updated;

    @OutputCustomType.Constructor
    private GetExportResult(
        @OutputCustomType.Parameter("created") String created,
        @OutputCustomType.Parameter("datastoreName") String datastoreName,
        @OutputCustomType.Parameter("description") String description,
        @OutputCustomType.Parameter("error") String error,
        @OutputCustomType.Parameter("executionTime") String executionTime,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("self") String self,
        @OutputCustomType.Parameter("state") String state,
        @OutputCustomType.Parameter("updated") String updated) {
        this.created = created;
        this.datastoreName = datastoreName;
        this.description = description;
        this.error = error;
        this.executionTime = executionTime;
        this.name = name;
        this.self = self;
        this.state = state;
        this.updated = updated;
    }

    /**
     * Time the export job was created.
     * 
    */
    public String getCreated() {
        return this.created;
    }
    /**
     * Name of the datastore that is the destination of the export job [datastore]
     * 
    */
    public String getDatastoreName() {
        return this.datastoreName;
    }
    /**
     * Description of the export job.
     * 
    */
    public String getDescription() {
        return this.description;
    }
    /**
     * Error is set when export fails
     * 
    */
    public String getError() {
        return this.error;
    }
    /**
     * Execution time for this export job. If the job is still in progress, it will be set to the amount of time that has elapsed since`created`, in seconds. Else, it will set to (`updated` - `created`), in seconds.
     * 
    */
    public String getExecutionTime() {
        return this.executionTime;
    }
    /**
     * Display name of the export job.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Self link of the export job. A URI that can be used to retrieve the status of an export job. Example: `/organizations/myorg/environments/myenv/analytics/exports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`
     * 
    */
    public String getSelf() {
        return this.self;
    }
    /**
     * Status of the export job. Valid values include `enqueued`, `running`, `completed`, and `failed`.
     * 
    */
    public String getState() {
        return this.state;
    }
    /**
     * Time the export job was last updated.
     * 
    */
    public String getUpdated() {
        return this.updated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExportResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String created;
        private String datastoreName;
        private String description;
        private String error;
        private String executionTime;
        private String name;
        private String self;
        private String state;
        private String updated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetExportResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.created = defaults.created;
    	      this.datastoreName = defaults.datastoreName;
    	      this.description = defaults.description;
    	      this.error = defaults.error;
    	      this.executionTime = defaults.executionTime;
    	      this.name = defaults.name;
    	      this.self = defaults.self;
    	      this.state = defaults.state;
    	      this.updated = defaults.updated;
        }

        public Builder created(String created) {
            this.created = Objects.requireNonNull(created);
            return this;
        }

        public Builder datastoreName(String datastoreName) {
            this.datastoreName = Objects.requireNonNull(datastoreName);
            return this;
        }

        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder error(String error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }

        public Builder executionTime(String executionTime) {
            this.executionTime = Objects.requireNonNull(executionTime);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder self(String self) {
            this.self = Objects.requireNonNull(self);
            return this;
        }

        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder updated(String updated) {
            this.updated = Objects.requireNonNull(updated);
            return this;
        }
        public GetExportResult build() {
            return new GetExportResult(created, datastoreName, description, error, executionTime, name, self, state, updated);
        }
    }
}
