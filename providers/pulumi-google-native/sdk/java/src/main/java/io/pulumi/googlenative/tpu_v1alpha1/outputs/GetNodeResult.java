// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.tpu_v1alpha1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.tpu_v1alpha1.outputs.NetworkEndpointResponse;
import io.pulumi.googlenative.tpu_v1alpha1.outputs.SchedulingConfigResponse;
import io.pulumi.googlenative.tpu_v1alpha1.outputs.SymptomResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetNodeResult {
    private final String acceleratorType;
    private final String apiVersion;
    private final String cidrBlock;
    private final String createTime;
    private final String description;
    private final String health;
    private final String healthDescription;
    private final Map<String,String> labels;
    private final String name;
    private final String network;
    private final List<NetworkEndpointResponse> networkEndpoints;
    private final SchedulingConfigResponse schedulingConfig;
    private final String serviceAccount;
    private final String state;
    private final List<SymptomResponse> symptoms;
    private final String tensorflowVersion;
    private final Boolean useServiceNetworking;

    @OutputCustomType.Constructor({"acceleratorType","apiVersion","cidrBlock","createTime","description","health","healthDescription","labels","name","network","networkEndpoints","schedulingConfig","serviceAccount","state","symptoms","tensorflowVersion","useServiceNetworking"})
    private GetNodeResult(
        String acceleratorType,
        String apiVersion,
        String cidrBlock,
        String createTime,
        String description,
        String health,
        String healthDescription,
        Map<String,String> labels,
        String name,
        String network,
        List<NetworkEndpointResponse> networkEndpoints,
        SchedulingConfigResponse schedulingConfig,
        String serviceAccount,
        String state,
        List<SymptomResponse> symptoms,
        String tensorflowVersion,
        Boolean useServiceNetworking) {
        this.acceleratorType = Objects.requireNonNull(acceleratorType);
        this.apiVersion = Objects.requireNonNull(apiVersion);
        this.cidrBlock = Objects.requireNonNull(cidrBlock);
        this.createTime = Objects.requireNonNull(createTime);
        this.description = Objects.requireNonNull(description);
        this.health = Objects.requireNonNull(health);
        this.healthDescription = Objects.requireNonNull(healthDescription);
        this.labels = Objects.requireNonNull(labels);
        this.name = Objects.requireNonNull(name);
        this.network = Objects.requireNonNull(network);
        this.networkEndpoints = Objects.requireNonNull(networkEndpoints);
        this.schedulingConfig = Objects.requireNonNull(schedulingConfig);
        this.serviceAccount = Objects.requireNonNull(serviceAccount);
        this.state = Objects.requireNonNull(state);
        this.symptoms = Objects.requireNonNull(symptoms);
        this.tensorflowVersion = Objects.requireNonNull(tensorflowVersion);
        this.useServiceNetworking = Objects.requireNonNull(useServiceNetworking);
    }

    public String getAcceleratorType() {
        return this.acceleratorType;
    }
    public String getApiVersion() {
        return this.apiVersion;
    }
    public String getCidrBlock() {
        return this.cidrBlock;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public String getDescription() {
        return this.description;
    }
    public String getHealth() {
        return this.health;
    }
    public String getHealthDescription() {
        return this.healthDescription;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public String getName() {
        return this.name;
    }
    public String getNetwork() {
        return this.network;
    }
    public List<NetworkEndpointResponse> getNetworkEndpoints() {
        return this.networkEndpoints;
    }
    public SchedulingConfigResponse getSchedulingConfig() {
        return this.schedulingConfig;
    }
    public String getServiceAccount() {
        return this.serviceAccount;
    }
    public String getState() {
        return this.state;
    }
    public List<SymptomResponse> getSymptoms() {
        return this.symptoms;
    }
    public String getTensorflowVersion() {
        return this.tensorflowVersion;
    }
    public Boolean getUseServiceNetworking() {
        return this.useServiceNetworking;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String acceleratorType;
        private String apiVersion;
        private String cidrBlock;
        private String createTime;
        private String description;
        private String health;
        private String healthDescription;
        private Map<String,String> labels;
        private String name;
        private String network;
        private List<NetworkEndpointResponse> networkEndpoints;
        private SchedulingConfigResponse schedulingConfig;
        private String serviceAccount;
        private String state;
        private List<SymptomResponse> symptoms;
        private String tensorflowVersion;
        private Boolean useServiceNetworking;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNodeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorType = defaults.acceleratorType;
    	      this.apiVersion = defaults.apiVersion;
    	      this.cidrBlock = defaults.cidrBlock;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.health = defaults.health;
    	      this.healthDescription = defaults.healthDescription;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkEndpoints = defaults.networkEndpoints;
    	      this.schedulingConfig = defaults.schedulingConfig;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.state = defaults.state;
    	      this.symptoms = defaults.symptoms;
    	      this.tensorflowVersion = defaults.tensorflowVersion;
    	      this.useServiceNetworking = defaults.useServiceNetworking;
        }

        public Builder setAcceleratorType(String acceleratorType) {
            this.acceleratorType = Objects.requireNonNull(acceleratorType);
            return this;
        }

        public Builder setApiVersion(String apiVersion) {
            this.apiVersion = Objects.requireNonNull(apiVersion);
            return this;
        }

        public Builder setCidrBlock(String cidrBlock) {
            this.cidrBlock = Objects.requireNonNull(cidrBlock);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setHealth(String health) {
            this.health = Objects.requireNonNull(health);
            return this;
        }

        public Builder setHealthDescription(String healthDescription) {
            this.healthDescription = Objects.requireNonNull(healthDescription);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetwork(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setNetworkEndpoints(List<NetworkEndpointResponse> networkEndpoints) {
            this.networkEndpoints = Objects.requireNonNull(networkEndpoints);
            return this;
        }

        public Builder setSchedulingConfig(SchedulingConfigResponse schedulingConfig) {
            this.schedulingConfig = Objects.requireNonNull(schedulingConfig);
            return this;
        }

        public Builder setServiceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setSymptoms(List<SymptomResponse> symptoms) {
            this.symptoms = Objects.requireNonNull(symptoms);
            return this;
        }

        public Builder setTensorflowVersion(String tensorflowVersion) {
            this.tensorflowVersion = Objects.requireNonNull(tensorflowVersion);
            return this;
        }

        public Builder setUseServiceNetworking(Boolean useServiceNetworking) {
            this.useServiceNetworking = Objects.requireNonNull(useServiceNetworking);
            return this;
        }

        public GetNodeResult build() {
            return new GetNodeResult(acceleratorType, apiVersion, cidrBlock, createTime, description, health, healthDescription, labels, name, network, networkEndpoints, schedulingConfig, serviceAccount, state, symptoms, tensorflowVersion, useServiceNetworking);
        }
    }
}
