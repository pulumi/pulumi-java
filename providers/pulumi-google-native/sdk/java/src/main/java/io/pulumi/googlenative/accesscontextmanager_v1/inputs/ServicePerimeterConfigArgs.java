// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.accesscontextmanager_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.accesscontextmanager_v1.inputs.EgressPolicyArgs;
import io.pulumi.googlenative.accesscontextmanager_v1.inputs.IngressPolicyArgs;
import io.pulumi.googlenative.accesscontextmanager_v1.inputs.VpcAccessibleServicesArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * `ServicePerimeterConfig` specifies a set of Google Cloud resources that describe specific Service Perimeter configuration.
 * 
 */
public final class ServicePerimeterConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServicePerimeterConfigArgs Empty = new ServicePerimeterConfigArgs();

    /**
     * A list of `AccessLevel` resource names that allow resources within the `ServicePerimeter` to be accessed from the internet. `AccessLevels` listed must be in the same policy as this `ServicePerimeter`. Referencing a nonexistent `AccessLevel` is a syntax error. If no `AccessLevel` names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `"accessPolicies/MY_POLICY/accessLevels/MY_LEVEL"`. For Service Perimeter Bridge, must be empty.
     * 
     */
    @Import(name="accessLevels")
      private final @Nullable Output<List<String>> accessLevels;

    public Output<List<String>> getAccessLevels() {
        return this.accessLevels == null ? Codegen.empty() : this.accessLevels;
    }

    /**
     * List of EgressPolicies to apply to the perimeter. A perimeter may have multiple EgressPolicies, each of which is evaluated separately. Access is granted if any EgressPolicy grants it. Must be empty for a perimeter bridge.
     * 
     */
    @Import(name="egressPolicies")
      private final @Nullable Output<List<EgressPolicyArgs>> egressPolicies;

    public Output<List<EgressPolicyArgs>> getEgressPolicies() {
        return this.egressPolicies == null ? Codegen.empty() : this.egressPolicies;
    }

    /**
     * List of IngressPolicies to apply to the perimeter. A perimeter may have multiple IngressPolicies, each of which is evaluated separately. Access is granted if any Ingress Policy grants it. Must be empty for a perimeter bridge.
     * 
     */
    @Import(name="ingressPolicies")
      private final @Nullable Output<List<IngressPolicyArgs>> ingressPolicies;

    public Output<List<IngressPolicyArgs>> getIngressPolicies() {
        return this.ingressPolicies == null ? Codegen.empty() : this.ingressPolicies;
    }

    /**
     * A list of Google Cloud resources that are inside of the service perimeter. Currently only projects are allowed. Format: `projects/{project_number}`
     * 
     */
    @Import(name="resources")
      private final @Nullable Output<List<String>> resources;

    public Output<List<String>> getResources() {
        return this.resources == null ? Codegen.empty() : this.resources;
    }

    /**
     * Google Cloud services that are subject to the Service Perimeter restrictions. For example, if `storage.googleapis.com` is specified, access to the storage buckets inside the perimeter must meet the perimeter's access restrictions.
     * 
     */
    @Import(name="restrictedServices")
      private final @Nullable Output<List<String>> restrictedServices;

    public Output<List<String>> getRestrictedServices() {
        return this.restrictedServices == null ? Codegen.empty() : this.restrictedServices;
    }

    /**
     * Configuration for APIs allowed within Perimeter.
     * 
     */
    @Import(name="vpcAccessibleServices")
      private final @Nullable Output<VpcAccessibleServicesArgs> vpcAccessibleServices;

    public Output<VpcAccessibleServicesArgs> getVpcAccessibleServices() {
        return this.vpcAccessibleServices == null ? Codegen.empty() : this.vpcAccessibleServices;
    }

    public ServicePerimeterConfigArgs(
        @Nullable Output<List<String>> accessLevels,
        @Nullable Output<List<EgressPolicyArgs>> egressPolicies,
        @Nullable Output<List<IngressPolicyArgs>> ingressPolicies,
        @Nullable Output<List<String>> resources,
        @Nullable Output<List<String>> restrictedServices,
        @Nullable Output<VpcAccessibleServicesArgs> vpcAccessibleServices) {
        this.accessLevels = accessLevels;
        this.egressPolicies = egressPolicies;
        this.ingressPolicies = ingressPolicies;
        this.resources = resources;
        this.restrictedServices = restrictedServices;
        this.vpcAccessibleServices = vpcAccessibleServices;
    }

    private ServicePerimeterConfigArgs() {
        this.accessLevels = Codegen.empty();
        this.egressPolicies = Codegen.empty();
        this.ingressPolicies = Codegen.empty();
        this.resources = Codegen.empty();
        this.restrictedServices = Codegen.empty();
        this.vpcAccessibleServices = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicePerimeterConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> accessLevels;
        private @Nullable Output<List<EgressPolicyArgs>> egressPolicies;
        private @Nullable Output<List<IngressPolicyArgs>> ingressPolicies;
        private @Nullable Output<List<String>> resources;
        private @Nullable Output<List<String>> restrictedServices;
        private @Nullable Output<VpcAccessibleServicesArgs> vpcAccessibleServices;

        public Builder() {
    	      // Empty
        }

        public Builder(ServicePerimeterConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevels = defaults.accessLevels;
    	      this.egressPolicies = defaults.egressPolicies;
    	      this.ingressPolicies = defaults.ingressPolicies;
    	      this.resources = defaults.resources;
    	      this.restrictedServices = defaults.restrictedServices;
    	      this.vpcAccessibleServices = defaults.vpcAccessibleServices;
        }

        public Builder accessLevels(@Nullable Output<List<String>> accessLevels) {
            this.accessLevels = accessLevels;
            return this;
        }
        public Builder accessLevels(@Nullable List<String> accessLevels) {
            this.accessLevels = Codegen.ofNullable(accessLevels);
            return this;
        }
        public Builder accessLevels(String... accessLevels) {
            return accessLevels(List.of(accessLevels));
        }
        public Builder egressPolicies(@Nullable Output<List<EgressPolicyArgs>> egressPolicies) {
            this.egressPolicies = egressPolicies;
            return this;
        }
        public Builder egressPolicies(@Nullable List<EgressPolicyArgs> egressPolicies) {
            this.egressPolicies = Codegen.ofNullable(egressPolicies);
            return this;
        }
        public Builder egressPolicies(EgressPolicyArgs... egressPolicies) {
            return egressPolicies(List.of(egressPolicies));
        }
        public Builder ingressPolicies(@Nullable Output<List<IngressPolicyArgs>> ingressPolicies) {
            this.ingressPolicies = ingressPolicies;
            return this;
        }
        public Builder ingressPolicies(@Nullable List<IngressPolicyArgs> ingressPolicies) {
            this.ingressPolicies = Codegen.ofNullable(ingressPolicies);
            return this;
        }
        public Builder ingressPolicies(IngressPolicyArgs... ingressPolicies) {
            return ingressPolicies(List.of(ingressPolicies));
        }
        public Builder resources(@Nullable Output<List<String>> resources) {
            this.resources = resources;
            return this;
        }
        public Builder resources(@Nullable List<String> resources) {
            this.resources = Codegen.ofNullable(resources);
            return this;
        }
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }
        public Builder restrictedServices(@Nullable Output<List<String>> restrictedServices) {
            this.restrictedServices = restrictedServices;
            return this;
        }
        public Builder restrictedServices(@Nullable List<String> restrictedServices) {
            this.restrictedServices = Codegen.ofNullable(restrictedServices);
            return this;
        }
        public Builder restrictedServices(String... restrictedServices) {
            return restrictedServices(List.of(restrictedServices));
        }
        public Builder vpcAccessibleServices(@Nullable Output<VpcAccessibleServicesArgs> vpcAccessibleServices) {
            this.vpcAccessibleServices = vpcAccessibleServices;
            return this;
        }
        public Builder vpcAccessibleServices(@Nullable VpcAccessibleServicesArgs vpcAccessibleServices) {
            this.vpcAccessibleServices = Codegen.ofNullable(vpcAccessibleServices);
            return this;
        }        public ServicePerimeterConfigArgs build() {
            return new ServicePerimeterConfigArgs(accessLevels, egressPolicies, ingressPolicies, resources, restrictedServices, vpcAccessibleServices);
        }
    }
}
