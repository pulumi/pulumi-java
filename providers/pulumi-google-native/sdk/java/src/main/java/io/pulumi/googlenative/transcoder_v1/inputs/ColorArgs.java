// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.transcoder_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Color preprocessing configuration.
 * 
 */
public final class ColorArgs extends io.pulumi.resources.ResourceArgs {

    public static final ColorArgs Empty = new ColorArgs();

    /**
     * Control brightness of the video. Enter a value between -1 and 1, where -1 is minimum brightness and 1 is maximum brightness. 0 is no change. The default is 0.
     * 
     */
    @InputImport(name="brightness")
    private final @Nullable Input<Double> brightness;

    public Input<Double> getBrightness() {
        return this.brightness == null ? Input.empty() : this.brightness;
    }

    /**
     * Control black and white contrast of the video. Enter a value between -1 and 1, where -1 is minimum contrast and 1 is maximum contrast. 0 is no change. The default is 0.
     * 
     */
    @InputImport(name="contrast")
    private final @Nullable Input<Double> contrast;

    public Input<Double> getContrast() {
        return this.contrast == null ? Input.empty() : this.contrast;
    }

    /**
     * Control color saturation of the video. Enter a value between -1 and 1, where -1 is fully desaturated and 1 is maximum saturation. 0 is no change. The default is 0.
     * 
     */
    @InputImport(name="saturation")
    private final @Nullable Input<Double> saturation;

    public Input<Double> getSaturation() {
        return this.saturation == null ? Input.empty() : this.saturation;
    }

    public ColorArgs(
        @Nullable Input<Double> brightness,
        @Nullable Input<Double> contrast,
        @Nullable Input<Double> saturation) {
        this.brightness = brightness;
        this.contrast = contrast;
        this.saturation = saturation;
    }

    private ColorArgs() {
        this.brightness = Input.empty();
        this.contrast = Input.empty();
        this.saturation = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ColorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Double> brightness;
        private @Nullable Input<Double> contrast;
        private @Nullable Input<Double> saturation;

        public Builder() {
    	      // Empty
        }

        public Builder(ColorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.brightness = defaults.brightness;
    	      this.contrast = defaults.contrast;
    	      this.saturation = defaults.saturation;
        }

        public Builder setBrightness(@Nullable Input<Double> brightness) {
            this.brightness = brightness;
            return this;
        }

        public Builder setBrightness(@Nullable Double brightness) {
            this.brightness = Input.ofNullable(brightness);
            return this;
        }

        public Builder setContrast(@Nullable Input<Double> contrast) {
            this.contrast = contrast;
            return this;
        }

        public Builder setContrast(@Nullable Double contrast) {
            this.contrast = Input.ofNullable(contrast);
            return this;
        }

        public Builder setSaturation(@Nullable Input<Double> saturation) {
            this.saturation = saturation;
            return this;
        }

        public Builder setSaturation(@Nullable Double saturation) {
            this.saturation = Input.ofNullable(saturation);
            return this;
        }

        public ColorArgs build() {
            return new ColorArgs(brightness, contrast, saturation);
        }
    }
}
