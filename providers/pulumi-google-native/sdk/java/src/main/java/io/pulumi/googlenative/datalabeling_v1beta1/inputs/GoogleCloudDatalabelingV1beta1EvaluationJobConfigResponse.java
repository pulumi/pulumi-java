// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datalabeling_v1beta1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.datalabeling_v1beta1.inputs.GoogleCloudDatalabelingV1beta1BoundingPolyConfigResponse;
import io.pulumi.googlenative.datalabeling_v1beta1.inputs.GoogleCloudDatalabelingV1beta1EvaluationConfigResponse;
import io.pulumi.googlenative.datalabeling_v1beta1.inputs.GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfigResponse;
import io.pulumi.googlenative.datalabeling_v1beta1.inputs.GoogleCloudDatalabelingV1beta1HumanAnnotationConfigResponse;
import io.pulumi.googlenative.datalabeling_v1beta1.inputs.GoogleCloudDatalabelingV1beta1ImageClassificationConfigResponse;
import io.pulumi.googlenative.datalabeling_v1beta1.inputs.GoogleCloudDatalabelingV1beta1InputConfigResponse;
import io.pulumi.googlenative.datalabeling_v1beta1.inputs.GoogleCloudDatalabelingV1beta1TextClassificationConfigResponse;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse Empty = new GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse();

    @InputImport(name="bigqueryImportKeys", required=true)
    private final Map<String,String> bigqueryImportKeys;

    public Map<String,String> getBigqueryImportKeys() {
        return this.bigqueryImportKeys;
    }

    @InputImport(name="boundingPolyConfig", required=true)
    private final GoogleCloudDatalabelingV1beta1BoundingPolyConfigResponse boundingPolyConfig;

    public GoogleCloudDatalabelingV1beta1BoundingPolyConfigResponse getBoundingPolyConfig() {
        return this.boundingPolyConfig;
    }

    @InputImport(name="evaluationConfig", required=true)
    private final GoogleCloudDatalabelingV1beta1EvaluationConfigResponse evaluationConfig;

    public GoogleCloudDatalabelingV1beta1EvaluationConfigResponse getEvaluationConfig() {
        return this.evaluationConfig;
    }

    @InputImport(name="evaluationJobAlertConfig", required=true)
    private final GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfigResponse evaluationJobAlertConfig;

    public GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfigResponse getEvaluationJobAlertConfig() {
        return this.evaluationJobAlertConfig;
    }

    @InputImport(name="exampleCount", required=true)
    private final Integer exampleCount;

    public Integer getExampleCount() {
        return this.exampleCount;
    }

    @InputImport(name="exampleSamplePercentage", required=true)
    private final Double exampleSamplePercentage;

    public Double getExampleSamplePercentage() {
        return this.exampleSamplePercentage;
    }

    @InputImport(name="humanAnnotationConfig", required=true)
    private final GoogleCloudDatalabelingV1beta1HumanAnnotationConfigResponse humanAnnotationConfig;

    public GoogleCloudDatalabelingV1beta1HumanAnnotationConfigResponse getHumanAnnotationConfig() {
        return this.humanAnnotationConfig;
    }

    @InputImport(name="imageClassificationConfig", required=true)
    private final GoogleCloudDatalabelingV1beta1ImageClassificationConfigResponse imageClassificationConfig;

    public GoogleCloudDatalabelingV1beta1ImageClassificationConfigResponse getImageClassificationConfig() {
        return this.imageClassificationConfig;
    }

    @InputImport(name="inputConfig", required=true)
    private final GoogleCloudDatalabelingV1beta1InputConfigResponse inputConfig;

    public GoogleCloudDatalabelingV1beta1InputConfigResponse getInputConfig() {
        return this.inputConfig;
    }

    @InputImport(name="textClassificationConfig", required=true)
    private final GoogleCloudDatalabelingV1beta1TextClassificationConfigResponse textClassificationConfig;

    public GoogleCloudDatalabelingV1beta1TextClassificationConfigResponse getTextClassificationConfig() {
        return this.textClassificationConfig;
    }

    public GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse(
        Map<String,String> bigqueryImportKeys,
        GoogleCloudDatalabelingV1beta1BoundingPolyConfigResponse boundingPolyConfig,
        GoogleCloudDatalabelingV1beta1EvaluationConfigResponse evaluationConfig,
        GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfigResponse evaluationJobAlertConfig,
        Integer exampleCount,
        Double exampleSamplePercentage,
        GoogleCloudDatalabelingV1beta1HumanAnnotationConfigResponse humanAnnotationConfig,
        GoogleCloudDatalabelingV1beta1ImageClassificationConfigResponse imageClassificationConfig,
        GoogleCloudDatalabelingV1beta1InputConfigResponse inputConfig,
        GoogleCloudDatalabelingV1beta1TextClassificationConfigResponse textClassificationConfig) {
        this.bigqueryImportKeys = Objects.requireNonNull(bigqueryImportKeys, "expected parameter 'bigqueryImportKeys' to be non-null");
        this.boundingPolyConfig = Objects.requireNonNull(boundingPolyConfig, "expected parameter 'boundingPolyConfig' to be non-null");
        this.evaluationConfig = Objects.requireNonNull(evaluationConfig, "expected parameter 'evaluationConfig' to be non-null");
        this.evaluationJobAlertConfig = Objects.requireNonNull(evaluationJobAlertConfig, "expected parameter 'evaluationJobAlertConfig' to be non-null");
        this.exampleCount = Objects.requireNonNull(exampleCount, "expected parameter 'exampleCount' to be non-null");
        this.exampleSamplePercentage = Objects.requireNonNull(exampleSamplePercentage, "expected parameter 'exampleSamplePercentage' to be non-null");
        this.humanAnnotationConfig = Objects.requireNonNull(humanAnnotationConfig, "expected parameter 'humanAnnotationConfig' to be non-null");
        this.imageClassificationConfig = Objects.requireNonNull(imageClassificationConfig, "expected parameter 'imageClassificationConfig' to be non-null");
        this.inputConfig = Objects.requireNonNull(inputConfig, "expected parameter 'inputConfig' to be non-null");
        this.textClassificationConfig = Objects.requireNonNull(textClassificationConfig, "expected parameter 'textClassificationConfig' to be non-null");
    }

    private GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse() {
        this.bigqueryImportKeys = Map.of();
        this.boundingPolyConfig = null;
        this.evaluationConfig = null;
        this.evaluationJobAlertConfig = null;
        this.exampleCount = null;
        this.exampleSamplePercentage = null;
        this.humanAnnotationConfig = null;
        this.imageClassificationConfig = null;
        this.inputConfig = null;
        this.textClassificationConfig = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> bigqueryImportKeys;
        private GoogleCloudDatalabelingV1beta1BoundingPolyConfigResponse boundingPolyConfig;
        private GoogleCloudDatalabelingV1beta1EvaluationConfigResponse evaluationConfig;
        private GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfigResponse evaluationJobAlertConfig;
        private Integer exampleCount;
        private Double exampleSamplePercentage;
        private GoogleCloudDatalabelingV1beta1HumanAnnotationConfigResponse humanAnnotationConfig;
        private GoogleCloudDatalabelingV1beta1ImageClassificationConfigResponse imageClassificationConfig;
        private GoogleCloudDatalabelingV1beta1InputConfigResponse inputConfig;
        private GoogleCloudDatalabelingV1beta1TextClassificationConfigResponse textClassificationConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryImportKeys = defaults.bigqueryImportKeys;
    	      this.boundingPolyConfig = defaults.boundingPolyConfig;
    	      this.evaluationConfig = defaults.evaluationConfig;
    	      this.evaluationJobAlertConfig = defaults.evaluationJobAlertConfig;
    	      this.exampleCount = defaults.exampleCount;
    	      this.exampleSamplePercentage = defaults.exampleSamplePercentage;
    	      this.humanAnnotationConfig = defaults.humanAnnotationConfig;
    	      this.imageClassificationConfig = defaults.imageClassificationConfig;
    	      this.inputConfig = defaults.inputConfig;
    	      this.textClassificationConfig = defaults.textClassificationConfig;
        }

        public Builder setBigqueryImportKeys(Map<String,String> bigqueryImportKeys) {
            this.bigqueryImportKeys = Objects.requireNonNull(bigqueryImportKeys);
            return this;
        }

        public Builder setBoundingPolyConfig(GoogleCloudDatalabelingV1beta1BoundingPolyConfigResponse boundingPolyConfig) {
            this.boundingPolyConfig = Objects.requireNonNull(boundingPolyConfig);
            return this;
        }

        public Builder setEvaluationConfig(GoogleCloudDatalabelingV1beta1EvaluationConfigResponse evaluationConfig) {
            this.evaluationConfig = Objects.requireNonNull(evaluationConfig);
            return this;
        }

        public Builder setEvaluationJobAlertConfig(GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfigResponse evaluationJobAlertConfig) {
            this.evaluationJobAlertConfig = Objects.requireNonNull(evaluationJobAlertConfig);
            return this;
        }

        public Builder setExampleCount(Integer exampleCount) {
            this.exampleCount = Objects.requireNonNull(exampleCount);
            return this;
        }

        public Builder setExampleSamplePercentage(Double exampleSamplePercentage) {
            this.exampleSamplePercentage = Objects.requireNonNull(exampleSamplePercentage);
            return this;
        }

        public Builder setHumanAnnotationConfig(GoogleCloudDatalabelingV1beta1HumanAnnotationConfigResponse humanAnnotationConfig) {
            this.humanAnnotationConfig = Objects.requireNonNull(humanAnnotationConfig);
            return this;
        }

        public Builder setImageClassificationConfig(GoogleCloudDatalabelingV1beta1ImageClassificationConfigResponse imageClassificationConfig) {
            this.imageClassificationConfig = Objects.requireNonNull(imageClassificationConfig);
            return this;
        }

        public Builder setInputConfig(GoogleCloudDatalabelingV1beta1InputConfigResponse inputConfig) {
            this.inputConfig = Objects.requireNonNull(inputConfig);
            return this;
        }

        public Builder setTextClassificationConfig(GoogleCloudDatalabelingV1beta1TextClassificationConfigResponse textClassificationConfig) {
            this.textClassificationConfig = Objects.requireNonNull(textClassificationConfig);
            return this;
        }

        public GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse build() {
            return new GoogleCloudDatalabelingV1beta1EvaluationJobConfigResponse(bigqueryImportKeys, boundingPolyConfig, evaluationConfig, evaluationJobAlertConfig, exampleCount, exampleSamplePercentage, humanAnnotationConfig, imageClassificationConfig, inputConfig, textClassificationConfig);
        }
    }
}
