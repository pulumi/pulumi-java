// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudtasks_v2beta2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.cloudtasks_v2beta2.enums.AppEngineHttpRequestHttpMethod;
import io.pulumi.googlenative.cloudtasks_v2beta2.inputs.AppEngineRoutingArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AppEngineHttpRequestArgs extends io.pulumi.resources.ResourceArgs {

    public static final AppEngineHttpRequestArgs Empty = new AppEngineHttpRequestArgs();

    @InputImport(name="appEngineRouting")
    private final @Nullable Input<AppEngineRoutingArgs> appEngineRouting;

    public Input<AppEngineRoutingArgs> getAppEngineRouting() {
        return this.appEngineRouting == null ? Input.empty() : this.appEngineRouting;
    }

    @InputImport(name="headers")
    private final @Nullable Input<Map<String,String>> headers;

    public Input<Map<String,String>> getHeaders() {
        return this.headers == null ? Input.empty() : this.headers;
    }

    @InputImport(name="httpMethod")
    private final @Nullable Input<AppEngineHttpRequestHttpMethod> httpMethod;

    public Input<AppEngineHttpRequestHttpMethod> getHttpMethod() {
        return this.httpMethod == null ? Input.empty() : this.httpMethod;
    }

    @InputImport(name="payload")
    private final @Nullable Input<String> payload;

    public Input<String> getPayload() {
        return this.payload == null ? Input.empty() : this.payload;
    }

    @InputImport(name="relativeUrl")
    private final @Nullable Input<String> relativeUrl;

    public Input<String> getRelativeUrl() {
        return this.relativeUrl == null ? Input.empty() : this.relativeUrl;
    }

    public AppEngineHttpRequestArgs(
        @Nullable Input<AppEngineRoutingArgs> appEngineRouting,
        @Nullable Input<Map<String,String>> headers,
        @Nullable Input<AppEngineHttpRequestHttpMethod> httpMethod,
        @Nullable Input<String> payload,
        @Nullable Input<String> relativeUrl) {
        this.appEngineRouting = appEngineRouting;
        this.headers = headers;
        this.httpMethod = httpMethod;
        this.payload = payload;
        this.relativeUrl = relativeUrl;
    }

    private AppEngineHttpRequestArgs() {
        this.appEngineRouting = Input.empty();
        this.headers = Input.empty();
        this.httpMethod = Input.empty();
        this.payload = Input.empty();
        this.relativeUrl = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppEngineHttpRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AppEngineRoutingArgs> appEngineRouting;
        private @Nullable Input<Map<String,String>> headers;
        private @Nullable Input<AppEngineHttpRequestHttpMethod> httpMethod;
        private @Nullable Input<String> payload;
        private @Nullable Input<String> relativeUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(AppEngineHttpRequestArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appEngineRouting = defaults.appEngineRouting;
    	      this.headers = defaults.headers;
    	      this.httpMethod = defaults.httpMethod;
    	      this.payload = defaults.payload;
    	      this.relativeUrl = defaults.relativeUrl;
        }

        public Builder setAppEngineRouting(@Nullable Input<AppEngineRoutingArgs> appEngineRouting) {
            this.appEngineRouting = appEngineRouting;
            return this;
        }

        public Builder setAppEngineRouting(@Nullable AppEngineRoutingArgs appEngineRouting) {
            this.appEngineRouting = Input.ofNullable(appEngineRouting);
            return this;
        }

        public Builder setHeaders(@Nullable Input<Map<String,String>> headers) {
            this.headers = headers;
            return this;
        }

        public Builder setHeaders(@Nullable Map<String,String> headers) {
            this.headers = Input.ofNullable(headers);
            return this;
        }

        public Builder setHttpMethod(@Nullable Input<AppEngineHttpRequestHttpMethod> httpMethod) {
            this.httpMethod = httpMethod;
            return this;
        }

        public Builder setHttpMethod(@Nullable AppEngineHttpRequestHttpMethod httpMethod) {
            this.httpMethod = Input.ofNullable(httpMethod);
            return this;
        }

        public Builder setPayload(@Nullable Input<String> payload) {
            this.payload = payload;
            return this;
        }

        public Builder setPayload(@Nullable String payload) {
            this.payload = Input.ofNullable(payload);
            return this;
        }

        public Builder setRelativeUrl(@Nullable Input<String> relativeUrl) {
            this.relativeUrl = relativeUrl;
            return this;
        }

        public Builder setRelativeUrl(@Nullable String relativeUrl) {
            this.relativeUrl = Input.ofNullable(relativeUrl);
            return this;
        }

        public AppEngineHttpRequestArgs build() {
            return new AppEngineHttpRequestArgs(appEngineRouting, headers, httpMethod, payload, relativeUrl);
        }
    }
}
