// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.appengine_v1beta.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An SSL certificate obtained from a certificate authority.
 * 
 */
public final class CertificateRawDataArgs extends io.pulumi.resources.ResourceArgs {

    public static final CertificateRawDataArgs Empty = new CertificateRawDataArgs();

    /**
     * Unencrypted PEM encoded RSA private key. This field is set once on certificate creation and then encrypted. The key size must be 2048 bits or fewer. Must include the header and footer. Example: -----BEGIN RSA PRIVATE KEY----- -----END RSA PRIVATE KEY----- @InputOnly
     * 
     */
    @InputImport(name="privateKey")
    private final @Nullable Input<String> privateKey;

    public Input<String> getPrivateKey() {
        return this.privateKey == null ? Input.empty() : this.privateKey;
    }

    /**
     * PEM encoded x.509 public key certificate. This field is set once on certificate creation. Must include the header and footer. Example: -----BEGIN CERTIFICATE----- -----END CERTIFICATE-----
     * 
     */
    @InputImport(name="publicCertificate")
    private final @Nullable Input<String> publicCertificate;

    public Input<String> getPublicCertificate() {
        return this.publicCertificate == null ? Input.empty() : this.publicCertificate;
    }

    public CertificateRawDataArgs(
        @Nullable Input<String> privateKey,
        @Nullable Input<String> publicCertificate) {
        this.privateKey = privateKey;
        this.publicCertificate = publicCertificate;
    }

    private CertificateRawDataArgs() {
        this.privateKey = Input.empty();
        this.publicCertificate = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateRawDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> privateKey;
        private @Nullable Input<String> publicCertificate;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateRawDataArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.privateKey = defaults.privateKey;
    	      this.publicCertificate = defaults.publicCertificate;
        }

        public Builder setPrivateKey(@Nullable Input<String> privateKey) {
            this.privateKey = privateKey;
            return this;
        }

        public Builder setPrivateKey(@Nullable String privateKey) {
            this.privateKey = Input.ofNullable(privateKey);
            return this;
        }

        public Builder setPublicCertificate(@Nullable Input<String> publicCertificate) {
            this.publicCertificate = publicCertificate;
            return this;
        }

        public Builder setPublicCertificate(@Nullable String publicCertificate) {
            this.publicCertificate = Input.ofNullable(publicCertificate);
            return this;
        }

        public CertificateRawDataArgs build() {
            return new CertificateRawDataArgs(privateKey, publicCertificate);
        }
    }
}
