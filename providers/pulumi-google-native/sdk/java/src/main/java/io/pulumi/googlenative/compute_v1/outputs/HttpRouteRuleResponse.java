// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_v1.outputs.HttpHeaderActionResponse;
import io.pulumi.googlenative.compute_v1.outputs.HttpRedirectActionResponse;
import io.pulumi.googlenative.compute_v1.outputs.HttpRouteActionResponse;
import io.pulumi.googlenative.compute_v1.outputs.HttpRouteRuleMatchResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class HttpRouteRuleResponse {
    private final String description;
    private final HttpHeaderActionResponse headerAction;
    private final List<HttpRouteRuleMatchResponse> matchRules;
    private final Integer priority;
    private final HttpRouteActionResponse routeAction;
    private final String service;
    private final HttpRedirectActionResponse urlRedirect;

    @OutputCustomType.Constructor({"description","headerAction","matchRules","priority","routeAction","service","urlRedirect"})
    private HttpRouteRuleResponse(
        String description,
        HttpHeaderActionResponse headerAction,
        List<HttpRouteRuleMatchResponse> matchRules,
        Integer priority,
        HttpRouteActionResponse routeAction,
        String service,
        HttpRedirectActionResponse urlRedirect) {
        this.description = Objects.requireNonNull(description);
        this.headerAction = Objects.requireNonNull(headerAction);
        this.matchRules = Objects.requireNonNull(matchRules);
        this.priority = Objects.requireNonNull(priority);
        this.routeAction = Objects.requireNonNull(routeAction);
        this.service = Objects.requireNonNull(service);
        this.urlRedirect = Objects.requireNonNull(urlRedirect);
    }

    public String getDescription() {
        return this.description;
    }
    public HttpHeaderActionResponse getHeaderAction() {
        return this.headerAction;
    }
    public List<HttpRouteRuleMatchResponse> getMatchRules() {
        return this.matchRules;
    }
    public Integer getPriority() {
        return this.priority;
    }
    public HttpRouteActionResponse getRouteAction() {
        return this.routeAction;
    }
    public String getService() {
        return this.service;
    }
    public HttpRedirectActionResponse getUrlRedirect() {
        return this.urlRedirect;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpRouteRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String description;
        private HttpHeaderActionResponse headerAction;
        private List<HttpRouteRuleMatchResponse> matchRules;
        private Integer priority;
        private HttpRouteActionResponse routeAction;
        private String service;
        private HttpRedirectActionResponse urlRedirect;

        public Builder() {
    	      // Empty
        }

        public Builder(HttpRouteRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.headerAction = defaults.headerAction;
    	      this.matchRules = defaults.matchRules;
    	      this.priority = defaults.priority;
    	      this.routeAction = defaults.routeAction;
    	      this.service = defaults.service;
    	      this.urlRedirect = defaults.urlRedirect;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setHeaderAction(HttpHeaderActionResponse headerAction) {
            this.headerAction = Objects.requireNonNull(headerAction);
            return this;
        }

        public Builder setMatchRules(List<HttpRouteRuleMatchResponse> matchRules) {
            this.matchRules = Objects.requireNonNull(matchRules);
            return this;
        }

        public Builder setPriority(Integer priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }

        public Builder setRouteAction(HttpRouteActionResponse routeAction) {
            this.routeAction = Objects.requireNonNull(routeAction);
            return this;
        }

        public Builder setService(String service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }

        public Builder setUrlRedirect(HttpRedirectActionResponse urlRedirect) {
            this.urlRedirect = Objects.requireNonNull(urlRedirect);
            return this;
        }

        public HttpRouteRuleResponse build() {
            return new HttpRouteRuleResponse(description, headerAction, matchRules, priority, routeAction, service, urlRedirect);
        }
    }
}
