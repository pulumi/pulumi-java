// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudtasks_v2beta2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;

@OutputCustomType
public final class RateLimitsResponse {
    private final Integer maxBurstSize;
    private final Integer maxConcurrentTasks;
    private final Double maxTasksDispatchedPerSecond;

    @OutputCustomType.Constructor({"maxBurstSize","maxConcurrentTasks","maxTasksDispatchedPerSecond"})
    private RateLimitsResponse(
        Integer maxBurstSize,
        Integer maxConcurrentTasks,
        Double maxTasksDispatchedPerSecond) {
        this.maxBurstSize = Objects.requireNonNull(maxBurstSize);
        this.maxConcurrentTasks = Objects.requireNonNull(maxConcurrentTasks);
        this.maxTasksDispatchedPerSecond = Objects.requireNonNull(maxTasksDispatchedPerSecond);
    }

    public Integer getMaxBurstSize() {
        return this.maxBurstSize;
    }
    public Integer getMaxConcurrentTasks() {
        return this.maxConcurrentTasks;
    }
    public Double getMaxTasksDispatchedPerSecond() {
        return this.maxTasksDispatchedPerSecond;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RateLimitsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer maxBurstSize;
        private Integer maxConcurrentTasks;
        private Double maxTasksDispatchedPerSecond;

        public Builder() {
    	      // Empty
        }

        public Builder(RateLimitsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxBurstSize = defaults.maxBurstSize;
    	      this.maxConcurrentTasks = defaults.maxConcurrentTasks;
    	      this.maxTasksDispatchedPerSecond = defaults.maxTasksDispatchedPerSecond;
        }

        public Builder setMaxBurstSize(Integer maxBurstSize) {
            this.maxBurstSize = Objects.requireNonNull(maxBurstSize);
            return this;
        }

        public Builder setMaxConcurrentTasks(Integer maxConcurrentTasks) {
            this.maxConcurrentTasks = Objects.requireNonNull(maxConcurrentTasks);
            return this;
        }

        public Builder setMaxTasksDispatchedPerSecond(Double maxTasksDispatchedPerSecond) {
            this.maxTasksDispatchedPerSecond = Objects.requireNonNull(maxTasksDispatchedPerSecond);
            return this;
        }

        public RateLimitsResponse build() {
            return new RateLimitsResponse(maxBurstSize, maxConcurrentTasks, maxTasksDispatchedPerSecond);
        }
    }
}
