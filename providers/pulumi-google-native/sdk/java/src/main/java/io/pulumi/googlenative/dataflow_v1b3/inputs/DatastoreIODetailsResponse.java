// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataflow_v1b3.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Metadata for a Datastore connector used by the job.
 * 
 */
public final class DatastoreIODetailsResponse extends io.pulumi.resources.InvokeArgs {

    public static final DatastoreIODetailsResponse Empty = new DatastoreIODetailsResponse();

    /**
     * Namespace used in the connection.
     * 
     */
    @InputImport(name="namespace", required=true)
      private final String namespace;

    public String getNamespace() {
        return this.namespace;
    }

    /**
     * ProjectId accessed in the connection.
     * 
     */
    @InputImport(name="project", required=true)
      private final String project;

    public String getProject() {
        return this.project;
    }

    public DatastoreIODetailsResponse(
        String namespace,
        String project) {
        this.namespace = Objects.requireNonNull(namespace, "expected parameter 'namespace' to be non-null");
        this.project = Objects.requireNonNull(project, "expected parameter 'project' to be non-null");
    }

    private DatastoreIODetailsResponse() {
        this.namespace = null;
        this.project = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatastoreIODetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String namespace;
        private String project;

        public Builder() {
    	      // Empty
        }

        public Builder(DatastoreIODetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.namespace = defaults.namespace;
    	      this.project = defaults.project;
        }

        public Builder setNamespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }

        public Builder setProject(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public DatastoreIODetailsResponse build() {
            return new DatastoreIODetailsResponse(namespace, project);
        }
    }
}
