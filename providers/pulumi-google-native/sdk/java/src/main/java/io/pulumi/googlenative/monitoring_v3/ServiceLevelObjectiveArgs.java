// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v3;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.monitoring_v3.enums.ServiceLevelObjectiveCalendarPeriod;
import io.pulumi.googlenative.monitoring_v3.inputs.ServiceLevelIndicatorArgs;
import java.lang.Double;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceLevelObjectiveArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceLevelObjectiveArgs Empty = new ServiceLevelObjectiveArgs();

    /**
     * A calendar period, semantically "since the start of the current ". At this time, only DAY, WEEK, FORTNIGHT, and MONTH are supported.
     * 
     */
    @InputImport(name="calendarPeriod")
    private final @Nullable Input<ServiceLevelObjectiveCalendarPeriod> calendarPeriod;

    public Input<ServiceLevelObjectiveCalendarPeriod> getCalendarPeriod() {
        return this.calendarPeriod == null ? Input.empty() : this.calendarPeriod;
    }

    /**
     * Name used for UI elements listing this SLO.
     * 
     */
    @InputImport(name="displayName")
    private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    /**
     * The fraction of service that must be good in order for this objective to be met. 0 < goal <= 0.999.
     * 
     */
    @InputImport(name="goal")
    private final @Nullable Input<Double> goal;

    public Input<Double> getGoal() {
        return this.goal == null ? Input.empty() : this.goal;
    }

    /**
     * Resource name for this ServiceLevelObjective. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]/serviceLevelObjectives/[SLO_NAME]
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    /**
     * A rolling time period, semantically "in the past ". Must be an integer multiple of 1 day no larger than 30 days.
     * 
     */
    @InputImport(name="rollingPeriod")
    private final @Nullable Input<String> rollingPeriod;

    public Input<String> getRollingPeriod() {
        return this.rollingPeriod == null ? Input.empty() : this.rollingPeriod;
    }

    @InputImport(name="serviceId", required=true)
    private final Input<String> serviceId;

    public Input<String> getServiceId() {
        return this.serviceId;
    }

    /**
     * The definition of good service, used to measure and calculate the quality of the Service's performance with respect to a single aspect of service quality.
     * 
     */
    @InputImport(name="serviceLevelIndicator")
    private final @Nullable Input<ServiceLevelIndicatorArgs> serviceLevelIndicator;

    public Input<ServiceLevelIndicatorArgs> getServiceLevelIndicator() {
        return this.serviceLevelIndicator == null ? Input.empty() : this.serviceLevelIndicator;
    }

    @InputImport(name="serviceLevelObjectiveId")
    private final @Nullable Input<String> serviceLevelObjectiveId;

    public Input<String> getServiceLevelObjectiveId() {
        return this.serviceLevelObjectiveId == null ? Input.empty() : this.serviceLevelObjectiveId;
    }

    /**
     * Labels which have been used to annotate the service-level objective. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
     * 
     */
    @InputImport(name="userLabels")
    private final @Nullable Input<Map<String,String>> userLabels;

    public Input<Map<String,String>> getUserLabels() {
        return this.userLabels == null ? Input.empty() : this.userLabels;
    }

    @InputImport(name="v3Id", required=true)
    private final Input<String> v3Id;

    public Input<String> getV3Id() {
        return this.v3Id;
    }

    @InputImport(name="v3Id1", required=true)
    private final Input<String> v3Id1;

    public Input<String> getV3Id1() {
        return this.v3Id1;
    }

    public ServiceLevelObjectiveArgs(
        @Nullable Input<ServiceLevelObjectiveCalendarPeriod> calendarPeriod,
        @Nullable Input<String> displayName,
        @Nullable Input<Double> goal,
        @Nullable Input<String> name,
        @Nullable Input<String> rollingPeriod,
        Input<String> serviceId,
        @Nullable Input<ServiceLevelIndicatorArgs> serviceLevelIndicator,
        @Nullable Input<String> serviceLevelObjectiveId,
        @Nullable Input<Map<String,String>> userLabels,
        Input<String> v3Id,
        Input<String> v3Id1) {
        this.calendarPeriod = calendarPeriod;
        this.displayName = displayName;
        this.goal = goal;
        this.name = name;
        this.rollingPeriod = rollingPeriod;
        this.serviceId = Objects.requireNonNull(serviceId, "expected parameter 'serviceId' to be non-null");
        this.serviceLevelIndicator = serviceLevelIndicator;
        this.serviceLevelObjectiveId = serviceLevelObjectiveId;
        this.userLabels = userLabels;
        this.v3Id = Objects.requireNonNull(v3Id, "expected parameter 'v3Id' to be non-null");
        this.v3Id1 = Objects.requireNonNull(v3Id1, "expected parameter 'v3Id1' to be non-null");
    }

    private ServiceLevelObjectiveArgs() {
        this.calendarPeriod = Input.empty();
        this.displayName = Input.empty();
        this.goal = Input.empty();
        this.name = Input.empty();
        this.rollingPeriod = Input.empty();
        this.serviceId = Input.empty();
        this.serviceLevelIndicator = Input.empty();
        this.serviceLevelObjectiveId = Input.empty();
        this.userLabels = Input.empty();
        this.v3Id = Input.empty();
        this.v3Id1 = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceLevelObjectiveArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ServiceLevelObjectiveCalendarPeriod> calendarPeriod;
        private @Nullable Input<String> displayName;
        private @Nullable Input<Double> goal;
        private @Nullable Input<String> name;
        private @Nullable Input<String> rollingPeriod;
        private Input<String> serviceId;
        private @Nullable Input<ServiceLevelIndicatorArgs> serviceLevelIndicator;
        private @Nullable Input<String> serviceLevelObjectiveId;
        private @Nullable Input<Map<String,String>> userLabels;
        private Input<String> v3Id;
        private Input<String> v3Id1;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceLevelObjectiveArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.calendarPeriod = defaults.calendarPeriod;
    	      this.displayName = defaults.displayName;
    	      this.goal = defaults.goal;
    	      this.name = defaults.name;
    	      this.rollingPeriod = defaults.rollingPeriod;
    	      this.serviceId = defaults.serviceId;
    	      this.serviceLevelIndicator = defaults.serviceLevelIndicator;
    	      this.serviceLevelObjectiveId = defaults.serviceLevelObjectiveId;
    	      this.userLabels = defaults.userLabels;
    	      this.v3Id = defaults.v3Id;
    	      this.v3Id1 = defaults.v3Id1;
        }

        public Builder setCalendarPeriod(@Nullable Input<ServiceLevelObjectiveCalendarPeriod> calendarPeriod) {
            this.calendarPeriod = calendarPeriod;
            return this;
        }

        public Builder setCalendarPeriod(@Nullable ServiceLevelObjectiveCalendarPeriod calendarPeriod) {
            this.calendarPeriod = Input.ofNullable(calendarPeriod);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setGoal(@Nullable Input<Double> goal) {
            this.goal = goal;
            return this;
        }

        public Builder setGoal(@Nullable Double goal) {
            this.goal = Input.ofNullable(goal);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setRollingPeriod(@Nullable Input<String> rollingPeriod) {
            this.rollingPeriod = rollingPeriod;
            return this;
        }

        public Builder setRollingPeriod(@Nullable String rollingPeriod) {
            this.rollingPeriod = Input.ofNullable(rollingPeriod);
            return this;
        }

        public Builder setServiceId(Input<String> serviceId) {
            this.serviceId = Objects.requireNonNull(serviceId);
            return this;
        }

        public Builder setServiceId(String serviceId) {
            this.serviceId = Input.of(Objects.requireNonNull(serviceId));
            return this;
        }

        public Builder setServiceLevelIndicator(@Nullable Input<ServiceLevelIndicatorArgs> serviceLevelIndicator) {
            this.serviceLevelIndicator = serviceLevelIndicator;
            return this;
        }

        public Builder setServiceLevelIndicator(@Nullable ServiceLevelIndicatorArgs serviceLevelIndicator) {
            this.serviceLevelIndicator = Input.ofNullable(serviceLevelIndicator);
            return this;
        }

        public Builder setServiceLevelObjectiveId(@Nullable Input<String> serviceLevelObjectiveId) {
            this.serviceLevelObjectiveId = serviceLevelObjectiveId;
            return this;
        }

        public Builder setServiceLevelObjectiveId(@Nullable String serviceLevelObjectiveId) {
            this.serviceLevelObjectiveId = Input.ofNullable(serviceLevelObjectiveId);
            return this;
        }

        public Builder setUserLabels(@Nullable Input<Map<String,String>> userLabels) {
            this.userLabels = userLabels;
            return this;
        }

        public Builder setUserLabels(@Nullable Map<String,String> userLabels) {
            this.userLabels = Input.ofNullable(userLabels);
            return this;
        }

        public Builder setV3Id(Input<String> v3Id) {
            this.v3Id = Objects.requireNonNull(v3Id);
            return this;
        }

        public Builder setV3Id(String v3Id) {
            this.v3Id = Input.of(Objects.requireNonNull(v3Id));
            return this;
        }

        public Builder setV3Id1(Input<String> v3Id1) {
            this.v3Id1 = Objects.requireNonNull(v3Id1);
            return this;
        }

        public Builder setV3Id1(String v3Id1) {
            this.v3Id1 = Input.of(Objects.requireNonNull(v3Id1));
            return this;
        }

        public ServiceLevelObjectiveArgs build() {
            return new ServiceLevelObjectiveArgs(calendarPeriod, displayName, goal, name, rollingPeriod, serviceId, serviceLevelIndicator, serviceLevelObjectiveId, userLabels, v3Id, v3Id1);
        }
    }
}
