// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_alpha.outputs.CustomerEncryptionKeyResponse;
import io.pulumi.googlenative.compute_alpha.outputs.GuestOsFeatureResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class AttachedDiskInitializeParamsResponse {
    private final String architecture;
    private final String description;
    private final String diskName;
    private final String diskSizeGb;
    private final String diskType;
    private final List<GuestOsFeatureResponse> guestOsFeatures;
    private final Map<String,String> labels;
    private final List<String> licenseCodes;
    private final List<String> licenses;
    private final Boolean multiWriter;
    private final String onUpdateAction;
    private final String provisionedIops;
    private final List<String> replicaZones;
    private final List<String> resourcePolicies;
    private final String sourceImage;
    private final CustomerEncryptionKeyResponse sourceImageEncryptionKey;
    private final String sourceInstantSnapshot;
    private final String sourceSnapshot;
    private final CustomerEncryptionKeyResponse sourceSnapshotEncryptionKey;

    @OutputCustomType.Constructor({"architecture","description","diskName","diskSizeGb","diskType","guestOsFeatures","labels","licenseCodes","licenses","multiWriter","onUpdateAction","provisionedIops","replicaZones","resourcePolicies","sourceImage","sourceImageEncryptionKey","sourceInstantSnapshot","sourceSnapshot","sourceSnapshotEncryptionKey"})
    private AttachedDiskInitializeParamsResponse(
        String architecture,
        String description,
        String diskName,
        String diskSizeGb,
        String diskType,
        List<GuestOsFeatureResponse> guestOsFeatures,
        Map<String,String> labels,
        List<String> licenseCodes,
        List<String> licenses,
        Boolean multiWriter,
        String onUpdateAction,
        String provisionedIops,
        List<String> replicaZones,
        List<String> resourcePolicies,
        String sourceImage,
        CustomerEncryptionKeyResponse sourceImageEncryptionKey,
        String sourceInstantSnapshot,
        String sourceSnapshot,
        CustomerEncryptionKeyResponse sourceSnapshotEncryptionKey) {
        this.architecture = Objects.requireNonNull(architecture);
        this.description = Objects.requireNonNull(description);
        this.diskName = Objects.requireNonNull(diskName);
        this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
        this.diskType = Objects.requireNonNull(diskType);
        this.guestOsFeatures = Objects.requireNonNull(guestOsFeatures);
        this.labels = Objects.requireNonNull(labels);
        this.licenseCodes = Objects.requireNonNull(licenseCodes);
        this.licenses = Objects.requireNonNull(licenses);
        this.multiWriter = Objects.requireNonNull(multiWriter);
        this.onUpdateAction = Objects.requireNonNull(onUpdateAction);
        this.provisionedIops = Objects.requireNonNull(provisionedIops);
        this.replicaZones = Objects.requireNonNull(replicaZones);
        this.resourcePolicies = Objects.requireNonNull(resourcePolicies);
        this.sourceImage = Objects.requireNonNull(sourceImage);
        this.sourceImageEncryptionKey = Objects.requireNonNull(sourceImageEncryptionKey);
        this.sourceInstantSnapshot = Objects.requireNonNull(sourceInstantSnapshot);
        this.sourceSnapshot = Objects.requireNonNull(sourceSnapshot);
        this.sourceSnapshotEncryptionKey = Objects.requireNonNull(sourceSnapshotEncryptionKey);
    }

    public String getArchitecture() {
        return this.architecture;
    }
    public String getDescription() {
        return this.description;
    }
    public String getDiskName() {
        return this.diskName;
    }
    public String getDiskSizeGb() {
        return this.diskSizeGb;
    }
    public String getDiskType() {
        return this.diskType;
    }
    public List<GuestOsFeatureResponse> getGuestOsFeatures() {
        return this.guestOsFeatures;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public List<String> getLicenseCodes() {
        return this.licenseCodes;
    }
    public List<String> getLicenses() {
        return this.licenses;
    }
    public Boolean getMultiWriter() {
        return this.multiWriter;
    }
    public String getOnUpdateAction() {
        return this.onUpdateAction;
    }
    public String getProvisionedIops() {
        return this.provisionedIops;
    }
    public List<String> getReplicaZones() {
        return this.replicaZones;
    }
    public List<String> getResourcePolicies() {
        return this.resourcePolicies;
    }
    public String getSourceImage() {
        return this.sourceImage;
    }
    public CustomerEncryptionKeyResponse getSourceImageEncryptionKey() {
        return this.sourceImageEncryptionKey;
    }
    public String getSourceInstantSnapshot() {
        return this.sourceInstantSnapshot;
    }
    public String getSourceSnapshot() {
        return this.sourceSnapshot;
    }
    public CustomerEncryptionKeyResponse getSourceSnapshotEncryptionKey() {
        return this.sourceSnapshotEncryptionKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AttachedDiskInitializeParamsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String architecture;
        private String description;
        private String diskName;
        private String diskSizeGb;
        private String diskType;
        private List<GuestOsFeatureResponse> guestOsFeatures;
        private Map<String,String> labels;
        private List<String> licenseCodes;
        private List<String> licenses;
        private Boolean multiWriter;
        private String onUpdateAction;
        private String provisionedIops;
        private List<String> replicaZones;
        private List<String> resourcePolicies;
        private String sourceImage;
        private CustomerEncryptionKeyResponse sourceImageEncryptionKey;
        private String sourceInstantSnapshot;
        private String sourceSnapshot;
        private CustomerEncryptionKeyResponse sourceSnapshotEncryptionKey;

        public Builder() {
    	      // Empty
        }

        public Builder(AttachedDiskInitializeParamsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.description = defaults.description;
    	      this.diskName = defaults.diskName;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.guestOsFeatures = defaults.guestOsFeatures;
    	      this.labels = defaults.labels;
    	      this.licenseCodes = defaults.licenseCodes;
    	      this.licenses = defaults.licenses;
    	      this.multiWriter = defaults.multiWriter;
    	      this.onUpdateAction = defaults.onUpdateAction;
    	      this.provisionedIops = defaults.provisionedIops;
    	      this.replicaZones = defaults.replicaZones;
    	      this.resourcePolicies = defaults.resourcePolicies;
    	      this.sourceImage = defaults.sourceImage;
    	      this.sourceImageEncryptionKey = defaults.sourceImageEncryptionKey;
    	      this.sourceInstantSnapshot = defaults.sourceInstantSnapshot;
    	      this.sourceSnapshot = defaults.sourceSnapshot;
    	      this.sourceSnapshotEncryptionKey = defaults.sourceSnapshotEncryptionKey;
        }

        public Builder setArchitecture(String architecture) {
            this.architecture = Objects.requireNonNull(architecture);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDiskName(String diskName) {
            this.diskName = Objects.requireNonNull(diskName);
            return this;
        }

        public Builder setDiskSizeGb(String diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }

        public Builder setDiskType(String diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }

        public Builder setGuestOsFeatures(List<GuestOsFeatureResponse> guestOsFeatures) {
            this.guestOsFeatures = Objects.requireNonNull(guestOsFeatures);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setLicenseCodes(List<String> licenseCodes) {
            this.licenseCodes = Objects.requireNonNull(licenseCodes);
            return this;
        }

        public Builder setLicenses(List<String> licenses) {
            this.licenses = Objects.requireNonNull(licenses);
            return this;
        }

        public Builder setMultiWriter(Boolean multiWriter) {
            this.multiWriter = Objects.requireNonNull(multiWriter);
            return this;
        }

        public Builder setOnUpdateAction(String onUpdateAction) {
            this.onUpdateAction = Objects.requireNonNull(onUpdateAction);
            return this;
        }

        public Builder setProvisionedIops(String provisionedIops) {
            this.provisionedIops = Objects.requireNonNull(provisionedIops);
            return this;
        }

        public Builder setReplicaZones(List<String> replicaZones) {
            this.replicaZones = Objects.requireNonNull(replicaZones);
            return this;
        }

        public Builder setResourcePolicies(List<String> resourcePolicies) {
            this.resourcePolicies = Objects.requireNonNull(resourcePolicies);
            return this;
        }

        public Builder setSourceImage(String sourceImage) {
            this.sourceImage = Objects.requireNonNull(sourceImage);
            return this;
        }

        public Builder setSourceImageEncryptionKey(CustomerEncryptionKeyResponse sourceImageEncryptionKey) {
            this.sourceImageEncryptionKey = Objects.requireNonNull(sourceImageEncryptionKey);
            return this;
        }

        public Builder setSourceInstantSnapshot(String sourceInstantSnapshot) {
            this.sourceInstantSnapshot = Objects.requireNonNull(sourceInstantSnapshot);
            return this;
        }

        public Builder setSourceSnapshot(String sourceSnapshot) {
            this.sourceSnapshot = Objects.requireNonNull(sourceSnapshot);
            return this;
        }

        public Builder setSourceSnapshotEncryptionKey(CustomerEncryptionKeyResponse sourceSnapshotEncryptionKey) {
            this.sourceSnapshotEncryptionKey = Objects.requireNonNull(sourceSnapshotEncryptionKey);
            return this;
        }

        public AttachedDiskInitializeParamsResponse build() {
            return new AttachedDiskInitializeParamsResponse(architecture, description, diskName, diskSizeGb, diskType, guestOsFeatures, labels, licenseCodes, licenses, multiWriter, onUpdateAction, provisionedIops, replicaZones, resourcePolicies, sourceImage, sourceImageEncryptionKey, sourceInstantSnapshot, sourceSnapshot, sourceSnapshotEncryptionKey);
        }
    }
}
