// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigtableadmin_v2.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;


/**
 * Limits for the number of nodes a Cluster can autoscale up/down to.
 * 
 */
public final class AutoscalingLimitsResponse extends io.pulumi.resources.InvokeArgs {

    public static final AutoscalingLimitsResponse Empty = new AutoscalingLimitsResponse();

    /**
     * Maximum number of nodes to scale up to.
     * 
     */
    @InputImport(name="maxServeNodes", required=true)
      private final Integer maxServeNodes;

    public Integer getMaxServeNodes() {
        return this.maxServeNodes;
    }

    /**
     * Minimum number of nodes to scale down to.
     * 
     */
    @InputImport(name="minServeNodes", required=true)
      private final Integer minServeNodes;

    public Integer getMinServeNodes() {
        return this.minServeNodes;
    }

    public AutoscalingLimitsResponse(
        Integer maxServeNodes,
        Integer minServeNodes) {
        this.maxServeNodes = Objects.requireNonNull(maxServeNodes, "expected parameter 'maxServeNodes' to be non-null");
        this.minServeNodes = Objects.requireNonNull(minServeNodes, "expected parameter 'minServeNodes' to be non-null");
    }

    private AutoscalingLimitsResponse() {
        this.maxServeNodes = null;
        this.minServeNodes = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoscalingLimitsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer maxServeNodes;
        private Integer minServeNodes;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoscalingLimitsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxServeNodes = defaults.maxServeNodes;
    	      this.minServeNodes = defaults.minServeNodes;
        }

        public Builder setMaxServeNodes(Integer maxServeNodes) {
            this.maxServeNodes = Objects.requireNonNull(maxServeNodes);
            return this;
        }

        public Builder setMinServeNodes(Integer minServeNodes) {
            this.minServeNodes = Objects.requireNonNull(minServeNodes);
            return this;
        }
        public AutoscalingLimitsResponse build() {
            return new AutoscalingLimitsResponse(maxServeNodes, minServeNodes);
        }
    }
}
