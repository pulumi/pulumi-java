// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datamigration_v1beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.datamigration_v1beta1.enums.CloudSqlSettingsActivationPolicy;
import io.pulumi.googlenative.datamigration_v1beta1.enums.CloudSqlSettingsDataDiskType;
import io.pulumi.googlenative.datamigration_v1beta1.enums.CloudSqlSettingsDatabaseVersion;
import io.pulumi.googlenative.datamigration_v1beta1.inputs.SqlIpConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CloudSqlSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final CloudSqlSettingsArgs Empty = new CloudSqlSettingsArgs();

    @InputImport(name="activationPolicy")
    private final @Nullable Input<CloudSqlSettingsActivationPolicy> activationPolicy;

    public Input<CloudSqlSettingsActivationPolicy> getActivationPolicy() {
        return this.activationPolicy == null ? Input.empty() : this.activationPolicy;
    }

    @InputImport(name="autoStorageIncrease")
    private final @Nullable Input<Boolean> autoStorageIncrease;

    public Input<Boolean> getAutoStorageIncrease() {
        return this.autoStorageIncrease == null ? Input.empty() : this.autoStorageIncrease;
    }

    @InputImport(name="dataDiskSizeGb")
    private final @Nullable Input<String> dataDiskSizeGb;

    public Input<String> getDataDiskSizeGb() {
        return this.dataDiskSizeGb == null ? Input.empty() : this.dataDiskSizeGb;
    }

    @InputImport(name="dataDiskType")
    private final @Nullable Input<CloudSqlSettingsDataDiskType> dataDiskType;

    public Input<CloudSqlSettingsDataDiskType> getDataDiskType() {
        return this.dataDiskType == null ? Input.empty() : this.dataDiskType;
    }

    @InputImport(name="databaseFlags")
    private final @Nullable Input<Map<String,String>> databaseFlags;

    public Input<Map<String,String>> getDatabaseFlags() {
        return this.databaseFlags == null ? Input.empty() : this.databaseFlags;
    }

    @InputImport(name="databaseVersion")
    private final @Nullable Input<CloudSqlSettingsDatabaseVersion> databaseVersion;

    public Input<CloudSqlSettingsDatabaseVersion> getDatabaseVersion() {
        return this.databaseVersion == null ? Input.empty() : this.databaseVersion;
    }

    @InputImport(name="ipConfig")
    private final @Nullable Input<SqlIpConfigArgs> ipConfig;

    public Input<SqlIpConfigArgs> getIpConfig() {
        return this.ipConfig == null ? Input.empty() : this.ipConfig;
    }

    @InputImport(name="rootPassword")
    private final @Nullable Input<String> rootPassword;

    public Input<String> getRootPassword() {
        return this.rootPassword == null ? Input.empty() : this.rootPassword;
    }

    @InputImport(name="sourceId")
    private final @Nullable Input<String> sourceId;

    public Input<String> getSourceId() {
        return this.sourceId == null ? Input.empty() : this.sourceId;
    }

    @InputImport(name="storageAutoResizeLimit")
    private final @Nullable Input<String> storageAutoResizeLimit;

    public Input<String> getStorageAutoResizeLimit() {
        return this.storageAutoResizeLimit == null ? Input.empty() : this.storageAutoResizeLimit;
    }

    @InputImport(name="tier")
    private final @Nullable Input<String> tier;

    public Input<String> getTier() {
        return this.tier == null ? Input.empty() : this.tier;
    }

    @InputImport(name="userLabels")
    private final @Nullable Input<Map<String,String>> userLabels;

    public Input<Map<String,String>> getUserLabels() {
        return this.userLabels == null ? Input.empty() : this.userLabels;
    }

    @InputImport(name="zone")
    private final @Nullable Input<String> zone;

    public Input<String> getZone() {
        return this.zone == null ? Input.empty() : this.zone;
    }

    public CloudSqlSettingsArgs(
        @Nullable Input<CloudSqlSettingsActivationPolicy> activationPolicy,
        @Nullable Input<Boolean> autoStorageIncrease,
        @Nullable Input<String> dataDiskSizeGb,
        @Nullable Input<CloudSqlSettingsDataDiskType> dataDiskType,
        @Nullable Input<Map<String,String>> databaseFlags,
        @Nullable Input<CloudSqlSettingsDatabaseVersion> databaseVersion,
        @Nullable Input<SqlIpConfigArgs> ipConfig,
        @Nullable Input<String> rootPassword,
        @Nullable Input<String> sourceId,
        @Nullable Input<String> storageAutoResizeLimit,
        @Nullable Input<String> tier,
        @Nullable Input<Map<String,String>> userLabels,
        @Nullable Input<String> zone) {
        this.activationPolicy = activationPolicy;
        this.autoStorageIncrease = autoStorageIncrease;
        this.dataDiskSizeGb = dataDiskSizeGb;
        this.dataDiskType = dataDiskType;
        this.databaseFlags = databaseFlags;
        this.databaseVersion = databaseVersion;
        this.ipConfig = ipConfig;
        this.rootPassword = rootPassword;
        this.sourceId = sourceId;
        this.storageAutoResizeLimit = storageAutoResizeLimit;
        this.tier = tier;
        this.userLabels = userLabels;
        this.zone = zone;
    }

    private CloudSqlSettingsArgs() {
        this.activationPolicy = Input.empty();
        this.autoStorageIncrease = Input.empty();
        this.dataDiskSizeGb = Input.empty();
        this.dataDiskType = Input.empty();
        this.databaseFlags = Input.empty();
        this.databaseVersion = Input.empty();
        this.ipConfig = Input.empty();
        this.rootPassword = Input.empty();
        this.sourceId = Input.empty();
        this.storageAutoResizeLimit = Input.empty();
        this.tier = Input.empty();
        this.userLabels = Input.empty();
        this.zone = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudSqlSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<CloudSqlSettingsActivationPolicy> activationPolicy;
        private @Nullable Input<Boolean> autoStorageIncrease;
        private @Nullable Input<String> dataDiskSizeGb;
        private @Nullable Input<CloudSqlSettingsDataDiskType> dataDiskType;
        private @Nullable Input<Map<String,String>> databaseFlags;
        private @Nullable Input<CloudSqlSettingsDatabaseVersion> databaseVersion;
        private @Nullable Input<SqlIpConfigArgs> ipConfig;
        private @Nullable Input<String> rootPassword;
        private @Nullable Input<String> sourceId;
        private @Nullable Input<String> storageAutoResizeLimit;
        private @Nullable Input<String> tier;
        private @Nullable Input<Map<String,String>> userLabels;
        private @Nullable Input<String> zone;

        public Builder() {
    	      // Empty
        }

        public Builder(CloudSqlSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activationPolicy = defaults.activationPolicy;
    	      this.autoStorageIncrease = defaults.autoStorageIncrease;
    	      this.dataDiskSizeGb = defaults.dataDiskSizeGb;
    	      this.dataDiskType = defaults.dataDiskType;
    	      this.databaseFlags = defaults.databaseFlags;
    	      this.databaseVersion = defaults.databaseVersion;
    	      this.ipConfig = defaults.ipConfig;
    	      this.rootPassword = defaults.rootPassword;
    	      this.sourceId = defaults.sourceId;
    	      this.storageAutoResizeLimit = defaults.storageAutoResizeLimit;
    	      this.tier = defaults.tier;
    	      this.userLabels = defaults.userLabels;
    	      this.zone = defaults.zone;
        }

        public Builder setActivationPolicy(@Nullable Input<CloudSqlSettingsActivationPolicy> activationPolicy) {
            this.activationPolicy = activationPolicy;
            return this;
        }

        public Builder setActivationPolicy(@Nullable CloudSqlSettingsActivationPolicy activationPolicy) {
            this.activationPolicy = Input.ofNullable(activationPolicy);
            return this;
        }

        public Builder setAutoStorageIncrease(@Nullable Input<Boolean> autoStorageIncrease) {
            this.autoStorageIncrease = autoStorageIncrease;
            return this;
        }

        public Builder setAutoStorageIncrease(@Nullable Boolean autoStorageIncrease) {
            this.autoStorageIncrease = Input.ofNullable(autoStorageIncrease);
            return this;
        }

        public Builder setDataDiskSizeGb(@Nullable Input<String> dataDiskSizeGb) {
            this.dataDiskSizeGb = dataDiskSizeGb;
            return this;
        }

        public Builder setDataDiskSizeGb(@Nullable String dataDiskSizeGb) {
            this.dataDiskSizeGb = Input.ofNullable(dataDiskSizeGb);
            return this;
        }

        public Builder setDataDiskType(@Nullable Input<CloudSqlSettingsDataDiskType> dataDiskType) {
            this.dataDiskType = dataDiskType;
            return this;
        }

        public Builder setDataDiskType(@Nullable CloudSqlSettingsDataDiskType dataDiskType) {
            this.dataDiskType = Input.ofNullable(dataDiskType);
            return this;
        }

        public Builder setDatabaseFlags(@Nullable Input<Map<String,String>> databaseFlags) {
            this.databaseFlags = databaseFlags;
            return this;
        }

        public Builder setDatabaseFlags(@Nullable Map<String,String> databaseFlags) {
            this.databaseFlags = Input.ofNullable(databaseFlags);
            return this;
        }

        public Builder setDatabaseVersion(@Nullable Input<CloudSqlSettingsDatabaseVersion> databaseVersion) {
            this.databaseVersion = databaseVersion;
            return this;
        }

        public Builder setDatabaseVersion(@Nullable CloudSqlSettingsDatabaseVersion databaseVersion) {
            this.databaseVersion = Input.ofNullable(databaseVersion);
            return this;
        }

        public Builder setIpConfig(@Nullable Input<SqlIpConfigArgs> ipConfig) {
            this.ipConfig = ipConfig;
            return this;
        }

        public Builder setIpConfig(@Nullable SqlIpConfigArgs ipConfig) {
            this.ipConfig = Input.ofNullable(ipConfig);
            return this;
        }

        public Builder setRootPassword(@Nullable Input<String> rootPassword) {
            this.rootPassword = rootPassword;
            return this;
        }

        public Builder setRootPassword(@Nullable String rootPassword) {
            this.rootPassword = Input.ofNullable(rootPassword);
            return this;
        }

        public Builder setSourceId(@Nullable Input<String> sourceId) {
            this.sourceId = sourceId;
            return this;
        }

        public Builder setSourceId(@Nullable String sourceId) {
            this.sourceId = Input.ofNullable(sourceId);
            return this;
        }

        public Builder setStorageAutoResizeLimit(@Nullable Input<String> storageAutoResizeLimit) {
            this.storageAutoResizeLimit = storageAutoResizeLimit;
            return this;
        }

        public Builder setStorageAutoResizeLimit(@Nullable String storageAutoResizeLimit) {
            this.storageAutoResizeLimit = Input.ofNullable(storageAutoResizeLimit);
            return this;
        }

        public Builder setTier(@Nullable Input<String> tier) {
            this.tier = tier;
            return this;
        }

        public Builder setTier(@Nullable String tier) {
            this.tier = Input.ofNullable(tier);
            return this;
        }

        public Builder setUserLabels(@Nullable Input<Map<String,String>> userLabels) {
            this.userLabels = userLabels;
            return this;
        }

        public Builder setUserLabels(@Nullable Map<String,String> userLabels) {
            this.userLabels = Input.ofNullable(userLabels);
            return this;
        }

        public Builder setZone(@Nullable Input<String> zone) {
            this.zone = zone;
            return this;
        }

        public Builder setZone(@Nullable String zone) {
            this.zone = Input.ofNullable(zone);
            return this;
        }

        public CloudSqlSettingsArgs build() {
            return new CloudSqlSettingsArgs(activationPolicy, autoStorageIncrease, dataDiskSizeGb, dataDiskType, databaseFlags, databaseVersion, ipConfig, rootPassword, sourceId, storageAutoResizeLimit, tier, userLabels, zone);
        }
    }
}
