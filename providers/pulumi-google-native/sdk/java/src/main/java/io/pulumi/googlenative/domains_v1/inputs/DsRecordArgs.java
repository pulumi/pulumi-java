// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.domains_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.domains_v1.enums.DsRecordAlgorithm;
import io.pulumi.googlenative.domains_v1.enums.DsRecordDigestType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DsRecordArgs extends io.pulumi.resources.ResourceArgs {

    public static final DsRecordArgs Empty = new DsRecordArgs();

    @InputImport(name="algorithm")
    private final @Nullable Input<DsRecordAlgorithm> algorithm;

    public Input<DsRecordAlgorithm> getAlgorithm() {
        return this.algorithm == null ? Input.empty() : this.algorithm;
    }

    @InputImport(name="digest")
    private final @Nullable Input<String> digest;

    public Input<String> getDigest() {
        return this.digest == null ? Input.empty() : this.digest;
    }

    @InputImport(name="digestType")
    private final @Nullable Input<DsRecordDigestType> digestType;

    public Input<DsRecordDigestType> getDigestType() {
        return this.digestType == null ? Input.empty() : this.digestType;
    }

    @InputImport(name="keyTag")
    private final @Nullable Input<Integer> keyTag;

    public Input<Integer> getKeyTag() {
        return this.keyTag == null ? Input.empty() : this.keyTag;
    }

    public DsRecordArgs(
        @Nullable Input<DsRecordAlgorithm> algorithm,
        @Nullable Input<String> digest,
        @Nullable Input<DsRecordDigestType> digestType,
        @Nullable Input<Integer> keyTag) {
        this.algorithm = algorithm;
        this.digest = digest;
        this.digestType = digestType;
        this.keyTag = keyTag;
    }

    private DsRecordArgs() {
        this.algorithm = Input.empty();
        this.digest = Input.empty();
        this.digestType = Input.empty();
        this.keyTag = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DsRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<DsRecordAlgorithm> algorithm;
        private @Nullable Input<String> digest;
        private @Nullable Input<DsRecordDigestType> digestType;
        private @Nullable Input<Integer> keyTag;

        public Builder() {
    	      // Empty
        }

        public Builder(DsRecordArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.digest = defaults.digest;
    	      this.digestType = defaults.digestType;
    	      this.keyTag = defaults.keyTag;
        }

        public Builder setAlgorithm(@Nullable Input<DsRecordAlgorithm> algorithm) {
            this.algorithm = algorithm;
            return this;
        }

        public Builder setAlgorithm(@Nullable DsRecordAlgorithm algorithm) {
            this.algorithm = Input.ofNullable(algorithm);
            return this;
        }

        public Builder setDigest(@Nullable Input<String> digest) {
            this.digest = digest;
            return this;
        }

        public Builder setDigest(@Nullable String digest) {
            this.digest = Input.ofNullable(digest);
            return this;
        }

        public Builder setDigestType(@Nullable Input<DsRecordDigestType> digestType) {
            this.digestType = digestType;
            return this;
        }

        public Builder setDigestType(@Nullable DsRecordDigestType digestType) {
            this.digestType = Input.ofNullable(digestType);
            return this;
        }

        public Builder setKeyTag(@Nullable Input<Integer> keyTag) {
            this.keyTag = keyTag;
            return this;
        }

        public Builder setKeyTag(@Nullable Integer keyTag) {
            this.keyTag = Input.ofNullable(keyTag);
            return this;
        }

        public DsRecordArgs build() {
            return new DsRecordArgs(algorithm, digest, digestType, keyTag);
        }
    }
}
