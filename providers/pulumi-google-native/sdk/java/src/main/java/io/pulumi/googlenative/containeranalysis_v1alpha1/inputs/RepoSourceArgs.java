// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * RepoSource describes the location of the source in a Google Cloud Source Repository.
 * 
 */
public final class RepoSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final RepoSourceArgs Empty = new RepoSourceArgs();

    /**
     * Name of the branch to build.
     * 
     */
    @InputImport(name="branchName")
      private final @Nullable Output<String> branchName;

    public Output<String> getBranchName() {
        return this.branchName == null ? Output.empty() : this.branchName;
    }

    /**
     * Explicit commit SHA to build.
     * 
     */
    @InputImport(name="commitSha")
      private final @Nullable Output<String> commitSha;

    public Output<String> getCommitSha() {
        return this.commitSha == null ? Output.empty() : this.commitSha;
    }

    /**
     * ID of the project that owns the repo.
     * 
     */
    @InputImport(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Name of the repo.
     * 
     */
    @InputImport(name="repoName")
      private final @Nullable Output<String> repoName;

    public Output<String> getRepoName() {
        return this.repoName == null ? Output.empty() : this.repoName;
    }

    /**
     * Name of the tag to build.
     * 
     */
    @InputImport(name="tagName")
      private final @Nullable Output<String> tagName;

    public Output<String> getTagName() {
        return this.tagName == null ? Output.empty() : this.tagName;
    }

    public RepoSourceArgs(
        @Nullable Output<String> branchName,
        @Nullable Output<String> commitSha,
        @Nullable Output<String> project,
        @Nullable Output<String> repoName,
        @Nullable Output<String> tagName) {
        this.branchName = branchName;
        this.commitSha = commitSha;
        this.project = project;
        this.repoName = repoName;
        this.tagName = tagName;
    }

    private RepoSourceArgs() {
        this.branchName = Output.empty();
        this.commitSha = Output.empty();
        this.project = Output.empty();
        this.repoName = Output.empty();
        this.tagName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepoSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> branchName;
        private @Nullable Output<String> commitSha;
        private @Nullable Output<String> project;
        private @Nullable Output<String> repoName;
        private @Nullable Output<String> tagName;

        public Builder() {
    	      // Empty
        }

        public Builder(RepoSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branchName = defaults.branchName;
    	      this.commitSha = defaults.commitSha;
    	      this.project = defaults.project;
    	      this.repoName = defaults.repoName;
    	      this.tagName = defaults.tagName;
        }

        public Builder branchName(@Nullable Output<String> branchName) {
            this.branchName = branchName;
            return this;
        }

        public Builder branchName(@Nullable String branchName) {
            this.branchName = Output.ofNullable(branchName);
            return this;
        }

        public Builder commitSha(@Nullable Output<String> commitSha) {
            this.commitSha = commitSha;
            return this;
        }

        public Builder commitSha(@Nullable String commitSha) {
            this.commitSha = Output.ofNullable(commitSha);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder repoName(@Nullable Output<String> repoName) {
            this.repoName = repoName;
            return this;
        }

        public Builder repoName(@Nullable String repoName) {
            this.repoName = Output.ofNullable(repoName);
            return this;
        }

        public Builder tagName(@Nullable Output<String> tagName) {
            this.tagName = tagName;
            return this;
        }

        public Builder tagName(@Nullable String tagName) {
            this.tagName = Output.ofNullable(tagName);
            return this;
        }
        public RepoSourceArgs build() {
            return new RepoSourceArgs(branchName, commitSha, project, repoName, tagName);
        }
    }
}
