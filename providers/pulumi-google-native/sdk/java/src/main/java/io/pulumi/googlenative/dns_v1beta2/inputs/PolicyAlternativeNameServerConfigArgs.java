// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dns_v1beta2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dns_v1beta2.inputs.PolicyAlternativeNameServerConfigTargetNameServerArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PolicyAlternativeNameServerConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final PolicyAlternativeNameServerConfigArgs Empty = new PolicyAlternativeNameServerConfigArgs();

    @InputImport(name="kind")
    private final @Nullable Input<String> kind;

    public Input<String> getKind() {
        return this.kind == null ? Input.empty() : this.kind;
    }

    /**
     * Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.
     * 
     */
    @InputImport(name="targetNameServers")
    private final @Nullable Input<List<PolicyAlternativeNameServerConfigTargetNameServerArgs>> targetNameServers;

    public Input<List<PolicyAlternativeNameServerConfigTargetNameServerArgs>> getTargetNameServers() {
        return this.targetNameServers == null ? Input.empty() : this.targetNameServers;
    }

    public PolicyAlternativeNameServerConfigArgs(
        @Nullable Input<String> kind,
        @Nullable Input<List<PolicyAlternativeNameServerConfigTargetNameServerArgs>> targetNameServers) {
        this.kind = kind;
        this.targetNameServers = targetNameServers;
    }

    private PolicyAlternativeNameServerConfigArgs() {
        this.kind = Input.empty();
        this.targetNameServers = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyAlternativeNameServerConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> kind;
        private @Nullable Input<List<PolicyAlternativeNameServerConfigTargetNameServerArgs>> targetNameServers;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyAlternativeNameServerConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kind = defaults.kind;
    	      this.targetNameServers = defaults.targetNameServers;
        }

        public Builder setKind(@Nullable Input<String> kind) {
            this.kind = kind;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = Input.ofNullable(kind);
            return this;
        }

        public Builder setTargetNameServers(@Nullable Input<List<PolicyAlternativeNameServerConfigTargetNameServerArgs>> targetNameServers) {
            this.targetNameServers = targetNameServers;
            return this;
        }

        public Builder setTargetNameServers(@Nullable List<PolicyAlternativeNameServerConfigTargetNameServerArgs> targetNameServers) {
            this.targetNameServers = Input.ofNullable(targetNameServers);
            return this;
        }

        public PolicyAlternativeNameServerConfigArgs build() {
            return new PolicyAlternativeNameServerConfigArgs(kind, targetNameServers);
        }
    }
}
