// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudtasks_v2beta3.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.cloudtasks_v2beta3.outputs.AppEngineHttpQueueResponse;
import io.pulumi.googlenative.cloudtasks_v2beta3.outputs.QueueStatsResponse;
import io.pulumi.googlenative.cloudtasks_v2beta3.outputs.RateLimitsResponse;
import io.pulumi.googlenative.cloudtasks_v2beta3.outputs.RetryConfigResponse;
import io.pulumi.googlenative.cloudtasks_v2beta3.outputs.StackdriverLoggingConfigResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetQueueResult {
    private final AppEngineHttpQueueResponse appEngineHttpQueue;
    private final String name;
    private final String purgeTime;
    private final RateLimitsResponse rateLimits;
    private final RetryConfigResponse retryConfig;
    private final StackdriverLoggingConfigResponse stackdriverLoggingConfig;
    private final String state;
    private final QueueStatsResponse stats;
    private final String taskTtl;
    private final String tombstoneTtl;
    private final String type;

    @OutputCustomType.Constructor({"appEngineHttpQueue","name","purgeTime","rateLimits","retryConfig","stackdriverLoggingConfig","state","stats","taskTtl","tombstoneTtl","type"})
    private GetQueueResult(
        AppEngineHttpQueueResponse appEngineHttpQueue,
        String name,
        String purgeTime,
        RateLimitsResponse rateLimits,
        RetryConfigResponse retryConfig,
        StackdriverLoggingConfigResponse stackdriverLoggingConfig,
        String state,
        QueueStatsResponse stats,
        String taskTtl,
        String tombstoneTtl,
        String type) {
        this.appEngineHttpQueue = Objects.requireNonNull(appEngineHttpQueue);
        this.name = Objects.requireNonNull(name);
        this.purgeTime = Objects.requireNonNull(purgeTime);
        this.rateLimits = Objects.requireNonNull(rateLimits);
        this.retryConfig = Objects.requireNonNull(retryConfig);
        this.stackdriverLoggingConfig = Objects.requireNonNull(stackdriverLoggingConfig);
        this.state = Objects.requireNonNull(state);
        this.stats = Objects.requireNonNull(stats);
        this.taskTtl = Objects.requireNonNull(taskTtl);
        this.tombstoneTtl = Objects.requireNonNull(tombstoneTtl);
        this.type = Objects.requireNonNull(type);
    }

    public AppEngineHttpQueueResponse getAppEngineHttpQueue() {
        return this.appEngineHttpQueue;
    }
    public String getName() {
        return this.name;
    }
    public String getPurgeTime() {
        return this.purgeTime;
    }
    public RateLimitsResponse getRateLimits() {
        return this.rateLimits;
    }
    public RetryConfigResponse getRetryConfig() {
        return this.retryConfig;
    }
    public StackdriverLoggingConfigResponse getStackdriverLoggingConfig() {
        return this.stackdriverLoggingConfig;
    }
    public String getState() {
        return this.state;
    }
    public QueueStatsResponse getStats() {
        return this.stats;
    }
    public String getTaskTtl() {
        return this.taskTtl;
    }
    public String getTombstoneTtl() {
        return this.tombstoneTtl;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueueResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppEngineHttpQueueResponse appEngineHttpQueue;
        private String name;
        private String purgeTime;
        private RateLimitsResponse rateLimits;
        private RetryConfigResponse retryConfig;
        private StackdriverLoggingConfigResponse stackdriverLoggingConfig;
        private String state;
        private QueueStatsResponse stats;
        private String taskTtl;
        private String tombstoneTtl;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetQueueResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appEngineHttpQueue = defaults.appEngineHttpQueue;
    	      this.name = defaults.name;
    	      this.purgeTime = defaults.purgeTime;
    	      this.rateLimits = defaults.rateLimits;
    	      this.retryConfig = defaults.retryConfig;
    	      this.stackdriverLoggingConfig = defaults.stackdriverLoggingConfig;
    	      this.state = defaults.state;
    	      this.stats = defaults.stats;
    	      this.taskTtl = defaults.taskTtl;
    	      this.tombstoneTtl = defaults.tombstoneTtl;
    	      this.type = defaults.type;
        }

        public Builder setAppEngineHttpQueue(AppEngineHttpQueueResponse appEngineHttpQueue) {
            this.appEngineHttpQueue = Objects.requireNonNull(appEngineHttpQueue);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPurgeTime(String purgeTime) {
            this.purgeTime = Objects.requireNonNull(purgeTime);
            return this;
        }

        public Builder setRateLimits(RateLimitsResponse rateLimits) {
            this.rateLimits = Objects.requireNonNull(rateLimits);
            return this;
        }

        public Builder setRetryConfig(RetryConfigResponse retryConfig) {
            this.retryConfig = Objects.requireNonNull(retryConfig);
            return this;
        }

        public Builder setStackdriverLoggingConfig(StackdriverLoggingConfigResponse stackdriverLoggingConfig) {
            this.stackdriverLoggingConfig = Objects.requireNonNull(stackdriverLoggingConfig);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setStats(QueueStatsResponse stats) {
            this.stats = Objects.requireNonNull(stats);
            return this;
        }

        public Builder setTaskTtl(String taskTtl) {
            this.taskTtl = Objects.requireNonNull(taskTtl);
            return this;
        }

        public Builder setTombstoneTtl(String tombstoneTtl) {
            this.tombstoneTtl = Objects.requireNonNull(tombstoneTtl);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public GetQueueResult build() {
            return new GetQueueResult(appEngineHttpQueue, name, purgeTime, rateLimits, retryConfig, stackdriverLoggingConfig, state, stats, taskTtl, tombstoneTtl, type);
        }
    }
}
