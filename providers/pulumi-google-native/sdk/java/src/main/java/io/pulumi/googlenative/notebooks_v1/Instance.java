// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.notebooks_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.notebooks_v1.InstanceArgs;
import io.pulumi.googlenative.notebooks_v1.outputs.AcceleratorConfigResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.ContainerImageResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.DiskResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.ReservationAffinityResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.ShieldedInstanceConfigResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.UpgradeHistoryEntryResponse;
import io.pulumi.googlenative.notebooks_v1.outputs.VmImageResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:notebooks/v1:Instance")
public class Instance extends io.pulumi.resources.CustomResource {
    @OutputExport(name="acceleratorConfig", type=AcceleratorConfigResponse.class, parameters={})
    private Output<AcceleratorConfigResponse> acceleratorConfig;

    public Output<AcceleratorConfigResponse> getAcceleratorConfig() {
        return this.acceleratorConfig;
    }
    @OutputExport(name="bootDiskSizeGb", type=String.class, parameters={})
    private Output<String> bootDiskSizeGb;

    public Output<String> getBootDiskSizeGb() {
        return this.bootDiskSizeGb;
    }
    @OutputExport(name="bootDiskType", type=String.class, parameters={})
    private Output<String> bootDiskType;

    public Output<String> getBootDiskType() {
        return this.bootDiskType;
    }
    @OutputExport(name="containerImage", type=ContainerImageResponse.class, parameters={})
    private Output<ContainerImageResponse> containerImage;

    public Output<ContainerImageResponse> getContainerImage() {
        return this.containerImage;
    }
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime;
    }
    @OutputExport(name="customGpuDriverPath", type=String.class, parameters={})
    private Output<String> customGpuDriverPath;

    public Output<String> getCustomGpuDriverPath() {
        return this.customGpuDriverPath;
    }
    @OutputExport(name="dataDiskSizeGb", type=String.class, parameters={})
    private Output<String> dataDiskSizeGb;

    public Output<String> getDataDiskSizeGb() {
        return this.dataDiskSizeGb;
    }
    @OutputExport(name="dataDiskType", type=String.class, parameters={})
    private Output<String> dataDiskType;

    public Output<String> getDataDiskType() {
        return this.dataDiskType;
    }
    @OutputExport(name="diskEncryption", type=String.class, parameters={})
    private Output<String> diskEncryption;

    public Output<String> getDiskEncryption() {
        return this.diskEncryption;
    }
    @OutputExport(name="disks", type=List.class, parameters={DiskResponse.class})
    private Output<List<DiskResponse>> disks;

    public Output<List<DiskResponse>> getDisks() {
        return this.disks;
    }
    @OutputExport(name="installGpuDriver", type=Boolean.class, parameters={})
    private Output<Boolean> installGpuDriver;

    public Output<Boolean> getInstallGpuDriver() {
        return this.installGpuDriver;
    }
    @OutputExport(name="instanceOwners", type=List.class, parameters={String.class})
    private Output<List<String>> instanceOwners;

    public Output<List<String>> getInstanceOwners() {
        return this.instanceOwners;
    }
    @OutputExport(name="kmsKey", type=String.class, parameters={})
    private Output<String> kmsKey;

    public Output<String> getKmsKey() {
        return this.kmsKey;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="machineType", type=String.class, parameters={})
    private Output<String> machineType;

    public Output<String> getMachineType() {
        return this.machineType;
    }
    @OutputExport(name="metadata", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> metadata;

    public Output<Map<String,String>> getMetadata() {
        return this.metadata;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="network", type=String.class, parameters={})
    private Output<String> network;

    public Output<String> getNetwork() {
        return this.network;
    }
    @OutputExport(name="nicType", type=String.class, parameters={})
    private Output<String> nicType;

    public Output<String> getNicType() {
        return this.nicType;
    }
    @OutputExport(name="noProxyAccess", type=Boolean.class, parameters={})
    private Output<Boolean> noProxyAccess;

    public Output<Boolean> getNoProxyAccess() {
        return this.noProxyAccess;
    }
    @OutputExport(name="noPublicIp", type=Boolean.class, parameters={})
    private Output<Boolean> noPublicIp;

    public Output<Boolean> getNoPublicIp() {
        return this.noPublicIp;
    }
    @OutputExport(name="noRemoveDataDisk", type=Boolean.class, parameters={})
    private Output<Boolean> noRemoveDataDisk;

    public Output<Boolean> getNoRemoveDataDisk() {
        return this.noRemoveDataDisk;
    }
    @OutputExport(name="postStartupScript", type=String.class, parameters={})
    private Output<String> postStartupScript;

    public Output<String> getPostStartupScript() {
        return this.postStartupScript;
    }
    @OutputExport(name="proxyUri", type=String.class, parameters={})
    private Output<String> proxyUri;

    public Output<String> getProxyUri() {
        return this.proxyUri;
    }
    @OutputExport(name="reservationAffinity", type=ReservationAffinityResponse.class, parameters={})
    private Output<ReservationAffinityResponse> reservationAffinity;

    public Output<ReservationAffinityResponse> getReservationAffinity() {
        return this.reservationAffinity;
    }
    @OutputExport(name="serviceAccount", type=String.class, parameters={})
    private Output<String> serviceAccount;

    public Output<String> getServiceAccount() {
        return this.serviceAccount;
    }
    @OutputExport(name="serviceAccountScopes", type=List.class, parameters={String.class})
    private Output<List<String>> serviceAccountScopes;

    public Output<List<String>> getServiceAccountScopes() {
        return this.serviceAccountScopes;
    }
    @OutputExport(name="shieldedInstanceConfig", type=ShieldedInstanceConfigResponse.class, parameters={})
    private Output<ShieldedInstanceConfigResponse> shieldedInstanceConfig;

    public Output<ShieldedInstanceConfigResponse> getShieldedInstanceConfig() {
        return this.shieldedInstanceConfig;
    }
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> getState() {
        return this.state;
    }
    @OutputExport(name="subnet", type=String.class, parameters={})
    private Output<String> subnet;

    public Output<String> getSubnet() {
        return this.subnet;
    }
    @OutputExport(name="tags", type=List.class, parameters={String.class})
    private Output<List<String>> tags;

    public Output<List<String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    public Output<String> getUpdateTime() {
        return this.updateTime;
    }
    @OutputExport(name="upgradeHistory", type=List.class, parameters={UpgradeHistoryEntryResponse.class})
    private Output<List<UpgradeHistoryEntryResponse>> upgradeHistory;

    public Output<List<UpgradeHistoryEntryResponse>> getUpgradeHistory() {
        return this.upgradeHistory;
    }
    @OutputExport(name="vmImage", type=VmImageResponse.class, parameters={})
    private Output<VmImageResponse> vmImage;

    public Output<VmImageResponse> getVmImage() {
        return this.vmImage;
    }

    public Instance(String name, InstanceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:notebooks/v1:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Instance(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:notebooks/v1:Instance", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Instance get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, options);
    }
}
