// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.HintArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Note kind that represents a logical attestation "role" or "authority". For example, an organization might have one `Authority` for "QA" and one for "build". This note is intended to act strictly as a grouping mechanism for the attached occurrences (Attestations). This grouping mechanism also provides a security boundary, since IAM ACLs gate the ability for a principle to attach an occurrence to a given note. It also provides a single point of lookup to find all attached attestation occurrences, even if they don't all live in the same project.
 * 
 */
public final class AuthorityArgs extends io.pulumi.resources.ResourceArgs {

    public static final AuthorityArgs Empty = new AuthorityArgs();

    /**
     * Hint hints at the purpose of the attestation authority.
     * 
     */
    @InputImport(name="hint")
      private final @Nullable Input<HintArgs> hint;

    public Input<HintArgs> getHint() {
        return this.hint == null ? Input.empty() : this.hint;
    }

    public AuthorityArgs(@Nullable Input<HintArgs> hint) {
        this.hint = hint;
    }

    private AuthorityArgs() {
        this.hint = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthorityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<HintArgs> hint;

        public Builder() {
    	      // Empty
        }

        public Builder(AuthorityArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hint = defaults.hint;
        }

        public Builder hint(@Nullable Input<HintArgs> hint) {
            this.hint = hint;
            return this;
        }

        public Builder hint(@Nullable HintArgs hint) {
            this.hint = Input.ofNullable(hint);
            return this;
        }
        public AuthorityArgs build() {
            return new AuthorityArgs(hint);
        }
    }
}
