// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.compute_v1.RegionDiskArgs;
import io.pulumi.googlenative.compute_v1.outputs.CustomerEncryptionKeyResponse;
import io.pulumi.googlenative.compute_v1.outputs.GuestOsFeatureResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:compute/v1:RegionDisk")
public class RegionDisk extends io.pulumi.resources.CustomResource {
    @OutputExport(name="creationTimestamp", type=String.class, parameters={})
    private Output<String> creationTimestamp;

    public Output<String> getCreationTimestamp() {
        return this.creationTimestamp;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output<String> description;

    public Output<String> getDescription() {
        return this.description;
    }
    @OutputExport(name="diskEncryptionKey", type=CustomerEncryptionKeyResponse.class, parameters={})
    private Output<CustomerEncryptionKeyResponse> diskEncryptionKey;

    public Output<CustomerEncryptionKeyResponse> getDiskEncryptionKey() {
        return this.diskEncryptionKey;
    }
    @OutputExport(name="guestOsFeatures", type=List.class, parameters={GuestOsFeatureResponse.class})
    private Output<List<GuestOsFeatureResponse>> guestOsFeatures;

    public Output<List<GuestOsFeatureResponse>> getGuestOsFeatures() {
        return this.guestOsFeatures;
    }
    @OutputExport(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    public Output<String> getKind() {
        return this.kind;
    }
    @OutputExport(name="labelFingerprint", type=String.class, parameters={})
    private Output<String> labelFingerprint;

    public Output<String> getLabelFingerprint() {
        return this.labelFingerprint;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="lastAttachTimestamp", type=String.class, parameters={})
    private Output<String> lastAttachTimestamp;

    public Output<String> getLastAttachTimestamp() {
        return this.lastAttachTimestamp;
    }
    @OutputExport(name="lastDetachTimestamp", type=String.class, parameters={})
    private Output<String> lastDetachTimestamp;

    public Output<String> getLastDetachTimestamp() {
        return this.lastDetachTimestamp;
    }
    @OutputExport(name="licenseCodes", type=List.class, parameters={String.class})
    private Output<List<String>> licenseCodes;

    public Output<List<String>> getLicenseCodes() {
        return this.licenseCodes;
    }
    @OutputExport(name="licenses", type=List.class, parameters={String.class})
    private Output<List<String>> licenses;

    public Output<List<String>> getLicenses() {
        return this.licenses;
    }
    @OutputExport(name="locationHint", type=String.class, parameters={})
    private Output<String> locationHint;

    public Output<String> getLocationHint() {
        return this.locationHint;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="options", type=String.class, parameters={})
    private Output<String> options;

    public Output<String> getOptions() {
        return this.options;
    }
    @OutputExport(name="physicalBlockSizeBytes", type=String.class, parameters={})
    private Output<String> physicalBlockSizeBytes;

    public Output<String> getPhysicalBlockSizeBytes() {
        return this.physicalBlockSizeBytes;
    }
    @OutputExport(name="provisionedIops", type=String.class, parameters={})
    private Output<String> provisionedIops;

    public Output<String> getProvisionedIops() {
        return this.provisionedIops;
    }
    @OutputExport(name="region", type=String.class, parameters={})
    private Output<String> region;

    public Output<String> getRegion() {
        return this.region;
    }
    @OutputExport(name="replicaZones", type=List.class, parameters={String.class})
    private Output<List<String>> replicaZones;

    public Output<List<String>> getReplicaZones() {
        return this.replicaZones;
    }
    @OutputExport(name="resourcePolicies", type=List.class, parameters={String.class})
    private Output<List<String>> resourcePolicies;

    public Output<List<String>> getResourcePolicies() {
        return this.resourcePolicies;
    }
    @OutputExport(name="satisfiesPzs", type=Boolean.class, parameters={})
    private Output<Boolean> satisfiesPzs;

    public Output<Boolean> getSatisfiesPzs() {
        return this.satisfiesPzs;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="sizeGb", type=String.class, parameters={})
    private Output<String> sizeGb;

    public Output<String> getSizeGb() {
        return this.sizeGb;
    }
    @OutputExport(name="sourceDisk", type=String.class, parameters={})
    private Output<String> sourceDisk;

    public Output<String> getSourceDisk() {
        return this.sourceDisk;
    }
    @OutputExport(name="sourceDiskId", type=String.class, parameters={})
    private Output<String> sourceDiskId;

    public Output<String> getSourceDiskId() {
        return this.sourceDiskId;
    }
    @OutputExport(name="sourceImage", type=String.class, parameters={})
    private Output<String> sourceImage;

    public Output<String> getSourceImage() {
        return this.sourceImage;
    }
    @OutputExport(name="sourceImageEncryptionKey", type=CustomerEncryptionKeyResponse.class, parameters={})
    private Output<CustomerEncryptionKeyResponse> sourceImageEncryptionKey;

    public Output<CustomerEncryptionKeyResponse> getSourceImageEncryptionKey() {
        return this.sourceImageEncryptionKey;
    }
    @OutputExport(name="sourceImageId", type=String.class, parameters={})
    private Output<String> sourceImageId;

    public Output<String> getSourceImageId() {
        return this.sourceImageId;
    }
    @OutputExport(name="sourceSnapshot", type=String.class, parameters={})
    private Output<String> sourceSnapshot;

    public Output<String> getSourceSnapshot() {
        return this.sourceSnapshot;
    }
    @OutputExport(name="sourceSnapshotEncryptionKey", type=CustomerEncryptionKeyResponse.class, parameters={})
    private Output<CustomerEncryptionKeyResponse> sourceSnapshotEncryptionKey;

    public Output<CustomerEncryptionKeyResponse> getSourceSnapshotEncryptionKey() {
        return this.sourceSnapshotEncryptionKey;
    }
    @OutputExport(name="sourceSnapshotId", type=String.class, parameters={})
    private Output<String> sourceSnapshotId;

    public Output<String> getSourceSnapshotId() {
        return this.sourceSnapshotId;
    }
    @OutputExport(name="sourceStorageObject", type=String.class, parameters={})
    private Output<String> sourceStorageObject;

    public Output<String> getSourceStorageObject() {
        return this.sourceStorageObject;
    }
    @OutputExport(name="status", type=String.class, parameters={})
    private Output<String> status;

    public Output<String> getStatus() {
        return this.status;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="users", type=List.class, parameters={String.class})
    private Output<List<String>> users;

    public Output<List<String>> getUsers() {
        return this.users;
    }
    @OutputExport(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    public Output<String> getZone() {
        return this.zone;
    }

    public RegionDisk(String name, RegionDiskArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:compute/v1:RegionDisk", name, args == null ? RegionDiskArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private RegionDisk(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:compute/v1:RegionDisk", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static RegionDisk get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new RegionDisk(name, id, options);
    }
}
