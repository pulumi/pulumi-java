// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Specifies options for controlling advanced machine features. Options that would traditionally be configured in a BIOS belong here. Features that require operating system support may have corresponding entries in the GuestOsFeatures of an Image (e.g., whether or not the OS in the Image supports nested virtualization being enabled or disabled).
 * 
 */
public final class AdvancedMachineFeaturesArgs extends io.pulumi.resources.ResourceArgs {

    public static final AdvancedMachineFeaturesArgs Empty = new AdvancedMachineFeaturesArgs();

    /**
     * Whether to enable nested virtualization or not (default is false).
     * 
     */
    @InputImport(name="enableNestedVirtualization")
    private final @Nullable Input<Boolean> enableNestedVirtualization;

    public Input<Boolean> getEnableNestedVirtualization() {
        return this.enableNestedVirtualization == null ? Input.empty() : this.enableNestedVirtualization;
    }

    /**
     * Whether to enable UEFI networking for instance creation.
     * 
     */
    @InputImport(name="enableUefiNetworking")
    private final @Nullable Input<Boolean> enableUefiNetworking;

    public Input<Boolean> getEnableUefiNetworking() {
        return this.enableUefiNetworking == null ? Input.empty() : this.enableUefiNetworking;
    }

    /**
     * The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
     * 
     */
    @InputImport(name="threadsPerCore")
    private final @Nullable Input<Integer> threadsPerCore;

    public Input<Integer> getThreadsPerCore() {
        return this.threadsPerCore == null ? Input.empty() : this.threadsPerCore;
    }

    public AdvancedMachineFeaturesArgs(
        @Nullable Input<Boolean> enableNestedVirtualization,
        @Nullable Input<Boolean> enableUefiNetworking,
        @Nullable Input<Integer> threadsPerCore) {
        this.enableNestedVirtualization = enableNestedVirtualization;
        this.enableUefiNetworking = enableUefiNetworking;
        this.threadsPerCore = threadsPerCore;
    }

    private AdvancedMachineFeaturesArgs() {
        this.enableNestedVirtualization = Input.empty();
        this.enableUefiNetworking = Input.empty();
        this.threadsPerCore = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AdvancedMachineFeaturesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> enableNestedVirtualization;
        private @Nullable Input<Boolean> enableUefiNetworking;
        private @Nullable Input<Integer> threadsPerCore;

        public Builder() {
    	      // Empty
        }

        public Builder(AdvancedMachineFeaturesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableNestedVirtualization = defaults.enableNestedVirtualization;
    	      this.enableUefiNetworking = defaults.enableUefiNetworking;
    	      this.threadsPerCore = defaults.threadsPerCore;
        }

        public Builder setEnableNestedVirtualization(@Nullable Input<Boolean> enableNestedVirtualization) {
            this.enableNestedVirtualization = enableNestedVirtualization;
            return this;
        }

        public Builder setEnableNestedVirtualization(@Nullable Boolean enableNestedVirtualization) {
            this.enableNestedVirtualization = Input.ofNullable(enableNestedVirtualization);
            return this;
        }

        public Builder setEnableUefiNetworking(@Nullable Input<Boolean> enableUefiNetworking) {
            this.enableUefiNetworking = enableUefiNetworking;
            return this;
        }

        public Builder setEnableUefiNetworking(@Nullable Boolean enableUefiNetworking) {
            this.enableUefiNetworking = Input.ofNullable(enableUefiNetworking);
            return this;
        }

        public Builder setThreadsPerCore(@Nullable Input<Integer> threadsPerCore) {
            this.threadsPerCore = threadsPerCore;
            return this;
        }

        public Builder setThreadsPerCore(@Nullable Integer threadsPerCore) {
            this.threadsPerCore = Input.ofNullable(threadsPerCore);
            return this;
        }

        public AdvancedMachineFeaturesArgs build() {
            return new AdvancedMachineFeaturesArgs(enableNestedVirtualization, enableUefiNetworking, threadsPerCore);
        }
    }
}
