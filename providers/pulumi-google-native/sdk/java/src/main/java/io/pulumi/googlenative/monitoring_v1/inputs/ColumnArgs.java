// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.monitoring_v1.inputs.WidgetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines the layout properties and content for a column.
 * 
 */
public final class ColumnArgs extends io.pulumi.resources.ResourceArgs {

    public static final ColumnArgs Empty = new ColumnArgs();

    /**
     * The relative weight of this column. The column weight is used to adjust the width of columns on the screen (relative to peers). Greater the weight, greater the width of the column on the screen. If omitted, a value of 1 is used while rendering.
     * 
     */
    @Import(name="weight")
      private final @Nullable Output<String> weight;

    public Output<String> getWeight() {
        return this.weight == null ? Output.empty() : this.weight;
    }

    /**
     * The display widgets arranged vertically in this column.
     * 
     */
    @Import(name="widgets")
      private final @Nullable Output<List<WidgetArgs>> widgets;

    public Output<List<WidgetArgs>> getWidgets() {
        return this.widgets == null ? Output.empty() : this.widgets;
    }

    public ColumnArgs(
        @Nullable Output<String> weight,
        @Nullable Output<List<WidgetArgs>> widgets) {
        this.weight = weight;
        this.widgets = widgets;
    }

    private ColumnArgs() {
        this.weight = Output.empty();
        this.widgets = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ColumnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> weight;
        private @Nullable Output<List<WidgetArgs>> widgets;

        public Builder() {
    	      // Empty
        }

        public Builder(ColumnArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.weight = defaults.weight;
    	      this.widgets = defaults.widgets;
        }

        public Builder weight(@Nullable Output<String> weight) {
            this.weight = weight;
            return this;
        }

        public Builder weight(@Nullable String weight) {
            this.weight = Output.ofNullable(weight);
            return this;
        }

        public Builder widgets(@Nullable Output<List<WidgetArgs>> widgets) {
            this.widgets = widgets;
            return this;
        }

        public Builder widgets(@Nullable List<WidgetArgs> widgets) {
            this.widgets = Output.ofNullable(widgets);
            return this;
        }
        public ColumnArgs build() {
            return new ColumnArgs(weight, widgets);
        }
    }
}
