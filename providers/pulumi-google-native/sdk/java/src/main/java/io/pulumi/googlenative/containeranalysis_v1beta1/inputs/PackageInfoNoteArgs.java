// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.ExternalRefArgs;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.LicenseArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * PackageInfoNote represents an SPDX Package Information section: https://spdx.github.io/spdx-spec/3-package-information/
 * 
 */
public final class PackageInfoNoteArgs extends io.pulumi.resources.ResourceArgs {

    public static final PackageInfoNoteArgs Empty = new PackageInfoNoteArgs();

    /**
     * Indicates whether the file content of this package has been available for or subjected to analysis when creating the SPDX document
     * 
     */
    @InputImport(name="analyzed")
      private final @Nullable Input<Boolean> analyzed;

    public Input<Boolean> getAnalyzed() {
        return this.analyzed == null ? Input.empty() : this.analyzed;
    }

    /**
     * A place for the SPDX data creator to record, at the package level, acknowledgements that may be needed to be communicated in some contexts
     * 
     */
    @InputImport(name="attribution")
      private final @Nullable Input<String> attribution;

    public Input<String> getAttribution() {
        return this.attribution == null ? Input.empty() : this.attribution;
    }

    /**
     * Provide an independently reproducible mechanism that permits unique identification of a specific package that correlates to the data in this SPDX file
     * 
     */
    @InputImport(name="checksum")
      private final @Nullable Input<String> checksum;

    public Input<String> getChecksum() {
        return this.checksum == null ? Input.empty() : this.checksum;
    }

    /**
     * Identify the copyright holders of the package, as well as any dates present
     * 
     */
    @InputImport(name="copyright")
      private final @Nullable Input<String> copyright;

    public Input<String> getCopyright() {
        return this.copyright == null ? Input.empty() : this.copyright;
    }

    /**
     * A more detailed description of the package
     * 
     */
    @InputImport(name="detailedDescription")
      private final @Nullable Input<String> detailedDescription;

    public Input<String> getDetailedDescription() {
        return this.detailedDescription == null ? Input.empty() : this.detailedDescription;
    }

    /**
     * This section identifies the download Universal Resource Locator (URL), or a specific location within a version control system (VCS) for the package at the time that the SPDX file was created
     * 
     */
    @InputImport(name="downloadLocation")
      private final @Nullable Input<String> downloadLocation;

    public Input<String> getDownloadLocation() {
        return this.downloadLocation == null ? Input.empty() : this.downloadLocation;
    }

    /**
     * ExternalRef
     * 
     */
    @InputImport(name="externalRefs")
      private final @Nullable Input<List<ExternalRefArgs>> externalRefs;

    public Input<List<ExternalRefArgs>> getExternalRefs() {
        return this.externalRefs == null ? Input.empty() : this.externalRefs;
    }

    /**
     * Contain the license the SPDX file creator has concluded as governing the This field is to contain a list of all licenses found in the package. The relationship between licenses (i.e., conjunctive, disjunctive) is not specified in this field â€“ it is simply a listing of all licenses found
     * 
     */
    @InputImport(name="filesLicenseInfo")
      private final @Nullable Input<List<String>> filesLicenseInfo;

    public Input<List<String>> getFilesLicenseInfo() {
        return this.filesLicenseInfo == null ? Input.empty() : this.filesLicenseInfo;
    }

    /**
     * Provide a place for the SPDX file creator to record a web site that serves as the package's home page
     * 
     */
    @InputImport(name="homePage")
      private final @Nullable Input<String> homePage;

    public Input<String> getHomePage() {
        return this.homePage == null ? Input.empty() : this.homePage;
    }

    /**
     * List the licenses that have been declared by the authors of the package
     * 
     */
    @InputImport(name="licenseDeclared")
      private final @Nullable Input<LicenseArgs> licenseDeclared;

    public Input<LicenseArgs> getLicenseDeclared() {
        return this.licenseDeclared == null ? Input.empty() : this.licenseDeclared;
    }

    /**
     * If the package identified in the SPDX file originated from a different person or organization than identified as Package Supplier, this field identifies from where or whom the package originally came
     * 
     */
    @InputImport(name="originator")
      private final @Nullable Input<String> originator;

    public Input<String> getOriginator() {
        return this.originator == null ? Input.empty() : this.originator;
    }

    /**
     * The type of package: OS, MAVEN, GO, GO_STDLIB, etc.
     * 
     */
    @InputImport(name="packageType")
      private final @Nullable Input<String> packageType;

    public Input<String> getPackageType() {
        return this.packageType == null ? Input.empty() : this.packageType;
    }

    /**
     * A short description of the package
     * 
     */
    @InputImport(name="summaryDescription")
      private final @Nullable Input<String> summaryDescription;

    public Input<String> getSummaryDescription() {
        return this.summaryDescription == null ? Input.empty() : this.summaryDescription;
    }

    /**
     * Identify the actual distribution source for the package/directory identified in the SPDX file
     * 
     */
    @InputImport(name="supplier")
      private final @Nullable Input<String> supplier;

    public Input<String> getSupplier() {
        return this.supplier == null ? Input.empty() : this.supplier;
    }

    /**
     * Identify the full name of the package as given by the Package Originator
     * 
     */
    @InputImport(name="title")
      private final @Nullable Input<String> title;

    public Input<String> getTitle() {
        return this.title == null ? Input.empty() : this.title;
    }

    /**
     * This field provides an independently reproducible mechanism identifying specific contents of a package based on the actual files (except the SPDX file itself, if it is included in the package) that make up each package and that correlates to the data in this SPDX file
     * 
     */
    @InputImport(name="verificationCode")
      private final @Nullable Input<String> verificationCode;

    public Input<String> getVerificationCode() {
        return this.verificationCode == null ? Input.empty() : this.verificationCode;
    }

    /**
     * Identify the version of the package
     * 
     */
    @InputImport(name="version")
      private final @Nullable Input<String> version;

    public Input<String> getVersion() {
        return this.version == null ? Input.empty() : this.version;
    }

    public PackageInfoNoteArgs(
        @Nullable Input<Boolean> analyzed,
        @Nullable Input<String> attribution,
        @Nullable Input<String> checksum,
        @Nullable Input<String> copyright,
        @Nullable Input<String> detailedDescription,
        @Nullable Input<String> downloadLocation,
        @Nullable Input<List<ExternalRefArgs>> externalRefs,
        @Nullable Input<List<String>> filesLicenseInfo,
        @Nullable Input<String> homePage,
        @Nullable Input<LicenseArgs> licenseDeclared,
        @Nullable Input<String> originator,
        @Nullable Input<String> packageType,
        @Nullable Input<String> summaryDescription,
        @Nullable Input<String> supplier,
        @Nullable Input<String> title,
        @Nullable Input<String> verificationCode,
        @Nullable Input<String> version) {
        this.analyzed = analyzed;
        this.attribution = attribution;
        this.checksum = checksum;
        this.copyright = copyright;
        this.detailedDescription = detailedDescription;
        this.downloadLocation = downloadLocation;
        this.externalRefs = externalRefs;
        this.filesLicenseInfo = filesLicenseInfo;
        this.homePage = homePage;
        this.licenseDeclared = licenseDeclared;
        this.originator = originator;
        this.packageType = packageType;
        this.summaryDescription = summaryDescription;
        this.supplier = supplier;
        this.title = title;
        this.verificationCode = verificationCode;
        this.version = version;
    }

    private PackageInfoNoteArgs() {
        this.analyzed = Input.empty();
        this.attribution = Input.empty();
        this.checksum = Input.empty();
        this.copyright = Input.empty();
        this.detailedDescription = Input.empty();
        this.downloadLocation = Input.empty();
        this.externalRefs = Input.empty();
        this.filesLicenseInfo = Input.empty();
        this.homePage = Input.empty();
        this.licenseDeclared = Input.empty();
        this.originator = Input.empty();
        this.packageType = Input.empty();
        this.summaryDescription = Input.empty();
        this.supplier = Input.empty();
        this.title = Input.empty();
        this.verificationCode = Input.empty();
        this.version = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PackageInfoNoteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> analyzed;
        private @Nullable Input<String> attribution;
        private @Nullable Input<String> checksum;
        private @Nullable Input<String> copyright;
        private @Nullable Input<String> detailedDescription;
        private @Nullable Input<String> downloadLocation;
        private @Nullable Input<List<ExternalRefArgs>> externalRefs;
        private @Nullable Input<List<String>> filesLicenseInfo;
        private @Nullable Input<String> homePage;
        private @Nullable Input<LicenseArgs> licenseDeclared;
        private @Nullable Input<String> originator;
        private @Nullable Input<String> packageType;
        private @Nullable Input<String> summaryDescription;
        private @Nullable Input<String> supplier;
        private @Nullable Input<String> title;
        private @Nullable Input<String> verificationCode;
        private @Nullable Input<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(PackageInfoNoteArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.analyzed = defaults.analyzed;
    	      this.attribution = defaults.attribution;
    	      this.checksum = defaults.checksum;
    	      this.copyright = defaults.copyright;
    	      this.detailedDescription = defaults.detailedDescription;
    	      this.downloadLocation = defaults.downloadLocation;
    	      this.externalRefs = defaults.externalRefs;
    	      this.filesLicenseInfo = defaults.filesLicenseInfo;
    	      this.homePage = defaults.homePage;
    	      this.licenseDeclared = defaults.licenseDeclared;
    	      this.originator = defaults.originator;
    	      this.packageType = defaults.packageType;
    	      this.summaryDescription = defaults.summaryDescription;
    	      this.supplier = defaults.supplier;
    	      this.title = defaults.title;
    	      this.verificationCode = defaults.verificationCode;
    	      this.version = defaults.version;
        }

        public Builder setAnalyzed(@Nullable Input<Boolean> analyzed) {
            this.analyzed = analyzed;
            return this;
        }

        public Builder setAnalyzed(@Nullable Boolean analyzed) {
            this.analyzed = Input.ofNullable(analyzed);
            return this;
        }

        public Builder setAttribution(@Nullable Input<String> attribution) {
            this.attribution = attribution;
            return this;
        }

        public Builder setAttribution(@Nullable String attribution) {
            this.attribution = Input.ofNullable(attribution);
            return this;
        }

        public Builder setChecksum(@Nullable Input<String> checksum) {
            this.checksum = checksum;
            return this;
        }

        public Builder setChecksum(@Nullable String checksum) {
            this.checksum = Input.ofNullable(checksum);
            return this;
        }

        public Builder setCopyright(@Nullable Input<String> copyright) {
            this.copyright = copyright;
            return this;
        }

        public Builder setCopyright(@Nullable String copyright) {
            this.copyright = Input.ofNullable(copyright);
            return this;
        }

        public Builder setDetailedDescription(@Nullable Input<String> detailedDescription) {
            this.detailedDescription = detailedDescription;
            return this;
        }

        public Builder setDetailedDescription(@Nullable String detailedDescription) {
            this.detailedDescription = Input.ofNullable(detailedDescription);
            return this;
        }

        public Builder setDownloadLocation(@Nullable Input<String> downloadLocation) {
            this.downloadLocation = downloadLocation;
            return this;
        }

        public Builder setDownloadLocation(@Nullable String downloadLocation) {
            this.downloadLocation = Input.ofNullable(downloadLocation);
            return this;
        }

        public Builder setExternalRefs(@Nullable Input<List<ExternalRefArgs>> externalRefs) {
            this.externalRefs = externalRefs;
            return this;
        }

        public Builder setExternalRefs(@Nullable List<ExternalRefArgs> externalRefs) {
            this.externalRefs = Input.ofNullable(externalRefs);
            return this;
        }

        public Builder setFilesLicenseInfo(@Nullable Input<List<String>> filesLicenseInfo) {
            this.filesLicenseInfo = filesLicenseInfo;
            return this;
        }

        public Builder setFilesLicenseInfo(@Nullable List<String> filesLicenseInfo) {
            this.filesLicenseInfo = Input.ofNullable(filesLicenseInfo);
            return this;
        }

        public Builder setHomePage(@Nullable Input<String> homePage) {
            this.homePage = homePage;
            return this;
        }

        public Builder setHomePage(@Nullable String homePage) {
            this.homePage = Input.ofNullable(homePage);
            return this;
        }

        public Builder setLicenseDeclared(@Nullable Input<LicenseArgs> licenseDeclared) {
            this.licenseDeclared = licenseDeclared;
            return this;
        }

        public Builder setLicenseDeclared(@Nullable LicenseArgs licenseDeclared) {
            this.licenseDeclared = Input.ofNullable(licenseDeclared);
            return this;
        }

        public Builder setOriginator(@Nullable Input<String> originator) {
            this.originator = originator;
            return this;
        }

        public Builder setOriginator(@Nullable String originator) {
            this.originator = Input.ofNullable(originator);
            return this;
        }

        public Builder setPackageType(@Nullable Input<String> packageType) {
            this.packageType = packageType;
            return this;
        }

        public Builder setPackageType(@Nullable String packageType) {
            this.packageType = Input.ofNullable(packageType);
            return this;
        }

        public Builder setSummaryDescription(@Nullable Input<String> summaryDescription) {
            this.summaryDescription = summaryDescription;
            return this;
        }

        public Builder setSummaryDescription(@Nullable String summaryDescription) {
            this.summaryDescription = Input.ofNullable(summaryDescription);
            return this;
        }

        public Builder setSupplier(@Nullable Input<String> supplier) {
            this.supplier = supplier;
            return this;
        }

        public Builder setSupplier(@Nullable String supplier) {
            this.supplier = Input.ofNullable(supplier);
            return this;
        }

        public Builder setTitle(@Nullable Input<String> title) {
            this.title = title;
            return this;
        }

        public Builder setTitle(@Nullable String title) {
            this.title = Input.ofNullable(title);
            return this;
        }

        public Builder setVerificationCode(@Nullable Input<String> verificationCode) {
            this.verificationCode = verificationCode;
            return this;
        }

        public Builder setVerificationCode(@Nullable String verificationCode) {
            this.verificationCode = Input.ofNullable(verificationCode);
            return this;
        }

        public Builder setVersion(@Nullable Input<String> version) {
            this.version = version;
            return this;
        }

        public Builder setVersion(@Nullable String version) {
            this.version = Input.ofNullable(version);
            return this;
        }
        public PackageInfoNoteArgs build() {
            return new PackageInfoNoteArgs(analyzed, attribution, checksum, copyright, detailedDescription, downloadLocation, externalRefs, filesLicenseInfo, homePage, licenseDeclared, originator, packageType, summaryDescription, supplier, title, verificationCode, version);
        }
    }
}
