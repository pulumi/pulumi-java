// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataflow_v1b3.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SdkHarnessContainerImageResponse {
    /**
     * A docker container image that resides in Google Container Registry.
     * 
     */
    private final String containerImage;
    /**
     * Environment ID for the Beam runner API proto Environment that corresponds to the current SDK Harness.
     * 
     */
    private final String environmentId;
    /**
     * If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.
     * 
     */
    private final Boolean useSingleCorePerContainer;

    @CustomType.Constructor
    private SdkHarnessContainerImageResponse(
        @CustomType.Parameter("containerImage") String containerImage,
        @CustomType.Parameter("environmentId") String environmentId,
        @CustomType.Parameter("useSingleCorePerContainer") Boolean useSingleCorePerContainer) {
        this.containerImage = containerImage;
        this.environmentId = environmentId;
        this.useSingleCorePerContainer = useSingleCorePerContainer;
    }

    /**
     * A docker container image that resides in Google Container Registry.
     * 
    */
    public String containerImage() {
        return this.containerImage;
    }
    /**
     * Environment ID for the Beam runner API proto Environment that corresponds to the current SDK Harness.
     * 
    */
    public String environmentId() {
        return this.environmentId;
    }
    /**
     * If true, recommends the Dataflow service to use only one core per SDK container instance with this image. If false (or unset) recommends using more than one core per SDK container instance with this image for efficiency. Note that Dataflow service may choose to override this property if needed.
     * 
    */
    public Boolean useSingleCorePerContainer() {
        return this.useSingleCorePerContainer;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SdkHarnessContainerImageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String containerImage;
        private String environmentId;
        private Boolean useSingleCorePerContainer;

        public Builder() {
    	      // Empty
        }

        public Builder(SdkHarnessContainerImageResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerImage = defaults.containerImage;
    	      this.environmentId = defaults.environmentId;
    	      this.useSingleCorePerContainer = defaults.useSingleCorePerContainer;
        }

        public Builder containerImage(String containerImage) {
            this.containerImage = Objects.requireNonNull(containerImage);
            return this;
        }
        public Builder environmentId(String environmentId) {
            this.environmentId = Objects.requireNonNull(environmentId);
            return this;
        }
        public Builder useSingleCorePerContainer(Boolean useSingleCorePerContainer) {
            this.useSingleCorePerContainer = Objects.requireNonNull(useSingleCorePerContainer);
            return this;
        }        public SdkHarnessContainerImageResponse build() {
            return new SdkHarnessContainerImageResponse(containerImage, environmentId, useSingleCorePerContainer);
        }
    }
}
