// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.container_v1.inputs.TimeWindowArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RecurringTimeWindowArgs extends io.pulumi.resources.ResourceArgs {

    public static final RecurringTimeWindowArgs Empty = new RecurringTimeWindowArgs();

    @InputImport(name="recurrence")
    private final @Nullable Input<String> recurrence;

    public Input<String> getRecurrence() {
        return this.recurrence == null ? Input.empty() : this.recurrence;
    }

    @InputImport(name="window")
    private final @Nullable Input<TimeWindowArgs> window;

    public Input<TimeWindowArgs> getWindow() {
        return this.window == null ? Input.empty() : this.window;
    }

    public RecurringTimeWindowArgs(
        @Nullable Input<String> recurrence,
        @Nullable Input<TimeWindowArgs> window) {
        this.recurrence = recurrence;
        this.window = window;
    }

    private RecurringTimeWindowArgs() {
        this.recurrence = Input.empty();
        this.window = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RecurringTimeWindowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> recurrence;
        private @Nullable Input<TimeWindowArgs> window;

        public Builder() {
    	      // Empty
        }

        public Builder(RecurringTimeWindowArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.recurrence = defaults.recurrence;
    	      this.window = defaults.window;
        }

        public Builder setRecurrence(@Nullable Input<String> recurrence) {
            this.recurrence = recurrence;
            return this;
        }

        public Builder setRecurrence(@Nullable String recurrence) {
            this.recurrence = Input.ofNullable(recurrence);
            return this;
        }

        public Builder setWindow(@Nullable Input<TimeWindowArgs> window) {
            this.window = window;
            return this;
        }

        public Builder setWindow(@Nullable TimeWindowArgs window) {
            this.window = Input.ofNullable(window);
            return this;
        }

        public RecurringTimeWindowArgs build() {
            return new RecurringTimeWindowArgs(recurrence, window);
        }
    }
}
