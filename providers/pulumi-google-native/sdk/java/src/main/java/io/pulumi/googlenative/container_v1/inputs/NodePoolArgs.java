// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.container_v1.inputs.MaxPodsConstraintArgs;
import io.pulumi.googlenative.container_v1.inputs.NodeConfigArgs;
import io.pulumi.googlenative.container_v1.inputs.NodeManagementArgs;
import io.pulumi.googlenative.container_v1.inputs.NodeNetworkConfigArgs;
import io.pulumi.googlenative.container_v1.inputs.NodePoolAutoscalingArgs;
import io.pulumi.googlenative.container_v1.inputs.StatusConditionArgs;
import io.pulumi.googlenative.container_v1.inputs.UpgradeSettingsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NodePoolArgs extends io.pulumi.resources.ResourceArgs {

    public static final NodePoolArgs Empty = new NodePoolArgs();

    @InputImport(name="autoscaling")
    private final @Nullable Input<NodePoolAutoscalingArgs> autoscaling;

    public Input<NodePoolAutoscalingArgs> getAutoscaling() {
        return this.autoscaling == null ? Input.empty() : this.autoscaling;
    }

    @InputImport(name="conditions")
    private final @Nullable Input<List<StatusConditionArgs>> conditions;

    public Input<List<StatusConditionArgs>> getConditions() {
        return this.conditions == null ? Input.empty() : this.conditions;
    }

    @InputImport(name="config")
    private final @Nullable Input<NodeConfigArgs> config;

    public Input<NodeConfigArgs> getConfig() {
        return this.config == null ? Input.empty() : this.config;
    }

    @InputImport(name="initialNodeCount")
    private final @Nullable Input<Integer> initialNodeCount;

    public Input<Integer> getInitialNodeCount() {
        return this.initialNodeCount == null ? Input.empty() : this.initialNodeCount;
    }

    @InputImport(name="locations")
    private final @Nullable Input<List<String>> locations;

    public Input<List<String>> getLocations() {
        return this.locations == null ? Input.empty() : this.locations;
    }

    @InputImport(name="management")
    private final @Nullable Input<NodeManagementArgs> management;

    public Input<NodeManagementArgs> getManagement() {
        return this.management == null ? Input.empty() : this.management;
    }

    @InputImport(name="maxPodsConstraint")
    private final @Nullable Input<MaxPodsConstraintArgs> maxPodsConstraint;

    public Input<MaxPodsConstraintArgs> getMaxPodsConstraint() {
        return this.maxPodsConstraint == null ? Input.empty() : this.maxPodsConstraint;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="networkConfig")
    private final @Nullable Input<NodeNetworkConfigArgs> networkConfig;

    public Input<NodeNetworkConfigArgs> getNetworkConfig() {
        return this.networkConfig == null ? Input.empty() : this.networkConfig;
    }

    @InputImport(name="upgradeSettings")
    private final @Nullable Input<UpgradeSettingsArgs> upgradeSettings;

    public Input<UpgradeSettingsArgs> getUpgradeSettings() {
        return this.upgradeSettings == null ? Input.empty() : this.upgradeSettings;
    }

    @InputImport(name="version")
    private final @Nullable Input<String> version;

    public Input<String> getVersion() {
        return this.version == null ? Input.empty() : this.version;
    }

    public NodePoolArgs(
        @Nullable Input<NodePoolAutoscalingArgs> autoscaling,
        @Nullable Input<List<StatusConditionArgs>> conditions,
        @Nullable Input<NodeConfigArgs> config,
        @Nullable Input<Integer> initialNodeCount,
        @Nullable Input<List<String>> locations,
        @Nullable Input<NodeManagementArgs> management,
        @Nullable Input<MaxPodsConstraintArgs> maxPodsConstraint,
        @Nullable Input<String> name,
        @Nullable Input<NodeNetworkConfigArgs> networkConfig,
        @Nullable Input<UpgradeSettingsArgs> upgradeSettings,
        @Nullable Input<String> version) {
        this.autoscaling = autoscaling;
        this.conditions = conditions;
        this.config = config;
        this.initialNodeCount = initialNodeCount;
        this.locations = locations;
        this.management = management;
        this.maxPodsConstraint = maxPodsConstraint;
        this.name = name;
        this.networkConfig = networkConfig;
        this.upgradeSettings = upgradeSettings;
        this.version = version;
    }

    private NodePoolArgs() {
        this.autoscaling = Input.empty();
        this.conditions = Input.empty();
        this.config = Input.empty();
        this.initialNodeCount = Input.empty();
        this.locations = Input.empty();
        this.management = Input.empty();
        this.maxPodsConstraint = Input.empty();
        this.name = Input.empty();
        this.networkConfig = Input.empty();
        this.upgradeSettings = Input.empty();
        this.version = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodePoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<NodePoolAutoscalingArgs> autoscaling;
        private @Nullable Input<List<StatusConditionArgs>> conditions;
        private @Nullable Input<NodeConfigArgs> config;
        private @Nullable Input<Integer> initialNodeCount;
        private @Nullable Input<List<String>> locations;
        private @Nullable Input<NodeManagementArgs> management;
        private @Nullable Input<MaxPodsConstraintArgs> maxPodsConstraint;
        private @Nullable Input<String> name;
        private @Nullable Input<NodeNetworkConfigArgs> networkConfig;
        private @Nullable Input<UpgradeSettingsArgs> upgradeSettings;
        private @Nullable Input<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(NodePoolArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscaling = defaults.autoscaling;
    	      this.conditions = defaults.conditions;
    	      this.config = defaults.config;
    	      this.initialNodeCount = defaults.initialNodeCount;
    	      this.locations = defaults.locations;
    	      this.management = defaults.management;
    	      this.maxPodsConstraint = defaults.maxPodsConstraint;
    	      this.name = defaults.name;
    	      this.networkConfig = defaults.networkConfig;
    	      this.upgradeSettings = defaults.upgradeSettings;
    	      this.version = defaults.version;
        }

        public Builder setAutoscaling(@Nullable Input<NodePoolAutoscalingArgs> autoscaling) {
            this.autoscaling = autoscaling;
            return this;
        }

        public Builder setAutoscaling(@Nullable NodePoolAutoscalingArgs autoscaling) {
            this.autoscaling = Input.ofNullable(autoscaling);
            return this;
        }

        public Builder setConditions(@Nullable Input<List<StatusConditionArgs>> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder setConditions(@Nullable List<StatusConditionArgs> conditions) {
            this.conditions = Input.ofNullable(conditions);
            return this;
        }

        public Builder setConfig(@Nullable Input<NodeConfigArgs> config) {
            this.config = config;
            return this;
        }

        public Builder setConfig(@Nullable NodeConfigArgs config) {
            this.config = Input.ofNullable(config);
            return this;
        }

        public Builder setInitialNodeCount(@Nullable Input<Integer> initialNodeCount) {
            this.initialNodeCount = initialNodeCount;
            return this;
        }

        public Builder setInitialNodeCount(@Nullable Integer initialNodeCount) {
            this.initialNodeCount = Input.ofNullable(initialNodeCount);
            return this;
        }

        public Builder setLocations(@Nullable Input<List<String>> locations) {
            this.locations = locations;
            return this;
        }

        public Builder setLocations(@Nullable List<String> locations) {
            this.locations = Input.ofNullable(locations);
            return this;
        }

        public Builder setManagement(@Nullable Input<NodeManagementArgs> management) {
            this.management = management;
            return this;
        }

        public Builder setManagement(@Nullable NodeManagementArgs management) {
            this.management = Input.ofNullable(management);
            return this;
        }

        public Builder setMaxPodsConstraint(@Nullable Input<MaxPodsConstraintArgs> maxPodsConstraint) {
            this.maxPodsConstraint = maxPodsConstraint;
            return this;
        }

        public Builder setMaxPodsConstraint(@Nullable MaxPodsConstraintArgs maxPodsConstraint) {
            this.maxPodsConstraint = Input.ofNullable(maxPodsConstraint);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setNetworkConfig(@Nullable Input<NodeNetworkConfigArgs> networkConfig) {
            this.networkConfig = networkConfig;
            return this;
        }

        public Builder setNetworkConfig(@Nullable NodeNetworkConfigArgs networkConfig) {
            this.networkConfig = Input.ofNullable(networkConfig);
            return this;
        }

        public Builder setUpgradeSettings(@Nullable Input<UpgradeSettingsArgs> upgradeSettings) {
            this.upgradeSettings = upgradeSettings;
            return this;
        }

        public Builder setUpgradeSettings(@Nullable UpgradeSettingsArgs upgradeSettings) {
            this.upgradeSettings = Input.ofNullable(upgradeSettings);
            return this;
        }

        public Builder setVersion(@Nullable Input<String> version) {
            this.version = version;
            return this;
        }

        public Builder setVersion(@Nullable String version) {
            this.version = Input.ofNullable(version);
            return this;
        }

        public NodePoolArgs build() {
            return new NodePoolArgs(autoscaling, conditions, config, initialNodeCount, locations, management, maxPodsConstraint, name, networkConfig, upgradeSettings, version);
        }
    }
}
