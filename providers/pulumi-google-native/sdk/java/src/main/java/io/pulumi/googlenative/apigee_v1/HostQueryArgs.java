// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.apigee_v1;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1QueryMetricArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HostQueryArgs extends io.pulumi.resources.ResourceArgs {

    public static final HostQueryArgs Empty = new HostQueryArgs();

    /**
     * Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\t`).
     * 
     */
    @InputImport(name="csvDelimiter")
      private final @Nullable Input<String> csvDelimiter;

    public Input<String> getCsvDelimiter() {
        return this.csvDelimiter == null ? Input.empty() : this.csvDelimiter;
    }

    /**
     * A list of dimensions. https://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions
     * 
     */
    @InputImport(name="dimensions")
      private final @Nullable Input<List<String>> dimensions;

    public Input<List<String>> getDimensions() {
        return this.dimensions == null ? Input.empty() : this.dimensions;
    }

    /**
     * Hostname needs to be specified if query intends to run at host level. This field is only allowed when query is submitted by CreateHostAsyncQuery where analytics data will be grouped by organization and hostname.
     * 
     */
    @InputImport(name="envgroupHostname")
      private final @Nullable Input<String> envgroupHostname;

    public Input<String> getEnvgroupHostname() {
        return this.envgroupHostname == null ? Input.empty() : this.envgroupHostname;
    }

    /**
     * Boolean expression that can be used to filter data. Filter expressions can be combined using AND/OR terms and should be fully parenthesized to avoid ambiguity. See Analytics metrics, dimensions, and filters reference https://docs.apigee.com/api-platform/analytics/analytics-reference for more information on the fields available to filter on. For more information on the tokens that you use to build filter expressions, see Filter expression syntax. https://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax
     * 
     */
    @InputImport(name="filter")
      private final @Nullable Input<String> filter;

    public Input<String> getFilter() {
        return this.filter == null ? Input.empty() : this.filter;
    }

    /**
     * Time unit used to group the result set. Valid values include: second, minute, hour, day, week, or month. If a query includes groupByTimeUnit, then the result is an aggregation based on the specified time unit and the resultant timestamp does not include milliseconds precision. If a query omits groupByTimeUnit, then the resultant timestamp includes milliseconds precision.
     * 
     */
    @InputImport(name="groupByTimeUnit")
      private final @Nullable Input<String> groupByTimeUnit;

    public Input<String> getGroupByTimeUnit() {
        return this.groupByTimeUnit == null ? Input.empty() : this.groupByTimeUnit;
    }

    /**
     * Maximum number of rows that can be returned in the result.
     * 
     */
    @InputImport(name="limit")
      private final @Nullable Input<Integer> limit;

    public Input<Integer> getLimit() {
        return this.limit == null ? Input.empty() : this.limit;
    }

    /**
     * A list of Metrics.
     * 
     */
    @InputImport(name="metrics")
      private final @Nullable Input<List<GoogleCloudApigeeV1QueryMetricArgs>> metrics;

    public Input<List<GoogleCloudApigeeV1QueryMetricArgs>> getMetrics() {
        return this.metrics == null ? Input.empty() : this.metrics;
    }

    /**
     * Asynchronous Query Name.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="organizationId", required=true)
      private final Input<String> organizationId;

    public Input<String> getOrganizationId() {
        return this.organizationId;
    }

    /**
     * Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the csvDelimiter property.
     * 
     */
    @InputImport(name="outputFormat")
      private final @Nullable Input<String> outputFormat;

    public Input<String> getOutputFormat() {
        return this.outputFormat == null ? Input.empty() : this.outputFormat;
    }

    /**
     * Asynchronous Report ID.
     * 
     */
    @InputImport(name="reportDefinitionId")
      private final @Nullable Input<String> reportDefinitionId;

    public Input<String> getReportDefinitionId() {
        return this.reportDefinitionId == null ? Input.empty() : this.reportDefinitionId;
    }

    /**
     * Time range for the query. Can use the following predefined strings to specify the time range: `last60minutes` `last24hours` `last7days` Or, specify the timeRange as a structure describing start and end timestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ. Example: "timeRange": { "start": "2018-07-29T00:13:00Z", "end": "2018-08-01T00:18:00Z" }
     * 
     */
    @InputImport(name="timeRange", required=true)
      private final Input<Object> timeRange;

    public Input<Object> getTimeRange() {
        return this.timeRange;
    }

    public HostQueryArgs(
        @Nullable Input<String> csvDelimiter,
        @Nullable Input<List<String>> dimensions,
        @Nullable Input<String> envgroupHostname,
        @Nullable Input<String> filter,
        @Nullable Input<String> groupByTimeUnit,
        @Nullable Input<Integer> limit,
        @Nullable Input<List<GoogleCloudApigeeV1QueryMetricArgs>> metrics,
        @Nullable Input<String> name,
        Input<String> organizationId,
        @Nullable Input<String> outputFormat,
        @Nullable Input<String> reportDefinitionId,
        Input<Object> timeRange) {
        this.csvDelimiter = csvDelimiter;
        this.dimensions = dimensions;
        this.envgroupHostname = envgroupHostname;
        this.filter = filter;
        this.groupByTimeUnit = groupByTimeUnit;
        this.limit = limit;
        this.metrics = metrics;
        this.name = name;
        this.organizationId = Objects.requireNonNull(organizationId, "expected parameter 'organizationId' to be non-null");
        this.outputFormat = outputFormat;
        this.reportDefinitionId = reportDefinitionId;
        this.timeRange = Objects.requireNonNull(timeRange, "expected parameter 'timeRange' to be non-null");
    }

    private HostQueryArgs() {
        this.csvDelimiter = Input.empty();
        this.dimensions = Input.empty();
        this.envgroupHostname = Input.empty();
        this.filter = Input.empty();
        this.groupByTimeUnit = Input.empty();
        this.limit = Input.empty();
        this.metrics = Input.empty();
        this.name = Input.empty();
        this.organizationId = Input.empty();
        this.outputFormat = Input.empty();
        this.reportDefinitionId = Input.empty();
        this.timeRange = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HostQueryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> csvDelimiter;
        private @Nullable Input<List<String>> dimensions;
        private @Nullable Input<String> envgroupHostname;
        private @Nullable Input<String> filter;
        private @Nullable Input<String> groupByTimeUnit;
        private @Nullable Input<Integer> limit;
        private @Nullable Input<List<GoogleCloudApigeeV1QueryMetricArgs>> metrics;
        private @Nullable Input<String> name;
        private Input<String> organizationId;
        private @Nullable Input<String> outputFormat;
        private @Nullable Input<String> reportDefinitionId;
        private Input<Object> timeRange;

        public Builder() {
    	      // Empty
        }

        public Builder(HostQueryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.csvDelimiter = defaults.csvDelimiter;
    	      this.dimensions = defaults.dimensions;
    	      this.envgroupHostname = defaults.envgroupHostname;
    	      this.filter = defaults.filter;
    	      this.groupByTimeUnit = defaults.groupByTimeUnit;
    	      this.limit = defaults.limit;
    	      this.metrics = defaults.metrics;
    	      this.name = defaults.name;
    	      this.organizationId = defaults.organizationId;
    	      this.outputFormat = defaults.outputFormat;
    	      this.reportDefinitionId = defaults.reportDefinitionId;
    	      this.timeRange = defaults.timeRange;
        }

        public Builder setCsvDelimiter(@Nullable Input<String> csvDelimiter) {
            this.csvDelimiter = csvDelimiter;
            return this;
        }

        public Builder setCsvDelimiter(@Nullable String csvDelimiter) {
            this.csvDelimiter = Input.ofNullable(csvDelimiter);
            return this;
        }

        public Builder setDimensions(@Nullable Input<List<String>> dimensions) {
            this.dimensions = dimensions;
            return this;
        }

        public Builder setDimensions(@Nullable List<String> dimensions) {
            this.dimensions = Input.ofNullable(dimensions);
            return this;
        }

        public Builder setEnvgroupHostname(@Nullable Input<String> envgroupHostname) {
            this.envgroupHostname = envgroupHostname;
            return this;
        }

        public Builder setEnvgroupHostname(@Nullable String envgroupHostname) {
            this.envgroupHostname = Input.ofNullable(envgroupHostname);
            return this;
        }

        public Builder setFilter(@Nullable Input<String> filter) {
            this.filter = filter;
            return this;
        }

        public Builder setFilter(@Nullable String filter) {
            this.filter = Input.ofNullable(filter);
            return this;
        }

        public Builder setGroupByTimeUnit(@Nullable Input<String> groupByTimeUnit) {
            this.groupByTimeUnit = groupByTimeUnit;
            return this;
        }

        public Builder setGroupByTimeUnit(@Nullable String groupByTimeUnit) {
            this.groupByTimeUnit = Input.ofNullable(groupByTimeUnit);
            return this;
        }

        public Builder setLimit(@Nullable Input<Integer> limit) {
            this.limit = limit;
            return this;
        }

        public Builder setLimit(@Nullable Integer limit) {
            this.limit = Input.ofNullable(limit);
            return this;
        }

        public Builder setMetrics(@Nullable Input<List<GoogleCloudApigeeV1QueryMetricArgs>> metrics) {
            this.metrics = metrics;
            return this;
        }

        public Builder setMetrics(@Nullable List<GoogleCloudApigeeV1QueryMetricArgs> metrics) {
            this.metrics = Input.ofNullable(metrics);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOrganizationId(Input<String> organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }

        public Builder setOrganizationId(String organizationId) {
            this.organizationId = Input.of(Objects.requireNonNull(organizationId));
            return this;
        }

        public Builder setOutputFormat(@Nullable Input<String> outputFormat) {
            this.outputFormat = outputFormat;
            return this;
        }

        public Builder setOutputFormat(@Nullable String outputFormat) {
            this.outputFormat = Input.ofNullable(outputFormat);
            return this;
        }

        public Builder setReportDefinitionId(@Nullable Input<String> reportDefinitionId) {
            this.reportDefinitionId = reportDefinitionId;
            return this;
        }

        public Builder setReportDefinitionId(@Nullable String reportDefinitionId) {
            this.reportDefinitionId = Input.ofNullable(reportDefinitionId);
            return this;
        }

        public Builder setTimeRange(Input<Object> timeRange) {
            this.timeRange = Objects.requireNonNull(timeRange);
            return this;
        }

        public Builder setTimeRange(Object timeRange) {
            this.timeRange = Input.of(Objects.requireNonNull(timeRange));
            return this;
        }
        public HostQueryArgs build() {
            return new HostQueryArgs(csvDelimiter, dimensions, envgroupHostname, filter, groupByTimeUnit, limit, metrics, name, organizationId, outputFormat, reportDefinitionId, timeRange);
        }
    }
}
