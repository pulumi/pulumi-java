// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datacatalog_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.datacatalog_v1.enums.EntryType;
import io.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs;
import io.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1BigQueryTableSpecArgs;
import io.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1BusinessContextArgs;
import io.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs;
import io.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1DatabaseTableSpecArgs;
import io.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1GcsFilesetSpecArgs;
import io.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1RoutineSpecArgs;
import io.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1SchemaArgs;
import io.pulumi.googlenative.datacatalog_v1.inputs.GoogleCloudDatacatalogV1SystemTimestampsArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EntryArgs extends io.pulumi.resources.ResourceArgs {

    public static final EntryArgs Empty = new EntryArgs();

    /**
     * Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
     * 
     */
    @Import(name="bigqueryDateShardedSpec")
      private final @Nullable Output<GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs> bigqueryDateShardedSpec;

    public Output<GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs> getBigqueryDateShardedSpec() {
        return this.bigqueryDateShardedSpec == null ? Output.empty() : this.bigqueryDateShardedSpec;
    }

    /**
     * Specification that applies to a BigQuery table. Valid only for entries with the `TABLE` type.
     * 
     */
    @Import(name="bigqueryTableSpec")
      private final @Nullable Output<GoogleCloudDatacatalogV1BigQueryTableSpecArgs> bigqueryTableSpec;

    public Output<GoogleCloudDatacatalogV1BigQueryTableSpecArgs> getBigqueryTableSpec() {
        return this.bigqueryTableSpec == null ? Output.empty() : this.bigqueryTableSpec;
    }

    /**
     * Business Context of the entry.
     * 
     */
    @Import(name="businessContext")
      private final @Nullable Output<GoogleCloudDatacatalogV1BusinessContextArgs> businessContext;

    public Output<GoogleCloudDatacatalogV1BusinessContextArgs> getBusinessContext() {
        return this.businessContext == null ? Output.empty() : this.businessContext;
    }

    /**
     * Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type.
     * 
     */
    @Import(name="dataSourceConnectionSpec")
      private final @Nullable Output<GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs> dataSourceConnectionSpec;

    public Output<GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs> getDataSourceConnectionSpec() {
        return this.dataSourceConnectionSpec == null ? Output.empty() : this.dataSourceConnectionSpec;
    }

    /**
     * Specification that applies to a table resource. Valid only for entries with the `TABLE` type.
     * 
     */
    @Import(name="databaseTableSpec")
      private final @Nullable Output<GoogleCloudDatacatalogV1DatabaseTableSpecArgs> databaseTableSpec;

    public Output<GoogleCloudDatacatalogV1DatabaseTableSpecArgs> getDatabaseTableSpec() {
        return this.databaseTableSpec == null ? Output.empty() : this.databaseTableSpec;
    }

    /**
     * Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * Display name of an entry. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum size is 200 bytes when encoded in UTF-8. Default value is an empty string.
     * 
     */
    @Import(name="displayName")
      private final @Nullable Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName == null ? Output.empty() : this.displayName;
    }

    @Import(name="entryGroupId", required=true)
      private final Output<String> entryGroupId;

    public Output<String> getEntryGroupId() {
        return this.entryGroupId;
    }

    @Import(name="entryId", required=true)
      private final Output<String> entryId;

    public Output<String> getEntryId() {
        return this.entryId;
    }

    /**
     * Fully qualified name (FQN) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation and read-only afterwards. Can be used for search and lookup of the entries. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`
     * 
     */
    @Import(name="fullyQualifiedName")
      private final @Nullable Output<String> fullyQualifiedName;

    public Output<String> getFullyQualifiedName() {
        return this.fullyQualifiedName == null ? Output.empty() : this.fullyQualifiedName;
    }

    /**
     * Specification that applies to a Cloud Storage fileset. Valid only for entries with the `FILESET` type.
     * 
     */
    @Import(name="gcsFilesetSpec")
      private final @Nullable Output<GoogleCloudDatacatalogV1GcsFilesetSpecArgs> gcsFilesetSpec;

    public Output<GoogleCloudDatacatalogV1GcsFilesetSpecArgs> getGcsFilesetSpec() {
        return this.gcsFilesetSpec == null ? Output.empty() : this.gcsFilesetSpec;
    }

    /**
     * Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels == null ? Output.empty() : this.labels;
    }

    /**
     * The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
     * 
     */
    @Import(name="linkedResource")
      private final @Nullable Output<String> linkedResource;

    public Output<String> getLinkedResource() {
        return this.linkedResource == null ? Output.empty() : this.linkedResource;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Specification that applies to a user-defined function or procedure. Valid only for entries with the `ROUTINE` type.
     * 
     */
    @Import(name="routineSpec")
      private final @Nullable Output<GoogleCloudDatacatalogV1RoutineSpecArgs> routineSpec;

    public Output<GoogleCloudDatacatalogV1RoutineSpecArgs> getRoutineSpec() {
        return this.routineSpec == null ? Output.empty() : this.routineSpec;
    }

    /**
     * Schema of the entry. An entry might not have any schema attached to it.
     * 
     */
    @Import(name="schema")
      private final @Nullable Output<GoogleCloudDatacatalogV1SchemaArgs> schema;

    public Output<GoogleCloudDatacatalogV1SchemaArgs> getSchema() {
        return this.schema == null ? Output.empty() : this.schema;
    }

    /**
     * Timestamps from the underlying resource, not from the Data Catalog entry. Output only when the entry has a type listed in the `EntryType` enum. For entries with `user_specified_type`, this field is optional and defaults to an empty timestamp.
     * 
     */
    @Import(name="sourceSystemTimestamps")
      private final @Nullable Output<GoogleCloudDatacatalogV1SystemTimestampsArgs> sourceSystemTimestamps;

    public Output<GoogleCloudDatacatalogV1SystemTimestampsArgs> getSourceSystemTimestamps() {
        return this.sourceSystemTimestamps == null ? Output.empty() : this.sourceSystemTimestamps;
    }

    /**
     * The type of the entry. Only used for entries with types listed in the `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other entries created in Data Catalog must use the `user_specified_type`.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<EntryType> type;

    public Output<EntryType> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    /**
     * Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
     * 
     */
    @Import(name="userSpecifiedSystem")
      private final @Nullable Output<String> userSpecifiedSystem;

    public Output<String> getUserSpecifiedSystem() {
        return this.userSpecifiedSystem == null ? Output.empty() : this.userSpecifiedSystem;
    }

    /**
     * Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
     * 
     */
    @Import(name="userSpecifiedType")
      private final @Nullable Output<String> userSpecifiedType;

    public Output<String> getUserSpecifiedType() {
        return this.userSpecifiedType == null ? Output.empty() : this.userSpecifiedType;
    }

    public EntryArgs(
        @Nullable Output<GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs> bigqueryDateShardedSpec,
        @Nullable Output<GoogleCloudDatacatalogV1BigQueryTableSpecArgs> bigqueryTableSpec,
        @Nullable Output<GoogleCloudDatacatalogV1BusinessContextArgs> businessContext,
        @Nullable Output<GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs> dataSourceConnectionSpec,
        @Nullable Output<GoogleCloudDatacatalogV1DatabaseTableSpecArgs> databaseTableSpec,
        @Nullable Output<String> description,
        @Nullable Output<String> displayName,
        Output<String> entryGroupId,
        Output<String> entryId,
        @Nullable Output<String> fullyQualifiedName,
        @Nullable Output<GoogleCloudDatacatalogV1GcsFilesetSpecArgs> gcsFilesetSpec,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<String> linkedResource,
        @Nullable Output<String> location,
        @Nullable Output<String> project,
        @Nullable Output<GoogleCloudDatacatalogV1RoutineSpecArgs> routineSpec,
        @Nullable Output<GoogleCloudDatacatalogV1SchemaArgs> schema,
        @Nullable Output<GoogleCloudDatacatalogV1SystemTimestampsArgs> sourceSystemTimestamps,
        @Nullable Output<EntryType> type,
        @Nullable Output<String> userSpecifiedSystem,
        @Nullable Output<String> userSpecifiedType) {
        this.bigqueryDateShardedSpec = bigqueryDateShardedSpec;
        this.bigqueryTableSpec = bigqueryTableSpec;
        this.businessContext = businessContext;
        this.dataSourceConnectionSpec = dataSourceConnectionSpec;
        this.databaseTableSpec = databaseTableSpec;
        this.description = description;
        this.displayName = displayName;
        this.entryGroupId = Objects.requireNonNull(entryGroupId, "expected parameter 'entryGroupId' to be non-null");
        this.entryId = Objects.requireNonNull(entryId, "expected parameter 'entryId' to be non-null");
        this.fullyQualifiedName = fullyQualifiedName;
        this.gcsFilesetSpec = gcsFilesetSpec;
        this.labels = labels;
        this.linkedResource = linkedResource;
        this.location = location;
        this.project = project;
        this.routineSpec = routineSpec;
        this.schema = schema;
        this.sourceSystemTimestamps = sourceSystemTimestamps;
        this.type = type;
        this.userSpecifiedSystem = userSpecifiedSystem;
        this.userSpecifiedType = userSpecifiedType;
    }

    private EntryArgs() {
        this.bigqueryDateShardedSpec = Output.empty();
        this.bigqueryTableSpec = Output.empty();
        this.businessContext = Output.empty();
        this.dataSourceConnectionSpec = Output.empty();
        this.databaseTableSpec = Output.empty();
        this.description = Output.empty();
        this.displayName = Output.empty();
        this.entryGroupId = Output.empty();
        this.entryId = Output.empty();
        this.fullyQualifiedName = Output.empty();
        this.gcsFilesetSpec = Output.empty();
        this.labels = Output.empty();
        this.linkedResource = Output.empty();
        this.location = Output.empty();
        this.project = Output.empty();
        this.routineSpec = Output.empty();
        this.schema = Output.empty();
        this.sourceSystemTimestamps = Output.empty();
        this.type = Output.empty();
        this.userSpecifiedSystem = Output.empty();
        this.userSpecifiedType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs> bigqueryDateShardedSpec;
        private @Nullable Output<GoogleCloudDatacatalogV1BigQueryTableSpecArgs> bigqueryTableSpec;
        private @Nullable Output<GoogleCloudDatacatalogV1BusinessContextArgs> businessContext;
        private @Nullable Output<GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs> dataSourceConnectionSpec;
        private @Nullable Output<GoogleCloudDatacatalogV1DatabaseTableSpecArgs> databaseTableSpec;
        private @Nullable Output<String> description;
        private @Nullable Output<String> displayName;
        private Output<String> entryGroupId;
        private Output<String> entryId;
        private @Nullable Output<String> fullyQualifiedName;
        private @Nullable Output<GoogleCloudDatacatalogV1GcsFilesetSpecArgs> gcsFilesetSpec;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<String> linkedResource;
        private @Nullable Output<String> location;
        private @Nullable Output<String> project;
        private @Nullable Output<GoogleCloudDatacatalogV1RoutineSpecArgs> routineSpec;
        private @Nullable Output<GoogleCloudDatacatalogV1SchemaArgs> schema;
        private @Nullable Output<GoogleCloudDatacatalogV1SystemTimestampsArgs> sourceSystemTimestamps;
        private @Nullable Output<EntryType> type;
        private @Nullable Output<String> userSpecifiedSystem;
        private @Nullable Output<String> userSpecifiedType;

        public Builder() {
    	      // Empty
        }

        public Builder(EntryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryDateShardedSpec = defaults.bigqueryDateShardedSpec;
    	      this.bigqueryTableSpec = defaults.bigqueryTableSpec;
    	      this.businessContext = defaults.businessContext;
    	      this.dataSourceConnectionSpec = defaults.dataSourceConnectionSpec;
    	      this.databaseTableSpec = defaults.databaseTableSpec;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.entryGroupId = defaults.entryGroupId;
    	      this.entryId = defaults.entryId;
    	      this.fullyQualifiedName = defaults.fullyQualifiedName;
    	      this.gcsFilesetSpec = defaults.gcsFilesetSpec;
    	      this.labels = defaults.labels;
    	      this.linkedResource = defaults.linkedResource;
    	      this.location = defaults.location;
    	      this.project = defaults.project;
    	      this.routineSpec = defaults.routineSpec;
    	      this.schema = defaults.schema;
    	      this.sourceSystemTimestamps = defaults.sourceSystemTimestamps;
    	      this.type = defaults.type;
    	      this.userSpecifiedSystem = defaults.userSpecifiedSystem;
    	      this.userSpecifiedType = defaults.userSpecifiedType;
        }

        public Builder bigqueryDateShardedSpec(@Nullable Output<GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs> bigqueryDateShardedSpec) {
            this.bigqueryDateShardedSpec = bigqueryDateShardedSpec;
            return this;
        }
        public Builder bigqueryDateShardedSpec(@Nullable GoogleCloudDatacatalogV1BigQueryDateShardedSpecArgs bigqueryDateShardedSpec) {
            this.bigqueryDateShardedSpec = Output.ofNullable(bigqueryDateShardedSpec);
            return this;
        }
        public Builder bigqueryTableSpec(@Nullable Output<GoogleCloudDatacatalogV1BigQueryTableSpecArgs> bigqueryTableSpec) {
            this.bigqueryTableSpec = bigqueryTableSpec;
            return this;
        }
        public Builder bigqueryTableSpec(@Nullable GoogleCloudDatacatalogV1BigQueryTableSpecArgs bigqueryTableSpec) {
            this.bigqueryTableSpec = Output.ofNullable(bigqueryTableSpec);
            return this;
        }
        public Builder businessContext(@Nullable Output<GoogleCloudDatacatalogV1BusinessContextArgs> businessContext) {
            this.businessContext = businessContext;
            return this;
        }
        public Builder businessContext(@Nullable GoogleCloudDatacatalogV1BusinessContextArgs businessContext) {
            this.businessContext = Output.ofNullable(businessContext);
            return this;
        }
        public Builder dataSourceConnectionSpec(@Nullable Output<GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs> dataSourceConnectionSpec) {
            this.dataSourceConnectionSpec = dataSourceConnectionSpec;
            return this;
        }
        public Builder dataSourceConnectionSpec(@Nullable GoogleCloudDatacatalogV1DataSourceConnectionSpecArgs dataSourceConnectionSpec) {
            this.dataSourceConnectionSpec = Output.ofNullable(dataSourceConnectionSpec);
            return this;
        }
        public Builder databaseTableSpec(@Nullable Output<GoogleCloudDatacatalogV1DatabaseTableSpecArgs> databaseTableSpec) {
            this.databaseTableSpec = databaseTableSpec;
            return this;
        }
        public Builder databaseTableSpec(@Nullable GoogleCloudDatacatalogV1DatabaseTableSpecArgs databaseTableSpec) {
            this.databaseTableSpec = Output.ofNullable(databaseTableSpec);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder displayName(@Nullable Output<String> displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = Output.ofNullable(displayName);
            return this;
        }
        public Builder entryGroupId(Output<String> entryGroupId) {
            this.entryGroupId = Objects.requireNonNull(entryGroupId);
            return this;
        }
        public Builder entryGroupId(String entryGroupId) {
            this.entryGroupId = Output.of(Objects.requireNonNull(entryGroupId));
            return this;
        }
        public Builder entryId(Output<String> entryId) {
            this.entryId = Objects.requireNonNull(entryId);
            return this;
        }
        public Builder entryId(String entryId) {
            this.entryId = Output.of(Objects.requireNonNull(entryId));
            return this;
        }
        public Builder fullyQualifiedName(@Nullable Output<String> fullyQualifiedName) {
            this.fullyQualifiedName = fullyQualifiedName;
            return this;
        }
        public Builder fullyQualifiedName(@Nullable String fullyQualifiedName) {
            this.fullyQualifiedName = Output.ofNullable(fullyQualifiedName);
            return this;
        }
        public Builder gcsFilesetSpec(@Nullable Output<GoogleCloudDatacatalogV1GcsFilesetSpecArgs> gcsFilesetSpec) {
            this.gcsFilesetSpec = gcsFilesetSpec;
            return this;
        }
        public Builder gcsFilesetSpec(@Nullable GoogleCloudDatacatalogV1GcsFilesetSpecArgs gcsFilesetSpec) {
            this.gcsFilesetSpec = Output.ofNullable(gcsFilesetSpec);
            return this;
        }
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Output.ofNullable(labels);
            return this;
        }
        public Builder linkedResource(@Nullable Output<String> linkedResource) {
            this.linkedResource = linkedResource;
            return this;
        }
        public Builder linkedResource(@Nullable String linkedResource) {
            this.linkedResource = Output.ofNullable(linkedResource);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }
        public Builder routineSpec(@Nullable Output<GoogleCloudDatacatalogV1RoutineSpecArgs> routineSpec) {
            this.routineSpec = routineSpec;
            return this;
        }
        public Builder routineSpec(@Nullable GoogleCloudDatacatalogV1RoutineSpecArgs routineSpec) {
            this.routineSpec = Output.ofNullable(routineSpec);
            return this;
        }
        public Builder schema(@Nullable Output<GoogleCloudDatacatalogV1SchemaArgs> schema) {
            this.schema = schema;
            return this;
        }
        public Builder schema(@Nullable GoogleCloudDatacatalogV1SchemaArgs schema) {
            this.schema = Output.ofNullable(schema);
            return this;
        }
        public Builder sourceSystemTimestamps(@Nullable Output<GoogleCloudDatacatalogV1SystemTimestampsArgs> sourceSystemTimestamps) {
            this.sourceSystemTimestamps = sourceSystemTimestamps;
            return this;
        }
        public Builder sourceSystemTimestamps(@Nullable GoogleCloudDatacatalogV1SystemTimestampsArgs sourceSystemTimestamps) {
            this.sourceSystemTimestamps = Output.ofNullable(sourceSystemTimestamps);
            return this;
        }
        public Builder type(@Nullable Output<EntryType> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable EntryType type) {
            this.type = Output.ofNullable(type);
            return this;
        }
        public Builder userSpecifiedSystem(@Nullable Output<String> userSpecifiedSystem) {
            this.userSpecifiedSystem = userSpecifiedSystem;
            return this;
        }
        public Builder userSpecifiedSystem(@Nullable String userSpecifiedSystem) {
            this.userSpecifiedSystem = Output.ofNullable(userSpecifiedSystem);
            return this;
        }
        public Builder userSpecifiedType(@Nullable Output<String> userSpecifiedType) {
            this.userSpecifiedType = userSpecifiedType;
            return this;
        }
        public Builder userSpecifiedType(@Nullable String userSpecifiedType) {
            this.userSpecifiedType = Output.ofNullable(userSpecifiedType);
            return this;
        }        public EntryArgs build() {
            return new EntryArgs(bigqueryDateShardedSpec, bigqueryTableSpec, businessContext, dataSourceConnectionSpec, databaseTableSpec, description, displayName, entryGroupId, entryId, fullyQualifiedName, gcsFilesetSpec, labels, linkedResource, location, project, routineSpec, schema, sourceSystemTimestamps, type, userSpecifiedSystem, userSpecifiedType);
        }
    }
}
