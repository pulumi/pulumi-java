// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.compute_beta.inputs.RouterNatRuleActionArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RouterNatRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final RouterNatRuleArgs Empty = new RouterNatRuleArgs();

    /**
     * The action to be enforced for traffic that matches this rule.
     * 
     */
    @Import(name="action")
      private final @Nullable Output<RouterNatRuleActionArgs> action;

    public Output<RouterNatRuleActionArgs> getAction() {
        return this.action == null ? Output.empty() : this.action;
    }

    /**
     * An optional description of this rule.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * CEL expression that specifies the match condition that egress traffic from a VM is evaluated against. If it evaluates to true, the corresponding `action` is enforced. The following examples are valid match expressions for public NAT: "inIpRange(destination.ip, '1.1.0.0/16') || inIpRange(destination.ip, '2.2.0.0/16')" "destination.ip == '1.1.0.1' || destination.ip == '8.8.8.8'" The following example is a valid match expression for private NAT: "nexthop.hub == 'https://networkconnectivity.googleapis.com/v1alpha1/projects/my-project/global/hub/hub-1'"
     * 
     */
    @Import(name="match")
      private final @Nullable Output<String> match;

    public Output<String> getMatch() {
        return this.match == null ? Output.empty() : this.match;
    }

    /**
     * An integer uniquely identifying a rule in the list. The rule number must be a positive value between 0 and 65000, and must be unique among rules within a NAT.
     * 
     */
    @Import(name="ruleNumber")
      private final @Nullable Output<Integer> ruleNumber;

    public Output<Integer> getRuleNumber() {
        return this.ruleNumber == null ? Output.empty() : this.ruleNumber;
    }

    public RouterNatRuleArgs(
        @Nullable Output<RouterNatRuleActionArgs> action,
        @Nullable Output<String> description,
        @Nullable Output<String> match,
        @Nullable Output<Integer> ruleNumber) {
        this.action = action;
        this.description = description;
        this.match = match;
        this.ruleNumber = ruleNumber;
    }

    private RouterNatRuleArgs() {
        this.action = Output.empty();
        this.description = Output.empty();
        this.match = Output.empty();
        this.ruleNumber = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouterNatRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<RouterNatRuleActionArgs> action;
        private @Nullable Output<String> description;
        private @Nullable Output<String> match;
        private @Nullable Output<Integer> ruleNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(RouterNatRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.description = defaults.description;
    	      this.match = defaults.match;
    	      this.ruleNumber = defaults.ruleNumber;
        }

        public Builder action(@Nullable Output<RouterNatRuleActionArgs> action) {
            this.action = action;
            return this;
        }

        public Builder action(@Nullable RouterNatRuleActionArgs action) {
            this.action = Output.ofNullable(action);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder match(@Nullable Output<String> match) {
            this.match = match;
            return this;
        }

        public Builder match(@Nullable String match) {
            this.match = Output.ofNullable(match);
            return this;
        }

        public Builder ruleNumber(@Nullable Output<Integer> ruleNumber) {
            this.ruleNumber = ruleNumber;
            return this;
        }

        public Builder ruleNumber(@Nullable Integer ruleNumber) {
            this.ruleNumber = Output.ofNullable(ruleNumber);
            return this;
        }
        public RouterNatRuleArgs build() {
            return new RouterNatRuleArgs(action, description, match, ruleNumber);
        }
    }
}
