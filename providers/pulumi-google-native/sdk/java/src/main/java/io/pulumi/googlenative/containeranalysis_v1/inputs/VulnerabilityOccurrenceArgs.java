// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.containeranalysis_v1.enums.VulnerabilityOccurrenceEffectiveSeverity;
import io.pulumi.googlenative.containeranalysis_v1.inputs.CVSSArgs;
import io.pulumi.googlenative.containeranalysis_v1.inputs.PackageIssueArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An occurrence of a severity vulnerability on a resource.
 * 
 */
public final class VulnerabilityOccurrenceArgs extends io.pulumi.resources.ResourceArgs {

    public static final VulnerabilityOccurrenceArgs Empty = new VulnerabilityOccurrenceArgs();

    /**
     * The cvss v3 score for the vulnerability.
     * 
     */
    @InputImport(name="cvssv3")
      private final @Nullable Input<CVSSArgs> cvssv3;

    public Input<CVSSArgs> getCvssv3() {
        return this.cvssv3 == null ? Input.empty() : this.cvssv3;
    }

    /**
     * The distro assigned severity for this vulnerability when it is available, otherwise this is the note provider assigned severity. When there are multiple PackageIssues for this vulnerability, they can have different effective severities because some might be provided by the distro while others are provided by the language ecosystem for a language pack. For this reason, it is advised to use the effective severity on the PackageIssue level. In the case where multiple PackageIssues have differing effective severities, this field should be the highest severity for any of the PackageIssues.
     * 
     */
    @InputImport(name="effectiveSeverity")
      private final @Nullable Input<VulnerabilityOccurrenceEffectiveSeverity> effectiveSeverity;

    public Input<VulnerabilityOccurrenceEffectiveSeverity> getEffectiveSeverity() {
        return this.effectiveSeverity == null ? Input.empty() : this.effectiveSeverity;
    }

    /**
     * The set of affected locations and their fixes (if available) within the associated resource.
     * 
     */
    @InputImport(name="packageIssue", required=true)
      private final Input<List<PackageIssueArgs>> packageIssue;

    public Input<List<PackageIssueArgs>> getPackageIssue() {
        return this.packageIssue;
    }

    /**
     * The type of package; whether native or non native (e.g., ruby gems, node.js packages, etc.).
     * 
     */
    @InputImport(name="type")
      private final @Nullable Input<String> type;

    public Input<String> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    public VulnerabilityOccurrenceArgs(
        @Nullable Input<CVSSArgs> cvssv3,
        @Nullable Input<VulnerabilityOccurrenceEffectiveSeverity> effectiveSeverity,
        Input<List<PackageIssueArgs>> packageIssue,
        @Nullable Input<String> type) {
        this.cvssv3 = cvssv3;
        this.effectiveSeverity = effectiveSeverity;
        this.packageIssue = Objects.requireNonNull(packageIssue, "expected parameter 'packageIssue' to be non-null");
        this.type = type;
    }

    private VulnerabilityOccurrenceArgs() {
        this.cvssv3 = Input.empty();
        this.effectiveSeverity = Input.empty();
        this.packageIssue = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VulnerabilityOccurrenceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<CVSSArgs> cvssv3;
        private @Nullable Input<VulnerabilityOccurrenceEffectiveSeverity> effectiveSeverity;
        private Input<List<PackageIssueArgs>> packageIssue;
        private @Nullable Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(VulnerabilityOccurrenceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cvssv3 = defaults.cvssv3;
    	      this.effectiveSeverity = defaults.effectiveSeverity;
    	      this.packageIssue = defaults.packageIssue;
    	      this.type = defaults.type;
        }

        public Builder setCvssv3(@Nullable Input<CVSSArgs> cvssv3) {
            this.cvssv3 = cvssv3;
            return this;
        }

        public Builder setCvssv3(@Nullable CVSSArgs cvssv3) {
            this.cvssv3 = Input.ofNullable(cvssv3);
            return this;
        }

        public Builder setEffectiveSeverity(@Nullable Input<VulnerabilityOccurrenceEffectiveSeverity> effectiveSeverity) {
            this.effectiveSeverity = effectiveSeverity;
            return this;
        }

        public Builder setEffectiveSeverity(@Nullable VulnerabilityOccurrenceEffectiveSeverity effectiveSeverity) {
            this.effectiveSeverity = Input.ofNullable(effectiveSeverity);
            return this;
        }

        public Builder setPackageIssue(Input<List<PackageIssueArgs>> packageIssue) {
            this.packageIssue = Objects.requireNonNull(packageIssue);
            return this;
        }

        public Builder setPackageIssue(List<PackageIssueArgs> packageIssue) {
            this.packageIssue = Input.of(Objects.requireNonNull(packageIssue));
            return this;
        }

        public Builder setType(@Nullable Input<String> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = Input.ofNullable(type);
            return this;
        }
        public VulnerabilityOccurrenceArgs build() {
            return new VulnerabilityOccurrenceArgs(cvssv3, effectiveSeverity, packageIssue, type);
        }
    }
}
