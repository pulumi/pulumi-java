// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.deploymentmanager_v2beta.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.deploymentmanager_v2beta.enums.InputMappingLocation;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * InputMapping creates a 'virtual' property that will be injected into the properties before sending the request to the underlying API.
 * 
 */
public final class InputMappingArgs extends io.pulumi.resources.ResourceArgs {

    public static final InputMappingArgs Empty = new InputMappingArgs();

    /**
     * The name of the field that is going to be injected.
     * 
     */
    @InputImport(name="fieldName")
    private final @Nullable Input<String> fieldName;

    public Input<String> getFieldName() {
        return this.fieldName == null ? Input.empty() : this.fieldName;
    }

    /**
     * The location where this mapping applies.
     * 
     */
    @InputImport(name="location")
    private final @Nullable Input<InputMappingLocation> location;

    public Input<InputMappingLocation> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * Regex to evaluate on method to decide if input applies.
     * 
     */
    @InputImport(name="methodMatch")
    private final @Nullable Input<String> methodMatch;

    public Input<String> getMethodMatch() {
        return this.methodMatch == null ? Input.empty() : this.methodMatch;
    }

    /**
     * A jsonPath expression to select an element.
     * 
     */
    @InputImport(name="value")
    private final @Nullable Input<String> value;

    public Input<String> getValue() {
        return this.value == null ? Input.empty() : this.value;
    }

    public InputMappingArgs(
        @Nullable Input<String> fieldName,
        @Nullable Input<InputMappingLocation> location,
        @Nullable Input<String> methodMatch,
        @Nullable Input<String> value) {
        this.fieldName = fieldName;
        this.location = location;
        this.methodMatch = methodMatch;
        this.value = value;
    }

    private InputMappingArgs() {
        this.fieldName = Input.empty();
        this.location = Input.empty();
        this.methodMatch = Input.empty();
        this.value = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InputMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> fieldName;
        private @Nullable Input<InputMappingLocation> location;
        private @Nullable Input<String> methodMatch;
        private @Nullable Input<String> value;

        public Builder() {
    	      // Empty
        }

        public Builder(InputMappingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fieldName = defaults.fieldName;
    	      this.location = defaults.location;
    	      this.methodMatch = defaults.methodMatch;
    	      this.value = defaults.value;
        }

        public Builder setFieldName(@Nullable Input<String> fieldName) {
            this.fieldName = fieldName;
            return this;
        }

        public Builder setFieldName(@Nullable String fieldName) {
            this.fieldName = Input.ofNullable(fieldName);
            return this;
        }

        public Builder setLocation(@Nullable Input<InputMappingLocation> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable InputMappingLocation location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setMethodMatch(@Nullable Input<String> methodMatch) {
            this.methodMatch = methodMatch;
            return this;
        }

        public Builder setMethodMatch(@Nullable String methodMatch) {
            this.methodMatch = Input.ofNullable(methodMatch);
            return this;
        }

        public Builder setValue(@Nullable Input<String> value) {
            this.value = value;
            return this;
        }

        public Builder setValue(@Nullable String value) {
            this.value = Input.ofNullable(value);
            return this;
        }

        public InputMappingArgs build() {
            return new InputMappingArgs(fieldName, location, methodMatch, value);
        }
    }
}
