// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.ml_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.ml_v1.outputs.GoogleCloudMlV1__ParameterSpecResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GoogleCloudMlV1__HyperparameterSpecResponse {
    /**
     * Optional. The search algorithm specified for the hyperparameter tuning job. Uses the default AI Platform hyperparameter tuning algorithm if unspecified.
     * 
     */
    private final String algorithm;
    /**
     * Optional. Indicates if the hyperparameter tuning job enables auto trial early stopping.
     * 
     */
    private final Boolean enableTrialEarlyStopping;
    /**
     * The type of goal to use for tuning. Available types are `MAXIMIZE` and `MINIMIZE`. Defaults to `MAXIMIZE`.
     * 
     */
    private final String goal;
    /**
     * Optional. The TensorFlow summary tag name to use for optimizing trials. For current versions of TensorFlow, this tag name should exactly match what is shown in TensorBoard, including all scopes. For versions of TensorFlow prior to 0.12, this should be only the tag passed to tf.Summary. By default, "training/hptuning/metric" will be used.
     * 
     */
    private final String hyperparameterMetricTag;
    /**
     * Optional. The number of failed trials that need to be seen before failing the hyperparameter tuning job. You can specify this field to override the default failing criteria for AI Platform hyperparameter tuning jobs. Defaults to zero, which means the service decides when a hyperparameter job should fail.
     * 
     */
    private final Integer maxFailedTrials;
    /**
     * Optional. The number of training trials to run concurrently. You can reduce the time it takes to perform hyperparameter tuning by adding trials in parallel. However, each trail only benefits from the information gained in completed trials. That means that a trial does not get access to the results of trials running at the same time, which could reduce the quality of the overall optimization. Each trial will use the same scale tier and machine types. Defaults to one.
     * 
     */
    private final Integer maxParallelTrials;
    /**
     * Optional. How many training trials should be attempted to optimize the specified hyperparameters. Defaults to one.
     * 
     */
    private final Integer maxTrials;
    /**
     * The set of parameters to tune.
     * 
     */
    private final List<GoogleCloudMlV1__ParameterSpecResponse> params;
    /**
     * Optional. The prior hyperparameter tuning job id that users hope to continue with. The job id will be used to find the corresponding vizier study guid and resume the study.
     * 
     */
    private final String resumePreviousJobId;

    @OutputCustomType.Constructor
    private GoogleCloudMlV1__HyperparameterSpecResponse(
        @OutputCustomType.Parameter("algorithm") String algorithm,
        @OutputCustomType.Parameter("enableTrialEarlyStopping") Boolean enableTrialEarlyStopping,
        @OutputCustomType.Parameter("goal") String goal,
        @OutputCustomType.Parameter("hyperparameterMetricTag") String hyperparameterMetricTag,
        @OutputCustomType.Parameter("maxFailedTrials") Integer maxFailedTrials,
        @OutputCustomType.Parameter("maxParallelTrials") Integer maxParallelTrials,
        @OutputCustomType.Parameter("maxTrials") Integer maxTrials,
        @OutputCustomType.Parameter("params") List<GoogleCloudMlV1__ParameterSpecResponse> params,
        @OutputCustomType.Parameter("resumePreviousJobId") String resumePreviousJobId) {
        this.algorithm = algorithm;
        this.enableTrialEarlyStopping = enableTrialEarlyStopping;
        this.goal = goal;
        this.hyperparameterMetricTag = hyperparameterMetricTag;
        this.maxFailedTrials = maxFailedTrials;
        this.maxParallelTrials = maxParallelTrials;
        this.maxTrials = maxTrials;
        this.params = params;
        this.resumePreviousJobId = resumePreviousJobId;
    }

    /**
     * Optional. The search algorithm specified for the hyperparameter tuning job. Uses the default AI Platform hyperparameter tuning algorithm if unspecified.
     * 
    */
    public String getAlgorithm() {
        return this.algorithm;
    }
    /**
     * Optional. Indicates if the hyperparameter tuning job enables auto trial early stopping.
     * 
    */
    public Boolean getEnableTrialEarlyStopping() {
        return this.enableTrialEarlyStopping;
    }
    /**
     * The type of goal to use for tuning. Available types are `MAXIMIZE` and `MINIMIZE`. Defaults to `MAXIMIZE`.
     * 
    */
    public String getGoal() {
        return this.goal;
    }
    /**
     * Optional. The TensorFlow summary tag name to use for optimizing trials. For current versions of TensorFlow, this tag name should exactly match what is shown in TensorBoard, including all scopes. For versions of TensorFlow prior to 0.12, this should be only the tag passed to tf.Summary. By default, "training/hptuning/metric" will be used.
     * 
    */
    public String getHyperparameterMetricTag() {
        return this.hyperparameterMetricTag;
    }
    /**
     * Optional. The number of failed trials that need to be seen before failing the hyperparameter tuning job. You can specify this field to override the default failing criteria for AI Platform hyperparameter tuning jobs. Defaults to zero, which means the service decides when a hyperparameter job should fail.
     * 
    */
    public Integer getMaxFailedTrials() {
        return this.maxFailedTrials;
    }
    /**
     * Optional. The number of training trials to run concurrently. You can reduce the time it takes to perform hyperparameter tuning by adding trials in parallel. However, each trail only benefits from the information gained in completed trials. That means that a trial does not get access to the results of trials running at the same time, which could reduce the quality of the overall optimization. Each trial will use the same scale tier and machine types. Defaults to one.
     * 
    */
    public Integer getMaxParallelTrials() {
        return this.maxParallelTrials;
    }
    /**
     * Optional. How many training trials should be attempted to optimize the specified hyperparameters. Defaults to one.
     * 
    */
    public Integer getMaxTrials() {
        return this.maxTrials;
    }
    /**
     * The set of parameters to tune.
     * 
    */
    public List<GoogleCloudMlV1__ParameterSpecResponse> getParams() {
        return this.params;
    }
    /**
     * Optional. The prior hyperparameter tuning job id that users hope to continue with. The job id will be used to find the corresponding vizier study guid and resume the study.
     * 
    */
    public String getResumePreviousJobId() {
        return this.resumePreviousJobId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudMlV1__HyperparameterSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String algorithm;
        private Boolean enableTrialEarlyStopping;
        private String goal;
        private String hyperparameterMetricTag;
        private Integer maxFailedTrials;
        private Integer maxParallelTrials;
        private Integer maxTrials;
        private List<GoogleCloudMlV1__ParameterSpecResponse> params;
        private String resumePreviousJobId;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudMlV1__HyperparameterSpecResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.enableTrialEarlyStopping = defaults.enableTrialEarlyStopping;
    	      this.goal = defaults.goal;
    	      this.hyperparameterMetricTag = defaults.hyperparameterMetricTag;
    	      this.maxFailedTrials = defaults.maxFailedTrials;
    	      this.maxParallelTrials = defaults.maxParallelTrials;
    	      this.maxTrials = defaults.maxTrials;
    	      this.params = defaults.params;
    	      this.resumePreviousJobId = defaults.resumePreviousJobId;
        }

        public Builder algorithm(String algorithm) {
            this.algorithm = Objects.requireNonNull(algorithm);
            return this;
        }

        public Builder enableTrialEarlyStopping(Boolean enableTrialEarlyStopping) {
            this.enableTrialEarlyStopping = Objects.requireNonNull(enableTrialEarlyStopping);
            return this;
        }

        public Builder goal(String goal) {
            this.goal = Objects.requireNonNull(goal);
            return this;
        }

        public Builder hyperparameterMetricTag(String hyperparameterMetricTag) {
            this.hyperparameterMetricTag = Objects.requireNonNull(hyperparameterMetricTag);
            return this;
        }

        public Builder maxFailedTrials(Integer maxFailedTrials) {
            this.maxFailedTrials = Objects.requireNonNull(maxFailedTrials);
            return this;
        }

        public Builder maxParallelTrials(Integer maxParallelTrials) {
            this.maxParallelTrials = Objects.requireNonNull(maxParallelTrials);
            return this;
        }

        public Builder maxTrials(Integer maxTrials) {
            this.maxTrials = Objects.requireNonNull(maxTrials);
            return this;
        }

        public Builder params(List<GoogleCloudMlV1__ParameterSpecResponse> params) {
            this.params = Objects.requireNonNull(params);
            return this;
        }

        public Builder resumePreviousJobId(String resumePreviousJobId) {
            this.resumePreviousJobId = Objects.requireNonNull(resumePreviousJobId);
            return this;
        }
        public GoogleCloudMlV1__HyperparameterSpecResponse build() {
            return new GoogleCloudMlV1__HyperparameterSpecResponse(algorithm, enableTrialEarlyStopping, goal, hyperparameterMetricTag, maxFailedTrials, maxParallelTrials, maxTrials, params, resumePreviousJobId);
        }
    }
}
