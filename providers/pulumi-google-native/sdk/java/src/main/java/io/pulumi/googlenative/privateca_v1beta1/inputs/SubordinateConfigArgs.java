// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.privateca_v1beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.privateca_v1beta1.inputs.SubordinateConfigChainArgs;
import java.lang.String;
import java.util.Objects;


/**
 * Describes a subordinate CA's issuers. This is either a resource path to a known issuing CertificateAuthority, or a PEM issuer certificate chain.
 * 
 */
public final class SubordinateConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final SubordinateConfigArgs Empty = new SubordinateConfigArgs();

    /**
     * This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format `projects/*{@literal /}locations/*{@literal /}certificateAuthorities/*`.
     * 
     */
    @InputImport(name="certificateAuthority", required=true)
    private final Input<String> certificateAuthority;

    public Input<String> getCertificateAuthority() {
        return this.certificateAuthority;
    }

    /**
     * Contains the PEM certificate chain for the issuers of this CertificateAuthority, but not pem certificate for this CA itself.
     * 
     */
    @InputImport(name="pemIssuerChain", required=true)
    private final Input<SubordinateConfigChainArgs> pemIssuerChain;

    public Input<SubordinateConfigChainArgs> getPemIssuerChain() {
        return this.pemIssuerChain;
    }

    public SubordinateConfigArgs(
        Input<String> certificateAuthority,
        Input<SubordinateConfigChainArgs> pemIssuerChain) {
        this.certificateAuthority = Objects.requireNonNull(certificateAuthority, "expected parameter 'certificateAuthority' to be non-null");
        this.pemIssuerChain = Objects.requireNonNull(pemIssuerChain, "expected parameter 'pemIssuerChain' to be non-null");
    }

    private SubordinateConfigArgs() {
        this.certificateAuthority = Input.empty();
        this.pemIssuerChain = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubordinateConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> certificateAuthority;
        private Input<SubordinateConfigChainArgs> pemIssuerChain;

        public Builder() {
    	      // Empty
        }

        public Builder(SubordinateConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthority = defaults.certificateAuthority;
    	      this.pemIssuerChain = defaults.pemIssuerChain;
        }

        public Builder setCertificateAuthority(Input<String> certificateAuthority) {
            this.certificateAuthority = Objects.requireNonNull(certificateAuthority);
            return this;
        }

        public Builder setCertificateAuthority(String certificateAuthority) {
            this.certificateAuthority = Input.of(Objects.requireNonNull(certificateAuthority));
            return this;
        }

        public Builder setPemIssuerChain(Input<SubordinateConfigChainArgs> pemIssuerChain) {
            this.pemIssuerChain = Objects.requireNonNull(pemIssuerChain);
            return this;
        }

        public Builder setPemIssuerChain(SubordinateConfigChainArgs pemIssuerChain) {
            this.pemIssuerChain = Input.of(Objects.requireNonNull(pemIssuerChain));
            return this;
        }

        public SubordinateConfigArgs build() {
            return new SubordinateConfigArgs(certificateAuthority, pemIssuerChain);
        }
    }
}
