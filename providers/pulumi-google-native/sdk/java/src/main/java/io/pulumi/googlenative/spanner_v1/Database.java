// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.spanner_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.spanner_v1.DatabaseArgs;
import io.pulumi.googlenative.spanner_v1.outputs.EncryptionConfigResponse;
import io.pulumi.googlenative.spanner_v1.outputs.EncryptionInfoResponse;
import io.pulumi.googlenative.spanner_v1.outputs.RestoreInfoResponse;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="google-native:spanner/v1:Database")
public class Database extends io.pulumi.resources.CustomResource {
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime;
    }
    @OutputExport(name="databaseDialect", type=String.class, parameters={})
    private Output<String> databaseDialect;

    public Output<String> getDatabaseDialect() {
        return this.databaseDialect;
    }
    @OutputExport(name="defaultLeader", type=String.class, parameters={})
    private Output<String> defaultLeader;

    public Output<String> getDefaultLeader() {
        return this.defaultLeader;
    }
    @OutputExport(name="earliestVersionTime", type=String.class, parameters={})
    private Output<String> earliestVersionTime;

    public Output<String> getEarliestVersionTime() {
        return this.earliestVersionTime;
    }
    @OutputExport(name="encryptionConfig", type=EncryptionConfigResponse.class, parameters={})
    private Output<EncryptionConfigResponse> encryptionConfig;

    public Output<EncryptionConfigResponse> getEncryptionConfig() {
        return this.encryptionConfig;
    }
    @OutputExport(name="encryptionInfo", type=List.class, parameters={EncryptionInfoResponse.class})
    private Output<List<EncryptionInfoResponse>> encryptionInfo;

    public Output<List<EncryptionInfoResponse>> getEncryptionInfo() {
        return this.encryptionInfo;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="restoreInfo", type=RestoreInfoResponse.class, parameters={})
    private Output<RestoreInfoResponse> restoreInfo;

    public Output<RestoreInfoResponse> getRestoreInfo() {
        return this.restoreInfo;
    }
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> getState() {
        return this.state;
    }
    @OutputExport(name="versionRetentionPeriod", type=String.class, parameters={})
    private Output<String> versionRetentionPeriod;

    public Output<String> getVersionRetentionPeriod() {
        return this.versionRetentionPeriod;
    }

    public Database(String name, DatabaseArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:spanner/v1:Database", name, args == null ? DatabaseArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Database(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:spanner/v1:Database", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Database get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Database(name, id, options);
    }
}
