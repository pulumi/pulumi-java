// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class ErrorProtoResponse extends io.pulumi.resources.InvokeArgs {

    public static final ErrorProtoResponse Empty = new ErrorProtoResponse();

    /**
     * Debugging information. This property is internal to Google and should not be used.
     * 
     */
    @Import(name="debugInfo", required=true)
      private final String debugInfo;

    public String getDebugInfo() {
        return this.debugInfo;
    }

    /**
     * Specifies where the error occurred, if present.
     * 
     */
    @Import(name="location", required=true)
      private final String location;

    public String getLocation() {
        return this.location;
    }

    /**
     * A human-readable description of the error.
     * 
     */
    @Import(name="message", required=true)
      private final String message;

    public String getMessage() {
        return this.message;
    }

    /**
     * A short error code that summarizes the error.
     * 
     */
    @Import(name="reason", required=true)
      private final String reason;

    public String getReason() {
        return this.reason;
    }

    public ErrorProtoResponse(
        String debugInfo,
        String location,
        String message,
        String reason) {
        this.debugInfo = Objects.requireNonNull(debugInfo, "expected parameter 'debugInfo' to be non-null");
        this.location = Objects.requireNonNull(location, "expected parameter 'location' to be non-null");
        this.message = Objects.requireNonNull(message, "expected parameter 'message' to be non-null");
        this.reason = Objects.requireNonNull(reason, "expected parameter 'reason' to be non-null");
    }

    private ErrorProtoResponse() {
        this.debugInfo = null;
        this.location = null;
        this.message = null;
        this.reason = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ErrorProtoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String debugInfo;
        private String location;
        private String message;
        private String reason;

        public Builder() {
    	      // Empty
        }

        public Builder(ErrorProtoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.debugInfo = defaults.debugInfo;
    	      this.location = defaults.location;
    	      this.message = defaults.message;
    	      this.reason = defaults.reason;
        }

        public Builder debugInfo(String debugInfo) {
            this.debugInfo = Objects.requireNonNull(debugInfo);
            return this;
        }
        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public Builder message(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }
        public Builder reason(String reason) {
            this.reason = Objects.requireNonNull(reason);
            return this;
        }        public ErrorProtoResponse build() {
            return new ErrorProtoResponse(debugInfo, location, message, reason);
        }
    }
}
