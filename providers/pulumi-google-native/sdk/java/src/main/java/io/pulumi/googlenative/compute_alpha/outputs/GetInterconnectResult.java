// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_alpha.outputs.InterconnectCircuitInfoResponse;
import io.pulumi.googlenative.compute_alpha.outputs.InterconnectMacsecResponse;
import io.pulumi.googlenative.compute_alpha.outputs.InterconnectOutageNotificationResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetInterconnectResult {
    private final Boolean adminEnabled;
    private final List<InterconnectCircuitInfoResponse> circuitInfos;
    private final String creationTimestamp;
    private final String customerName;
    private final String description;
    private final List<InterconnectOutageNotificationResponse> expectedOutages;
    private final String googleIpAddress;
    private final String googleReferenceId;
    private final List<String> interconnectAttachments;
    private final String interconnectType;
    private final String kind;
    private final String labelFingerprint;
    private final Map<String,String> labels;
    private final String linkType;
    private final String location;
    private final InterconnectMacsecResponse macsec;
    private final Boolean macsecEnabled;
    private final String name;
    private final String nocContactEmail;
    private final String operationalStatus;
    private final String peerIpAddress;
    private final Integer provisionedLinkCount;
    private final Integer requestedLinkCount;
    private final Boolean satisfiesPzs;
    private final String selfLink;
    private final String selfLinkWithId;
    private final String state;

    @OutputCustomType.Constructor({"adminEnabled","circuitInfos","creationTimestamp","customerName","description","expectedOutages","googleIpAddress","googleReferenceId","interconnectAttachments","interconnectType","kind","labelFingerprint","labels","linkType","location","macsec","macsecEnabled","name","nocContactEmail","operationalStatus","peerIpAddress","provisionedLinkCount","requestedLinkCount","satisfiesPzs","selfLink","selfLinkWithId","state"})
    private GetInterconnectResult(
        Boolean adminEnabled,
        List<InterconnectCircuitInfoResponse> circuitInfos,
        String creationTimestamp,
        String customerName,
        String description,
        List<InterconnectOutageNotificationResponse> expectedOutages,
        String googleIpAddress,
        String googleReferenceId,
        List<String> interconnectAttachments,
        String interconnectType,
        String kind,
        String labelFingerprint,
        Map<String,String> labels,
        String linkType,
        String location,
        InterconnectMacsecResponse macsec,
        Boolean macsecEnabled,
        String name,
        String nocContactEmail,
        String operationalStatus,
        String peerIpAddress,
        Integer provisionedLinkCount,
        Integer requestedLinkCount,
        Boolean satisfiesPzs,
        String selfLink,
        String selfLinkWithId,
        String state) {
        this.adminEnabled = Objects.requireNonNull(adminEnabled);
        this.circuitInfos = Objects.requireNonNull(circuitInfos);
        this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
        this.customerName = Objects.requireNonNull(customerName);
        this.description = Objects.requireNonNull(description);
        this.expectedOutages = Objects.requireNonNull(expectedOutages);
        this.googleIpAddress = Objects.requireNonNull(googleIpAddress);
        this.googleReferenceId = Objects.requireNonNull(googleReferenceId);
        this.interconnectAttachments = Objects.requireNonNull(interconnectAttachments);
        this.interconnectType = Objects.requireNonNull(interconnectType);
        this.kind = Objects.requireNonNull(kind);
        this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
        this.labels = Objects.requireNonNull(labels);
        this.linkType = Objects.requireNonNull(linkType);
        this.location = Objects.requireNonNull(location);
        this.macsec = Objects.requireNonNull(macsec);
        this.macsecEnabled = Objects.requireNonNull(macsecEnabled);
        this.name = Objects.requireNonNull(name);
        this.nocContactEmail = Objects.requireNonNull(nocContactEmail);
        this.operationalStatus = Objects.requireNonNull(operationalStatus);
        this.peerIpAddress = Objects.requireNonNull(peerIpAddress);
        this.provisionedLinkCount = Objects.requireNonNull(provisionedLinkCount);
        this.requestedLinkCount = Objects.requireNonNull(requestedLinkCount);
        this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
        this.selfLink = Objects.requireNonNull(selfLink);
        this.selfLinkWithId = Objects.requireNonNull(selfLinkWithId);
        this.state = Objects.requireNonNull(state);
    }

    public Boolean getAdminEnabled() {
        return this.adminEnabled;
    }
    public List<InterconnectCircuitInfoResponse> getCircuitInfos() {
        return this.circuitInfos;
    }
    public String getCreationTimestamp() {
        return this.creationTimestamp;
    }
    public String getCustomerName() {
        return this.customerName;
    }
    public String getDescription() {
        return this.description;
    }
    public List<InterconnectOutageNotificationResponse> getExpectedOutages() {
        return this.expectedOutages;
    }
    public String getGoogleIpAddress() {
        return this.googleIpAddress;
    }
    public String getGoogleReferenceId() {
        return this.googleReferenceId;
    }
    public List<String> getInterconnectAttachments() {
        return this.interconnectAttachments;
    }
    public String getInterconnectType() {
        return this.interconnectType;
    }
    public String getKind() {
        return this.kind;
    }
    public String getLabelFingerprint() {
        return this.labelFingerprint;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public String getLinkType() {
        return this.linkType;
    }
    public String getLocation() {
        return this.location;
    }
    public InterconnectMacsecResponse getMacsec() {
        return this.macsec;
    }
    public Boolean getMacsecEnabled() {
        return this.macsecEnabled;
    }
    public String getName() {
        return this.name;
    }
    public String getNocContactEmail() {
        return this.nocContactEmail;
    }
    public String getOperationalStatus() {
        return this.operationalStatus;
    }
    public String getPeerIpAddress() {
        return this.peerIpAddress;
    }
    public Integer getProvisionedLinkCount() {
        return this.provisionedLinkCount;
    }
    public Integer getRequestedLinkCount() {
        return this.requestedLinkCount;
    }
    public Boolean getSatisfiesPzs() {
        return this.satisfiesPzs;
    }
    public String getSelfLink() {
        return this.selfLink;
    }
    public String getSelfLinkWithId() {
        return this.selfLinkWithId;
    }
    public String getState() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInterconnectResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean adminEnabled;
        private List<InterconnectCircuitInfoResponse> circuitInfos;
        private String creationTimestamp;
        private String customerName;
        private String description;
        private List<InterconnectOutageNotificationResponse> expectedOutages;
        private String googleIpAddress;
        private String googleReferenceId;
        private List<String> interconnectAttachments;
        private String interconnectType;
        private String kind;
        private String labelFingerprint;
        private Map<String,String> labels;
        private String linkType;
        private String location;
        private InterconnectMacsecResponse macsec;
        private Boolean macsecEnabled;
        private String name;
        private String nocContactEmail;
        private String operationalStatus;
        private String peerIpAddress;
        private Integer provisionedLinkCount;
        private Integer requestedLinkCount;
        private Boolean satisfiesPzs;
        private String selfLink;
        private String selfLinkWithId;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInterconnectResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminEnabled = defaults.adminEnabled;
    	      this.circuitInfos = defaults.circuitInfos;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.customerName = defaults.customerName;
    	      this.description = defaults.description;
    	      this.expectedOutages = defaults.expectedOutages;
    	      this.googleIpAddress = defaults.googleIpAddress;
    	      this.googleReferenceId = defaults.googleReferenceId;
    	      this.interconnectAttachments = defaults.interconnectAttachments;
    	      this.interconnectType = defaults.interconnectType;
    	      this.kind = defaults.kind;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.labels = defaults.labels;
    	      this.linkType = defaults.linkType;
    	      this.location = defaults.location;
    	      this.macsec = defaults.macsec;
    	      this.macsecEnabled = defaults.macsecEnabled;
    	      this.name = defaults.name;
    	      this.nocContactEmail = defaults.nocContactEmail;
    	      this.operationalStatus = defaults.operationalStatus;
    	      this.peerIpAddress = defaults.peerIpAddress;
    	      this.provisionedLinkCount = defaults.provisionedLinkCount;
    	      this.requestedLinkCount = defaults.requestedLinkCount;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.selfLink = defaults.selfLink;
    	      this.selfLinkWithId = defaults.selfLinkWithId;
    	      this.state = defaults.state;
        }

        public Builder setAdminEnabled(Boolean adminEnabled) {
            this.adminEnabled = Objects.requireNonNull(adminEnabled);
            return this;
        }

        public Builder setCircuitInfos(List<InterconnectCircuitInfoResponse> circuitInfos) {
            this.circuitInfos = Objects.requireNonNull(circuitInfos);
            return this;
        }

        public Builder setCreationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }

        public Builder setCustomerName(String customerName) {
            this.customerName = Objects.requireNonNull(customerName);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setExpectedOutages(List<InterconnectOutageNotificationResponse> expectedOutages) {
            this.expectedOutages = Objects.requireNonNull(expectedOutages);
            return this;
        }

        public Builder setGoogleIpAddress(String googleIpAddress) {
            this.googleIpAddress = Objects.requireNonNull(googleIpAddress);
            return this;
        }

        public Builder setGoogleReferenceId(String googleReferenceId) {
            this.googleReferenceId = Objects.requireNonNull(googleReferenceId);
            return this;
        }

        public Builder setInterconnectAttachments(List<String> interconnectAttachments) {
            this.interconnectAttachments = Objects.requireNonNull(interconnectAttachments);
            return this;
        }

        public Builder setInterconnectType(String interconnectType) {
            this.interconnectType = Objects.requireNonNull(interconnectType);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setLabelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setLinkType(String linkType) {
            this.linkType = Objects.requireNonNull(linkType);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setMacsec(InterconnectMacsecResponse macsec) {
            this.macsec = Objects.requireNonNull(macsec);
            return this;
        }

        public Builder setMacsecEnabled(Boolean macsecEnabled) {
            this.macsecEnabled = Objects.requireNonNull(macsecEnabled);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNocContactEmail(String nocContactEmail) {
            this.nocContactEmail = Objects.requireNonNull(nocContactEmail);
            return this;
        }

        public Builder setOperationalStatus(String operationalStatus) {
            this.operationalStatus = Objects.requireNonNull(operationalStatus);
            return this;
        }

        public Builder setPeerIpAddress(String peerIpAddress) {
            this.peerIpAddress = Objects.requireNonNull(peerIpAddress);
            return this;
        }

        public Builder setProvisionedLinkCount(Integer provisionedLinkCount) {
            this.provisionedLinkCount = Objects.requireNonNull(provisionedLinkCount);
            return this;
        }

        public Builder setRequestedLinkCount(Integer requestedLinkCount) {
            this.requestedLinkCount = Objects.requireNonNull(requestedLinkCount);
            return this;
        }

        public Builder setSatisfiesPzs(Boolean satisfiesPzs) {
            this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setSelfLinkWithId(String selfLinkWithId) {
            this.selfLinkWithId = Objects.requireNonNull(selfLinkWithId);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public GetInterconnectResult build() {
            return new GetInterconnectResult(adminEnabled, circuitInfos, creationTimestamp, customerName, description, expectedOutages, googleIpAddress, googleReferenceId, interconnectAttachments, interconnectType, kind, labelFingerprint, labels, linkType, location, macsec, macsecEnabled, name, nocContactEmail, operationalStatus, peerIpAddress, provisionedLinkCount, requestedLinkCount, satisfiesPzs, selfLink, selfLinkWithId, state);
        }
    }
}
