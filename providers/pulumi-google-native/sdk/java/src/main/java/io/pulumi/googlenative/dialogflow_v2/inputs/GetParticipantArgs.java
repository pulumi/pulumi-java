// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v2.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetParticipantArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetParticipantArgs Empty = new GetParticipantArgs();

    @InputImport(name="conversationId", required=true)
      private final String conversationId;

    public String getConversationId() {
        return this.conversationId;
    }

    @InputImport(name="location", required=true)
      private final String location;

    public String getLocation() {
        return this.location;
    }

    @InputImport(name="participantId", required=true)
      private final String participantId;

    public String getParticipantId() {
        return this.participantId;
    }

    @InputImport(name="project")
      private final @Nullable String project;

    public Optional<String> getProject() {
        return this.project == null ? Optional.empty() : Optional.ofNullable(this.project);
    }

    public GetParticipantArgs(
        String conversationId,
        String location,
        String participantId,
        @Nullable String project) {
        this.conversationId = Objects.requireNonNull(conversationId, "expected parameter 'conversationId' to be non-null");
        this.location = Objects.requireNonNull(location, "expected parameter 'location' to be non-null");
        this.participantId = Objects.requireNonNull(participantId, "expected parameter 'participantId' to be non-null");
        this.project = project;
    }

    private GetParticipantArgs() {
        this.conversationId = null;
        this.location = null;
        this.participantId = null;
        this.project = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetParticipantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String conversationId;
        private String location;
        private String participantId;
        private @Nullable String project;

        public Builder() {
    	      // Empty
        }

        public Builder(GetParticipantArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conversationId = defaults.conversationId;
    	      this.location = defaults.location;
    	      this.participantId = defaults.participantId;
    	      this.project = defaults.project;
        }

        public Builder conversationId(String conversationId) {
            this.conversationId = Objects.requireNonNull(conversationId);
            return this;
        }

        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder participantId(String participantId) {
            this.participantId = Objects.requireNonNull(participantId);
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }
        public GetParticipantArgs build() {
            return new GetParticipantArgs(conversationId, location, participantId, project);
        }
    }
}
