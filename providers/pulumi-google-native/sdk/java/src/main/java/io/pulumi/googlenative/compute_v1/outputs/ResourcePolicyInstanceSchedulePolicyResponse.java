// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_v1.outputs.ResourcePolicyInstanceSchedulePolicyScheduleResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class ResourcePolicyInstanceSchedulePolicyResponse {
    private final String expirationTime;
    private final String startTime;
    private final String timeZone;
    private final ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule;
    private final ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule;

    @OutputCustomType.Constructor({"expirationTime","startTime","timeZone","vmStartSchedule","vmStopSchedule"})
    private ResourcePolicyInstanceSchedulePolicyResponse(
        String expirationTime,
        String startTime,
        String timeZone,
        ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule,
        ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule) {
        this.expirationTime = Objects.requireNonNull(expirationTime);
        this.startTime = Objects.requireNonNull(startTime);
        this.timeZone = Objects.requireNonNull(timeZone);
        this.vmStartSchedule = Objects.requireNonNull(vmStartSchedule);
        this.vmStopSchedule = Objects.requireNonNull(vmStopSchedule);
    }

    public String getExpirationTime() {
        return this.expirationTime;
    }
    public String getStartTime() {
        return this.startTime;
    }
    public String getTimeZone() {
        return this.timeZone;
    }
    public ResourcePolicyInstanceSchedulePolicyScheduleResponse getVmStartSchedule() {
        return this.vmStartSchedule;
    }
    public ResourcePolicyInstanceSchedulePolicyScheduleResponse getVmStopSchedule() {
        return this.vmStopSchedule;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyInstanceSchedulePolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String expirationTime;
        private String startTime;
        private String timeZone;
        private ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule;
        private ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicyInstanceSchedulePolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationTime = defaults.expirationTime;
    	      this.startTime = defaults.startTime;
    	      this.timeZone = defaults.timeZone;
    	      this.vmStartSchedule = defaults.vmStartSchedule;
    	      this.vmStopSchedule = defaults.vmStopSchedule;
        }

        public Builder setExpirationTime(String expirationTime) {
            this.expirationTime = Objects.requireNonNull(expirationTime);
            return this;
        }

        public Builder setStartTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }

        public Builder setTimeZone(String timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }

        public Builder setVmStartSchedule(ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule) {
            this.vmStartSchedule = Objects.requireNonNull(vmStartSchedule);
            return this;
        }

        public Builder setVmStopSchedule(ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule) {
            this.vmStopSchedule = Objects.requireNonNull(vmStopSchedule);
            return this;
        }

        public ResourcePolicyInstanceSchedulePolicyResponse build() {
            return new ResourcePolicyInstanceSchedulePolicyResponse(expirationTime, startTime, timeZone, vmStartSchedule, vmStopSchedule);
        }
    }
}
