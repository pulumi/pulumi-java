// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.compute_alpha.inputs.TlsCertificateContextArgs;
import io.pulumi.googlenative.compute_alpha.inputs.TlsValidationContextArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * [Deprecated] The TLS settings for the client or server. The TLS settings for the client or server.
 * 
 */
public final class TlsContextArgs extends io.pulumi.resources.ResourceArgs {

    public static final TlsContextArgs Empty = new TlsContextArgs();

    /**
     * Defines the mechanism to obtain the client or server certificate.
     * 
     */
    @InputImport(name="certificateContext")
    private final @Nullable Input<TlsCertificateContextArgs> certificateContext;

    public Input<TlsCertificateContextArgs> getCertificateContext() {
        return this.certificateContext == null ? Input.empty() : this.certificateContext;
    }

    /**
     * Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. If omitted, the proxy will not validate the server or client certificate.
     * 
     */
    @InputImport(name="validationContext")
    private final @Nullable Input<TlsValidationContextArgs> validationContext;

    public Input<TlsValidationContextArgs> getValidationContext() {
        return this.validationContext == null ? Input.empty() : this.validationContext;
    }

    public TlsContextArgs(
        @Nullable Input<TlsCertificateContextArgs> certificateContext,
        @Nullable Input<TlsValidationContextArgs> validationContext) {
        this.certificateContext = certificateContext;
        this.validationContext = validationContext;
    }

    private TlsContextArgs() {
        this.certificateContext = Input.empty();
        this.validationContext = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TlsContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<TlsCertificateContextArgs> certificateContext;
        private @Nullable Input<TlsValidationContextArgs> validationContext;

        public Builder() {
    	      // Empty
        }

        public Builder(TlsContextArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateContext = defaults.certificateContext;
    	      this.validationContext = defaults.validationContext;
        }

        public Builder setCertificateContext(@Nullable Input<TlsCertificateContextArgs> certificateContext) {
            this.certificateContext = certificateContext;
            return this;
        }

        public Builder setCertificateContext(@Nullable TlsCertificateContextArgs certificateContext) {
            this.certificateContext = Input.ofNullable(certificateContext);
            return this;
        }

        public Builder setValidationContext(@Nullable Input<TlsValidationContextArgs> validationContext) {
            this.validationContext = validationContext;
            return this;
        }

        public Builder setValidationContext(@Nullable TlsValidationContextArgs validationContext) {
            this.validationContext = Input.ofNullable(validationContext);
            return this;
        }

        public TlsContextArgs build() {
            return new TlsContextArgs(certificateContext, validationContext);
        }
    }
}
