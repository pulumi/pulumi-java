// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.apigee_v1;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.apigee_v1.enums.TargetServerProtocol;
import io.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1TlsInfoArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TargetServerArgs extends io.pulumi.resources.ResourceArgs {

    public static final TargetServerArgs Empty = new TargetServerArgs();

    /**
     * Optional. A human-readable description of this TargetServer.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="environmentId", required=true)
    private final Input<String> environmentId;

    public Input<String> getEnvironmentId() {
        return this.environmentId;
    }

    /**
     * The host name this target connects to. Value must be a valid hostname as described by RFC-1123.
     * 
     */
    @InputImport(name="host", required=true)
    private final Input<String> host;

    public Input<String> getHost() {
        return this.host;
    }

    /**
     * Optional. Enabling/disabling a TargetServer is useful when TargetServers are used in load balancing configurations, and one or more TargetServers need to taken out of rotation periodically. Defaults to true.
     * 
     */
    @InputImport(name="isEnabled")
    private final @Nullable Input<Boolean> isEnabled;

    public Input<Boolean> getIsEnabled() {
        return this.isEnabled == null ? Input.empty() : this.isEnabled;
    }

    /**
     * The resource id of this target server. Values must match the regular expression
     * 
     */
    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="organizationId", required=true)
    private final Input<String> organizationId;

    public Input<String> getOrganizationId() {
        return this.organizationId;
    }

    /**
     * The port number this target connects to on the given host. Value must be between 1 and 65535, inclusive.
     * 
     */
    @InputImport(name="port", required=true)
    private final Input<Integer> port;

    public Input<Integer> getPort() {
        return this.port;
    }

    /**
     * Immutable. The protocol used by this TargetServer.
     * 
     */
    @InputImport(name="protocol")
    private final @Nullable Input<TargetServerProtocol> protocol;

    public Input<TargetServerProtocol> getProtocol() {
        return this.protocol == null ? Input.empty() : this.protocol;
    }

    /**
     * Optional. Specifies TLS configuration info for this TargetServer. The JSON name is `sSLInfo` for legacy/backwards compatibility reasons -- Edge originally supported SSL, and the name is still used for TLS configuration.
     * 
     */
    @InputImport(name="sSLInfo")
    private final @Nullable Input<GoogleCloudApigeeV1TlsInfoArgs> sSLInfo;

    public Input<GoogleCloudApigeeV1TlsInfoArgs> getSSLInfo() {
        return this.sSLInfo == null ? Input.empty() : this.sSLInfo;
    }

    public TargetServerArgs(
        @Nullable Input<String> description,
        Input<String> environmentId,
        Input<String> host,
        @Nullable Input<Boolean> isEnabled,
        @Nullable Input<String> name,
        Input<String> organizationId,
        Input<Integer> port,
        @Nullable Input<TargetServerProtocol> protocol,
        @Nullable Input<GoogleCloudApigeeV1TlsInfoArgs> sSLInfo) {
        this.description = description;
        this.environmentId = Objects.requireNonNull(environmentId, "expected parameter 'environmentId' to be non-null");
        this.host = Objects.requireNonNull(host, "expected parameter 'host' to be non-null");
        this.isEnabled = isEnabled;
        this.name = name;
        this.organizationId = Objects.requireNonNull(organizationId, "expected parameter 'organizationId' to be non-null");
        this.port = Objects.requireNonNull(port, "expected parameter 'port' to be non-null");
        this.protocol = protocol;
        this.sSLInfo = sSLInfo;
    }

    private TargetServerArgs() {
        this.description = Input.empty();
        this.environmentId = Input.empty();
        this.host = Input.empty();
        this.isEnabled = Input.empty();
        this.name = Input.empty();
        this.organizationId = Input.empty();
        this.port = Input.empty();
        this.protocol = Input.empty();
        this.sSLInfo = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private Input<String> environmentId;
        private Input<String> host;
        private @Nullable Input<Boolean> isEnabled;
        private @Nullable Input<String> name;
        private Input<String> organizationId;
        private Input<Integer> port;
        private @Nullable Input<TargetServerProtocol> protocol;
        private @Nullable Input<GoogleCloudApigeeV1TlsInfoArgs> sSLInfo;

        public Builder() {
    	      // Empty
        }

        public Builder(TargetServerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.environmentId = defaults.environmentId;
    	      this.host = defaults.host;
    	      this.isEnabled = defaults.isEnabled;
    	      this.name = defaults.name;
    	      this.organizationId = defaults.organizationId;
    	      this.port = defaults.port;
    	      this.protocol = defaults.protocol;
    	      this.sSLInfo = defaults.sSLInfo;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setEnvironmentId(Input<String> environmentId) {
            this.environmentId = Objects.requireNonNull(environmentId);
            return this;
        }

        public Builder setEnvironmentId(String environmentId) {
            this.environmentId = Input.of(Objects.requireNonNull(environmentId));
            return this;
        }

        public Builder setHost(Input<String> host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }

        public Builder setHost(String host) {
            this.host = Input.of(Objects.requireNonNull(host));
            return this;
        }

        public Builder setIsEnabled(@Nullable Input<Boolean> isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }

        public Builder setIsEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = Input.ofNullable(isEnabled);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOrganizationId(Input<String> organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }

        public Builder setOrganizationId(String organizationId) {
            this.organizationId = Input.of(Objects.requireNonNull(organizationId));
            return this;
        }

        public Builder setPort(Input<Integer> port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public Builder setPort(Integer port) {
            this.port = Input.of(Objects.requireNonNull(port));
            return this;
        }

        public Builder setProtocol(@Nullable Input<TargetServerProtocol> protocol) {
            this.protocol = protocol;
            return this;
        }

        public Builder setProtocol(@Nullable TargetServerProtocol protocol) {
            this.protocol = Input.ofNullable(protocol);
            return this;
        }

        public Builder setSSLInfo(@Nullable Input<GoogleCloudApigeeV1TlsInfoArgs> sSLInfo) {
            this.sSLInfo = sSLInfo;
            return this;
        }

        public Builder setSSLInfo(@Nullable GoogleCloudApigeeV1TlsInfoArgs sSLInfo) {
            this.sSLInfo = Input.ofNullable(sSLInfo);
            return this;
        }

        public TargetServerArgs build() {
            return new TargetServerArgs(description, environmentId, host, isEnabled, name, organizationId, port, protocol, sSLInfo);
        }
    }
}
