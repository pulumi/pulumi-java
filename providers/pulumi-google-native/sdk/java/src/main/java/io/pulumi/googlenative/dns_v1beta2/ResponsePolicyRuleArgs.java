// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dns_v1beta2;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dns_v1beta2.enums.ResponsePolicyRuleBehavior;
import io.pulumi.googlenative.dns_v1beta2.inputs.ResponsePolicyRuleLocalDataArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResponsePolicyRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResponsePolicyRuleArgs Empty = new ResponsePolicyRuleArgs();

    /**
     * Answer this query with a behavior rather than DNS data.
     * 
     */
    @InputImport(name="behavior")
    private final @Nullable Input<ResponsePolicyRuleBehavior> behavior;

    public Input<ResponsePolicyRuleBehavior> getBehavior() {
        return this.behavior == null ? Input.empty() : this.behavior;
    }

    @InputImport(name="clientOperationId")
    private final @Nullable Input<String> clientOperationId;

    public Input<String> getClientOperationId() {
        return this.clientOperationId == null ? Input.empty() : this.clientOperationId;
    }

    /**
     * The DNS name (wildcard or exact) to apply this rule to. Must be unique within the Response Policy Rule.
     * 
     */
    @InputImport(name="dnsName")
    private final @Nullable Input<String> dnsName;

    public Input<String> getDnsName() {
        return this.dnsName == null ? Input.empty() : this.dnsName;
    }

    @InputImport(name="kind")
    private final @Nullable Input<String> kind;

    public Input<String> getKind() {
        return this.kind == null ? Input.empty() : this.kind;
    }

    /**
     * Answer this query directly with DNS data. These ResourceRecordSets override any other DNS behavior for the matched name; in particular they override private zones, the public internet, and GCP internal DNS. No SOA nor NS types are allowed.
     * 
     */
    @InputImport(name="localData")
    private final @Nullable Input<ResponsePolicyRuleLocalDataArgs> localData;

    public Input<ResponsePolicyRuleLocalDataArgs> getLocalData() {
        return this.localData == null ? Input.empty() : this.localData;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="responsePolicy", required=true)
    private final Input<String> responsePolicy;

    public Input<String> getResponsePolicy() {
        return this.responsePolicy;
    }

    /**
     * An identifier for this rule. Must be unique with the ResponsePolicy.
     * 
     */
    @InputImport(name="ruleName")
    private final @Nullable Input<String> ruleName;

    public Input<String> getRuleName() {
        return this.ruleName == null ? Input.empty() : this.ruleName;
    }

    public ResponsePolicyRuleArgs(
        @Nullable Input<ResponsePolicyRuleBehavior> behavior,
        @Nullable Input<String> clientOperationId,
        @Nullable Input<String> dnsName,
        @Nullable Input<String> kind,
        @Nullable Input<ResponsePolicyRuleLocalDataArgs> localData,
        @Nullable Input<String> project,
        Input<String> responsePolicy,
        @Nullable Input<String> ruleName) {
        this.behavior = behavior;
        this.clientOperationId = clientOperationId;
        this.dnsName = dnsName;
        this.kind = kind;
        this.localData = localData;
        this.project = project;
        this.responsePolicy = Objects.requireNonNull(responsePolicy, "expected parameter 'responsePolicy' to be non-null");
        this.ruleName = ruleName;
    }

    private ResponsePolicyRuleArgs() {
        this.behavior = Input.empty();
        this.clientOperationId = Input.empty();
        this.dnsName = Input.empty();
        this.kind = Input.empty();
        this.localData = Input.empty();
        this.project = Input.empty();
        this.responsePolicy = Input.empty();
        this.ruleName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResponsePolicyRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ResponsePolicyRuleBehavior> behavior;
        private @Nullable Input<String> clientOperationId;
        private @Nullable Input<String> dnsName;
        private @Nullable Input<String> kind;
        private @Nullable Input<ResponsePolicyRuleLocalDataArgs> localData;
        private @Nullable Input<String> project;
        private Input<String> responsePolicy;
        private @Nullable Input<String> ruleName;

        public Builder() {
    	      // Empty
        }

        public Builder(ResponsePolicyRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.behavior = defaults.behavior;
    	      this.clientOperationId = defaults.clientOperationId;
    	      this.dnsName = defaults.dnsName;
    	      this.kind = defaults.kind;
    	      this.localData = defaults.localData;
    	      this.project = defaults.project;
    	      this.responsePolicy = defaults.responsePolicy;
    	      this.ruleName = defaults.ruleName;
        }

        public Builder setBehavior(@Nullable Input<ResponsePolicyRuleBehavior> behavior) {
            this.behavior = behavior;
            return this;
        }

        public Builder setBehavior(@Nullable ResponsePolicyRuleBehavior behavior) {
            this.behavior = Input.ofNullable(behavior);
            return this;
        }

        public Builder setClientOperationId(@Nullable Input<String> clientOperationId) {
            this.clientOperationId = clientOperationId;
            return this;
        }

        public Builder setClientOperationId(@Nullable String clientOperationId) {
            this.clientOperationId = Input.ofNullable(clientOperationId);
            return this;
        }

        public Builder setDnsName(@Nullable Input<String> dnsName) {
            this.dnsName = dnsName;
            return this;
        }

        public Builder setDnsName(@Nullable String dnsName) {
            this.dnsName = Input.ofNullable(dnsName);
            return this;
        }

        public Builder setKind(@Nullable Input<String> kind) {
            this.kind = kind;
            return this;
        }

        public Builder setKind(@Nullable String kind) {
            this.kind = Input.ofNullable(kind);
            return this;
        }

        public Builder setLocalData(@Nullable Input<ResponsePolicyRuleLocalDataArgs> localData) {
            this.localData = localData;
            return this;
        }

        public Builder setLocalData(@Nullable ResponsePolicyRuleLocalDataArgs localData) {
            this.localData = Input.ofNullable(localData);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setResponsePolicy(Input<String> responsePolicy) {
            this.responsePolicy = Objects.requireNonNull(responsePolicy);
            return this;
        }

        public Builder setResponsePolicy(String responsePolicy) {
            this.responsePolicy = Input.of(Objects.requireNonNull(responsePolicy));
            return this;
        }

        public Builder setRuleName(@Nullable Input<String> ruleName) {
            this.ruleName = ruleName;
            return this;
        }

        public Builder setRuleName(@Nullable String ruleName) {
            this.ruleName = Input.ofNullable(ruleName);
            return this;
        }

        public ResponsePolicyRuleArgs build() {
            return new ResponsePolicyRuleArgs(behavior, clientOperationId, dnsName, kind, localData, project, responsePolicy, ruleName);
        }
    }
}
