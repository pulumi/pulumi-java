// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.networkconnectivity_v1alpha1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * RouterAppliance represents a Router appliance which is specified by a VM URI and a NIC address.
 * 
 */
public final class RouterApplianceInstanceArgs extends io.pulumi.resources.ResourceArgs {

    public static final RouterApplianceInstanceArgs Empty = new RouterApplianceInstanceArgs();

    /**
     * The IP address of the network interface to use for peering.
     * 
     */
    @Import(name="ipAddress")
      private final @Nullable Output<String> ipAddress;

    public Output<String> getIpAddress() {
        return this.ipAddress == null ? Output.empty() : this.ipAddress;
    }

    @Import(name="networkInterface")
      private final @Nullable Output<String> networkInterface;

    public Output<String> getNetworkInterface() {
        return this.networkInterface == null ? Output.empty() : this.networkInterface;
    }

    /**
     * The URI of the virtual machine resource
     * 
     */
    @Import(name="virtualMachine")
      private final @Nullable Output<String> virtualMachine;

    public Output<String> getVirtualMachine() {
        return this.virtualMachine == null ? Output.empty() : this.virtualMachine;
    }

    public RouterApplianceInstanceArgs(
        @Nullable Output<String> ipAddress,
        @Nullable Output<String> networkInterface,
        @Nullable Output<String> virtualMachine) {
        this.ipAddress = ipAddress;
        this.networkInterface = networkInterface;
        this.virtualMachine = virtualMachine;
    }

    private RouterApplianceInstanceArgs() {
        this.ipAddress = Output.empty();
        this.networkInterface = Output.empty();
        this.virtualMachine = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouterApplianceInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> ipAddress;
        private @Nullable Output<String> networkInterface;
        private @Nullable Output<String> virtualMachine;

        public Builder() {
    	      // Empty
        }

        public Builder(RouterApplianceInstanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ipAddress = defaults.ipAddress;
    	      this.networkInterface = defaults.networkInterface;
    	      this.virtualMachine = defaults.virtualMachine;
        }

        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = Output.ofNullable(ipAddress);
            return this;
        }
        public Builder networkInterface(@Nullable Output<String> networkInterface) {
            this.networkInterface = networkInterface;
            return this;
        }
        public Builder networkInterface(@Nullable String networkInterface) {
            this.networkInterface = Output.ofNullable(networkInterface);
            return this;
        }
        public Builder virtualMachine(@Nullable Output<String> virtualMachine) {
            this.virtualMachine = virtualMachine;
            return this;
        }
        public Builder virtualMachine(@Nullable String virtualMachine) {
            this.virtualMachine = Output.ofNullable(virtualMachine);
            return this;
        }        public RouterApplianceInstanceArgs build() {
            return new RouterApplianceInstanceArgs(ipAddress, networkInterface, virtualMachine);
        }
    }
}
