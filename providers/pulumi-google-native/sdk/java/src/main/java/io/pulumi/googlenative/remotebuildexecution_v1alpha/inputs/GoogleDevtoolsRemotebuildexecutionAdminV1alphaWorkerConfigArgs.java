// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.remotebuildexecution_v1alpha.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.remotebuildexecution_v1alpha.inputs.GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs Empty = new GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs();

    @InputImport(name="accelerator")
    private final @Nullable Input<GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs> accelerator;

    public Input<GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs> getAccelerator() {
        return this.accelerator == null ? Input.empty() : this.accelerator;
    }

    @InputImport(name="diskSizeGb", required=true)
    private final Input<String> diskSizeGb;

    public Input<String> getDiskSizeGb() {
        return this.diskSizeGb;
    }

    @InputImport(name="diskType", required=true)
    private final Input<String> diskType;

    public Input<String> getDiskType() {
        return this.diskType;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="machineType", required=true)
    private final Input<String> machineType;

    public Input<String> getMachineType() {
        return this.machineType;
    }

    @InputImport(name="maxConcurrentActions")
    private final @Nullable Input<String> maxConcurrentActions;

    public Input<String> getMaxConcurrentActions() {
        return this.maxConcurrentActions == null ? Input.empty() : this.maxConcurrentActions;
    }

    @InputImport(name="minCpuPlatform")
    private final @Nullable Input<String> minCpuPlatform;

    public Input<String> getMinCpuPlatform() {
        return this.minCpuPlatform == null ? Input.empty() : this.minCpuPlatform;
    }

    @InputImport(name="networkAccess")
    private final @Nullable Input<String> networkAccess;

    public Input<String> getNetworkAccess() {
        return this.networkAccess == null ? Input.empty() : this.networkAccess;
    }

    @InputImport(name="reserved")
    private final @Nullable Input<Boolean> reserved;

    public Input<Boolean> getReserved() {
        return this.reserved == null ? Input.empty() : this.reserved;
    }

    @InputImport(name="soleTenantNodeType")
    private final @Nullable Input<String> soleTenantNodeType;

    public Input<String> getSoleTenantNodeType() {
        return this.soleTenantNodeType == null ? Input.empty() : this.soleTenantNodeType;
    }

    @InputImport(name="vmImage")
    private final @Nullable Input<String> vmImage;

    public Input<String> getVmImage() {
        return this.vmImage == null ? Input.empty() : this.vmImage;
    }

    public GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs(
        @Nullable Input<GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs> accelerator,
        Input<String> diskSizeGb,
        Input<String> diskType,
        @Nullable Input<Map<String,String>> labels,
        Input<String> machineType,
        @Nullable Input<String> maxConcurrentActions,
        @Nullable Input<String> minCpuPlatform,
        @Nullable Input<String> networkAccess,
        @Nullable Input<Boolean> reserved,
        @Nullable Input<String> soleTenantNodeType,
        @Nullable Input<String> vmImage) {
        this.accelerator = accelerator;
        this.diskSizeGb = Objects.requireNonNull(diskSizeGb, "expected parameter 'diskSizeGb' to be non-null");
        this.diskType = Objects.requireNonNull(diskType, "expected parameter 'diskType' to be non-null");
        this.labels = labels;
        this.machineType = Objects.requireNonNull(machineType, "expected parameter 'machineType' to be non-null");
        this.maxConcurrentActions = maxConcurrentActions;
        this.minCpuPlatform = minCpuPlatform;
        this.networkAccess = networkAccess;
        this.reserved = reserved;
        this.soleTenantNodeType = soleTenantNodeType;
        this.vmImage = vmImage;
    }

    private GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs() {
        this.accelerator = Input.empty();
        this.diskSizeGb = Input.empty();
        this.diskType = Input.empty();
        this.labels = Input.empty();
        this.machineType = Input.empty();
        this.maxConcurrentActions = Input.empty();
        this.minCpuPlatform = Input.empty();
        this.networkAccess = Input.empty();
        this.reserved = Input.empty();
        this.soleTenantNodeType = Input.empty();
        this.vmImage = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs> accelerator;
        private Input<String> diskSizeGb;
        private Input<String> diskType;
        private @Nullable Input<Map<String,String>> labels;
        private Input<String> machineType;
        private @Nullable Input<String> maxConcurrentActions;
        private @Nullable Input<String> minCpuPlatform;
        private @Nullable Input<String> networkAccess;
        private @Nullable Input<Boolean> reserved;
        private @Nullable Input<String> soleTenantNodeType;
        private @Nullable Input<String> vmImage;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accelerator = defaults.accelerator;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.labels = defaults.labels;
    	      this.machineType = defaults.machineType;
    	      this.maxConcurrentActions = defaults.maxConcurrentActions;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.networkAccess = defaults.networkAccess;
    	      this.reserved = defaults.reserved;
    	      this.soleTenantNodeType = defaults.soleTenantNodeType;
    	      this.vmImage = defaults.vmImage;
        }

        public Builder setAccelerator(@Nullable Input<GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs> accelerator) {
            this.accelerator = accelerator;
            return this;
        }

        public Builder setAccelerator(@Nullable GoogleDevtoolsRemotebuildexecutionAdminV1alphaAcceleratorConfigArgs accelerator) {
            this.accelerator = Input.ofNullable(accelerator);
            return this;
        }

        public Builder setDiskSizeGb(Input<String> diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }

        public Builder setDiskSizeGb(String diskSizeGb) {
            this.diskSizeGb = Input.of(Objects.requireNonNull(diskSizeGb));
            return this;
        }

        public Builder setDiskType(Input<String> diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }

        public Builder setDiskType(String diskType) {
            this.diskType = Input.of(Objects.requireNonNull(diskType));
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setMachineType(Input<String> machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }

        public Builder setMachineType(String machineType) {
            this.machineType = Input.of(Objects.requireNonNull(machineType));
            return this;
        }

        public Builder setMaxConcurrentActions(@Nullable Input<String> maxConcurrentActions) {
            this.maxConcurrentActions = maxConcurrentActions;
            return this;
        }

        public Builder setMaxConcurrentActions(@Nullable String maxConcurrentActions) {
            this.maxConcurrentActions = Input.ofNullable(maxConcurrentActions);
            return this;
        }

        public Builder setMinCpuPlatform(@Nullable Input<String> minCpuPlatform) {
            this.minCpuPlatform = minCpuPlatform;
            return this;
        }

        public Builder setMinCpuPlatform(@Nullable String minCpuPlatform) {
            this.minCpuPlatform = Input.ofNullable(minCpuPlatform);
            return this;
        }

        public Builder setNetworkAccess(@Nullable Input<String> networkAccess) {
            this.networkAccess = networkAccess;
            return this;
        }

        public Builder setNetworkAccess(@Nullable String networkAccess) {
            this.networkAccess = Input.ofNullable(networkAccess);
            return this;
        }

        public Builder setReserved(@Nullable Input<Boolean> reserved) {
            this.reserved = reserved;
            return this;
        }

        public Builder setReserved(@Nullable Boolean reserved) {
            this.reserved = Input.ofNullable(reserved);
            return this;
        }

        public Builder setSoleTenantNodeType(@Nullable Input<String> soleTenantNodeType) {
            this.soleTenantNodeType = soleTenantNodeType;
            return this;
        }

        public Builder setSoleTenantNodeType(@Nullable String soleTenantNodeType) {
            this.soleTenantNodeType = Input.ofNullable(soleTenantNodeType);
            return this;
        }

        public Builder setVmImage(@Nullable Input<String> vmImage) {
            this.vmImage = vmImage;
            return this;
        }

        public Builder setVmImage(@Nullable String vmImage) {
            this.vmImage = Input.ofNullable(vmImage);
            return this;
        }

        public GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs build() {
            return new GoogleDevtoolsRemotebuildexecutionAdminV1alphaWorkerConfigArgs(accelerator, diskSizeGb, diskType, labels, machineType, maxConcurrentActions, minCpuPlatform, networkAccess, reserved, soleTenantNodeType, vmImage);
        }
    }
}
