// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class IPAllocationPolicyResponse {
    private final String clusterIpv4CidrBlock;
    private final String clusterSecondaryRangeName;
    private final Boolean createSubnetwork;
    private final String nodeIpv4CidrBlock;
    private final String servicesIpv4CidrBlock;
    private final String servicesSecondaryRangeName;
    private final String subnetworkName;
    private final String tpuIpv4CidrBlock;
    private final Boolean useIpAliases;
    private final Boolean useRoutes;

    @OutputCustomType.Constructor({"clusterIpv4CidrBlock","clusterSecondaryRangeName","createSubnetwork","nodeIpv4CidrBlock","servicesIpv4CidrBlock","servicesSecondaryRangeName","subnetworkName","tpuIpv4CidrBlock","useIpAliases","useRoutes"})
    private IPAllocationPolicyResponse(
        String clusterIpv4CidrBlock,
        String clusterSecondaryRangeName,
        Boolean createSubnetwork,
        String nodeIpv4CidrBlock,
        String servicesIpv4CidrBlock,
        String servicesSecondaryRangeName,
        String subnetworkName,
        String tpuIpv4CidrBlock,
        Boolean useIpAliases,
        Boolean useRoutes) {
        this.clusterIpv4CidrBlock = Objects.requireNonNull(clusterIpv4CidrBlock);
        this.clusterSecondaryRangeName = Objects.requireNonNull(clusterSecondaryRangeName);
        this.createSubnetwork = Objects.requireNonNull(createSubnetwork);
        this.nodeIpv4CidrBlock = Objects.requireNonNull(nodeIpv4CidrBlock);
        this.servicesIpv4CidrBlock = Objects.requireNonNull(servicesIpv4CidrBlock);
        this.servicesSecondaryRangeName = Objects.requireNonNull(servicesSecondaryRangeName);
        this.subnetworkName = Objects.requireNonNull(subnetworkName);
        this.tpuIpv4CidrBlock = Objects.requireNonNull(tpuIpv4CidrBlock);
        this.useIpAliases = Objects.requireNonNull(useIpAliases);
        this.useRoutes = Objects.requireNonNull(useRoutes);
    }

    public String getClusterIpv4CidrBlock() {
        return this.clusterIpv4CidrBlock;
    }
    public String getClusterSecondaryRangeName() {
        return this.clusterSecondaryRangeName;
    }
    public Boolean getCreateSubnetwork() {
        return this.createSubnetwork;
    }
    public String getNodeIpv4CidrBlock() {
        return this.nodeIpv4CidrBlock;
    }
    public String getServicesIpv4CidrBlock() {
        return this.servicesIpv4CidrBlock;
    }
    public String getServicesSecondaryRangeName() {
        return this.servicesSecondaryRangeName;
    }
    public String getSubnetworkName() {
        return this.subnetworkName;
    }
    public String getTpuIpv4CidrBlock() {
        return this.tpuIpv4CidrBlock;
    }
    public Boolean getUseIpAliases() {
        return this.useIpAliases;
    }
    public Boolean getUseRoutes() {
        return this.useRoutes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IPAllocationPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String clusterIpv4CidrBlock;
        private String clusterSecondaryRangeName;
        private Boolean createSubnetwork;
        private String nodeIpv4CidrBlock;
        private String servicesIpv4CidrBlock;
        private String servicesSecondaryRangeName;
        private String subnetworkName;
        private String tpuIpv4CidrBlock;
        private Boolean useIpAliases;
        private Boolean useRoutes;

        public Builder() {
    	      // Empty
        }

        public Builder(IPAllocationPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterIpv4CidrBlock = defaults.clusterIpv4CidrBlock;
    	      this.clusterSecondaryRangeName = defaults.clusterSecondaryRangeName;
    	      this.createSubnetwork = defaults.createSubnetwork;
    	      this.nodeIpv4CidrBlock = defaults.nodeIpv4CidrBlock;
    	      this.servicesIpv4CidrBlock = defaults.servicesIpv4CidrBlock;
    	      this.servicesSecondaryRangeName = defaults.servicesSecondaryRangeName;
    	      this.subnetworkName = defaults.subnetworkName;
    	      this.tpuIpv4CidrBlock = defaults.tpuIpv4CidrBlock;
    	      this.useIpAliases = defaults.useIpAliases;
    	      this.useRoutes = defaults.useRoutes;
        }

        public Builder setClusterIpv4CidrBlock(String clusterIpv4CidrBlock) {
            this.clusterIpv4CidrBlock = Objects.requireNonNull(clusterIpv4CidrBlock);
            return this;
        }

        public Builder setClusterSecondaryRangeName(String clusterSecondaryRangeName) {
            this.clusterSecondaryRangeName = Objects.requireNonNull(clusterSecondaryRangeName);
            return this;
        }

        public Builder setCreateSubnetwork(Boolean createSubnetwork) {
            this.createSubnetwork = Objects.requireNonNull(createSubnetwork);
            return this;
        }

        public Builder setNodeIpv4CidrBlock(String nodeIpv4CidrBlock) {
            this.nodeIpv4CidrBlock = Objects.requireNonNull(nodeIpv4CidrBlock);
            return this;
        }

        public Builder setServicesIpv4CidrBlock(String servicesIpv4CidrBlock) {
            this.servicesIpv4CidrBlock = Objects.requireNonNull(servicesIpv4CidrBlock);
            return this;
        }

        public Builder setServicesSecondaryRangeName(String servicesSecondaryRangeName) {
            this.servicesSecondaryRangeName = Objects.requireNonNull(servicesSecondaryRangeName);
            return this;
        }

        public Builder setSubnetworkName(String subnetworkName) {
            this.subnetworkName = Objects.requireNonNull(subnetworkName);
            return this;
        }

        public Builder setTpuIpv4CidrBlock(String tpuIpv4CidrBlock) {
            this.tpuIpv4CidrBlock = Objects.requireNonNull(tpuIpv4CidrBlock);
            return this;
        }

        public Builder setUseIpAliases(Boolean useIpAliases) {
            this.useIpAliases = Objects.requireNonNull(useIpAliases);
            return this;
        }

        public Builder setUseRoutes(Boolean useRoutes) {
            this.useRoutes = Objects.requireNonNull(useRoutes);
            return this;
        }

        public IPAllocationPolicyResponse build() {
            return new IPAllocationPolicyResponse(clusterIpv4CidrBlock, clusterSecondaryRangeName, createSubnetwork, nodeIpv4CidrBlock, servicesIpv4CidrBlock, servicesSecondaryRangeName, subnetworkName, tpuIpv4CidrBlock, useIpAliases, useRoutes);
        }
    }
}
