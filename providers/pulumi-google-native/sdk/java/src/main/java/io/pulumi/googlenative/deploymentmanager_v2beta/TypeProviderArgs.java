// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.deploymentmanager_v2beta;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.deploymentmanager_v2beta.inputs.CollectionOverrideArgs;
import io.pulumi.googlenative.deploymentmanager_v2beta.inputs.CredentialArgs;
import io.pulumi.googlenative.deploymentmanager_v2beta.inputs.OptionsArgs;
import io.pulumi.googlenative.deploymentmanager_v2beta.inputs.TypeProviderLabelEntryArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TypeProviderArgs extends io.pulumi.resources.ResourceArgs {

    public static final TypeProviderArgs Empty = new TypeProviderArgs();

    @InputImport(name="collectionOverrides")
    private final @Nullable Input<List<CollectionOverrideArgs>> collectionOverrides;

    public Input<List<CollectionOverrideArgs>> getCollectionOverrides() {
        return this.collectionOverrides == null ? Input.empty() : this.collectionOverrides;
    }

    @InputImport(name="credential")
    private final @Nullable Input<CredentialArgs> credential;

    public Input<CredentialArgs> getCredential() {
        return this.credential == null ? Input.empty() : this.credential;
    }

    @InputImport(name="customCertificateAuthorityRoots")
    private final @Nullable Input<List<String>> customCertificateAuthorityRoots;

    public Input<List<String>> getCustomCertificateAuthorityRoots() {
        return this.customCertificateAuthorityRoots == null ? Input.empty() : this.customCertificateAuthorityRoots;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="descriptorUrl")
    private final @Nullable Input<String> descriptorUrl;

    public Input<String> getDescriptorUrl() {
        return this.descriptorUrl == null ? Input.empty() : this.descriptorUrl;
    }

    @InputImport(name="labels")
    private final @Nullable Input<List<TypeProviderLabelEntryArgs>> labels;

    public Input<List<TypeProviderLabelEntryArgs>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="options")
    private final @Nullable Input<OptionsArgs> options;

    public Input<OptionsArgs> getOptions() {
        return this.options == null ? Input.empty() : this.options;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    public TypeProviderArgs(
        @Nullable Input<List<CollectionOverrideArgs>> collectionOverrides,
        @Nullable Input<CredentialArgs> credential,
        @Nullable Input<List<String>> customCertificateAuthorityRoots,
        @Nullable Input<String> description,
        @Nullable Input<String> descriptorUrl,
        @Nullable Input<List<TypeProviderLabelEntryArgs>> labels,
        @Nullable Input<String> name,
        @Nullable Input<OptionsArgs> options,
        @Nullable Input<String> project) {
        this.collectionOverrides = collectionOverrides;
        this.credential = credential;
        this.customCertificateAuthorityRoots = customCertificateAuthorityRoots;
        this.description = description;
        this.descriptorUrl = descriptorUrl;
        this.labels = labels;
        this.name = name;
        this.options = options;
        this.project = project;
    }

    private TypeProviderArgs() {
        this.collectionOverrides = Input.empty();
        this.credential = Input.empty();
        this.customCertificateAuthorityRoots = Input.empty();
        this.description = Input.empty();
        this.descriptorUrl = Input.empty();
        this.labels = Input.empty();
        this.name = Input.empty();
        this.options = Input.empty();
        this.project = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TypeProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<CollectionOverrideArgs>> collectionOverrides;
        private @Nullable Input<CredentialArgs> credential;
        private @Nullable Input<List<String>> customCertificateAuthorityRoots;
        private @Nullable Input<String> description;
        private @Nullable Input<String> descriptorUrl;
        private @Nullable Input<List<TypeProviderLabelEntryArgs>> labels;
        private @Nullable Input<String> name;
        private @Nullable Input<OptionsArgs> options;
        private @Nullable Input<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(TypeProviderArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collectionOverrides = defaults.collectionOverrides;
    	      this.credential = defaults.credential;
    	      this.customCertificateAuthorityRoots = defaults.customCertificateAuthorityRoots;
    	      this.description = defaults.description;
    	      this.descriptorUrl = defaults.descriptorUrl;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.project = defaults.project;
        }

        public Builder setCollectionOverrides(@Nullable Input<List<CollectionOverrideArgs>> collectionOverrides) {
            this.collectionOverrides = collectionOverrides;
            return this;
        }

        public Builder setCollectionOverrides(@Nullable List<CollectionOverrideArgs> collectionOverrides) {
            this.collectionOverrides = Input.ofNullable(collectionOverrides);
            return this;
        }

        public Builder setCredential(@Nullable Input<CredentialArgs> credential) {
            this.credential = credential;
            return this;
        }

        public Builder setCredential(@Nullable CredentialArgs credential) {
            this.credential = Input.ofNullable(credential);
            return this;
        }

        public Builder setCustomCertificateAuthorityRoots(@Nullable Input<List<String>> customCertificateAuthorityRoots) {
            this.customCertificateAuthorityRoots = customCertificateAuthorityRoots;
            return this;
        }

        public Builder setCustomCertificateAuthorityRoots(@Nullable List<String> customCertificateAuthorityRoots) {
            this.customCertificateAuthorityRoots = Input.ofNullable(customCertificateAuthorityRoots);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDescriptorUrl(@Nullable Input<String> descriptorUrl) {
            this.descriptorUrl = descriptorUrl;
            return this;
        }

        public Builder setDescriptorUrl(@Nullable String descriptorUrl) {
            this.descriptorUrl = Input.ofNullable(descriptorUrl);
            return this;
        }

        public Builder setLabels(@Nullable Input<List<TypeProviderLabelEntryArgs>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable List<TypeProviderLabelEntryArgs> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOptions(@Nullable Input<OptionsArgs> options) {
            this.options = options;
            return this;
        }

        public Builder setOptions(@Nullable OptionsArgs options) {
            this.options = Input.ofNullable(options);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public TypeProviderArgs build() {
            return new TypeProviderArgs(collectionOverrides, credential, customCertificateAuthorityRoots, description, descriptorUrl, labels, name, options, project);
        }
    }
}
