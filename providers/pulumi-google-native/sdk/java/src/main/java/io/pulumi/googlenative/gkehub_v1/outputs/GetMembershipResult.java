// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.gkehub_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.gkehub_v1.outputs.AuthorityResponse;
import io.pulumi.googlenative.gkehub_v1.outputs.MembershipEndpointResponse;
import io.pulumi.googlenative.gkehub_v1.outputs.MembershipStateResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetMembershipResult {
    private final AuthorityResponse authority;
    private final String createTime;
    private final String deleteTime;
    private final String description;
    private final MembershipEndpointResponse endpoint;
    private final String externalId;
    private final Map<String,String> labels;
    private final String lastConnectionTime;
    private final String name;
    private final MembershipStateResponse state;
    private final String uniqueId;
    private final String updateTime;

    @OutputCustomType.Constructor({"authority","createTime","deleteTime","description","endpoint","externalId","labels","lastConnectionTime","name","state","uniqueId","updateTime"})
    private GetMembershipResult(
        AuthorityResponse authority,
        String createTime,
        String deleteTime,
        String description,
        MembershipEndpointResponse endpoint,
        String externalId,
        Map<String,String> labels,
        String lastConnectionTime,
        String name,
        MembershipStateResponse state,
        String uniqueId,
        String updateTime) {
        this.authority = Objects.requireNonNull(authority);
        this.createTime = Objects.requireNonNull(createTime);
        this.deleteTime = Objects.requireNonNull(deleteTime);
        this.description = Objects.requireNonNull(description);
        this.endpoint = Objects.requireNonNull(endpoint);
        this.externalId = Objects.requireNonNull(externalId);
        this.labels = Objects.requireNonNull(labels);
        this.lastConnectionTime = Objects.requireNonNull(lastConnectionTime);
        this.name = Objects.requireNonNull(name);
        this.state = Objects.requireNonNull(state);
        this.uniqueId = Objects.requireNonNull(uniqueId);
        this.updateTime = Objects.requireNonNull(updateTime);
    }

    public AuthorityResponse getAuthority() {
        return this.authority;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public String getDeleteTime() {
        return this.deleteTime;
    }
    public String getDescription() {
        return this.description;
    }
    public MembershipEndpointResponse getEndpoint() {
        return this.endpoint;
    }
    public String getExternalId() {
        return this.externalId;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public String getLastConnectionTime() {
        return this.lastConnectionTime;
    }
    public String getName() {
        return this.name;
    }
    public MembershipStateResponse getState() {
        return this.state;
    }
    public String getUniqueId() {
        return this.uniqueId;
    }
    public String getUpdateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMembershipResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthorityResponse authority;
        private String createTime;
        private String deleteTime;
        private String description;
        private MembershipEndpointResponse endpoint;
        private String externalId;
        private Map<String,String> labels;
        private String lastConnectionTime;
        private String name;
        private MembershipStateResponse state;
        private String uniqueId;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMembershipResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authority = defaults.authority;
    	      this.createTime = defaults.createTime;
    	      this.deleteTime = defaults.deleteTime;
    	      this.description = defaults.description;
    	      this.endpoint = defaults.endpoint;
    	      this.externalId = defaults.externalId;
    	      this.labels = defaults.labels;
    	      this.lastConnectionTime = defaults.lastConnectionTime;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.uniqueId = defaults.uniqueId;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setAuthority(AuthorityResponse authority) {
            this.authority = Objects.requireNonNull(authority);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDeleteTime(String deleteTime) {
            this.deleteTime = Objects.requireNonNull(deleteTime);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setEndpoint(MembershipEndpointResponse endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }

        public Builder setExternalId(String externalId) {
            this.externalId = Objects.requireNonNull(externalId);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setLastConnectionTime(String lastConnectionTime) {
            this.lastConnectionTime = Objects.requireNonNull(lastConnectionTime);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setState(MembershipStateResponse state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setUniqueId(String uniqueId) {
            this.uniqueId = Objects.requireNonNull(uniqueId);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }

        public GetMembershipResult build() {
            return new GetMembershipResult(authority, createTime, deleteTime, description, endpoint, externalId, labels, lastConnectionTime, name, state, uniqueId, updateTime);
        }
    }
}
