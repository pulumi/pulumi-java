// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.dialogflow_v2.outputs.GoogleCloudDialogflowV2EntityTypeEntityResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetSessionEntityTypeResult {
    /**
     * The collection of entities associated with this session entity type.
     * 
     */
    private final List<GoogleCloudDialogflowV2EntityTypeEntityResponse> entities;
    /**
     * Indicates whether the additional data should override or supplement the custom entity type definition.
     * 
     */
    private final String entityOverrideMode;
    /**
     * The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.
     * 
     */
    private final String name;

    @OutputCustomType.Constructor({"entities","entityOverrideMode","name"})
    private GetSessionEntityTypeResult(
        List<GoogleCloudDialogflowV2EntityTypeEntityResponse> entities,
        String entityOverrideMode,
        String name) {
        this.entities = Objects.requireNonNull(entities);
        this.entityOverrideMode = Objects.requireNonNull(entityOverrideMode);
        this.name = Objects.requireNonNull(name);
    }

    /**
     * The collection of entities associated with this session entity type.
     * 
     */
    public List<GoogleCloudDialogflowV2EntityTypeEntityResponse> getEntities() {
        return this.entities;
    }
    /**
     * Indicates whether the additional data should override or supplement the custom entity type definition.
     * 
     */
    public String getEntityOverrideMode() {
        return this.entityOverrideMode;
    }
    /**
     * The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.
     * 
     */
    public String getName() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSessionEntityTypeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GoogleCloudDialogflowV2EntityTypeEntityResponse> entities;
        private String entityOverrideMode;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSessionEntityTypeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entities = defaults.entities;
    	      this.entityOverrideMode = defaults.entityOverrideMode;
    	      this.name = defaults.name;
        }

        public Builder setEntities(List<GoogleCloudDialogflowV2EntityTypeEntityResponse> entities) {
            this.entities = Objects.requireNonNull(entities);
            return this;
        }

        public Builder setEntityOverrideMode(String entityOverrideMode) {
            this.entityOverrideMode = Objects.requireNonNull(entityOverrideMode);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public GetSessionEntityTypeResult build() {
            return new GetSessionEntityTypeResult(entities, entityOverrideMode, name);
        }
    }
}
