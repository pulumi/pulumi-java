// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataflow_v1b3.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SdkHarnessContainerImageArgs extends io.pulumi.resources.ResourceArgs {

    public static final SdkHarnessContainerImageArgs Empty = new SdkHarnessContainerImageArgs();

    @InputImport(name="containerImage")
    private final @Nullable Input<String> containerImage;

    public Input<String> getContainerImage() {
        return this.containerImage == null ? Input.empty() : this.containerImage;
    }

    @InputImport(name="environmentId")
    private final @Nullable Input<String> environmentId;

    public Input<String> getEnvironmentId() {
        return this.environmentId == null ? Input.empty() : this.environmentId;
    }

    @InputImport(name="useSingleCorePerContainer")
    private final @Nullable Input<Boolean> useSingleCorePerContainer;

    public Input<Boolean> getUseSingleCorePerContainer() {
        return this.useSingleCorePerContainer == null ? Input.empty() : this.useSingleCorePerContainer;
    }

    public SdkHarnessContainerImageArgs(
        @Nullable Input<String> containerImage,
        @Nullable Input<String> environmentId,
        @Nullable Input<Boolean> useSingleCorePerContainer) {
        this.containerImage = containerImage;
        this.environmentId = environmentId;
        this.useSingleCorePerContainer = useSingleCorePerContainer;
    }

    private SdkHarnessContainerImageArgs() {
        this.containerImage = Input.empty();
        this.environmentId = Input.empty();
        this.useSingleCorePerContainer = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SdkHarnessContainerImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> containerImage;
        private @Nullable Input<String> environmentId;
        private @Nullable Input<Boolean> useSingleCorePerContainer;

        public Builder() {
    	      // Empty
        }

        public Builder(SdkHarnessContainerImageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerImage = defaults.containerImage;
    	      this.environmentId = defaults.environmentId;
    	      this.useSingleCorePerContainer = defaults.useSingleCorePerContainer;
        }

        public Builder setContainerImage(@Nullable Input<String> containerImage) {
            this.containerImage = containerImage;
            return this;
        }

        public Builder setContainerImage(@Nullable String containerImage) {
            this.containerImage = Input.ofNullable(containerImage);
            return this;
        }

        public Builder setEnvironmentId(@Nullable Input<String> environmentId) {
            this.environmentId = environmentId;
            return this;
        }

        public Builder setEnvironmentId(@Nullable String environmentId) {
            this.environmentId = Input.ofNullable(environmentId);
            return this;
        }

        public Builder setUseSingleCorePerContainer(@Nullable Input<Boolean> useSingleCorePerContainer) {
            this.useSingleCorePerContainer = useSingleCorePerContainer;
            return this;
        }

        public Builder setUseSingleCorePerContainer(@Nullable Boolean useSingleCorePerContainer) {
            this.useSingleCorePerContainer = Input.ofNullable(useSingleCorePerContainer);
            return this;
        }

        public SdkHarnessContainerImageArgs build() {
            return new SdkHarnessContainerImageArgs(containerImage, environmentId, useSingleCorePerContainer);
        }
    }
}
