// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudtasks_v2beta2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.cloudtasks_v2beta2.outputs.AppEngineHttpRequestResponse;
import io.pulumi.googlenative.cloudtasks_v2beta2.outputs.PullMessageResponse;
import io.pulumi.googlenative.cloudtasks_v2beta2.outputs.TaskStatusResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetTaskResult {
    private final AppEngineHttpRequestResponse appEngineHttpRequest;
    private final String createTime;
    private final String name;
    private final PullMessageResponse pullMessage;
    private final String scheduleTime;
    private final TaskStatusResponse status;
    private final String view;

    @OutputCustomType.Constructor({"appEngineHttpRequest","createTime","name","pullMessage","scheduleTime","status","view"})
    private GetTaskResult(
        AppEngineHttpRequestResponse appEngineHttpRequest,
        String createTime,
        String name,
        PullMessageResponse pullMessage,
        String scheduleTime,
        TaskStatusResponse status,
        String view) {
        this.appEngineHttpRequest = Objects.requireNonNull(appEngineHttpRequest);
        this.createTime = Objects.requireNonNull(createTime);
        this.name = Objects.requireNonNull(name);
        this.pullMessage = Objects.requireNonNull(pullMessage);
        this.scheduleTime = Objects.requireNonNull(scheduleTime);
        this.status = Objects.requireNonNull(status);
        this.view = Objects.requireNonNull(view);
    }

    public AppEngineHttpRequestResponse getAppEngineHttpRequest() {
        return this.appEngineHttpRequest;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public String getName() {
        return this.name;
    }
    public PullMessageResponse getPullMessage() {
        return this.pullMessage;
    }
    public String getScheduleTime() {
        return this.scheduleTime;
    }
    public TaskStatusResponse getStatus() {
        return this.status;
    }
    public String getView() {
        return this.view;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTaskResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppEngineHttpRequestResponse appEngineHttpRequest;
        private String createTime;
        private String name;
        private PullMessageResponse pullMessage;
        private String scheduleTime;
        private TaskStatusResponse status;
        private String view;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTaskResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appEngineHttpRequest = defaults.appEngineHttpRequest;
    	      this.createTime = defaults.createTime;
    	      this.name = defaults.name;
    	      this.pullMessage = defaults.pullMessage;
    	      this.scheduleTime = defaults.scheduleTime;
    	      this.status = defaults.status;
    	      this.view = defaults.view;
        }

        public Builder setAppEngineHttpRequest(AppEngineHttpRequestResponse appEngineHttpRequest) {
            this.appEngineHttpRequest = Objects.requireNonNull(appEngineHttpRequest);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPullMessage(PullMessageResponse pullMessage) {
            this.pullMessage = Objects.requireNonNull(pullMessage);
            return this;
        }

        public Builder setScheduleTime(String scheduleTime) {
            this.scheduleTime = Objects.requireNonNull(scheduleTime);
            return this;
        }

        public Builder setStatus(TaskStatusResponse status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setView(String view) {
            this.view = Objects.requireNonNull(view);
            return this;
        }

        public GetTaskResult build() {
            return new GetTaskResult(appEngineHttpRequest, createTime, name, pullMessage, scheduleTime, status, view);
        }
    }
}
