// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.appengine_v1beta;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.appengine_v1beta.enums.IngressRuleAction;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IngressRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final IngressRuleArgs Empty = new IngressRuleArgs();

    /**
     * The action to take on matched requests.
     * 
     */
    @InputImport(name="action")
      private final @Nullable Input<IngressRuleAction> action;

    public Input<IngressRuleAction> getAction() {
        return this.action == null ? Input.empty() : this.action;
    }

    @InputImport(name="appId", required=true)
      private final Input<String> appId;

    public Input<String> getAppId() {
        return this.appId;
    }

    /**
     * An optional string description of this rule. This field has a maximum length of 400 characters.
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * A positive integer between 1, Int32.MaxValue-1 that defines the order of rule evaluation. Rules with the lowest priority are evaluated first.A default rule at priority Int32.MaxValue matches all IPv4 and IPv6 traffic when no previous rule matches. Only the action of this rule can be modified by the user.
     * 
     */
    @InputImport(name="priority")
      private final @Nullable Input<Integer> priority;

    public Input<Integer> getPriority() {
        return this.priority == null ? Input.empty() : this.priority;
    }

    /**
     * IP address or range, defined using CIDR notation, of requests that this rule applies to. You can use the wildcard character "*" to match all IPs equivalent to "0/0" and "::/0" together. Examples: 192.168.1.1 or 192.168.0.0/16 or 2001:db8::/32 or 2001:0db8:0000:0042:0000:8a2e:0370:7334. Truncation will be silently performed on addresses which are not properly truncated. For example, 1.2.3.4/24 is accepted as the same address as 1.2.3.0/24. Similarly, for IPv6, 2001:db8::1/32 is accepted as the same address as 2001:db8::/32.
     * 
     */
    @InputImport(name="sourceRange")
      private final @Nullable Input<String> sourceRange;

    public Input<String> getSourceRange() {
        return this.sourceRange == null ? Input.empty() : this.sourceRange;
    }

    public IngressRuleArgs(
        @Nullable Input<IngressRuleAction> action,
        Input<String> appId,
        @Nullable Input<String> description,
        @Nullable Input<Integer> priority,
        @Nullable Input<String> sourceRange) {
        this.action = action;
        this.appId = Objects.requireNonNull(appId, "expected parameter 'appId' to be non-null");
        this.description = description;
        this.priority = priority;
        this.sourceRange = sourceRange;
    }

    private IngressRuleArgs() {
        this.action = Input.empty();
        this.appId = Input.empty();
        this.description = Input.empty();
        this.priority = Input.empty();
        this.sourceRange = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IngressRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<IngressRuleAction> action;
        private Input<String> appId;
        private @Nullable Input<String> description;
        private @Nullable Input<Integer> priority;
        private @Nullable Input<String> sourceRange;

        public Builder() {
    	      // Empty
        }

        public Builder(IngressRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.appId = defaults.appId;
    	      this.description = defaults.description;
    	      this.priority = defaults.priority;
    	      this.sourceRange = defaults.sourceRange;
        }

        public Builder setAction(@Nullable Input<IngressRuleAction> action) {
            this.action = action;
            return this;
        }

        public Builder setAction(@Nullable IngressRuleAction action) {
            this.action = Input.ofNullable(action);
            return this;
        }

        public Builder setAppId(Input<String> appId) {
            this.appId = Objects.requireNonNull(appId);
            return this;
        }

        public Builder setAppId(String appId) {
            this.appId = Input.of(Objects.requireNonNull(appId));
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setPriority(@Nullable Input<Integer> priority) {
            this.priority = priority;
            return this;
        }

        public Builder setPriority(@Nullable Integer priority) {
            this.priority = Input.ofNullable(priority);
            return this;
        }

        public Builder setSourceRange(@Nullable Input<String> sourceRange) {
            this.sourceRange = sourceRange;
            return this;
        }

        public Builder setSourceRange(@Nullable String sourceRange) {
            this.sourceRange = Input.ofNullable(sourceRange);
            return this;
        }
        public IngressRuleArgs build() {
            return new IngressRuleArgs(action, appId, description, priority, sourceRange);
        }
    }
}
