// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.sqladmin_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.
 * 
 */
public final class InsightsConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final InsightsConfigArgs Empty = new InsightsConfigArgs();

    /**
     * Whether Query Insights feature is enabled.
     * 
     */
    @InputImport(name="queryInsightsEnabled")
    private final @Nullable Input<Boolean> queryInsightsEnabled;

    public Input<Boolean> getQueryInsightsEnabled() {
        return this.queryInsightsEnabled == null ? Input.empty() : this.queryInsightsEnabled;
    }

    /**
     * Number of query execution plans captured by Insights per minute for all queries combined. Default is 5.
     * 
     */
    @InputImport(name="queryPlansPerMinute")
    private final @Nullable Input<Integer> queryPlansPerMinute;

    public Input<Integer> getQueryPlansPerMinute() {
        return this.queryPlansPerMinute == null ? Input.empty() : this.queryPlansPerMinute;
    }

    /**
     * Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database.
     * 
     */
    @InputImport(name="queryStringLength")
    private final @Nullable Input<Integer> queryStringLength;

    public Input<Integer> getQueryStringLength() {
        return this.queryStringLength == null ? Input.empty() : this.queryStringLength;
    }

    /**
     * Whether Query Insights will record application tags from query when enabled.
     * 
     */
    @InputImport(name="recordApplicationTags")
    private final @Nullable Input<Boolean> recordApplicationTags;

    public Input<Boolean> getRecordApplicationTags() {
        return this.recordApplicationTags == null ? Input.empty() : this.recordApplicationTags;
    }

    /**
     * Whether Query Insights will record client address when enabled.
     * 
     */
    @InputImport(name="recordClientAddress")
    private final @Nullable Input<Boolean> recordClientAddress;

    public Input<Boolean> getRecordClientAddress() {
        return this.recordClientAddress == null ? Input.empty() : this.recordClientAddress;
    }

    public InsightsConfigArgs(
        @Nullable Input<Boolean> queryInsightsEnabled,
        @Nullable Input<Integer> queryPlansPerMinute,
        @Nullable Input<Integer> queryStringLength,
        @Nullable Input<Boolean> recordApplicationTags,
        @Nullable Input<Boolean> recordClientAddress) {
        this.queryInsightsEnabled = queryInsightsEnabled;
        this.queryPlansPerMinute = queryPlansPerMinute;
        this.queryStringLength = queryStringLength;
        this.recordApplicationTags = recordApplicationTags;
        this.recordClientAddress = recordClientAddress;
    }

    private InsightsConfigArgs() {
        this.queryInsightsEnabled = Input.empty();
        this.queryPlansPerMinute = Input.empty();
        this.queryStringLength = Input.empty();
        this.recordApplicationTags = Input.empty();
        this.recordClientAddress = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InsightsConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> queryInsightsEnabled;
        private @Nullable Input<Integer> queryPlansPerMinute;
        private @Nullable Input<Integer> queryStringLength;
        private @Nullable Input<Boolean> recordApplicationTags;
        private @Nullable Input<Boolean> recordClientAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(InsightsConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.queryInsightsEnabled = defaults.queryInsightsEnabled;
    	      this.queryPlansPerMinute = defaults.queryPlansPerMinute;
    	      this.queryStringLength = defaults.queryStringLength;
    	      this.recordApplicationTags = defaults.recordApplicationTags;
    	      this.recordClientAddress = defaults.recordClientAddress;
        }

        public Builder setQueryInsightsEnabled(@Nullable Input<Boolean> queryInsightsEnabled) {
            this.queryInsightsEnabled = queryInsightsEnabled;
            return this;
        }

        public Builder setQueryInsightsEnabled(@Nullable Boolean queryInsightsEnabled) {
            this.queryInsightsEnabled = Input.ofNullable(queryInsightsEnabled);
            return this;
        }

        public Builder setQueryPlansPerMinute(@Nullable Input<Integer> queryPlansPerMinute) {
            this.queryPlansPerMinute = queryPlansPerMinute;
            return this;
        }

        public Builder setQueryPlansPerMinute(@Nullable Integer queryPlansPerMinute) {
            this.queryPlansPerMinute = Input.ofNullable(queryPlansPerMinute);
            return this;
        }

        public Builder setQueryStringLength(@Nullable Input<Integer> queryStringLength) {
            this.queryStringLength = queryStringLength;
            return this;
        }

        public Builder setQueryStringLength(@Nullable Integer queryStringLength) {
            this.queryStringLength = Input.ofNullable(queryStringLength);
            return this;
        }

        public Builder setRecordApplicationTags(@Nullable Input<Boolean> recordApplicationTags) {
            this.recordApplicationTags = recordApplicationTags;
            return this;
        }

        public Builder setRecordApplicationTags(@Nullable Boolean recordApplicationTags) {
            this.recordApplicationTags = Input.ofNullable(recordApplicationTags);
            return this;
        }

        public Builder setRecordClientAddress(@Nullable Input<Boolean> recordClientAddress) {
            this.recordClientAddress = recordClientAddress;
            return this;
        }

        public Builder setRecordClientAddress(@Nullable Boolean recordClientAddress) {
            this.recordClientAddress = Input.ofNullable(recordClientAddress);
            return this;
        }

        public InsightsConfigArgs build() {
            return new InsightsConfigArgs(queryInsightsEnabled, queryPlansPerMinute, queryStringLength, recordApplicationTags, recordClientAddress);
        }
    }
}
