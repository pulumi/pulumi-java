// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.servicemanagement_v1.inputs.MonitoringDestinationArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MonitoringArgs extends io.pulumi.resources.ResourceArgs {

    public static final MonitoringArgs Empty = new MonitoringArgs();

    @InputImport(name="consumerDestinations")
    private final @Nullable Input<List<MonitoringDestinationArgs>> consumerDestinations;

    public Input<List<MonitoringDestinationArgs>> getConsumerDestinations() {
        return this.consumerDestinations == null ? Input.empty() : this.consumerDestinations;
    }

    @InputImport(name="producerDestinations")
    private final @Nullable Input<List<MonitoringDestinationArgs>> producerDestinations;

    public Input<List<MonitoringDestinationArgs>> getProducerDestinations() {
        return this.producerDestinations == null ? Input.empty() : this.producerDestinations;
    }

    public MonitoringArgs(
        @Nullable Input<List<MonitoringDestinationArgs>> consumerDestinations,
        @Nullable Input<List<MonitoringDestinationArgs>> producerDestinations) {
        this.consumerDestinations = consumerDestinations;
        this.producerDestinations = producerDestinations;
    }

    private MonitoringArgs() {
        this.consumerDestinations = Input.empty();
        this.producerDestinations = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitoringArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<MonitoringDestinationArgs>> consumerDestinations;
        private @Nullable Input<List<MonitoringDestinationArgs>> producerDestinations;

        public Builder() {
    	      // Empty
        }

        public Builder(MonitoringArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.consumerDestinations = defaults.consumerDestinations;
    	      this.producerDestinations = defaults.producerDestinations;
        }

        public Builder setConsumerDestinations(@Nullable Input<List<MonitoringDestinationArgs>> consumerDestinations) {
            this.consumerDestinations = consumerDestinations;
            return this;
        }

        public Builder setConsumerDestinations(@Nullable List<MonitoringDestinationArgs> consumerDestinations) {
            this.consumerDestinations = Input.ofNullable(consumerDestinations);
            return this;
        }

        public Builder setProducerDestinations(@Nullable Input<List<MonitoringDestinationArgs>> producerDestinations) {
            this.producerDestinations = producerDestinations;
            return this;
        }

        public Builder setProducerDestinations(@Nullable List<MonitoringDestinationArgs> producerDestinations) {
            this.producerDestinations = Input.ofNullable(producerDestinations);
            return this;
        }

        public MonitoringArgs build() {
            return new MonitoringArgs(consumerDestinations, producerDestinations);
        }
    }
}
