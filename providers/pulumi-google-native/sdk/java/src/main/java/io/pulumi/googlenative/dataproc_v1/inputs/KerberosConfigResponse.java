// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataproc_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class KerberosConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final KerberosConfigResponse Empty = new KerberosConfigResponse();

    @InputImport(name="crossRealmTrustAdminServer", required=true)
    private final String crossRealmTrustAdminServer;

    public String getCrossRealmTrustAdminServer() {
        return this.crossRealmTrustAdminServer;
    }

    @InputImport(name="crossRealmTrustKdc", required=true)
    private final String crossRealmTrustKdc;

    public String getCrossRealmTrustKdc() {
        return this.crossRealmTrustKdc;
    }

    @InputImport(name="crossRealmTrustRealm", required=true)
    private final String crossRealmTrustRealm;

    public String getCrossRealmTrustRealm() {
        return this.crossRealmTrustRealm;
    }

    @InputImport(name="crossRealmTrustSharedPasswordUri", required=true)
    private final String crossRealmTrustSharedPasswordUri;

    public String getCrossRealmTrustSharedPasswordUri() {
        return this.crossRealmTrustSharedPasswordUri;
    }

    @InputImport(name="enableKerberos", required=true)
    private final Boolean enableKerberos;

    public Boolean getEnableKerberos() {
        return this.enableKerberos;
    }

    @InputImport(name="kdcDbKeyUri", required=true)
    private final String kdcDbKeyUri;

    public String getKdcDbKeyUri() {
        return this.kdcDbKeyUri;
    }

    @InputImport(name="keyPasswordUri", required=true)
    private final String keyPasswordUri;

    public String getKeyPasswordUri() {
        return this.keyPasswordUri;
    }

    @InputImport(name="keystorePasswordUri", required=true)
    private final String keystorePasswordUri;

    public String getKeystorePasswordUri() {
        return this.keystorePasswordUri;
    }

    @InputImport(name="keystoreUri", required=true)
    private final String keystoreUri;

    public String getKeystoreUri() {
        return this.keystoreUri;
    }

    @InputImport(name="kmsKeyUri", required=true)
    private final String kmsKeyUri;

    public String getKmsKeyUri() {
        return this.kmsKeyUri;
    }

    @InputImport(name="realm", required=true)
    private final String realm;

    public String getRealm() {
        return this.realm;
    }

    @InputImport(name="rootPrincipalPasswordUri", required=true)
    private final String rootPrincipalPasswordUri;

    public String getRootPrincipalPasswordUri() {
        return this.rootPrincipalPasswordUri;
    }

    @InputImport(name="tgtLifetimeHours", required=true)
    private final Integer tgtLifetimeHours;

    public Integer getTgtLifetimeHours() {
        return this.tgtLifetimeHours;
    }

    @InputImport(name="truststorePasswordUri", required=true)
    private final String truststorePasswordUri;

    public String getTruststorePasswordUri() {
        return this.truststorePasswordUri;
    }

    @InputImport(name="truststoreUri", required=true)
    private final String truststoreUri;

    public String getTruststoreUri() {
        return this.truststoreUri;
    }

    public KerberosConfigResponse(
        String crossRealmTrustAdminServer,
        String crossRealmTrustKdc,
        String crossRealmTrustRealm,
        String crossRealmTrustSharedPasswordUri,
        Boolean enableKerberos,
        String kdcDbKeyUri,
        String keyPasswordUri,
        String keystorePasswordUri,
        String keystoreUri,
        String kmsKeyUri,
        String realm,
        String rootPrincipalPasswordUri,
        Integer tgtLifetimeHours,
        String truststorePasswordUri,
        String truststoreUri) {
        this.crossRealmTrustAdminServer = Objects.requireNonNull(crossRealmTrustAdminServer, "expected parameter 'crossRealmTrustAdminServer' to be non-null");
        this.crossRealmTrustKdc = Objects.requireNonNull(crossRealmTrustKdc, "expected parameter 'crossRealmTrustKdc' to be non-null");
        this.crossRealmTrustRealm = Objects.requireNonNull(crossRealmTrustRealm, "expected parameter 'crossRealmTrustRealm' to be non-null");
        this.crossRealmTrustSharedPasswordUri = Objects.requireNonNull(crossRealmTrustSharedPasswordUri, "expected parameter 'crossRealmTrustSharedPasswordUri' to be non-null");
        this.enableKerberos = Objects.requireNonNull(enableKerberos, "expected parameter 'enableKerberos' to be non-null");
        this.kdcDbKeyUri = Objects.requireNonNull(kdcDbKeyUri, "expected parameter 'kdcDbKeyUri' to be non-null");
        this.keyPasswordUri = Objects.requireNonNull(keyPasswordUri, "expected parameter 'keyPasswordUri' to be non-null");
        this.keystorePasswordUri = Objects.requireNonNull(keystorePasswordUri, "expected parameter 'keystorePasswordUri' to be non-null");
        this.keystoreUri = Objects.requireNonNull(keystoreUri, "expected parameter 'keystoreUri' to be non-null");
        this.kmsKeyUri = Objects.requireNonNull(kmsKeyUri, "expected parameter 'kmsKeyUri' to be non-null");
        this.realm = Objects.requireNonNull(realm, "expected parameter 'realm' to be non-null");
        this.rootPrincipalPasswordUri = Objects.requireNonNull(rootPrincipalPasswordUri, "expected parameter 'rootPrincipalPasswordUri' to be non-null");
        this.tgtLifetimeHours = Objects.requireNonNull(tgtLifetimeHours, "expected parameter 'tgtLifetimeHours' to be non-null");
        this.truststorePasswordUri = Objects.requireNonNull(truststorePasswordUri, "expected parameter 'truststorePasswordUri' to be non-null");
        this.truststoreUri = Objects.requireNonNull(truststoreUri, "expected parameter 'truststoreUri' to be non-null");
    }

    private KerberosConfigResponse() {
        this.crossRealmTrustAdminServer = null;
        this.crossRealmTrustKdc = null;
        this.crossRealmTrustRealm = null;
        this.crossRealmTrustSharedPasswordUri = null;
        this.enableKerberos = null;
        this.kdcDbKeyUri = null;
        this.keyPasswordUri = null;
        this.keystorePasswordUri = null;
        this.keystoreUri = null;
        this.kmsKeyUri = null;
        this.realm = null;
        this.rootPrincipalPasswordUri = null;
        this.tgtLifetimeHours = null;
        this.truststorePasswordUri = null;
        this.truststoreUri = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KerberosConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String crossRealmTrustAdminServer;
        private String crossRealmTrustKdc;
        private String crossRealmTrustRealm;
        private String crossRealmTrustSharedPasswordUri;
        private Boolean enableKerberos;
        private String kdcDbKeyUri;
        private String keyPasswordUri;
        private String keystorePasswordUri;
        private String keystoreUri;
        private String kmsKeyUri;
        private String realm;
        private String rootPrincipalPasswordUri;
        private Integer tgtLifetimeHours;
        private String truststorePasswordUri;
        private String truststoreUri;

        public Builder() {
    	      // Empty
        }

        public Builder(KerberosConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.crossRealmTrustAdminServer = defaults.crossRealmTrustAdminServer;
    	      this.crossRealmTrustKdc = defaults.crossRealmTrustKdc;
    	      this.crossRealmTrustRealm = defaults.crossRealmTrustRealm;
    	      this.crossRealmTrustSharedPasswordUri = defaults.crossRealmTrustSharedPasswordUri;
    	      this.enableKerberos = defaults.enableKerberos;
    	      this.kdcDbKeyUri = defaults.kdcDbKeyUri;
    	      this.keyPasswordUri = defaults.keyPasswordUri;
    	      this.keystorePasswordUri = defaults.keystorePasswordUri;
    	      this.keystoreUri = defaults.keystoreUri;
    	      this.kmsKeyUri = defaults.kmsKeyUri;
    	      this.realm = defaults.realm;
    	      this.rootPrincipalPasswordUri = defaults.rootPrincipalPasswordUri;
    	      this.tgtLifetimeHours = defaults.tgtLifetimeHours;
    	      this.truststorePasswordUri = defaults.truststorePasswordUri;
    	      this.truststoreUri = defaults.truststoreUri;
        }

        public Builder setCrossRealmTrustAdminServer(String crossRealmTrustAdminServer) {
            this.crossRealmTrustAdminServer = Objects.requireNonNull(crossRealmTrustAdminServer);
            return this;
        }

        public Builder setCrossRealmTrustKdc(String crossRealmTrustKdc) {
            this.crossRealmTrustKdc = Objects.requireNonNull(crossRealmTrustKdc);
            return this;
        }

        public Builder setCrossRealmTrustRealm(String crossRealmTrustRealm) {
            this.crossRealmTrustRealm = Objects.requireNonNull(crossRealmTrustRealm);
            return this;
        }

        public Builder setCrossRealmTrustSharedPasswordUri(String crossRealmTrustSharedPasswordUri) {
            this.crossRealmTrustSharedPasswordUri = Objects.requireNonNull(crossRealmTrustSharedPasswordUri);
            return this;
        }

        public Builder setEnableKerberos(Boolean enableKerberos) {
            this.enableKerberos = Objects.requireNonNull(enableKerberos);
            return this;
        }

        public Builder setKdcDbKeyUri(String kdcDbKeyUri) {
            this.kdcDbKeyUri = Objects.requireNonNull(kdcDbKeyUri);
            return this;
        }

        public Builder setKeyPasswordUri(String keyPasswordUri) {
            this.keyPasswordUri = Objects.requireNonNull(keyPasswordUri);
            return this;
        }

        public Builder setKeystorePasswordUri(String keystorePasswordUri) {
            this.keystorePasswordUri = Objects.requireNonNull(keystorePasswordUri);
            return this;
        }

        public Builder setKeystoreUri(String keystoreUri) {
            this.keystoreUri = Objects.requireNonNull(keystoreUri);
            return this;
        }

        public Builder setKmsKeyUri(String kmsKeyUri) {
            this.kmsKeyUri = Objects.requireNonNull(kmsKeyUri);
            return this;
        }

        public Builder setRealm(String realm) {
            this.realm = Objects.requireNonNull(realm);
            return this;
        }

        public Builder setRootPrincipalPasswordUri(String rootPrincipalPasswordUri) {
            this.rootPrincipalPasswordUri = Objects.requireNonNull(rootPrincipalPasswordUri);
            return this;
        }

        public Builder setTgtLifetimeHours(Integer tgtLifetimeHours) {
            this.tgtLifetimeHours = Objects.requireNonNull(tgtLifetimeHours);
            return this;
        }

        public Builder setTruststorePasswordUri(String truststorePasswordUri) {
            this.truststorePasswordUri = Objects.requireNonNull(truststorePasswordUri);
            return this;
        }

        public Builder setTruststoreUri(String truststoreUri) {
            this.truststoreUri = Objects.requireNonNull(truststoreUri);
            return this;
        }

        public KerberosConfigResponse build() {
            return new KerberosConfigResponse(crossRealmTrustAdminServer, crossRealmTrustKdc, crossRealmTrustRealm, crossRealmTrustSharedPasswordUri, enableKerberos, kdcDbKeyUri, keyPasswordUri, keystorePasswordUri, keystoreUri, kmsKeyUri, realm, rootPrincipalPasswordUri, tgtLifetimeHours, truststorePasswordUri, truststoreUri);
        }
    }
}
