// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.compute_beta.inputs.ResourcePolicyInstanceSchedulePolicyScheduleResponse;
import java.lang.String;
import java.util.Objects;


/**
 * An InstanceSchedulePolicy specifies when and how frequent certain operations are performed on the instance.
 * 
 */
public final class ResourcePolicyInstanceSchedulePolicyResponse extends io.pulumi.resources.InvokeArgs {

    public static final ResourcePolicyInstanceSchedulePolicyResponse Empty = new ResourcePolicyInstanceSchedulePolicyResponse();

    /**
     * The expiration time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    @Import(name="expirationTime", required=true)
      private final String expirationTime;

    public String getExpirationTime() {
        return this.expirationTime;
    }

    /**
     * The start time of the schedule. The timestamp is an RFC3339 string.
     * 
     */
    @Import(name="startTime", required=true)
      private final String startTime;

    public String getStartTime() {
        return this.startTime;
    }

    /**
     * Specifies the time zone to be used in interpreting Schedule.schedule. The value of this field must be a time zone name from the tz database: http://en.wikipedia.org/wiki/Tz_database.
     * 
     */
    @Import(name="timeZone", required=true)
      private final String timeZone;

    public String getTimeZone() {
        return this.timeZone;
    }

    /**
     * Specifies the schedule for starting instances.
     * 
     */
    @Import(name="vmStartSchedule", required=true)
      private final ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule;

    public ResourcePolicyInstanceSchedulePolicyScheduleResponse getVmStartSchedule() {
        return this.vmStartSchedule;
    }

    /**
     * Specifies the schedule for stopping instances.
     * 
     */
    @Import(name="vmStopSchedule", required=true)
      private final ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule;

    public ResourcePolicyInstanceSchedulePolicyScheduleResponse getVmStopSchedule() {
        return this.vmStopSchedule;
    }

    public ResourcePolicyInstanceSchedulePolicyResponse(
        String expirationTime,
        String startTime,
        String timeZone,
        ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule,
        ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule) {
        this.expirationTime = Objects.requireNonNull(expirationTime, "expected parameter 'expirationTime' to be non-null");
        this.startTime = Objects.requireNonNull(startTime, "expected parameter 'startTime' to be non-null");
        this.timeZone = Objects.requireNonNull(timeZone, "expected parameter 'timeZone' to be non-null");
        this.vmStartSchedule = Objects.requireNonNull(vmStartSchedule, "expected parameter 'vmStartSchedule' to be non-null");
        this.vmStopSchedule = Objects.requireNonNull(vmStopSchedule, "expected parameter 'vmStopSchedule' to be non-null");
    }

    private ResourcePolicyInstanceSchedulePolicyResponse() {
        this.expirationTime = null;
        this.startTime = null;
        this.timeZone = null;
        this.vmStartSchedule = null;
        this.vmStopSchedule = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyInstanceSchedulePolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String expirationTime;
        private String startTime;
        private String timeZone;
        private ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule;
        private ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicyInstanceSchedulePolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationTime = defaults.expirationTime;
    	      this.startTime = defaults.startTime;
    	      this.timeZone = defaults.timeZone;
    	      this.vmStartSchedule = defaults.vmStartSchedule;
    	      this.vmStopSchedule = defaults.vmStopSchedule;
        }

        public Builder expirationTime(String expirationTime) {
            this.expirationTime = Objects.requireNonNull(expirationTime);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public Builder timeZone(String timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }
        public Builder vmStartSchedule(ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStartSchedule) {
            this.vmStartSchedule = Objects.requireNonNull(vmStartSchedule);
            return this;
        }
        public Builder vmStopSchedule(ResourcePolicyInstanceSchedulePolicyScheduleResponse vmStopSchedule) {
            this.vmStopSchedule = Objects.requireNonNull(vmStopSchedule);
            return this;
        }        public ResourcePolicyInstanceSchedulePolicyResponse build() {
            return new ResourcePolicyInstanceSchedulePolicyResponse(expirationTime, startTime, timeZone, vmStartSchedule, vmStopSchedule);
        }
    }
}
