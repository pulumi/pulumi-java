// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.monitoring_v1.enums.SparkChartViewSparkChartType;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SparkChartViewArgs extends io.pulumi.resources.ResourceArgs {

    public static final SparkChartViewArgs Empty = new SparkChartViewArgs();

    @InputImport(name="minAlignmentPeriod")
    private final @Nullable Input<String> minAlignmentPeriod;

    public Input<String> getMinAlignmentPeriod() {
        return this.minAlignmentPeriod == null ? Input.empty() : this.minAlignmentPeriod;
    }

    @InputImport(name="sparkChartType", required=true)
    private final Input<SparkChartViewSparkChartType> sparkChartType;

    public Input<SparkChartViewSparkChartType> getSparkChartType() {
        return this.sparkChartType;
    }

    public SparkChartViewArgs(
        @Nullable Input<String> minAlignmentPeriod,
        Input<SparkChartViewSparkChartType> sparkChartType) {
        this.minAlignmentPeriod = minAlignmentPeriod;
        this.sparkChartType = Objects.requireNonNull(sparkChartType, "expected parameter 'sparkChartType' to be non-null");
    }

    private SparkChartViewArgs() {
        this.minAlignmentPeriod = Input.empty();
        this.sparkChartType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SparkChartViewArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> minAlignmentPeriod;
        private Input<SparkChartViewSparkChartType> sparkChartType;

        public Builder() {
    	      // Empty
        }

        public Builder(SparkChartViewArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.minAlignmentPeriod = defaults.minAlignmentPeriod;
    	      this.sparkChartType = defaults.sparkChartType;
        }

        public Builder setMinAlignmentPeriod(@Nullable Input<String> minAlignmentPeriod) {
            this.minAlignmentPeriod = minAlignmentPeriod;
            return this;
        }

        public Builder setMinAlignmentPeriod(@Nullable String minAlignmentPeriod) {
            this.minAlignmentPeriod = Input.ofNullable(minAlignmentPeriod);
            return this;
        }

        public Builder setSparkChartType(Input<SparkChartViewSparkChartType> sparkChartType) {
            this.sparkChartType = Objects.requireNonNull(sparkChartType);
            return this;
        }

        public Builder setSparkChartType(SparkChartViewSparkChartType sparkChartType) {
            this.sparkChartType = Input.of(Objects.requireNonNull(sparkChartType));
            return this;
        }

        public SparkChartViewArgs build() {
            return new SparkChartViewArgs(minAlignmentPeriod, sparkChartType);
        }
    }
}
