// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.gkehub_v1beta.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.gkehub_v1beta.inputs.AppDevExperienceFeatureStateResponse;
import io.pulumi.googlenative.gkehub_v1beta.inputs.FeatureStateResponse;
import java.util.Objects;


/**
 * CommonFeatureState contains Hub-wide Feature status information.
 * 
 */
public final class CommonFeatureStateResponse extends io.pulumi.resources.InvokeArgs {

    public static final CommonFeatureStateResponse Empty = new CommonFeatureStateResponse();

    /**
     * Appdevexperience specific state.
     * 
     */
    @InputImport(name="appdevexperience", required=true)
      private final AppDevExperienceFeatureStateResponse appdevexperience;

    public AppDevExperienceFeatureStateResponse getAppdevexperience() {
        return this.appdevexperience;
    }

    /**
     * The "running state" of the Feature in this Hub.
     * 
     */
    @InputImport(name="state", required=true)
      private final FeatureStateResponse state;

    public FeatureStateResponse getState() {
        return this.state;
    }

    public CommonFeatureStateResponse(
        AppDevExperienceFeatureStateResponse appdevexperience,
        FeatureStateResponse state) {
        this.appdevexperience = Objects.requireNonNull(appdevexperience, "expected parameter 'appdevexperience' to be non-null");
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
    }

    private CommonFeatureStateResponse() {
        this.appdevexperience = null;
        this.state = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CommonFeatureStateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppDevExperienceFeatureStateResponse appdevexperience;
        private FeatureStateResponse state;

        public Builder() {
    	      // Empty
        }

        public Builder(CommonFeatureStateResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appdevexperience = defaults.appdevexperience;
    	      this.state = defaults.state;
        }

        public Builder appdevexperience(AppDevExperienceFeatureStateResponse appdevexperience) {
            this.appdevexperience = Objects.requireNonNull(appdevexperience);
            return this;
        }

        public Builder state(FeatureStateResponse state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public CommonFeatureStateResponse build() {
            return new CommonFeatureStateResponse(appdevexperience, state);
        }
    }
}
