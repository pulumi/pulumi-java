// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.osconfig_v1alpha.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.osconfig_v1alpha.inputs.OSPolicyResourceRepositoryResourceAptRepositoryResponse;
import io.pulumi.googlenative.osconfig_v1alpha.inputs.OSPolicyResourceRepositoryResourceGooRepositoryResponse;
import io.pulumi.googlenative.osconfig_v1alpha.inputs.OSPolicyResourceRepositoryResourceYumRepositoryResponse;
import io.pulumi.googlenative.osconfig_v1alpha.inputs.OSPolicyResourceRepositoryResourceZypperRepositoryResponse;
import java.util.Objects;


/**
 * A resource that manages a package repository.
 * 
 */
public final class OSPolicyResourceRepositoryResourceResponse extends io.pulumi.resources.InvokeArgs {

    public static final OSPolicyResourceRepositoryResourceResponse Empty = new OSPolicyResourceRepositoryResourceResponse();

    /**
     * An Apt Repository.
     * 
     */
    @Import(name="apt", required=true)
      private final OSPolicyResourceRepositoryResourceAptRepositoryResponse apt;

    public OSPolicyResourceRepositoryResourceAptRepositoryResponse getApt() {
        return this.apt;
    }

    /**
     * A Goo Repository.
     * 
     */
    @Import(name="goo", required=true)
      private final OSPolicyResourceRepositoryResourceGooRepositoryResponse goo;

    public OSPolicyResourceRepositoryResourceGooRepositoryResponse getGoo() {
        return this.goo;
    }

    /**
     * A Yum Repository.
     * 
     */
    @Import(name="yum", required=true)
      private final OSPolicyResourceRepositoryResourceYumRepositoryResponse yum;

    public OSPolicyResourceRepositoryResourceYumRepositoryResponse getYum() {
        return this.yum;
    }

    /**
     * A Zypper Repository.
     * 
     */
    @Import(name="zypper", required=true)
      private final OSPolicyResourceRepositoryResourceZypperRepositoryResponse zypper;

    public OSPolicyResourceRepositoryResourceZypperRepositoryResponse getZypper() {
        return this.zypper;
    }

    public OSPolicyResourceRepositoryResourceResponse(
        OSPolicyResourceRepositoryResourceAptRepositoryResponse apt,
        OSPolicyResourceRepositoryResourceGooRepositoryResponse goo,
        OSPolicyResourceRepositoryResourceYumRepositoryResponse yum,
        OSPolicyResourceRepositoryResourceZypperRepositoryResponse zypper) {
        this.apt = Objects.requireNonNull(apt, "expected parameter 'apt' to be non-null");
        this.goo = Objects.requireNonNull(goo, "expected parameter 'goo' to be non-null");
        this.yum = Objects.requireNonNull(yum, "expected parameter 'yum' to be non-null");
        this.zypper = Objects.requireNonNull(zypper, "expected parameter 'zypper' to be non-null");
    }

    private OSPolicyResourceRepositoryResourceResponse() {
        this.apt = null;
        this.goo = null;
        this.yum = null;
        this.zypper = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OSPolicyResourceRepositoryResourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OSPolicyResourceRepositoryResourceAptRepositoryResponse apt;
        private OSPolicyResourceRepositoryResourceGooRepositoryResponse goo;
        private OSPolicyResourceRepositoryResourceYumRepositoryResponse yum;
        private OSPolicyResourceRepositoryResourceZypperRepositoryResponse zypper;

        public Builder() {
    	      // Empty
        }

        public Builder(OSPolicyResourceRepositoryResourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apt = defaults.apt;
    	      this.goo = defaults.goo;
    	      this.yum = defaults.yum;
    	      this.zypper = defaults.zypper;
        }

        public Builder apt(OSPolicyResourceRepositoryResourceAptRepositoryResponse apt) {
            this.apt = Objects.requireNonNull(apt);
            return this;
        }
        public Builder goo(OSPolicyResourceRepositoryResourceGooRepositoryResponse goo) {
            this.goo = Objects.requireNonNull(goo);
            return this;
        }
        public Builder yum(OSPolicyResourceRepositoryResourceYumRepositoryResponse yum) {
            this.yum = Objects.requireNonNull(yum);
            return this;
        }
        public Builder zypper(OSPolicyResourceRepositoryResourceZypperRepositoryResponse zypper) {
            this.zypper = Objects.requireNonNull(zypper);
            return this;
        }        public OSPolicyResourceRepositoryResourceResponse build() {
            return new OSPolicyResourceRepositoryResourceResponse(apt, goo, yum, zypper);
        }
    }
}
