// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class UsageRuleResponse extends io.pulumi.resources.InvokeArgs {

    public static final UsageRuleResponse Empty = new UsageRuleResponse();

    @InputImport(name="allowUnregisteredCalls", required=true)
    private final Boolean allowUnregisteredCalls;

    public Boolean getAllowUnregisteredCalls() {
        return this.allowUnregisteredCalls;
    }

    @InputImport(name="selector", required=true)
    private final String selector;

    public String getSelector() {
        return this.selector;
    }

    @InputImport(name="skipServiceControl", required=true)
    private final Boolean skipServiceControl;

    public Boolean getSkipServiceControl() {
        return this.skipServiceControl;
    }

    public UsageRuleResponse(
        Boolean allowUnregisteredCalls,
        String selector,
        Boolean skipServiceControl) {
        this.allowUnregisteredCalls = Objects.requireNonNull(allowUnregisteredCalls, "expected parameter 'allowUnregisteredCalls' to be non-null");
        this.selector = Objects.requireNonNull(selector, "expected parameter 'selector' to be non-null");
        this.skipServiceControl = Objects.requireNonNull(skipServiceControl, "expected parameter 'skipServiceControl' to be non-null");
    }

    private UsageRuleResponse() {
        this.allowUnregisteredCalls = null;
        this.selector = null;
        this.skipServiceControl = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UsageRuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean allowUnregisteredCalls;
        private String selector;
        private Boolean skipServiceControl;

        public Builder() {
    	      // Empty
        }

        public Builder(UsageRuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowUnregisteredCalls = defaults.allowUnregisteredCalls;
    	      this.selector = defaults.selector;
    	      this.skipServiceControl = defaults.skipServiceControl;
        }

        public Builder setAllowUnregisteredCalls(Boolean allowUnregisteredCalls) {
            this.allowUnregisteredCalls = Objects.requireNonNull(allowUnregisteredCalls);
            return this;
        }

        public Builder setSelector(String selector) {
            this.selector = Objects.requireNonNull(selector);
            return this;
        }

        public Builder setSkipServiceControl(Boolean skipServiceControl) {
            this.skipServiceControl = Objects.requireNonNull(skipServiceControl);
            return this;
        }

        public UsageRuleResponse build() {
            return new UsageRuleResponse(allowUnregisteredCalls, selector, skipServiceControl);
        }
    }
}
