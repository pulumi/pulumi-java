// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudbuild_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.cloudbuild_v1.BitbucketServerConfigArgs;
import io.pulumi.googlenative.cloudbuild_v1.outputs.BitbucketServerRepositoryIdResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.BitbucketServerSecretsResponse;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="google-native:cloudbuild/v1:BitbucketServerConfig")
public class BitbucketServerConfig extends io.pulumi.resources.CustomResource {
    @OutputExport(name="apiKey", type=String.class, parameters={})
    private Output<String> apiKey;

    public Output<String> getApiKey() {
        return this.apiKey;
    }
    @OutputExport(name="connectedRepositories", type=List.class, parameters={BitbucketServerRepositoryIdResponse.class})
    private Output<List<BitbucketServerRepositoryIdResponse>> connectedRepositories;

    public Output<List<BitbucketServerRepositoryIdResponse>> getConnectedRepositories() {
        return this.connectedRepositories;
    }
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime;
    }
    @OutputExport(name="hostUri", type=String.class, parameters={})
    private Output<String> hostUri;

    public Output<String> getHostUri() {
        return this.hostUri;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="peeredNetwork", type=String.class, parameters={})
    private Output<String> peeredNetwork;

    public Output<String> getPeeredNetwork() {
        return this.peeredNetwork;
    }
    @OutputExport(name="secrets", type=BitbucketServerSecretsResponse.class, parameters={})
    private Output<BitbucketServerSecretsResponse> secrets;

    public Output<BitbucketServerSecretsResponse> getSecrets() {
        return this.secrets;
    }
    @OutputExport(name="sslCa", type=String.class, parameters={})
    private Output<String> sslCa;

    public Output<String> getSslCa() {
        return this.sslCa;
    }
    @OutputExport(name="username", type=String.class, parameters={})
    private Output<String> username;

    public Output<String> getUsername() {
        return this.username;
    }
    @OutputExport(name="webhookKey", type=String.class, parameters={})
    private Output<String> webhookKey;

    public Output<String> getWebhookKey() {
        return this.webhookKey;
    }

    public BitbucketServerConfig(String name, BitbucketServerConfigArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:cloudbuild/v1:BitbucketServerConfig", name, args == null ? BitbucketServerConfigArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private BitbucketServerConfig(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:cloudbuild/v1:BitbucketServerConfig", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static BitbucketServerConfig get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new BitbucketServerConfig(name, id, options);
    }
}
