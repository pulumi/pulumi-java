// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class LocalDiskResponse extends io.pulumi.resources.InvokeArgs {

    public static final LocalDiskResponse Empty = new LocalDiskResponse();

    /**
     * Specifies the number of such disks.
     * 
     */
    @InputImport(name="diskCount", required=true)
      private final Integer diskCount;

    public Integer getDiskCount() {
        return this.diskCount;
    }

    /**
     * Specifies the size of the disk in base-2 GB.
     * 
     */
    @InputImport(name="diskSizeGb", required=true)
      private final Integer diskSizeGb;

    public Integer getDiskSizeGb() {
        return this.diskSizeGb;
    }

    /**
     * Specifies the desired disk type on the node. This disk type must be a local storage type (e.g.: local-ssd). Note that for nodeTemplates, this should be the name of the disk type and not its URL.
     * 
     */
    @InputImport(name="diskType", required=true)
      private final String diskType;

    public String getDiskType() {
        return this.diskType;
    }

    public LocalDiskResponse(
        Integer diskCount,
        Integer diskSizeGb,
        String diskType) {
        this.diskCount = Objects.requireNonNull(diskCount, "expected parameter 'diskCount' to be non-null");
        this.diskSizeGb = Objects.requireNonNull(diskSizeGb, "expected parameter 'diskSizeGb' to be non-null");
        this.diskType = Objects.requireNonNull(diskType, "expected parameter 'diskType' to be non-null");
    }

    private LocalDiskResponse() {
        this.diskCount = null;
        this.diskSizeGb = null;
        this.diskType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LocalDiskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer diskCount;
        private Integer diskSizeGb;
        private String diskType;

        public Builder() {
    	      // Empty
        }

        public Builder(LocalDiskResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskCount = defaults.diskCount;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
        }

        public Builder setDiskCount(Integer diskCount) {
            this.diskCount = Objects.requireNonNull(diskCount);
            return this;
        }

        public Builder setDiskSizeGb(Integer diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }

        public Builder setDiskType(String diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }
        public LocalDiskResponse build() {
            return new LocalDiskResponse(diskCount, diskSizeGb, diskType);
        }
    }
}
