// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v3.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class LogMatchResponse extends io.pulumi.resources.InvokeArgs {

    public static final LogMatchResponse Empty = new LogMatchResponse();

    @InputImport(name="filter", required=true)
    private final String filter;

    public String getFilter() {
        return this.filter;
    }

    @InputImport(name="labelExtractors", required=true)
    private final Map<String,String> labelExtractors;

    public Map<String,String> getLabelExtractors() {
        return this.labelExtractors;
    }

    public LogMatchResponse(
        String filter,
        Map<String,String> labelExtractors) {
        this.filter = Objects.requireNonNull(filter, "expected parameter 'filter' to be non-null");
        this.labelExtractors = Objects.requireNonNull(labelExtractors, "expected parameter 'labelExtractors' to be non-null");
    }

    private LogMatchResponse() {
        this.filter = null;
        this.labelExtractors = Map.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogMatchResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String filter;
        private Map<String,String> labelExtractors;

        public Builder() {
    	      // Empty
        }

        public Builder(LogMatchResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.labelExtractors = defaults.labelExtractors;
        }

        public Builder setFilter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }

        public Builder setLabelExtractors(Map<String,String> labelExtractors) {
            this.labelExtractors = Objects.requireNonNull(labelExtractors);
            return this;
        }

        public LogMatchResponse build() {
            return new LogMatchResponse(filter, labelExtractors);
        }
    }
}
