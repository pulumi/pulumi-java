// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.privateca_v1beta1.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class SubjectResponse {
    /**
     * The country code of the subject.
     * 
     */
    private final String countryCode;
    /**
     * The locality or city of the subject.
     * 
     */
    private final String locality;
    /**
     * The organization of the subject.
     * 
     */
    private final String organization;
    /**
     * The organizational_unit of the subject.
     * 
     */
    private final String organizationalUnit;
    /**
     * The postal code of the subject.
     * 
     */
    private final String postalCode;
    /**
     * The province, territory, or regional state of the subject.
     * 
     */
    private final String province;
    /**
     * The street address of the subject.
     * 
     */
    private final String streetAddress;

    @CustomType.Constructor
    private SubjectResponse(
        @CustomType.Parameter("countryCode") String countryCode,
        @CustomType.Parameter("locality") String locality,
        @CustomType.Parameter("organization") String organization,
        @CustomType.Parameter("organizationalUnit") String organizationalUnit,
        @CustomType.Parameter("postalCode") String postalCode,
        @CustomType.Parameter("province") String province,
        @CustomType.Parameter("streetAddress") String streetAddress) {
        this.countryCode = countryCode;
        this.locality = locality;
        this.organization = organization;
        this.organizationalUnit = organizationalUnit;
        this.postalCode = postalCode;
        this.province = province;
        this.streetAddress = streetAddress;
    }

    /**
     * The country code of the subject.
     * 
    */
    public String getCountryCode() {
        return this.countryCode;
    }
    /**
     * The locality or city of the subject.
     * 
    */
    public String getLocality() {
        return this.locality;
    }
    /**
     * The organization of the subject.
     * 
    */
    public String getOrganization() {
        return this.organization;
    }
    /**
     * The organizational_unit of the subject.
     * 
    */
    public String getOrganizationalUnit() {
        return this.organizationalUnit;
    }
    /**
     * The postal code of the subject.
     * 
    */
    public String getPostalCode() {
        return this.postalCode;
    }
    /**
     * The province, territory, or regional state of the subject.
     * 
    */
    public String getProvince() {
        return this.province;
    }
    /**
     * The street address of the subject.
     * 
    */
    public String getStreetAddress() {
        return this.streetAddress;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubjectResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String countryCode;
        private String locality;
        private String organization;
        private String organizationalUnit;
        private String postalCode;
        private String province;
        private String streetAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(SubjectResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.countryCode = defaults.countryCode;
    	      this.locality = defaults.locality;
    	      this.organization = defaults.organization;
    	      this.organizationalUnit = defaults.organizationalUnit;
    	      this.postalCode = defaults.postalCode;
    	      this.province = defaults.province;
    	      this.streetAddress = defaults.streetAddress;
        }

        public Builder countryCode(String countryCode) {
            this.countryCode = Objects.requireNonNull(countryCode);
            return this;
        }

        public Builder locality(String locality) {
            this.locality = Objects.requireNonNull(locality);
            return this;
        }

        public Builder organization(String organization) {
            this.organization = Objects.requireNonNull(organization);
            return this;
        }

        public Builder organizationalUnit(String organizationalUnit) {
            this.organizationalUnit = Objects.requireNonNull(organizationalUnit);
            return this;
        }

        public Builder postalCode(String postalCode) {
            this.postalCode = Objects.requireNonNull(postalCode);
            return this;
        }

        public Builder province(String province) {
            this.province = Objects.requireNonNull(province);
            return this;
        }

        public Builder streetAddress(String streetAddress) {
            this.streetAddress = Objects.requireNonNull(streetAddress);
            return this;
        }
        public SubjectResponse build() {
            return new SubjectResponse(countryCode, locality, organization, organizationalUnit, postalCode, province, streetAddress);
        }
    }
}
