// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.secretmanager_v1.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.googlenative.secretmanager_v1.outputs.CustomerManagedEncryptionResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class ReplicaResponse {
    /**
     * Optional. The customer-managed encryption configuration of the User-Managed Replica. If no configuration is provided, Google-managed default encryption is used. Updates to the Secret encryption configuration only apply to SecretVersions added afterwards. They do not apply retroactively to existing SecretVersions.
     * 
     */
    private final CustomerManagedEncryptionResponse customerManagedEncryption;
    /**
     * The canonical IDs of the location to replicate data. For example: `"us-east1"`.
     * 
     */
    private final String location;

    @CustomType.Constructor
    private ReplicaResponse(
        @CustomType.Parameter("customerManagedEncryption") CustomerManagedEncryptionResponse customerManagedEncryption,
        @CustomType.Parameter("location") String location) {
        this.customerManagedEncryption = customerManagedEncryption;
        this.location = location;
    }

    /**
     * Optional. The customer-managed encryption configuration of the User-Managed Replica. If no configuration is provided, Google-managed default encryption is used. Updates to the Secret encryption configuration only apply to SecretVersions added afterwards. They do not apply retroactively to existing SecretVersions.
     * 
    */
    public CustomerManagedEncryptionResponse getCustomerManagedEncryption() {
        return this.customerManagedEncryption;
    }
    /**
     * The canonical IDs of the location to replicate data. For example: `"us-east1"`.
     * 
    */
    public String getLocation() {
        return this.location;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicaResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomerManagedEncryptionResponse customerManagedEncryption;
        private String location;

        public Builder() {
    	      // Empty
        }

        public Builder(ReplicaResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customerManagedEncryption = defaults.customerManagedEncryption;
    	      this.location = defaults.location;
        }

        public Builder customerManagedEncryption(CustomerManagedEncryptionResponse customerManagedEncryption) {
            this.customerManagedEncryption = Objects.requireNonNull(customerManagedEncryption);
            return this;
        }

        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }
        public ReplicaResponse build() {
            return new ReplicaResponse(customerManagedEncryption, location);
        }
    }
}
