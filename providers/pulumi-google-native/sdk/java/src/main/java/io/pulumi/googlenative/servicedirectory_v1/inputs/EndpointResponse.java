// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicedirectory_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class EndpointResponse extends io.pulumi.resources.InvokeArgs {

    public static final EndpointResponse Empty = new EndpointResponse();

    @InputImport(name="address", required=true)
    private final String address;

    public String getAddress() {
        return this.address;
    }

    @InputImport(name="annotations", required=true)
    private final Map<String,String> annotations;

    public Map<String,String> getAnnotations() {
        return this.annotations;
    }

    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    @InputImport(name="network", required=true)
    private final String network;

    public String getNetwork() {
        return this.network;
    }

    @InputImport(name="port", required=true)
    private final Integer port;

    public Integer getPort() {
        return this.port;
    }

    public EndpointResponse(
        String address,
        Map<String,String> annotations,
        String name,
        String network,
        Integer port) {
        this.address = Objects.requireNonNull(address, "expected parameter 'address' to be non-null");
        this.annotations = Objects.requireNonNull(annotations, "expected parameter 'annotations' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.network = Objects.requireNonNull(network, "expected parameter 'network' to be non-null");
        this.port = Objects.requireNonNull(port, "expected parameter 'port' to be non-null");
    }

    private EndpointResponse() {
        this.address = null;
        this.annotations = Map.of();
        this.name = null;
        this.network = null;
        this.port = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String address;
        private Map<String,String> annotations;
        private String name;
        private String network;
        private Integer port;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.annotations = defaults.annotations;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.port = defaults.port;
        }

        public Builder setAddress(String address) {
            this.address = Objects.requireNonNull(address);
            return this;
        }

        public Builder setAnnotations(Map<String,String> annotations) {
            this.annotations = Objects.requireNonNull(annotations);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetwork(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setPort(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public EndpointResponse build() {
            return new EndpointResponse(address, annotations, name, network, port);
        }
    }
}
