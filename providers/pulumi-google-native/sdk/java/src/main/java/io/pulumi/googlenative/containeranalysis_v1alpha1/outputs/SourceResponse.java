// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1alpha1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.containeranalysis_v1alpha1.outputs.GoogleDevtoolsContaineranalysisV1alpha1SourceContextResponse;
import io.pulumi.googlenative.containeranalysis_v1alpha1.outputs.RepoSourceResponse;
import io.pulumi.googlenative.containeranalysis_v1alpha1.outputs.StorageSourceResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class SourceResponse {
    private final List<GoogleDevtoolsContaineranalysisV1alpha1SourceContextResponse> additionalContexts;
    private final StorageSourceResponse artifactStorageSource;
    private final GoogleDevtoolsContaineranalysisV1alpha1SourceContextResponse context;
    private final Map<String,String> fileHashes;
    private final RepoSourceResponse repoSource;
    private final StorageSourceResponse storageSource;

    @OutputCustomType.Constructor({"additionalContexts","artifactStorageSource","context","fileHashes","repoSource","storageSource"})
    private SourceResponse(
        List<GoogleDevtoolsContaineranalysisV1alpha1SourceContextResponse> additionalContexts,
        StorageSourceResponse artifactStorageSource,
        GoogleDevtoolsContaineranalysisV1alpha1SourceContextResponse context,
        Map<String,String> fileHashes,
        RepoSourceResponse repoSource,
        StorageSourceResponse storageSource) {
        this.additionalContexts = Objects.requireNonNull(additionalContexts);
        this.artifactStorageSource = Objects.requireNonNull(artifactStorageSource);
        this.context = Objects.requireNonNull(context);
        this.fileHashes = Objects.requireNonNull(fileHashes);
        this.repoSource = Objects.requireNonNull(repoSource);
        this.storageSource = Objects.requireNonNull(storageSource);
    }

    public List<GoogleDevtoolsContaineranalysisV1alpha1SourceContextResponse> getAdditionalContexts() {
        return this.additionalContexts;
    }
    public StorageSourceResponse getArtifactStorageSource() {
        return this.artifactStorageSource;
    }
    public GoogleDevtoolsContaineranalysisV1alpha1SourceContextResponse getContext() {
        return this.context;
    }
    public Map<String,String> getFileHashes() {
        return this.fileHashes;
    }
    public RepoSourceResponse getRepoSource() {
        return this.repoSource;
    }
    public StorageSourceResponse getStorageSource() {
        return this.storageSource;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SourceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GoogleDevtoolsContaineranalysisV1alpha1SourceContextResponse> additionalContexts;
        private StorageSourceResponse artifactStorageSource;
        private GoogleDevtoolsContaineranalysisV1alpha1SourceContextResponse context;
        private Map<String,String> fileHashes;
        private RepoSourceResponse repoSource;
        private StorageSourceResponse storageSource;

        public Builder() {
    	      // Empty
        }

        public Builder(SourceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalContexts = defaults.additionalContexts;
    	      this.artifactStorageSource = defaults.artifactStorageSource;
    	      this.context = defaults.context;
    	      this.fileHashes = defaults.fileHashes;
    	      this.repoSource = defaults.repoSource;
    	      this.storageSource = defaults.storageSource;
        }

        public Builder setAdditionalContexts(List<GoogleDevtoolsContaineranalysisV1alpha1SourceContextResponse> additionalContexts) {
            this.additionalContexts = Objects.requireNonNull(additionalContexts);
            return this;
        }

        public Builder setArtifactStorageSource(StorageSourceResponse artifactStorageSource) {
            this.artifactStorageSource = Objects.requireNonNull(artifactStorageSource);
            return this;
        }

        public Builder setContext(GoogleDevtoolsContaineranalysisV1alpha1SourceContextResponse context) {
            this.context = Objects.requireNonNull(context);
            return this;
        }

        public Builder setFileHashes(Map<String,String> fileHashes) {
            this.fileHashes = Objects.requireNonNull(fileHashes);
            return this;
        }

        public Builder setRepoSource(RepoSourceResponse repoSource) {
            this.repoSource = Objects.requireNonNull(repoSource);
            return this;
        }

        public Builder setStorageSource(StorageSourceResponse storageSource) {
            this.storageSource = Objects.requireNonNull(storageSource);
            return this;
        }

        public SourceResponse build() {
            return new SourceResponse(additionalContexts, artifactStorageSource, context, fileHashes, repoSource, storageSource);
        }
    }
}
