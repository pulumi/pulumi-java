// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetStoredInfoTypeArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetStoredInfoTypeArgs Empty = new GetStoredInfoTypeArgs();

    @InputImport(name="location", required=true)
      private final String location;

    public String getLocation() {
        return this.location;
    }

    @InputImport(name="project")
      private final @Nullable String project;

    public Optional<String> getProject() {
        return this.project == null ? Optional.empty() : Optional.ofNullable(this.project);
    }

    @InputImport(name="storedInfoTypeId", required=true)
      private final String storedInfoTypeId;

    public String getStoredInfoTypeId() {
        return this.storedInfoTypeId;
    }

    public GetStoredInfoTypeArgs(
        String location,
        @Nullable String project,
        String storedInfoTypeId) {
        this.location = Objects.requireNonNull(location, "expected parameter 'location' to be non-null");
        this.project = project;
        this.storedInfoTypeId = Objects.requireNonNull(storedInfoTypeId, "expected parameter 'storedInfoTypeId' to be non-null");
    }

    private GetStoredInfoTypeArgs() {
        this.location = null;
        this.project = null;
        this.storedInfoTypeId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStoredInfoTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String location;
        private @Nullable String project;
        private String storedInfoTypeId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetStoredInfoTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.project = defaults.project;
    	      this.storedInfoTypeId = defaults.storedInfoTypeId;
        }

        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }

        public Builder storedInfoTypeId(String storedInfoTypeId) {
            this.storedInfoTypeId = Objects.requireNonNull(storedInfoTypeId);
            return this;
        }
        public GetStoredInfoTypeArgs build() {
            return new GetStoredInfoTypeArgs(location, project, storedInfoTypeId);
        }
    }
}
