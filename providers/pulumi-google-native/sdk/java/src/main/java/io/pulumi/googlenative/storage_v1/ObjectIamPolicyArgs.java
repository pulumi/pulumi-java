// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.storage_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.storage_v1.inputs.ObjectIamPolicyBindingsItemArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ObjectIamPolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ObjectIamPolicyArgs Empty = new ObjectIamPolicyArgs();

    /**
     * An association between a role, which comes with a set of permissions, and members who may assume that role.
     * 
     */
    @Import(name="bindings")
      private final @Nullable Output<List<ObjectIamPolicyBindingsItemArgs>> bindings;

    public Output<List<ObjectIamPolicyBindingsItemArgs>> bindings() {
        return this.bindings == null ? Codegen.empty() : this.bindings;
    }

    @Import(name="bucket", required=true)
      private final Output<String> bucket;

    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * HTTP 1.1  Entity tag for the policy.
     * 
     */
    @Import(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> etag() {
        return this.etag == null ? Codegen.empty() : this.etag;
    }

    @Import(name="generation")
      private final @Nullable Output<String> generation;

    public Output<String> generation() {
        return this.generation == null ? Codegen.empty() : this.generation;
    }

    /**
     * The kind of item this is. For policies, this is always storage#policy. This field is ignored on input.
     * 
     */
    @Import(name="kind")
      private final @Nullable Output<String> kind;

    public Output<String> kind() {
        return this.kind == null ? Codegen.empty() : this.kind;
    }

    @Import(name="object", required=true)
      private final Output<String> object;

    public Output<String> object() {
        return this.object;
    }

    @Import(name="provisionalUserProject")
      private final @Nullable Output<String> provisionalUserProject;

    public Output<String> provisionalUserProject() {
        return this.provisionalUserProject == null ? Codegen.empty() : this.provisionalUserProject;
    }

    /**
     * The ID of the resource to which this policy belongs. Will be of the form projects/_/buckets/bucket for buckets, and projects/_/buckets/bucket/objects/object for objects. A specific generation may be specified by appending #generationNumber to the end of the object name, e.g. projects/_/buckets/my-bucket/objects/data.txt#17. The current generation can be denoted with #0. This field is ignored on input.
     * 
     */
    @Import(name="resourceId")
      private final @Nullable Output<String> resourceId;

    public Output<String> resourceId() {
        return this.resourceId == null ? Codegen.empty() : this.resourceId;
    }

    @Import(name="userProject")
      private final @Nullable Output<String> userProject;

    public Output<String> userProject() {
        return this.userProject == null ? Codegen.empty() : this.userProject;
    }

    /**
     * The IAM policy format version.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<Integer> version;

    public Output<Integer> version() {
        return this.version == null ? Codegen.empty() : this.version;
    }

    public ObjectIamPolicyArgs(
        @Nullable Output<List<ObjectIamPolicyBindingsItemArgs>> bindings,
        Output<String> bucket,
        @Nullable Output<String> etag,
        @Nullable Output<String> generation,
        @Nullable Output<String> kind,
        Output<String> object,
        @Nullable Output<String> provisionalUserProject,
        @Nullable Output<String> resourceId,
        @Nullable Output<String> userProject,
        @Nullable Output<Integer> version) {
        this.bindings = bindings;
        this.bucket = Objects.requireNonNull(bucket, "expected parameter 'bucket' to be non-null");
        this.etag = etag;
        this.generation = generation;
        this.kind = kind;
        this.object = Objects.requireNonNull(object, "expected parameter 'object' to be non-null");
        this.provisionalUserProject = provisionalUserProject;
        this.resourceId = resourceId;
        this.userProject = userProject;
        this.version = version;
    }

    private ObjectIamPolicyArgs() {
        this.bindings = Codegen.empty();
        this.bucket = Codegen.empty();
        this.etag = Codegen.empty();
        this.generation = Codegen.empty();
        this.kind = Codegen.empty();
        this.object = Codegen.empty();
        this.provisionalUserProject = Codegen.empty();
        this.resourceId = Codegen.empty();
        this.userProject = Codegen.empty();
        this.version = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObjectIamPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<ObjectIamPolicyBindingsItemArgs>> bindings;
        private Output<String> bucket;
        private @Nullable Output<String> etag;
        private @Nullable Output<String> generation;
        private @Nullable Output<String> kind;
        private Output<String> object;
        private @Nullable Output<String> provisionalUserProject;
        private @Nullable Output<String> resourceId;
        private @Nullable Output<String> userProject;
        private @Nullable Output<Integer> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ObjectIamPolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bindings = defaults.bindings;
    	      this.bucket = defaults.bucket;
    	      this.etag = defaults.etag;
    	      this.generation = defaults.generation;
    	      this.kind = defaults.kind;
    	      this.object = defaults.object;
    	      this.provisionalUserProject = defaults.provisionalUserProject;
    	      this.resourceId = defaults.resourceId;
    	      this.userProject = defaults.userProject;
    	      this.version = defaults.version;
        }

        public Builder bindings(@Nullable Output<List<ObjectIamPolicyBindingsItemArgs>> bindings) {
            this.bindings = bindings;
            return this;
        }
        public Builder bindings(@Nullable List<ObjectIamPolicyBindingsItemArgs> bindings) {
            this.bindings = Codegen.ofNullable(bindings);
            return this;
        }
        public Builder bindings(ObjectIamPolicyBindingsItemArgs... bindings) {
            return bindings(List.of(bindings));
        }
        public Builder bucket(Output<String> bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        public Builder bucket(String bucket) {
            this.bucket = Output.of(Objects.requireNonNull(bucket));
            return this;
        }
        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }
        public Builder etag(@Nullable String etag) {
            this.etag = Codegen.ofNullable(etag);
            return this;
        }
        public Builder generation(@Nullable Output<String> generation) {
            this.generation = generation;
            return this;
        }
        public Builder generation(@Nullable String generation) {
            this.generation = Codegen.ofNullable(generation);
            return this;
        }
        public Builder kind(@Nullable Output<String> kind) {
            this.kind = kind;
            return this;
        }
        public Builder kind(@Nullable String kind) {
            this.kind = Codegen.ofNullable(kind);
            return this;
        }
        public Builder object(Output<String> object) {
            this.object = Objects.requireNonNull(object);
            return this;
        }
        public Builder object(String object) {
            this.object = Output.of(Objects.requireNonNull(object));
            return this;
        }
        public Builder provisionalUserProject(@Nullable Output<String> provisionalUserProject) {
            this.provisionalUserProject = provisionalUserProject;
            return this;
        }
        public Builder provisionalUserProject(@Nullable String provisionalUserProject) {
            this.provisionalUserProject = Codegen.ofNullable(provisionalUserProject);
            return this;
        }
        public Builder resourceId(@Nullable Output<String> resourceId) {
            this.resourceId = resourceId;
            return this;
        }
        public Builder resourceId(@Nullable String resourceId) {
            this.resourceId = Codegen.ofNullable(resourceId);
            return this;
        }
        public Builder userProject(@Nullable Output<String> userProject) {
            this.userProject = userProject;
            return this;
        }
        public Builder userProject(@Nullable String userProject) {
            this.userProject = Codegen.ofNullable(userProject);
            return this;
        }
        public Builder version(@Nullable Output<Integer> version) {
            this.version = version;
            return this;
        }
        public Builder version(@Nullable Integer version) {
            this.version = Codegen.ofNullable(version);
            return this;
        }        public ObjectIamPolicyArgs build() {
            return new ObjectIamPolicyArgs(bindings, bucket, etag, generation, kind, object, provisionalUserProject, resourceId, userProject, version);
        }
    }
}
