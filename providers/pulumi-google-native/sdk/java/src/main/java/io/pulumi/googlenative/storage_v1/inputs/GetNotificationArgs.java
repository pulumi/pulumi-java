// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.storage_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNotificationArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetNotificationArgs Empty = new GetNotificationArgs();

    @InputImport(name="bucket", required=true)
      private final String bucket;

    public String getBucket() {
        return this.bucket;
    }

    @InputImport(name="notification", required=true)
      private final String notification;

    public String getNotification() {
        return this.notification;
    }

    @InputImport(name="provisionalUserProject")
      private final @Nullable String provisionalUserProject;

    public Optional<String> getProvisionalUserProject() {
        return this.provisionalUserProject == null ? Optional.empty() : Optional.ofNullable(this.provisionalUserProject);
    }

    @InputImport(name="userProject")
      private final @Nullable String userProject;

    public Optional<String> getUserProject() {
        return this.userProject == null ? Optional.empty() : Optional.ofNullable(this.userProject);
    }

    public GetNotificationArgs(
        String bucket,
        String notification,
        @Nullable String provisionalUserProject,
        @Nullable String userProject) {
        this.bucket = Objects.requireNonNull(bucket, "expected parameter 'bucket' to be non-null");
        this.notification = Objects.requireNonNull(notification, "expected parameter 'notification' to be non-null");
        this.provisionalUserProject = provisionalUserProject;
        this.userProject = userProject;
    }

    private GetNotificationArgs() {
        this.bucket = null;
        this.notification = null;
        this.provisionalUserProject = null;
        this.userProject = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNotificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bucket;
        private String notification;
        private @Nullable String provisionalUserProject;
        private @Nullable String userProject;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNotificationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.notification = defaults.notification;
    	      this.provisionalUserProject = defaults.provisionalUserProject;
    	      this.userProject = defaults.userProject;
        }

        public Builder setBucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }

        public Builder setNotification(String notification) {
            this.notification = Objects.requireNonNull(notification);
            return this;
        }

        public Builder setProvisionalUserProject(@Nullable String provisionalUserProject) {
            this.provisionalUserProject = provisionalUserProject;
            return this;
        }

        public Builder setUserProject(@Nullable String userProject) {
            this.userProject = userProject;
            return this;
        }
        public GetNotificationArgs build() {
            return new GetNotificationArgs(bucket, notification, provisionalUserProject, userProject);
        }
    }
}
