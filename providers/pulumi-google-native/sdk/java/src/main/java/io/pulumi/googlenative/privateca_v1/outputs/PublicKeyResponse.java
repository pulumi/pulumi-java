// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.privateca_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class PublicKeyResponse {
    /**
     * The format of the public key.
     * 
     */
    private final String format;
    /**
     * A public key. The padding and encoding must match with the `KeyFormat` value specified for the `format` field.
     * 
     */
    private final String key;

    @OutputCustomType.Constructor({"format","key"})
    private PublicKeyResponse(
        String format,
        String key) {
        this.format = Objects.requireNonNull(format);
        this.key = Objects.requireNonNull(key);
    }

    /**
     * The format of the public key.
     * 
    */
    public String getFormat() {
        return this.format;
    }
    /**
     * A public key. The padding and encoding must match with the `KeyFormat` value specified for the `format` field.
     * 
    */
    public String getKey() {
        return this.key;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PublicKeyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String format;
        private String key;

        public Builder() {
    	      // Empty
        }

        public Builder(PublicKeyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.format = defaults.format;
    	      this.key = defaults.key;
        }

        public Builder setFormat(String format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }

        public Builder setKey(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public PublicKeyResponse build() {
            return new PublicKeyResponse(format, key);
        }
    }
}
