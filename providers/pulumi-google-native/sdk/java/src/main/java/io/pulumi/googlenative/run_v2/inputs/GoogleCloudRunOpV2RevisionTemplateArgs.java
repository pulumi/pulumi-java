// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.run_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.run_v2.enums.GoogleCloudRunOpV2RevisionTemplateExecutionEnvironment;
import io.pulumi.googlenative.run_v2.inputs.GoogleCloudRunOpV2ContainerArgs;
import io.pulumi.googlenative.run_v2.inputs.GoogleCloudRunOpV2RevisionScalingArgs;
import io.pulumi.googlenative.run_v2.inputs.GoogleCloudRunOpV2VolumeArgs;
import io.pulumi.googlenative.run_v2.inputs.GoogleCloudRunOpV2VpcAccessArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GoogleCloudRunOpV2RevisionTemplateArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudRunOpV2RevisionTemplateArgs Empty = new GoogleCloudRunOpV2RevisionTemplateArgs();

    @InputImport(name="annotations")
    private final @Nullable Input<Map<String,String>> annotations;

    public Input<Map<String,String>> getAnnotations() {
        return this.annotations == null ? Input.empty() : this.annotations;
    }

    @InputImport(name="confidential")
    private final @Nullable Input<Boolean> confidential;

    public Input<Boolean> getConfidential() {
        return this.confidential == null ? Input.empty() : this.confidential;
    }

    @InputImport(name="containerConcurrency")
    private final @Nullable Input<Integer> containerConcurrency;

    public Input<Integer> getContainerConcurrency() {
        return this.containerConcurrency == null ? Input.empty() : this.containerConcurrency;
    }

    @InputImport(name="containers")
    private final @Nullable Input<List<GoogleCloudRunOpV2ContainerArgs>> containers;

    public Input<List<GoogleCloudRunOpV2ContainerArgs>> getContainers() {
        return this.containers == null ? Input.empty() : this.containers;
    }

    @InputImport(name="encryptionKey")
    private final @Nullable Input<String> encryptionKey;

    public Input<String> getEncryptionKey() {
        return this.encryptionKey == null ? Input.empty() : this.encryptionKey;
    }

    @InputImport(name="executionEnvironment")
    private final @Nullable Input<GoogleCloudRunOpV2RevisionTemplateExecutionEnvironment> executionEnvironment;

    public Input<GoogleCloudRunOpV2RevisionTemplateExecutionEnvironment> getExecutionEnvironment() {
        return this.executionEnvironment == null ? Input.empty() : this.executionEnvironment;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="revision")
    private final @Nullable Input<String> revision;

    public Input<String> getRevision() {
        return this.revision == null ? Input.empty() : this.revision;
    }

    @InputImport(name="scaling")
    private final @Nullable Input<GoogleCloudRunOpV2RevisionScalingArgs> scaling;

    public Input<GoogleCloudRunOpV2RevisionScalingArgs> getScaling() {
        return this.scaling == null ? Input.empty() : this.scaling;
    }

    @InputImport(name="serviceAccount")
    private final @Nullable Input<String> serviceAccount;

    public Input<String> getServiceAccount() {
        return this.serviceAccount == null ? Input.empty() : this.serviceAccount;
    }

    @InputImport(name="timeout")
    private final @Nullable Input<String> timeout;

    public Input<String> getTimeout() {
        return this.timeout == null ? Input.empty() : this.timeout;
    }

    @InputImport(name="volumes")
    private final @Nullable Input<List<GoogleCloudRunOpV2VolumeArgs>> volumes;

    public Input<List<GoogleCloudRunOpV2VolumeArgs>> getVolumes() {
        return this.volumes == null ? Input.empty() : this.volumes;
    }

    @InputImport(name="vpcAccess")
    private final @Nullable Input<GoogleCloudRunOpV2VpcAccessArgs> vpcAccess;

    public Input<GoogleCloudRunOpV2VpcAccessArgs> getVpcAccess() {
        return this.vpcAccess == null ? Input.empty() : this.vpcAccess;
    }

    public GoogleCloudRunOpV2RevisionTemplateArgs(
        @Nullable Input<Map<String,String>> annotations,
        @Nullable Input<Boolean> confidential,
        @Nullable Input<Integer> containerConcurrency,
        @Nullable Input<List<GoogleCloudRunOpV2ContainerArgs>> containers,
        @Nullable Input<String> encryptionKey,
        @Nullable Input<GoogleCloudRunOpV2RevisionTemplateExecutionEnvironment> executionEnvironment,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> revision,
        @Nullable Input<GoogleCloudRunOpV2RevisionScalingArgs> scaling,
        @Nullable Input<String> serviceAccount,
        @Nullable Input<String> timeout,
        @Nullable Input<List<GoogleCloudRunOpV2VolumeArgs>> volumes,
        @Nullable Input<GoogleCloudRunOpV2VpcAccessArgs> vpcAccess) {
        this.annotations = annotations;
        this.confidential = confidential;
        this.containerConcurrency = containerConcurrency;
        this.containers = containers;
        this.encryptionKey = encryptionKey;
        this.executionEnvironment = executionEnvironment;
        this.labels = labels;
        this.revision = revision;
        this.scaling = scaling;
        this.serviceAccount = serviceAccount;
        this.timeout = timeout;
        this.volumes = volumes;
        this.vpcAccess = vpcAccess;
    }

    private GoogleCloudRunOpV2RevisionTemplateArgs() {
        this.annotations = Input.empty();
        this.confidential = Input.empty();
        this.containerConcurrency = Input.empty();
        this.containers = Input.empty();
        this.encryptionKey = Input.empty();
        this.executionEnvironment = Input.empty();
        this.labels = Input.empty();
        this.revision = Input.empty();
        this.scaling = Input.empty();
        this.serviceAccount = Input.empty();
        this.timeout = Input.empty();
        this.volumes = Input.empty();
        this.vpcAccess = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRunOpV2RevisionTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Map<String,String>> annotations;
        private @Nullable Input<Boolean> confidential;
        private @Nullable Input<Integer> containerConcurrency;
        private @Nullable Input<List<GoogleCloudRunOpV2ContainerArgs>> containers;
        private @Nullable Input<String> encryptionKey;
        private @Nullable Input<GoogleCloudRunOpV2RevisionTemplateExecutionEnvironment> executionEnvironment;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> revision;
        private @Nullable Input<GoogleCloudRunOpV2RevisionScalingArgs> scaling;
        private @Nullable Input<String> serviceAccount;
        private @Nullable Input<String> timeout;
        private @Nullable Input<List<GoogleCloudRunOpV2VolumeArgs>> volumes;
        private @Nullable Input<GoogleCloudRunOpV2VpcAccessArgs> vpcAccess;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRunOpV2RevisionTemplateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.confidential = defaults.confidential;
    	      this.containerConcurrency = defaults.containerConcurrency;
    	      this.containers = defaults.containers;
    	      this.encryptionKey = defaults.encryptionKey;
    	      this.executionEnvironment = defaults.executionEnvironment;
    	      this.labels = defaults.labels;
    	      this.revision = defaults.revision;
    	      this.scaling = defaults.scaling;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.timeout = defaults.timeout;
    	      this.volumes = defaults.volumes;
    	      this.vpcAccess = defaults.vpcAccess;
        }

        public Builder setAnnotations(@Nullable Input<Map<String,String>> annotations) {
            this.annotations = annotations;
            return this;
        }

        public Builder setAnnotations(@Nullable Map<String,String> annotations) {
            this.annotations = Input.ofNullable(annotations);
            return this;
        }

        public Builder setConfidential(@Nullable Input<Boolean> confidential) {
            this.confidential = confidential;
            return this;
        }

        public Builder setConfidential(@Nullable Boolean confidential) {
            this.confidential = Input.ofNullable(confidential);
            return this;
        }

        public Builder setContainerConcurrency(@Nullable Input<Integer> containerConcurrency) {
            this.containerConcurrency = containerConcurrency;
            return this;
        }

        public Builder setContainerConcurrency(@Nullable Integer containerConcurrency) {
            this.containerConcurrency = Input.ofNullable(containerConcurrency);
            return this;
        }

        public Builder setContainers(@Nullable Input<List<GoogleCloudRunOpV2ContainerArgs>> containers) {
            this.containers = containers;
            return this;
        }

        public Builder setContainers(@Nullable List<GoogleCloudRunOpV2ContainerArgs> containers) {
            this.containers = Input.ofNullable(containers);
            return this;
        }

        public Builder setEncryptionKey(@Nullable Input<String> encryptionKey) {
            this.encryptionKey = encryptionKey;
            return this;
        }

        public Builder setEncryptionKey(@Nullable String encryptionKey) {
            this.encryptionKey = Input.ofNullable(encryptionKey);
            return this;
        }

        public Builder setExecutionEnvironment(@Nullable Input<GoogleCloudRunOpV2RevisionTemplateExecutionEnvironment> executionEnvironment) {
            this.executionEnvironment = executionEnvironment;
            return this;
        }

        public Builder setExecutionEnvironment(@Nullable GoogleCloudRunOpV2RevisionTemplateExecutionEnvironment executionEnvironment) {
            this.executionEnvironment = Input.ofNullable(executionEnvironment);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setRevision(@Nullable Input<String> revision) {
            this.revision = revision;
            return this;
        }

        public Builder setRevision(@Nullable String revision) {
            this.revision = Input.ofNullable(revision);
            return this;
        }

        public Builder setScaling(@Nullable Input<GoogleCloudRunOpV2RevisionScalingArgs> scaling) {
            this.scaling = scaling;
            return this;
        }

        public Builder setScaling(@Nullable GoogleCloudRunOpV2RevisionScalingArgs scaling) {
            this.scaling = Input.ofNullable(scaling);
            return this;
        }

        public Builder setServiceAccount(@Nullable Input<String> serviceAccount) {
            this.serviceAccount = serviceAccount;
            return this;
        }

        public Builder setServiceAccount(@Nullable String serviceAccount) {
            this.serviceAccount = Input.ofNullable(serviceAccount);
            return this;
        }

        public Builder setTimeout(@Nullable Input<String> timeout) {
            this.timeout = timeout;
            return this;
        }

        public Builder setTimeout(@Nullable String timeout) {
            this.timeout = Input.ofNullable(timeout);
            return this;
        }

        public Builder setVolumes(@Nullable Input<List<GoogleCloudRunOpV2VolumeArgs>> volumes) {
            this.volumes = volumes;
            return this;
        }

        public Builder setVolumes(@Nullable List<GoogleCloudRunOpV2VolumeArgs> volumes) {
            this.volumes = Input.ofNullable(volumes);
            return this;
        }

        public Builder setVpcAccess(@Nullable Input<GoogleCloudRunOpV2VpcAccessArgs> vpcAccess) {
            this.vpcAccess = vpcAccess;
            return this;
        }

        public Builder setVpcAccess(@Nullable GoogleCloudRunOpV2VpcAccessArgs vpcAccess) {
            this.vpcAccess = Input.ofNullable(vpcAccess);
            return this;
        }

        public GoogleCloudRunOpV2RevisionTemplateArgs build() {
            return new GoogleCloudRunOpV2RevisionTemplateArgs(annotations, confidential, containerConcurrency, containers, encryptionKey, executionEnvironment, labels, revision, scaling, serviceAccount, timeout, volumes, vpcAccess);
        }
    }
}
