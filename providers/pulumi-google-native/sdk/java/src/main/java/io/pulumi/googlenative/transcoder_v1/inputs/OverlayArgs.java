// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.transcoder_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.transcoder_v1.inputs.AnimationArgs;
import io.pulumi.googlenative.transcoder_v1.inputs.ImageArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Overlay configuration.
 * 
 */
public final class OverlayArgs extends io.pulumi.resources.ResourceArgs {

    public static final OverlayArgs Empty = new OverlayArgs();

    /**
     * List of Animations. The list should be chronological, without any time overlap.
     * 
     */
    @InputImport(name="animations")
    private final @Nullable Input<List<AnimationArgs>> animations;

    public Input<List<AnimationArgs>> getAnimations() {
        return this.animations == null ? Input.empty() : this.animations;
    }

    /**
     * Image overlay.
     * 
     */
    @InputImport(name="image")
    private final @Nullable Input<ImageArgs> image;

    public Input<ImageArgs> getImage() {
        return this.image == null ? Input.empty() : this.image;
    }

    public OverlayArgs(
        @Nullable Input<List<AnimationArgs>> animations,
        @Nullable Input<ImageArgs> image) {
        this.animations = animations;
        this.image = image;
    }

    private OverlayArgs() {
        this.animations = Input.empty();
        this.image = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OverlayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<AnimationArgs>> animations;
        private @Nullable Input<ImageArgs> image;

        public Builder() {
    	      // Empty
        }

        public Builder(OverlayArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.animations = defaults.animations;
    	      this.image = defaults.image;
        }

        public Builder setAnimations(@Nullable Input<List<AnimationArgs>> animations) {
            this.animations = animations;
            return this;
        }

        public Builder setAnimations(@Nullable List<AnimationArgs> animations) {
            this.animations = Input.ofNullable(animations);
            return this;
        }

        public Builder setImage(@Nullable Input<ImageArgs> image) {
            this.image = image;
            return this;
        }

        public Builder setImage(@Nullable ImageArgs image) {
            this.image = Input.ofNullable(image);
            return this;
        }

        public OverlayArgs build() {
            return new OverlayArgs(animations, image);
        }
    }
}
