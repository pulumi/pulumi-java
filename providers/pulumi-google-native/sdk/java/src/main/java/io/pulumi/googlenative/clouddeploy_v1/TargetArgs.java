// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.clouddeploy_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.clouddeploy_v1.inputs.AnthosClusterArgs;
import io.pulumi.googlenative.clouddeploy_v1.inputs.ExecutionConfigArgs;
import io.pulumi.googlenative.clouddeploy_v1.inputs.GkeClusterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TargetArgs extends io.pulumi.resources.ResourceArgs {

    public static final TargetArgs Empty = new TargetArgs();

    /**
     * Optional. User annotations. These attributes can only be set and used by the user, and not by Google Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
     * 
     */
    @Import(name="annotations")
      private final @Nullable Output<Map<String,String>> annotations;

    public Output<Map<String,String>> getAnnotations() {
        return this.annotations == null ? Codegen.empty() : this.annotations;
    }

    /**
     * Information specifying an Anthos Cluster.
     * 
     */
    @Import(name="anthosCluster")
      private final @Nullable Output<AnthosClusterArgs> anthosCluster;

    public Output<AnthosClusterArgs> getAnthosCluster() {
        return this.anthosCluster == null ? Codegen.empty() : this.anthosCluster;
    }

    /**
     * Optional. Description of the `Target`. Max length is 255 characters.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     * 
     */
    @Import(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> getEtag() {
        return this.etag == null ? Codegen.empty() : this.etag;
    }

    /**
     * Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.
     * 
     */
    @Import(name="executionConfigs")
      private final @Nullable Output<List<ExecutionConfigArgs>> executionConfigs;

    public Output<List<ExecutionConfigArgs>> getExecutionConfigs() {
        return this.executionConfigs == null ? Codegen.empty() : this.executionConfigs;
    }

    /**
     * Information specifying a GKE Cluster.
     * 
     */
    @Import(name="gke")
      private final @Nullable Output<GkeClusterArgs> gke;

    public Output<GkeClusterArgs> getGke() {
        return this.gke == null ? Codegen.empty() : this.gke;
    }

    /**
     * Optional. Labels are attributes that can be set and used by both the user and by Google Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Optional. Name of the `Target`. Format is projects/{project}/locations/{location}/targets/a-z{0,62}.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    @Import(name="requestId")
      private final @Nullable Output<String> requestId;

    public Output<String> getRequestId() {
        return this.requestId == null ? Codegen.empty() : this.requestId;
    }

    /**
     * Optional. Whether or not the `Target` requires approval.
     * 
     */
    @Import(name="requireApproval")
      private final @Nullable Output<Boolean> requireApproval;

    public Output<Boolean> getRequireApproval() {
        return this.requireApproval == null ? Codegen.empty() : this.requireApproval;
    }

    @Import(name="targetId", required=true)
      private final Output<String> targetId;

    public Output<String> getTargetId() {
        return this.targetId;
    }

    @Import(name="validateOnly")
      private final @Nullable Output<String> validateOnly;

    public Output<String> getValidateOnly() {
        return this.validateOnly == null ? Codegen.empty() : this.validateOnly;
    }

    public TargetArgs(
        @Nullable Output<Map<String,String>> annotations,
        @Nullable Output<AnthosClusterArgs> anthosCluster,
        @Nullable Output<String> description,
        @Nullable Output<String> etag,
        @Nullable Output<List<ExecutionConfigArgs>> executionConfigs,
        @Nullable Output<GkeClusterArgs> gke,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<String> requestId,
        @Nullable Output<Boolean> requireApproval,
        Output<String> targetId,
        @Nullable Output<String> validateOnly) {
        this.annotations = annotations;
        this.anthosCluster = anthosCluster;
        this.description = description;
        this.etag = etag;
        this.executionConfigs = executionConfigs;
        this.gke = gke;
        this.labels = labels;
        this.location = location;
        this.name = name;
        this.project = project;
        this.requestId = requestId;
        this.requireApproval = requireApproval;
        this.targetId = Objects.requireNonNull(targetId, "expected parameter 'targetId' to be non-null");
        this.validateOnly = validateOnly;
    }

    private TargetArgs() {
        this.annotations = Codegen.empty();
        this.anthosCluster = Codegen.empty();
        this.description = Codegen.empty();
        this.etag = Codegen.empty();
        this.executionConfigs = Codegen.empty();
        this.gke = Codegen.empty();
        this.labels = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.requestId = Codegen.empty();
        this.requireApproval = Codegen.empty();
        this.targetId = Codegen.empty();
        this.validateOnly = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Map<String,String>> annotations;
        private @Nullable Output<AnthosClusterArgs> anthosCluster;
        private @Nullable Output<String> description;
        private @Nullable Output<String> etag;
        private @Nullable Output<List<ExecutionConfigArgs>> executionConfigs;
        private @Nullable Output<GkeClusterArgs> gke;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<String> requestId;
        private @Nullable Output<Boolean> requireApproval;
        private Output<String> targetId;
        private @Nullable Output<String> validateOnly;

        public Builder() {
    	      // Empty
        }

        public Builder(TargetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.anthosCluster = defaults.anthosCluster;
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.executionConfigs = defaults.executionConfigs;
    	      this.gke = defaults.gke;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.requestId = defaults.requestId;
    	      this.requireApproval = defaults.requireApproval;
    	      this.targetId = defaults.targetId;
    	      this.validateOnly = defaults.validateOnly;
        }

        public Builder annotations(@Nullable Output<Map<String,String>> annotations) {
            this.annotations = annotations;
            return this;
        }
        public Builder annotations(@Nullable Map<String,String> annotations) {
            this.annotations = Codegen.ofNullable(annotations);
            return this;
        }
        public Builder anthosCluster(@Nullable Output<AnthosClusterArgs> anthosCluster) {
            this.anthosCluster = anthosCluster;
            return this;
        }
        public Builder anthosCluster(@Nullable AnthosClusterArgs anthosCluster) {
            this.anthosCluster = Codegen.ofNullable(anthosCluster);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }
        public Builder etag(@Nullable String etag) {
            this.etag = Codegen.ofNullable(etag);
            return this;
        }
        public Builder executionConfigs(@Nullable Output<List<ExecutionConfigArgs>> executionConfigs) {
            this.executionConfigs = executionConfigs;
            return this;
        }
        public Builder executionConfigs(@Nullable List<ExecutionConfigArgs> executionConfigs) {
            this.executionConfigs = Codegen.ofNullable(executionConfigs);
            return this;
        }
        public Builder executionConfigs(ExecutionConfigArgs... executionConfigs) {
            return executionConfigs(List.of(executionConfigs));
        }
        public Builder gke(@Nullable Output<GkeClusterArgs> gke) {
            this.gke = gke;
            return this;
        }
        public Builder gke(@Nullable GkeClusterArgs gke) {
            this.gke = Codegen.ofNullable(gke);
            return this;
        }
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder requestId(@Nullable Output<String> requestId) {
            this.requestId = requestId;
            return this;
        }
        public Builder requestId(@Nullable String requestId) {
            this.requestId = Codegen.ofNullable(requestId);
            return this;
        }
        public Builder requireApproval(@Nullable Output<Boolean> requireApproval) {
            this.requireApproval = requireApproval;
            return this;
        }
        public Builder requireApproval(@Nullable Boolean requireApproval) {
            this.requireApproval = Codegen.ofNullable(requireApproval);
            return this;
        }
        public Builder targetId(Output<String> targetId) {
            this.targetId = Objects.requireNonNull(targetId);
            return this;
        }
        public Builder targetId(String targetId) {
            this.targetId = Output.of(Objects.requireNonNull(targetId));
            return this;
        }
        public Builder validateOnly(@Nullable Output<String> validateOnly) {
            this.validateOnly = validateOnly;
            return this;
        }
        public Builder validateOnly(@Nullable String validateOnly) {
            this.validateOnly = Codegen.ofNullable(validateOnly);
            return this;
        }        public TargetArgs build() {
            return new TargetArgs(annotations, anthosCluster, description, etag, executionConfigs, gke, labels, location, name, project, requestId, requireApproval, targetId, validateOnly);
        }
    }
}
