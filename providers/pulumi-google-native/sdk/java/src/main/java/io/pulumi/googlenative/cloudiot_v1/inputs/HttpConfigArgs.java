// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudiot_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.cloudiot_v1.enums.HttpConfigHttpEnabledState;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HttpConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final HttpConfigArgs Empty = new HttpConfigArgs();

    @InputImport(name="httpEnabledState")
    private final @Nullable Input<HttpConfigHttpEnabledState> httpEnabledState;

    public Input<HttpConfigHttpEnabledState> getHttpEnabledState() {
        return this.httpEnabledState == null ? Input.empty() : this.httpEnabledState;
    }

    public HttpConfigArgs(@Nullable Input<HttpConfigHttpEnabledState> httpEnabledState) {
        this.httpEnabledState = httpEnabledState;
    }

    private HttpConfigArgs() {
        this.httpEnabledState = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<HttpConfigHttpEnabledState> httpEnabledState;

        public Builder() {
    	      // Empty
        }

        public Builder(HttpConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.httpEnabledState = defaults.httpEnabledState;
        }

        public Builder setHttpEnabledState(@Nullable Input<HttpConfigHttpEnabledState> httpEnabledState) {
            this.httpEnabledState = httpEnabledState;
            return this;
        }

        public Builder setHttpEnabledState(@Nullable HttpConfigHttpEnabledState httpEnabledState) {
            this.httpEnabledState = Input.ofNullable(httpEnabledState);
            return this;
        }

        public HttpConfigArgs build() {
            return new HttpConfigArgs(httpEnabledState);
        }
    }
}
