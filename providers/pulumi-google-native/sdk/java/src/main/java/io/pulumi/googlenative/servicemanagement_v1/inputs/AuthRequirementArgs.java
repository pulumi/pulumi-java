// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * User-defined authentication requirements, including support for [JSON Web Token (JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32).
 * 
 */
public final class AuthRequirementArgs extends io.pulumi.resources.ResourceArgs {

    public static final AuthRequirementArgs Empty = new AuthRequirementArgs();

    /**
     * NOTE: This will be deprecated soon, once AuthProvider.audiences is implemented and accepted in all the runtime components. The list of JWT [audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3). that are allowed to access. A JWT containing any of these audiences will be accepted. When this setting is absent, only JWTs with audience "https://Service_name/API_name" will be accepted. For example, if no audiences are in the setting, LibraryService API will only accept JWTs with the following audience "https://library-example.googleapis.com/google.example.library.v1.LibraryService". Example: audiences: bookstore_android.apps.googleusercontent.com, bookstore_web.apps.googleusercontent.com
     * 
     */
    @InputImport(name="audiences")
    private final @Nullable Input<String> audiences;

    public Input<String> getAudiences() {
        return this.audiences == null ? Input.empty() : this.audiences;
    }

    /**
     * id from authentication provider. Example: provider_id: bookstore_auth
     * 
     */
    @InputImport(name="providerId")
    private final @Nullable Input<String> providerId;

    public Input<String> getProviderId() {
        return this.providerId == null ? Input.empty() : this.providerId;
    }

    public AuthRequirementArgs(
        @Nullable Input<String> audiences,
        @Nullable Input<String> providerId) {
        this.audiences = audiences;
        this.providerId = providerId;
    }

    private AuthRequirementArgs() {
        this.audiences = Input.empty();
        this.providerId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuthRequirementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> audiences;
        private @Nullable Input<String> providerId;

        public Builder() {
    	      // Empty
        }

        public Builder(AuthRequirementArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audiences = defaults.audiences;
    	      this.providerId = defaults.providerId;
        }

        public Builder setAudiences(@Nullable Input<String> audiences) {
            this.audiences = audiences;
            return this;
        }

        public Builder setAudiences(@Nullable String audiences) {
            this.audiences = Input.ofNullable(audiences);
            return this;
        }

        public Builder setProviderId(@Nullable Input<String> providerId) {
            this.providerId = providerId;
            return this;
        }

        public Builder setProviderId(@Nullable String providerId) {
            this.providerId = Input.ofNullable(providerId);
            return this;
        }

        public AuthRequirementArgs build() {
            return new AuthRequirementArgs(audiences, providerId);
        }
    }
}
