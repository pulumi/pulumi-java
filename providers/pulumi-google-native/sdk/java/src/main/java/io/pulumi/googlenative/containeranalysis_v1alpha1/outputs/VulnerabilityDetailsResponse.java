// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1alpha1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.containeranalysis_v1alpha1.outputs.PackageIssueResponse;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class VulnerabilityDetailsResponse {
    /**
     * The CVSS score of this vulnerability. CVSS score is on a scale of 0-10 where 0 indicates low severity and 10 indicates high severity.
     * 
     */
    private final Double cvssScore;
    /**
     * The distro assigned severity for this vulnerability when that is available and note provider assigned severity when distro has not yet assigned a severity for this vulnerability. When there are multiple package issues for this vulnerability, they can have different effective severities because some might come from the distro and some might come from installed language packs (e.g. Maven JARs or Go binaries). For this reason, it is advised to use the effective severity on the PackageIssue level, as this field may eventually be deprecated. In the case where multiple PackageIssues have different effective severities, the one set here will be the highest severity of any of the PackageIssues.
     * 
     */
    private final String effectiveSeverity;
    /**
     * The set of affected locations and their fixes (if available) within the associated resource.
     * 
     */
    private final List<PackageIssueResponse> packageIssue;
    /**
     * The note provider assigned Severity of the vulnerability.
     * 
     */
    private final String severity;
    /**
     * The type of package; whether native or non native(ruby gems, node.js packages etc). This may be deprecated in the future because we can have multiple PackageIssues with different package types.
     * 
     */
    private final String type;

    @OutputCustomType.Constructor({"cvssScore","effectiveSeverity","packageIssue","severity","type"})
    private VulnerabilityDetailsResponse(
        Double cvssScore,
        String effectiveSeverity,
        List<PackageIssueResponse> packageIssue,
        String severity,
        String type) {
        this.cvssScore = Objects.requireNonNull(cvssScore);
        this.effectiveSeverity = Objects.requireNonNull(effectiveSeverity);
        this.packageIssue = Objects.requireNonNull(packageIssue);
        this.severity = Objects.requireNonNull(severity);
        this.type = Objects.requireNonNull(type);
    }

    /**
     * The CVSS score of this vulnerability. CVSS score is on a scale of 0-10 where 0 indicates low severity and 10 indicates high severity.
     * 
     */
    public Double getCvssScore() {
        return this.cvssScore;
    }
    /**
     * The distro assigned severity for this vulnerability when that is available and note provider assigned severity when distro has not yet assigned a severity for this vulnerability. When there are multiple package issues for this vulnerability, they can have different effective severities because some might come from the distro and some might come from installed language packs (e.g. Maven JARs or Go binaries). For this reason, it is advised to use the effective severity on the PackageIssue level, as this field may eventually be deprecated. In the case where multiple PackageIssues have different effective severities, the one set here will be the highest severity of any of the PackageIssues.
     * 
     */
    public String getEffectiveSeverity() {
        return this.effectiveSeverity;
    }
    /**
     * The set of affected locations and their fixes (if available) within the associated resource.
     * 
     */
    public List<PackageIssueResponse> getPackageIssue() {
        return this.packageIssue;
    }
    /**
     * The note provider assigned Severity of the vulnerability.
     * 
     */
    public String getSeverity() {
        return this.severity;
    }
    /**
     * The type of package; whether native or non native(ruby gems, node.js packages etc). This may be deprecated in the future because we can have multiple PackageIssues with different package types.
     * 
     */
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VulnerabilityDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double cvssScore;
        private String effectiveSeverity;
        private List<PackageIssueResponse> packageIssue;
        private String severity;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(VulnerabilityDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cvssScore = defaults.cvssScore;
    	      this.effectiveSeverity = defaults.effectiveSeverity;
    	      this.packageIssue = defaults.packageIssue;
    	      this.severity = defaults.severity;
    	      this.type = defaults.type;
        }

        public Builder setCvssScore(Double cvssScore) {
            this.cvssScore = Objects.requireNonNull(cvssScore);
            return this;
        }

        public Builder setEffectiveSeverity(String effectiveSeverity) {
            this.effectiveSeverity = Objects.requireNonNull(effectiveSeverity);
            return this;
        }

        public Builder setPackageIssue(List<PackageIssueResponse> packageIssue) {
            this.packageIssue = Objects.requireNonNull(packageIssue);
            return this;
        }

        public Builder setSeverity(String severity) {
            this.severity = Objects.requireNonNull(severity);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public VulnerabilityDetailsResponse build() {
            return new VulnerabilityDetailsResponse(cvssScore, effectiveSeverity, packageIssue, severity, type);
        }
    }
}
