// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquerydatatransfer_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.bigquerydatatransfer_v1.TransferConfigArgs;
import io.pulumi.googlenative.bigquerydatatransfer_v1.outputs.EmailPreferencesResponse;
import io.pulumi.googlenative.bigquerydatatransfer_v1.outputs.ScheduleOptionsResponse;
import io.pulumi.googlenative.bigquerydatatransfer_v1.outputs.UserInfoResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:bigquerydatatransfer/v1:TransferConfig")
public class TransferConfig extends io.pulumi.resources.CustomResource {
    @OutputExport(name="dataRefreshWindowDays", type=Integer.class, parameters={})
    private Output<Integer> dataRefreshWindowDays;

    public Output<Integer> getDataRefreshWindowDays() {
        return this.dataRefreshWindowDays;
    }
    @OutputExport(name="dataSourceId", type=String.class, parameters={})
    private Output<String> dataSourceId;

    public Output<String> getDataSourceId() {
        return this.dataSourceId;
    }
    @OutputExport(name="datasetRegion", type=String.class, parameters={})
    private Output<String> datasetRegion;

    public Output<String> getDatasetRegion() {
        return this.datasetRegion;
    }
    @OutputExport(name="destinationDatasetId", type=String.class, parameters={})
    private Output<String> destinationDatasetId;

    public Output<String> getDestinationDatasetId() {
        return this.destinationDatasetId;
    }
    @OutputExport(name="disabled", type=Boolean.class, parameters={})
    private Output<Boolean> disabled;

    public Output<Boolean> getDisabled() {
        return this.disabled;
    }
    @OutputExport(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName;
    }
    @OutputExport(name="emailPreferences", type=EmailPreferencesResponse.class, parameters={})
    private Output<EmailPreferencesResponse> emailPreferences;

    public Output<EmailPreferencesResponse> getEmailPreferences() {
        return this.emailPreferences;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="nextRunTime", type=String.class, parameters={})
    private Output<String> nextRunTime;

    public Output<String> getNextRunTime() {
        return this.nextRunTime;
    }
    @OutputExport(name="notificationPubsubTopic", type=String.class, parameters={})
    private Output<String> notificationPubsubTopic;

    public Output<String> getNotificationPubsubTopic() {
        return this.notificationPubsubTopic;
    }
    @OutputExport(name="ownerInfo", type=UserInfoResponse.class, parameters={})
    private Output<UserInfoResponse> ownerInfo;

    public Output<UserInfoResponse> getOwnerInfo() {
        return this.ownerInfo;
    }
    @OutputExport(name="params", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> params;

    public Output<Map<String,String>> getParams() {
        return this.params;
    }
    @OutputExport(name="schedule", type=String.class, parameters={})
    private Output<String> schedule;

    public Output<String> getSchedule() {
        return this.schedule;
    }
    @OutputExport(name="scheduleOptions", type=ScheduleOptionsResponse.class, parameters={})
    private Output<ScheduleOptionsResponse> scheduleOptions;

    public Output<ScheduleOptionsResponse> getScheduleOptions() {
        return this.scheduleOptions;
    }
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> getState() {
        return this.state;
    }
    @OutputExport(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    public Output<String> getUpdateTime() {
        return this.updateTime;
    }

    public TransferConfig(String name, @Nullable TransferConfigArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:bigquerydatatransfer/v1:TransferConfig", name, args == null ? TransferConfigArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private TransferConfig(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:bigquerydatatransfer/v1:TransferConfig", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static TransferConfig get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new TransferConfig(name, id, options);
    }
}
