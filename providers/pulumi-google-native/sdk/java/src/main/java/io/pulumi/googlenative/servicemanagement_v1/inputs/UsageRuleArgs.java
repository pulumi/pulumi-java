// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class UsageRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final UsageRuleArgs Empty = new UsageRuleArgs();

    @InputImport(name="allowUnregisteredCalls")
    private final @Nullable Input<Boolean> allowUnregisteredCalls;

    public Input<Boolean> getAllowUnregisteredCalls() {
        return this.allowUnregisteredCalls == null ? Input.empty() : this.allowUnregisteredCalls;
    }

    @InputImport(name="selector")
    private final @Nullable Input<String> selector;

    public Input<String> getSelector() {
        return this.selector == null ? Input.empty() : this.selector;
    }

    @InputImport(name="skipServiceControl")
    private final @Nullable Input<Boolean> skipServiceControl;

    public Input<Boolean> getSkipServiceControl() {
        return this.skipServiceControl == null ? Input.empty() : this.skipServiceControl;
    }

    public UsageRuleArgs(
        @Nullable Input<Boolean> allowUnregisteredCalls,
        @Nullable Input<String> selector,
        @Nullable Input<Boolean> skipServiceControl) {
        this.allowUnregisteredCalls = allowUnregisteredCalls;
        this.selector = selector;
        this.skipServiceControl = skipServiceControl;
    }

    private UsageRuleArgs() {
        this.allowUnregisteredCalls = Input.empty();
        this.selector = Input.empty();
        this.skipServiceControl = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UsageRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> allowUnregisteredCalls;
        private @Nullable Input<String> selector;
        private @Nullable Input<Boolean> skipServiceControl;

        public Builder() {
    	      // Empty
        }

        public Builder(UsageRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowUnregisteredCalls = defaults.allowUnregisteredCalls;
    	      this.selector = defaults.selector;
    	      this.skipServiceControl = defaults.skipServiceControl;
        }

        public Builder setAllowUnregisteredCalls(@Nullable Input<Boolean> allowUnregisteredCalls) {
            this.allowUnregisteredCalls = allowUnregisteredCalls;
            return this;
        }

        public Builder setAllowUnregisteredCalls(@Nullable Boolean allowUnregisteredCalls) {
            this.allowUnregisteredCalls = Input.ofNullable(allowUnregisteredCalls);
            return this;
        }

        public Builder setSelector(@Nullable Input<String> selector) {
            this.selector = selector;
            return this;
        }

        public Builder setSelector(@Nullable String selector) {
            this.selector = Input.ofNullable(selector);
            return this;
        }

        public Builder setSkipServiceControl(@Nullable Input<Boolean> skipServiceControl) {
            this.skipServiceControl = skipServiceControl;
            return this;
        }

        public Builder setSkipServiceControl(@Nullable Boolean skipServiceControl) {
            this.skipServiceControl = Input.ofNullable(skipServiceControl);
            return this;
        }

        public UsageRuleArgs build() {
            return new UsageRuleArgs(allowUnregisteredCalls, selector, skipServiceControl);
        }
    }
}
