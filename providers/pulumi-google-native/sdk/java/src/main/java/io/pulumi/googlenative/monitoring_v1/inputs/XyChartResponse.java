// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.monitoring_v1.inputs.AxisResponse;
import io.pulumi.googlenative.monitoring_v1.inputs.ChartOptionsResponse;
import io.pulumi.googlenative.monitoring_v1.inputs.DataSetResponse;
import io.pulumi.googlenative.monitoring_v1.inputs.ThresholdResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class XyChartResponse extends io.pulumi.resources.InvokeArgs {

    public static final XyChartResponse Empty = new XyChartResponse();

    @InputImport(name="chartOptions", required=true)
    private final ChartOptionsResponse chartOptions;

    public ChartOptionsResponse getChartOptions() {
        return this.chartOptions;
    }

    @InputImport(name="dataSets", required=true)
    private final List<DataSetResponse> dataSets;

    public List<DataSetResponse> getDataSets() {
        return this.dataSets;
    }

    @InputImport(name="thresholds", required=true)
    private final List<ThresholdResponse> thresholds;

    public List<ThresholdResponse> getThresholds() {
        return this.thresholds;
    }

    @InputImport(name="timeshiftDuration", required=true)
    private final String timeshiftDuration;

    public String getTimeshiftDuration() {
        return this.timeshiftDuration;
    }

    @InputImport(name="xAxis", required=true)
    private final AxisResponse xAxis;

    public AxisResponse getXAxis() {
        return this.xAxis;
    }

    @InputImport(name="y2Axis", required=true)
    private final AxisResponse y2Axis;

    public AxisResponse getY2Axis() {
        return this.y2Axis;
    }

    @InputImport(name="yAxis", required=true)
    private final AxisResponse yAxis;

    public AxisResponse getYAxis() {
        return this.yAxis;
    }

    public XyChartResponse(
        ChartOptionsResponse chartOptions,
        List<DataSetResponse> dataSets,
        List<ThresholdResponse> thresholds,
        String timeshiftDuration,
        AxisResponse xAxis,
        AxisResponse y2Axis,
        AxisResponse yAxis) {
        this.chartOptions = Objects.requireNonNull(chartOptions, "expected parameter 'chartOptions' to be non-null");
        this.dataSets = Objects.requireNonNull(dataSets, "expected parameter 'dataSets' to be non-null");
        this.thresholds = Objects.requireNonNull(thresholds, "expected parameter 'thresholds' to be non-null");
        this.timeshiftDuration = Objects.requireNonNull(timeshiftDuration, "expected parameter 'timeshiftDuration' to be non-null");
        this.xAxis = Objects.requireNonNull(xAxis, "expected parameter 'xAxis' to be non-null");
        this.y2Axis = Objects.requireNonNull(y2Axis, "expected parameter 'y2Axis' to be non-null");
        this.yAxis = Objects.requireNonNull(yAxis, "expected parameter 'yAxis' to be non-null");
    }

    private XyChartResponse() {
        this.chartOptions = null;
        this.dataSets = List.of();
        this.thresholds = List.of();
        this.timeshiftDuration = null;
        this.xAxis = null;
        this.y2Axis = null;
        this.yAxis = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(XyChartResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ChartOptionsResponse chartOptions;
        private List<DataSetResponse> dataSets;
        private List<ThresholdResponse> thresholds;
        private String timeshiftDuration;
        private AxisResponse xAxis;
        private AxisResponse y2Axis;
        private AxisResponse yAxis;

        public Builder() {
    	      // Empty
        }

        public Builder(XyChartResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chartOptions = defaults.chartOptions;
    	      this.dataSets = defaults.dataSets;
    	      this.thresholds = defaults.thresholds;
    	      this.timeshiftDuration = defaults.timeshiftDuration;
    	      this.xAxis = defaults.xAxis;
    	      this.y2Axis = defaults.y2Axis;
    	      this.yAxis = defaults.yAxis;
        }

        public Builder setChartOptions(ChartOptionsResponse chartOptions) {
            this.chartOptions = Objects.requireNonNull(chartOptions);
            return this;
        }

        public Builder setDataSets(List<DataSetResponse> dataSets) {
            this.dataSets = Objects.requireNonNull(dataSets);
            return this;
        }

        public Builder setThresholds(List<ThresholdResponse> thresholds) {
            this.thresholds = Objects.requireNonNull(thresholds);
            return this;
        }

        public Builder setTimeshiftDuration(String timeshiftDuration) {
            this.timeshiftDuration = Objects.requireNonNull(timeshiftDuration);
            return this;
        }

        public Builder setXAxis(AxisResponse xAxis) {
            this.xAxis = Objects.requireNonNull(xAxis);
            return this;
        }

        public Builder setY2Axis(AxisResponse y2Axis) {
            this.y2Axis = Objects.requireNonNull(y2Axis);
            return this;
        }

        public Builder setYAxis(AxisResponse yAxis) {
            this.yAxis = Objects.requireNonNull(yAxis);
            return this;
        }

        public XyChartResponse build() {
            return new XyChartResponse(chartOptions, dataSets, thresholds, timeshiftDuration, xAxis, y2Axis, yAxis);
        }
    }
}
