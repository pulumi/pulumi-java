// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * A GroupPlacementPolicy specifies resource placement configuration. It specifies the failure bucket separation as well as network locality
 * 
 */
public final class ResourcePolicyGroupPlacementPolicyResponse extends io.pulumi.resources.InvokeArgs {

    public static final ResourcePolicyGroupPlacementPolicyResponse Empty = new ResourcePolicyGroupPlacementPolicyResponse();

    /**
     * The number of availability domains instances will be spread across. If two instances are in different availability domain, they will not be put in the same low latency network
     * 
     */
    @InputImport(name="availabilityDomainCount", required=true)
      private final Integer availabilityDomainCount;

    public Integer getAvailabilityDomainCount() {
        return this.availabilityDomainCount;
    }

    /**
     * Specifies network collocation
     * 
     */
    @InputImport(name="collocation", required=true)
      private final String collocation;

    public String getCollocation() {
        return this.collocation;
    }

    /**
     * Number of vms in this placement group
     * 
     */
    @InputImport(name="vmCount", required=true)
      private final Integer vmCount;

    public Integer getVmCount() {
        return this.vmCount;
    }

    public ResourcePolicyGroupPlacementPolicyResponse(
        Integer availabilityDomainCount,
        String collocation,
        Integer vmCount) {
        this.availabilityDomainCount = Objects.requireNonNull(availabilityDomainCount, "expected parameter 'availabilityDomainCount' to be non-null");
        this.collocation = Objects.requireNonNull(collocation, "expected parameter 'collocation' to be non-null");
        this.vmCount = Objects.requireNonNull(vmCount, "expected parameter 'vmCount' to be non-null");
    }

    private ResourcePolicyGroupPlacementPolicyResponse() {
        this.availabilityDomainCount = null;
        this.collocation = null;
        this.vmCount = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyGroupPlacementPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer availabilityDomainCount;
        private String collocation;
        private Integer vmCount;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicyGroupPlacementPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomainCount = defaults.availabilityDomainCount;
    	      this.collocation = defaults.collocation;
    	      this.vmCount = defaults.vmCount;
        }

        public Builder availabilityDomainCount(Integer availabilityDomainCount) {
            this.availabilityDomainCount = Objects.requireNonNull(availabilityDomainCount);
            return this;
        }

        public Builder collocation(String collocation) {
            this.collocation = Objects.requireNonNull(collocation);
            return this;
        }

        public Builder vmCount(Integer vmCount) {
            this.vmCount = Objects.requireNonNull(vmCount);
            return this;
        }
        public ResourcePolicyGroupPlacementPolicyResponse build() {
            return new ResourcePolicyGroupPlacementPolicyResponse(availabilityDomainCount, collocation, vmCount);
        }
    }
}
