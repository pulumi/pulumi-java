// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.container_v1beta1.outputs.AddonsConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.AuthenticatorGroupsConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.AutopilotResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.BinaryAuthorizationResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.ClusterAutoscalingResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.ClusterTelemetryResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.ConfidentialNodesResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.DatabaseEncryptionResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.IPAllocationPolicyResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.IdentityServiceConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.LegacyAbacResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.LoggingConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.MaintenancePolicyResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.MasterAuthResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.MasterAuthorizedNetworksConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.MasterResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.MaxPodsConstraintResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.MeshCertificatesResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.MonitoringConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.NetworkConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.NetworkPolicyResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.NodePoolDefaultsResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.NodePoolResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.NotificationConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.PodSecurityPolicyConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.PrivateClusterConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.ReleaseChannelResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.ResourceUsageExportConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.ShieldedNodesResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.StatusConditionResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.TpuConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.VerticalPodAutoscalingResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.WorkloadCertificatesResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.WorkloadIdentityConfigResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetClusterResult {
    private final AddonsConfigResponse addonsConfig;
    private final AuthenticatorGroupsConfigResponse authenticatorGroupsConfig;
    private final AutopilotResponse autopilot;
    private final ClusterAutoscalingResponse autoscaling;
    private final BinaryAuthorizationResponse binaryAuthorization;
    private final String clusterIpv4Cidr;
    private final ClusterTelemetryResponse clusterTelemetry;
    private final List<StatusConditionResponse> conditions;
    private final ConfidentialNodesResponse confidentialNodes;
    private final String createTime;
    private final String currentMasterVersion;
    private final String currentNodeVersion;
    private final DatabaseEncryptionResponse databaseEncryption;
    private final MaxPodsConstraintResponse defaultMaxPodsConstraint;
    private final String description;
    private final Boolean enableKubernetesAlpha;
    private final String endpoint;
    private final String expireTime;
    private final IdentityServiceConfigResponse identityServiceConfig;
    private final String initialClusterVersion;
    private final IPAllocationPolicyResponse ipAllocationPolicy;
    private final String labelFingerprint;
    private final LegacyAbacResponse legacyAbac;
    private final String location;
    private final List<String> locations;
    private final LoggingConfigResponse loggingConfig;
    private final String loggingService;
    private final MaintenancePolicyResponse maintenancePolicy;
    private final MasterResponse master;
    private final MasterAuthResponse masterAuth;
    private final MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig;
    private final MeshCertificatesResponse meshCertificates;
    private final MonitoringConfigResponse monitoringConfig;
    private final String monitoringService;
    private final String name;
    private final String network;
    private final NetworkConfigResponse networkConfig;
    private final NetworkPolicyResponse networkPolicy;
    private final Integer nodeIpv4CidrSize;
    private final NodePoolDefaultsResponse nodePoolDefaults;
    private final List<NodePoolResponse> nodePools;
    private final NotificationConfigResponse notificationConfig;
    private final PodSecurityPolicyConfigResponse podSecurityPolicyConfig;
    private final PrivateClusterConfigResponse privateClusterConfig;
    private final ReleaseChannelResponse releaseChannel;
    private final Map<String,String> resourceLabels;
    private final ResourceUsageExportConfigResponse resourceUsageExportConfig;
    private final String selfLink;
    private final String servicesIpv4Cidr;
    private final ShieldedNodesResponse shieldedNodes;
    private final String status;
    private final String subnetwork;
    private final TpuConfigResponse tpuConfig;
    private final String tpuIpv4CidrBlock;
    private final VerticalPodAutoscalingResponse verticalPodAutoscaling;
    private final WorkloadCertificatesResponse workloadCertificates;
    private final WorkloadIdentityConfigResponse workloadIdentityConfig;

    @OutputCustomType.Constructor({"addonsConfig","authenticatorGroupsConfig","autopilot","autoscaling","binaryAuthorization","clusterIpv4Cidr","clusterTelemetry","conditions","confidentialNodes","createTime","currentMasterVersion","currentNodeVersion","databaseEncryption","defaultMaxPodsConstraint","description","enableKubernetesAlpha","endpoint","expireTime","identityServiceConfig","initialClusterVersion","ipAllocationPolicy","labelFingerprint","legacyAbac","location","locations","loggingConfig","loggingService","maintenancePolicy","master","masterAuth","masterAuthorizedNetworksConfig","meshCertificates","monitoringConfig","monitoringService","name","network","networkConfig","networkPolicy","nodeIpv4CidrSize","nodePoolDefaults","nodePools","notificationConfig","podSecurityPolicyConfig","privateClusterConfig","releaseChannel","resourceLabels","resourceUsageExportConfig","selfLink","servicesIpv4Cidr","shieldedNodes","status","subnetwork","tpuConfig","tpuIpv4CidrBlock","verticalPodAutoscaling","workloadCertificates","workloadIdentityConfig"})
    private GetClusterResult(
        AddonsConfigResponse addonsConfig,
        AuthenticatorGroupsConfigResponse authenticatorGroupsConfig,
        AutopilotResponse autopilot,
        ClusterAutoscalingResponse autoscaling,
        BinaryAuthorizationResponse binaryAuthorization,
        String clusterIpv4Cidr,
        ClusterTelemetryResponse clusterTelemetry,
        List<StatusConditionResponse> conditions,
        ConfidentialNodesResponse confidentialNodes,
        String createTime,
        String currentMasterVersion,
        String currentNodeVersion,
        DatabaseEncryptionResponse databaseEncryption,
        MaxPodsConstraintResponse defaultMaxPodsConstraint,
        String description,
        Boolean enableKubernetesAlpha,
        String endpoint,
        String expireTime,
        IdentityServiceConfigResponse identityServiceConfig,
        String initialClusterVersion,
        IPAllocationPolicyResponse ipAllocationPolicy,
        String labelFingerprint,
        LegacyAbacResponse legacyAbac,
        String location,
        List<String> locations,
        LoggingConfigResponse loggingConfig,
        String loggingService,
        MaintenancePolicyResponse maintenancePolicy,
        MasterResponse master,
        MasterAuthResponse masterAuth,
        MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig,
        MeshCertificatesResponse meshCertificates,
        MonitoringConfigResponse monitoringConfig,
        String monitoringService,
        String name,
        String network,
        NetworkConfigResponse networkConfig,
        NetworkPolicyResponse networkPolicy,
        Integer nodeIpv4CidrSize,
        NodePoolDefaultsResponse nodePoolDefaults,
        List<NodePoolResponse> nodePools,
        NotificationConfigResponse notificationConfig,
        PodSecurityPolicyConfigResponse podSecurityPolicyConfig,
        PrivateClusterConfigResponse privateClusterConfig,
        ReleaseChannelResponse releaseChannel,
        Map<String,String> resourceLabels,
        ResourceUsageExportConfigResponse resourceUsageExportConfig,
        String selfLink,
        String servicesIpv4Cidr,
        ShieldedNodesResponse shieldedNodes,
        String status,
        String subnetwork,
        TpuConfigResponse tpuConfig,
        String tpuIpv4CidrBlock,
        VerticalPodAutoscalingResponse verticalPodAutoscaling,
        WorkloadCertificatesResponse workloadCertificates,
        WorkloadIdentityConfigResponse workloadIdentityConfig) {
        this.addonsConfig = Objects.requireNonNull(addonsConfig);
        this.authenticatorGroupsConfig = Objects.requireNonNull(authenticatorGroupsConfig);
        this.autopilot = Objects.requireNonNull(autopilot);
        this.autoscaling = Objects.requireNonNull(autoscaling);
        this.binaryAuthorization = Objects.requireNonNull(binaryAuthorization);
        this.clusterIpv4Cidr = Objects.requireNonNull(clusterIpv4Cidr);
        this.clusterTelemetry = Objects.requireNonNull(clusterTelemetry);
        this.conditions = Objects.requireNonNull(conditions);
        this.confidentialNodes = Objects.requireNonNull(confidentialNodes);
        this.createTime = Objects.requireNonNull(createTime);
        this.currentMasterVersion = Objects.requireNonNull(currentMasterVersion);
        this.currentNodeVersion = Objects.requireNonNull(currentNodeVersion);
        this.databaseEncryption = Objects.requireNonNull(databaseEncryption);
        this.defaultMaxPodsConstraint = Objects.requireNonNull(defaultMaxPodsConstraint);
        this.description = Objects.requireNonNull(description);
        this.enableKubernetesAlpha = Objects.requireNonNull(enableKubernetesAlpha);
        this.endpoint = Objects.requireNonNull(endpoint);
        this.expireTime = Objects.requireNonNull(expireTime);
        this.identityServiceConfig = Objects.requireNonNull(identityServiceConfig);
        this.initialClusterVersion = Objects.requireNonNull(initialClusterVersion);
        this.ipAllocationPolicy = Objects.requireNonNull(ipAllocationPolicy);
        this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
        this.legacyAbac = Objects.requireNonNull(legacyAbac);
        this.location = Objects.requireNonNull(location);
        this.locations = Objects.requireNonNull(locations);
        this.loggingConfig = Objects.requireNonNull(loggingConfig);
        this.loggingService = Objects.requireNonNull(loggingService);
        this.maintenancePolicy = Objects.requireNonNull(maintenancePolicy);
        this.master = Objects.requireNonNull(master);
        this.masterAuth = Objects.requireNonNull(masterAuth);
        this.masterAuthorizedNetworksConfig = Objects.requireNonNull(masterAuthorizedNetworksConfig);
        this.meshCertificates = Objects.requireNonNull(meshCertificates);
        this.monitoringConfig = Objects.requireNonNull(monitoringConfig);
        this.monitoringService = Objects.requireNonNull(monitoringService);
        this.name = Objects.requireNonNull(name);
        this.network = Objects.requireNonNull(network);
        this.networkConfig = Objects.requireNonNull(networkConfig);
        this.networkPolicy = Objects.requireNonNull(networkPolicy);
        this.nodeIpv4CidrSize = Objects.requireNonNull(nodeIpv4CidrSize);
        this.nodePoolDefaults = Objects.requireNonNull(nodePoolDefaults);
        this.nodePools = Objects.requireNonNull(nodePools);
        this.notificationConfig = Objects.requireNonNull(notificationConfig);
        this.podSecurityPolicyConfig = Objects.requireNonNull(podSecurityPolicyConfig);
        this.privateClusterConfig = Objects.requireNonNull(privateClusterConfig);
        this.releaseChannel = Objects.requireNonNull(releaseChannel);
        this.resourceLabels = Objects.requireNonNull(resourceLabels);
        this.resourceUsageExportConfig = Objects.requireNonNull(resourceUsageExportConfig);
        this.selfLink = Objects.requireNonNull(selfLink);
        this.servicesIpv4Cidr = Objects.requireNonNull(servicesIpv4Cidr);
        this.shieldedNodes = Objects.requireNonNull(shieldedNodes);
        this.status = Objects.requireNonNull(status);
        this.subnetwork = Objects.requireNonNull(subnetwork);
        this.tpuConfig = Objects.requireNonNull(tpuConfig);
        this.tpuIpv4CidrBlock = Objects.requireNonNull(tpuIpv4CidrBlock);
        this.verticalPodAutoscaling = Objects.requireNonNull(verticalPodAutoscaling);
        this.workloadCertificates = Objects.requireNonNull(workloadCertificates);
        this.workloadIdentityConfig = Objects.requireNonNull(workloadIdentityConfig);
    }

    public AddonsConfigResponse getAddonsConfig() {
        return this.addonsConfig;
    }
    public AuthenticatorGroupsConfigResponse getAuthenticatorGroupsConfig() {
        return this.authenticatorGroupsConfig;
    }
    public AutopilotResponse getAutopilot() {
        return this.autopilot;
    }
    public ClusterAutoscalingResponse getAutoscaling() {
        return this.autoscaling;
    }
    public BinaryAuthorizationResponse getBinaryAuthorization() {
        return this.binaryAuthorization;
    }
    public String getClusterIpv4Cidr() {
        return this.clusterIpv4Cidr;
    }
    public ClusterTelemetryResponse getClusterTelemetry() {
        return this.clusterTelemetry;
    }
    public List<StatusConditionResponse> getConditions() {
        return this.conditions;
    }
    public ConfidentialNodesResponse getConfidentialNodes() {
        return this.confidentialNodes;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public String getCurrentMasterVersion() {
        return this.currentMasterVersion;
    }
    public String getCurrentNodeVersion() {
        return this.currentNodeVersion;
    }
    public DatabaseEncryptionResponse getDatabaseEncryption() {
        return this.databaseEncryption;
    }
    public MaxPodsConstraintResponse getDefaultMaxPodsConstraint() {
        return this.defaultMaxPodsConstraint;
    }
    public String getDescription() {
        return this.description;
    }
    public Boolean getEnableKubernetesAlpha() {
        return this.enableKubernetesAlpha;
    }
    public String getEndpoint() {
        return this.endpoint;
    }
    public String getExpireTime() {
        return this.expireTime;
    }
    public IdentityServiceConfigResponse getIdentityServiceConfig() {
        return this.identityServiceConfig;
    }
    public String getInitialClusterVersion() {
        return this.initialClusterVersion;
    }
    public IPAllocationPolicyResponse getIpAllocationPolicy() {
        return this.ipAllocationPolicy;
    }
    public String getLabelFingerprint() {
        return this.labelFingerprint;
    }
    public LegacyAbacResponse getLegacyAbac() {
        return this.legacyAbac;
    }
    public String getLocation() {
        return this.location;
    }
    public List<String> getLocations() {
        return this.locations;
    }
    public LoggingConfigResponse getLoggingConfig() {
        return this.loggingConfig;
    }
    public String getLoggingService() {
        return this.loggingService;
    }
    public MaintenancePolicyResponse getMaintenancePolicy() {
        return this.maintenancePolicy;
    }
    public MasterResponse getMaster() {
        return this.master;
    }
    public MasterAuthResponse getMasterAuth() {
        return this.masterAuth;
    }
    public MasterAuthorizedNetworksConfigResponse getMasterAuthorizedNetworksConfig() {
        return this.masterAuthorizedNetworksConfig;
    }
    public MeshCertificatesResponse getMeshCertificates() {
        return this.meshCertificates;
    }
    public MonitoringConfigResponse getMonitoringConfig() {
        return this.monitoringConfig;
    }
    public String getMonitoringService() {
        return this.monitoringService;
    }
    public String getName() {
        return this.name;
    }
    public String getNetwork() {
        return this.network;
    }
    public NetworkConfigResponse getNetworkConfig() {
        return this.networkConfig;
    }
    public NetworkPolicyResponse getNetworkPolicy() {
        return this.networkPolicy;
    }
    public Integer getNodeIpv4CidrSize() {
        return this.nodeIpv4CidrSize;
    }
    public NodePoolDefaultsResponse getNodePoolDefaults() {
        return this.nodePoolDefaults;
    }
    public List<NodePoolResponse> getNodePools() {
        return this.nodePools;
    }
    public NotificationConfigResponse getNotificationConfig() {
        return this.notificationConfig;
    }
    public PodSecurityPolicyConfigResponse getPodSecurityPolicyConfig() {
        return this.podSecurityPolicyConfig;
    }
    public PrivateClusterConfigResponse getPrivateClusterConfig() {
        return this.privateClusterConfig;
    }
    public ReleaseChannelResponse getReleaseChannel() {
        return this.releaseChannel;
    }
    public Map<String,String> getResourceLabels() {
        return this.resourceLabels;
    }
    public ResourceUsageExportConfigResponse getResourceUsageExportConfig() {
        return this.resourceUsageExportConfig;
    }
    public String getSelfLink() {
        return this.selfLink;
    }
    public String getServicesIpv4Cidr() {
        return this.servicesIpv4Cidr;
    }
    public ShieldedNodesResponse getShieldedNodes() {
        return this.shieldedNodes;
    }
    public String getStatus() {
        return this.status;
    }
    public String getSubnetwork() {
        return this.subnetwork;
    }
    public TpuConfigResponse getTpuConfig() {
        return this.tpuConfig;
    }
    public String getTpuIpv4CidrBlock() {
        return this.tpuIpv4CidrBlock;
    }
    public VerticalPodAutoscalingResponse getVerticalPodAutoscaling() {
        return this.verticalPodAutoscaling;
    }
    public WorkloadCertificatesResponse getWorkloadCertificates() {
        return this.workloadCertificates;
    }
    public WorkloadIdentityConfigResponse getWorkloadIdentityConfig() {
        return this.workloadIdentityConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AddonsConfigResponse addonsConfig;
        private AuthenticatorGroupsConfigResponse authenticatorGroupsConfig;
        private AutopilotResponse autopilot;
        private ClusterAutoscalingResponse autoscaling;
        private BinaryAuthorizationResponse binaryAuthorization;
        private String clusterIpv4Cidr;
        private ClusterTelemetryResponse clusterTelemetry;
        private List<StatusConditionResponse> conditions;
        private ConfidentialNodesResponse confidentialNodes;
        private String createTime;
        private String currentMasterVersion;
        private String currentNodeVersion;
        private DatabaseEncryptionResponse databaseEncryption;
        private MaxPodsConstraintResponse defaultMaxPodsConstraint;
        private String description;
        private Boolean enableKubernetesAlpha;
        private String endpoint;
        private String expireTime;
        private IdentityServiceConfigResponse identityServiceConfig;
        private String initialClusterVersion;
        private IPAllocationPolicyResponse ipAllocationPolicy;
        private String labelFingerprint;
        private LegacyAbacResponse legacyAbac;
        private String location;
        private List<String> locations;
        private LoggingConfigResponse loggingConfig;
        private String loggingService;
        private MaintenancePolicyResponse maintenancePolicy;
        private MasterResponse master;
        private MasterAuthResponse masterAuth;
        private MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig;
        private MeshCertificatesResponse meshCertificates;
        private MonitoringConfigResponse monitoringConfig;
        private String monitoringService;
        private String name;
        private String network;
        private NetworkConfigResponse networkConfig;
        private NetworkPolicyResponse networkPolicy;
        private Integer nodeIpv4CidrSize;
        private NodePoolDefaultsResponse nodePoolDefaults;
        private List<NodePoolResponse> nodePools;
        private NotificationConfigResponse notificationConfig;
        private PodSecurityPolicyConfigResponse podSecurityPolicyConfig;
        private PrivateClusterConfigResponse privateClusterConfig;
        private ReleaseChannelResponse releaseChannel;
        private Map<String,String> resourceLabels;
        private ResourceUsageExportConfigResponse resourceUsageExportConfig;
        private String selfLink;
        private String servicesIpv4Cidr;
        private ShieldedNodesResponse shieldedNodes;
        private String status;
        private String subnetwork;
        private TpuConfigResponse tpuConfig;
        private String tpuIpv4CidrBlock;
        private VerticalPodAutoscalingResponse verticalPodAutoscaling;
        private WorkloadCertificatesResponse workloadCertificates;
        private WorkloadIdentityConfigResponse workloadIdentityConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonsConfig = defaults.addonsConfig;
    	      this.authenticatorGroupsConfig = defaults.authenticatorGroupsConfig;
    	      this.autopilot = defaults.autopilot;
    	      this.autoscaling = defaults.autoscaling;
    	      this.binaryAuthorization = defaults.binaryAuthorization;
    	      this.clusterIpv4Cidr = defaults.clusterIpv4Cidr;
    	      this.clusterTelemetry = defaults.clusterTelemetry;
    	      this.conditions = defaults.conditions;
    	      this.confidentialNodes = defaults.confidentialNodes;
    	      this.createTime = defaults.createTime;
    	      this.currentMasterVersion = defaults.currentMasterVersion;
    	      this.currentNodeVersion = defaults.currentNodeVersion;
    	      this.databaseEncryption = defaults.databaseEncryption;
    	      this.defaultMaxPodsConstraint = defaults.defaultMaxPodsConstraint;
    	      this.description = defaults.description;
    	      this.enableKubernetesAlpha = defaults.enableKubernetesAlpha;
    	      this.endpoint = defaults.endpoint;
    	      this.expireTime = defaults.expireTime;
    	      this.identityServiceConfig = defaults.identityServiceConfig;
    	      this.initialClusterVersion = defaults.initialClusterVersion;
    	      this.ipAllocationPolicy = defaults.ipAllocationPolicy;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.legacyAbac = defaults.legacyAbac;
    	      this.location = defaults.location;
    	      this.locations = defaults.locations;
    	      this.loggingConfig = defaults.loggingConfig;
    	      this.loggingService = defaults.loggingService;
    	      this.maintenancePolicy = defaults.maintenancePolicy;
    	      this.master = defaults.master;
    	      this.masterAuth = defaults.masterAuth;
    	      this.masterAuthorizedNetworksConfig = defaults.masterAuthorizedNetworksConfig;
    	      this.meshCertificates = defaults.meshCertificates;
    	      this.monitoringConfig = defaults.monitoringConfig;
    	      this.monitoringService = defaults.monitoringService;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkConfig = defaults.networkConfig;
    	      this.networkPolicy = defaults.networkPolicy;
    	      this.nodeIpv4CidrSize = defaults.nodeIpv4CidrSize;
    	      this.nodePoolDefaults = defaults.nodePoolDefaults;
    	      this.nodePools = defaults.nodePools;
    	      this.notificationConfig = defaults.notificationConfig;
    	      this.podSecurityPolicyConfig = defaults.podSecurityPolicyConfig;
    	      this.privateClusterConfig = defaults.privateClusterConfig;
    	      this.releaseChannel = defaults.releaseChannel;
    	      this.resourceLabels = defaults.resourceLabels;
    	      this.resourceUsageExportConfig = defaults.resourceUsageExportConfig;
    	      this.selfLink = defaults.selfLink;
    	      this.servicesIpv4Cidr = defaults.servicesIpv4Cidr;
    	      this.shieldedNodes = defaults.shieldedNodes;
    	      this.status = defaults.status;
    	      this.subnetwork = defaults.subnetwork;
    	      this.tpuConfig = defaults.tpuConfig;
    	      this.tpuIpv4CidrBlock = defaults.tpuIpv4CidrBlock;
    	      this.verticalPodAutoscaling = defaults.verticalPodAutoscaling;
    	      this.workloadCertificates = defaults.workloadCertificates;
    	      this.workloadIdentityConfig = defaults.workloadIdentityConfig;
        }

        public Builder setAddonsConfig(AddonsConfigResponse addonsConfig) {
            this.addonsConfig = Objects.requireNonNull(addonsConfig);
            return this;
        }

        public Builder setAuthenticatorGroupsConfig(AuthenticatorGroupsConfigResponse authenticatorGroupsConfig) {
            this.authenticatorGroupsConfig = Objects.requireNonNull(authenticatorGroupsConfig);
            return this;
        }

        public Builder setAutopilot(AutopilotResponse autopilot) {
            this.autopilot = Objects.requireNonNull(autopilot);
            return this;
        }

        public Builder setAutoscaling(ClusterAutoscalingResponse autoscaling) {
            this.autoscaling = Objects.requireNonNull(autoscaling);
            return this;
        }

        public Builder setBinaryAuthorization(BinaryAuthorizationResponse binaryAuthorization) {
            this.binaryAuthorization = Objects.requireNonNull(binaryAuthorization);
            return this;
        }

        public Builder setClusterIpv4Cidr(String clusterIpv4Cidr) {
            this.clusterIpv4Cidr = Objects.requireNonNull(clusterIpv4Cidr);
            return this;
        }

        public Builder setClusterTelemetry(ClusterTelemetryResponse clusterTelemetry) {
            this.clusterTelemetry = Objects.requireNonNull(clusterTelemetry);
            return this;
        }

        public Builder setConditions(List<StatusConditionResponse> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }

        public Builder setConfidentialNodes(ConfidentialNodesResponse confidentialNodes) {
            this.confidentialNodes = Objects.requireNonNull(confidentialNodes);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setCurrentMasterVersion(String currentMasterVersion) {
            this.currentMasterVersion = Objects.requireNonNull(currentMasterVersion);
            return this;
        }

        public Builder setCurrentNodeVersion(String currentNodeVersion) {
            this.currentNodeVersion = Objects.requireNonNull(currentNodeVersion);
            return this;
        }

        public Builder setDatabaseEncryption(DatabaseEncryptionResponse databaseEncryption) {
            this.databaseEncryption = Objects.requireNonNull(databaseEncryption);
            return this;
        }

        public Builder setDefaultMaxPodsConstraint(MaxPodsConstraintResponse defaultMaxPodsConstraint) {
            this.defaultMaxPodsConstraint = Objects.requireNonNull(defaultMaxPodsConstraint);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setEnableKubernetesAlpha(Boolean enableKubernetesAlpha) {
            this.enableKubernetesAlpha = Objects.requireNonNull(enableKubernetesAlpha);
            return this;
        }

        public Builder setEndpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }

        public Builder setExpireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }

        public Builder setIdentityServiceConfig(IdentityServiceConfigResponse identityServiceConfig) {
            this.identityServiceConfig = Objects.requireNonNull(identityServiceConfig);
            return this;
        }

        public Builder setInitialClusterVersion(String initialClusterVersion) {
            this.initialClusterVersion = Objects.requireNonNull(initialClusterVersion);
            return this;
        }

        public Builder setIpAllocationPolicy(IPAllocationPolicyResponse ipAllocationPolicy) {
            this.ipAllocationPolicy = Objects.requireNonNull(ipAllocationPolicy);
            return this;
        }

        public Builder setLabelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }

        public Builder setLegacyAbac(LegacyAbacResponse legacyAbac) {
            this.legacyAbac = Objects.requireNonNull(legacyAbac);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setLocations(List<String> locations) {
            this.locations = Objects.requireNonNull(locations);
            return this;
        }

        public Builder setLoggingConfig(LoggingConfigResponse loggingConfig) {
            this.loggingConfig = Objects.requireNonNull(loggingConfig);
            return this;
        }

        public Builder setLoggingService(String loggingService) {
            this.loggingService = Objects.requireNonNull(loggingService);
            return this;
        }

        public Builder setMaintenancePolicy(MaintenancePolicyResponse maintenancePolicy) {
            this.maintenancePolicy = Objects.requireNonNull(maintenancePolicy);
            return this;
        }

        public Builder setMaster(MasterResponse master) {
            this.master = Objects.requireNonNull(master);
            return this;
        }

        public Builder setMasterAuth(MasterAuthResponse masterAuth) {
            this.masterAuth = Objects.requireNonNull(masterAuth);
            return this;
        }

        public Builder setMasterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig) {
            this.masterAuthorizedNetworksConfig = Objects.requireNonNull(masterAuthorizedNetworksConfig);
            return this;
        }

        public Builder setMeshCertificates(MeshCertificatesResponse meshCertificates) {
            this.meshCertificates = Objects.requireNonNull(meshCertificates);
            return this;
        }

        public Builder setMonitoringConfig(MonitoringConfigResponse monitoringConfig) {
            this.monitoringConfig = Objects.requireNonNull(monitoringConfig);
            return this;
        }

        public Builder setMonitoringService(String monitoringService) {
            this.monitoringService = Objects.requireNonNull(monitoringService);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetwork(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setNetworkConfig(NetworkConfigResponse networkConfig) {
            this.networkConfig = Objects.requireNonNull(networkConfig);
            return this;
        }

        public Builder setNetworkPolicy(NetworkPolicyResponse networkPolicy) {
            this.networkPolicy = Objects.requireNonNull(networkPolicy);
            return this;
        }

        public Builder setNodeIpv4CidrSize(Integer nodeIpv4CidrSize) {
            this.nodeIpv4CidrSize = Objects.requireNonNull(nodeIpv4CidrSize);
            return this;
        }

        public Builder setNodePoolDefaults(NodePoolDefaultsResponse nodePoolDefaults) {
            this.nodePoolDefaults = Objects.requireNonNull(nodePoolDefaults);
            return this;
        }

        public Builder setNodePools(List<NodePoolResponse> nodePools) {
            this.nodePools = Objects.requireNonNull(nodePools);
            return this;
        }

        public Builder setNotificationConfig(NotificationConfigResponse notificationConfig) {
            this.notificationConfig = Objects.requireNonNull(notificationConfig);
            return this;
        }

        public Builder setPodSecurityPolicyConfig(PodSecurityPolicyConfigResponse podSecurityPolicyConfig) {
            this.podSecurityPolicyConfig = Objects.requireNonNull(podSecurityPolicyConfig);
            return this;
        }

        public Builder setPrivateClusterConfig(PrivateClusterConfigResponse privateClusterConfig) {
            this.privateClusterConfig = Objects.requireNonNull(privateClusterConfig);
            return this;
        }

        public Builder setReleaseChannel(ReleaseChannelResponse releaseChannel) {
            this.releaseChannel = Objects.requireNonNull(releaseChannel);
            return this;
        }

        public Builder setResourceLabels(Map<String,String> resourceLabels) {
            this.resourceLabels = Objects.requireNonNull(resourceLabels);
            return this;
        }

        public Builder setResourceUsageExportConfig(ResourceUsageExportConfigResponse resourceUsageExportConfig) {
            this.resourceUsageExportConfig = Objects.requireNonNull(resourceUsageExportConfig);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setServicesIpv4Cidr(String servicesIpv4Cidr) {
            this.servicesIpv4Cidr = Objects.requireNonNull(servicesIpv4Cidr);
            return this;
        }

        public Builder setShieldedNodes(ShieldedNodesResponse shieldedNodes) {
            this.shieldedNodes = Objects.requireNonNull(shieldedNodes);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setSubnetwork(String subnetwork) {
            this.subnetwork = Objects.requireNonNull(subnetwork);
            return this;
        }

        public Builder setTpuConfig(TpuConfigResponse tpuConfig) {
            this.tpuConfig = Objects.requireNonNull(tpuConfig);
            return this;
        }

        public Builder setTpuIpv4CidrBlock(String tpuIpv4CidrBlock) {
            this.tpuIpv4CidrBlock = Objects.requireNonNull(tpuIpv4CidrBlock);
            return this;
        }

        public Builder setVerticalPodAutoscaling(VerticalPodAutoscalingResponse verticalPodAutoscaling) {
            this.verticalPodAutoscaling = Objects.requireNonNull(verticalPodAutoscaling);
            return this;
        }

        public Builder setWorkloadCertificates(WorkloadCertificatesResponse workloadCertificates) {
            this.workloadCertificates = Objects.requireNonNull(workloadCertificates);
            return this;
        }

        public Builder setWorkloadIdentityConfig(WorkloadIdentityConfigResponse workloadIdentityConfig) {
            this.workloadIdentityConfig = Objects.requireNonNull(workloadIdentityConfig);
            return this;
        }

        public GetClusterResult build() {
            return new GetClusterResult(addonsConfig, authenticatorGroupsConfig, autopilot, autoscaling, binaryAuthorization, clusterIpv4Cidr, clusterTelemetry, conditions, confidentialNodes, createTime, currentMasterVersion, currentNodeVersion, databaseEncryption, defaultMaxPodsConstraint, description, enableKubernetesAlpha, endpoint, expireTime, identityServiceConfig, initialClusterVersion, ipAllocationPolicy, labelFingerprint, legacyAbac, location, locations, loggingConfig, loggingService, maintenancePolicy, master, masterAuth, masterAuthorizedNetworksConfig, meshCertificates, monitoringConfig, monitoringService, name, network, networkConfig, networkPolicy, nodeIpv4CidrSize, nodePoolDefaults, nodePools, notificationConfig, podSecurityPolicyConfig, privateClusterConfig, releaseChannel, resourceLabels, resourceUsageExportConfig, selfLink, servicesIpv4Cidr, shieldedNodes, status, subnetwork, tpuConfig, tpuIpv4CidrBlock, verticalPodAutoscaling, workloadCertificates, workloadIdentityConfig);
        }
    }
}
