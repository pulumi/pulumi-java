// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class CustomerEncryptionKeyResponse extends io.pulumi.resources.InvokeArgs {

    public static final CustomerEncryptionKeyResponse Empty = new CustomerEncryptionKeyResponse();

    @InputImport(name="kmsKeyName", required=true)
    private final String kmsKeyName;

    public String getKmsKeyName() {
        return this.kmsKeyName;
    }

    @InputImport(name="kmsKeyServiceAccount", required=true)
    private final String kmsKeyServiceAccount;

    public String getKmsKeyServiceAccount() {
        return this.kmsKeyServiceAccount;
    }

    @InputImport(name="rawKey", required=true)
    private final String rawKey;

    public String getRawKey() {
        return this.rawKey;
    }

    @InputImport(name="rsaEncryptedKey", required=true)
    private final String rsaEncryptedKey;

    public String getRsaEncryptedKey() {
        return this.rsaEncryptedKey;
    }

    @InputImport(name="sha256", required=true)
    private final String sha256;

    public String getSha256() {
        return this.sha256;
    }

    public CustomerEncryptionKeyResponse(
        String kmsKeyName,
        String kmsKeyServiceAccount,
        String rawKey,
        String rsaEncryptedKey,
        String sha256) {
        this.kmsKeyName = Objects.requireNonNull(kmsKeyName, "expected parameter 'kmsKeyName' to be non-null");
        this.kmsKeyServiceAccount = Objects.requireNonNull(kmsKeyServiceAccount, "expected parameter 'kmsKeyServiceAccount' to be non-null");
        this.rawKey = Objects.requireNonNull(rawKey, "expected parameter 'rawKey' to be non-null");
        this.rsaEncryptedKey = Objects.requireNonNull(rsaEncryptedKey, "expected parameter 'rsaEncryptedKey' to be non-null");
        this.sha256 = Objects.requireNonNull(sha256, "expected parameter 'sha256' to be non-null");
    }

    private CustomerEncryptionKeyResponse() {
        this.kmsKeyName = null;
        this.kmsKeyServiceAccount = null;
        this.rawKey = null;
        this.rsaEncryptedKey = null;
        this.sha256 = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomerEncryptionKeyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String kmsKeyName;
        private String kmsKeyServiceAccount;
        private String rawKey;
        private String rsaEncryptedKey;
        private String sha256;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomerEncryptionKeyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kmsKeyName = defaults.kmsKeyName;
    	      this.kmsKeyServiceAccount = defaults.kmsKeyServiceAccount;
    	      this.rawKey = defaults.rawKey;
    	      this.rsaEncryptedKey = defaults.rsaEncryptedKey;
    	      this.sha256 = defaults.sha256;
        }

        public Builder setKmsKeyName(String kmsKeyName) {
            this.kmsKeyName = Objects.requireNonNull(kmsKeyName);
            return this;
        }

        public Builder setKmsKeyServiceAccount(String kmsKeyServiceAccount) {
            this.kmsKeyServiceAccount = Objects.requireNonNull(kmsKeyServiceAccount);
            return this;
        }

        public Builder setRawKey(String rawKey) {
            this.rawKey = Objects.requireNonNull(rawKey);
            return this;
        }

        public Builder setRsaEncryptedKey(String rsaEncryptedKey) {
            this.rsaEncryptedKey = Objects.requireNonNull(rsaEncryptedKey);
            return this;
        }

        public Builder setSha256(String sha256) {
            this.sha256 = Objects.requireNonNull(sha256);
            return this;
        }

        public CustomerEncryptionKeyResponse build() {
            return new CustomerEncryptionKeyResponse(kmsKeyName, kmsKeyServiceAccount, rawKey, rsaEncryptedKey, sha256);
        }
    }
}
