// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataflow_v1b3.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class DiskResponse {
    private final String diskType;
    private final String mountPoint;
    private final Integer sizeGb;

    @OutputCustomType.Constructor({"diskType","mountPoint","sizeGb"})
    private DiskResponse(
        String diskType,
        String mountPoint,
        Integer sizeGb) {
        this.diskType = Objects.requireNonNull(diskType);
        this.mountPoint = Objects.requireNonNull(mountPoint);
        this.sizeGb = Objects.requireNonNull(sizeGb);
    }

    public String getDiskType() {
        return this.diskType;
    }
    public String getMountPoint() {
        return this.mountPoint;
    }
    public Integer getSizeGb() {
        return this.sizeGb;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String diskType;
        private String mountPoint;
        private Integer sizeGb;

        public Builder() {
    	      // Empty
        }

        public Builder(DiskResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskType = defaults.diskType;
    	      this.mountPoint = defaults.mountPoint;
    	      this.sizeGb = defaults.sizeGb;
        }

        public Builder setDiskType(String diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }

        public Builder setMountPoint(String mountPoint) {
            this.mountPoint = Objects.requireNonNull(mountPoint);
            return this;
        }

        public Builder setSizeGb(Integer sizeGb) {
            this.sizeGb = Objects.requireNonNull(sizeGb);
            return this;
        }

        public DiskResponse build() {
            return new DiskResponse(diskType, mountPoint, sizeGb);
        }
    }
}
