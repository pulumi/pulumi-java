// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.container_v1.outputs.NodeManagementResponse;
import io.pulumi.googlenative.container_v1.outputs.ShieldedInstanceConfigResponse;
import io.pulumi.googlenative.container_v1.outputs.UpgradeSettingsResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class AutoprovisioningNodePoolDefaultsResponse {
    private final String bootDiskKmsKey;
    private final Integer diskSizeGb;
    private final String diskType;
    private final String imageType;
    private final NodeManagementResponse management;
    private final String minCpuPlatform;
    private final List<String> oauthScopes;
    private final String serviceAccount;
    private final ShieldedInstanceConfigResponse shieldedInstanceConfig;
    private final UpgradeSettingsResponse upgradeSettings;

    @OutputCustomType.Constructor({"bootDiskKmsKey","diskSizeGb","diskType","imageType","management","minCpuPlatform","oauthScopes","serviceAccount","shieldedInstanceConfig","upgradeSettings"})
    private AutoprovisioningNodePoolDefaultsResponse(
        String bootDiskKmsKey,
        Integer diskSizeGb,
        String diskType,
        String imageType,
        NodeManagementResponse management,
        String minCpuPlatform,
        List<String> oauthScopes,
        String serviceAccount,
        ShieldedInstanceConfigResponse shieldedInstanceConfig,
        UpgradeSettingsResponse upgradeSettings) {
        this.bootDiskKmsKey = Objects.requireNonNull(bootDiskKmsKey);
        this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
        this.diskType = Objects.requireNonNull(diskType);
        this.imageType = Objects.requireNonNull(imageType);
        this.management = Objects.requireNonNull(management);
        this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
        this.oauthScopes = Objects.requireNonNull(oauthScopes);
        this.serviceAccount = Objects.requireNonNull(serviceAccount);
        this.shieldedInstanceConfig = Objects.requireNonNull(shieldedInstanceConfig);
        this.upgradeSettings = Objects.requireNonNull(upgradeSettings);
    }

    public String getBootDiskKmsKey() {
        return this.bootDiskKmsKey;
    }
    public Integer getDiskSizeGb() {
        return this.diskSizeGb;
    }
    public String getDiskType() {
        return this.diskType;
    }
    public String getImageType() {
        return this.imageType;
    }
    public NodeManagementResponse getManagement() {
        return this.management;
    }
    public String getMinCpuPlatform() {
        return this.minCpuPlatform;
    }
    public List<String> getOauthScopes() {
        return this.oauthScopes;
    }
    public String getServiceAccount() {
        return this.serviceAccount;
    }
    public ShieldedInstanceConfigResponse getShieldedInstanceConfig() {
        return this.shieldedInstanceConfig;
    }
    public UpgradeSettingsResponse getUpgradeSettings() {
        return this.upgradeSettings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutoprovisioningNodePoolDefaultsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bootDiskKmsKey;
        private Integer diskSizeGb;
        private String diskType;
        private String imageType;
        private NodeManagementResponse management;
        private String minCpuPlatform;
        private List<String> oauthScopes;
        private String serviceAccount;
        private ShieldedInstanceConfigResponse shieldedInstanceConfig;
        private UpgradeSettingsResponse upgradeSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(AutoprovisioningNodePoolDefaultsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootDiskKmsKey = defaults.bootDiskKmsKey;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.imageType = defaults.imageType;
    	      this.management = defaults.management;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.oauthScopes = defaults.oauthScopes;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.shieldedInstanceConfig = defaults.shieldedInstanceConfig;
    	      this.upgradeSettings = defaults.upgradeSettings;
        }

        public Builder setBootDiskKmsKey(String bootDiskKmsKey) {
            this.bootDiskKmsKey = Objects.requireNonNull(bootDiskKmsKey);
            return this;
        }

        public Builder setDiskSizeGb(Integer diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }

        public Builder setDiskType(String diskType) {
            this.diskType = Objects.requireNonNull(diskType);
            return this;
        }

        public Builder setImageType(String imageType) {
            this.imageType = Objects.requireNonNull(imageType);
            return this;
        }

        public Builder setManagement(NodeManagementResponse management) {
            this.management = Objects.requireNonNull(management);
            return this;
        }

        public Builder setMinCpuPlatform(String minCpuPlatform) {
            this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
            return this;
        }

        public Builder setOauthScopes(List<String> oauthScopes) {
            this.oauthScopes = Objects.requireNonNull(oauthScopes);
            return this;
        }

        public Builder setServiceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }

        public Builder setShieldedInstanceConfig(ShieldedInstanceConfigResponse shieldedInstanceConfig) {
            this.shieldedInstanceConfig = Objects.requireNonNull(shieldedInstanceConfig);
            return this;
        }

        public Builder setUpgradeSettings(UpgradeSettingsResponse upgradeSettings) {
            this.upgradeSettings = Objects.requireNonNull(upgradeSettings);
            return this;
        }

        public AutoprovisioningNodePoolDefaultsResponse build() {
            return new AutoprovisioningNodePoolDefaultsResponse(bootDiskKmsKey, diskSizeGb, diskType, imageType, management, minCpuPlatform, oauthScopes, serviceAccount, shieldedInstanceConfig, upgradeSettings);
        }
    }
}
