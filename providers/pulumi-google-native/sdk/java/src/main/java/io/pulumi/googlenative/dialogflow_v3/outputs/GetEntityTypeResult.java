// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v3.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.dialogflow_v3.outputs.GoogleCloudDialogflowCxV3EntityTypeEntityResponse;
import io.pulumi.googlenative.dialogflow_v3.outputs.GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetEntityTypeResult {
    /**
     * Indicates whether the entity type can be automatically expanded.
     * 
     */
    private final String autoExpansionMode;
    /**
     * The human-readable name of the entity type, unique within the agent.
     * 
     */
    private final String displayName;
    /**
     * Enables fuzzy entity extraction during classification.
     * 
     */
    private final Boolean enableFuzzyExtraction;
    /**
     * The collection of entity entries associated with the entity type.
     * 
     */
    private final List<GoogleCloudDialogflowCxV3EntityTypeEntityResponse> entities;
    /**
     * Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
     * 
     */
    private final List<GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse> excludedPhrases;
    /**
     * Indicates the kind of entity type.
     * 
     */
    private final String kind;
    /**
     * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
     * 
     */
    private final String name;
    /**
     * Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
     * 
     */
    private final Boolean redact;

    @OutputCustomType.Constructor({"autoExpansionMode","displayName","enableFuzzyExtraction","entities","excludedPhrases","kind","name","redact"})
    private GetEntityTypeResult(
        String autoExpansionMode,
        String displayName,
        Boolean enableFuzzyExtraction,
        List<GoogleCloudDialogflowCxV3EntityTypeEntityResponse> entities,
        List<GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse> excludedPhrases,
        String kind,
        String name,
        Boolean redact) {
        this.autoExpansionMode = autoExpansionMode;
        this.displayName = displayName;
        this.enableFuzzyExtraction = enableFuzzyExtraction;
        this.entities = entities;
        this.excludedPhrases = excludedPhrases;
        this.kind = kind;
        this.name = name;
        this.redact = redact;
    }

    /**
     * Indicates whether the entity type can be automatically expanded.
     * 
    */
    public String getAutoExpansionMode() {
        return this.autoExpansionMode;
    }
    /**
     * The human-readable name of the entity type, unique within the agent.
     * 
    */
    public String getDisplayName() {
        return this.displayName;
    }
    /**
     * Enables fuzzy entity extraction during classification.
     * 
    */
    public Boolean getEnableFuzzyExtraction() {
        return this.enableFuzzyExtraction;
    }
    /**
     * The collection of entity entries associated with the entity type.
     * 
    */
    public List<GoogleCloudDialogflowCxV3EntityTypeEntityResponse> getEntities() {
        return this.entities;
    }
    /**
     * Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
     * 
    */
    public List<GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse> getExcludedPhrases() {
        return this.excludedPhrases;
    }
    /**
     * Indicates the kind of entity type.
     * 
    */
    public String getKind() {
        return this.kind;
    }
    /**
     * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name when logging.
     * 
    */
    public Boolean getRedact() {
        return this.redact;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntityTypeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String autoExpansionMode;
        private String displayName;
        private Boolean enableFuzzyExtraction;
        private List<GoogleCloudDialogflowCxV3EntityTypeEntityResponse> entities;
        private List<GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse> excludedPhrases;
        private String kind;
        private String name;
        private Boolean redact;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEntityTypeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoExpansionMode = defaults.autoExpansionMode;
    	      this.displayName = defaults.displayName;
    	      this.enableFuzzyExtraction = defaults.enableFuzzyExtraction;
    	      this.entities = defaults.entities;
    	      this.excludedPhrases = defaults.excludedPhrases;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.redact = defaults.redact;
        }

        public Builder setAutoExpansionMode(String autoExpansionMode) {
            this.autoExpansionMode = Objects.requireNonNull(autoExpansionMode);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setEnableFuzzyExtraction(Boolean enableFuzzyExtraction) {
            this.enableFuzzyExtraction = Objects.requireNonNull(enableFuzzyExtraction);
            return this;
        }

        public Builder setEntities(List<GoogleCloudDialogflowCxV3EntityTypeEntityResponse> entities) {
            this.entities = Objects.requireNonNull(entities);
            return this;
        }

        public Builder setExcludedPhrases(List<GoogleCloudDialogflowCxV3EntityTypeExcludedPhraseResponse> excludedPhrases) {
            this.excludedPhrases = Objects.requireNonNull(excludedPhrases);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRedact(Boolean redact) {
            this.redact = Objects.requireNonNull(redact);
            return this;
        }
        public GetEntityTypeResult build() {
            return new GetEntityTypeResult(autoExpansionMode, displayName, enableFuzzyExtraction, entities, excludedPhrases, kind, name, redact);
        }
    }
}
