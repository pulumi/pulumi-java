// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.compute_v1.enums.PublicAdvertisedPrefixStatus;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PublicAdvertisedPrefixArgs extends io.pulumi.resources.ResourceArgs {

    public static final PublicAdvertisedPrefixArgs Empty = new PublicAdvertisedPrefixArgs();

    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * The IPv4 address to be used for reverse DNS verification.
     * 
     */
    @Import(name="dnsVerificationIp")
      private final @Nullable Output<String> dnsVerificationIp;

    public Output<String> getDnsVerificationIp() {
        return this.dnsVerificationIp == null ? Output.empty() : this.dnsVerificationIp;
    }

    /**
     * The IPv4 address range, in CIDR format, represented by this public advertised prefix.
     * 
     */
    @Import(name="ipCidrRange")
      private final @Nullable Output<String> ipCidrRange;

    public Output<String> getIpCidrRange() {
        return this.ipCidrRange == null ? Output.empty() : this.ipCidrRange;
    }

    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    @Import(name="requestId")
      private final @Nullable Output<String> requestId;

    public Output<String> getRequestId() {
        return this.requestId == null ? Output.empty() : this.requestId;
    }

    /**
     * The status of the public advertised prefix. Possible values include: - `INITIAL`: RPKI validation is complete. - `PTR_CONFIGURED`: User has configured the PTR. - `VALIDATED`: Reverse DNS lookup is successful. - `REVERSE_DNS_LOOKUP_FAILED`: Reverse DNS lookup failed. - `PREFIX_CONFIGURATION_IN_PROGRESS`: The prefix is being configured. - `PREFIX_CONFIGURATION_COMPLETE`: The prefix is fully configured. - `PREFIX_REMOVAL_IN_PROGRESS`: The prefix is being removed.
     * 
     */
    @Import(name="status")
      private final @Nullable Output<PublicAdvertisedPrefixStatus> status;

    public Output<PublicAdvertisedPrefixStatus> getStatus() {
        return this.status == null ? Output.empty() : this.status;
    }

    public PublicAdvertisedPrefixArgs(
        @Nullable Output<String> description,
        @Nullable Output<String> dnsVerificationIp,
        @Nullable Output<String> ipCidrRange,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<String> requestId,
        @Nullable Output<PublicAdvertisedPrefixStatus> status) {
        this.description = description;
        this.dnsVerificationIp = dnsVerificationIp;
        this.ipCidrRange = ipCidrRange;
        this.name = name;
        this.project = project;
        this.requestId = requestId;
        this.status = status;
    }

    private PublicAdvertisedPrefixArgs() {
        this.description = Output.empty();
        this.dnsVerificationIp = Output.empty();
        this.ipCidrRange = Output.empty();
        this.name = Output.empty();
        this.project = Output.empty();
        this.requestId = Output.empty();
        this.status = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PublicAdvertisedPrefixArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> dnsVerificationIp;
        private @Nullable Output<String> ipCidrRange;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<String> requestId;
        private @Nullable Output<PublicAdvertisedPrefixStatus> status;

        public Builder() {
    	      // Empty
        }

        public Builder(PublicAdvertisedPrefixArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.dnsVerificationIp = defaults.dnsVerificationIp;
    	      this.ipCidrRange = defaults.ipCidrRange;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.requestId = defaults.requestId;
    	      this.status = defaults.status;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder dnsVerificationIp(@Nullable Output<String> dnsVerificationIp) {
            this.dnsVerificationIp = dnsVerificationIp;
            return this;
        }

        public Builder dnsVerificationIp(@Nullable String dnsVerificationIp) {
            this.dnsVerificationIp = Output.ofNullable(dnsVerificationIp);
            return this;
        }

        public Builder ipCidrRange(@Nullable Output<String> ipCidrRange) {
            this.ipCidrRange = ipCidrRange;
            return this;
        }

        public Builder ipCidrRange(@Nullable String ipCidrRange) {
            this.ipCidrRange = Output.ofNullable(ipCidrRange);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder requestId(@Nullable Output<String> requestId) {
            this.requestId = requestId;
            return this;
        }

        public Builder requestId(@Nullable String requestId) {
            this.requestId = Output.ofNullable(requestId);
            return this;
        }

        public Builder status(@Nullable Output<PublicAdvertisedPrefixStatus> status) {
            this.status = status;
            return this;
        }

        public Builder status(@Nullable PublicAdvertisedPrefixStatus status) {
            this.status = Output.ofNullable(status);
            return this;
        }
        public PublicAdvertisedPrefixArgs build() {
            return new PublicAdvertisedPrefixArgs(description, dnsVerificationIp, ipCidrRange, name, project, requestId, status);
        }
    }
}
