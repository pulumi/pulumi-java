// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.deploymentmanager_alpha.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.deploymentmanager_alpha.outputs.BasicAuthResponse;
import io.pulumi.googlenative.deploymentmanager_alpha.outputs.ServiceAccountResponse;
import java.lang.Boolean;
import java.util.Objects;

@OutputCustomType
public final class CredentialResponse {
    private final BasicAuthResponse basicAuth;
    private final ServiceAccountResponse serviceAccount;
    private final Boolean useProjectDefault;

    @OutputCustomType.Constructor({"basicAuth","serviceAccount","useProjectDefault"})
    private CredentialResponse(
        BasicAuthResponse basicAuth,
        ServiceAccountResponse serviceAccount,
        Boolean useProjectDefault) {
        this.basicAuth = Objects.requireNonNull(basicAuth);
        this.serviceAccount = Objects.requireNonNull(serviceAccount);
        this.useProjectDefault = Objects.requireNonNull(useProjectDefault);
    }

    public BasicAuthResponse getBasicAuth() {
        return this.basicAuth;
    }
    public ServiceAccountResponse getServiceAccount() {
        return this.serviceAccount;
    }
    public Boolean getUseProjectDefault() {
        return this.useProjectDefault;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CredentialResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BasicAuthResponse basicAuth;
        private ServiceAccountResponse serviceAccount;
        private Boolean useProjectDefault;

        public Builder() {
    	      // Empty
        }

        public Builder(CredentialResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basicAuth = defaults.basicAuth;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.useProjectDefault = defaults.useProjectDefault;
        }

        public Builder setBasicAuth(BasicAuthResponse basicAuth) {
            this.basicAuth = Objects.requireNonNull(basicAuth);
            return this;
        }

        public Builder setServiceAccount(ServiceAccountResponse serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }

        public Builder setUseProjectDefault(Boolean useProjectDefault) {
            this.useProjectDefault = Objects.requireNonNull(useProjectDefault);
            return this;
        }

        public CredentialResponse build() {
            return new CredentialResponse(basicAuth, serviceAccount, useProjectDefault);
        }
    }
}
