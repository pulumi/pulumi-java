// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.sqladmin_v1.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * Preferred location. This specifies where a Cloud SQL instance is located. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.
 * 
 */
public final class LocationPreferenceResponse extends io.pulumi.resources.InvokeArgs {

    public static final LocationPreferenceResponse Empty = new LocationPreferenceResponse();

    /**
     * The App Engine application to follow, it must be in the same region as the Cloud SQL instance. WARNING: Changing this might restart the instance.
     * 
     */
    @Import(name="followGaeApplication", required=true)
      private final String followGaeApplication;

    public String getFollowGaeApplication() {
        return this.followGaeApplication;
    }

    /**
     * This is always `sql#locationPreference`.
     * 
     */
    @Import(name="kind", required=true)
      private final String kind;

    public String getKind() {
        return this.kind;
    }

    /**
     * The preferred Compute Engine zone for the secondary/failover (for example: us-central1-a, us-central1-b, etc.). Reserved for future use.
     * 
     */
    @Import(name="secondaryZone", required=true)
      private final String secondaryZone;

    public String getSecondaryZone() {
        return this.secondaryZone;
    }

    /**
     * The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.). WARNING: Changing this might restart the instance.
     * 
     */
    @Import(name="zone", required=true)
      private final String zone;

    public String getZone() {
        return this.zone;
    }

    public LocationPreferenceResponse(
        String followGaeApplication,
        String kind,
        String secondaryZone,
        String zone) {
        this.followGaeApplication = Objects.requireNonNull(followGaeApplication, "expected parameter 'followGaeApplication' to be non-null");
        this.kind = Objects.requireNonNull(kind, "expected parameter 'kind' to be non-null");
        this.secondaryZone = Objects.requireNonNull(secondaryZone, "expected parameter 'secondaryZone' to be non-null");
        this.zone = Objects.requireNonNull(zone, "expected parameter 'zone' to be non-null");
    }

    private LocationPreferenceResponse() {
        this.followGaeApplication = null;
        this.kind = null;
        this.secondaryZone = null;
        this.zone = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LocationPreferenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String followGaeApplication;
        private String kind;
        private String secondaryZone;
        private String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(LocationPreferenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.followGaeApplication = defaults.followGaeApplication;
    	      this.kind = defaults.kind;
    	      this.secondaryZone = defaults.secondaryZone;
    	      this.zone = defaults.zone;
        }

        public Builder followGaeApplication(String followGaeApplication) {
            this.followGaeApplication = Objects.requireNonNull(followGaeApplication);
            return this;
        }
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder secondaryZone(String secondaryZone) {
            this.secondaryZone = Objects.requireNonNull(secondaryZone);
            return this;
        }
        public Builder zone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }        public LocationPreferenceResponse build() {
            return new LocationPreferenceResponse(followGaeApplication, kind, secondaryZone, zone);
        }
    }
}
