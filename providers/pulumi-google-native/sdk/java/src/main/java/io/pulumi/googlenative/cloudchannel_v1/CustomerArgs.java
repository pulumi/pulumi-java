// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudchannel_v1;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.cloudchannel_v1.inputs.GoogleCloudChannelV1ContactInfoArgs;
import io.pulumi.googlenative.cloudchannel_v1.inputs.GoogleTypePostalAddressArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CustomerArgs extends io.pulumi.resources.ResourceArgs {

    public static final CustomerArgs Empty = new CustomerArgs();

    @InputImport(name="accountId", required=true)
      private final Input<String> accountId;

    public Input<String> getAccountId() {
        return this.accountId;
    }

    /**
     * Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
     * 
     */
    @InputImport(name="alternateEmail")
      private final @Nullable Input<String> alternateEmail;

    public Input<String> getAlternateEmail() {
        return this.alternateEmail == null ? Input.empty() : this.alternateEmail;
    }

    /**
     * Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer.
     * 
     */
    @InputImport(name="channelPartnerId")
      private final @Nullable Input<String> channelPartnerId;

    public Input<String> getChannelPartnerId() {
        return this.channelPartnerId == null ? Input.empty() : this.channelPartnerId;
    }

    @InputImport(name="channelPartnerLinkId", required=true)
      private final Input<String> channelPartnerLinkId;

    public Input<String> getChannelPartnerLinkId() {
        return this.channelPartnerLinkId;
    }

    /**
     * The customer's primary domain. Must match the primary contact email's domain.
     * 
     */
    @InputImport(name="domain", required=true)
      private final Input<String> domain;

    public Input<String> getDomain() {
        return this.domain;
    }

    /**
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * 
     */
    @InputImport(name="languageCode")
      private final @Nullable Input<String> languageCode;

    public Input<String> getLanguageCode() {
        return this.languageCode == null ? Input.empty() : this.languageCode;
    }

    /**
     * Name of the organization that the customer entity represents.
     * 
     */
    @InputImport(name="orgDisplayName", required=true)
      private final Input<String> orgDisplayName;

    public Input<String> getOrgDisplayName() {
        return this.orgDisplayName;
    }

    /**
     * The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer's language, use the Customer-level language code.
     * 
     */
    @InputImport(name="orgPostalAddress", required=true)
      private final Input<GoogleTypePostalAddressArgs> orgPostalAddress;

    public Input<GoogleTypePostalAddressArgs> getOrgPostalAddress() {
        return this.orgPostalAddress;
    }

    /**
     * Primary contact info.
     * 
     */
    @InputImport(name="primaryContactInfo")
      private final @Nullable Input<GoogleCloudChannelV1ContactInfoArgs> primaryContactInfo;

    public Input<GoogleCloudChannelV1ContactInfoArgs> getPrimaryContactInfo() {
        return this.primaryContactInfo == null ? Input.empty() : this.primaryContactInfo;
    }

    public CustomerArgs(
        Input<String> accountId,
        @Nullable Input<String> alternateEmail,
        @Nullable Input<String> channelPartnerId,
        Input<String> channelPartnerLinkId,
        Input<String> domain,
        @Nullable Input<String> languageCode,
        Input<String> orgDisplayName,
        Input<GoogleTypePostalAddressArgs> orgPostalAddress,
        @Nullable Input<GoogleCloudChannelV1ContactInfoArgs> primaryContactInfo) {
        this.accountId = Objects.requireNonNull(accountId, "expected parameter 'accountId' to be non-null");
        this.alternateEmail = alternateEmail;
        this.channelPartnerId = channelPartnerId;
        this.channelPartnerLinkId = Objects.requireNonNull(channelPartnerLinkId, "expected parameter 'channelPartnerLinkId' to be non-null");
        this.domain = Objects.requireNonNull(domain, "expected parameter 'domain' to be non-null");
        this.languageCode = languageCode;
        this.orgDisplayName = Objects.requireNonNull(orgDisplayName, "expected parameter 'orgDisplayName' to be non-null");
        this.orgPostalAddress = Objects.requireNonNull(orgPostalAddress, "expected parameter 'orgPostalAddress' to be non-null");
        this.primaryContactInfo = primaryContactInfo;
    }

    private CustomerArgs() {
        this.accountId = Input.empty();
        this.alternateEmail = Input.empty();
        this.channelPartnerId = Input.empty();
        this.channelPartnerLinkId = Input.empty();
        this.domain = Input.empty();
        this.languageCode = Input.empty();
        this.orgDisplayName = Input.empty();
        this.orgPostalAddress = Input.empty();
        this.primaryContactInfo = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> accountId;
        private @Nullable Input<String> alternateEmail;
        private @Nullable Input<String> channelPartnerId;
        private Input<String> channelPartnerLinkId;
        private Input<String> domain;
        private @Nullable Input<String> languageCode;
        private Input<String> orgDisplayName;
        private Input<GoogleTypePostalAddressArgs> orgPostalAddress;
        private @Nullable Input<GoogleCloudChannelV1ContactInfoArgs> primaryContactInfo;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomerArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.alternateEmail = defaults.alternateEmail;
    	      this.channelPartnerId = defaults.channelPartnerId;
    	      this.channelPartnerLinkId = defaults.channelPartnerLinkId;
    	      this.domain = defaults.domain;
    	      this.languageCode = defaults.languageCode;
    	      this.orgDisplayName = defaults.orgDisplayName;
    	      this.orgPostalAddress = defaults.orgPostalAddress;
    	      this.primaryContactInfo = defaults.primaryContactInfo;
        }

        public Builder setAccountId(Input<String> accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }

        public Builder setAccountId(String accountId) {
            this.accountId = Input.of(Objects.requireNonNull(accountId));
            return this;
        }

        public Builder setAlternateEmail(@Nullable Input<String> alternateEmail) {
            this.alternateEmail = alternateEmail;
            return this;
        }

        public Builder setAlternateEmail(@Nullable String alternateEmail) {
            this.alternateEmail = Input.ofNullable(alternateEmail);
            return this;
        }

        public Builder setChannelPartnerId(@Nullable Input<String> channelPartnerId) {
            this.channelPartnerId = channelPartnerId;
            return this;
        }

        public Builder setChannelPartnerId(@Nullable String channelPartnerId) {
            this.channelPartnerId = Input.ofNullable(channelPartnerId);
            return this;
        }

        public Builder setChannelPartnerLinkId(Input<String> channelPartnerLinkId) {
            this.channelPartnerLinkId = Objects.requireNonNull(channelPartnerLinkId);
            return this;
        }

        public Builder setChannelPartnerLinkId(String channelPartnerLinkId) {
            this.channelPartnerLinkId = Input.of(Objects.requireNonNull(channelPartnerLinkId));
            return this;
        }

        public Builder setDomain(Input<String> domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }

        public Builder setDomain(String domain) {
            this.domain = Input.of(Objects.requireNonNull(domain));
            return this;
        }

        public Builder setLanguageCode(@Nullable Input<String> languageCode) {
            this.languageCode = languageCode;
            return this;
        }

        public Builder setLanguageCode(@Nullable String languageCode) {
            this.languageCode = Input.ofNullable(languageCode);
            return this;
        }

        public Builder setOrgDisplayName(Input<String> orgDisplayName) {
            this.orgDisplayName = Objects.requireNonNull(orgDisplayName);
            return this;
        }

        public Builder setOrgDisplayName(String orgDisplayName) {
            this.orgDisplayName = Input.of(Objects.requireNonNull(orgDisplayName));
            return this;
        }

        public Builder setOrgPostalAddress(Input<GoogleTypePostalAddressArgs> orgPostalAddress) {
            this.orgPostalAddress = Objects.requireNonNull(orgPostalAddress);
            return this;
        }

        public Builder setOrgPostalAddress(GoogleTypePostalAddressArgs orgPostalAddress) {
            this.orgPostalAddress = Input.of(Objects.requireNonNull(orgPostalAddress));
            return this;
        }

        public Builder setPrimaryContactInfo(@Nullable Input<GoogleCloudChannelV1ContactInfoArgs> primaryContactInfo) {
            this.primaryContactInfo = primaryContactInfo;
            return this;
        }

        public Builder setPrimaryContactInfo(@Nullable GoogleCloudChannelV1ContactInfoArgs primaryContactInfo) {
            this.primaryContactInfo = Input.ofNullable(primaryContactInfo);
            return this;
        }
        public CustomerArgs build() {
            return new CustomerArgs(accountId, alternateEmail, channelPartnerId, channelPartnerLinkId, domain, languageCode, orgDisplayName, orgPostalAddress, primaryContactInfo);
        }
    }
}
