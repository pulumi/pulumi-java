// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.connectors_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.connectors_v1.ConnectionArgs;
import io.pulumi.googlenative.connectors_v1.outputs.AuthConfigResponse;
import io.pulumi.googlenative.connectors_v1.outputs.ConfigVariableResponse;
import io.pulumi.googlenative.connectors_v1.outputs.ConnectionStatusResponse;
import io.pulumi.googlenative.connectors_v1.outputs.LockConfigResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:connectors/v1:Connection")
public class Connection extends io.pulumi.resources.CustomResource {
    @OutputExport(name="authConfig", type=AuthConfigResponse.class, parameters={})
    private Output<AuthConfigResponse> authConfig;

    public Output<AuthConfigResponse> getAuthConfig() {
        return this.authConfig;
    }
    @OutputExport(name="configVariables", type=List.class, parameters={ConfigVariableResponse.class})
    private Output<List<ConfigVariableResponse>> configVariables;

    public Output<List<ConfigVariableResponse>> getConfigVariables() {
        return this.configVariables;
    }
    @OutputExport(name="connectorVersion", type=String.class, parameters={})
    private Output<String> connectorVersion;

    public Output<String> getConnectorVersion() {
        return this.connectorVersion;
    }
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output<String> description;

    public Output<String> getDescription() {
        return this.description;
    }
    @OutputExport(name="egressBackends", type=List.class, parameters={String.class})
    private Output<List<String>> egressBackends;

    public Output<List<String>> getEgressBackends() {
        return this.egressBackends;
    }
    @OutputExport(name="envoyImageLocation", type=String.class, parameters={})
    private Output<String> envoyImageLocation;

    public Output<String> getEnvoyImageLocation() {
        return this.envoyImageLocation;
    }
    @OutputExport(name="imageLocation", type=String.class, parameters={})
    private Output<String> imageLocation;

    public Output<String> getImageLocation() {
        return this.imageLocation;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="lockConfig", type=LockConfigResponse.class, parameters={})
    private Output<LockConfigResponse> lockConfig;

    public Output<LockConfigResponse> getLockConfig() {
        return this.lockConfig;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="serviceAccount", type=String.class, parameters={})
    private Output<String> serviceAccount;

    public Output<String> getServiceAccount() {
        return this.serviceAccount;
    }
    @OutputExport(name="serviceDirectory", type=String.class, parameters={})
    private Output<String> serviceDirectory;

    public Output<String> getServiceDirectory() {
        return this.serviceDirectory;
    }
    @OutputExport(name="status", type=ConnectionStatusResponse.class, parameters={})
    private Output<ConnectionStatusResponse> status;

    public Output<ConnectionStatusResponse> getStatus() {
        return this.status;
    }
    @OutputExport(name="suspended", type=Boolean.class, parameters={})
    private Output<Boolean> suspended;

    public Output<Boolean> getSuspended() {
        return this.suspended;
    }
    @OutputExport(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    public Output<String> getUpdateTime() {
        return this.updateTime;
    }

    public Connection(String name, ConnectionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:connectors/v1:Connection", name, args == null ? ConnectionArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Connection(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:connectors/v1:Connection", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Connection get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Connection(name, id, options);
    }
}
