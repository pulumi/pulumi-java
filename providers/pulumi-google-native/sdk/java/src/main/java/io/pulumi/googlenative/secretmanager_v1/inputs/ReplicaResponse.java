// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.secretmanager_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.secretmanager_v1.inputs.CustomerManagedEncryptionResponse;
import java.lang.String;
import java.util.Objects;


public final class ReplicaResponse extends io.pulumi.resources.InvokeArgs {

    public static final ReplicaResponse Empty = new ReplicaResponse();

    @InputImport(name="customerManagedEncryption", required=true)
    private final CustomerManagedEncryptionResponse customerManagedEncryption;

    public CustomerManagedEncryptionResponse getCustomerManagedEncryption() {
        return this.customerManagedEncryption;
    }

    @InputImport(name="location", required=true)
    private final String location;

    public String getLocation() {
        return this.location;
    }

    public ReplicaResponse(
        CustomerManagedEncryptionResponse customerManagedEncryption,
        String location) {
        this.customerManagedEncryption = Objects.requireNonNull(customerManagedEncryption, "expected parameter 'customerManagedEncryption' to be non-null");
        this.location = Objects.requireNonNull(location, "expected parameter 'location' to be non-null");
    }

    private ReplicaResponse() {
        this.customerManagedEncryption = null;
        this.location = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicaResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomerManagedEncryptionResponse customerManagedEncryption;
        private String location;

        public Builder() {
    	      // Empty
        }

        public Builder(ReplicaResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customerManagedEncryption = defaults.customerManagedEncryption;
    	      this.location = defaults.location;
        }

        public Builder setCustomerManagedEncryption(CustomerManagedEncryptionResponse customerManagedEncryption) {
            this.customerManagedEncryption = Objects.requireNonNull(customerManagedEncryption);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public ReplicaResponse build() {
            return new ReplicaResponse(customerManagedEncryption, location);
        }
    }
}
