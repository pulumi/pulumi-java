// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.osconfig_v1beta.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.osconfig_v1beta.inputs.AptRepositoryArgs;
import io.pulumi.googlenative.osconfig_v1beta.inputs.GooRepositoryArgs;
import io.pulumi.googlenative.osconfig_v1beta.inputs.YumRepositoryArgs;
import io.pulumi.googlenative.osconfig_v1beta.inputs.ZypperRepositoryArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A package repository.
 * 
 */
public final class PackageRepositoryArgs extends io.pulumi.resources.ResourceArgs {

    public static final PackageRepositoryArgs Empty = new PackageRepositoryArgs();

    /**
     * An Apt Repository.
     * 
     */
    @InputImport(name="apt")
    private final @Nullable Input<AptRepositoryArgs> apt;

    public Input<AptRepositoryArgs> getApt() {
        return this.apt == null ? Input.empty() : this.apt;
    }

    /**
     * A Goo Repository.
     * 
     */
    @InputImport(name="goo")
    private final @Nullable Input<GooRepositoryArgs> goo;

    public Input<GooRepositoryArgs> getGoo() {
        return this.goo == null ? Input.empty() : this.goo;
    }

    /**
     * A Yum Repository.
     * 
     */
    @InputImport(name="yum")
    private final @Nullable Input<YumRepositoryArgs> yum;

    public Input<YumRepositoryArgs> getYum() {
        return this.yum == null ? Input.empty() : this.yum;
    }

    /**
     * A Zypper Repository.
     * 
     */
    @InputImport(name="zypper")
    private final @Nullable Input<ZypperRepositoryArgs> zypper;

    public Input<ZypperRepositoryArgs> getZypper() {
        return this.zypper == null ? Input.empty() : this.zypper;
    }

    public PackageRepositoryArgs(
        @Nullable Input<AptRepositoryArgs> apt,
        @Nullable Input<GooRepositoryArgs> goo,
        @Nullable Input<YumRepositoryArgs> yum,
        @Nullable Input<ZypperRepositoryArgs> zypper) {
        this.apt = apt;
        this.goo = goo;
        this.yum = yum;
        this.zypper = zypper;
    }

    private PackageRepositoryArgs() {
        this.apt = Input.empty();
        this.goo = Input.empty();
        this.yum = Input.empty();
        this.zypper = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PackageRepositoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AptRepositoryArgs> apt;
        private @Nullable Input<GooRepositoryArgs> goo;
        private @Nullable Input<YumRepositoryArgs> yum;
        private @Nullable Input<ZypperRepositoryArgs> zypper;

        public Builder() {
    	      // Empty
        }

        public Builder(PackageRepositoryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apt = defaults.apt;
    	      this.goo = defaults.goo;
    	      this.yum = defaults.yum;
    	      this.zypper = defaults.zypper;
        }

        public Builder setApt(@Nullable Input<AptRepositoryArgs> apt) {
            this.apt = apt;
            return this;
        }

        public Builder setApt(@Nullable AptRepositoryArgs apt) {
            this.apt = Input.ofNullable(apt);
            return this;
        }

        public Builder setGoo(@Nullable Input<GooRepositoryArgs> goo) {
            this.goo = goo;
            return this;
        }

        public Builder setGoo(@Nullable GooRepositoryArgs goo) {
            this.goo = Input.ofNullable(goo);
            return this;
        }

        public Builder setYum(@Nullable Input<YumRepositoryArgs> yum) {
            this.yum = yum;
            return this;
        }

        public Builder setYum(@Nullable YumRepositoryArgs yum) {
            this.yum = Input.ofNullable(yum);
            return this;
        }

        public Builder setZypper(@Nullable Input<ZypperRepositoryArgs> zypper) {
            this.zypper = zypper;
            return this;
        }

        public Builder setZypper(@Nullable ZypperRepositoryArgs zypper) {
            this.zypper = Input.ofNullable(zypper);
            return this;
        }

        public PackageRepositoryArgs build() {
            return new PackageRepositoryArgs(apt, goo, yum, zypper);
        }
    }
}
