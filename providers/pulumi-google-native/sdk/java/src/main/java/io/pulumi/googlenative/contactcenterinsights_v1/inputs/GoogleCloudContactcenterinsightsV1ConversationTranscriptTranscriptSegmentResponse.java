// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.contactcenterinsights_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1ConversationParticipantResponse;
import io.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse;
import io.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse;
import io.pulumi.googlenative.contactcenterinsights_v1.inputs.GoogleCloudContactcenterinsightsV1SentimentDataResponse;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * A segment of a full transcript.
 * 
 */
public final class GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse Empty = new GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse();

    /**
     * For conversations derived from multi-channel audio, this is the channel number corresponding to the audio from that channel. For audioChannelCount = N, its output values can range from '1' to 'N'. A channel tag of 0 indicates that the audio is mono.
     * 
     */
    @InputImport(name="channelTag", required=true)
    private final Integer channelTag;

    public Integer getChannelTag() {
        return this.channelTag;
    }

    /**
     * A confidence estimate between 0.0 and 1.0 of the fidelity of this segment. A default value of 0.0 indicates that the value is unset.
     * 
     */
    @InputImport(name="confidence", required=true)
    private final Double confidence;

    public Double getConfidence() {
        return this.confidence;
    }

    /**
     * CCAI metadata relating to the current transcript segment.
     * 
     */
    @InputImport(name="dialogflowSegmentMetadata", required=true)
    private final GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse dialogflowSegmentMetadata;

    public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse getDialogflowSegmentMetadata() {
        return this.dialogflowSegmentMetadata;
    }

    /**
     * The language code of this segment as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".
     * 
     */
    @InputImport(name="languageCode", required=true)
    private final String languageCode;

    public String getLanguageCode() {
        return this.languageCode;
    }

    /**
     * The time that the message occurred, if provided.
     * 
     */
    @InputImport(name="messageTime", required=true)
    private final String messageTime;

    public String getMessageTime() {
        return this.messageTime;
    }

    /**
     * The participant of this segment.
     * 
     */
    @InputImport(name="segmentParticipant", required=true)
    private final GoogleCloudContactcenterinsightsV1ConversationParticipantResponse segmentParticipant;

    public GoogleCloudContactcenterinsightsV1ConversationParticipantResponse getSegmentParticipant() {
        return this.segmentParticipant;
    }

    /**
     * The sentiment for this transcript segment.
     * 
     */
    @InputImport(name="sentiment", required=true)
    private final GoogleCloudContactcenterinsightsV1SentimentDataResponse sentiment;

    public GoogleCloudContactcenterinsightsV1SentimentDataResponse getSentiment() {
        return this.sentiment;
    }

    /**
     * The text of this segment.
     * 
     */
    @InputImport(name="text", required=true)
    private final String text;

    public String getText() {
        return this.text;
    }

    /**
     * A list of the word-specific information for each word in the segment.
     * 
     */
    @InputImport(name="words", required=true)
    private final List<GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse> words;

    public List<GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse> getWords() {
        return this.words;
    }

    public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse(
        Integer channelTag,
        Double confidence,
        GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse dialogflowSegmentMetadata,
        String languageCode,
        String messageTime,
        GoogleCloudContactcenterinsightsV1ConversationParticipantResponse segmentParticipant,
        GoogleCloudContactcenterinsightsV1SentimentDataResponse sentiment,
        String text,
        List<GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse> words) {
        this.channelTag = Objects.requireNonNull(channelTag, "expected parameter 'channelTag' to be non-null");
        this.confidence = Objects.requireNonNull(confidence, "expected parameter 'confidence' to be non-null");
        this.dialogflowSegmentMetadata = Objects.requireNonNull(dialogflowSegmentMetadata, "expected parameter 'dialogflowSegmentMetadata' to be non-null");
        this.languageCode = Objects.requireNonNull(languageCode, "expected parameter 'languageCode' to be non-null");
        this.messageTime = Objects.requireNonNull(messageTime, "expected parameter 'messageTime' to be non-null");
        this.segmentParticipant = Objects.requireNonNull(segmentParticipant, "expected parameter 'segmentParticipant' to be non-null");
        this.sentiment = Objects.requireNonNull(sentiment, "expected parameter 'sentiment' to be non-null");
        this.text = Objects.requireNonNull(text, "expected parameter 'text' to be non-null");
        this.words = Objects.requireNonNull(words, "expected parameter 'words' to be non-null");
    }

    private GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse() {
        this.channelTag = null;
        this.confidence = null;
        this.dialogflowSegmentMetadata = null;
        this.languageCode = null;
        this.messageTime = null;
        this.segmentParticipant = null;
        this.sentiment = null;
        this.text = null;
        this.words = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer channelTag;
        private Double confidence;
        private GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse dialogflowSegmentMetadata;
        private String languageCode;
        private String messageTime;
        private GoogleCloudContactcenterinsightsV1ConversationParticipantResponse segmentParticipant;
        private GoogleCloudContactcenterinsightsV1SentimentDataResponse sentiment;
        private String text;
        private List<GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse> words;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channelTag = defaults.channelTag;
    	      this.confidence = defaults.confidence;
    	      this.dialogflowSegmentMetadata = defaults.dialogflowSegmentMetadata;
    	      this.languageCode = defaults.languageCode;
    	      this.messageTime = defaults.messageTime;
    	      this.segmentParticipant = defaults.segmentParticipant;
    	      this.sentiment = defaults.sentiment;
    	      this.text = defaults.text;
    	      this.words = defaults.words;
        }

        public Builder setChannelTag(Integer channelTag) {
            this.channelTag = Objects.requireNonNull(channelTag);
            return this;
        }

        public Builder setConfidence(Double confidence) {
            this.confidence = Objects.requireNonNull(confidence);
            return this;
        }

        public Builder setDialogflowSegmentMetadata(GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentDialogflowSegmentMetadataResponse dialogflowSegmentMetadata) {
            this.dialogflowSegmentMetadata = Objects.requireNonNull(dialogflowSegmentMetadata);
            return this;
        }

        public Builder setLanguageCode(String languageCode) {
            this.languageCode = Objects.requireNonNull(languageCode);
            return this;
        }

        public Builder setMessageTime(String messageTime) {
            this.messageTime = Objects.requireNonNull(messageTime);
            return this;
        }

        public Builder setSegmentParticipant(GoogleCloudContactcenterinsightsV1ConversationParticipantResponse segmentParticipant) {
            this.segmentParticipant = Objects.requireNonNull(segmentParticipant);
            return this;
        }

        public Builder setSentiment(GoogleCloudContactcenterinsightsV1SentimentDataResponse sentiment) {
            this.sentiment = Objects.requireNonNull(sentiment);
            return this;
        }

        public Builder setText(String text) {
            this.text = Objects.requireNonNull(text);
            return this;
        }

        public Builder setWords(List<GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentWordInfoResponse> words) {
            this.words = Objects.requireNonNull(words);
            return this;
        }

        public GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse build() {
            return new GoogleCloudContactcenterinsightsV1ConversationTranscriptTranscriptSegmentResponse(channelTag, confidence, dialogflowSegmentMetadata, languageCode, messageTime, segmentParticipant, sentiment, text, words);
        }
    }
}
