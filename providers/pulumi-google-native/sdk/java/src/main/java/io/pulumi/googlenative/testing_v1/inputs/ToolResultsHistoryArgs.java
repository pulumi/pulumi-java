// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * Represents a tool results history resource.
 * 
 */
public final class ToolResultsHistoryArgs extends io.pulumi.resources.ResourceArgs {

    public static final ToolResultsHistoryArgs Empty = new ToolResultsHistoryArgs();

    /**
     * A tool results history ID.
     * 
     */
    @InputImport(name="historyId", required=true)
      private final Input<String> historyId;

    public Input<String> getHistoryId() {
        return this.historyId;
    }

    /**
     * The cloud project that owns the tool results history.
     * 
     */
    @InputImport(name="project", required=true)
      private final Input<String> project;

    public Input<String> getProject() {
        return this.project;
    }

    public ToolResultsHistoryArgs(
        Input<String> historyId,
        Input<String> project) {
        this.historyId = Objects.requireNonNull(historyId, "expected parameter 'historyId' to be non-null");
        this.project = Objects.requireNonNull(project, "expected parameter 'project' to be non-null");
    }

    private ToolResultsHistoryArgs() {
        this.historyId = Input.empty();
        this.project = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ToolResultsHistoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> historyId;
        private Input<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(ToolResultsHistoryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.historyId = defaults.historyId;
    	      this.project = defaults.project;
        }

        public Builder historyId(Input<String> historyId) {
            this.historyId = Objects.requireNonNull(historyId);
            return this;
        }

        public Builder historyId(String historyId) {
            this.historyId = Input.of(Objects.requireNonNull(historyId));
            return this;
        }

        public Builder project(Input<String> project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }

        public Builder project(String project) {
            this.project = Input.of(Objects.requireNonNull(project));
            return this;
        }
        public ToolResultsHistoryArgs build() {
            return new ToolResultsHistoryArgs(historyId, project);
        }
    }
}
