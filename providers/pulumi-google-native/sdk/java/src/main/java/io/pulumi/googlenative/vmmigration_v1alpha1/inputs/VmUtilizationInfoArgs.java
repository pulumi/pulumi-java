// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.vmmigration_v1alpha1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.vmmigration_v1alpha1.inputs.VmUtilizationMetricsArgs;
import io.pulumi.googlenative.vmmigration_v1alpha1.inputs.VmwareVmDetailsArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Utilization information of a single VM.
 * 
 */
public final class VmUtilizationInfoArgs extends io.pulumi.resources.ResourceArgs {

    public static final VmUtilizationInfoArgs Empty = new VmUtilizationInfoArgs();

    /**
     * Utilization metrics for this VM.
     * 
     */
    @InputImport(name="utilization")
    private final @Nullable Input<VmUtilizationMetricsArgs> utilization;

    public Input<VmUtilizationMetricsArgs> getUtilization() {
        return this.utilization == null ? Input.empty() : this.utilization;
    }

    /**
     * The VM's ID in the source.
     * 
     */
    @InputImport(name="vmId")
    private final @Nullable Input<String> vmId;

    public Input<String> getVmId() {
        return this.vmId == null ? Input.empty() : this.vmId;
    }

    /**
     * The description of the VM in a Source of type Vmware.
     * 
     */
    @InputImport(name="vmwareVmDetails")
    private final @Nullable Input<VmwareVmDetailsArgs> vmwareVmDetails;

    public Input<VmwareVmDetailsArgs> getVmwareVmDetails() {
        return this.vmwareVmDetails == null ? Input.empty() : this.vmwareVmDetails;
    }

    public VmUtilizationInfoArgs(
        @Nullable Input<VmUtilizationMetricsArgs> utilization,
        @Nullable Input<String> vmId,
        @Nullable Input<VmwareVmDetailsArgs> vmwareVmDetails) {
        this.utilization = utilization;
        this.vmId = vmId;
        this.vmwareVmDetails = vmwareVmDetails;
    }

    private VmUtilizationInfoArgs() {
        this.utilization = Input.empty();
        this.vmId = Input.empty();
        this.vmwareVmDetails = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VmUtilizationInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<VmUtilizationMetricsArgs> utilization;
        private @Nullable Input<String> vmId;
        private @Nullable Input<VmwareVmDetailsArgs> vmwareVmDetails;

        public Builder() {
    	      // Empty
        }

        public Builder(VmUtilizationInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.utilization = defaults.utilization;
    	      this.vmId = defaults.vmId;
    	      this.vmwareVmDetails = defaults.vmwareVmDetails;
        }

        public Builder setUtilization(@Nullable Input<VmUtilizationMetricsArgs> utilization) {
            this.utilization = utilization;
            return this;
        }

        public Builder setUtilization(@Nullable VmUtilizationMetricsArgs utilization) {
            this.utilization = Input.ofNullable(utilization);
            return this;
        }

        public Builder setVmId(@Nullable Input<String> vmId) {
            this.vmId = vmId;
            return this;
        }

        public Builder setVmId(@Nullable String vmId) {
            this.vmId = Input.ofNullable(vmId);
            return this;
        }

        public Builder setVmwareVmDetails(@Nullable Input<VmwareVmDetailsArgs> vmwareVmDetails) {
            this.vmwareVmDetails = vmwareVmDetails;
            return this;
        }

        public Builder setVmwareVmDetails(@Nullable VmwareVmDetailsArgs vmwareVmDetails) {
            this.vmwareVmDetails = Input.ofNullable(vmwareVmDetails);
            return this;
        }

        public VmUtilizationInfoArgs build() {
            return new VmUtilizationInfoArgs(utilization, vmId, vmwareVmDetails);
        }
    }
}
