// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.appengine_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.appengine_v1.outputs.ApiConfigHandlerResponse;
import io.pulumi.googlenative.appengine_v1.outputs.AutomaticScalingResponse;
import io.pulumi.googlenative.appengine_v1.outputs.BasicScalingResponse;
import io.pulumi.googlenative.appengine_v1.outputs.DeploymentResponse;
import io.pulumi.googlenative.appengine_v1.outputs.EndpointsApiServiceResponse;
import io.pulumi.googlenative.appengine_v1.outputs.EntrypointResponse;
import io.pulumi.googlenative.appengine_v1.outputs.ErrorHandlerResponse;
import io.pulumi.googlenative.appengine_v1.outputs.HealthCheckResponse;
import io.pulumi.googlenative.appengine_v1.outputs.LibraryResponse;
import io.pulumi.googlenative.appengine_v1.outputs.LivenessCheckResponse;
import io.pulumi.googlenative.appengine_v1.outputs.ManualScalingResponse;
import io.pulumi.googlenative.appengine_v1.outputs.NetworkResponse;
import io.pulumi.googlenative.appengine_v1.outputs.ReadinessCheckResponse;
import io.pulumi.googlenative.appengine_v1.outputs.ResourcesResponse;
import io.pulumi.googlenative.appengine_v1.outputs.UrlMapResponse;
import io.pulumi.googlenative.appengine_v1.outputs.VpcAccessConnectorResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetVersionResult {
    private final ApiConfigHandlerResponse apiConfig;
    private final AutomaticScalingResponse automaticScaling;
    private final BasicScalingResponse basicScaling;
    private final Map<String,String> betaSettings;
    private final Map<String,String> buildEnvVariables;
    private final String createTime;
    private final String createdBy;
    private final String defaultExpiration;
    private final DeploymentResponse deployment;
    private final String diskUsageBytes;
    private final EndpointsApiServiceResponse endpointsApiService;
    private final EntrypointResponse entrypoint;
    private final String env;
    private final Map<String,String> envVariables;
    private final List<ErrorHandlerResponse> errorHandlers;
    private final List<UrlMapResponse> handlers;
    private final HealthCheckResponse healthCheck;
    private final List<String> inboundServices;
    private final String instanceClass;
    private final List<LibraryResponse> libraries;
    private final LivenessCheckResponse livenessCheck;
    private final ManualScalingResponse manualScaling;
    private final String name;
    private final NetworkResponse network;
    private final String nobuildFilesRegex;
    private final ReadinessCheckResponse readinessCheck;
    private final ResourcesResponse resources;
    private final String runtime;
    private final String runtimeApiVersion;
    private final String runtimeChannel;
    private final String runtimeMainExecutablePath;
    private final String serviceAccount;
    private final String servingStatus;
    private final Boolean threadsafe;
    private final String versionUrl;
    private final Boolean vm;
    private final VpcAccessConnectorResponse vpcAccessConnector;

    @OutputCustomType.Constructor({"apiConfig","automaticScaling","basicScaling","betaSettings","buildEnvVariables","createTime","createdBy","defaultExpiration","deployment","diskUsageBytes","endpointsApiService","entrypoint","env","envVariables","errorHandlers","handlers","healthCheck","inboundServices","instanceClass","libraries","livenessCheck","manualScaling","name","network","nobuildFilesRegex","readinessCheck","resources","runtime","runtimeApiVersion","runtimeChannel","runtimeMainExecutablePath","serviceAccount","servingStatus","threadsafe","versionUrl","vm","vpcAccessConnector"})
    private GetVersionResult(
        ApiConfigHandlerResponse apiConfig,
        AutomaticScalingResponse automaticScaling,
        BasicScalingResponse basicScaling,
        Map<String,String> betaSettings,
        Map<String,String> buildEnvVariables,
        String createTime,
        String createdBy,
        String defaultExpiration,
        DeploymentResponse deployment,
        String diskUsageBytes,
        EndpointsApiServiceResponse endpointsApiService,
        EntrypointResponse entrypoint,
        String env,
        Map<String,String> envVariables,
        List<ErrorHandlerResponse> errorHandlers,
        List<UrlMapResponse> handlers,
        HealthCheckResponse healthCheck,
        List<String> inboundServices,
        String instanceClass,
        List<LibraryResponse> libraries,
        LivenessCheckResponse livenessCheck,
        ManualScalingResponse manualScaling,
        String name,
        NetworkResponse network,
        String nobuildFilesRegex,
        ReadinessCheckResponse readinessCheck,
        ResourcesResponse resources,
        String runtime,
        String runtimeApiVersion,
        String runtimeChannel,
        String runtimeMainExecutablePath,
        String serviceAccount,
        String servingStatus,
        Boolean threadsafe,
        String versionUrl,
        Boolean vm,
        VpcAccessConnectorResponse vpcAccessConnector) {
        this.apiConfig = Objects.requireNonNull(apiConfig);
        this.automaticScaling = Objects.requireNonNull(automaticScaling);
        this.basicScaling = Objects.requireNonNull(basicScaling);
        this.betaSettings = Objects.requireNonNull(betaSettings);
        this.buildEnvVariables = Objects.requireNonNull(buildEnvVariables);
        this.createTime = Objects.requireNonNull(createTime);
        this.createdBy = Objects.requireNonNull(createdBy);
        this.defaultExpiration = Objects.requireNonNull(defaultExpiration);
        this.deployment = Objects.requireNonNull(deployment);
        this.diskUsageBytes = Objects.requireNonNull(diskUsageBytes);
        this.endpointsApiService = Objects.requireNonNull(endpointsApiService);
        this.entrypoint = Objects.requireNonNull(entrypoint);
        this.env = Objects.requireNonNull(env);
        this.envVariables = Objects.requireNonNull(envVariables);
        this.errorHandlers = Objects.requireNonNull(errorHandlers);
        this.handlers = Objects.requireNonNull(handlers);
        this.healthCheck = Objects.requireNonNull(healthCheck);
        this.inboundServices = Objects.requireNonNull(inboundServices);
        this.instanceClass = Objects.requireNonNull(instanceClass);
        this.libraries = Objects.requireNonNull(libraries);
        this.livenessCheck = Objects.requireNonNull(livenessCheck);
        this.manualScaling = Objects.requireNonNull(manualScaling);
        this.name = Objects.requireNonNull(name);
        this.network = Objects.requireNonNull(network);
        this.nobuildFilesRegex = Objects.requireNonNull(nobuildFilesRegex);
        this.readinessCheck = Objects.requireNonNull(readinessCheck);
        this.resources = Objects.requireNonNull(resources);
        this.runtime = Objects.requireNonNull(runtime);
        this.runtimeApiVersion = Objects.requireNonNull(runtimeApiVersion);
        this.runtimeChannel = Objects.requireNonNull(runtimeChannel);
        this.runtimeMainExecutablePath = Objects.requireNonNull(runtimeMainExecutablePath);
        this.serviceAccount = Objects.requireNonNull(serviceAccount);
        this.servingStatus = Objects.requireNonNull(servingStatus);
        this.threadsafe = Objects.requireNonNull(threadsafe);
        this.versionUrl = Objects.requireNonNull(versionUrl);
        this.vm = Objects.requireNonNull(vm);
        this.vpcAccessConnector = Objects.requireNonNull(vpcAccessConnector);
    }

    public ApiConfigHandlerResponse getApiConfig() {
        return this.apiConfig;
    }
    public AutomaticScalingResponse getAutomaticScaling() {
        return this.automaticScaling;
    }
    public BasicScalingResponse getBasicScaling() {
        return this.basicScaling;
    }
    public Map<String,String> getBetaSettings() {
        return this.betaSettings;
    }
    public Map<String,String> getBuildEnvVariables() {
        return this.buildEnvVariables;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public String getCreatedBy() {
        return this.createdBy;
    }
    public String getDefaultExpiration() {
        return this.defaultExpiration;
    }
    public DeploymentResponse getDeployment() {
        return this.deployment;
    }
    public String getDiskUsageBytes() {
        return this.diskUsageBytes;
    }
    public EndpointsApiServiceResponse getEndpointsApiService() {
        return this.endpointsApiService;
    }
    public EntrypointResponse getEntrypoint() {
        return this.entrypoint;
    }
    public String getEnv() {
        return this.env;
    }
    public Map<String,String> getEnvVariables() {
        return this.envVariables;
    }
    public List<ErrorHandlerResponse> getErrorHandlers() {
        return this.errorHandlers;
    }
    public List<UrlMapResponse> getHandlers() {
        return this.handlers;
    }
    public HealthCheckResponse getHealthCheck() {
        return this.healthCheck;
    }
    public List<String> getInboundServices() {
        return this.inboundServices;
    }
    public String getInstanceClass() {
        return this.instanceClass;
    }
    public List<LibraryResponse> getLibraries() {
        return this.libraries;
    }
    public LivenessCheckResponse getLivenessCheck() {
        return this.livenessCheck;
    }
    public ManualScalingResponse getManualScaling() {
        return this.manualScaling;
    }
    public String getName() {
        return this.name;
    }
    public NetworkResponse getNetwork() {
        return this.network;
    }
    public String getNobuildFilesRegex() {
        return this.nobuildFilesRegex;
    }
    public ReadinessCheckResponse getReadinessCheck() {
        return this.readinessCheck;
    }
    public ResourcesResponse getResources() {
        return this.resources;
    }
    public String getRuntime() {
        return this.runtime;
    }
    public String getRuntimeApiVersion() {
        return this.runtimeApiVersion;
    }
    public String getRuntimeChannel() {
        return this.runtimeChannel;
    }
    public String getRuntimeMainExecutablePath() {
        return this.runtimeMainExecutablePath;
    }
    public String getServiceAccount() {
        return this.serviceAccount;
    }
    public String getServingStatus() {
        return this.servingStatus;
    }
    public Boolean getThreadsafe() {
        return this.threadsafe;
    }
    public String getVersionUrl() {
        return this.versionUrl;
    }
    public Boolean getVm() {
        return this.vm;
    }
    public VpcAccessConnectorResponse getVpcAccessConnector() {
        return this.vpcAccessConnector;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVersionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApiConfigHandlerResponse apiConfig;
        private AutomaticScalingResponse automaticScaling;
        private BasicScalingResponse basicScaling;
        private Map<String,String> betaSettings;
        private Map<String,String> buildEnvVariables;
        private String createTime;
        private String createdBy;
        private String defaultExpiration;
        private DeploymentResponse deployment;
        private String diskUsageBytes;
        private EndpointsApiServiceResponse endpointsApiService;
        private EntrypointResponse entrypoint;
        private String env;
        private Map<String,String> envVariables;
        private List<ErrorHandlerResponse> errorHandlers;
        private List<UrlMapResponse> handlers;
        private HealthCheckResponse healthCheck;
        private List<String> inboundServices;
        private String instanceClass;
        private List<LibraryResponse> libraries;
        private LivenessCheckResponse livenessCheck;
        private ManualScalingResponse manualScaling;
        private String name;
        private NetworkResponse network;
        private String nobuildFilesRegex;
        private ReadinessCheckResponse readinessCheck;
        private ResourcesResponse resources;
        private String runtime;
        private String runtimeApiVersion;
        private String runtimeChannel;
        private String runtimeMainExecutablePath;
        private String serviceAccount;
        private String servingStatus;
        private Boolean threadsafe;
        private String versionUrl;
        private Boolean vm;
        private VpcAccessConnectorResponse vpcAccessConnector;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiConfig = defaults.apiConfig;
    	      this.automaticScaling = defaults.automaticScaling;
    	      this.basicScaling = defaults.basicScaling;
    	      this.betaSettings = defaults.betaSettings;
    	      this.buildEnvVariables = defaults.buildEnvVariables;
    	      this.createTime = defaults.createTime;
    	      this.createdBy = defaults.createdBy;
    	      this.defaultExpiration = defaults.defaultExpiration;
    	      this.deployment = defaults.deployment;
    	      this.diskUsageBytes = defaults.diskUsageBytes;
    	      this.endpointsApiService = defaults.endpointsApiService;
    	      this.entrypoint = defaults.entrypoint;
    	      this.env = defaults.env;
    	      this.envVariables = defaults.envVariables;
    	      this.errorHandlers = defaults.errorHandlers;
    	      this.handlers = defaults.handlers;
    	      this.healthCheck = defaults.healthCheck;
    	      this.inboundServices = defaults.inboundServices;
    	      this.instanceClass = defaults.instanceClass;
    	      this.libraries = defaults.libraries;
    	      this.livenessCheck = defaults.livenessCheck;
    	      this.manualScaling = defaults.manualScaling;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.nobuildFilesRegex = defaults.nobuildFilesRegex;
    	      this.readinessCheck = defaults.readinessCheck;
    	      this.resources = defaults.resources;
    	      this.runtime = defaults.runtime;
    	      this.runtimeApiVersion = defaults.runtimeApiVersion;
    	      this.runtimeChannel = defaults.runtimeChannel;
    	      this.runtimeMainExecutablePath = defaults.runtimeMainExecutablePath;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.servingStatus = defaults.servingStatus;
    	      this.threadsafe = defaults.threadsafe;
    	      this.versionUrl = defaults.versionUrl;
    	      this.vm = defaults.vm;
    	      this.vpcAccessConnector = defaults.vpcAccessConnector;
        }

        public Builder setApiConfig(ApiConfigHandlerResponse apiConfig) {
            this.apiConfig = Objects.requireNonNull(apiConfig);
            return this;
        }

        public Builder setAutomaticScaling(AutomaticScalingResponse automaticScaling) {
            this.automaticScaling = Objects.requireNonNull(automaticScaling);
            return this;
        }

        public Builder setBasicScaling(BasicScalingResponse basicScaling) {
            this.basicScaling = Objects.requireNonNull(basicScaling);
            return this;
        }

        public Builder setBetaSettings(Map<String,String> betaSettings) {
            this.betaSettings = Objects.requireNonNull(betaSettings);
            return this;
        }

        public Builder setBuildEnvVariables(Map<String,String> buildEnvVariables) {
            this.buildEnvVariables = Objects.requireNonNull(buildEnvVariables);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setCreatedBy(String createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }

        public Builder setDefaultExpiration(String defaultExpiration) {
            this.defaultExpiration = Objects.requireNonNull(defaultExpiration);
            return this;
        }

        public Builder setDeployment(DeploymentResponse deployment) {
            this.deployment = Objects.requireNonNull(deployment);
            return this;
        }

        public Builder setDiskUsageBytes(String diskUsageBytes) {
            this.diskUsageBytes = Objects.requireNonNull(diskUsageBytes);
            return this;
        }

        public Builder setEndpointsApiService(EndpointsApiServiceResponse endpointsApiService) {
            this.endpointsApiService = Objects.requireNonNull(endpointsApiService);
            return this;
        }

        public Builder setEntrypoint(EntrypointResponse entrypoint) {
            this.entrypoint = Objects.requireNonNull(entrypoint);
            return this;
        }

        public Builder setEnv(String env) {
            this.env = Objects.requireNonNull(env);
            return this;
        }

        public Builder setEnvVariables(Map<String,String> envVariables) {
            this.envVariables = Objects.requireNonNull(envVariables);
            return this;
        }

        public Builder setErrorHandlers(List<ErrorHandlerResponse> errorHandlers) {
            this.errorHandlers = Objects.requireNonNull(errorHandlers);
            return this;
        }

        public Builder setHandlers(List<UrlMapResponse> handlers) {
            this.handlers = Objects.requireNonNull(handlers);
            return this;
        }

        public Builder setHealthCheck(HealthCheckResponse healthCheck) {
            this.healthCheck = Objects.requireNonNull(healthCheck);
            return this;
        }

        public Builder setInboundServices(List<String> inboundServices) {
            this.inboundServices = Objects.requireNonNull(inboundServices);
            return this;
        }

        public Builder setInstanceClass(String instanceClass) {
            this.instanceClass = Objects.requireNonNull(instanceClass);
            return this;
        }

        public Builder setLibraries(List<LibraryResponse> libraries) {
            this.libraries = Objects.requireNonNull(libraries);
            return this;
        }

        public Builder setLivenessCheck(LivenessCheckResponse livenessCheck) {
            this.livenessCheck = Objects.requireNonNull(livenessCheck);
            return this;
        }

        public Builder setManualScaling(ManualScalingResponse manualScaling) {
            this.manualScaling = Objects.requireNonNull(manualScaling);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetwork(NetworkResponse network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setNobuildFilesRegex(String nobuildFilesRegex) {
            this.nobuildFilesRegex = Objects.requireNonNull(nobuildFilesRegex);
            return this;
        }

        public Builder setReadinessCheck(ReadinessCheckResponse readinessCheck) {
            this.readinessCheck = Objects.requireNonNull(readinessCheck);
            return this;
        }

        public Builder setResources(ResourcesResponse resources) {
            this.resources = Objects.requireNonNull(resources);
            return this;
        }

        public Builder setRuntime(String runtime) {
            this.runtime = Objects.requireNonNull(runtime);
            return this;
        }

        public Builder setRuntimeApiVersion(String runtimeApiVersion) {
            this.runtimeApiVersion = Objects.requireNonNull(runtimeApiVersion);
            return this;
        }

        public Builder setRuntimeChannel(String runtimeChannel) {
            this.runtimeChannel = Objects.requireNonNull(runtimeChannel);
            return this;
        }

        public Builder setRuntimeMainExecutablePath(String runtimeMainExecutablePath) {
            this.runtimeMainExecutablePath = Objects.requireNonNull(runtimeMainExecutablePath);
            return this;
        }

        public Builder setServiceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }

        public Builder setServingStatus(String servingStatus) {
            this.servingStatus = Objects.requireNonNull(servingStatus);
            return this;
        }

        public Builder setThreadsafe(Boolean threadsafe) {
            this.threadsafe = Objects.requireNonNull(threadsafe);
            return this;
        }

        public Builder setVersionUrl(String versionUrl) {
            this.versionUrl = Objects.requireNonNull(versionUrl);
            return this;
        }

        public Builder setVm(Boolean vm) {
            this.vm = Objects.requireNonNull(vm);
            return this;
        }

        public Builder setVpcAccessConnector(VpcAccessConnectorResponse vpcAccessConnector) {
            this.vpcAccessConnector = Objects.requireNonNull(vpcAccessConnector);
            return this;
        }

        public GetVersionResult build() {
            return new GetVersionResult(apiConfig, automaticScaling, basicScaling, betaSettings, buildEnvVariables, createTime, createdBy, defaultExpiration, deployment, diskUsageBytes, endpointsApiService, entrypoint, env, envVariables, errorHandlers, handlers, healthCheck, inboundServices, instanceClass, libraries, livenessCheck, manualScaling, name, network, nobuildFilesRegex, readinessCheck, resources, runtime, runtimeApiVersion, runtimeChannel, runtimeMainExecutablePath, serviceAccount, servingStatus, threadsafe, versionUrl, vm, vpcAccessConnector);
        }
    }
}
