// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.healthcare_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetAttributeDefinitionResult {
    private final List<String> allowedValues;
    private final String category;
    private final List<String> consentDefaultValues;
    private final String dataMappingDefaultValue;
    private final String description;
    private final String name;

    @OutputCustomType.Constructor({"allowedValues","category","consentDefaultValues","dataMappingDefaultValue","description","name"})
    private GetAttributeDefinitionResult(
        List<String> allowedValues,
        String category,
        List<String> consentDefaultValues,
        String dataMappingDefaultValue,
        String description,
        String name) {
        this.allowedValues = Objects.requireNonNull(allowedValues);
        this.category = Objects.requireNonNull(category);
        this.consentDefaultValues = Objects.requireNonNull(consentDefaultValues);
        this.dataMappingDefaultValue = Objects.requireNonNull(dataMappingDefaultValue);
        this.description = Objects.requireNonNull(description);
        this.name = Objects.requireNonNull(name);
    }

    public List<String> getAllowedValues() {
        return this.allowedValues;
    }
    public String getCategory() {
        return this.category;
    }
    public List<String> getConsentDefaultValues() {
        return this.consentDefaultValues;
    }
    public String getDataMappingDefaultValue() {
        return this.dataMappingDefaultValue;
    }
    public String getDescription() {
        return this.description;
    }
    public String getName() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAttributeDefinitionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> allowedValues;
        private String category;
        private List<String> consentDefaultValues;
        private String dataMappingDefaultValue;
        private String description;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAttributeDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedValues = defaults.allowedValues;
    	      this.category = defaults.category;
    	      this.consentDefaultValues = defaults.consentDefaultValues;
    	      this.dataMappingDefaultValue = defaults.dataMappingDefaultValue;
    	      this.description = defaults.description;
    	      this.name = defaults.name;
        }

        public Builder setAllowedValues(List<String> allowedValues) {
            this.allowedValues = Objects.requireNonNull(allowedValues);
            return this;
        }

        public Builder setCategory(String category) {
            this.category = Objects.requireNonNull(category);
            return this;
        }

        public Builder setConsentDefaultValues(List<String> consentDefaultValues) {
            this.consentDefaultValues = Objects.requireNonNull(consentDefaultValues);
            return this;
        }

        public Builder setDataMappingDefaultValue(String dataMappingDefaultValue) {
            this.dataMappingDefaultValue = Objects.requireNonNull(dataMappingDefaultValue);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public GetAttributeDefinitionResult build() {
            return new GetAttributeDefinitionResult(allowedValues, category, consentDefaultValues, dataMappingDefaultValue, description, name);
        }
    }
}
