// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class PageResponse {
    private final String content;
    private final String name;
    private final List<PageResponse> subpages;

    @OutputCustomType.Constructor({"content","name","subpages"})
    private PageResponse(
        String content,
        String name,
        List<PageResponse> subpages) {
        this.content = Objects.requireNonNull(content);
        this.name = Objects.requireNonNull(name);
        this.subpages = Objects.requireNonNull(subpages);
    }

    public String getContent() {
        return this.content;
    }
    public String getName() {
        return this.name;
    }
    public List<PageResponse> getSubpages() {
        return this.subpages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String content;
        private String name;
        private List<PageResponse> subpages;

        public Builder() {
    	      // Empty
        }

        public Builder(PageResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.name = defaults.name;
    	      this.subpages = defaults.subpages;
        }

        public Builder setContent(String content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSubpages(List<PageResponse> subpages) {
            this.subpages = Objects.requireNonNull(subpages);
            return this;
        }

        public PageResponse build() {
            return new PageResponse(content, name, subpages);
        }
    }
}
