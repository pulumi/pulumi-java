// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v3.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.dialogflow_v3.enums.GoogleCloudDialogflowCxV3ExperimentResultMetricCountType;
import io.pulumi.googlenative.dialogflow_v3.enums.GoogleCloudDialogflowCxV3ExperimentResultMetricType;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs;
import java.lang.Double;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Metric and corresponding confidence intervals.
 * 
 */
public final class GoogleCloudDialogflowCxV3ExperimentResultMetricArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDialogflowCxV3ExperimentResultMetricArgs Empty = new GoogleCloudDialogflowCxV3ExperimentResultMetricArgs();

    /**
     * The probability that the treatment is better than all other treatments in the experiment
     * 
     */
    @Import(name="confidenceInterval")
      private final @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs> confidenceInterval;

    public Output<GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs> confidenceInterval() {
        return this.confidenceInterval == null ? Codegen.empty() : this.confidenceInterval;
    }

    /**
     * Count value of a metric.
     * 
     */
    @Import(name="count")
      private final @Nullable Output<Double> count;

    public Output<Double> count() {
        return this.count == null ? Codegen.empty() : this.count;
    }

    /**
     * Count-based metric type. Only one of type or count_type is specified in each Metric.
     * 
     */
    @Import(name="countType")
      private final @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricCountType> countType;

    public Output<GoogleCloudDialogflowCxV3ExperimentResultMetricCountType> countType() {
        return this.countType == null ? Codegen.empty() : this.countType;
    }

    /**
     * Ratio value of a metric.
     * 
     */
    @Import(name="ratio")
      private final @Nullable Output<Double> ratio;

    public Output<Double> ratio() {
        return this.ratio == null ? Codegen.empty() : this.ratio;
    }

    /**
     * Ratio-based metric type. Only one of type or count_type is specified in each Metric.
     * 
     */
    @Import(name="type")
      private final @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricType> type;

    public Output<GoogleCloudDialogflowCxV3ExperimentResultMetricType> type() {
        return this.type == null ? Codegen.empty() : this.type;
    }

    public GoogleCloudDialogflowCxV3ExperimentResultMetricArgs(
        @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs> confidenceInterval,
        @Nullable Output<Double> count,
        @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricCountType> countType,
        @Nullable Output<Double> ratio,
        @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricType> type) {
        this.confidenceInterval = confidenceInterval;
        this.count = count;
        this.countType = countType;
        this.ratio = ratio;
        this.type = type;
    }

    private GoogleCloudDialogflowCxV3ExperimentResultMetricArgs() {
        this.confidenceInterval = Codegen.empty();
        this.count = Codegen.empty();
        this.countType = Codegen.empty();
        this.ratio = Codegen.empty();
        this.type = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDialogflowCxV3ExperimentResultMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs> confidenceInterval;
        private @Nullable Output<Double> count;
        private @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricCountType> countType;
        private @Nullable Output<Double> ratio;
        private @Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricType> type;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDialogflowCxV3ExperimentResultMetricArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.confidenceInterval = defaults.confidenceInterval;
    	      this.count = defaults.count;
    	      this.countType = defaults.countType;
    	      this.ratio = defaults.ratio;
    	      this.type = defaults.type;
        }

        public Builder confidenceInterval(@Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs> confidenceInterval) {
            this.confidenceInterval = confidenceInterval;
            return this;
        }
        public Builder confidenceInterval(@Nullable GoogleCloudDialogflowCxV3ExperimentResultConfidenceIntervalArgs confidenceInterval) {
            this.confidenceInterval = Codegen.ofNullable(confidenceInterval);
            return this;
        }
        public Builder count(@Nullable Output<Double> count) {
            this.count = count;
            return this;
        }
        public Builder count(@Nullable Double count) {
            this.count = Codegen.ofNullable(count);
            return this;
        }
        public Builder countType(@Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricCountType> countType) {
            this.countType = countType;
            return this;
        }
        public Builder countType(@Nullable GoogleCloudDialogflowCxV3ExperimentResultMetricCountType countType) {
            this.countType = Codegen.ofNullable(countType);
            return this;
        }
        public Builder ratio(@Nullable Output<Double> ratio) {
            this.ratio = ratio;
            return this;
        }
        public Builder ratio(@Nullable Double ratio) {
            this.ratio = Codegen.ofNullable(ratio);
            return this;
        }
        public Builder type(@Nullable Output<GoogleCloudDialogflowCxV3ExperimentResultMetricType> type) {
            this.type = type;
            return this;
        }
        public Builder type(@Nullable GoogleCloudDialogflowCxV3ExperimentResultMetricType type) {
            this.type = Codegen.ofNullable(type);
            return this;
        }        public GoogleCloudDialogflowCxV3ExperimentResultMetricArgs build() {
            return new GoogleCloudDialogflowCxV3ExperimentResultMetricArgs(confidenceInterval, count, countType, ratio, type);
        }
    }
}
