// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.container_v1.enums.CloudRunConfigLoadBalancerType;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Configuration options for the Cloud Run feature.
 * 
 */
public final class CloudRunConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final CloudRunConfigArgs Empty = new CloudRunConfigArgs();

    /**
     * Whether Cloud Run addon is enabled for this cluster.
     * 
     */
    @Import(name="disabled")
      private final @Nullable Output<Boolean> disabled;

    public Output<Boolean> getDisabled() {
        return this.disabled == null ? Codegen.empty() : this.disabled;
    }

    /**
     * Which load balancer type is installed for Cloud Run.
     * 
     */
    @Import(name="loadBalancerType")
      private final @Nullable Output<CloudRunConfigLoadBalancerType> loadBalancerType;

    public Output<CloudRunConfigLoadBalancerType> getLoadBalancerType() {
        return this.loadBalancerType == null ? Codegen.empty() : this.loadBalancerType;
    }

    public CloudRunConfigArgs(
        @Nullable Output<Boolean> disabled,
        @Nullable Output<CloudRunConfigLoadBalancerType> loadBalancerType) {
        this.disabled = disabled;
        this.loadBalancerType = loadBalancerType;
    }

    private CloudRunConfigArgs() {
        this.disabled = Codegen.empty();
        this.loadBalancerType = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudRunConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> disabled;
        private @Nullable Output<CloudRunConfigLoadBalancerType> loadBalancerType;

        public Builder() {
    	      // Empty
        }

        public Builder(CloudRunConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disabled = defaults.disabled;
    	      this.loadBalancerType = defaults.loadBalancerType;
        }

        public Builder disabled(@Nullable Output<Boolean> disabled) {
            this.disabled = disabled;
            return this;
        }
        public Builder disabled(@Nullable Boolean disabled) {
            this.disabled = Codegen.ofNullable(disabled);
            return this;
        }
        public Builder loadBalancerType(@Nullable Output<CloudRunConfigLoadBalancerType> loadBalancerType) {
            this.loadBalancerType = loadBalancerType;
            return this;
        }
        public Builder loadBalancerType(@Nullable CloudRunConfigLoadBalancerType loadBalancerType) {
            this.loadBalancerType = Codegen.ofNullable(loadBalancerType);
            return this;
        }        public CloudRunConfigArgs build() {
            return new CloudRunConfigArgs(disabled, loadBalancerType);
        }
    }
}
