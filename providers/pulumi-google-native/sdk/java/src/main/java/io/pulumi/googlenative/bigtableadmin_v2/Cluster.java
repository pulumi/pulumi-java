// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigtableadmin_v2;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.bigtableadmin_v2.ClusterArgs;
import io.pulumi.googlenative.bigtableadmin_v2.outputs.ClusterConfigResponse;
import io.pulumi.googlenative.bigtableadmin_v2.outputs.EncryptionConfigResponse;
import java.lang.Integer;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Creates a cluster within an instance. Note that exactly one of Cluster.serve_nodes and Cluster.cluster_config.cluster_autoscaling_config can be set. If serve_nodes is set to non-zero, then the cluster is manually scaled. If cluster_config.cluster_autoscaling_config is non-empty, then autoscaling is enabled.
 * 
 */
@ResourceType(type="google-native:bigtableadmin/v2:Cluster")
public class Cluster extends io.pulumi.resources.CustomResource {
    /**
     * Configuration for this cluster.
     * 
     */
    @OutputExport(name="clusterConfig", type=ClusterConfigResponse.class, parameters={})
    private Output<ClusterConfigResponse> clusterConfig;

    /**
     * @return Configuration for this cluster.
     * 
     */
    public Output<ClusterConfigResponse> getClusterConfig() {
        return this.clusterConfig;
    }
    /**
     * Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.
     * 
     */
    @OutputExport(name="defaultStorageType", type=String.class, parameters={})
    private Output<String> defaultStorageType;

    /**
     * @return Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.
     * 
     */
    public Output<String> getDefaultStorageType() {
        return this.defaultStorageType;
    }
    /**
     * Immutable. The encryption configuration for CMEK-protected clusters.
     * 
     */
    @OutputExport(name="encryptionConfig", type=EncryptionConfigResponse.class, parameters={})
    private Output<EncryptionConfigResponse> encryptionConfig;

    /**
     * @return Immutable. The encryption configuration for CMEK-protected clusters.
     * 
     */
    public Output<EncryptionConfigResponse> getEncryptionConfig() {
        return this.encryptionConfig;
    }
    /**
     * Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`.
     * 
     */
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    /**
     * @return Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`.
     * 
     */
    public Output<String> getLocation() {
        return this.location;
    }
    /**
     * The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance.
     * 
     */
    @OutputExport(name="serveNodes", type=Integer.class, parameters={})
    private Output<Integer> serveNodes;

    /**
     * @return The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance.
     * 
     */
    public Output<Integer> getServeNodes() {
        return this.serveNodes;
    }
    /**
     * The current state of the cluster.
     * 
     */
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current state of the cluster.
     * 
     */
    public Output<String> getState() {
        return this.state;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Cluster(String name) {
        this(name, ClusterArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Cluster(String name, ClusterArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Cluster(String name, ClusterArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:bigtableadmin/v2:Cluster", name, args == null ? ClusterArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Cluster(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:bigtableadmin/v2:Cluster", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Cluster get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Cluster(name, id, options);
    }
}
