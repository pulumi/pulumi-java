// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dlp_v2.enums.GooglePrivacyDlpV2CustomInfoTypeExclusionType;
import io.pulumi.googlenative.dlp_v2.enums.GooglePrivacyDlpV2CustomInfoTypeLikelihood;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2DetectionRuleArgs;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2DictionaryArgs;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InfoTypeArgs;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2RegexArgs;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2StoredTypeArgs;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2SurrogateTypeArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Custom information type provided by the user. Used to find domain-specific sensitive information configurable to the data in question.
 * 
 */
public final class GooglePrivacyDlpV2CustomInfoTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2CustomInfoTypeArgs Empty = new GooglePrivacyDlpV2CustomInfoTypeArgs();

    /**
     * Set of detection rules to apply to all findings of this CustomInfoType. Rules are applied in order that they are specified. Not supported for the `surrogate_type` CustomInfoType.
     * 
     */
    @InputImport(name="detectionRules")
      private final @Nullable Output<List<GooglePrivacyDlpV2DetectionRuleArgs>> detectionRules;

    public Output<List<GooglePrivacyDlpV2DetectionRuleArgs>> getDetectionRules() {
        return this.detectionRules == null ? Output.empty() : this.detectionRules;
    }

    /**
     * A list of phrases to detect as a CustomInfoType.
     * 
     */
    @InputImport(name="dictionary")
      private final @Nullable Output<GooglePrivacyDlpV2DictionaryArgs> dictionary;

    public Output<GooglePrivacyDlpV2DictionaryArgs> getDictionary() {
        return this.dictionary == null ? Output.empty() : this.dictionary;
    }

    /**
     * If set to EXCLUSION_TYPE_EXCLUDE this infoType will not cause a finding to be returned. It still can be used for rules matching.
     * 
     */
    @InputImport(name="exclusionType")
      private final @Nullable Output<GooglePrivacyDlpV2CustomInfoTypeExclusionType> exclusionType;

    public Output<GooglePrivacyDlpV2CustomInfoTypeExclusionType> getExclusionType() {
        return this.exclusionType == null ? Output.empty() : this.exclusionType;
    }

    /**
     * CustomInfoType can either be a new infoType, or an extension of built-in infoType, when the name matches one of existing infoTypes and that infoType is specified in `InspectContent.info_types` field. Specifying the latter adds findings to the one detected by the system. If built-in info type is not specified in `InspectContent.info_types` list then the name is treated as a custom info type.
     * 
     */
    @InputImport(name="infoType")
      private final @Nullable Output<GooglePrivacyDlpV2InfoTypeArgs> infoType;

    public Output<GooglePrivacyDlpV2InfoTypeArgs> getInfoType() {
        return this.infoType == null ? Output.empty() : this.infoType;
    }

    /**
     * Likelihood to return for this CustomInfoType. This base value can be altered by a detection rule if the finding meets the criteria specified by the rule. Defaults to `VERY_LIKELY` if not specified.
     * 
     */
    @InputImport(name="likelihood")
      private final @Nullable Output<GooglePrivacyDlpV2CustomInfoTypeLikelihood> likelihood;

    public Output<GooglePrivacyDlpV2CustomInfoTypeLikelihood> getLikelihood() {
        return this.likelihood == null ? Output.empty() : this.likelihood;
    }

    /**
     * Regular expression based CustomInfoType.
     * 
     */
    @InputImport(name="regex")
      private final @Nullable Output<GooglePrivacyDlpV2RegexArgs> regex;

    public Output<GooglePrivacyDlpV2RegexArgs> getRegex() {
        return this.regex == null ? Output.empty() : this.regex;
    }

    /**
     * Load an existing `StoredInfoType` resource for use in `InspectDataSource`. Not currently supported in `InspectContent`.
     * 
     */
    @InputImport(name="storedType")
      private final @Nullable Output<GooglePrivacyDlpV2StoredTypeArgs> storedType;

    public Output<GooglePrivacyDlpV2StoredTypeArgs> getStoredType() {
        return this.storedType == null ? Output.empty() : this.storedType;
    }

    /**
     * Message for detecting output from deidentification transformations that support reversing.
     * 
     */
    @InputImport(name="surrogateType")
      private final @Nullable Output<GooglePrivacyDlpV2SurrogateTypeArgs> surrogateType;

    public Output<GooglePrivacyDlpV2SurrogateTypeArgs> getSurrogateType() {
        return this.surrogateType == null ? Output.empty() : this.surrogateType;
    }

    public GooglePrivacyDlpV2CustomInfoTypeArgs(
        @Nullable Output<List<GooglePrivacyDlpV2DetectionRuleArgs>> detectionRules,
        @Nullable Output<GooglePrivacyDlpV2DictionaryArgs> dictionary,
        @Nullable Output<GooglePrivacyDlpV2CustomInfoTypeExclusionType> exclusionType,
        @Nullable Output<GooglePrivacyDlpV2InfoTypeArgs> infoType,
        @Nullable Output<GooglePrivacyDlpV2CustomInfoTypeLikelihood> likelihood,
        @Nullable Output<GooglePrivacyDlpV2RegexArgs> regex,
        @Nullable Output<GooglePrivacyDlpV2StoredTypeArgs> storedType,
        @Nullable Output<GooglePrivacyDlpV2SurrogateTypeArgs> surrogateType) {
        this.detectionRules = detectionRules;
        this.dictionary = dictionary;
        this.exclusionType = exclusionType;
        this.infoType = infoType;
        this.likelihood = likelihood;
        this.regex = regex;
        this.storedType = storedType;
        this.surrogateType = surrogateType;
    }

    private GooglePrivacyDlpV2CustomInfoTypeArgs() {
        this.detectionRules = Output.empty();
        this.dictionary = Output.empty();
        this.exclusionType = Output.empty();
        this.infoType = Output.empty();
        this.likelihood = Output.empty();
        this.regex = Output.empty();
        this.storedType = Output.empty();
        this.surrogateType = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2CustomInfoTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<GooglePrivacyDlpV2DetectionRuleArgs>> detectionRules;
        private @Nullable Output<GooglePrivacyDlpV2DictionaryArgs> dictionary;
        private @Nullable Output<GooglePrivacyDlpV2CustomInfoTypeExclusionType> exclusionType;
        private @Nullable Output<GooglePrivacyDlpV2InfoTypeArgs> infoType;
        private @Nullable Output<GooglePrivacyDlpV2CustomInfoTypeLikelihood> likelihood;
        private @Nullable Output<GooglePrivacyDlpV2RegexArgs> regex;
        private @Nullable Output<GooglePrivacyDlpV2StoredTypeArgs> storedType;
        private @Nullable Output<GooglePrivacyDlpV2SurrogateTypeArgs> surrogateType;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2CustomInfoTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.detectionRules = defaults.detectionRules;
    	      this.dictionary = defaults.dictionary;
    	      this.exclusionType = defaults.exclusionType;
    	      this.infoType = defaults.infoType;
    	      this.likelihood = defaults.likelihood;
    	      this.regex = defaults.regex;
    	      this.storedType = defaults.storedType;
    	      this.surrogateType = defaults.surrogateType;
        }

        public Builder detectionRules(@Nullable Output<List<GooglePrivacyDlpV2DetectionRuleArgs>> detectionRules) {
            this.detectionRules = detectionRules;
            return this;
        }

        public Builder detectionRules(@Nullable List<GooglePrivacyDlpV2DetectionRuleArgs> detectionRules) {
            this.detectionRules = Output.ofNullable(detectionRules);
            return this;
        }

        public Builder dictionary(@Nullable Output<GooglePrivacyDlpV2DictionaryArgs> dictionary) {
            this.dictionary = dictionary;
            return this;
        }

        public Builder dictionary(@Nullable GooglePrivacyDlpV2DictionaryArgs dictionary) {
            this.dictionary = Output.ofNullable(dictionary);
            return this;
        }

        public Builder exclusionType(@Nullable Output<GooglePrivacyDlpV2CustomInfoTypeExclusionType> exclusionType) {
            this.exclusionType = exclusionType;
            return this;
        }

        public Builder exclusionType(@Nullable GooglePrivacyDlpV2CustomInfoTypeExclusionType exclusionType) {
            this.exclusionType = Output.ofNullable(exclusionType);
            return this;
        }

        public Builder infoType(@Nullable Output<GooglePrivacyDlpV2InfoTypeArgs> infoType) {
            this.infoType = infoType;
            return this;
        }

        public Builder infoType(@Nullable GooglePrivacyDlpV2InfoTypeArgs infoType) {
            this.infoType = Output.ofNullable(infoType);
            return this;
        }

        public Builder likelihood(@Nullable Output<GooglePrivacyDlpV2CustomInfoTypeLikelihood> likelihood) {
            this.likelihood = likelihood;
            return this;
        }

        public Builder likelihood(@Nullable GooglePrivacyDlpV2CustomInfoTypeLikelihood likelihood) {
            this.likelihood = Output.ofNullable(likelihood);
            return this;
        }

        public Builder regex(@Nullable Output<GooglePrivacyDlpV2RegexArgs> regex) {
            this.regex = regex;
            return this;
        }

        public Builder regex(@Nullable GooglePrivacyDlpV2RegexArgs regex) {
            this.regex = Output.ofNullable(regex);
            return this;
        }

        public Builder storedType(@Nullable Output<GooglePrivacyDlpV2StoredTypeArgs> storedType) {
            this.storedType = storedType;
            return this;
        }

        public Builder storedType(@Nullable GooglePrivacyDlpV2StoredTypeArgs storedType) {
            this.storedType = Output.ofNullable(storedType);
            return this;
        }

        public Builder surrogateType(@Nullable Output<GooglePrivacyDlpV2SurrogateTypeArgs> surrogateType) {
            this.surrogateType = surrogateType;
            return this;
        }

        public Builder surrogateType(@Nullable GooglePrivacyDlpV2SurrogateTypeArgs surrogateType) {
            this.surrogateType = Output.ofNullable(surrogateType);
            return this;
        }
        public GooglePrivacyDlpV2CustomInfoTypeArgs build() {
            return new GooglePrivacyDlpV2CustomInfoTypeArgs(detectionRules, dictionary, exclusionType, infoType, likelihood, regex, storedType, surrogateType);
        }
    }
}
