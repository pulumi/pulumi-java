// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.run_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.run_v2.inputs.GoogleCloudRunOpV2CloudSqlInstanceArgs;
import io.pulumi.googlenative.run_v2.inputs.GoogleCloudRunOpV2SecretVolumeSourceArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Volume represents a named volume in a container.
 * 
 */
public final class GoogleCloudRunOpV2VolumeArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudRunOpV2VolumeArgs Empty = new GoogleCloudRunOpV2VolumeArgs();

    /**
     * For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
     * 
     */
    @InputImport(name="cloudSqlInstance")
    private final @Nullable Input<GoogleCloudRunOpV2CloudSqlInstanceArgs> cloudSqlInstance;

    public Input<GoogleCloudRunOpV2CloudSqlInstanceArgs> getCloudSqlInstance() {
        return this.cloudSqlInstance == null ? Input.empty() : this.cloudSqlInstance;
    }

    /**
     * Volume's name.
     * 
     */
    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    /**
     * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * 
     */
    @InputImport(name="secret")
    private final @Nullable Input<GoogleCloudRunOpV2SecretVolumeSourceArgs> secret;

    public Input<GoogleCloudRunOpV2SecretVolumeSourceArgs> getSecret() {
        return this.secret == null ? Input.empty() : this.secret;
    }

    public GoogleCloudRunOpV2VolumeArgs(
        @Nullable Input<GoogleCloudRunOpV2CloudSqlInstanceArgs> cloudSqlInstance,
        Input<String> name,
        @Nullable Input<GoogleCloudRunOpV2SecretVolumeSourceArgs> secret) {
        this.cloudSqlInstance = cloudSqlInstance;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.secret = secret;
    }

    private GoogleCloudRunOpV2VolumeArgs() {
        this.cloudSqlInstance = Input.empty();
        this.name = Input.empty();
        this.secret = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRunOpV2VolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GoogleCloudRunOpV2CloudSqlInstanceArgs> cloudSqlInstance;
        private Input<String> name;
        private @Nullable Input<GoogleCloudRunOpV2SecretVolumeSourceArgs> secret;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRunOpV2VolumeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudSqlInstance = defaults.cloudSqlInstance;
    	      this.name = defaults.name;
    	      this.secret = defaults.secret;
        }

        public Builder setCloudSqlInstance(@Nullable Input<GoogleCloudRunOpV2CloudSqlInstanceArgs> cloudSqlInstance) {
            this.cloudSqlInstance = cloudSqlInstance;
            return this;
        }

        public Builder setCloudSqlInstance(@Nullable GoogleCloudRunOpV2CloudSqlInstanceArgs cloudSqlInstance) {
            this.cloudSqlInstance = Input.ofNullable(cloudSqlInstance);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public Builder setSecret(@Nullable Input<GoogleCloudRunOpV2SecretVolumeSourceArgs> secret) {
            this.secret = secret;
            return this;
        }

        public Builder setSecret(@Nullable GoogleCloudRunOpV2SecretVolumeSourceArgs secret) {
            this.secret = Input.ofNullable(secret);
            return this;
        }

        public GoogleCloudRunOpV2VolumeArgs build() {
            return new GoogleCloudRunOpV2VolumeArgs(cloudSqlInstance, name, secret);
        }
    }
}
