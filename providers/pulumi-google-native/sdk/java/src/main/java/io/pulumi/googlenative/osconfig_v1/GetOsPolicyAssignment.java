// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.osconfig_v1;

import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.osconfig_v1.inputs.GetOsPolicyAssignmentArgs;
import io.pulumi.googlenative.osconfig_v1.outputs.GetOsPolicyAssignmentResult;
import java.util.concurrent.CompletableFuture;
import javax.annotation.Nullable;

public class GetOsPolicyAssignment {
    private GetOsPolicyAssignment() {}
    public interface BuilderApplicator {
        public void apply(GetOsPolicyAssignmentArgs.Builder a);
    }
    private static GetOsPolicyAssignmentArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = GetOsPolicyAssignmentArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     * Retrieve an existing OS policy assignment. This method always returns the latest revision. In order to retrieve a previous revision of the assignment, also provide the revision ID in the `name` parameter.
 * 
     */
    public static CompletableFuture<GetOsPolicyAssignmentResult> invokeAsync(BuilderApplicator argsBuilder, @Nullable InvokeOptions options) {
        return invokeAsync(buildArgs(argsBuilder), Utilities.withVersion(options));
    }
    /**
         * Retrieve an existing OS policy assignment. This method always returns the latest revision. In order to retrieve a previous revision of the assignment, also provide the revision ID in the `name` parameter.
     * 
     */
    public static CompletableFuture<GetOsPolicyAssignmentResult> invokeAsync(GetOsPolicyAssignmentArgs args, @Nullable InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:osconfig/v1:getOsPolicyAssignment", TypeShape.of(GetOsPolicyAssignmentResult.class), args == null ? GetOsPolicyAssignmentArgs.Empty : args, Utilities.withVersion(options));
    }
}
