// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.containeranalysis_v1.inputs.FingerprintResponse;
import io.pulumi.googlenative.containeranalysis_v1.inputs.LayerResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ImageOccurrenceResponse extends io.pulumi.resources.InvokeArgs {

    public static final ImageOccurrenceResponse Empty = new ImageOccurrenceResponse();

    @InputImport(name="baseResourceUrl", required=true)
    private final String baseResourceUrl;

    public String getBaseResourceUrl() {
        return this.baseResourceUrl;
    }

    @InputImport(name="distance", required=true)
    private final Integer distance;

    public Integer getDistance() {
        return this.distance;
    }

    @InputImport(name="fingerprint", required=true)
    private final FingerprintResponse fingerprint;

    public FingerprintResponse getFingerprint() {
        return this.fingerprint;
    }

    @InputImport(name="layerInfo", required=true)
    private final List<LayerResponse> layerInfo;

    public List<LayerResponse> getLayerInfo() {
        return this.layerInfo;
    }

    public ImageOccurrenceResponse(
        String baseResourceUrl,
        Integer distance,
        FingerprintResponse fingerprint,
        List<LayerResponse> layerInfo) {
        this.baseResourceUrl = Objects.requireNonNull(baseResourceUrl, "expected parameter 'baseResourceUrl' to be non-null");
        this.distance = Objects.requireNonNull(distance, "expected parameter 'distance' to be non-null");
        this.fingerprint = Objects.requireNonNull(fingerprint, "expected parameter 'fingerprint' to be non-null");
        this.layerInfo = Objects.requireNonNull(layerInfo, "expected parameter 'layerInfo' to be non-null");
    }

    private ImageOccurrenceResponse() {
        this.baseResourceUrl = null;
        this.distance = null;
        this.fingerprint = null;
        this.layerInfo = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageOccurrenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String baseResourceUrl;
        private Integer distance;
        private FingerprintResponse fingerprint;
        private List<LayerResponse> layerInfo;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageOccurrenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baseResourceUrl = defaults.baseResourceUrl;
    	      this.distance = defaults.distance;
    	      this.fingerprint = defaults.fingerprint;
    	      this.layerInfo = defaults.layerInfo;
        }

        public Builder setBaseResourceUrl(String baseResourceUrl) {
            this.baseResourceUrl = Objects.requireNonNull(baseResourceUrl);
            return this;
        }

        public Builder setDistance(Integer distance) {
            this.distance = Objects.requireNonNull(distance);
            return this;
        }

        public Builder setFingerprint(FingerprintResponse fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }

        public Builder setLayerInfo(List<LayerResponse> layerInfo) {
            this.layerInfo = Objects.requireNonNull(layerInfo);
            return this;
        }

        public ImageOccurrenceResponse build() {
            return new ImageOccurrenceResponse(baseResourceUrl, distance, fingerprint, layerInfo);
        }
    }
}
