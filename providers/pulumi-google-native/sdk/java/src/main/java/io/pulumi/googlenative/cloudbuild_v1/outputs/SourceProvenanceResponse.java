// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudbuild_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.cloudbuild_v1.outputs.RepoSourceResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.StorageSourceManifestResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.StorageSourceResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class SourceProvenanceResponse {
    private final Map<String,String> fileHashes;
    private final RepoSourceResponse resolvedRepoSource;
    private final StorageSourceResponse resolvedStorageSource;
    private final StorageSourceManifestResponse resolvedStorageSourceManifest;

    @OutputCustomType.Constructor({"fileHashes","resolvedRepoSource","resolvedStorageSource","resolvedStorageSourceManifest"})
    private SourceProvenanceResponse(
        Map<String,String> fileHashes,
        RepoSourceResponse resolvedRepoSource,
        StorageSourceResponse resolvedStorageSource,
        StorageSourceManifestResponse resolvedStorageSourceManifest) {
        this.fileHashes = Objects.requireNonNull(fileHashes);
        this.resolvedRepoSource = Objects.requireNonNull(resolvedRepoSource);
        this.resolvedStorageSource = Objects.requireNonNull(resolvedStorageSource);
        this.resolvedStorageSourceManifest = Objects.requireNonNull(resolvedStorageSourceManifest);
    }

    public Map<String,String> getFileHashes() {
        return this.fileHashes;
    }
    public RepoSourceResponse getResolvedRepoSource() {
        return this.resolvedRepoSource;
    }
    public StorageSourceResponse getResolvedStorageSource() {
        return this.resolvedStorageSource;
    }
    public StorageSourceManifestResponse getResolvedStorageSourceManifest() {
        return this.resolvedStorageSourceManifest;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SourceProvenanceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> fileHashes;
        private RepoSourceResponse resolvedRepoSource;
        private StorageSourceResponse resolvedStorageSource;
        private StorageSourceManifestResponse resolvedStorageSourceManifest;

        public Builder() {
    	      // Empty
        }

        public Builder(SourceProvenanceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fileHashes = defaults.fileHashes;
    	      this.resolvedRepoSource = defaults.resolvedRepoSource;
    	      this.resolvedStorageSource = defaults.resolvedStorageSource;
    	      this.resolvedStorageSourceManifest = defaults.resolvedStorageSourceManifest;
        }

        public Builder setFileHashes(Map<String,String> fileHashes) {
            this.fileHashes = Objects.requireNonNull(fileHashes);
            return this;
        }

        public Builder setResolvedRepoSource(RepoSourceResponse resolvedRepoSource) {
            this.resolvedRepoSource = Objects.requireNonNull(resolvedRepoSource);
            return this;
        }

        public Builder setResolvedStorageSource(StorageSourceResponse resolvedStorageSource) {
            this.resolvedStorageSource = Objects.requireNonNull(resolvedStorageSource);
            return this;
        }

        public Builder setResolvedStorageSourceManifest(StorageSourceManifestResponse resolvedStorageSourceManifest) {
            this.resolvedStorageSourceManifest = Objects.requireNonNull(resolvedStorageSourceManifest);
            return this;
        }

        public SourceProvenanceResponse build() {
            return new SourceProvenanceResponse(fileHashes, resolvedRepoSource, resolvedStorageSource, resolvedStorageSourceManifest);
        }
    }
}
