// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.iam_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Represents an OpenId Connect 1.0 identity provider.
 * 
 */
public final class OidcResponse extends io.pulumi.resources.InvokeArgs {

    public static final OidcResponse Empty = new OidcResponse();

    /**
     * Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ```//iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/```
     * 
     */
    @InputImport(name="allowedAudiences", required=true)
    private final List<String> allowedAudiences;

    public List<String> getAllowedAudiences() {
        return this.allowedAudiences;
    }

    /**
     * The OIDC issuer URL. Must be an HTTPS endpoint.
     * 
     */
    @InputImport(name="issuerUri", required=true)
    private final String issuerUri;

    public String getIssuerUri() {
        return this.issuerUri;
    }

    public OidcResponse(
        List<String> allowedAudiences,
        String issuerUri) {
        this.allowedAudiences = Objects.requireNonNull(allowedAudiences, "expected parameter 'allowedAudiences' to be non-null");
        this.issuerUri = Objects.requireNonNull(issuerUri, "expected parameter 'issuerUri' to be non-null");
    }

    private OidcResponse() {
        this.allowedAudiences = List.of();
        this.issuerUri = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OidcResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> allowedAudiences;
        private String issuerUri;

        public Builder() {
    	      // Empty
        }

        public Builder(OidcResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedAudiences = defaults.allowedAudiences;
    	      this.issuerUri = defaults.issuerUri;
        }

        public Builder setAllowedAudiences(List<String> allowedAudiences) {
            this.allowedAudiences = Objects.requireNonNull(allowedAudiences);
            return this;
        }

        public Builder setIssuerUri(String issuerUri) {
            this.issuerUri = Objects.requireNonNull(issuerUri);
            return this;
        }

        public OidcResponse build() {
            return new OidcResponse(allowedAudiences, issuerUri);
        }
    }
}
