// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_alpha.outputs.AcceleratorConfigResponse;
import io.pulumi.googlenative.compute_alpha.outputs.MetadataResponse;
import io.pulumi.googlenative.compute_alpha.outputs.NetworkInterfaceResponse;
import io.pulumi.googlenative.compute_alpha.outputs.SavedAttachedDiskResponse;
import io.pulumi.googlenative.compute_alpha.outputs.SchedulingResponse;
import io.pulumi.googlenative.compute_alpha.outputs.ServiceAccountResponse;
import io.pulumi.googlenative.compute_alpha.outputs.TagsResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class SourceInstancePropertiesResponse {
    /**
     * Enables instances created based on this machine image to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.
     * 
     */
    private final Boolean canIpForward;
    /**
     * Whether the instance created from this machine image should be protected against deletion.
     * 
     */
    private final Boolean deletionProtection;
    /**
     * An optional text description for the instances that are created from this machine image.
     * 
     */
    private final String description;
    /**
     * An array of disks that are associated with the instances that are created from this machine image.
     * 
     */
    private final List<SavedAttachedDiskResponse> disks;
    /**
     * A list of guest accelerator cards' type and count to use for instances created from this machine image.
     * 
     */
    private final List<AcceleratorConfigResponse> guestAccelerators;
    /**
     * KeyRevocationActionType of the instance.
     * 
     */
    private final String keyRevocationActionType;
    /**
     * Labels to apply to instances that are created from this machine image.
     * 
     */
    private final Map<String,String> labels;
    /**
     * The machine type to use for instances that are created from this machine image.
     * 
     */
    private final String machineType;
    /**
     * The metadata key/value pairs to assign to instances that are created from this machine image. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information.
     * 
     */
    private final MetadataResponse metadata;
    /**
     * Minimum cpu/platform to be used by instances created from this machine image. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For more information, read Specifying a Minimum CPU Platform.
     * 
     */
    private final String minCpuPlatform;
    /**
     * An array of network access configurations for this interface.
     * 
     */
    private final List<NetworkInterfaceResponse> networkInterfaces;
    /**
     * PostKeyRevocationActionType of the instance.
     * 
     */
    private final String postKeyRevocationActionType;
    /**
     * Specifies the scheduling options for the instances that are created from this machine image.
     * 
     */
    private final SchedulingResponse scheduling;
    /**
     * A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this machine image. Use metadata queries to obtain the access tokens for these instances.
     * 
     */
    private final List<ServiceAccountResponse> serviceAccounts;
    /**
     * A list of tags to apply to the instances that are created from this machine image. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035.
     * 
     */
    private final TagsResponse tags;

    @OutputCustomType.Constructor({"canIpForward","deletionProtection","description","disks","guestAccelerators","keyRevocationActionType","labels","machineType","metadata","minCpuPlatform","networkInterfaces","postKeyRevocationActionType","scheduling","serviceAccounts","tags"})
    private SourceInstancePropertiesResponse(
        Boolean canIpForward,
        Boolean deletionProtection,
        String description,
        List<SavedAttachedDiskResponse> disks,
        List<AcceleratorConfigResponse> guestAccelerators,
        String keyRevocationActionType,
        Map<String,String> labels,
        String machineType,
        MetadataResponse metadata,
        String minCpuPlatform,
        List<NetworkInterfaceResponse> networkInterfaces,
        String postKeyRevocationActionType,
        SchedulingResponse scheduling,
        List<ServiceAccountResponse> serviceAccounts,
        TagsResponse tags) {
        this.canIpForward = canIpForward;
        this.deletionProtection = deletionProtection;
        this.description = description;
        this.disks = disks;
        this.guestAccelerators = guestAccelerators;
        this.keyRevocationActionType = keyRevocationActionType;
        this.labels = labels;
        this.machineType = machineType;
        this.metadata = metadata;
        this.minCpuPlatform = minCpuPlatform;
        this.networkInterfaces = networkInterfaces;
        this.postKeyRevocationActionType = postKeyRevocationActionType;
        this.scheduling = scheduling;
        this.serviceAccounts = serviceAccounts;
        this.tags = tags;
    }

    /**
     * Enables instances created based on this machine image to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding documentation for more information.
     * 
    */
    public Boolean getCanIpForward() {
        return this.canIpForward;
    }
    /**
     * Whether the instance created from this machine image should be protected against deletion.
     * 
    */
    public Boolean getDeletionProtection() {
        return this.deletionProtection;
    }
    /**
     * An optional text description for the instances that are created from this machine image.
     * 
    */
    public String getDescription() {
        return this.description;
    }
    /**
     * An array of disks that are associated with the instances that are created from this machine image.
     * 
    */
    public List<SavedAttachedDiskResponse> getDisks() {
        return this.disks;
    }
    /**
     * A list of guest accelerator cards' type and count to use for instances created from this machine image.
     * 
    */
    public List<AcceleratorConfigResponse> getGuestAccelerators() {
        return this.guestAccelerators;
    }
    /**
     * KeyRevocationActionType of the instance.
     * 
    */
    public String getKeyRevocationActionType() {
        return this.keyRevocationActionType;
    }
    /**
     * Labels to apply to instances that are created from this machine image.
     * 
    */
    public Map<String,String> getLabels() {
        return this.labels;
    }
    /**
     * The machine type to use for instances that are created from this machine image.
     * 
    */
    public String getMachineType() {
        return this.machineType;
    }
    /**
     * The metadata key/value pairs to assign to instances that are created from this machine image. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information.
     * 
    */
    public MetadataResponse getMetadata() {
        return this.metadata;
    }
    /**
     * Minimum cpu/platform to be used by instances created from this machine image. The instance may be scheduled on the specified or newer cpu/platform. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge". For more information, read Specifying a Minimum CPU Platform.
     * 
    */
    public String getMinCpuPlatform() {
        return this.minCpuPlatform;
    }
    /**
     * An array of network access configurations for this interface.
     * 
    */
    public List<NetworkInterfaceResponse> getNetworkInterfaces() {
        return this.networkInterfaces;
    }
    /**
     * PostKeyRevocationActionType of the instance.
     * 
    */
    public String getPostKeyRevocationActionType() {
        return this.postKeyRevocationActionType;
    }
    /**
     * Specifies the scheduling options for the instances that are created from this machine image.
     * 
    */
    public SchedulingResponse getScheduling() {
        return this.scheduling;
    }
    /**
     * A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this machine image. Use metadata queries to obtain the access tokens for these instances.
     * 
    */
    public List<ServiceAccountResponse> getServiceAccounts() {
        return this.serviceAccounts;
    }
    /**
     * A list of tags to apply to the instances that are created from this machine image. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035.
     * 
    */
    public TagsResponse getTags() {
        return this.tags;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SourceInstancePropertiesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean canIpForward;
        private Boolean deletionProtection;
        private String description;
        private List<SavedAttachedDiskResponse> disks;
        private List<AcceleratorConfigResponse> guestAccelerators;
        private String keyRevocationActionType;
        private Map<String,String> labels;
        private String machineType;
        private MetadataResponse metadata;
        private String minCpuPlatform;
        private List<NetworkInterfaceResponse> networkInterfaces;
        private String postKeyRevocationActionType;
        private SchedulingResponse scheduling;
        private List<ServiceAccountResponse> serviceAccounts;
        private TagsResponse tags;

        public Builder() {
    	      // Empty
        }

        public Builder(SourceInstancePropertiesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.canIpForward = defaults.canIpForward;
    	      this.deletionProtection = defaults.deletionProtection;
    	      this.description = defaults.description;
    	      this.disks = defaults.disks;
    	      this.guestAccelerators = defaults.guestAccelerators;
    	      this.keyRevocationActionType = defaults.keyRevocationActionType;
    	      this.labels = defaults.labels;
    	      this.machineType = defaults.machineType;
    	      this.metadata = defaults.metadata;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.postKeyRevocationActionType = defaults.postKeyRevocationActionType;
    	      this.scheduling = defaults.scheduling;
    	      this.serviceAccounts = defaults.serviceAccounts;
    	      this.tags = defaults.tags;
        }

        public Builder setCanIpForward(Boolean canIpForward) {
            this.canIpForward = Objects.requireNonNull(canIpForward);
            return this;
        }

        public Builder setDeletionProtection(Boolean deletionProtection) {
            this.deletionProtection = Objects.requireNonNull(deletionProtection);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDisks(List<SavedAttachedDiskResponse> disks) {
            this.disks = Objects.requireNonNull(disks);
            return this;
        }

        public Builder setGuestAccelerators(List<AcceleratorConfigResponse> guestAccelerators) {
            this.guestAccelerators = Objects.requireNonNull(guestAccelerators);
            return this;
        }

        public Builder setKeyRevocationActionType(String keyRevocationActionType) {
            this.keyRevocationActionType = Objects.requireNonNull(keyRevocationActionType);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setMachineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }

        public Builder setMetadata(MetadataResponse metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }

        public Builder setMinCpuPlatform(String minCpuPlatform) {
            this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
            return this;
        }

        public Builder setNetworkInterfaces(List<NetworkInterfaceResponse> networkInterfaces) {
            this.networkInterfaces = Objects.requireNonNull(networkInterfaces);
            return this;
        }

        public Builder setPostKeyRevocationActionType(String postKeyRevocationActionType) {
            this.postKeyRevocationActionType = Objects.requireNonNull(postKeyRevocationActionType);
            return this;
        }

        public Builder setScheduling(SchedulingResponse scheduling) {
            this.scheduling = Objects.requireNonNull(scheduling);
            return this;
        }

        public Builder setServiceAccounts(List<ServiceAccountResponse> serviceAccounts) {
            this.serviceAccounts = Objects.requireNonNull(serviceAccounts);
            return this;
        }

        public Builder setTags(TagsResponse tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }
        public SourceInstancePropertiesResponse build() {
            return new SourceInstancePropertiesResponse(canIpForward, deletionProtection, description, disks, guestAccelerators, keyRevocationActionType, labels, machineType, metadata, minCpuPlatform, networkInterfaces, postKeyRevocationActionType, scheduling, serviceAccounts, tags);
        }
    }
}
