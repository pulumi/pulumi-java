// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.accesscontextmanager_v1beta.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.accesscontextmanager_v1beta.inputs.VpcAccessibleServicesResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ServicePerimeterConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final ServicePerimeterConfigResponse Empty = new ServicePerimeterConfigResponse();

    @InputImport(name="accessLevels", required=true)
    private final List<String> accessLevels;

    public List<String> getAccessLevels() {
        return this.accessLevels;
    }

    @InputImport(name="resources", required=true)
    private final List<String> resources;

    public List<String> getResources() {
        return this.resources;
    }

    @InputImport(name="restrictedServices", required=true)
    private final List<String> restrictedServices;

    public List<String> getRestrictedServices() {
        return this.restrictedServices;
    }

    @InputImport(name="vpcAccessibleServices", required=true)
    private final VpcAccessibleServicesResponse vpcAccessibleServices;

    public VpcAccessibleServicesResponse getVpcAccessibleServices() {
        return this.vpcAccessibleServices;
    }

    public ServicePerimeterConfigResponse(
        List<String> accessLevels,
        List<String> resources,
        List<String> restrictedServices,
        VpcAccessibleServicesResponse vpcAccessibleServices) {
        this.accessLevels = Objects.requireNonNull(accessLevels, "expected parameter 'accessLevels' to be non-null");
        this.resources = Objects.requireNonNull(resources, "expected parameter 'resources' to be non-null");
        this.restrictedServices = Objects.requireNonNull(restrictedServices, "expected parameter 'restrictedServices' to be non-null");
        this.vpcAccessibleServices = Objects.requireNonNull(vpcAccessibleServices, "expected parameter 'vpcAccessibleServices' to be non-null");
    }

    private ServicePerimeterConfigResponse() {
        this.accessLevels = List.of();
        this.resources = List.of();
        this.restrictedServices = List.of();
        this.vpcAccessibleServices = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicePerimeterConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> accessLevels;
        private List<String> resources;
        private List<String> restrictedServices;
        private VpcAccessibleServicesResponse vpcAccessibleServices;

        public Builder() {
    	      // Empty
        }

        public Builder(ServicePerimeterConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevels = defaults.accessLevels;
    	      this.resources = defaults.resources;
    	      this.restrictedServices = defaults.restrictedServices;
    	      this.vpcAccessibleServices = defaults.vpcAccessibleServices;
        }

        public Builder setAccessLevels(List<String> accessLevels) {
            this.accessLevels = Objects.requireNonNull(accessLevels);
            return this;
        }

        public Builder setResources(List<String> resources) {
            this.resources = Objects.requireNonNull(resources);
            return this;
        }

        public Builder setRestrictedServices(List<String> restrictedServices) {
            this.restrictedServices = Objects.requireNonNull(restrictedServices);
            return this;
        }

        public Builder setVpcAccessibleServices(VpcAccessibleServicesResponse vpcAccessibleServices) {
            this.vpcAccessibleServices = Objects.requireNonNull(vpcAccessibleServices);
            return this;
        }

        public ServicePerimeterConfigResponse build() {
            return new ServicePerimeterConfigResponse(accessLevels, resources, restrictedServices, vpcAccessibleServices);
        }
    }
}
