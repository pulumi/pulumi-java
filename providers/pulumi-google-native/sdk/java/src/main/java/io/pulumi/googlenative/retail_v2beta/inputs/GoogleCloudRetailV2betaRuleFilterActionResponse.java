// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.retail_v2beta.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * * Rule Condition: - No Condition provided is a global match. - 1 or more Condition provided is combined with OR operator. * Action Input: The request query and filter that will be applied to the retrieved products, in addition to any filters already provided with the SearchRequest. The AND operator is used to combine the query's existing filters with the filter rule(s). NOTE: May result in 0 results when filters conflict. * Action Result: Filters the returned objects to be ONLY those that passed the filter.
 * 
 */
public final class GoogleCloudRetailV2betaRuleFilterActionResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudRetailV2betaRuleFilterActionResponse Empty = new GoogleCloudRetailV2betaRuleFilterActionResponse();

    /**
     * A filter to apply on the matching condition results. Supported features: * filter must be set. * Filter syntax is identical to SearchRequest.filter. See more details at the Retail Search [user guide](/retail/search/docs/filter-and-order#filter). * To filter products with product ID "product_1" or "product_2", and color "Red" or "Blue": *(id: ANY("product_1", "product_2")) * *AND * *(colorFamilies: ANY("Red", "Blue")) *
     * 
     */
    @InputImport(name="filter", required=true)
      private final String filter;

    public String getFilter() {
        return this.filter;
    }

    public GoogleCloudRetailV2betaRuleFilterActionResponse(String filter) {
        this.filter = Objects.requireNonNull(filter, "expected parameter 'filter' to be non-null");
    }

    private GoogleCloudRetailV2betaRuleFilterActionResponse() {
        this.filter = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRetailV2betaRuleFilterActionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String filter;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRetailV2betaRuleFilterActionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
        }

        public Builder setFilter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }
        public GoogleCloudRetailV2betaRuleFilterActionResponse build() {
            return new GoogleCloudRetailV2betaRuleFilterActionResponse(filter);
        }
    }
}
