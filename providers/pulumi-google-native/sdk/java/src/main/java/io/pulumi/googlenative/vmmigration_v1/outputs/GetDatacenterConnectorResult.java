// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.vmmigration_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.vmmigration_v1.outputs.StatusResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetDatacenterConnectorResult {
    /**
     * The communication channel between the datacenter connector and GCP.
     * 
     */
    private final String bucket;
    /**
     * The time the connector was created (as an API call, not when it was actually installed).
     * 
     */
    private final String createTime;
    /**
     * Provides details on the state of the Datacenter Connector in case of an error.
     * 
     */
    private final StatusResponse error;
    /**
     * The connector's name.
     * 
     */
    private final String name;
    /**
     * Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.
     * 
     */
    private final String registrationId;
    /**
     * The service account to use in the connector when communicating with the cloud.
     * 
     */
    private final String serviceAccount;
    /**
     * State of the DatacenterConnector, as determined by the health checks.
     * 
     */
    private final String state;
    /**
     * The time the state was last set.
     * 
     */
    private final String stateTime;
    /**
     * The last time the connector was updated with an API call.
     * 
     */
    private final String updateTime;
    /**
     * The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.
     * 
     */
    private final String version;

    @OutputCustomType.Constructor({"bucket","createTime","error","name","registrationId","serviceAccount","state","stateTime","updateTime","version"})
    private GetDatacenterConnectorResult(
        String bucket,
        String createTime,
        StatusResponse error,
        String name,
        String registrationId,
        String serviceAccount,
        String state,
        String stateTime,
        String updateTime,
        String version) {
        this.bucket = Objects.requireNonNull(bucket);
        this.createTime = Objects.requireNonNull(createTime);
        this.error = Objects.requireNonNull(error);
        this.name = Objects.requireNonNull(name);
        this.registrationId = Objects.requireNonNull(registrationId);
        this.serviceAccount = Objects.requireNonNull(serviceAccount);
        this.state = Objects.requireNonNull(state);
        this.stateTime = Objects.requireNonNull(stateTime);
        this.updateTime = Objects.requireNonNull(updateTime);
        this.version = Objects.requireNonNull(version);
    }

    /**
     * The communication channel between the datacenter connector and GCP.
     * 
    */
    public String getBucket() {
        return this.bucket;
    }
    /**
     * The time the connector was created (as an API call, not when it was actually installed).
     * 
    */
    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * Provides details on the state of the Datacenter Connector in case of an error.
     * 
    */
    public StatusResponse getError() {
        return this.error;
    }
    /**
     * The connector's name.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Immutable. A unique key for this connector. This key is internal to the OVA connector and is supplied with its creation during the registration process and can not be modified.
     * 
    */
    public String getRegistrationId() {
        return this.registrationId;
    }
    /**
     * The service account to use in the connector when communicating with the cloud.
     * 
    */
    public String getServiceAccount() {
        return this.serviceAccount;
    }
    /**
     * State of the DatacenterConnector, as determined by the health checks.
     * 
    */
    public String getState() {
        return this.state;
    }
    /**
     * The time the state was last set.
     * 
    */
    public String getStateTime() {
        return this.stateTime;
    }
    /**
     * The last time the connector was updated with an API call.
     * 
    */
    public String getUpdateTime() {
        return this.updateTime;
    }
    /**
     * The version running in the DatacenterConnector. This is supplied by the OVA connector during the registration process and can not be modified.
     * 
    */
    public String getVersion() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatacenterConnectorResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bucket;
        private String createTime;
        private StatusResponse error;
        private String name;
        private String registrationId;
        private String serviceAccount;
        private String state;
        private String stateTime;
        private String updateTime;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDatacenterConnectorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.createTime = defaults.createTime;
    	      this.error = defaults.error;
    	      this.name = defaults.name;
    	      this.registrationId = defaults.registrationId;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.state = defaults.state;
    	      this.stateTime = defaults.stateTime;
    	      this.updateTime = defaults.updateTime;
    	      this.version = defaults.version;
        }

        public Builder setBucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setError(StatusResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRegistrationId(String registrationId) {
            this.registrationId = Objects.requireNonNull(registrationId);
            return this;
        }

        public Builder setServiceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setStateTime(String stateTime) {
            this.stateTime = Objects.requireNonNull(stateTime);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public GetDatacenterConnectorResult build() {
            return new GetDatacenterConnectorResult(bucket, createTime, error, name, registrationId, serviceAccount, state, stateTime, updateTime, version);
        }
    }
}
