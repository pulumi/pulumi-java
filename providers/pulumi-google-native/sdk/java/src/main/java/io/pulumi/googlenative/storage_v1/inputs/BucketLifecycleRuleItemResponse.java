// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.storage_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.storage_v1.inputs.BucketLifecycleRuleItemActionResponse;
import io.pulumi.googlenative.storage_v1.inputs.BucketLifecycleRuleItemConditionResponse;
import java.util.Objects;


public final class BucketLifecycleRuleItemResponse extends io.pulumi.resources.InvokeArgs {

    public static final BucketLifecycleRuleItemResponse Empty = new BucketLifecycleRuleItemResponse();

    /**
     * The action to take.
     * 
     */
    @InputImport(name="action", required=true)
    private final BucketLifecycleRuleItemActionResponse action;

    public BucketLifecycleRuleItemActionResponse getAction() {
        return this.action;
    }

    /**
     * The condition(s) under which the action will be taken.
     * 
     */
    @InputImport(name="condition", required=true)
    private final BucketLifecycleRuleItemConditionResponse condition;

    public BucketLifecycleRuleItemConditionResponse getCondition() {
        return this.condition;
    }

    public BucketLifecycleRuleItemResponse(
        BucketLifecycleRuleItemActionResponse action,
        BucketLifecycleRuleItemConditionResponse condition) {
        this.action = Objects.requireNonNull(action, "expected parameter 'action' to be non-null");
        this.condition = Objects.requireNonNull(condition, "expected parameter 'condition' to be non-null");
    }

    private BucketLifecycleRuleItemResponse() {
        this.action = null;
        this.condition = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLifecycleRuleItemResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BucketLifecycleRuleItemActionResponse action;
        private BucketLifecycleRuleItemConditionResponse condition;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLifecycleRuleItemResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.condition = defaults.condition;
        }

        public Builder setAction(BucketLifecycleRuleItemActionResponse action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }

        public Builder setCondition(BucketLifecycleRuleItemConditionResponse condition) {
            this.condition = Objects.requireNonNull(condition);
            return this;
        }

        public BucketLifecycleRuleItemResponse build() {
            return new BucketLifecycleRuleItemResponse(action, condition);
        }
    }
}
