// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v3.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3EventHandlerArgs;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3FormArgs;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3FulfillmentArgs;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3TransitionRouteArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GoogleCloudDialogflowCxV3PageArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDialogflowCxV3PageArgs Empty = new GoogleCloudDialogflowCxV3PageArgs();

    @InputImport(name="displayName", required=true)
    private final Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName;
    }

    @InputImport(name="entryFulfillment")
    private final @Nullable Input<GoogleCloudDialogflowCxV3FulfillmentArgs> entryFulfillment;

    public Input<GoogleCloudDialogflowCxV3FulfillmentArgs> getEntryFulfillment() {
        return this.entryFulfillment == null ? Input.empty() : this.entryFulfillment;
    }

    @InputImport(name="eventHandlers")
    private final @Nullable Input<List<GoogleCloudDialogflowCxV3EventHandlerArgs>> eventHandlers;

    public Input<List<GoogleCloudDialogflowCxV3EventHandlerArgs>> getEventHandlers() {
        return this.eventHandlers == null ? Input.empty() : this.eventHandlers;
    }

    @InputImport(name="form")
    private final @Nullable Input<GoogleCloudDialogflowCxV3FormArgs> form;

    public Input<GoogleCloudDialogflowCxV3FormArgs> getForm() {
        return this.form == null ? Input.empty() : this.form;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="transitionRouteGroups")
    private final @Nullable Input<List<String>> transitionRouteGroups;

    public Input<List<String>> getTransitionRouteGroups() {
        return this.transitionRouteGroups == null ? Input.empty() : this.transitionRouteGroups;
    }

    @InputImport(name="transitionRoutes")
    private final @Nullable Input<List<GoogleCloudDialogflowCxV3TransitionRouteArgs>> transitionRoutes;

    public Input<List<GoogleCloudDialogflowCxV3TransitionRouteArgs>> getTransitionRoutes() {
        return this.transitionRoutes == null ? Input.empty() : this.transitionRoutes;
    }

    public GoogleCloudDialogflowCxV3PageArgs(
        Input<String> displayName,
        @Nullable Input<GoogleCloudDialogflowCxV3FulfillmentArgs> entryFulfillment,
        @Nullable Input<List<GoogleCloudDialogflowCxV3EventHandlerArgs>> eventHandlers,
        @Nullable Input<GoogleCloudDialogflowCxV3FormArgs> form,
        @Nullable Input<String> name,
        @Nullable Input<List<String>> transitionRouteGroups,
        @Nullable Input<List<GoogleCloudDialogflowCxV3TransitionRouteArgs>> transitionRoutes) {
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.entryFulfillment = entryFulfillment;
        this.eventHandlers = eventHandlers;
        this.form = form;
        this.name = name;
        this.transitionRouteGroups = transitionRouteGroups;
        this.transitionRoutes = transitionRoutes;
    }

    private GoogleCloudDialogflowCxV3PageArgs() {
        this.displayName = Input.empty();
        this.entryFulfillment = Input.empty();
        this.eventHandlers = Input.empty();
        this.form = Input.empty();
        this.name = Input.empty();
        this.transitionRouteGroups = Input.empty();
        this.transitionRoutes = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDialogflowCxV3PageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> displayName;
        private @Nullable Input<GoogleCloudDialogflowCxV3FulfillmentArgs> entryFulfillment;
        private @Nullable Input<List<GoogleCloudDialogflowCxV3EventHandlerArgs>> eventHandlers;
        private @Nullable Input<GoogleCloudDialogflowCxV3FormArgs> form;
        private @Nullable Input<String> name;
        private @Nullable Input<List<String>> transitionRouteGroups;
        private @Nullable Input<List<GoogleCloudDialogflowCxV3TransitionRouteArgs>> transitionRoutes;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDialogflowCxV3PageArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.entryFulfillment = defaults.entryFulfillment;
    	      this.eventHandlers = defaults.eventHandlers;
    	      this.form = defaults.form;
    	      this.name = defaults.name;
    	      this.transitionRouteGroups = defaults.transitionRouteGroups;
    	      this.transitionRoutes = defaults.transitionRoutes;
        }

        public Builder setDisplayName(Input<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Input.of(Objects.requireNonNull(displayName));
            return this;
        }

        public Builder setEntryFulfillment(@Nullable Input<GoogleCloudDialogflowCxV3FulfillmentArgs> entryFulfillment) {
            this.entryFulfillment = entryFulfillment;
            return this;
        }

        public Builder setEntryFulfillment(@Nullable GoogleCloudDialogflowCxV3FulfillmentArgs entryFulfillment) {
            this.entryFulfillment = Input.ofNullable(entryFulfillment);
            return this;
        }

        public Builder setEventHandlers(@Nullable Input<List<GoogleCloudDialogflowCxV3EventHandlerArgs>> eventHandlers) {
            this.eventHandlers = eventHandlers;
            return this;
        }

        public Builder setEventHandlers(@Nullable List<GoogleCloudDialogflowCxV3EventHandlerArgs> eventHandlers) {
            this.eventHandlers = Input.ofNullable(eventHandlers);
            return this;
        }

        public Builder setForm(@Nullable Input<GoogleCloudDialogflowCxV3FormArgs> form) {
            this.form = form;
            return this;
        }

        public Builder setForm(@Nullable GoogleCloudDialogflowCxV3FormArgs form) {
            this.form = Input.ofNullable(form);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setTransitionRouteGroups(@Nullable Input<List<String>> transitionRouteGroups) {
            this.transitionRouteGroups = transitionRouteGroups;
            return this;
        }

        public Builder setTransitionRouteGroups(@Nullable List<String> transitionRouteGroups) {
            this.transitionRouteGroups = Input.ofNullable(transitionRouteGroups);
            return this;
        }

        public Builder setTransitionRoutes(@Nullable Input<List<GoogleCloudDialogflowCxV3TransitionRouteArgs>> transitionRoutes) {
            this.transitionRoutes = transitionRoutes;
            return this;
        }

        public Builder setTransitionRoutes(@Nullable List<GoogleCloudDialogflowCxV3TransitionRouteArgs> transitionRoutes) {
            this.transitionRoutes = Input.ofNullable(transitionRoutes);
            return this;
        }

        public GoogleCloudDialogflowCxV3PageArgs build() {
            return new GoogleCloudDialogflowCxV3PageArgs(displayName, entryFulfillment, eventHandlers, form, name, transitionRouteGroups, transitionRoutes);
        }
    }
}
