// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.bigquery_v2.outputs.ModelReferenceResponse;
import io.pulumi.googlenative.bigquery_v2.outputs.TableReferenceResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class JobConfigurationExtractResponse {
    private final String compression;
    private final String destinationFormat;
    private final String destinationUri;
    private final List<String> destinationUris;
    private final String fieldDelimiter;
    private final Boolean printHeader;
    private final ModelReferenceResponse sourceModel;
    private final TableReferenceResponse sourceTable;
    private final Boolean useAvroLogicalTypes;

    @OutputCustomType.Constructor({"compression","destinationFormat","destinationUri","destinationUris","fieldDelimiter","printHeader","sourceModel","sourceTable","useAvroLogicalTypes"})
    private JobConfigurationExtractResponse(
        String compression,
        String destinationFormat,
        String destinationUri,
        List<String> destinationUris,
        String fieldDelimiter,
        Boolean printHeader,
        ModelReferenceResponse sourceModel,
        TableReferenceResponse sourceTable,
        Boolean useAvroLogicalTypes) {
        this.compression = Objects.requireNonNull(compression);
        this.destinationFormat = Objects.requireNonNull(destinationFormat);
        this.destinationUri = Objects.requireNonNull(destinationUri);
        this.destinationUris = Objects.requireNonNull(destinationUris);
        this.fieldDelimiter = Objects.requireNonNull(fieldDelimiter);
        this.printHeader = Objects.requireNonNull(printHeader);
        this.sourceModel = Objects.requireNonNull(sourceModel);
        this.sourceTable = Objects.requireNonNull(sourceTable);
        this.useAvroLogicalTypes = Objects.requireNonNull(useAvroLogicalTypes);
    }

    public String getCompression() {
        return this.compression;
    }
    public String getDestinationFormat() {
        return this.destinationFormat;
    }
    public String getDestinationUri() {
        return this.destinationUri;
    }
    public List<String> getDestinationUris() {
        return this.destinationUris;
    }
    public String getFieldDelimiter() {
        return this.fieldDelimiter;
    }
    public Boolean getPrintHeader() {
        return this.printHeader;
    }
    public ModelReferenceResponse getSourceModel() {
        return this.sourceModel;
    }
    public TableReferenceResponse getSourceTable() {
        return this.sourceTable;
    }
    public Boolean getUseAvroLogicalTypes() {
        return this.useAvroLogicalTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobConfigurationExtractResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compression;
        private String destinationFormat;
        private String destinationUri;
        private List<String> destinationUris;
        private String fieldDelimiter;
        private Boolean printHeader;
        private ModelReferenceResponse sourceModel;
        private TableReferenceResponse sourceTable;
        private Boolean useAvroLogicalTypes;

        public Builder() {
    	      // Empty
        }

        public Builder(JobConfigurationExtractResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compression = defaults.compression;
    	      this.destinationFormat = defaults.destinationFormat;
    	      this.destinationUri = defaults.destinationUri;
    	      this.destinationUris = defaults.destinationUris;
    	      this.fieldDelimiter = defaults.fieldDelimiter;
    	      this.printHeader = defaults.printHeader;
    	      this.sourceModel = defaults.sourceModel;
    	      this.sourceTable = defaults.sourceTable;
    	      this.useAvroLogicalTypes = defaults.useAvroLogicalTypes;
        }

        public Builder setCompression(String compression) {
            this.compression = Objects.requireNonNull(compression);
            return this;
        }

        public Builder setDestinationFormat(String destinationFormat) {
            this.destinationFormat = Objects.requireNonNull(destinationFormat);
            return this;
        }

        public Builder setDestinationUri(String destinationUri) {
            this.destinationUri = Objects.requireNonNull(destinationUri);
            return this;
        }

        public Builder setDestinationUris(List<String> destinationUris) {
            this.destinationUris = Objects.requireNonNull(destinationUris);
            return this;
        }

        public Builder setFieldDelimiter(String fieldDelimiter) {
            this.fieldDelimiter = Objects.requireNonNull(fieldDelimiter);
            return this;
        }

        public Builder setPrintHeader(Boolean printHeader) {
            this.printHeader = Objects.requireNonNull(printHeader);
            return this;
        }

        public Builder setSourceModel(ModelReferenceResponse sourceModel) {
            this.sourceModel = Objects.requireNonNull(sourceModel);
            return this;
        }

        public Builder setSourceTable(TableReferenceResponse sourceTable) {
            this.sourceTable = Objects.requireNonNull(sourceTable);
            return this;
        }

        public Builder setUseAvroLogicalTypes(Boolean useAvroLogicalTypes) {
            this.useAvroLogicalTypes = Objects.requireNonNull(useAvroLogicalTypes);
            return this;
        }

        public JobConfigurationExtractResponse build() {
            return new JobConfigurationExtractResponse(compression, destinationFormat, destinationUri, destinationUris, fieldDelimiter, printHeader, sourceModel, sourceTable, useAvroLogicalTypes);
        }
    }
}
