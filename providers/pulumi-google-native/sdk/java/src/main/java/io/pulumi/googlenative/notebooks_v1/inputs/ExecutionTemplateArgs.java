// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.notebooks_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.notebooks_v1.enums.ExecutionTemplateJobType;
import io.pulumi.googlenative.notebooks_v1.inputs.DataprocParametersArgs;
import io.pulumi.googlenative.notebooks_v1.inputs.SchedulerAcceleratorConfigArgs;
import io.pulumi.googlenative.notebooks_v1.inputs.VertexAIParametersArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ExecutionTemplateArgs extends io.pulumi.resources.ResourceArgs {

    public static final ExecutionTemplateArgs Empty = new ExecutionTemplateArgs();

    @InputImport(name="acceleratorConfig")
    private final @Nullable Input<SchedulerAcceleratorConfigArgs> acceleratorConfig;

    public Input<SchedulerAcceleratorConfigArgs> getAcceleratorConfig() {
        return this.acceleratorConfig == null ? Input.empty() : this.acceleratorConfig;
    }

    @InputImport(name="containerImageUri")
    private final @Nullable Input<String> containerImageUri;

    public Input<String> getContainerImageUri() {
        return this.containerImageUri == null ? Input.empty() : this.containerImageUri;
    }

    @InputImport(name="dataprocParameters")
    private final @Nullable Input<DataprocParametersArgs> dataprocParameters;

    public Input<DataprocParametersArgs> getDataprocParameters() {
        return this.dataprocParameters == null ? Input.empty() : this.dataprocParameters;
    }

    @InputImport(name="inputNotebookFile")
    private final @Nullable Input<String> inputNotebookFile;

    public Input<String> getInputNotebookFile() {
        return this.inputNotebookFile == null ? Input.empty() : this.inputNotebookFile;
    }

    @InputImport(name="jobType")
    private final @Nullable Input<ExecutionTemplateJobType> jobType;

    public Input<ExecutionTemplateJobType> getJobType() {
        return this.jobType == null ? Input.empty() : this.jobType;
    }

    @InputImport(name="kernelSpec")
    private final @Nullable Input<String> kernelSpec;

    public Input<String> getKernelSpec() {
        return this.kernelSpec == null ? Input.empty() : this.kernelSpec;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="masterType")
    private final @Nullable Input<String> masterType;

    public Input<String> getMasterType() {
        return this.masterType == null ? Input.empty() : this.masterType;
    }

    @InputImport(name="outputNotebookFolder")
    private final @Nullable Input<String> outputNotebookFolder;

    public Input<String> getOutputNotebookFolder() {
        return this.outputNotebookFolder == null ? Input.empty() : this.outputNotebookFolder;
    }

    @InputImport(name="parameters")
    private final @Nullable Input<String> parameters;

    public Input<String> getParameters() {
        return this.parameters == null ? Input.empty() : this.parameters;
    }

    @InputImport(name="paramsYamlFile")
    private final @Nullable Input<String> paramsYamlFile;

    public Input<String> getParamsYamlFile() {
        return this.paramsYamlFile == null ? Input.empty() : this.paramsYamlFile;
    }

    @InputImport(name="serviceAccount")
    private final @Nullable Input<String> serviceAccount;

    public Input<String> getServiceAccount() {
        return this.serviceAccount == null ? Input.empty() : this.serviceAccount;
    }

    @InputImport(name="vertexAiParameters")
    private final @Nullable Input<VertexAIParametersArgs> vertexAiParameters;

    public Input<VertexAIParametersArgs> getVertexAiParameters() {
        return this.vertexAiParameters == null ? Input.empty() : this.vertexAiParameters;
    }

    public ExecutionTemplateArgs(
        @Nullable Input<SchedulerAcceleratorConfigArgs> acceleratorConfig,
        @Nullable Input<String> containerImageUri,
        @Nullable Input<DataprocParametersArgs> dataprocParameters,
        @Nullable Input<String> inputNotebookFile,
        @Nullable Input<ExecutionTemplateJobType> jobType,
        @Nullable Input<String> kernelSpec,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> masterType,
        @Nullable Input<String> outputNotebookFolder,
        @Nullable Input<String> parameters,
        @Nullable Input<String> paramsYamlFile,
        @Nullable Input<String> serviceAccount,
        @Nullable Input<VertexAIParametersArgs> vertexAiParameters) {
        this.acceleratorConfig = acceleratorConfig;
        this.containerImageUri = containerImageUri;
        this.dataprocParameters = dataprocParameters;
        this.inputNotebookFile = inputNotebookFile;
        this.jobType = jobType;
        this.kernelSpec = kernelSpec;
        this.labels = labels;
        this.masterType = masterType;
        this.outputNotebookFolder = outputNotebookFolder;
        this.parameters = parameters;
        this.paramsYamlFile = paramsYamlFile;
        this.serviceAccount = serviceAccount;
        this.vertexAiParameters = vertexAiParameters;
    }

    private ExecutionTemplateArgs() {
        this.acceleratorConfig = Input.empty();
        this.containerImageUri = Input.empty();
        this.dataprocParameters = Input.empty();
        this.inputNotebookFile = Input.empty();
        this.jobType = Input.empty();
        this.kernelSpec = Input.empty();
        this.labels = Input.empty();
        this.masterType = Input.empty();
        this.outputNotebookFolder = Input.empty();
        this.parameters = Input.empty();
        this.paramsYamlFile = Input.empty();
        this.serviceAccount = Input.empty();
        this.vertexAiParameters = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExecutionTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<SchedulerAcceleratorConfigArgs> acceleratorConfig;
        private @Nullable Input<String> containerImageUri;
        private @Nullable Input<DataprocParametersArgs> dataprocParameters;
        private @Nullable Input<String> inputNotebookFile;
        private @Nullable Input<ExecutionTemplateJobType> jobType;
        private @Nullable Input<String> kernelSpec;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> masterType;
        private @Nullable Input<String> outputNotebookFolder;
        private @Nullable Input<String> parameters;
        private @Nullable Input<String> paramsYamlFile;
        private @Nullable Input<String> serviceAccount;
        private @Nullable Input<VertexAIParametersArgs> vertexAiParameters;

        public Builder() {
    	      // Empty
        }

        public Builder(ExecutionTemplateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorConfig = defaults.acceleratorConfig;
    	      this.containerImageUri = defaults.containerImageUri;
    	      this.dataprocParameters = defaults.dataprocParameters;
    	      this.inputNotebookFile = defaults.inputNotebookFile;
    	      this.jobType = defaults.jobType;
    	      this.kernelSpec = defaults.kernelSpec;
    	      this.labels = defaults.labels;
    	      this.masterType = defaults.masterType;
    	      this.outputNotebookFolder = defaults.outputNotebookFolder;
    	      this.parameters = defaults.parameters;
    	      this.paramsYamlFile = defaults.paramsYamlFile;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.vertexAiParameters = defaults.vertexAiParameters;
        }

        public Builder setAcceleratorConfig(@Nullable Input<SchedulerAcceleratorConfigArgs> acceleratorConfig) {
            this.acceleratorConfig = acceleratorConfig;
            return this;
        }

        public Builder setAcceleratorConfig(@Nullable SchedulerAcceleratorConfigArgs acceleratorConfig) {
            this.acceleratorConfig = Input.ofNullable(acceleratorConfig);
            return this;
        }

        public Builder setContainerImageUri(@Nullable Input<String> containerImageUri) {
            this.containerImageUri = containerImageUri;
            return this;
        }

        public Builder setContainerImageUri(@Nullable String containerImageUri) {
            this.containerImageUri = Input.ofNullable(containerImageUri);
            return this;
        }

        public Builder setDataprocParameters(@Nullable Input<DataprocParametersArgs> dataprocParameters) {
            this.dataprocParameters = dataprocParameters;
            return this;
        }

        public Builder setDataprocParameters(@Nullable DataprocParametersArgs dataprocParameters) {
            this.dataprocParameters = Input.ofNullable(dataprocParameters);
            return this;
        }

        public Builder setInputNotebookFile(@Nullable Input<String> inputNotebookFile) {
            this.inputNotebookFile = inputNotebookFile;
            return this;
        }

        public Builder setInputNotebookFile(@Nullable String inputNotebookFile) {
            this.inputNotebookFile = Input.ofNullable(inputNotebookFile);
            return this;
        }

        public Builder setJobType(@Nullable Input<ExecutionTemplateJobType> jobType) {
            this.jobType = jobType;
            return this;
        }

        public Builder setJobType(@Nullable ExecutionTemplateJobType jobType) {
            this.jobType = Input.ofNullable(jobType);
            return this;
        }

        public Builder setKernelSpec(@Nullable Input<String> kernelSpec) {
            this.kernelSpec = kernelSpec;
            return this;
        }

        public Builder setKernelSpec(@Nullable String kernelSpec) {
            this.kernelSpec = Input.ofNullable(kernelSpec);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setMasterType(@Nullable Input<String> masterType) {
            this.masterType = masterType;
            return this;
        }

        public Builder setMasterType(@Nullable String masterType) {
            this.masterType = Input.ofNullable(masterType);
            return this;
        }

        public Builder setOutputNotebookFolder(@Nullable Input<String> outputNotebookFolder) {
            this.outputNotebookFolder = outputNotebookFolder;
            return this;
        }

        public Builder setOutputNotebookFolder(@Nullable String outputNotebookFolder) {
            this.outputNotebookFolder = Input.ofNullable(outputNotebookFolder);
            return this;
        }

        public Builder setParameters(@Nullable Input<String> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setParameters(@Nullable String parameters) {
            this.parameters = Input.ofNullable(parameters);
            return this;
        }

        public Builder setParamsYamlFile(@Nullable Input<String> paramsYamlFile) {
            this.paramsYamlFile = paramsYamlFile;
            return this;
        }

        public Builder setParamsYamlFile(@Nullable String paramsYamlFile) {
            this.paramsYamlFile = Input.ofNullable(paramsYamlFile);
            return this;
        }

        public Builder setServiceAccount(@Nullable Input<String> serviceAccount) {
            this.serviceAccount = serviceAccount;
            return this;
        }

        public Builder setServiceAccount(@Nullable String serviceAccount) {
            this.serviceAccount = Input.ofNullable(serviceAccount);
            return this;
        }

        public Builder setVertexAiParameters(@Nullable Input<VertexAIParametersArgs> vertexAiParameters) {
            this.vertexAiParameters = vertexAiParameters;
            return this;
        }

        public Builder setVertexAiParameters(@Nullable VertexAIParametersArgs vertexAiParameters) {
            this.vertexAiParameters = Input.ofNullable(vertexAiParameters);
            return this;
        }

        public ExecutionTemplateArgs build() {
            return new ExecutionTemplateArgs(acceleratorConfig, containerImageUri, dataprocParameters, inputNotebookFile, jobType, kernelSpec, labels, masterType, outputNotebookFolder, parameters, paramsYamlFile, serviceAccount, vertexAiParameters);
        }
    }
}
