// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.networkservices_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.networkservices_v1.enums.EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria;
import io.pulumi.googlenative.networkservices_v1.inputs.EndpointMatcherMetadataLabelMatcherMetadataLabelsArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EndpointMatcherMetadataLabelMatcherArgs extends io.pulumi.resources.ResourceArgs {

    public static final EndpointMatcherMetadataLabelMatcherArgs Empty = new EndpointMatcherMetadataLabelMatcherArgs();

    @InputImport(name="metadataLabelMatchCriteria")
    private final @Nullable Input<EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria> metadataLabelMatchCriteria;

    public Input<EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria> getMetadataLabelMatchCriteria() {
        return this.metadataLabelMatchCriteria == null ? Input.empty() : this.metadataLabelMatchCriteria;
    }

    @InputImport(name="metadataLabels")
    private final @Nullable Input<List<EndpointMatcherMetadataLabelMatcherMetadataLabelsArgs>> metadataLabels;

    public Input<List<EndpointMatcherMetadataLabelMatcherMetadataLabelsArgs>> getMetadataLabels() {
        return this.metadataLabels == null ? Input.empty() : this.metadataLabels;
    }

    public EndpointMatcherMetadataLabelMatcherArgs(
        @Nullable Input<EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria> metadataLabelMatchCriteria,
        @Nullable Input<List<EndpointMatcherMetadataLabelMatcherMetadataLabelsArgs>> metadataLabels) {
        this.metadataLabelMatchCriteria = metadataLabelMatchCriteria;
        this.metadataLabels = metadataLabels;
    }

    private EndpointMatcherMetadataLabelMatcherArgs() {
        this.metadataLabelMatchCriteria = Input.empty();
        this.metadataLabels = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointMatcherMetadataLabelMatcherArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria> metadataLabelMatchCriteria;
        private @Nullable Input<List<EndpointMatcherMetadataLabelMatcherMetadataLabelsArgs>> metadataLabels;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointMatcherMetadataLabelMatcherArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metadataLabelMatchCriteria = defaults.metadataLabelMatchCriteria;
    	      this.metadataLabels = defaults.metadataLabels;
        }

        public Builder setMetadataLabelMatchCriteria(@Nullable Input<EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria> metadataLabelMatchCriteria) {
            this.metadataLabelMatchCriteria = metadataLabelMatchCriteria;
            return this;
        }

        public Builder setMetadataLabelMatchCriteria(@Nullable EndpointMatcherMetadataLabelMatcherMetadataLabelMatchCriteria metadataLabelMatchCriteria) {
            this.metadataLabelMatchCriteria = Input.ofNullable(metadataLabelMatchCriteria);
            return this;
        }

        public Builder setMetadataLabels(@Nullable Input<List<EndpointMatcherMetadataLabelMatcherMetadataLabelsArgs>> metadataLabels) {
            this.metadataLabels = metadataLabels;
            return this;
        }

        public Builder setMetadataLabels(@Nullable List<EndpointMatcherMetadataLabelMatcherMetadataLabelsArgs> metadataLabels) {
            this.metadataLabels = Input.ofNullable(metadataLabels);
            return this;
        }

        public EndpointMatcherMetadataLabelMatcherArgs build() {
            return new EndpointMatcherMetadataLabelMatcherArgs(metadataLabelMatchCriteria, metadataLabels);
        }
    }
}
