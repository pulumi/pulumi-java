// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.networkconnectivity_v1alpha1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.networkconnectivity_v1alpha1.inputs.RouterApplianceInstanceArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SpokeArgs extends io.pulumi.resources.ResourceArgs {

    public static final SpokeArgs Empty = new SpokeArgs();

    /**
     * The time when the Spoke was created.
     * 
     */
    @Import(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> createTime() {
        return this.createTime == null ? Codegen.empty() : this.createTime;
    }

    /**
     * Short description of the spoke resource
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * The resource URL of the hub resource that the spoke is attached to
     * 
     */
    @Import(name="hub")
      private final @Nullable Output<String> hub;

    public Output<String> hub() {
        return this.hub == null ? Codegen.empty() : this.hub;
    }

    /**
     * User-defined labels.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> labels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    /**
     * The URIs of linked interconnect attachment resources
     * 
     */
    @Import(name="linkedInterconnectAttachments")
      private final @Nullable Output<List<String>> linkedInterconnectAttachments;

    public Output<List<String>> linkedInterconnectAttachments() {
        return this.linkedInterconnectAttachments == null ? Codegen.empty() : this.linkedInterconnectAttachments;
    }

    /**
     * The URIs of linked Router appliance resources
     * 
     */
    @Import(name="linkedRouterApplianceInstances")
      private final @Nullable Output<List<RouterApplianceInstanceArgs>> linkedRouterApplianceInstances;

    public Output<List<RouterApplianceInstanceArgs>> linkedRouterApplianceInstances() {
        return this.linkedRouterApplianceInstances == null ? Codegen.empty() : this.linkedRouterApplianceInstances;
    }

    /**
     * The URIs of linked VPN tunnel resources
     * 
     */
    @Import(name="linkedVpnTunnels")
      private final @Nullable Output<List<String>> linkedVpnTunnels;

    public Output<List<String>> linkedVpnTunnels() {
        return this.linkedVpnTunnels == null ? Codegen.empty() : this.linkedVpnTunnels;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * Immutable. The name of a Spoke resource.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    @Import(name="requestId")
      private final @Nullable Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId == null ? Codegen.empty() : this.requestId;
    }

    @Import(name="spokeId")
      private final @Nullable Output<String> spokeId;

    public Output<String> spokeId() {
        return this.spokeId == null ? Codegen.empty() : this.spokeId;
    }

    /**
     * The time when the Spoke was updated.
     * 
     */
    @Import(name="updateTime")
      private final @Nullable Output<String> updateTime;

    public Output<String> updateTime() {
        return this.updateTime == null ? Codegen.empty() : this.updateTime;
    }

    public SpokeArgs(
        @Nullable Output<String> createTime,
        @Nullable Output<String> description,
        @Nullable Output<String> hub,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<List<String>> linkedInterconnectAttachments,
        @Nullable Output<List<RouterApplianceInstanceArgs>> linkedRouterApplianceInstances,
        @Nullable Output<List<String>> linkedVpnTunnels,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<String> requestId,
        @Nullable Output<String> spokeId,
        @Nullable Output<String> updateTime) {
        this.createTime = createTime;
        this.description = description;
        this.hub = hub;
        this.labels = labels;
        this.linkedInterconnectAttachments = linkedInterconnectAttachments;
        this.linkedRouterApplianceInstances = linkedRouterApplianceInstances;
        this.linkedVpnTunnels = linkedVpnTunnels;
        this.location = location;
        this.name = name;
        this.project = project;
        this.requestId = requestId;
        this.spokeId = spokeId;
        this.updateTime = updateTime;
    }

    private SpokeArgs() {
        this.createTime = Codegen.empty();
        this.description = Codegen.empty();
        this.hub = Codegen.empty();
        this.labels = Codegen.empty();
        this.linkedInterconnectAttachments = Codegen.empty();
        this.linkedRouterApplianceInstances = Codegen.empty();
        this.linkedVpnTunnels = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.requestId = Codegen.empty();
        this.spokeId = Codegen.empty();
        this.updateTime = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpokeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> createTime;
        private @Nullable Output<String> description;
        private @Nullable Output<String> hub;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<List<String>> linkedInterconnectAttachments;
        private @Nullable Output<List<RouterApplianceInstanceArgs>> linkedRouterApplianceInstances;
        private @Nullable Output<List<String>> linkedVpnTunnels;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<String> requestId;
        private @Nullable Output<String> spokeId;
        private @Nullable Output<String> updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(SpokeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.hub = defaults.hub;
    	      this.labels = defaults.labels;
    	      this.linkedInterconnectAttachments = defaults.linkedInterconnectAttachments;
    	      this.linkedRouterApplianceInstances = defaults.linkedRouterApplianceInstances;
    	      this.linkedVpnTunnels = defaults.linkedVpnTunnels;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.requestId = defaults.requestId;
    	      this.spokeId = defaults.spokeId;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }
        public Builder createTime(@Nullable String createTime) {
            this.createTime = Codegen.ofNullable(createTime);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder hub(@Nullable Output<String> hub) {
            this.hub = hub;
            return this;
        }
        public Builder hub(@Nullable String hub) {
            this.hub = Codegen.ofNullable(hub);
            return this;
        }
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder linkedInterconnectAttachments(@Nullable Output<List<String>> linkedInterconnectAttachments) {
            this.linkedInterconnectAttachments = linkedInterconnectAttachments;
            return this;
        }
        public Builder linkedInterconnectAttachments(@Nullable List<String> linkedInterconnectAttachments) {
            this.linkedInterconnectAttachments = Codegen.ofNullable(linkedInterconnectAttachments);
            return this;
        }
        public Builder linkedInterconnectAttachments(String... linkedInterconnectAttachments) {
            return linkedInterconnectAttachments(List.of(linkedInterconnectAttachments));
        }
        public Builder linkedRouterApplianceInstances(@Nullable Output<List<RouterApplianceInstanceArgs>> linkedRouterApplianceInstances) {
            this.linkedRouterApplianceInstances = linkedRouterApplianceInstances;
            return this;
        }
        public Builder linkedRouterApplianceInstances(@Nullable List<RouterApplianceInstanceArgs> linkedRouterApplianceInstances) {
            this.linkedRouterApplianceInstances = Codegen.ofNullable(linkedRouterApplianceInstances);
            return this;
        }
        public Builder linkedRouterApplianceInstances(RouterApplianceInstanceArgs... linkedRouterApplianceInstances) {
            return linkedRouterApplianceInstances(List.of(linkedRouterApplianceInstances));
        }
        public Builder linkedVpnTunnels(@Nullable Output<List<String>> linkedVpnTunnels) {
            this.linkedVpnTunnels = linkedVpnTunnels;
            return this;
        }
        public Builder linkedVpnTunnels(@Nullable List<String> linkedVpnTunnels) {
            this.linkedVpnTunnels = Codegen.ofNullable(linkedVpnTunnels);
            return this;
        }
        public Builder linkedVpnTunnels(String... linkedVpnTunnels) {
            return linkedVpnTunnels(List.of(linkedVpnTunnels));
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder requestId(@Nullable Output<String> requestId) {
            this.requestId = requestId;
            return this;
        }
        public Builder requestId(@Nullable String requestId) {
            this.requestId = Codegen.ofNullable(requestId);
            return this;
        }
        public Builder spokeId(@Nullable Output<String> spokeId) {
            this.spokeId = spokeId;
            return this;
        }
        public Builder spokeId(@Nullable String spokeId) {
            this.spokeId = Codegen.ofNullable(spokeId);
            return this;
        }
        public Builder updateTime(@Nullable Output<String> updateTime) {
            this.updateTime = updateTime;
            return this;
        }
        public Builder updateTime(@Nullable String updateTime) {
            this.updateTime = Codegen.ofNullable(updateTime);
            return this;
        }        public SpokeArgs build() {
            return new SpokeArgs(createTime, description, hub, labels, linkedInterconnectAttachments, linkedRouterApplianceInstances, linkedVpnTunnels, location, name, project, requestId, spokeId, updateTime);
        }
    }
}
