// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.orgpolicy_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A message that holds specific allowed and denied values. This message can define specific values and subtrees of Cloud Resource Manager resource hierarchy (`Organizations`, `Folders`, `Projects`) that are allowed or denied. This is achieved by using the `under:` and optional `is:` prefixes. The `under:` prefix is used to denote resource subtree values. The `is:` prefix is used to denote specific values, and is required only if the value contains a ":". Values prefixed with "is:" are treated the same as values with no prefix. Ancestry subtrees must be in one of the following formats: - "projects/", e.g. "projects/tokyo-rain-123" - "folders/", e.g. "folders/1234" - "organizations/", e.g. "organizations/1234" The `supports_under` field of the associated `Constraint` defines whether ancestry prefixes can be used.
 * 
 */
public final class GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesArgs Empty = new GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesArgs();

    /**
     * List of values allowed at this resource.
     * 
     */
    @InputImport(name="allowedValues")
    private final @Nullable Input<List<String>> allowedValues;

    public Input<List<String>> getAllowedValues() {
        return this.allowedValues == null ? Input.empty() : this.allowedValues;
    }

    /**
     * List of values denied at this resource.
     * 
     */
    @InputImport(name="deniedValues")
    private final @Nullable Input<List<String>> deniedValues;

    public Input<List<String>> getDeniedValues() {
        return this.deniedValues == null ? Input.empty() : this.deniedValues;
    }

    public GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesArgs(
        @Nullable Input<List<String>> allowedValues,
        @Nullable Input<List<String>> deniedValues) {
        this.allowedValues = allowedValues;
        this.deniedValues = deniedValues;
    }

    private GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesArgs() {
        this.allowedValues = Input.empty();
        this.deniedValues = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> allowedValues;
        private @Nullable Input<List<String>> deniedValues;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedValues = defaults.allowedValues;
    	      this.deniedValues = defaults.deniedValues;
        }

        public Builder setAllowedValues(@Nullable Input<List<String>> allowedValues) {
            this.allowedValues = allowedValues;
            return this;
        }

        public Builder setAllowedValues(@Nullable List<String> allowedValues) {
            this.allowedValues = Input.ofNullable(allowedValues);
            return this;
        }

        public Builder setDeniedValues(@Nullable Input<List<String>> deniedValues) {
            this.deniedValues = deniedValues;
            return this;
        }

        public Builder setDeniedValues(@Nullable List<String> deniedValues) {
            this.deniedValues = Input.ofNullable(deniedValues);
            return this;
        }

        public GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesArgs build() {
            return new GoogleCloudOrgpolicyV2PolicySpecPolicyRuleStringValuesArgs(allowedValues, deniedValues);
        }
    }
}
