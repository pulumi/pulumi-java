// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.compute_v1.enums.AttachedDiskInterface;
import io.pulumi.googlenative.compute_v1.enums.AttachedDiskMode;
import io.pulumi.googlenative.compute_v1.enums.AttachedDiskType;
import io.pulumi.googlenative.compute_v1.inputs.AttachedDiskInitializeParamsArgs;
import io.pulumi.googlenative.compute_v1.inputs.CustomerEncryptionKeyArgs;
import io.pulumi.googlenative.compute_v1.inputs.GuestOsFeatureArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AttachedDiskArgs extends io.pulumi.resources.ResourceArgs {

    public static final AttachedDiskArgs Empty = new AttachedDiskArgs();

    @InputImport(name="autoDelete")
    private final @Nullable Input<Boolean> autoDelete;

    public Input<Boolean> getAutoDelete() {
        return this.autoDelete == null ? Input.empty() : this.autoDelete;
    }

    @InputImport(name="boot")
    private final @Nullable Input<Boolean> boot;

    public Input<Boolean> getBoot() {
        return this.boot == null ? Input.empty() : this.boot;
    }

    @InputImport(name="deviceName")
    private final @Nullable Input<String> deviceName;

    public Input<String> getDeviceName() {
        return this.deviceName == null ? Input.empty() : this.deviceName;
    }

    @InputImport(name="diskEncryptionKey")
    private final @Nullable Input<CustomerEncryptionKeyArgs> diskEncryptionKey;

    public Input<CustomerEncryptionKeyArgs> getDiskEncryptionKey() {
        return this.diskEncryptionKey == null ? Input.empty() : this.diskEncryptionKey;
    }

    @InputImport(name="diskSizeGb")
    private final @Nullable Input<String> diskSizeGb;

    public Input<String> getDiskSizeGb() {
        return this.diskSizeGb == null ? Input.empty() : this.diskSizeGb;
    }

    @InputImport(name="guestOsFeatures")
    private final @Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures;

    public Input<List<GuestOsFeatureArgs>> getGuestOsFeatures() {
        return this.guestOsFeatures == null ? Input.empty() : this.guestOsFeatures;
    }

    @InputImport(name="initializeParams")
    private final @Nullable Input<AttachedDiskInitializeParamsArgs> initializeParams;

    public Input<AttachedDiskInitializeParamsArgs> getInitializeParams() {
        return this.initializeParams == null ? Input.empty() : this.initializeParams;
    }

    @InputImport(name="interface")
    private final @Nullable Input<AttachedDiskInterface> $interface;

    public Input<AttachedDiskInterface> get$interface() {
        return this.$interface == null ? Input.empty() : this.$interface;
    }

    @InputImport(name="mode")
    private final @Nullable Input<AttachedDiskMode> mode;

    public Input<AttachedDiskMode> getMode() {
        return this.mode == null ? Input.empty() : this.mode;
    }

    @InputImport(name="source")
    private final @Nullable Input<String> source;

    public Input<String> getSource() {
        return this.source == null ? Input.empty() : this.source;
    }

    @InputImport(name="type")
    private final @Nullable Input<AttachedDiskType> type;

    public Input<AttachedDiskType> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    public AttachedDiskArgs(
        @Nullable Input<Boolean> autoDelete,
        @Nullable Input<Boolean> boot,
        @Nullable Input<String> deviceName,
        @Nullable Input<CustomerEncryptionKeyArgs> diskEncryptionKey,
        @Nullable Input<String> diskSizeGb,
        @Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures,
        @Nullable Input<AttachedDiskInitializeParamsArgs> initializeParams,
        @Nullable Input<AttachedDiskInterface> $interface,
        @Nullable Input<AttachedDiskMode> mode,
        @Nullable Input<String> source,
        @Nullable Input<AttachedDiskType> type) {
        this.autoDelete = autoDelete;
        this.boot = boot;
        this.deviceName = deviceName;
        this.diskEncryptionKey = diskEncryptionKey;
        this.diskSizeGb = diskSizeGb;
        this.guestOsFeatures = guestOsFeatures;
        this.initializeParams = initializeParams;
        this.$interface = $interface;
        this.mode = mode;
        this.source = source;
        this.type = type;
    }

    private AttachedDiskArgs() {
        this.autoDelete = Input.empty();
        this.boot = Input.empty();
        this.deviceName = Input.empty();
        this.diskEncryptionKey = Input.empty();
        this.diskSizeGb = Input.empty();
        this.guestOsFeatures = Input.empty();
        this.initializeParams = Input.empty();
        this.$interface = Input.empty();
        this.mode = Input.empty();
        this.source = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AttachedDiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> autoDelete;
        private @Nullable Input<Boolean> boot;
        private @Nullable Input<String> deviceName;
        private @Nullable Input<CustomerEncryptionKeyArgs> diskEncryptionKey;
        private @Nullable Input<String> diskSizeGb;
        private @Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures;
        private @Nullable Input<AttachedDiskInitializeParamsArgs> initializeParams;
        private @Nullable Input<AttachedDiskInterface> $interface;
        private @Nullable Input<AttachedDiskMode> mode;
        private @Nullable Input<String> source;
        private @Nullable Input<AttachedDiskType> type;

        public Builder() {
    	      // Empty
        }

        public Builder(AttachedDiskArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoDelete = defaults.autoDelete;
    	      this.boot = defaults.boot;
    	      this.deviceName = defaults.deviceName;
    	      this.diskEncryptionKey = defaults.diskEncryptionKey;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.guestOsFeatures = defaults.guestOsFeatures;
    	      this.initializeParams = defaults.initializeParams;
    	      this.$interface = defaults.$interface;
    	      this.mode = defaults.mode;
    	      this.source = defaults.source;
    	      this.type = defaults.type;
        }

        public Builder setAutoDelete(@Nullable Input<Boolean> autoDelete) {
            this.autoDelete = autoDelete;
            return this;
        }

        public Builder setAutoDelete(@Nullable Boolean autoDelete) {
            this.autoDelete = Input.ofNullable(autoDelete);
            return this;
        }

        public Builder setBoot(@Nullable Input<Boolean> boot) {
            this.boot = boot;
            return this;
        }

        public Builder setBoot(@Nullable Boolean boot) {
            this.boot = Input.ofNullable(boot);
            return this;
        }

        public Builder setDeviceName(@Nullable Input<String> deviceName) {
            this.deviceName = deviceName;
            return this;
        }

        public Builder setDeviceName(@Nullable String deviceName) {
            this.deviceName = Input.ofNullable(deviceName);
            return this;
        }

        public Builder setDiskEncryptionKey(@Nullable Input<CustomerEncryptionKeyArgs> diskEncryptionKey) {
            this.diskEncryptionKey = diskEncryptionKey;
            return this;
        }

        public Builder setDiskEncryptionKey(@Nullable CustomerEncryptionKeyArgs diskEncryptionKey) {
            this.diskEncryptionKey = Input.ofNullable(diskEncryptionKey);
            return this;
        }

        public Builder setDiskSizeGb(@Nullable Input<String> diskSizeGb) {
            this.diskSizeGb = diskSizeGb;
            return this;
        }

        public Builder setDiskSizeGb(@Nullable String diskSizeGb) {
            this.diskSizeGb = Input.ofNullable(diskSizeGb);
            return this;
        }

        public Builder setGuestOsFeatures(@Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures) {
            this.guestOsFeatures = guestOsFeatures;
            return this;
        }

        public Builder setGuestOsFeatures(@Nullable List<GuestOsFeatureArgs> guestOsFeatures) {
            this.guestOsFeatures = Input.ofNullable(guestOsFeatures);
            return this;
        }

        public Builder setInitializeParams(@Nullable Input<AttachedDiskInitializeParamsArgs> initializeParams) {
            this.initializeParams = initializeParams;
            return this;
        }

        public Builder setInitializeParams(@Nullable AttachedDiskInitializeParamsArgs initializeParams) {
            this.initializeParams = Input.ofNullable(initializeParams);
            return this;
        }

        public Builder set$interface(@Nullable Input<AttachedDiskInterface> $interface) {
            this.$interface = $interface;
            return this;
        }

        public Builder set$interface(@Nullable AttachedDiskInterface $interface) {
            this.$interface = Input.ofNullable($interface);
            return this;
        }

        public Builder setMode(@Nullable Input<AttachedDiskMode> mode) {
            this.mode = mode;
            return this;
        }

        public Builder setMode(@Nullable AttachedDiskMode mode) {
            this.mode = Input.ofNullable(mode);
            return this;
        }

        public Builder setSource(@Nullable Input<String> source) {
            this.source = source;
            return this;
        }

        public Builder setSource(@Nullable String source) {
            this.source = Input.ofNullable(source);
            return this;
        }

        public Builder setType(@Nullable Input<AttachedDiskType> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable AttachedDiskType type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public AttachedDiskArgs build() {
            return new AttachedDiskArgs(autoDelete, boot, deviceName, diskEncryptionKey, diskSizeGb, guestOsFeatures, initializeParams, $interface, mode, source, type);
        }
    }
}
