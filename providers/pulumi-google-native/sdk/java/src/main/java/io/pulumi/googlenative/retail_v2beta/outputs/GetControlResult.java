// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.retail_v2beta.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.retail_v2beta.outputs.GoogleCloudRetailV2betaRuleResponse;
import io.pulumi.googlenative.retail_v2beta.outputs.GoogleCloudRetailV2betaSearchRequestFacetSpecResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetControlResult {
    private final List<String> associatedServingConfigIds;
    private final String displayName;
    private final GoogleCloudRetailV2betaSearchRequestFacetSpecResponse facetSpec;
    private final String name;
    private final GoogleCloudRetailV2betaRuleResponse rule;
    private final List<String> solutionTypes;

    @OutputCustomType.Constructor({"associatedServingConfigIds","displayName","facetSpec","name","rule","solutionTypes"})
    private GetControlResult(
        List<String> associatedServingConfigIds,
        String displayName,
        GoogleCloudRetailV2betaSearchRequestFacetSpecResponse facetSpec,
        String name,
        GoogleCloudRetailV2betaRuleResponse rule,
        List<String> solutionTypes) {
        this.associatedServingConfigIds = Objects.requireNonNull(associatedServingConfigIds);
        this.displayName = Objects.requireNonNull(displayName);
        this.facetSpec = Objects.requireNonNull(facetSpec);
        this.name = Objects.requireNonNull(name);
        this.rule = Objects.requireNonNull(rule);
        this.solutionTypes = Objects.requireNonNull(solutionTypes);
    }

    public List<String> getAssociatedServingConfigIds() {
        return this.associatedServingConfigIds;
    }
    public String getDisplayName() {
        return this.displayName;
    }
    public GoogleCloudRetailV2betaSearchRequestFacetSpecResponse getFacetSpec() {
        return this.facetSpec;
    }
    public String getName() {
        return this.name;
    }
    public GoogleCloudRetailV2betaRuleResponse getRule() {
        return this.rule;
    }
    public List<String> getSolutionTypes() {
        return this.solutionTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetControlResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> associatedServingConfigIds;
        private String displayName;
        private GoogleCloudRetailV2betaSearchRequestFacetSpecResponse facetSpec;
        private String name;
        private GoogleCloudRetailV2betaRuleResponse rule;
        private List<String> solutionTypes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetControlResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedServingConfigIds = defaults.associatedServingConfigIds;
    	      this.displayName = defaults.displayName;
    	      this.facetSpec = defaults.facetSpec;
    	      this.name = defaults.name;
    	      this.rule = defaults.rule;
    	      this.solutionTypes = defaults.solutionTypes;
        }

        public Builder setAssociatedServingConfigIds(List<String> associatedServingConfigIds) {
            this.associatedServingConfigIds = Objects.requireNonNull(associatedServingConfigIds);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setFacetSpec(GoogleCloudRetailV2betaSearchRequestFacetSpecResponse facetSpec) {
            this.facetSpec = Objects.requireNonNull(facetSpec);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRule(GoogleCloudRetailV2betaRuleResponse rule) {
            this.rule = Objects.requireNonNull(rule);
            return this;
        }

        public Builder setSolutionTypes(List<String> solutionTypes) {
            this.solutionTypes = Objects.requireNonNull(solutionTypes);
            return this;
        }

        public GetControlResult build() {
            return new GetControlResult(associatedServingConfigIds, displayName, facetSpec, name, rule, solutionTypes);
        }
    }
}
