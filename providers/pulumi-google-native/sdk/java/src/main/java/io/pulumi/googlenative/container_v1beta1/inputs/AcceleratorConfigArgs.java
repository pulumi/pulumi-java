// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * AcceleratorConfig represents a Hardware Accelerator request.
 * 
 */
public final class AcceleratorConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final AcceleratorConfigArgs Empty = new AcceleratorConfigArgs();

    /**
     * The number of the accelerator cards exposed to an instance.
     * 
     */
    @InputImport(name="acceleratorCount")
    private final @Nullable Input<String> acceleratorCount;

    public Input<String> getAcceleratorCount() {
        return this.acceleratorCount == null ? Input.empty() : this.acceleratorCount;
    }

    /**
     * The accelerator type resource name. List of supported accelerators [here](https://cloud.google.com/compute/docs/gpus)
     * 
     */
    @InputImport(name="acceleratorType")
    private final @Nullable Input<String> acceleratorType;

    public Input<String> getAcceleratorType() {
        return this.acceleratorType == null ? Input.empty() : this.acceleratorType;
    }

    /**
     * Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
     * 
     */
    @InputImport(name="gpuPartitionSize")
    private final @Nullable Input<String> gpuPartitionSize;

    public Input<String> getGpuPartitionSize() {
        return this.gpuPartitionSize == null ? Input.empty() : this.gpuPartitionSize;
    }

    public AcceleratorConfigArgs(
        @Nullable Input<String> acceleratorCount,
        @Nullable Input<String> acceleratorType,
        @Nullable Input<String> gpuPartitionSize) {
        this.acceleratorCount = acceleratorCount;
        this.acceleratorType = acceleratorType;
        this.gpuPartitionSize = gpuPartitionSize;
    }

    private AcceleratorConfigArgs() {
        this.acceleratorCount = Input.empty();
        this.acceleratorType = Input.empty();
        this.gpuPartitionSize = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AcceleratorConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> acceleratorCount;
        private @Nullable Input<String> acceleratorType;
        private @Nullable Input<String> gpuPartitionSize;

        public Builder() {
    	      // Empty
        }

        public Builder(AcceleratorConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorCount = defaults.acceleratorCount;
    	      this.acceleratorType = defaults.acceleratorType;
    	      this.gpuPartitionSize = defaults.gpuPartitionSize;
        }

        public Builder setAcceleratorCount(@Nullable Input<String> acceleratorCount) {
            this.acceleratorCount = acceleratorCount;
            return this;
        }

        public Builder setAcceleratorCount(@Nullable String acceleratorCount) {
            this.acceleratorCount = Input.ofNullable(acceleratorCount);
            return this;
        }

        public Builder setAcceleratorType(@Nullable Input<String> acceleratorType) {
            this.acceleratorType = acceleratorType;
            return this;
        }

        public Builder setAcceleratorType(@Nullable String acceleratorType) {
            this.acceleratorType = Input.ofNullable(acceleratorType);
            return this;
        }

        public Builder setGpuPartitionSize(@Nullable Input<String> gpuPartitionSize) {
            this.gpuPartitionSize = gpuPartitionSize;
            return this;
        }

        public Builder setGpuPartitionSize(@Nullable String gpuPartitionSize) {
            this.gpuPartitionSize = Input.ofNullable(gpuPartitionSize);
            return this;
        }

        public AcceleratorConfigArgs build() {
            return new AcceleratorConfigArgs(acceleratorCount, acceleratorType, gpuPartitionSize);
        }
    }
}
