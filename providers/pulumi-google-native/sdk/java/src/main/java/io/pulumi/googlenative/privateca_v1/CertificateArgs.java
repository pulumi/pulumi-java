// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.privateca_v1;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.privateca_v1.enums.CertificateSubjectMode;
import io.pulumi.googlenative.privateca_v1.inputs.CertificateConfigArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CertificateArgs extends io.pulumi.resources.ResourceArgs {

    public static final CertificateArgs Empty = new CertificateArgs();

    @InputImport(name="caPoolId", required=true)
    private final Input<String> caPoolId;

    public Input<String> getCaPoolId() {
        return this.caPoolId;
    }

    @InputImport(name="certificateId")
    private final @Nullable Input<String> certificateId;

    public Input<String> getCertificateId() {
        return this.certificateId == null ? Input.empty() : this.certificateId;
    }

    @InputImport(name="certificateTemplate")
    private final @Nullable Input<String> certificateTemplate;

    public Input<String> getCertificateTemplate() {
        return this.certificateTemplate == null ? Input.empty() : this.certificateTemplate;
    }

    @InputImport(name="config")
    private final @Nullable Input<CertificateConfigArgs> config;

    public Input<CertificateConfigArgs> getConfig() {
        return this.config == null ? Input.empty() : this.config;
    }

    @InputImport(name="issuingCertificateAuthorityId")
    private final @Nullable Input<String> issuingCertificateAuthorityId;

    public Input<String> getIssuingCertificateAuthorityId() {
        return this.issuingCertificateAuthorityId == null ? Input.empty() : this.issuingCertificateAuthorityId;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="lifetime", required=true)
    private final Input<String> lifetime;

    public Input<String> getLifetime() {
        return this.lifetime;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="pemCsr")
    private final @Nullable Input<String> pemCsr;

    public Input<String> getPemCsr() {
        return this.pemCsr == null ? Input.empty() : this.pemCsr;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="requestId")
    private final @Nullable Input<String> requestId;

    public Input<String> getRequestId() {
        return this.requestId == null ? Input.empty() : this.requestId;
    }

    @InputImport(name="subjectMode")
    private final @Nullable Input<CertificateSubjectMode> subjectMode;

    public Input<CertificateSubjectMode> getSubjectMode() {
        return this.subjectMode == null ? Input.empty() : this.subjectMode;
    }

    @InputImport(name="validateOnly")
    private final @Nullable Input<String> validateOnly;

    public Input<String> getValidateOnly() {
        return this.validateOnly == null ? Input.empty() : this.validateOnly;
    }

    public CertificateArgs(
        Input<String> caPoolId,
        @Nullable Input<String> certificateId,
        @Nullable Input<String> certificateTemplate,
        @Nullable Input<CertificateConfigArgs> config,
        @Nullable Input<String> issuingCertificateAuthorityId,
        @Nullable Input<Map<String,String>> labels,
        Input<String> lifetime,
        @Nullable Input<String> location,
        @Nullable Input<String> pemCsr,
        @Nullable Input<String> project,
        @Nullable Input<String> requestId,
        @Nullable Input<CertificateSubjectMode> subjectMode,
        @Nullable Input<String> validateOnly) {
        this.caPoolId = Objects.requireNonNull(caPoolId, "expected parameter 'caPoolId' to be non-null");
        this.certificateId = certificateId;
        this.certificateTemplate = certificateTemplate;
        this.config = config;
        this.issuingCertificateAuthorityId = issuingCertificateAuthorityId;
        this.labels = labels;
        this.lifetime = Objects.requireNonNull(lifetime, "expected parameter 'lifetime' to be non-null");
        this.location = location;
        this.pemCsr = pemCsr;
        this.project = project;
        this.requestId = requestId;
        this.subjectMode = subjectMode;
        this.validateOnly = validateOnly;
    }

    private CertificateArgs() {
        this.caPoolId = Input.empty();
        this.certificateId = Input.empty();
        this.certificateTemplate = Input.empty();
        this.config = Input.empty();
        this.issuingCertificateAuthorityId = Input.empty();
        this.labels = Input.empty();
        this.lifetime = Input.empty();
        this.location = Input.empty();
        this.pemCsr = Input.empty();
        this.project = Input.empty();
        this.requestId = Input.empty();
        this.subjectMode = Input.empty();
        this.validateOnly = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> caPoolId;
        private @Nullable Input<String> certificateId;
        private @Nullable Input<String> certificateTemplate;
        private @Nullable Input<CertificateConfigArgs> config;
        private @Nullable Input<String> issuingCertificateAuthorityId;
        private @Nullable Input<Map<String,String>> labels;
        private Input<String> lifetime;
        private @Nullable Input<String> location;
        private @Nullable Input<String> pemCsr;
        private @Nullable Input<String> project;
        private @Nullable Input<String> requestId;
        private @Nullable Input<CertificateSubjectMode> subjectMode;
        private @Nullable Input<String> validateOnly;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caPoolId = defaults.caPoolId;
    	      this.certificateId = defaults.certificateId;
    	      this.certificateTemplate = defaults.certificateTemplate;
    	      this.config = defaults.config;
    	      this.issuingCertificateAuthorityId = defaults.issuingCertificateAuthorityId;
    	      this.labels = defaults.labels;
    	      this.lifetime = defaults.lifetime;
    	      this.location = defaults.location;
    	      this.pemCsr = defaults.pemCsr;
    	      this.project = defaults.project;
    	      this.requestId = defaults.requestId;
    	      this.subjectMode = defaults.subjectMode;
    	      this.validateOnly = defaults.validateOnly;
        }

        public Builder setCaPoolId(Input<String> caPoolId) {
            this.caPoolId = Objects.requireNonNull(caPoolId);
            return this;
        }

        public Builder setCaPoolId(String caPoolId) {
            this.caPoolId = Input.of(Objects.requireNonNull(caPoolId));
            return this;
        }

        public Builder setCertificateId(@Nullable Input<String> certificateId) {
            this.certificateId = certificateId;
            return this;
        }

        public Builder setCertificateId(@Nullable String certificateId) {
            this.certificateId = Input.ofNullable(certificateId);
            return this;
        }

        public Builder setCertificateTemplate(@Nullable Input<String> certificateTemplate) {
            this.certificateTemplate = certificateTemplate;
            return this;
        }

        public Builder setCertificateTemplate(@Nullable String certificateTemplate) {
            this.certificateTemplate = Input.ofNullable(certificateTemplate);
            return this;
        }

        public Builder setConfig(@Nullable Input<CertificateConfigArgs> config) {
            this.config = config;
            return this;
        }

        public Builder setConfig(@Nullable CertificateConfigArgs config) {
            this.config = Input.ofNullable(config);
            return this;
        }

        public Builder setIssuingCertificateAuthorityId(@Nullable Input<String> issuingCertificateAuthorityId) {
            this.issuingCertificateAuthorityId = issuingCertificateAuthorityId;
            return this;
        }

        public Builder setIssuingCertificateAuthorityId(@Nullable String issuingCertificateAuthorityId) {
            this.issuingCertificateAuthorityId = Input.ofNullable(issuingCertificateAuthorityId);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setLifetime(Input<String> lifetime) {
            this.lifetime = Objects.requireNonNull(lifetime);
            return this;
        }

        public Builder setLifetime(String lifetime) {
            this.lifetime = Input.of(Objects.requireNonNull(lifetime));
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setPemCsr(@Nullable Input<String> pemCsr) {
            this.pemCsr = pemCsr;
            return this;
        }

        public Builder setPemCsr(@Nullable String pemCsr) {
            this.pemCsr = Input.ofNullable(pemCsr);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRequestId(@Nullable Input<String> requestId) {
            this.requestId = requestId;
            return this;
        }

        public Builder setRequestId(@Nullable String requestId) {
            this.requestId = Input.ofNullable(requestId);
            return this;
        }

        public Builder setSubjectMode(@Nullable Input<CertificateSubjectMode> subjectMode) {
            this.subjectMode = subjectMode;
            return this;
        }

        public Builder setSubjectMode(@Nullable CertificateSubjectMode subjectMode) {
            this.subjectMode = Input.ofNullable(subjectMode);
            return this;
        }

        public Builder setValidateOnly(@Nullable Input<String> validateOnly) {
            this.validateOnly = validateOnly;
            return this;
        }

        public Builder setValidateOnly(@Nullable String validateOnly) {
            this.validateOnly = Input.ofNullable(validateOnly);
            return this;
        }

        public CertificateArgs build() {
            return new CertificateArgs(caPoolId, certificateId, certificateTemplate, config, issuingCertificateAuthorityId, labels, lifetime, location, pemCsr, project, requestId, subjectMode, validateOnly);
        }
    }
}
