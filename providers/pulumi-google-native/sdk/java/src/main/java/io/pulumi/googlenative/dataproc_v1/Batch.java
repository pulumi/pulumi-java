// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataproc_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.dataproc_v1.BatchArgs;
import io.pulumi.googlenative.dataproc_v1.outputs.EnvironmentConfigResponse;
import io.pulumi.googlenative.dataproc_v1.outputs.PySparkBatchResponse;
import io.pulumi.googlenative.dataproc_v1.outputs.RuntimeConfigResponse;
import io.pulumi.googlenative.dataproc_v1.outputs.RuntimeInfoResponse;
import io.pulumi.googlenative.dataproc_v1.outputs.SparkBatchResponse;
import io.pulumi.googlenative.dataproc_v1.outputs.SparkRBatchResponse;
import io.pulumi.googlenative.dataproc_v1.outputs.SparkSqlBatchResponse;
import io.pulumi.googlenative.dataproc_v1.outputs.StateHistoryResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:dataproc/v1:Batch")
public class Batch extends io.pulumi.resources.CustomResource {
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime;
    }
    @OutputExport(name="creator", type=String.class, parameters={})
    private Output<String> creator;

    public Output<String> getCreator() {
        return this.creator;
    }
    @OutputExport(name="environmentConfig", type=EnvironmentConfigResponse.class, parameters={})
    private Output<EnvironmentConfigResponse> environmentConfig;

    public Output<EnvironmentConfigResponse> getEnvironmentConfig() {
        return this.environmentConfig;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="operation", type=String.class, parameters={})
    private Output<String> operation;

    public Output<String> getOperation() {
        return this.operation;
    }
    @OutputExport(name="pysparkBatch", type=PySparkBatchResponse.class, parameters={})
    private Output<PySparkBatchResponse> pysparkBatch;

    public Output<PySparkBatchResponse> getPysparkBatch() {
        return this.pysparkBatch;
    }
    @OutputExport(name="runtimeConfig", type=RuntimeConfigResponse.class, parameters={})
    private Output<RuntimeConfigResponse> runtimeConfig;

    public Output<RuntimeConfigResponse> getRuntimeConfig() {
        return this.runtimeConfig;
    }
    @OutputExport(name="runtimeInfo", type=RuntimeInfoResponse.class, parameters={})
    private Output<RuntimeInfoResponse> runtimeInfo;

    public Output<RuntimeInfoResponse> getRuntimeInfo() {
        return this.runtimeInfo;
    }
    @OutputExport(name="sparkBatch", type=SparkBatchResponse.class, parameters={})
    private Output<SparkBatchResponse> sparkBatch;

    public Output<SparkBatchResponse> getSparkBatch() {
        return this.sparkBatch;
    }
    @OutputExport(name="sparkRBatch", type=SparkRBatchResponse.class, parameters={})
    private Output<SparkRBatchResponse> sparkRBatch;

    public Output<SparkRBatchResponse> getSparkRBatch() {
        return this.sparkRBatch;
    }
    @OutputExport(name="sparkSqlBatch", type=SparkSqlBatchResponse.class, parameters={})
    private Output<SparkSqlBatchResponse> sparkSqlBatch;

    public Output<SparkSqlBatchResponse> getSparkSqlBatch() {
        return this.sparkSqlBatch;
    }
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> getState() {
        return this.state;
    }
    @OutputExport(name="stateHistory", type=List.class, parameters={StateHistoryResponse.class})
    private Output<List<StateHistoryResponse>> stateHistory;

    public Output<List<StateHistoryResponse>> getStateHistory() {
        return this.stateHistory;
    }
    @OutputExport(name="stateMessage", type=String.class, parameters={})
    private Output<String> stateMessage;

    public Output<String> getStateMessage() {
        return this.stateMessage;
    }
    @OutputExport(name="stateTime", type=String.class, parameters={})
    private Output<String> stateTime;

    public Output<String> getStateTime() {
        return this.stateTime;
    }
    @OutputExport(name="uuid", type=String.class, parameters={})
    private Output<String> uuid;

    public Output<String> getUuid() {
        return this.uuid;
    }

    public Batch(String name, @Nullable BatchArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:dataproc/v1:Batch", name, args == null ? BatchArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Batch(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:dataproc/v1:Batch", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Batch get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Batch(name, id, options);
    }
}
