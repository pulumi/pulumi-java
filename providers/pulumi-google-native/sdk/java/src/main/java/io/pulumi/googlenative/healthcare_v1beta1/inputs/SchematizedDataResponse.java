// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.healthcare_v1beta1.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * The content of an HL7v2 message in a structured format as specified by a schema.
 * 
 */
public final class SchematizedDataResponse extends io.pulumi.resources.InvokeArgs {

    public static final SchematizedDataResponse Empty = new SchematizedDataResponse();

    /**
     * JSON output of the parser.
     * 
     */
    @InputImport(name="data", required=true)
    private final String data;

    public String getData() {
        return this.data;
    }

    /**
     * The error output of the parser.
     * 
     */
    @InputImport(name="error", required=true)
    private final String error;

    public String getError() {
        return this.error;
    }

    public SchematizedDataResponse(
        String data,
        String error) {
        this.data = Objects.requireNonNull(data, "expected parameter 'data' to be non-null");
        this.error = Objects.requireNonNull(error, "expected parameter 'error' to be non-null");
    }

    private SchematizedDataResponse() {
        this.data = null;
        this.error = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SchematizedDataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String data;
        private String error;

        public Builder() {
    	      // Empty
        }

        public Builder(SchematizedDataResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.data = defaults.data;
    	      this.error = defaults.error;
        }

        public Builder setData(String data) {
            this.data = Objects.requireNonNull(data);
            return this;
        }

        public Builder setError(String error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }

        public SchematizedDataResponse build() {
            return new SchematizedDataResponse(data, error);
        }
    }
}
