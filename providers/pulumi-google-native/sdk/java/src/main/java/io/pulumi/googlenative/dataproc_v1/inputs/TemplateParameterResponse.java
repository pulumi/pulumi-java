// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataproc_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.dataproc_v1.inputs.ParameterValidationResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class TemplateParameterResponse extends io.pulumi.resources.InvokeArgs {

    public static final TemplateParameterResponse Empty = new TemplateParameterResponse();

    @InputImport(name="description", required=true)
    private final String description;

    public String getDescription() {
        return this.description;
    }

    @InputImport(name="fields", required=true)
    private final List<String> fields;

    public List<String> getFields() {
        return this.fields;
    }

    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    @InputImport(name="validation", required=true)
    private final ParameterValidationResponse validation;

    public ParameterValidationResponse getValidation() {
        return this.validation;
    }

    public TemplateParameterResponse(
        String description,
        List<String> fields,
        String name,
        ParameterValidationResponse validation) {
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
        this.fields = Objects.requireNonNull(fields, "expected parameter 'fields' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.validation = Objects.requireNonNull(validation, "expected parameter 'validation' to be non-null");
    }

    private TemplateParameterResponse() {
        this.description = null;
        this.fields = List.of();
        this.name = null;
        this.validation = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TemplateParameterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String description;
        private List<String> fields;
        private String name;
        private ParameterValidationResponse validation;

        public Builder() {
    	      // Empty
        }

        public Builder(TemplateParameterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.fields = defaults.fields;
    	      this.name = defaults.name;
    	      this.validation = defaults.validation;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setFields(List<String> fields) {
            this.fields = Objects.requireNonNull(fields);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setValidation(ParameterValidationResponse validation) {
            this.validation = Objects.requireNonNull(validation);
            return this;
        }

        public TemplateParameterResponse build() {
            return new TemplateParameterResponse(description, fields, name, validation);
        }
    }
}
