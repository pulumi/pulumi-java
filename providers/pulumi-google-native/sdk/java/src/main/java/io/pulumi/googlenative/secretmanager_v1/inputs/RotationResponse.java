// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.secretmanager_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class RotationResponse extends io.pulumi.resources.InvokeArgs {

    public static final RotationResponse Empty = new RotationResponse();

    @InputImport(name="nextRotationTime", required=true)
    private final String nextRotationTime;

    public String getNextRotationTime() {
        return this.nextRotationTime;
    }

    @InputImport(name="rotationPeriod", required=true)
    private final String rotationPeriod;

    public String getRotationPeriod() {
        return this.rotationPeriod;
    }

    public RotationResponse(
        String nextRotationTime,
        String rotationPeriod) {
        this.nextRotationTime = Objects.requireNonNull(nextRotationTime, "expected parameter 'nextRotationTime' to be non-null");
        this.rotationPeriod = Objects.requireNonNull(rotationPeriod, "expected parameter 'rotationPeriod' to be non-null");
    }

    private RotationResponse() {
        this.nextRotationTime = null;
        this.rotationPeriod = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RotationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String nextRotationTime;
        private String rotationPeriod;

        public Builder() {
    	      // Empty
        }

        public Builder(RotationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.nextRotationTime = defaults.nextRotationTime;
    	      this.rotationPeriod = defaults.rotationPeriod;
        }

        public Builder setNextRotationTime(String nextRotationTime) {
            this.nextRotationTime = Objects.requireNonNull(nextRotationTime);
            return this;
        }

        public Builder setRotationPeriod(String rotationPeriod) {
            this.rotationPeriod = Objects.requireNonNull(rotationPeriod);
            return this;
        }

        public RotationResponse build() {
            return new RotationResponse(nextRotationTime, rotationPeriod);
        }
    }
}
