// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.iam_v1;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.iam_v1.enums.KeyKeyAlgorithm;
import io.pulumi.googlenative.iam_v1.enums.KeyPrivateKeyType;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class KeyArgs extends io.pulumi.resources.ResourceArgs {

    public static final KeyArgs Empty = new KeyArgs();

    /**
     * Which type of key and algorithm to use for the key. The default is currently a 2K RSA key. However this may change in the future.
     * 
     */
    @InputImport(name="keyAlgorithm")
      private final @Nullable Input<KeyKeyAlgorithm> keyAlgorithm;

    public Input<KeyKeyAlgorithm> getKeyAlgorithm() {
        return this.keyAlgorithm == null ? Input.empty() : this.keyAlgorithm;
    }

    /**
     * The output format of the private key. The default value is `TYPE_GOOGLE_CREDENTIALS_FILE`, which is the Google Credentials File format.
     * 
     */
    @InputImport(name="privateKeyType")
      private final @Nullable Input<KeyPrivateKeyType> privateKeyType;

    public Input<KeyPrivateKeyType> getPrivateKeyType() {
        return this.privateKeyType == null ? Input.empty() : this.privateKeyType;
    }

    @InputImport(name="project")
      private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="serviceAccountId", required=true)
      private final Input<String> serviceAccountId;

    public Input<String> getServiceAccountId() {
        return this.serviceAccountId;
    }

    public KeyArgs(
        @Nullable Input<KeyKeyAlgorithm> keyAlgorithm,
        @Nullable Input<KeyPrivateKeyType> privateKeyType,
        @Nullable Input<String> project,
        Input<String> serviceAccountId) {
        this.keyAlgorithm = keyAlgorithm;
        this.privateKeyType = privateKeyType;
        this.project = project;
        this.serviceAccountId = Objects.requireNonNull(serviceAccountId, "expected parameter 'serviceAccountId' to be non-null");
    }

    private KeyArgs() {
        this.keyAlgorithm = Input.empty();
        this.privateKeyType = Input.empty();
        this.project = Input.empty();
        this.serviceAccountId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<KeyKeyAlgorithm> keyAlgorithm;
        private @Nullable Input<KeyPrivateKeyType> privateKeyType;
        private @Nullable Input<String> project;
        private Input<String> serviceAccountId;

        public Builder() {
    	      // Empty
        }

        public Builder(KeyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyAlgorithm = defaults.keyAlgorithm;
    	      this.privateKeyType = defaults.privateKeyType;
    	      this.project = defaults.project;
    	      this.serviceAccountId = defaults.serviceAccountId;
        }

        public Builder keyAlgorithm(@Nullable Input<KeyKeyAlgorithm> keyAlgorithm) {
            this.keyAlgorithm = keyAlgorithm;
            return this;
        }

        public Builder keyAlgorithm(@Nullable KeyKeyAlgorithm keyAlgorithm) {
            this.keyAlgorithm = Input.ofNullable(keyAlgorithm);
            return this;
        }

        public Builder privateKeyType(@Nullable Input<KeyPrivateKeyType> privateKeyType) {
            this.privateKeyType = privateKeyType;
            return this;
        }

        public Builder privateKeyType(@Nullable KeyPrivateKeyType privateKeyType) {
            this.privateKeyType = Input.ofNullable(privateKeyType);
            return this;
        }

        public Builder project(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder serviceAccountId(Input<String> serviceAccountId) {
            this.serviceAccountId = Objects.requireNonNull(serviceAccountId);
            return this;
        }

        public Builder serviceAccountId(String serviceAccountId) {
            this.serviceAccountId = Input.of(Objects.requireNonNull(serviceAccountId));
            return this;
        }
        public KeyArgs build() {
            return new KeyArgs(keyAlgorithm, privateKeyType, project, serviceAccountId);
        }
    }
}
