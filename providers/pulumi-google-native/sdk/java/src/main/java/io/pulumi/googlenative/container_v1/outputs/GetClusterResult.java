// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.container_v1.outputs.AddonsConfigResponse;
import io.pulumi.googlenative.container_v1.outputs.AuthenticatorGroupsConfigResponse;
import io.pulumi.googlenative.container_v1.outputs.AutopilotResponse;
import io.pulumi.googlenative.container_v1.outputs.BinaryAuthorizationResponse;
import io.pulumi.googlenative.container_v1.outputs.ClusterAutoscalingResponse;
import io.pulumi.googlenative.container_v1.outputs.ConfidentialNodesResponse;
import io.pulumi.googlenative.container_v1.outputs.DatabaseEncryptionResponse;
import io.pulumi.googlenative.container_v1.outputs.IPAllocationPolicyResponse;
import io.pulumi.googlenative.container_v1.outputs.LegacyAbacResponse;
import io.pulumi.googlenative.container_v1.outputs.LoggingConfigResponse;
import io.pulumi.googlenative.container_v1.outputs.MaintenancePolicyResponse;
import io.pulumi.googlenative.container_v1.outputs.MasterAuthResponse;
import io.pulumi.googlenative.container_v1.outputs.MasterAuthorizedNetworksConfigResponse;
import io.pulumi.googlenative.container_v1.outputs.MaxPodsConstraintResponse;
import io.pulumi.googlenative.container_v1.outputs.MeshCertificatesResponse;
import io.pulumi.googlenative.container_v1.outputs.MonitoringConfigResponse;
import io.pulumi.googlenative.container_v1.outputs.NetworkConfigResponse;
import io.pulumi.googlenative.container_v1.outputs.NetworkPolicyResponse;
import io.pulumi.googlenative.container_v1.outputs.NodePoolDefaultsResponse;
import io.pulumi.googlenative.container_v1.outputs.NodePoolResponse;
import io.pulumi.googlenative.container_v1.outputs.NotificationConfigResponse;
import io.pulumi.googlenative.container_v1.outputs.PrivateClusterConfigResponse;
import io.pulumi.googlenative.container_v1.outputs.ReleaseChannelResponse;
import io.pulumi.googlenative.container_v1.outputs.ResourceUsageExportConfigResponse;
import io.pulumi.googlenative.container_v1.outputs.ShieldedNodesResponse;
import io.pulumi.googlenative.container_v1.outputs.StatusConditionResponse;
import io.pulumi.googlenative.container_v1.outputs.VerticalPodAutoscalingResponse;
import io.pulumi.googlenative.container_v1.outputs.WorkloadIdentityConfigResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetClusterResult {
    /**
     * Configurations for the various addons available to run in the cluster.
     * 
     */
    private final AddonsConfigResponse addonsConfig;
    /**
     * Configuration controlling RBAC group membership information.
     * 
     */
    private final AuthenticatorGroupsConfigResponse authenticatorGroupsConfig;
    /**
     * Autopilot configuration for the cluster.
     * 
     */
    private final AutopilotResponse autopilot;
    /**
     * Cluster-level autoscaling configuration.
     * 
     */
    private final ClusterAutoscalingResponse autoscaling;
    /**
     * Configuration for Binary Authorization.
     * 
     */
    private final BinaryAuthorizationResponse binaryAuthorization;
    /**
     * The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
     * 
     */
    private final String clusterIpv4Cidr;
    /**
     * Which conditions caused the current cluster state.
     * 
     */
    private final List<StatusConditionResponse> conditions;
    /**
     * Configuration of Confidential Nodes
     * 
     */
    private final ConfidentialNodesResponse confidentialNodes;
    /**
     * [Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
     */
    private final String createTime;
    /**
     * [Output only] The current software version of the master endpoint.
     * 
     */
    private final String currentMasterVersion;
    /**
     * [Output only] Deprecated, use [NodePools.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this reflects the minimum version of all nodes.
     * 
     */
    private final String currentNodeVersion;
    /**
     * Configuration of etcd encryption.
     * 
     */
    private final DatabaseEncryptionResponse databaseEncryption;
    /**
     * The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support.
     * 
     */
    private final MaxPodsConstraintResponse defaultMaxPodsConstraint;
    /**
     * An optional description of this cluster.
     * 
     */
    private final String description;
    /**
     * Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1alpha1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
     * 
     */
    private final Boolean enableKubernetesAlpha;
    /**
     * Enable the ability to use Cloud TPUs in this cluster.
     * 
     */
    private final Boolean enableTpu;
    /**
     * [Output only] The IP address of this cluster's master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information.
     * 
     */
    private final String endpoint;
    /**
     * [Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
     */
    private final String expireTime;
    /**
     * The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "","-": picks the default Kubernetes version
     * 
     */
    private final String initialClusterVersion;
    /**
     * Configuration for cluster IP allocation.
     * 
     */
    private final IPAllocationPolicyResponse ipAllocationPolicy;
    /**
     * The fingerprint of the set of labels for this cluster.
     * 
     */
    private final String labelFingerprint;
    /**
     * Configuration for the legacy ABAC authorization mode.
     * 
     */
    private final LegacyAbacResponse legacyAbac;
    /**
     * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.
     * 
     */
    private final String location;
    /**
     * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.
     * 
     */
    private final List<String> locations;
    /**
     * Logging configuration for the cluster.
     * 
     */
    private final LoggingConfigResponse loggingConfig;
    /**
     * The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
     * 
     */
    private final String loggingService;
    /**
     * Configure the maintenance policy for this cluster.
     * 
     */
    private final MaintenancePolicyResponse maintenancePolicy;
    /**
     * The authentication information for accessing the master endpoint. If unspecified, the defaults are used: For clusters before v1.12, if master_auth is unspecified, `username` will be set to "admin", a random password will be generated, and a client certificate will be issued.
     * 
     */
    private final MasterAuthResponse masterAuth;
    /**
     * The configuration options for master authorized networks feature.
     * 
     */
    private final MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig;
    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     * 
     */
    private final MeshCertificatesResponse meshCertificates;
    /**
     * Monitoring configuration for the cluster.
     * 
     */
    private final MonitoringConfigResponse monitoringConfig;
    /**
     * The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
     * 
     */
    private final String monitoringService;
    /**
     * The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.
     * 
     */
    private final String name;
    /**
     * The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used.
     * 
     */
    private final String network;
    /**
     * Configuration for cluster networking.
     * 
     */
    private final NetworkConfigResponse networkConfig;
    /**
     * Configuration options for the NetworkPolicy feature.
     * 
     */
    private final NetworkPolicyResponse networkPolicy;
    /**
     * [Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range. This field will only be set when cluster is in route-based network mode.
     * 
     */
    private final Integer nodeIpv4CidrSize;
    /**
     * Default NodePool settings for the entire cluster. These settings are overridden if specified on the specific NodePool object.
     * 
     */
    private final NodePoolDefaultsResponse nodePoolDefaults;
    /**
     * The node pools associated with this cluster. This field should not be set if "node_config" or "initial_node_count" are specified.
     * 
     */
    private final List<NodePoolResponse> nodePools;
    /**
     * Notification configuration of the cluster.
     * 
     */
    private final NotificationConfigResponse notificationConfig;
    /**
     * Configuration for private cluster.
     * 
     */
    private final PrivateClusterConfigResponse privateClusterConfig;
    /**
     * Release channel configuration.
     * 
     */
    private final ReleaseChannelResponse releaseChannel;
    /**
     * The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
     * 
     */
    private final Map<String,String> resourceLabels;
    /**
     * Configuration for exporting resource usages. Resource usage export is disabled when this config is unspecified.
     * 
     */
    private final ResourceUsageExportConfigResponse resourceUsageExportConfig;
    /**
     * [Output only] Server-defined URL for the resource.
     * 
     */
    private final String selfLink;
    /**
     * [Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR.
     * 
     */
    private final String servicesIpv4Cidr;
    /**
     * Shielded Nodes configuration.
     * 
     */
    private final ShieldedNodesResponse shieldedNodes;
    /**
     * [Output only] The current status of this cluster.
     * 
     */
    private final String status;
    /**
     * The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected.
     * 
     */
    private final String subnetwork;
    /**
     * [Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`).
     * 
     */
    private final String tpuIpv4CidrBlock;
    /**
     * Cluster-level Vertical Pod Autoscaling configuration.
     * 
     */
    private final VerticalPodAutoscalingResponse verticalPodAutoscaling;
    /**
     * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
     * 
     */
    private final WorkloadIdentityConfigResponse workloadIdentityConfig;

    @OutputCustomType.Constructor
    private GetClusterResult(
        @OutputCustomType.Parameter("addonsConfig") AddonsConfigResponse addonsConfig,
        @OutputCustomType.Parameter("authenticatorGroupsConfig") AuthenticatorGroupsConfigResponse authenticatorGroupsConfig,
        @OutputCustomType.Parameter("autopilot") AutopilotResponse autopilot,
        @OutputCustomType.Parameter("autoscaling") ClusterAutoscalingResponse autoscaling,
        @OutputCustomType.Parameter("binaryAuthorization") BinaryAuthorizationResponse binaryAuthorization,
        @OutputCustomType.Parameter("clusterIpv4Cidr") String clusterIpv4Cidr,
        @OutputCustomType.Parameter("conditions") List<StatusConditionResponse> conditions,
        @OutputCustomType.Parameter("confidentialNodes") ConfidentialNodesResponse confidentialNodes,
        @OutputCustomType.Parameter("createTime") String createTime,
        @OutputCustomType.Parameter("currentMasterVersion") String currentMasterVersion,
        @OutputCustomType.Parameter("currentNodeVersion") String currentNodeVersion,
        @OutputCustomType.Parameter("databaseEncryption") DatabaseEncryptionResponse databaseEncryption,
        @OutputCustomType.Parameter("defaultMaxPodsConstraint") MaxPodsConstraintResponse defaultMaxPodsConstraint,
        @OutputCustomType.Parameter("description") String description,
        @OutputCustomType.Parameter("enableKubernetesAlpha") Boolean enableKubernetesAlpha,
        @OutputCustomType.Parameter("enableTpu") Boolean enableTpu,
        @OutputCustomType.Parameter("endpoint") String endpoint,
        @OutputCustomType.Parameter("expireTime") String expireTime,
        @OutputCustomType.Parameter("initialClusterVersion") String initialClusterVersion,
        @OutputCustomType.Parameter("ipAllocationPolicy") IPAllocationPolicyResponse ipAllocationPolicy,
        @OutputCustomType.Parameter("labelFingerprint") String labelFingerprint,
        @OutputCustomType.Parameter("legacyAbac") LegacyAbacResponse legacyAbac,
        @OutputCustomType.Parameter("location") String location,
        @OutputCustomType.Parameter("locations") List<String> locations,
        @OutputCustomType.Parameter("loggingConfig") LoggingConfigResponse loggingConfig,
        @OutputCustomType.Parameter("loggingService") String loggingService,
        @OutputCustomType.Parameter("maintenancePolicy") MaintenancePolicyResponse maintenancePolicy,
        @OutputCustomType.Parameter("masterAuth") MasterAuthResponse masterAuth,
        @OutputCustomType.Parameter("masterAuthorizedNetworksConfig") MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig,
        @OutputCustomType.Parameter("meshCertificates") MeshCertificatesResponse meshCertificates,
        @OutputCustomType.Parameter("monitoringConfig") MonitoringConfigResponse monitoringConfig,
        @OutputCustomType.Parameter("monitoringService") String monitoringService,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("network") String network,
        @OutputCustomType.Parameter("networkConfig") NetworkConfigResponse networkConfig,
        @OutputCustomType.Parameter("networkPolicy") NetworkPolicyResponse networkPolicy,
        @OutputCustomType.Parameter("nodeIpv4CidrSize") Integer nodeIpv4CidrSize,
        @OutputCustomType.Parameter("nodePoolDefaults") NodePoolDefaultsResponse nodePoolDefaults,
        @OutputCustomType.Parameter("nodePools") List<NodePoolResponse> nodePools,
        @OutputCustomType.Parameter("notificationConfig") NotificationConfigResponse notificationConfig,
        @OutputCustomType.Parameter("privateClusterConfig") PrivateClusterConfigResponse privateClusterConfig,
        @OutputCustomType.Parameter("releaseChannel") ReleaseChannelResponse releaseChannel,
        @OutputCustomType.Parameter("resourceLabels") Map<String,String> resourceLabels,
        @OutputCustomType.Parameter("resourceUsageExportConfig") ResourceUsageExportConfigResponse resourceUsageExportConfig,
        @OutputCustomType.Parameter("selfLink") String selfLink,
        @OutputCustomType.Parameter("servicesIpv4Cidr") String servicesIpv4Cidr,
        @OutputCustomType.Parameter("shieldedNodes") ShieldedNodesResponse shieldedNodes,
        @OutputCustomType.Parameter("status") String status,
        @OutputCustomType.Parameter("subnetwork") String subnetwork,
        @OutputCustomType.Parameter("tpuIpv4CidrBlock") String tpuIpv4CidrBlock,
        @OutputCustomType.Parameter("verticalPodAutoscaling") VerticalPodAutoscalingResponse verticalPodAutoscaling,
        @OutputCustomType.Parameter("workloadIdentityConfig") WorkloadIdentityConfigResponse workloadIdentityConfig) {
        this.addonsConfig = addonsConfig;
        this.authenticatorGroupsConfig = authenticatorGroupsConfig;
        this.autopilot = autopilot;
        this.autoscaling = autoscaling;
        this.binaryAuthorization = binaryAuthorization;
        this.clusterIpv4Cidr = clusterIpv4Cidr;
        this.conditions = conditions;
        this.confidentialNodes = confidentialNodes;
        this.createTime = createTime;
        this.currentMasterVersion = currentMasterVersion;
        this.currentNodeVersion = currentNodeVersion;
        this.databaseEncryption = databaseEncryption;
        this.defaultMaxPodsConstraint = defaultMaxPodsConstraint;
        this.description = description;
        this.enableKubernetesAlpha = enableKubernetesAlpha;
        this.enableTpu = enableTpu;
        this.endpoint = endpoint;
        this.expireTime = expireTime;
        this.initialClusterVersion = initialClusterVersion;
        this.ipAllocationPolicy = ipAllocationPolicy;
        this.labelFingerprint = labelFingerprint;
        this.legacyAbac = legacyAbac;
        this.location = location;
        this.locations = locations;
        this.loggingConfig = loggingConfig;
        this.loggingService = loggingService;
        this.maintenancePolicy = maintenancePolicy;
        this.masterAuth = masterAuth;
        this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
        this.meshCertificates = meshCertificates;
        this.monitoringConfig = monitoringConfig;
        this.monitoringService = monitoringService;
        this.name = name;
        this.network = network;
        this.networkConfig = networkConfig;
        this.networkPolicy = networkPolicy;
        this.nodeIpv4CidrSize = nodeIpv4CidrSize;
        this.nodePoolDefaults = nodePoolDefaults;
        this.nodePools = nodePools;
        this.notificationConfig = notificationConfig;
        this.privateClusterConfig = privateClusterConfig;
        this.releaseChannel = releaseChannel;
        this.resourceLabels = resourceLabels;
        this.resourceUsageExportConfig = resourceUsageExportConfig;
        this.selfLink = selfLink;
        this.servicesIpv4Cidr = servicesIpv4Cidr;
        this.shieldedNodes = shieldedNodes;
        this.status = status;
        this.subnetwork = subnetwork;
        this.tpuIpv4CidrBlock = tpuIpv4CidrBlock;
        this.verticalPodAutoscaling = verticalPodAutoscaling;
        this.workloadIdentityConfig = workloadIdentityConfig;
    }

    /**
     * Configurations for the various addons available to run in the cluster.
     * 
    */
    public AddonsConfigResponse getAddonsConfig() {
        return this.addonsConfig;
    }
    /**
     * Configuration controlling RBAC group membership information.
     * 
    */
    public AuthenticatorGroupsConfigResponse getAuthenticatorGroupsConfig() {
        return this.authenticatorGroupsConfig;
    }
    /**
     * Autopilot configuration for the cluster.
     * 
    */
    public AutopilotResponse getAutopilot() {
        return this.autopilot;
    }
    /**
     * Cluster-level autoscaling configuration.
     * 
    */
    public ClusterAutoscalingResponse getAutoscaling() {
        return this.autoscaling;
    }
    /**
     * Configuration for Binary Authorization.
     * 
    */
    public BinaryAuthorizationResponse getBinaryAuthorization() {
        return this.binaryAuthorization;
    }
    /**
     * The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
     * 
    */
    public String getClusterIpv4Cidr() {
        return this.clusterIpv4Cidr;
    }
    /**
     * Which conditions caused the current cluster state.
     * 
    */
    public List<StatusConditionResponse> getConditions() {
        return this.conditions;
    }
    /**
     * Configuration of Confidential Nodes
     * 
    */
    public ConfidentialNodesResponse getConfidentialNodes() {
        return this.confidentialNodes;
    }
    /**
     * [Output only] The time the cluster was created, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
    */
    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * [Output only] The current software version of the master endpoint.
     * 
    */
    public String getCurrentMasterVersion() {
        return this.currentMasterVersion;
    }
    /**
     * [Output only] Deprecated, use [NodePools.version](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools) instead. The current version of the node software components. If they are currently at multiple versions because they're in the process of being upgraded, this reflects the minimum version of all nodes.
     * 
    */
    public String getCurrentNodeVersion() {
        return this.currentNodeVersion;
    }
    /**
     * Configuration of etcd encryption.
     * 
    */
    public DatabaseEncryptionResponse getDatabaseEncryption() {
        return this.databaseEncryption;
    }
    /**
     * The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support.
     * 
    */
    public MaxPodsConstraintResponse getDefaultMaxPodsConstraint() {
        return this.defaultMaxPodsConstraint;
    }
    /**
     * An optional description of this cluster.
     * 
    */
    public String getDescription() {
        return this.description;
    }
    /**
     * Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1alpha1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
     * 
    */
    public Boolean getEnableKubernetesAlpha() {
        return this.enableKubernetesAlpha;
    }
    /**
     * Enable the ability to use Cloud TPUs in this cluster.
     * 
    */
    public Boolean getEnableTpu() {
        return this.enableTpu;
    }
    /**
     * [Output only] The IP address of this cluster's master endpoint. The endpoint can be accessed from the internet at `https://username:password@endpoint/`. See the `masterAuth` property of this resource for username and password information.
     * 
    */
    public String getEndpoint() {
        return this.endpoint;
    }
    /**
     * [Output only] The time the cluster will be automatically deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * 
    */
    public String getExpireTime() {
        return this.expireTime;
    }
    /**
     * The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "","-": picks the default Kubernetes version
     * 
    */
    public String getInitialClusterVersion() {
        return this.initialClusterVersion;
    }
    /**
     * Configuration for cluster IP allocation.
     * 
    */
    public IPAllocationPolicyResponse getIpAllocationPolicy() {
        return this.ipAllocationPolicy;
    }
    /**
     * The fingerprint of the set of labels for this cluster.
     * 
    */
    public String getLabelFingerprint() {
        return this.labelFingerprint;
    }
    /**
     * Configuration for the legacy ABAC authorization mode.
     * 
    */
    public LegacyAbacResponse getLegacyAbac() {
        return this.legacyAbac;
    }
    /**
     * [Output only] The name of the Google Compute Engine [zone](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) or [region](https://cloud.google.com/compute/docs/regions-zones/regions-zones#available) in which the cluster resides.
     * 
    */
    public String getLocation() {
        return this.location;
    }
    /**
     * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.
     * 
    */
    public List<String> getLocations() {
        return this.locations;
    }
    /**
     * Logging configuration for the cluster.
     * 
    */
    public LoggingConfigResponse getLoggingConfig() {
        return this.loggingConfig;
    }
    /**
     * The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
     * 
    */
    public String getLoggingService() {
        return this.loggingService;
    }
    /**
     * Configure the maintenance policy for this cluster.
     * 
    */
    public MaintenancePolicyResponse getMaintenancePolicy() {
        return this.maintenancePolicy;
    }
    /**
     * The authentication information for accessing the master endpoint. If unspecified, the defaults are used: For clusters before v1.12, if master_auth is unspecified, `username` will be set to "admin", a random password will be generated, and a client certificate will be issued.
     * 
    */
    public MasterAuthResponse getMasterAuth() {
        return this.masterAuth;
    }
    /**
     * The configuration options for master authorized networks feature.
     * 
    */
    public MasterAuthorizedNetworksConfigResponse getMasterAuthorizedNetworksConfig() {
        return this.masterAuthorizedNetworksConfig;
    }
    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     * 
    */
    public MeshCertificatesResponse getMeshCertificates() {
        return this.meshCertificates;
    }
    /**
     * Monitoring configuration for the cluster.
     * 
    */
    public MonitoringConfigResponse getMonitoringConfig() {
        return this.monitoringConfig;
    }
    /**
     * The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
     * 
    */
    public String getMonitoringService() {
        return this.monitoringService;
    }
    /**
     * The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used.
     * 
    */
    public String getNetwork() {
        return this.network;
    }
    /**
     * Configuration for cluster networking.
     * 
    */
    public NetworkConfigResponse getNetworkConfig() {
        return this.networkConfig;
    }
    /**
     * Configuration options for the NetworkPolicy feature.
     * 
    */
    public NetworkPolicyResponse getNetworkPolicy() {
        return this.networkPolicy;
    }
    /**
     * [Output only] The size of the address space on each node for hosting containers. This is provisioned from within the `container_ipv4_cidr` range. This field will only be set when cluster is in route-based network mode.
     * 
    */
    public Integer getNodeIpv4CidrSize() {
        return this.nodeIpv4CidrSize;
    }
    /**
     * Default NodePool settings for the entire cluster. These settings are overridden if specified on the specific NodePool object.
     * 
    */
    public NodePoolDefaultsResponse getNodePoolDefaults() {
        return this.nodePoolDefaults;
    }
    /**
     * The node pools associated with this cluster. This field should not be set if "node_config" or "initial_node_count" are specified.
     * 
    */
    public List<NodePoolResponse> getNodePools() {
        return this.nodePools;
    }
    /**
     * Notification configuration of the cluster.
     * 
    */
    public NotificationConfigResponse getNotificationConfig() {
        return this.notificationConfig;
    }
    /**
     * Configuration for private cluster.
     * 
    */
    public PrivateClusterConfigResponse getPrivateClusterConfig() {
        return this.privateClusterConfig;
    }
    /**
     * Release channel configuration.
     * 
    */
    public ReleaseChannelResponse getReleaseChannel() {
        return this.releaseChannel;
    }
    /**
     * The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
     * 
    */
    public Map<String,String> getResourceLabels() {
        return this.resourceLabels;
    }
    /**
     * Configuration for exporting resource usages. Resource usage export is disabled when this config is unspecified.
     * 
    */
    public ResourceUsageExportConfigResponse getResourceUsageExportConfig() {
        return this.resourceUsageExportConfig;
    }
    /**
     * [Output only] Server-defined URL for the resource.
     * 
    */
    public String getSelfLink() {
        return this.selfLink;
    }
    /**
     * [Output only] The IP address range of the Kubernetes services in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`). Service addresses are typically put in the last `/16` from the container CIDR.
     * 
    */
    public String getServicesIpv4Cidr() {
        return this.servicesIpv4Cidr;
    }
    /**
     * Shielded Nodes configuration.
     * 
    */
    public ShieldedNodesResponse getShieldedNodes() {
        return this.shieldedNodes;
    }
    /**
     * [Output only] The current status of this cluster.
     * 
    */
    public String getStatus() {
        return this.status;
    }
    /**
     * The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected.
     * 
    */
    public String getSubnetwork() {
        return this.subnetwork;
    }
    /**
     * [Output only] The IP address range of the Cloud TPUs in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `1.2.3.4/29`).
     * 
    */
    public String getTpuIpv4CidrBlock() {
        return this.tpuIpv4CidrBlock;
    }
    /**
     * Cluster-level Vertical Pod Autoscaling configuration.
     * 
    */
    public VerticalPodAutoscalingResponse getVerticalPodAutoscaling() {
        return this.verticalPodAutoscaling;
    }
    /**
     * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
     * 
    */
    public WorkloadIdentityConfigResponse getWorkloadIdentityConfig() {
        return this.workloadIdentityConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AddonsConfigResponse addonsConfig;
        private AuthenticatorGroupsConfigResponse authenticatorGroupsConfig;
        private AutopilotResponse autopilot;
        private ClusterAutoscalingResponse autoscaling;
        private BinaryAuthorizationResponse binaryAuthorization;
        private String clusterIpv4Cidr;
        private List<StatusConditionResponse> conditions;
        private ConfidentialNodesResponse confidentialNodes;
        private String createTime;
        private String currentMasterVersion;
        private String currentNodeVersion;
        private DatabaseEncryptionResponse databaseEncryption;
        private MaxPodsConstraintResponse defaultMaxPodsConstraint;
        private String description;
        private Boolean enableKubernetesAlpha;
        private Boolean enableTpu;
        private String endpoint;
        private String expireTime;
        private String initialClusterVersion;
        private IPAllocationPolicyResponse ipAllocationPolicy;
        private String labelFingerprint;
        private LegacyAbacResponse legacyAbac;
        private String location;
        private List<String> locations;
        private LoggingConfigResponse loggingConfig;
        private String loggingService;
        private MaintenancePolicyResponse maintenancePolicy;
        private MasterAuthResponse masterAuth;
        private MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig;
        private MeshCertificatesResponse meshCertificates;
        private MonitoringConfigResponse monitoringConfig;
        private String monitoringService;
        private String name;
        private String network;
        private NetworkConfigResponse networkConfig;
        private NetworkPolicyResponse networkPolicy;
        private Integer nodeIpv4CidrSize;
        private NodePoolDefaultsResponse nodePoolDefaults;
        private List<NodePoolResponse> nodePools;
        private NotificationConfigResponse notificationConfig;
        private PrivateClusterConfigResponse privateClusterConfig;
        private ReleaseChannelResponse releaseChannel;
        private Map<String,String> resourceLabels;
        private ResourceUsageExportConfigResponse resourceUsageExportConfig;
        private String selfLink;
        private String servicesIpv4Cidr;
        private ShieldedNodesResponse shieldedNodes;
        private String status;
        private String subnetwork;
        private String tpuIpv4CidrBlock;
        private VerticalPodAutoscalingResponse verticalPodAutoscaling;
        private WorkloadIdentityConfigResponse workloadIdentityConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(GetClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonsConfig = defaults.addonsConfig;
    	      this.authenticatorGroupsConfig = defaults.authenticatorGroupsConfig;
    	      this.autopilot = defaults.autopilot;
    	      this.autoscaling = defaults.autoscaling;
    	      this.binaryAuthorization = defaults.binaryAuthorization;
    	      this.clusterIpv4Cidr = defaults.clusterIpv4Cidr;
    	      this.conditions = defaults.conditions;
    	      this.confidentialNodes = defaults.confidentialNodes;
    	      this.createTime = defaults.createTime;
    	      this.currentMasterVersion = defaults.currentMasterVersion;
    	      this.currentNodeVersion = defaults.currentNodeVersion;
    	      this.databaseEncryption = defaults.databaseEncryption;
    	      this.defaultMaxPodsConstraint = defaults.defaultMaxPodsConstraint;
    	      this.description = defaults.description;
    	      this.enableKubernetesAlpha = defaults.enableKubernetesAlpha;
    	      this.enableTpu = defaults.enableTpu;
    	      this.endpoint = defaults.endpoint;
    	      this.expireTime = defaults.expireTime;
    	      this.initialClusterVersion = defaults.initialClusterVersion;
    	      this.ipAllocationPolicy = defaults.ipAllocationPolicy;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.legacyAbac = defaults.legacyAbac;
    	      this.location = defaults.location;
    	      this.locations = defaults.locations;
    	      this.loggingConfig = defaults.loggingConfig;
    	      this.loggingService = defaults.loggingService;
    	      this.maintenancePolicy = defaults.maintenancePolicy;
    	      this.masterAuth = defaults.masterAuth;
    	      this.masterAuthorizedNetworksConfig = defaults.masterAuthorizedNetworksConfig;
    	      this.meshCertificates = defaults.meshCertificates;
    	      this.monitoringConfig = defaults.monitoringConfig;
    	      this.monitoringService = defaults.monitoringService;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkConfig = defaults.networkConfig;
    	      this.networkPolicy = defaults.networkPolicy;
    	      this.nodeIpv4CidrSize = defaults.nodeIpv4CidrSize;
    	      this.nodePoolDefaults = defaults.nodePoolDefaults;
    	      this.nodePools = defaults.nodePools;
    	      this.notificationConfig = defaults.notificationConfig;
    	      this.privateClusterConfig = defaults.privateClusterConfig;
    	      this.releaseChannel = defaults.releaseChannel;
    	      this.resourceLabels = defaults.resourceLabels;
    	      this.resourceUsageExportConfig = defaults.resourceUsageExportConfig;
    	      this.selfLink = defaults.selfLink;
    	      this.servicesIpv4Cidr = defaults.servicesIpv4Cidr;
    	      this.shieldedNodes = defaults.shieldedNodes;
    	      this.status = defaults.status;
    	      this.subnetwork = defaults.subnetwork;
    	      this.tpuIpv4CidrBlock = defaults.tpuIpv4CidrBlock;
    	      this.verticalPodAutoscaling = defaults.verticalPodAutoscaling;
    	      this.workloadIdentityConfig = defaults.workloadIdentityConfig;
        }

        public Builder addonsConfig(AddonsConfigResponse addonsConfig) {
            this.addonsConfig = Objects.requireNonNull(addonsConfig);
            return this;
        }

        public Builder authenticatorGroupsConfig(AuthenticatorGroupsConfigResponse authenticatorGroupsConfig) {
            this.authenticatorGroupsConfig = Objects.requireNonNull(authenticatorGroupsConfig);
            return this;
        }

        public Builder autopilot(AutopilotResponse autopilot) {
            this.autopilot = Objects.requireNonNull(autopilot);
            return this;
        }

        public Builder autoscaling(ClusterAutoscalingResponse autoscaling) {
            this.autoscaling = Objects.requireNonNull(autoscaling);
            return this;
        }

        public Builder binaryAuthorization(BinaryAuthorizationResponse binaryAuthorization) {
            this.binaryAuthorization = Objects.requireNonNull(binaryAuthorization);
            return this;
        }

        public Builder clusterIpv4Cidr(String clusterIpv4Cidr) {
            this.clusterIpv4Cidr = Objects.requireNonNull(clusterIpv4Cidr);
            return this;
        }

        public Builder conditions(List<StatusConditionResponse> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }

        public Builder confidentialNodes(ConfidentialNodesResponse confidentialNodes) {
            this.confidentialNodes = Objects.requireNonNull(confidentialNodes);
            return this;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder currentMasterVersion(String currentMasterVersion) {
            this.currentMasterVersion = Objects.requireNonNull(currentMasterVersion);
            return this;
        }

        public Builder currentNodeVersion(String currentNodeVersion) {
            this.currentNodeVersion = Objects.requireNonNull(currentNodeVersion);
            return this;
        }

        public Builder databaseEncryption(DatabaseEncryptionResponse databaseEncryption) {
            this.databaseEncryption = Objects.requireNonNull(databaseEncryption);
            return this;
        }

        public Builder defaultMaxPodsConstraint(MaxPodsConstraintResponse defaultMaxPodsConstraint) {
            this.defaultMaxPodsConstraint = Objects.requireNonNull(defaultMaxPodsConstraint);
            return this;
        }

        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder enableKubernetesAlpha(Boolean enableKubernetesAlpha) {
            this.enableKubernetesAlpha = Objects.requireNonNull(enableKubernetesAlpha);
            return this;
        }

        public Builder enableTpu(Boolean enableTpu) {
            this.enableTpu = Objects.requireNonNull(enableTpu);
            return this;
        }

        public Builder endpoint(String endpoint) {
            this.endpoint = Objects.requireNonNull(endpoint);
            return this;
        }

        public Builder expireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }

        public Builder initialClusterVersion(String initialClusterVersion) {
            this.initialClusterVersion = Objects.requireNonNull(initialClusterVersion);
            return this;
        }

        public Builder ipAllocationPolicy(IPAllocationPolicyResponse ipAllocationPolicy) {
            this.ipAllocationPolicy = Objects.requireNonNull(ipAllocationPolicy);
            return this;
        }

        public Builder labelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }

        public Builder legacyAbac(LegacyAbacResponse legacyAbac) {
            this.legacyAbac = Objects.requireNonNull(legacyAbac);
            return this;
        }

        public Builder location(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder locations(List<String> locations) {
            this.locations = Objects.requireNonNull(locations);
            return this;
        }

        public Builder loggingConfig(LoggingConfigResponse loggingConfig) {
            this.loggingConfig = Objects.requireNonNull(loggingConfig);
            return this;
        }

        public Builder loggingService(String loggingService) {
            this.loggingService = Objects.requireNonNull(loggingService);
            return this;
        }

        public Builder maintenancePolicy(MaintenancePolicyResponse maintenancePolicy) {
            this.maintenancePolicy = Objects.requireNonNull(maintenancePolicy);
            return this;
        }

        public Builder masterAuth(MasterAuthResponse masterAuth) {
            this.masterAuth = Objects.requireNonNull(masterAuth);
            return this;
        }

        public Builder masterAuthorizedNetworksConfig(MasterAuthorizedNetworksConfigResponse masterAuthorizedNetworksConfig) {
            this.masterAuthorizedNetworksConfig = Objects.requireNonNull(masterAuthorizedNetworksConfig);
            return this;
        }

        public Builder meshCertificates(MeshCertificatesResponse meshCertificates) {
            this.meshCertificates = Objects.requireNonNull(meshCertificates);
            return this;
        }

        public Builder monitoringConfig(MonitoringConfigResponse monitoringConfig) {
            this.monitoringConfig = Objects.requireNonNull(monitoringConfig);
            return this;
        }

        public Builder monitoringService(String monitoringService) {
            this.monitoringService = Objects.requireNonNull(monitoringService);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder network(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder networkConfig(NetworkConfigResponse networkConfig) {
            this.networkConfig = Objects.requireNonNull(networkConfig);
            return this;
        }

        public Builder networkPolicy(NetworkPolicyResponse networkPolicy) {
            this.networkPolicy = Objects.requireNonNull(networkPolicy);
            return this;
        }

        public Builder nodeIpv4CidrSize(Integer nodeIpv4CidrSize) {
            this.nodeIpv4CidrSize = Objects.requireNonNull(nodeIpv4CidrSize);
            return this;
        }

        public Builder nodePoolDefaults(NodePoolDefaultsResponse nodePoolDefaults) {
            this.nodePoolDefaults = Objects.requireNonNull(nodePoolDefaults);
            return this;
        }

        public Builder nodePools(List<NodePoolResponse> nodePools) {
            this.nodePools = Objects.requireNonNull(nodePools);
            return this;
        }

        public Builder notificationConfig(NotificationConfigResponse notificationConfig) {
            this.notificationConfig = Objects.requireNonNull(notificationConfig);
            return this;
        }

        public Builder privateClusterConfig(PrivateClusterConfigResponse privateClusterConfig) {
            this.privateClusterConfig = Objects.requireNonNull(privateClusterConfig);
            return this;
        }

        public Builder releaseChannel(ReleaseChannelResponse releaseChannel) {
            this.releaseChannel = Objects.requireNonNull(releaseChannel);
            return this;
        }

        public Builder resourceLabels(Map<String,String> resourceLabels) {
            this.resourceLabels = Objects.requireNonNull(resourceLabels);
            return this;
        }

        public Builder resourceUsageExportConfig(ResourceUsageExportConfigResponse resourceUsageExportConfig) {
            this.resourceUsageExportConfig = Objects.requireNonNull(resourceUsageExportConfig);
            return this;
        }

        public Builder selfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder servicesIpv4Cidr(String servicesIpv4Cidr) {
            this.servicesIpv4Cidr = Objects.requireNonNull(servicesIpv4Cidr);
            return this;
        }

        public Builder shieldedNodes(ShieldedNodesResponse shieldedNodes) {
            this.shieldedNodes = Objects.requireNonNull(shieldedNodes);
            return this;
        }

        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder subnetwork(String subnetwork) {
            this.subnetwork = Objects.requireNonNull(subnetwork);
            return this;
        }

        public Builder tpuIpv4CidrBlock(String tpuIpv4CidrBlock) {
            this.tpuIpv4CidrBlock = Objects.requireNonNull(tpuIpv4CidrBlock);
            return this;
        }

        public Builder verticalPodAutoscaling(VerticalPodAutoscalingResponse verticalPodAutoscaling) {
            this.verticalPodAutoscaling = Objects.requireNonNull(verticalPodAutoscaling);
            return this;
        }

        public Builder workloadIdentityConfig(WorkloadIdentityConfigResponse workloadIdentityConfig) {
            this.workloadIdentityConfig = Objects.requireNonNull(workloadIdentityConfig);
            return this;
        }
        public GetClusterResult build() {
            return new GetClusterResult(addonsConfig, authenticatorGroupsConfig, autopilot, autoscaling, binaryAuthorization, clusterIpv4Cidr, conditions, confidentialNodes, createTime, currentMasterVersion, currentNodeVersion, databaseEncryption, defaultMaxPodsConstraint, description, enableKubernetesAlpha, enableTpu, endpoint, expireTime, initialClusterVersion, ipAllocationPolicy, labelFingerprint, legacyAbac, location, locations, loggingConfig, loggingService, maintenancePolicy, masterAuth, masterAuthorizedNetworksConfig, meshCertificates, monitoringConfig, monitoringService, name, network, networkConfig, networkPolicy, nodeIpv4CidrSize, nodePoolDefaults, nodePools, notificationConfig, privateClusterConfig, releaseChannel, resourceLabels, resourceUsageExportConfig, selfLink, servicesIpv4Cidr, shieldedNodes, status, subnetwork, tpuIpv4CidrBlock, verticalPodAutoscaling, workloadIdentityConfig);
        }
    }
}
