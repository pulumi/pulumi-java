// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.compute_alpha.enums.ExternalVpnGatewayRedundancyType;
import io.pulumi.googlenative.compute_alpha.inputs.ExternalVpnGatewayInterfaceArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ExternalVpnGatewayArgs extends io.pulumi.resources.ResourceArgs {

    public static final ExternalVpnGatewayArgs Empty = new ExternalVpnGatewayArgs();

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="interfaces")
    private final @Nullable Input<List<ExternalVpnGatewayInterfaceArgs>> interfaces;

    public Input<List<ExternalVpnGatewayInterfaceArgs>> getInterfaces() {
        return this.interfaces == null ? Input.empty() : this.interfaces;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="redundancyType")
    private final @Nullable Input<ExternalVpnGatewayRedundancyType> redundancyType;

    public Input<ExternalVpnGatewayRedundancyType> getRedundancyType() {
        return this.redundancyType == null ? Input.empty() : this.redundancyType;
    }

    @InputImport(name="requestId")
    private final @Nullable Input<String> requestId;

    public Input<String> getRequestId() {
        return this.requestId == null ? Input.empty() : this.requestId;
    }

    public ExternalVpnGatewayArgs(
        @Nullable Input<String> description,
        @Nullable Input<List<ExternalVpnGatewayInterfaceArgs>> interfaces,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<ExternalVpnGatewayRedundancyType> redundancyType,
        @Nullable Input<String> requestId) {
        this.description = description;
        this.interfaces = interfaces;
        this.labels = labels;
        this.name = name;
        this.project = project;
        this.redundancyType = redundancyType;
        this.requestId = requestId;
    }

    private ExternalVpnGatewayArgs() {
        this.description = Input.empty();
        this.interfaces = Input.empty();
        this.labels = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.redundancyType = Input.empty();
        this.requestId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExternalVpnGatewayArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<List<ExternalVpnGatewayInterfaceArgs>> interfaces;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<ExternalVpnGatewayRedundancyType> redundancyType;
        private @Nullable Input<String> requestId;

        public Builder() {
    	      // Empty
        }

        public Builder(ExternalVpnGatewayArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.interfaces = defaults.interfaces;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.redundancyType = defaults.redundancyType;
    	      this.requestId = defaults.requestId;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setInterfaces(@Nullable Input<List<ExternalVpnGatewayInterfaceArgs>> interfaces) {
            this.interfaces = interfaces;
            return this;
        }

        public Builder setInterfaces(@Nullable List<ExternalVpnGatewayInterfaceArgs> interfaces) {
            this.interfaces = Input.ofNullable(interfaces);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRedundancyType(@Nullable Input<ExternalVpnGatewayRedundancyType> redundancyType) {
            this.redundancyType = redundancyType;
            return this;
        }

        public Builder setRedundancyType(@Nullable ExternalVpnGatewayRedundancyType redundancyType) {
            this.redundancyType = Input.ofNullable(redundancyType);
            return this;
        }

        public Builder setRequestId(@Nullable Input<String> requestId) {
            this.requestId = requestId;
            return this;
        }

        public Builder setRequestId(@Nullable String requestId) {
            this.requestId = Input.ofNullable(requestId);
            return this;
        }

        public ExternalVpnGatewayArgs build() {
            return new ExternalVpnGatewayArgs(description, interfaces, labels, name, project, redundancyType, requestId);
        }
    }
}
