// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.clouddeploy_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.clouddeploy_v1.outputs.BuildArtifactResponse;
import io.pulumi.googlenative.clouddeploy_v1.outputs.DeliveryPipelineResponse;
import io.pulumi.googlenative.clouddeploy_v1.outputs.TargetResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetReleaseResult {
    private final Map<String,String> annotations;
    private final List<BuildArtifactResponse> buildArtifacts;
    private final String createTime;
    private final DeliveryPipelineResponse deliveryPipelineSnapshot;
    private final String description;
    private final String etag;
    private final Map<String,String> labels;
    private final String name;
    private final String renderEndTime;
    private final String renderStartTime;
    private final String renderState;
    private final String skaffoldConfigPath;
    private final String skaffoldConfigUri;
    private final String skaffoldVersion;
    private final Map<String,String> targetArtifacts;
    private final Map<String,String> targetRenders;
    private final List<TargetResponse> targetSnapshots;
    private final String uid;

    @OutputCustomType.Constructor({"annotations","buildArtifacts","createTime","deliveryPipelineSnapshot","description","etag","labels","name","renderEndTime","renderStartTime","renderState","skaffoldConfigPath","skaffoldConfigUri","skaffoldVersion","targetArtifacts","targetRenders","targetSnapshots","uid"})
    private GetReleaseResult(
        Map<String,String> annotations,
        List<BuildArtifactResponse> buildArtifacts,
        String createTime,
        DeliveryPipelineResponse deliveryPipelineSnapshot,
        String description,
        String etag,
        Map<String,String> labels,
        String name,
        String renderEndTime,
        String renderStartTime,
        String renderState,
        String skaffoldConfigPath,
        String skaffoldConfigUri,
        String skaffoldVersion,
        Map<String,String> targetArtifacts,
        Map<String,String> targetRenders,
        List<TargetResponse> targetSnapshots,
        String uid) {
        this.annotations = Objects.requireNonNull(annotations);
        this.buildArtifacts = Objects.requireNonNull(buildArtifacts);
        this.createTime = Objects.requireNonNull(createTime);
        this.deliveryPipelineSnapshot = Objects.requireNonNull(deliveryPipelineSnapshot);
        this.description = Objects.requireNonNull(description);
        this.etag = Objects.requireNonNull(etag);
        this.labels = Objects.requireNonNull(labels);
        this.name = Objects.requireNonNull(name);
        this.renderEndTime = Objects.requireNonNull(renderEndTime);
        this.renderStartTime = Objects.requireNonNull(renderStartTime);
        this.renderState = Objects.requireNonNull(renderState);
        this.skaffoldConfigPath = Objects.requireNonNull(skaffoldConfigPath);
        this.skaffoldConfigUri = Objects.requireNonNull(skaffoldConfigUri);
        this.skaffoldVersion = Objects.requireNonNull(skaffoldVersion);
        this.targetArtifacts = Objects.requireNonNull(targetArtifacts);
        this.targetRenders = Objects.requireNonNull(targetRenders);
        this.targetSnapshots = Objects.requireNonNull(targetSnapshots);
        this.uid = Objects.requireNonNull(uid);
    }

    public Map<String,String> getAnnotations() {
        return this.annotations;
    }
    public List<BuildArtifactResponse> getBuildArtifacts() {
        return this.buildArtifacts;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public DeliveryPipelineResponse getDeliveryPipelineSnapshot() {
        return this.deliveryPipelineSnapshot;
    }
    public String getDescription() {
        return this.description;
    }
    public String getEtag() {
        return this.etag;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public String getName() {
        return this.name;
    }
    public String getRenderEndTime() {
        return this.renderEndTime;
    }
    public String getRenderStartTime() {
        return this.renderStartTime;
    }
    public String getRenderState() {
        return this.renderState;
    }
    public String getSkaffoldConfigPath() {
        return this.skaffoldConfigPath;
    }
    public String getSkaffoldConfigUri() {
        return this.skaffoldConfigUri;
    }
    public String getSkaffoldVersion() {
        return this.skaffoldVersion;
    }
    public Map<String,String> getTargetArtifacts() {
        return this.targetArtifacts;
    }
    public Map<String,String> getTargetRenders() {
        return this.targetRenders;
    }
    public List<TargetResponse> getTargetSnapshots() {
        return this.targetSnapshots;
    }
    public String getUid() {
        return this.uid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReleaseResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> annotations;
        private List<BuildArtifactResponse> buildArtifacts;
        private String createTime;
        private DeliveryPipelineResponse deliveryPipelineSnapshot;
        private String description;
        private String etag;
        private Map<String,String> labels;
        private String name;
        private String renderEndTime;
        private String renderStartTime;
        private String renderState;
        private String skaffoldConfigPath;
        private String skaffoldConfigUri;
        private String skaffoldVersion;
        private Map<String,String> targetArtifacts;
        private Map<String,String> targetRenders;
        private List<TargetResponse> targetSnapshots;
        private String uid;

        public Builder() {
    	      // Empty
        }

        public Builder(GetReleaseResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotations = defaults.annotations;
    	      this.buildArtifacts = defaults.buildArtifacts;
    	      this.createTime = defaults.createTime;
    	      this.deliveryPipelineSnapshot = defaults.deliveryPipelineSnapshot;
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.renderEndTime = defaults.renderEndTime;
    	      this.renderStartTime = defaults.renderStartTime;
    	      this.renderState = defaults.renderState;
    	      this.skaffoldConfigPath = defaults.skaffoldConfigPath;
    	      this.skaffoldConfigUri = defaults.skaffoldConfigUri;
    	      this.skaffoldVersion = defaults.skaffoldVersion;
    	      this.targetArtifacts = defaults.targetArtifacts;
    	      this.targetRenders = defaults.targetRenders;
    	      this.targetSnapshots = defaults.targetSnapshots;
    	      this.uid = defaults.uid;
        }

        public Builder setAnnotations(Map<String,String> annotations) {
            this.annotations = Objects.requireNonNull(annotations);
            return this;
        }

        public Builder setBuildArtifacts(List<BuildArtifactResponse> buildArtifacts) {
            this.buildArtifacts = Objects.requireNonNull(buildArtifacts);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDeliveryPipelineSnapshot(DeliveryPipelineResponse deliveryPipelineSnapshot) {
            this.deliveryPipelineSnapshot = Objects.requireNonNull(deliveryPipelineSnapshot);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRenderEndTime(String renderEndTime) {
            this.renderEndTime = Objects.requireNonNull(renderEndTime);
            return this;
        }

        public Builder setRenderStartTime(String renderStartTime) {
            this.renderStartTime = Objects.requireNonNull(renderStartTime);
            return this;
        }

        public Builder setRenderState(String renderState) {
            this.renderState = Objects.requireNonNull(renderState);
            return this;
        }

        public Builder setSkaffoldConfigPath(String skaffoldConfigPath) {
            this.skaffoldConfigPath = Objects.requireNonNull(skaffoldConfigPath);
            return this;
        }

        public Builder setSkaffoldConfigUri(String skaffoldConfigUri) {
            this.skaffoldConfigUri = Objects.requireNonNull(skaffoldConfigUri);
            return this;
        }

        public Builder setSkaffoldVersion(String skaffoldVersion) {
            this.skaffoldVersion = Objects.requireNonNull(skaffoldVersion);
            return this;
        }

        public Builder setTargetArtifacts(Map<String,String> targetArtifacts) {
            this.targetArtifacts = Objects.requireNonNull(targetArtifacts);
            return this;
        }

        public Builder setTargetRenders(Map<String,String> targetRenders) {
            this.targetRenders = Objects.requireNonNull(targetRenders);
            return this;
        }

        public Builder setTargetSnapshots(List<TargetResponse> targetSnapshots) {
            this.targetSnapshots = Objects.requireNonNull(targetSnapshots);
            return this;
        }

        public Builder setUid(String uid) {
            this.uid = Objects.requireNonNull(uid);
            return this;
        }

        public GetReleaseResult build() {
            return new GetReleaseResult(annotations, buildArtifacts, createTime, deliveryPipelineSnapshot, description, etag, labels, name, renderEndTime, renderStartTime, renderState, skaffoldConfigPath, skaffoldConfigUri, skaffoldVersion, targetArtifacts, targetRenders, targetSnapshots, uid);
        }
    }
}
