// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.transcoder_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class Vp9CodecSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final Vp9CodecSettingsArgs Empty = new Vp9CodecSettingsArgs();

    @InputImport(name="bitrateBps", required=true)
    private final Input<Integer> bitrateBps;

    public Input<Integer> getBitrateBps() {
        return this.bitrateBps;
    }

    @InputImport(name="crfLevel")
    private final @Nullable Input<Integer> crfLevel;

    public Input<Integer> getCrfLevel() {
        return this.crfLevel == null ? Input.empty() : this.crfLevel;
    }

    @InputImport(name="frameRate", required=true)
    private final Input<Double> frameRate;

    public Input<Double> getFrameRate() {
        return this.frameRate;
    }

    @InputImport(name="gopDuration")
    private final @Nullable Input<String> gopDuration;

    public Input<String> getGopDuration() {
        return this.gopDuration == null ? Input.empty() : this.gopDuration;
    }

    @InputImport(name="gopFrameCount")
    private final @Nullable Input<Integer> gopFrameCount;

    public Input<Integer> getGopFrameCount() {
        return this.gopFrameCount == null ? Input.empty() : this.gopFrameCount;
    }

    @InputImport(name="heightPixels")
    private final @Nullable Input<Integer> heightPixels;

    public Input<Integer> getHeightPixels() {
        return this.heightPixels == null ? Input.empty() : this.heightPixels;
    }

    @InputImport(name="pixelFormat")
    private final @Nullable Input<String> pixelFormat;

    public Input<String> getPixelFormat() {
        return this.pixelFormat == null ? Input.empty() : this.pixelFormat;
    }

    @InputImport(name="profile")
    private final @Nullable Input<String> profile;

    public Input<String> getProfile() {
        return this.profile == null ? Input.empty() : this.profile;
    }

    @InputImport(name="rateControlMode")
    private final @Nullable Input<String> rateControlMode;

    public Input<String> getRateControlMode() {
        return this.rateControlMode == null ? Input.empty() : this.rateControlMode;
    }

    @InputImport(name="widthPixels")
    private final @Nullable Input<Integer> widthPixels;

    public Input<Integer> getWidthPixels() {
        return this.widthPixels == null ? Input.empty() : this.widthPixels;
    }

    public Vp9CodecSettingsArgs(
        Input<Integer> bitrateBps,
        @Nullable Input<Integer> crfLevel,
        Input<Double> frameRate,
        @Nullable Input<String> gopDuration,
        @Nullable Input<Integer> gopFrameCount,
        @Nullable Input<Integer> heightPixels,
        @Nullable Input<String> pixelFormat,
        @Nullable Input<String> profile,
        @Nullable Input<String> rateControlMode,
        @Nullable Input<Integer> widthPixels) {
        this.bitrateBps = Objects.requireNonNull(bitrateBps, "expected parameter 'bitrateBps' to be non-null");
        this.crfLevel = crfLevel;
        this.frameRate = Objects.requireNonNull(frameRate, "expected parameter 'frameRate' to be non-null");
        this.gopDuration = gopDuration;
        this.gopFrameCount = gopFrameCount;
        this.heightPixels = heightPixels;
        this.pixelFormat = pixelFormat;
        this.profile = profile;
        this.rateControlMode = rateControlMode;
        this.widthPixels = widthPixels;
    }

    private Vp9CodecSettingsArgs() {
        this.bitrateBps = Input.empty();
        this.crfLevel = Input.empty();
        this.frameRate = Input.empty();
        this.gopDuration = Input.empty();
        this.gopFrameCount = Input.empty();
        this.heightPixels = Input.empty();
        this.pixelFormat = Input.empty();
        this.profile = Input.empty();
        this.rateControlMode = Input.empty();
        this.widthPixels = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Vp9CodecSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Integer> bitrateBps;
        private @Nullable Input<Integer> crfLevel;
        private Input<Double> frameRate;
        private @Nullable Input<String> gopDuration;
        private @Nullable Input<Integer> gopFrameCount;
        private @Nullable Input<Integer> heightPixels;
        private @Nullable Input<String> pixelFormat;
        private @Nullable Input<String> profile;
        private @Nullable Input<String> rateControlMode;
        private @Nullable Input<Integer> widthPixels;

        public Builder() {
    	      // Empty
        }

        public Builder(Vp9CodecSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bitrateBps = defaults.bitrateBps;
    	      this.crfLevel = defaults.crfLevel;
    	      this.frameRate = defaults.frameRate;
    	      this.gopDuration = defaults.gopDuration;
    	      this.gopFrameCount = defaults.gopFrameCount;
    	      this.heightPixels = defaults.heightPixels;
    	      this.pixelFormat = defaults.pixelFormat;
    	      this.profile = defaults.profile;
    	      this.rateControlMode = defaults.rateControlMode;
    	      this.widthPixels = defaults.widthPixels;
        }

        public Builder setBitrateBps(Input<Integer> bitrateBps) {
            this.bitrateBps = Objects.requireNonNull(bitrateBps);
            return this;
        }

        public Builder setBitrateBps(Integer bitrateBps) {
            this.bitrateBps = Input.of(Objects.requireNonNull(bitrateBps));
            return this;
        }

        public Builder setCrfLevel(@Nullable Input<Integer> crfLevel) {
            this.crfLevel = crfLevel;
            return this;
        }

        public Builder setCrfLevel(@Nullable Integer crfLevel) {
            this.crfLevel = Input.ofNullable(crfLevel);
            return this;
        }

        public Builder setFrameRate(Input<Double> frameRate) {
            this.frameRate = Objects.requireNonNull(frameRate);
            return this;
        }

        public Builder setFrameRate(Double frameRate) {
            this.frameRate = Input.of(Objects.requireNonNull(frameRate));
            return this;
        }

        public Builder setGopDuration(@Nullable Input<String> gopDuration) {
            this.gopDuration = gopDuration;
            return this;
        }

        public Builder setGopDuration(@Nullable String gopDuration) {
            this.gopDuration = Input.ofNullable(gopDuration);
            return this;
        }

        public Builder setGopFrameCount(@Nullable Input<Integer> gopFrameCount) {
            this.gopFrameCount = gopFrameCount;
            return this;
        }

        public Builder setGopFrameCount(@Nullable Integer gopFrameCount) {
            this.gopFrameCount = Input.ofNullable(gopFrameCount);
            return this;
        }

        public Builder setHeightPixels(@Nullable Input<Integer> heightPixels) {
            this.heightPixels = heightPixels;
            return this;
        }

        public Builder setHeightPixels(@Nullable Integer heightPixels) {
            this.heightPixels = Input.ofNullable(heightPixels);
            return this;
        }

        public Builder setPixelFormat(@Nullable Input<String> pixelFormat) {
            this.pixelFormat = pixelFormat;
            return this;
        }

        public Builder setPixelFormat(@Nullable String pixelFormat) {
            this.pixelFormat = Input.ofNullable(pixelFormat);
            return this;
        }

        public Builder setProfile(@Nullable Input<String> profile) {
            this.profile = profile;
            return this;
        }

        public Builder setProfile(@Nullable String profile) {
            this.profile = Input.ofNullable(profile);
            return this;
        }

        public Builder setRateControlMode(@Nullable Input<String> rateControlMode) {
            this.rateControlMode = rateControlMode;
            return this;
        }

        public Builder setRateControlMode(@Nullable String rateControlMode) {
            this.rateControlMode = Input.ofNullable(rateControlMode);
            return this;
        }

        public Builder setWidthPixels(@Nullable Input<Integer> widthPixels) {
            this.widthPixels = widthPixels;
            return this;
        }

        public Builder setWidthPixels(@Nullable Integer widthPixels) {
            this.widthPixels = Input.ofNullable(widthPixels);
            return this;
        }

        public Vp9CodecSettingsArgs build() {
            return new Vp9CodecSettingsArgs(bitrateBps, crfLevel, frameRate, gopDuration, gopFrameCount, heightPixels, pixelFormat, profile, rateControlMode, widthPixels);
        }
    }
}
