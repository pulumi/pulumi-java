// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.testing_v1.outputs.ManualShardingResponse;
import io.pulumi.googlenative.testing_v1.outputs.UniformShardingResponse;
import java.util.Objects;

@OutputCustomType
public final class ShardingOptionResponse {
    /**
     * Shards test cases into the specified groups of packages, classes, and/or methods.
     * 
     */
    private final ManualShardingResponse manualSharding;
    /**
     * Uniformly shards test cases given a total number of shards.
     * 
     */
    private final UniformShardingResponse uniformSharding;

    @OutputCustomType.Constructor({"manualSharding","uniformSharding"})
    private ShardingOptionResponse(
        ManualShardingResponse manualSharding,
        UniformShardingResponse uniformSharding) {
        this.manualSharding = Objects.requireNonNull(manualSharding);
        this.uniformSharding = Objects.requireNonNull(uniformSharding);
    }

    /**
     * Shards test cases into the specified groups of packages, classes, and/or methods.
     * 
     */
    public ManualShardingResponse getManualSharding() {
        return this.manualSharding;
    }
    /**
     * Uniformly shards test cases given a total number of shards.
     * 
     */
    public UniformShardingResponse getUniformSharding() {
        return this.uniformSharding;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ShardingOptionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManualShardingResponse manualSharding;
        private UniformShardingResponse uniformSharding;

        public Builder() {
    	      // Empty
        }

        public Builder(ShardingOptionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.manualSharding = defaults.manualSharding;
    	      this.uniformSharding = defaults.uniformSharding;
        }

        public Builder setManualSharding(ManualShardingResponse manualSharding) {
            this.manualSharding = Objects.requireNonNull(manualSharding);
            return this;
        }

        public Builder setUniformSharding(UniformShardingResponse uniformSharding) {
            this.uniformSharding = Objects.requireNonNull(uniformSharding);
            return this;
        }
        public ShardingOptionResponse build() {
            return new ShardingOptionResponse(manualSharding, uniformSharding);
        }
    }
}
