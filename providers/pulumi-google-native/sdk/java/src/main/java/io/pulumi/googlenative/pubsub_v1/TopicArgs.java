// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.pubsub_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.pubsub_v1.inputs.MessageStoragePolicyArgs;
import io.pulumi.googlenative.pubsub_v1.inputs.SchemaSettingsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TopicArgs extends io.pulumi.resources.ResourceArgs {

    public static final TopicArgs Empty = new TopicArgs();

    /**
     * The resource name of the Cloud KMS CryptoKey to be used to protect access to messages published on this topic. The expected format is `projects/*{@literal /}locations/*{@literal /}keyRings/*{@literal /}cryptoKeys/*`.
     * 
     */
    @InputImport(name="kmsKeyName")
      private final @Nullable Output<String> kmsKeyName;

    public Output<String> getKmsKeyName() {
        return this.kmsKeyName == null ? Output.empty() : this.kmsKeyName;
    }

    /**
     * See [Creating and managing labels] (https://cloud.google.com/pubsub/docs/labels).
     * 
     */
    @InputImport(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels == null ? Output.empty() : this.labels;
    }

    /**
     * Indicates the minimum duration to retain a message after it is published to the topic. If this field is set, messages published to the topic in the last `message_retention_duration` are always available to subscribers. For instance, it allows any attached subscription to [seek to a timestamp](https://cloud.google.com/pubsub/docs/replay-overview#seek_to_a_time) that is up to `message_retention_duration` in the past. If this field is not set, message retention is controlled by settings on individual subscriptions. Cannot be more than 31 days or less than 10 minutes.
     * 
     */
    @InputImport(name="messageRetentionDuration")
      private final @Nullable Output<String> messageRetentionDuration;

    public Output<String> getMessageRetentionDuration() {
        return this.messageRetentionDuration == null ? Output.empty() : this.messageRetentionDuration;
    }

    /**
     * Policy constraining the set of Google Cloud Platform regions where messages published to the topic may be stored. If not present, then no constraints are in effect.
     * 
     */
    @InputImport(name="messageStoragePolicy")
      private final @Nullable Output<MessageStoragePolicyArgs> messageStoragePolicy;

    public Output<MessageStoragePolicyArgs> getMessageStoragePolicy() {
        return this.messageStoragePolicy == null ? Output.empty() : this.messageStoragePolicy;
    }

    /**
     * The name of the topic. It must have the format `"projects/{project}/topics/{topic}"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `"goog"`.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    @InputImport(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
     * 
     */
    @InputImport(name="satisfiesPzs")
      private final @Nullable Output<Boolean> satisfiesPzs;

    public Output<Boolean> getSatisfiesPzs() {
        return this.satisfiesPzs == null ? Output.empty() : this.satisfiesPzs;
    }

    /**
     * Settings for validating messages published against a schema.
     * 
     */
    @InputImport(name="schemaSettings")
      private final @Nullable Output<SchemaSettingsArgs> schemaSettings;

    public Output<SchemaSettingsArgs> getSchemaSettings() {
        return this.schemaSettings == null ? Output.empty() : this.schemaSettings;
    }

    @InputImport(name="topicId", required=true)
      private final Output<String> topicId;

    public Output<String> getTopicId() {
        return this.topicId;
    }

    public TopicArgs(
        @Nullable Output<String> kmsKeyName,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<String> messageRetentionDuration,
        @Nullable Output<MessageStoragePolicyArgs> messageStoragePolicy,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<Boolean> satisfiesPzs,
        @Nullable Output<SchemaSettingsArgs> schemaSettings,
        Output<String> topicId) {
        this.kmsKeyName = kmsKeyName;
        this.labels = labels;
        this.messageRetentionDuration = messageRetentionDuration;
        this.messageStoragePolicy = messageStoragePolicy;
        this.name = name;
        this.project = project;
        this.satisfiesPzs = satisfiesPzs;
        this.schemaSettings = schemaSettings;
        this.topicId = Objects.requireNonNull(topicId, "expected parameter 'topicId' to be non-null");
    }

    private TopicArgs() {
        this.kmsKeyName = Output.empty();
        this.labels = Output.empty();
        this.messageRetentionDuration = Output.empty();
        this.messageStoragePolicy = Output.empty();
        this.name = Output.empty();
        this.project = Output.empty();
        this.satisfiesPzs = Output.empty();
        this.schemaSettings = Output.empty();
        this.topicId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> kmsKeyName;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<String> messageRetentionDuration;
        private @Nullable Output<MessageStoragePolicyArgs> messageStoragePolicy;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<Boolean> satisfiesPzs;
        private @Nullable Output<SchemaSettingsArgs> schemaSettings;
        private Output<String> topicId;

        public Builder() {
    	      // Empty
        }

        public Builder(TopicArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.kmsKeyName = defaults.kmsKeyName;
    	      this.labels = defaults.labels;
    	      this.messageRetentionDuration = defaults.messageRetentionDuration;
    	      this.messageStoragePolicy = defaults.messageStoragePolicy;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.schemaSettings = defaults.schemaSettings;
    	      this.topicId = defaults.topicId;
        }

        public Builder kmsKeyName(@Nullable Output<String> kmsKeyName) {
            this.kmsKeyName = kmsKeyName;
            return this;
        }

        public Builder kmsKeyName(@Nullable String kmsKeyName) {
            this.kmsKeyName = Output.ofNullable(kmsKeyName);
            return this;
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Output.ofNullable(labels);
            return this;
        }

        public Builder messageRetentionDuration(@Nullable Output<String> messageRetentionDuration) {
            this.messageRetentionDuration = messageRetentionDuration;
            return this;
        }

        public Builder messageRetentionDuration(@Nullable String messageRetentionDuration) {
            this.messageRetentionDuration = Output.ofNullable(messageRetentionDuration);
            return this;
        }

        public Builder messageStoragePolicy(@Nullable Output<MessageStoragePolicyArgs> messageStoragePolicy) {
            this.messageStoragePolicy = messageStoragePolicy;
            return this;
        }

        public Builder messageStoragePolicy(@Nullable MessageStoragePolicyArgs messageStoragePolicy) {
            this.messageStoragePolicy = Output.ofNullable(messageStoragePolicy);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder satisfiesPzs(@Nullable Output<Boolean> satisfiesPzs) {
            this.satisfiesPzs = satisfiesPzs;
            return this;
        }

        public Builder satisfiesPzs(@Nullable Boolean satisfiesPzs) {
            this.satisfiesPzs = Output.ofNullable(satisfiesPzs);
            return this;
        }

        public Builder schemaSettings(@Nullable Output<SchemaSettingsArgs> schemaSettings) {
            this.schemaSettings = schemaSettings;
            return this;
        }

        public Builder schemaSettings(@Nullable SchemaSettingsArgs schemaSettings) {
            this.schemaSettings = Output.ofNullable(schemaSettings);
            return this;
        }

        public Builder topicId(Output<String> topicId) {
            this.topicId = Objects.requireNonNull(topicId);
            return this;
        }

        public Builder topicId(String topicId) {
            this.topicId = Output.of(Objects.requireNonNull(topicId));
            return this;
        }
        public TopicArgs build() {
            return new TopicArgs(kmsKeyName, labels, messageRetentionDuration, messageStoragePolicy, name, project, satisfiesPzs, schemaSettings, topicId);
        }
    }
}
