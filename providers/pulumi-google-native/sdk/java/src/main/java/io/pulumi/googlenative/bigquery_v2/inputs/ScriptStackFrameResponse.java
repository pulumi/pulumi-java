// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ScriptStackFrameResponse extends io.pulumi.resources.InvokeArgs {

    public static final ScriptStackFrameResponse Empty = new ScriptStackFrameResponse();

    /**
     * One-based end column.
     * 
     */
    @InputImport(name="endColumn", required=true)
    private final Integer endColumn;

    public Integer getEndColumn() {
        return this.endColumn;
    }

    /**
     * One-based end line.
     * 
     */
    @InputImport(name="endLine", required=true)
    private final Integer endLine;

    public Integer getEndLine() {
        return this.endLine;
    }

    /**
     * Name of the active procedure, empty if in a top-level script.
     * 
     */
    @InputImport(name="procedureId", required=true)
    private final String procedureId;

    public String getProcedureId() {
        return this.procedureId;
    }

    /**
     * One-based start column.
     * 
     */
    @InputImport(name="startColumn", required=true)
    private final Integer startColumn;

    public Integer getStartColumn() {
        return this.startColumn;
    }

    /**
     * One-based start line.
     * 
     */
    @InputImport(name="startLine", required=true)
    private final Integer startLine;

    public Integer getStartLine() {
        return this.startLine;
    }

    /**
     * Text of the current statement/expression.
     * 
     */
    @InputImport(name="text", required=true)
    private final String text;

    public String getText() {
        return this.text;
    }

    public ScriptStackFrameResponse(
        Integer endColumn,
        Integer endLine,
        String procedureId,
        Integer startColumn,
        Integer startLine,
        String text) {
        this.endColumn = Objects.requireNonNull(endColumn, "expected parameter 'endColumn' to be non-null");
        this.endLine = Objects.requireNonNull(endLine, "expected parameter 'endLine' to be non-null");
        this.procedureId = Objects.requireNonNull(procedureId, "expected parameter 'procedureId' to be non-null");
        this.startColumn = Objects.requireNonNull(startColumn, "expected parameter 'startColumn' to be non-null");
        this.startLine = Objects.requireNonNull(startLine, "expected parameter 'startLine' to be non-null");
        this.text = Objects.requireNonNull(text, "expected parameter 'text' to be non-null");
    }

    private ScriptStackFrameResponse() {
        this.endColumn = null;
        this.endLine = null;
        this.procedureId = null;
        this.startColumn = null;
        this.startLine = null;
        this.text = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScriptStackFrameResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer endColumn;
        private Integer endLine;
        private String procedureId;
        private Integer startColumn;
        private Integer startLine;
        private String text;

        public Builder() {
    	      // Empty
        }

        public Builder(ScriptStackFrameResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endColumn = defaults.endColumn;
    	      this.endLine = defaults.endLine;
    	      this.procedureId = defaults.procedureId;
    	      this.startColumn = defaults.startColumn;
    	      this.startLine = defaults.startLine;
    	      this.text = defaults.text;
        }

        public Builder setEndColumn(Integer endColumn) {
            this.endColumn = Objects.requireNonNull(endColumn);
            return this;
        }

        public Builder setEndLine(Integer endLine) {
            this.endLine = Objects.requireNonNull(endLine);
            return this;
        }

        public Builder setProcedureId(String procedureId) {
            this.procedureId = Objects.requireNonNull(procedureId);
            return this;
        }

        public Builder setStartColumn(Integer startColumn) {
            this.startColumn = Objects.requireNonNull(startColumn);
            return this;
        }

        public Builder setStartLine(Integer startLine) {
            this.startLine = Objects.requireNonNull(startLine);
            return this;
        }

        public Builder setText(String text) {
            this.text = Objects.requireNonNull(text);
            return this;
        }

        public ScriptStackFrameResponse build() {
            return new ScriptStackFrameResponse(endColumn, endLine, procedureId, startColumn, startLine, text);
        }
    }
}
