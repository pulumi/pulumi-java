// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataflow_v1b3.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class SpannerIODetailsResponse {
    private final String databaseId;
    private final String instanceId;
    private final String project;

    @OutputCustomType.Constructor({"databaseId","instanceId","project"})
    private SpannerIODetailsResponse(
        String databaseId,
        String instanceId,
        String project) {
        this.databaseId = Objects.requireNonNull(databaseId);
        this.instanceId = Objects.requireNonNull(instanceId);
        this.project = Objects.requireNonNull(project);
    }

    public String getDatabaseId() {
        return this.databaseId;
    }
    public String getInstanceId() {
        return this.instanceId;
    }
    public String getProject() {
        return this.project;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SpannerIODetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String databaseId;
        private String instanceId;
        private String project;

        public Builder() {
    	      // Empty
        }

        public Builder(SpannerIODetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.databaseId = defaults.databaseId;
    	      this.instanceId = defaults.instanceId;
    	      this.project = defaults.project;
        }

        public Builder setDatabaseId(String databaseId) {
            this.databaseId = Objects.requireNonNull(databaseId);
            return this;
        }

        public Builder setInstanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }

        public Builder setProject(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }

        public SpannerIODetailsResponse build() {
            return new SpannerIODetailsResponse(databaseId, instanceId, project);
        }
    }
}
