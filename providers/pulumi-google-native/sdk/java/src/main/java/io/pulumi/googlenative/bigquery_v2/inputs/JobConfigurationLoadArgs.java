// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.bigquery_v2.inputs.ClusteringArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.DestinationTablePropertiesArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.EncryptionConfigurationArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.HivePartitioningOptionsArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.ParquetOptionsArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.RangePartitioningArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.TableReferenceArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.TableSchemaArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.TimePartitioningArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobConfigurationLoadArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobConfigurationLoadArgs Empty = new JobConfigurationLoadArgs();

    @InputImport(name="allowJaggedRows")
    private final @Nullable Input<Boolean> allowJaggedRows;

    public Input<Boolean> getAllowJaggedRows() {
        return this.allowJaggedRows == null ? Input.empty() : this.allowJaggedRows;
    }

    @InputImport(name="allowQuotedNewlines")
    private final @Nullable Input<Boolean> allowQuotedNewlines;

    public Input<Boolean> getAllowQuotedNewlines() {
        return this.allowQuotedNewlines == null ? Input.empty() : this.allowQuotedNewlines;
    }

    @InputImport(name="autodetect")
    private final @Nullable Input<Boolean> autodetect;

    public Input<Boolean> getAutodetect() {
        return this.autodetect == null ? Input.empty() : this.autodetect;
    }

    @InputImport(name="clustering")
    private final @Nullable Input<ClusteringArgs> clustering;

    public Input<ClusteringArgs> getClustering() {
        return this.clustering == null ? Input.empty() : this.clustering;
    }

    @InputImport(name="createDisposition")
    private final @Nullable Input<String> createDisposition;

    public Input<String> getCreateDisposition() {
        return this.createDisposition == null ? Input.empty() : this.createDisposition;
    }

    @InputImport(name="decimalTargetTypes")
    private final @Nullable Input<List<String>> decimalTargetTypes;

    public Input<List<String>> getDecimalTargetTypes() {
        return this.decimalTargetTypes == null ? Input.empty() : this.decimalTargetTypes;
    }

    @InputImport(name="destinationEncryptionConfiguration")
    private final @Nullable Input<EncryptionConfigurationArgs> destinationEncryptionConfiguration;

    public Input<EncryptionConfigurationArgs> getDestinationEncryptionConfiguration() {
        return this.destinationEncryptionConfiguration == null ? Input.empty() : this.destinationEncryptionConfiguration;
    }

    @InputImport(name="destinationTable")
    private final @Nullable Input<TableReferenceArgs> destinationTable;

    public Input<TableReferenceArgs> getDestinationTable() {
        return this.destinationTable == null ? Input.empty() : this.destinationTable;
    }

    @InputImport(name="destinationTableProperties")
    private final @Nullable Input<DestinationTablePropertiesArgs> destinationTableProperties;

    public Input<DestinationTablePropertiesArgs> getDestinationTableProperties() {
        return this.destinationTableProperties == null ? Input.empty() : this.destinationTableProperties;
    }

    @InputImport(name="encoding")
    private final @Nullable Input<String> encoding;

    public Input<String> getEncoding() {
        return this.encoding == null ? Input.empty() : this.encoding;
    }

    @InputImport(name="fieldDelimiter")
    private final @Nullable Input<String> fieldDelimiter;

    public Input<String> getFieldDelimiter() {
        return this.fieldDelimiter == null ? Input.empty() : this.fieldDelimiter;
    }

    @InputImport(name="hivePartitioningOptions")
    private final @Nullable Input<HivePartitioningOptionsArgs> hivePartitioningOptions;

    public Input<HivePartitioningOptionsArgs> getHivePartitioningOptions() {
        return this.hivePartitioningOptions == null ? Input.empty() : this.hivePartitioningOptions;
    }

    @InputImport(name="ignoreUnknownValues")
    private final @Nullable Input<Boolean> ignoreUnknownValues;

    public Input<Boolean> getIgnoreUnknownValues() {
        return this.ignoreUnknownValues == null ? Input.empty() : this.ignoreUnknownValues;
    }

    @InputImport(name="jsonExtension")
    private final @Nullable Input<String> jsonExtension;

    public Input<String> getJsonExtension() {
        return this.jsonExtension == null ? Input.empty() : this.jsonExtension;
    }

    @InputImport(name="maxBadRecords")
    private final @Nullable Input<Integer> maxBadRecords;

    public Input<Integer> getMaxBadRecords() {
        return this.maxBadRecords == null ? Input.empty() : this.maxBadRecords;
    }

    @InputImport(name="nullMarker")
    private final @Nullable Input<String> nullMarker;

    public Input<String> getNullMarker() {
        return this.nullMarker == null ? Input.empty() : this.nullMarker;
    }

    @InputImport(name="parquetOptions")
    private final @Nullable Input<ParquetOptionsArgs> parquetOptions;

    public Input<ParquetOptionsArgs> getParquetOptions() {
        return this.parquetOptions == null ? Input.empty() : this.parquetOptions;
    }

    @InputImport(name="projectionFields")
    private final @Nullable Input<List<String>> projectionFields;

    public Input<List<String>> getProjectionFields() {
        return this.projectionFields == null ? Input.empty() : this.projectionFields;
    }

    @InputImport(name="quote")
    private final @Nullable Input<String> quote;

    public Input<String> getQuote() {
        return this.quote == null ? Input.empty() : this.quote;
    }

    @InputImport(name="rangePartitioning")
    private final @Nullable Input<RangePartitioningArgs> rangePartitioning;

    public Input<RangePartitioningArgs> getRangePartitioning() {
        return this.rangePartitioning == null ? Input.empty() : this.rangePartitioning;
    }

    @InputImport(name="schema")
    private final @Nullable Input<TableSchemaArgs> schema;

    public Input<TableSchemaArgs> getSchema() {
        return this.schema == null ? Input.empty() : this.schema;
    }

    @InputImport(name="schemaUpdateOptions")
    private final @Nullable Input<List<String>> schemaUpdateOptions;

    public Input<List<String>> getSchemaUpdateOptions() {
        return this.schemaUpdateOptions == null ? Input.empty() : this.schemaUpdateOptions;
    }

    @InputImport(name="skipLeadingRows")
    private final @Nullable Input<Integer> skipLeadingRows;

    public Input<Integer> getSkipLeadingRows() {
        return this.skipLeadingRows == null ? Input.empty() : this.skipLeadingRows;
    }

    @InputImport(name="sourceFormat")
    private final @Nullable Input<String> sourceFormat;

    public Input<String> getSourceFormat() {
        return this.sourceFormat == null ? Input.empty() : this.sourceFormat;
    }

    @InputImport(name="sourceUris")
    private final @Nullable Input<List<String>> sourceUris;

    public Input<List<String>> getSourceUris() {
        return this.sourceUris == null ? Input.empty() : this.sourceUris;
    }

    @InputImport(name="timePartitioning")
    private final @Nullable Input<TimePartitioningArgs> timePartitioning;

    public Input<TimePartitioningArgs> getTimePartitioning() {
        return this.timePartitioning == null ? Input.empty() : this.timePartitioning;
    }

    @InputImport(name="useAvroLogicalTypes")
    private final @Nullable Input<Boolean> useAvroLogicalTypes;

    public Input<Boolean> getUseAvroLogicalTypes() {
        return this.useAvroLogicalTypes == null ? Input.empty() : this.useAvroLogicalTypes;
    }

    @InputImport(name="writeDisposition")
    private final @Nullable Input<String> writeDisposition;

    public Input<String> getWriteDisposition() {
        return this.writeDisposition == null ? Input.empty() : this.writeDisposition;
    }

    public JobConfigurationLoadArgs(
        @Nullable Input<Boolean> allowJaggedRows,
        @Nullable Input<Boolean> allowQuotedNewlines,
        @Nullable Input<Boolean> autodetect,
        @Nullable Input<ClusteringArgs> clustering,
        @Nullable Input<String> createDisposition,
        @Nullable Input<List<String>> decimalTargetTypes,
        @Nullable Input<EncryptionConfigurationArgs> destinationEncryptionConfiguration,
        @Nullable Input<TableReferenceArgs> destinationTable,
        @Nullable Input<DestinationTablePropertiesArgs> destinationTableProperties,
        @Nullable Input<String> encoding,
        @Nullable Input<String> fieldDelimiter,
        @Nullable Input<HivePartitioningOptionsArgs> hivePartitioningOptions,
        @Nullable Input<Boolean> ignoreUnknownValues,
        @Nullable Input<String> jsonExtension,
        @Nullable Input<Integer> maxBadRecords,
        @Nullable Input<String> nullMarker,
        @Nullable Input<ParquetOptionsArgs> parquetOptions,
        @Nullable Input<List<String>> projectionFields,
        @Nullable Input<String> quote,
        @Nullable Input<RangePartitioningArgs> rangePartitioning,
        @Nullable Input<TableSchemaArgs> schema,
        @Nullable Input<List<String>> schemaUpdateOptions,
        @Nullable Input<Integer> skipLeadingRows,
        @Nullable Input<String> sourceFormat,
        @Nullable Input<List<String>> sourceUris,
        @Nullable Input<TimePartitioningArgs> timePartitioning,
        @Nullable Input<Boolean> useAvroLogicalTypes,
        @Nullable Input<String> writeDisposition) {
        this.allowJaggedRows = allowJaggedRows;
        this.allowQuotedNewlines = allowQuotedNewlines;
        this.autodetect = autodetect;
        this.clustering = clustering;
        this.createDisposition = createDisposition;
        this.decimalTargetTypes = decimalTargetTypes;
        this.destinationEncryptionConfiguration = destinationEncryptionConfiguration;
        this.destinationTable = destinationTable;
        this.destinationTableProperties = destinationTableProperties;
        this.encoding = encoding;
        this.fieldDelimiter = fieldDelimiter;
        this.hivePartitioningOptions = hivePartitioningOptions;
        this.ignoreUnknownValues = ignoreUnknownValues;
        this.jsonExtension = jsonExtension;
        this.maxBadRecords = maxBadRecords;
        this.nullMarker = nullMarker;
        this.parquetOptions = parquetOptions;
        this.projectionFields = projectionFields;
        this.quote = quote;
        this.rangePartitioning = rangePartitioning;
        this.schema = schema;
        this.schemaUpdateOptions = schemaUpdateOptions;
        this.skipLeadingRows = skipLeadingRows;
        this.sourceFormat = sourceFormat;
        this.sourceUris = sourceUris;
        this.timePartitioning = timePartitioning;
        this.useAvroLogicalTypes = useAvroLogicalTypes;
        this.writeDisposition = writeDisposition;
    }

    private JobConfigurationLoadArgs() {
        this.allowJaggedRows = Input.empty();
        this.allowQuotedNewlines = Input.empty();
        this.autodetect = Input.empty();
        this.clustering = Input.empty();
        this.createDisposition = Input.empty();
        this.decimalTargetTypes = Input.empty();
        this.destinationEncryptionConfiguration = Input.empty();
        this.destinationTable = Input.empty();
        this.destinationTableProperties = Input.empty();
        this.encoding = Input.empty();
        this.fieldDelimiter = Input.empty();
        this.hivePartitioningOptions = Input.empty();
        this.ignoreUnknownValues = Input.empty();
        this.jsonExtension = Input.empty();
        this.maxBadRecords = Input.empty();
        this.nullMarker = Input.empty();
        this.parquetOptions = Input.empty();
        this.projectionFields = Input.empty();
        this.quote = Input.empty();
        this.rangePartitioning = Input.empty();
        this.schema = Input.empty();
        this.schemaUpdateOptions = Input.empty();
        this.skipLeadingRows = Input.empty();
        this.sourceFormat = Input.empty();
        this.sourceUris = Input.empty();
        this.timePartitioning = Input.empty();
        this.useAvroLogicalTypes = Input.empty();
        this.writeDisposition = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobConfigurationLoadArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> allowJaggedRows;
        private @Nullable Input<Boolean> allowQuotedNewlines;
        private @Nullable Input<Boolean> autodetect;
        private @Nullable Input<ClusteringArgs> clustering;
        private @Nullable Input<String> createDisposition;
        private @Nullable Input<List<String>> decimalTargetTypes;
        private @Nullable Input<EncryptionConfigurationArgs> destinationEncryptionConfiguration;
        private @Nullable Input<TableReferenceArgs> destinationTable;
        private @Nullable Input<DestinationTablePropertiesArgs> destinationTableProperties;
        private @Nullable Input<String> encoding;
        private @Nullable Input<String> fieldDelimiter;
        private @Nullable Input<HivePartitioningOptionsArgs> hivePartitioningOptions;
        private @Nullable Input<Boolean> ignoreUnknownValues;
        private @Nullable Input<String> jsonExtension;
        private @Nullable Input<Integer> maxBadRecords;
        private @Nullable Input<String> nullMarker;
        private @Nullable Input<ParquetOptionsArgs> parquetOptions;
        private @Nullable Input<List<String>> projectionFields;
        private @Nullable Input<String> quote;
        private @Nullable Input<RangePartitioningArgs> rangePartitioning;
        private @Nullable Input<TableSchemaArgs> schema;
        private @Nullable Input<List<String>> schemaUpdateOptions;
        private @Nullable Input<Integer> skipLeadingRows;
        private @Nullable Input<String> sourceFormat;
        private @Nullable Input<List<String>> sourceUris;
        private @Nullable Input<TimePartitioningArgs> timePartitioning;
        private @Nullable Input<Boolean> useAvroLogicalTypes;
        private @Nullable Input<String> writeDisposition;

        public Builder() {
    	      // Empty
        }

        public Builder(JobConfigurationLoadArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowJaggedRows = defaults.allowJaggedRows;
    	      this.allowQuotedNewlines = defaults.allowQuotedNewlines;
    	      this.autodetect = defaults.autodetect;
    	      this.clustering = defaults.clustering;
    	      this.createDisposition = defaults.createDisposition;
    	      this.decimalTargetTypes = defaults.decimalTargetTypes;
    	      this.destinationEncryptionConfiguration = defaults.destinationEncryptionConfiguration;
    	      this.destinationTable = defaults.destinationTable;
    	      this.destinationTableProperties = defaults.destinationTableProperties;
    	      this.encoding = defaults.encoding;
    	      this.fieldDelimiter = defaults.fieldDelimiter;
    	      this.hivePartitioningOptions = defaults.hivePartitioningOptions;
    	      this.ignoreUnknownValues = defaults.ignoreUnknownValues;
    	      this.jsonExtension = defaults.jsonExtension;
    	      this.maxBadRecords = defaults.maxBadRecords;
    	      this.nullMarker = defaults.nullMarker;
    	      this.parquetOptions = defaults.parquetOptions;
    	      this.projectionFields = defaults.projectionFields;
    	      this.quote = defaults.quote;
    	      this.rangePartitioning = defaults.rangePartitioning;
    	      this.schema = defaults.schema;
    	      this.schemaUpdateOptions = defaults.schemaUpdateOptions;
    	      this.skipLeadingRows = defaults.skipLeadingRows;
    	      this.sourceFormat = defaults.sourceFormat;
    	      this.sourceUris = defaults.sourceUris;
    	      this.timePartitioning = defaults.timePartitioning;
    	      this.useAvroLogicalTypes = defaults.useAvroLogicalTypes;
    	      this.writeDisposition = defaults.writeDisposition;
        }

        public Builder setAllowJaggedRows(@Nullable Input<Boolean> allowJaggedRows) {
            this.allowJaggedRows = allowJaggedRows;
            return this;
        }

        public Builder setAllowJaggedRows(@Nullable Boolean allowJaggedRows) {
            this.allowJaggedRows = Input.ofNullable(allowJaggedRows);
            return this;
        }

        public Builder setAllowQuotedNewlines(@Nullable Input<Boolean> allowQuotedNewlines) {
            this.allowQuotedNewlines = allowQuotedNewlines;
            return this;
        }

        public Builder setAllowQuotedNewlines(@Nullable Boolean allowQuotedNewlines) {
            this.allowQuotedNewlines = Input.ofNullable(allowQuotedNewlines);
            return this;
        }

        public Builder setAutodetect(@Nullable Input<Boolean> autodetect) {
            this.autodetect = autodetect;
            return this;
        }

        public Builder setAutodetect(@Nullable Boolean autodetect) {
            this.autodetect = Input.ofNullable(autodetect);
            return this;
        }

        public Builder setClustering(@Nullable Input<ClusteringArgs> clustering) {
            this.clustering = clustering;
            return this;
        }

        public Builder setClustering(@Nullable ClusteringArgs clustering) {
            this.clustering = Input.ofNullable(clustering);
            return this;
        }

        public Builder setCreateDisposition(@Nullable Input<String> createDisposition) {
            this.createDisposition = createDisposition;
            return this;
        }

        public Builder setCreateDisposition(@Nullable String createDisposition) {
            this.createDisposition = Input.ofNullable(createDisposition);
            return this;
        }

        public Builder setDecimalTargetTypes(@Nullable Input<List<String>> decimalTargetTypes) {
            this.decimalTargetTypes = decimalTargetTypes;
            return this;
        }

        public Builder setDecimalTargetTypes(@Nullable List<String> decimalTargetTypes) {
            this.decimalTargetTypes = Input.ofNullable(decimalTargetTypes);
            return this;
        }

        public Builder setDestinationEncryptionConfiguration(@Nullable Input<EncryptionConfigurationArgs> destinationEncryptionConfiguration) {
            this.destinationEncryptionConfiguration = destinationEncryptionConfiguration;
            return this;
        }

        public Builder setDestinationEncryptionConfiguration(@Nullable EncryptionConfigurationArgs destinationEncryptionConfiguration) {
            this.destinationEncryptionConfiguration = Input.ofNullable(destinationEncryptionConfiguration);
            return this;
        }

        public Builder setDestinationTable(@Nullable Input<TableReferenceArgs> destinationTable) {
            this.destinationTable = destinationTable;
            return this;
        }

        public Builder setDestinationTable(@Nullable TableReferenceArgs destinationTable) {
            this.destinationTable = Input.ofNullable(destinationTable);
            return this;
        }

        public Builder setDestinationTableProperties(@Nullable Input<DestinationTablePropertiesArgs> destinationTableProperties) {
            this.destinationTableProperties = destinationTableProperties;
            return this;
        }

        public Builder setDestinationTableProperties(@Nullable DestinationTablePropertiesArgs destinationTableProperties) {
            this.destinationTableProperties = Input.ofNullable(destinationTableProperties);
            return this;
        }

        public Builder setEncoding(@Nullable Input<String> encoding) {
            this.encoding = encoding;
            return this;
        }

        public Builder setEncoding(@Nullable String encoding) {
            this.encoding = Input.ofNullable(encoding);
            return this;
        }

        public Builder setFieldDelimiter(@Nullable Input<String> fieldDelimiter) {
            this.fieldDelimiter = fieldDelimiter;
            return this;
        }

        public Builder setFieldDelimiter(@Nullable String fieldDelimiter) {
            this.fieldDelimiter = Input.ofNullable(fieldDelimiter);
            return this;
        }

        public Builder setHivePartitioningOptions(@Nullable Input<HivePartitioningOptionsArgs> hivePartitioningOptions) {
            this.hivePartitioningOptions = hivePartitioningOptions;
            return this;
        }

        public Builder setHivePartitioningOptions(@Nullable HivePartitioningOptionsArgs hivePartitioningOptions) {
            this.hivePartitioningOptions = Input.ofNullable(hivePartitioningOptions);
            return this;
        }

        public Builder setIgnoreUnknownValues(@Nullable Input<Boolean> ignoreUnknownValues) {
            this.ignoreUnknownValues = ignoreUnknownValues;
            return this;
        }

        public Builder setIgnoreUnknownValues(@Nullable Boolean ignoreUnknownValues) {
            this.ignoreUnknownValues = Input.ofNullable(ignoreUnknownValues);
            return this;
        }

        public Builder setJsonExtension(@Nullable Input<String> jsonExtension) {
            this.jsonExtension = jsonExtension;
            return this;
        }

        public Builder setJsonExtension(@Nullable String jsonExtension) {
            this.jsonExtension = Input.ofNullable(jsonExtension);
            return this;
        }

        public Builder setMaxBadRecords(@Nullable Input<Integer> maxBadRecords) {
            this.maxBadRecords = maxBadRecords;
            return this;
        }

        public Builder setMaxBadRecords(@Nullable Integer maxBadRecords) {
            this.maxBadRecords = Input.ofNullable(maxBadRecords);
            return this;
        }

        public Builder setNullMarker(@Nullable Input<String> nullMarker) {
            this.nullMarker = nullMarker;
            return this;
        }

        public Builder setNullMarker(@Nullable String nullMarker) {
            this.nullMarker = Input.ofNullable(nullMarker);
            return this;
        }

        public Builder setParquetOptions(@Nullable Input<ParquetOptionsArgs> parquetOptions) {
            this.parquetOptions = parquetOptions;
            return this;
        }

        public Builder setParquetOptions(@Nullable ParquetOptionsArgs parquetOptions) {
            this.parquetOptions = Input.ofNullable(parquetOptions);
            return this;
        }

        public Builder setProjectionFields(@Nullable Input<List<String>> projectionFields) {
            this.projectionFields = projectionFields;
            return this;
        }

        public Builder setProjectionFields(@Nullable List<String> projectionFields) {
            this.projectionFields = Input.ofNullable(projectionFields);
            return this;
        }

        public Builder setQuote(@Nullable Input<String> quote) {
            this.quote = quote;
            return this;
        }

        public Builder setQuote(@Nullable String quote) {
            this.quote = Input.ofNullable(quote);
            return this;
        }

        public Builder setRangePartitioning(@Nullable Input<RangePartitioningArgs> rangePartitioning) {
            this.rangePartitioning = rangePartitioning;
            return this;
        }

        public Builder setRangePartitioning(@Nullable RangePartitioningArgs rangePartitioning) {
            this.rangePartitioning = Input.ofNullable(rangePartitioning);
            return this;
        }

        public Builder setSchema(@Nullable Input<TableSchemaArgs> schema) {
            this.schema = schema;
            return this;
        }

        public Builder setSchema(@Nullable TableSchemaArgs schema) {
            this.schema = Input.ofNullable(schema);
            return this;
        }

        public Builder setSchemaUpdateOptions(@Nullable Input<List<String>> schemaUpdateOptions) {
            this.schemaUpdateOptions = schemaUpdateOptions;
            return this;
        }

        public Builder setSchemaUpdateOptions(@Nullable List<String> schemaUpdateOptions) {
            this.schemaUpdateOptions = Input.ofNullable(schemaUpdateOptions);
            return this;
        }

        public Builder setSkipLeadingRows(@Nullable Input<Integer> skipLeadingRows) {
            this.skipLeadingRows = skipLeadingRows;
            return this;
        }

        public Builder setSkipLeadingRows(@Nullable Integer skipLeadingRows) {
            this.skipLeadingRows = Input.ofNullable(skipLeadingRows);
            return this;
        }

        public Builder setSourceFormat(@Nullable Input<String> sourceFormat) {
            this.sourceFormat = sourceFormat;
            return this;
        }

        public Builder setSourceFormat(@Nullable String sourceFormat) {
            this.sourceFormat = Input.ofNullable(sourceFormat);
            return this;
        }

        public Builder setSourceUris(@Nullable Input<List<String>> sourceUris) {
            this.sourceUris = sourceUris;
            return this;
        }

        public Builder setSourceUris(@Nullable List<String> sourceUris) {
            this.sourceUris = Input.ofNullable(sourceUris);
            return this;
        }

        public Builder setTimePartitioning(@Nullable Input<TimePartitioningArgs> timePartitioning) {
            this.timePartitioning = timePartitioning;
            return this;
        }

        public Builder setTimePartitioning(@Nullable TimePartitioningArgs timePartitioning) {
            this.timePartitioning = Input.ofNullable(timePartitioning);
            return this;
        }

        public Builder setUseAvroLogicalTypes(@Nullable Input<Boolean> useAvroLogicalTypes) {
            this.useAvroLogicalTypes = useAvroLogicalTypes;
            return this;
        }

        public Builder setUseAvroLogicalTypes(@Nullable Boolean useAvroLogicalTypes) {
            this.useAvroLogicalTypes = Input.ofNullable(useAvroLogicalTypes);
            return this;
        }

        public Builder setWriteDisposition(@Nullable Input<String> writeDisposition) {
            this.writeDisposition = writeDisposition;
            return this;
        }

        public Builder setWriteDisposition(@Nullable String writeDisposition) {
            this.writeDisposition = Input.ofNullable(writeDisposition);
            return this;
        }

        public JobConfigurationLoadArgs build() {
            return new JobConfigurationLoadArgs(allowJaggedRows, allowQuotedNewlines, autodetect, clustering, createDisposition, decimalTargetTypes, destinationEncryptionConfiguration, destinationTable, destinationTableProperties, encoding, fieldDelimiter, hivePartitioningOptions, ignoreUnknownValues, jsonExtension, maxBadRecords, nullMarker, parquetOptions, projectionFields, quote, rangePartitioning, schema, schemaUpdateOptions, skipLeadingRows, sourceFormat, sourceUris, timePartitioning, useAvroLogicalTypes, writeDisposition);
        }
    }
}
