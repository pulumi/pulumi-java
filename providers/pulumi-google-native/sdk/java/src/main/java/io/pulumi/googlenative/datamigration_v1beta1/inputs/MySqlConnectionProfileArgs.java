// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datamigration_v1beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.datamigration_v1beta1.inputs.SslConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class MySqlConnectionProfileArgs extends io.pulumi.resources.ResourceArgs {

    public static final MySqlConnectionProfileArgs Empty = new MySqlConnectionProfileArgs();

    @InputImport(name="cloudSqlId")
    private final @Nullable Input<String> cloudSqlId;

    public Input<String> getCloudSqlId() {
        return this.cloudSqlId == null ? Input.empty() : this.cloudSqlId;
    }

    @InputImport(name="host", required=true)
    private final Input<String> host;

    public Input<String> getHost() {
        return this.host;
    }

    @InputImport(name="password", required=true)
    private final Input<String> password;

    public Input<String> getPassword() {
        return this.password;
    }

    @InputImport(name="port", required=true)
    private final Input<Integer> port;

    public Input<Integer> getPort() {
        return this.port;
    }

    @InputImport(name="ssl")
    private final @Nullable Input<SslConfigArgs> ssl;

    public Input<SslConfigArgs> getSsl() {
        return this.ssl == null ? Input.empty() : this.ssl;
    }

    @InputImport(name="username", required=true)
    private final Input<String> username;

    public Input<String> getUsername() {
        return this.username;
    }

    public MySqlConnectionProfileArgs(
        @Nullable Input<String> cloudSqlId,
        Input<String> host,
        Input<String> password,
        Input<Integer> port,
        @Nullable Input<SslConfigArgs> ssl,
        Input<String> username) {
        this.cloudSqlId = cloudSqlId;
        this.host = Objects.requireNonNull(host, "expected parameter 'host' to be non-null");
        this.password = Objects.requireNonNull(password, "expected parameter 'password' to be non-null");
        this.port = Objects.requireNonNull(port, "expected parameter 'port' to be non-null");
        this.ssl = ssl;
        this.username = Objects.requireNonNull(username, "expected parameter 'username' to be non-null");
    }

    private MySqlConnectionProfileArgs() {
        this.cloudSqlId = Input.empty();
        this.host = Input.empty();
        this.password = Input.empty();
        this.port = Input.empty();
        this.ssl = Input.empty();
        this.username = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MySqlConnectionProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> cloudSqlId;
        private Input<String> host;
        private Input<String> password;
        private Input<Integer> port;
        private @Nullable Input<SslConfigArgs> ssl;
        private Input<String> username;

        public Builder() {
    	      // Empty
        }

        public Builder(MySqlConnectionProfileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudSqlId = defaults.cloudSqlId;
    	      this.host = defaults.host;
    	      this.password = defaults.password;
    	      this.port = defaults.port;
    	      this.ssl = defaults.ssl;
    	      this.username = defaults.username;
        }

        public Builder setCloudSqlId(@Nullable Input<String> cloudSqlId) {
            this.cloudSqlId = cloudSqlId;
            return this;
        }

        public Builder setCloudSqlId(@Nullable String cloudSqlId) {
            this.cloudSqlId = Input.ofNullable(cloudSqlId);
            return this;
        }

        public Builder setHost(Input<String> host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }

        public Builder setHost(String host) {
            this.host = Input.of(Objects.requireNonNull(host));
            return this;
        }

        public Builder setPassword(Input<String> password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }

        public Builder setPassword(String password) {
            this.password = Input.of(Objects.requireNonNull(password));
            return this;
        }

        public Builder setPort(Input<Integer> port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public Builder setPort(Integer port) {
            this.port = Input.of(Objects.requireNonNull(port));
            return this;
        }

        public Builder setSsl(@Nullable Input<SslConfigArgs> ssl) {
            this.ssl = ssl;
            return this;
        }

        public Builder setSsl(@Nullable SslConfigArgs ssl) {
            this.ssl = Input.ofNullable(ssl);
            return this;
        }

        public Builder setUsername(Input<String> username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }

        public Builder setUsername(String username) {
            this.username = Input.of(Objects.requireNonNull(username));
            return this;
        }

        public MySqlConnectionProfileArgs build() {
            return new MySqlConnectionProfileArgs(cloudSqlId, host, password, port, ssl, username);
        }
    }
}
