// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.vmmigration_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.vmmigration_v1.inputs.SchedulingNodeAffinityResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ComputeSchedulingResponse extends io.pulumi.resources.InvokeArgs {

    public static final ComputeSchedulingResponse Empty = new ComputeSchedulingResponse();

    @InputImport(name="minNodeCpus", required=true)
    private final Integer minNodeCpus;

    public Integer getMinNodeCpus() {
        return this.minNodeCpus;
    }

    @InputImport(name="nodeAffinities", required=true)
    private final List<SchedulingNodeAffinityResponse> nodeAffinities;

    public List<SchedulingNodeAffinityResponse> getNodeAffinities() {
        return this.nodeAffinities;
    }

    @InputImport(name="onHostMaintenance", required=true)
    private final String onHostMaintenance;

    public String getOnHostMaintenance() {
        return this.onHostMaintenance;
    }

    @InputImport(name="restartType", required=true)
    private final String restartType;

    public String getRestartType() {
        return this.restartType;
    }

    public ComputeSchedulingResponse(
        Integer minNodeCpus,
        List<SchedulingNodeAffinityResponse> nodeAffinities,
        String onHostMaintenance,
        String restartType) {
        this.minNodeCpus = Objects.requireNonNull(minNodeCpus, "expected parameter 'minNodeCpus' to be non-null");
        this.nodeAffinities = Objects.requireNonNull(nodeAffinities, "expected parameter 'nodeAffinities' to be non-null");
        this.onHostMaintenance = Objects.requireNonNull(onHostMaintenance, "expected parameter 'onHostMaintenance' to be non-null");
        this.restartType = Objects.requireNonNull(restartType, "expected parameter 'restartType' to be non-null");
    }

    private ComputeSchedulingResponse() {
        this.minNodeCpus = null;
        this.nodeAffinities = List.of();
        this.onHostMaintenance = null;
        this.restartType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComputeSchedulingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer minNodeCpus;
        private List<SchedulingNodeAffinityResponse> nodeAffinities;
        private String onHostMaintenance;
        private String restartType;

        public Builder() {
    	      // Empty
        }

        public Builder(ComputeSchedulingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.minNodeCpus = defaults.minNodeCpus;
    	      this.nodeAffinities = defaults.nodeAffinities;
    	      this.onHostMaintenance = defaults.onHostMaintenance;
    	      this.restartType = defaults.restartType;
        }

        public Builder setMinNodeCpus(Integer minNodeCpus) {
            this.minNodeCpus = Objects.requireNonNull(minNodeCpus);
            return this;
        }

        public Builder setNodeAffinities(List<SchedulingNodeAffinityResponse> nodeAffinities) {
            this.nodeAffinities = Objects.requireNonNull(nodeAffinities);
            return this;
        }

        public Builder setOnHostMaintenance(String onHostMaintenance) {
            this.onHostMaintenance = Objects.requireNonNull(onHostMaintenance);
            return this;
        }

        public Builder setRestartType(String restartType) {
            this.restartType = Objects.requireNonNull(restartType);
            return this;
        }

        public ComputeSchedulingResponse build() {
            return new ComputeSchedulingResponse(minNodeCpus, nodeAffinities, onHostMaintenance, restartType);
        }
    }
}
