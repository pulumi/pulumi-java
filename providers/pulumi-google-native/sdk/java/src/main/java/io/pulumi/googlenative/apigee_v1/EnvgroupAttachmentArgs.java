// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.apigee_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EnvgroupAttachmentArgs extends io.pulumi.resources.ResourceArgs {

    public static final EnvgroupAttachmentArgs Empty = new EnvgroupAttachmentArgs();

    @Import(name="envgroupId", required=true)
      private final Output<String> envgroupId;

    public Output<String> envgroupId() {
        return this.envgroupId;
    }

    /**
     * ID of the attached environment.
     * 
     */
    @Import(name="environment", required=true)
      private final Output<String> environment;

    public Output<String> environment() {
        return this.environment;
    }

    /**
     * ID of the environment group attachment.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="organizationId", required=true)
      private final Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }

    public EnvgroupAttachmentArgs(
        Output<String> envgroupId,
        Output<String> environment,
        @Nullable Output<String> name,
        Output<String> organizationId) {
        this.envgroupId = Objects.requireNonNull(envgroupId, "expected parameter 'envgroupId' to be non-null");
        this.environment = Objects.requireNonNull(environment, "expected parameter 'environment' to be non-null");
        this.name = name;
        this.organizationId = Objects.requireNonNull(organizationId, "expected parameter 'organizationId' to be non-null");
    }

    private EnvgroupAttachmentArgs() {
        this.envgroupId = Codegen.empty();
        this.environment = Codegen.empty();
        this.name = Codegen.empty();
        this.organizationId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvgroupAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> envgroupId;
        private Output<String> environment;
        private @Nullable Output<String> name;
        private Output<String> organizationId;

        public Builder() {
    	      // Empty
        }

        public Builder(EnvgroupAttachmentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.envgroupId = defaults.envgroupId;
    	      this.environment = defaults.environment;
    	      this.name = defaults.name;
    	      this.organizationId = defaults.organizationId;
        }

        public Builder envgroupId(Output<String> envgroupId) {
            this.envgroupId = Objects.requireNonNull(envgroupId);
            return this;
        }
        public Builder envgroupId(String envgroupId) {
            this.envgroupId = Output.of(Objects.requireNonNull(envgroupId));
            return this;
        }
        public Builder environment(Output<String> environment) {
            this.environment = Objects.requireNonNull(environment);
            return this;
        }
        public Builder environment(String environment) {
            this.environment = Output.of(Objects.requireNonNull(environment));
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder organizationId(Output<String> organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }
        public Builder organizationId(String organizationId) {
            this.organizationId = Output.of(Objects.requireNonNull(organizationId));
            return this;
        }        public EnvgroupAttachmentArgs build() {
            return new EnvgroupAttachmentArgs(envgroupId, environment, name, organizationId);
        }
    }
}
