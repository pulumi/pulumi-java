// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.pubsub_v1beta2;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.pubsub_v1beta2.inputs.PushConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SubscriptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final SubscriptionArgs Empty = new SubscriptionArgs();

    @InputImport(name="ackDeadlineSeconds")
    private final @Nullable Input<Integer> ackDeadlineSeconds;

    public Input<Integer> getAckDeadlineSeconds() {
        return this.ackDeadlineSeconds == null ? Input.empty() : this.ackDeadlineSeconds;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="pushConfig")
    private final @Nullable Input<PushConfigArgs> pushConfig;

    public Input<PushConfigArgs> getPushConfig() {
        return this.pushConfig == null ? Input.empty() : this.pushConfig;
    }

    @InputImport(name="subscriptionId", required=true)
    private final Input<String> subscriptionId;

    public Input<String> getSubscriptionId() {
        return this.subscriptionId;
    }

    @InputImport(name="topic")
    private final @Nullable Input<String> topic;

    public Input<String> getTopic() {
        return this.topic == null ? Input.empty() : this.topic;
    }

    public SubscriptionArgs(
        @Nullable Input<Integer> ackDeadlineSeconds,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<PushConfigArgs> pushConfig,
        Input<String> subscriptionId,
        @Nullable Input<String> topic) {
        this.ackDeadlineSeconds = ackDeadlineSeconds;
        this.name = name;
        this.project = project;
        this.pushConfig = pushConfig;
        this.subscriptionId = Objects.requireNonNull(subscriptionId, "expected parameter 'subscriptionId' to be non-null");
        this.topic = topic;
    }

    private SubscriptionArgs() {
        this.ackDeadlineSeconds = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.pushConfig = Input.empty();
        this.subscriptionId = Input.empty();
        this.topic = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> ackDeadlineSeconds;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<PushConfigArgs> pushConfig;
        private Input<String> subscriptionId;
        private @Nullable Input<String> topic;

        public Builder() {
    	      // Empty
        }

        public Builder(SubscriptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ackDeadlineSeconds = defaults.ackDeadlineSeconds;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.pushConfig = defaults.pushConfig;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.topic = defaults.topic;
        }

        public Builder setAckDeadlineSeconds(@Nullable Input<Integer> ackDeadlineSeconds) {
            this.ackDeadlineSeconds = ackDeadlineSeconds;
            return this;
        }

        public Builder setAckDeadlineSeconds(@Nullable Integer ackDeadlineSeconds) {
            this.ackDeadlineSeconds = Input.ofNullable(ackDeadlineSeconds);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setPushConfig(@Nullable Input<PushConfigArgs> pushConfig) {
            this.pushConfig = pushConfig;
            return this;
        }

        public Builder setPushConfig(@Nullable PushConfigArgs pushConfig) {
            this.pushConfig = Input.ofNullable(pushConfig);
            return this;
        }

        public Builder setSubscriptionId(Input<String> subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId);
            return this;
        }

        public Builder setSubscriptionId(String subscriptionId) {
            this.subscriptionId = Input.of(Objects.requireNonNull(subscriptionId));
            return this;
        }

        public Builder setTopic(@Nullable Input<String> topic) {
            this.topic = topic;
            return this;
        }

        public Builder setTopic(@Nullable String topic) {
            this.topic = Input.ofNullable(topic);
            return this;
        }

        public SubscriptionArgs build() {
            return new SubscriptionArgs(ackDeadlineSeconds, name, project, pushConfig, subscriptionId, topic);
        }
    }
}
