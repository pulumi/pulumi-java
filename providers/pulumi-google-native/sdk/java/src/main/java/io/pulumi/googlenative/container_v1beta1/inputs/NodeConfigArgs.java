// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.container_v1beta1.inputs.AcceleratorConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.AdvancedMachineFeaturesArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.EphemeralStorageConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.GcfsConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.LinuxNodeConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.NodeKubeletConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.NodeTaintArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.ReservationAffinityArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.SandboxConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.ShieldedInstanceConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.VirtualNICArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.WorkloadMetadataConfigArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Parameters that describe the nodes in a cluster.
 * 
 */
public final class NodeConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final NodeConfigArgs Empty = new NodeConfigArgs();

    /**
     * A list of hardware accelerators to be attached to each node. See https://cloud.google.com/compute/docs/gpus for more information about support for GPUs.
     * 
     */
    @InputImport(name="accelerators")
      private final @Nullable Output<List<AcceleratorConfigArgs>> accelerators;

    public Output<List<AcceleratorConfigArgs>> getAccelerators() {
        return this.accelerators == null ? Output.empty() : this.accelerators;
    }

    /**
     * Advanced features for the Compute Engine VM.
     * 
     */
    @InputImport(name="advancedMachineFeatures")
      private final @Nullable Output<AdvancedMachineFeaturesArgs> advancedMachineFeatures;

    public Output<AdvancedMachineFeaturesArgs> getAdvancedMachineFeatures() {
        return this.advancedMachineFeatures == null ? Output.empty() : this.advancedMachineFeatures;
    }

    /**
     *  The Customer Managed Encryption Key used to encrypt the boot disk attached to each node in the node pool. This should be of the form projects/[KEY_PROJECT_ID]/locations/[LOCATION]/keyRings/[RING_NAME]/cryptoKeys/[KEY_NAME]. For more information about protecting resources with Cloud KMS Keys please see: https://cloud.google.com/compute/docs/disks/customer-managed-encryption
     * 
     */
    @InputImport(name="bootDiskKmsKey")
      private final @Nullable Output<String> bootDiskKmsKey;

    public Output<String> getBootDiskKmsKey() {
        return this.bootDiskKmsKey == null ? Output.empty() : this.bootDiskKmsKey;
    }

    /**
     * Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB. If unspecified, the default disk size is 100GB.
     * 
     */
    @InputImport(name="diskSizeGb")
      private final @Nullable Output<Integer> diskSizeGb;

    public Output<Integer> getDiskSizeGb() {
        return this.diskSizeGb == null ? Output.empty() : this.diskSizeGb;
    }

    /**
     * Type of the disk attached to each node (e.g. 'pd-standard', 'pd-ssd' or 'pd-balanced') If unspecified, the default disk type is 'pd-standard'
     * 
     */
    @InputImport(name="diskType")
      private final @Nullable Output<String> diskType;

    public Output<String> getDiskType() {
        return this.diskType == null ? Output.empty() : this.diskType;
    }

    /**
     * Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.
     * 
     */
    @InputImport(name="ephemeralStorageConfig")
      private final @Nullable Output<EphemeralStorageConfigArgs> ephemeralStorageConfig;

    public Output<EphemeralStorageConfigArgs> getEphemeralStorageConfig() {
        return this.ephemeralStorageConfig == null ? Output.empty() : this.ephemeralStorageConfig;
    }

    /**
     * GCFS (Google Container File System) configs.
     * 
     */
    @InputImport(name="gcfsConfig")
      private final @Nullable Output<GcfsConfigArgs> gcfsConfig;

    public Output<GcfsConfigArgs> getGcfsConfig() {
        return this.gcfsConfig == null ? Output.empty() : this.gcfsConfig;
    }

    /**
     * Enable or disable gvnic on the node pool.
     * 
     */
    @InputImport(name="gvnic")
      private final @Nullable Output<VirtualNICArgs> gvnic;

    public Output<VirtualNICArgs> getGvnic() {
        return this.gvnic == null ? Output.empty() : this.gvnic;
    }

    /**
     * The image type to use for this node. Note that for a given image type, the latest version of it will be used.
     * 
     */
    @InputImport(name="imageType")
      private final @Nullable Output<String> imageType;

    public Output<String> getImageType() {
        return this.imageType == null ? Output.empty() : this.imageType;
    }

    /**
     * Node kubelet configs.
     * 
     */
    @InputImport(name="kubeletConfig")
      private final @Nullable Output<NodeKubeletConfigArgs> kubeletConfig;

    public Output<NodeKubeletConfigArgs> getKubeletConfig() {
        return this.kubeletConfig == null ? Output.empty() : this.kubeletConfig;
    }

    /**
     * The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node. In case of conflict in label keys, the applied set may differ depending on the Kubernetes version -- it's best to assume the behavior is undefined and conflicts should be avoided. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
     * 
     */
    @InputImport(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels == null ? Output.empty() : this.labels;
    }

    /**
     * Parameters that can be configured on Linux nodes.
     * 
     */
    @InputImport(name="linuxNodeConfig")
      private final @Nullable Output<LinuxNodeConfigArgs> linuxNodeConfig;

    public Output<LinuxNodeConfigArgs> getLinuxNodeConfig() {
        return this.linuxNodeConfig == null ? Output.empty() : this.linuxNodeConfig;
    }

    /**
     * The number of local SSD disks to be attached to the node. The limit for this value is dependent upon the maximum number of disks available on a machine per zone. See: https://cloud.google.com/compute/docs/disks/local-ssd for more information.
     * 
     */
    @InputImport(name="localSsdCount")
      private final @Nullable Output<Integer> localSsdCount;

    public Output<Integer> getLocalSsdCount() {
        return this.localSsdCount == null ? Output.empty() : this.localSsdCount;
    }

    /**
     * The name of a Google Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types). If unspecified, the default machine type is `e2-medium`.
     * 
     */
    @InputImport(name="machineType")
      private final @Nullable Output<String> machineType;

    public Output<String> getMachineType() {
        return this.machineType == null ? Output.empty() : this.machineType;
    }

    /**
     * The metadata key/value pairs assigned to instances in the cluster. Keys must conform to the regexp `[a-zA-Z0-9-_]+` and be less than 128 bytes in length. These are reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project or be one of the reserved keys: - "cluster-location" - "cluster-name" - "cluster-uid" - "configure-sh" - "containerd-configure-sh" - "enable-oslogin" - "gci-ensure-gke-docker" - "gci-metrics-enabled" - "gci-update-strategy" - "instance-template" - "kube-env" - "startup-script" - "user-data" - "disable-address-manager" - "windows-startup-script-ps1" - "common-psm1" - "k8s-node-setup-psm1" - "install-ssh-psm1" - "user-profile-psm1" Values are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on them is that each value's size must be less than or equal to 32 KB. The total size of all keys and values must be less than 512 KB.
     * 
     */
    @InputImport(name="metadata")
      private final @Nullable Output<Map<String,String>> metadata;

    public Output<Map<String,String>> getMetadata() {
        return this.metadata == null ? Output.empty() : this.metadata;
    }

    /**
     * Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform. Applicable values are the friendly names of CPU platforms, such as `minCpuPlatform: "Intel Haswell"` or `minCpuPlatform: "Intel Sandy Bridge"`. For more information, read [how to specify min CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform)
     * 
     */
    @InputImport(name="minCpuPlatform")
      private final @Nullable Output<String> minCpuPlatform;

    public Output<String> getMinCpuPlatform() {
        return this.minCpuPlatform == null ? Output.empty() : this.minCpuPlatform;
    }

    /**
     * Setting this field will assign instances of this pool to run on the specified node group. This is useful for running workloads on [sole tenant nodes](https://cloud.google.com/compute/docs/nodes/sole-tenant-nodes).
     * 
     */
    @InputImport(name="nodeGroup")
      private final @Nullable Output<String> nodeGroup;

    public Output<String> getNodeGroup() {
        return this.nodeGroup == null ? Output.empty() : this.nodeGroup;
    }

    /**
     * The set of Google API scopes to be made available on all of the node VMs under the "default" service account. The following scopes are recommended, but not required, and by default are not included: * `https://www.googleapis.com/auth/compute` is required for mounting persistent storage on your nodes. * `https://www.googleapis.com/auth/devstorage.read_only` is required for communicating with **gcr.io** (the [Google Container Registry](https://cloud.google.com/container-registry/)). If unspecified, no scopes are added, unless Cloud Logging or Cloud Monitoring are enabled, in which case their required scopes will be added.
     * 
     */
    @InputImport(name="oauthScopes")
      private final @Nullable Output<List<String>> oauthScopes;

    public Output<List<String>> getOauthScopes() {
        return this.oauthScopes == null ? Output.empty() : this.oauthScopes;
    }

    /**
     * Whether the nodes are created as preemptible VM instances. See: https://cloud.google.com/compute/docs/instances/preemptible for more inforamtion about preemptible VM instances.
     * 
     */
    @InputImport(name="preemptible")
      private final @Nullable Output<Boolean> preemptible;

    public Output<Boolean> getPreemptible() {
        return this.preemptible == null ? Output.empty() : this.preemptible;
    }

    /**
     * The optional reservation affinity. Setting this field will apply the specified [Zonal Compute Reservation](https://cloud.google.com/compute/docs/instances/reserving-zonal-resources) to this node pool.
     * 
     */
    @InputImport(name="reservationAffinity")
      private final @Nullable Output<ReservationAffinityArgs> reservationAffinity;

    public Output<ReservationAffinityArgs> getReservationAffinity() {
        return this.reservationAffinity == null ? Output.empty() : this.reservationAffinity;
    }

    /**
     * Sandbox configuration for this node.
     * 
     */
    @InputImport(name="sandboxConfig")
      private final @Nullable Output<SandboxConfigArgs> sandboxConfig;

    public Output<SandboxConfigArgs> getSandboxConfig() {
        return this.sandboxConfig == null ? Output.empty() : this.sandboxConfig;
    }

    /**
     * The Google Cloud Platform Service Account to be used by the node VMs. Specify the email address of the Service Account; otherwise, if no Service Account is specified, the "default" service account is used.
     * 
     */
    @InputImport(name="serviceAccount")
      private final @Nullable Output<String> serviceAccount;

    public Output<String> getServiceAccount() {
        return this.serviceAccount == null ? Output.empty() : this.serviceAccount;
    }

    /**
     * Shielded Instance options.
     * 
     */
    @InputImport(name="shieldedInstanceConfig")
      private final @Nullable Output<ShieldedInstanceConfigArgs> shieldedInstanceConfig;

    public Output<ShieldedInstanceConfigArgs> getShieldedInstanceConfig() {
        return this.shieldedInstanceConfig == null ? Output.empty() : this.shieldedInstanceConfig;
    }

    /**
     * Spot flag for enabling Spot VM, which is a rebrand of the existing preemptible flag.
     * 
     */
    @InputImport(name="spot")
      private final @Nullable Output<Boolean> spot;

    public Output<Boolean> getSpot() {
        return this.spot == null ? Output.empty() : this.spot;
    }

    /**
     * The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during cluster or node pool creation. Each tag within the list must comply with RFC1035.
     * 
     */
    @InputImport(name="tags")
      private final @Nullable Output<List<String>> tags;

    public Output<List<String>> getTags() {
        return this.tags == null ? Output.empty() : this.tags;
    }

    /**
     * List of kubernetes taints to be applied to each node. For more information, including usage and the valid values, see: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
     * 
     */
    @InputImport(name="taints")
      private final @Nullable Output<List<NodeTaintArgs>> taints;

    public Output<List<NodeTaintArgs>> getTaints() {
        return this.taints == null ? Output.empty() : this.taints;
    }

    /**
     * The workload metadata configuration for this node.
     * 
     */
    @InputImport(name="workloadMetadataConfig")
      private final @Nullable Output<WorkloadMetadataConfigArgs> workloadMetadataConfig;

    public Output<WorkloadMetadataConfigArgs> getWorkloadMetadataConfig() {
        return this.workloadMetadataConfig == null ? Output.empty() : this.workloadMetadataConfig;
    }

    public NodeConfigArgs(
        @Nullable Output<List<AcceleratorConfigArgs>> accelerators,
        @Nullable Output<AdvancedMachineFeaturesArgs> advancedMachineFeatures,
        @Nullable Output<String> bootDiskKmsKey,
        @Nullable Output<Integer> diskSizeGb,
        @Nullable Output<String> diskType,
        @Nullable Output<EphemeralStorageConfigArgs> ephemeralStorageConfig,
        @Nullable Output<GcfsConfigArgs> gcfsConfig,
        @Nullable Output<VirtualNICArgs> gvnic,
        @Nullable Output<String> imageType,
        @Nullable Output<NodeKubeletConfigArgs> kubeletConfig,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<LinuxNodeConfigArgs> linuxNodeConfig,
        @Nullable Output<Integer> localSsdCount,
        @Nullable Output<String> machineType,
        @Nullable Output<Map<String,String>> metadata,
        @Nullable Output<String> minCpuPlatform,
        @Nullable Output<String> nodeGroup,
        @Nullable Output<List<String>> oauthScopes,
        @Nullable Output<Boolean> preemptible,
        @Nullable Output<ReservationAffinityArgs> reservationAffinity,
        @Nullable Output<SandboxConfigArgs> sandboxConfig,
        @Nullable Output<String> serviceAccount,
        @Nullable Output<ShieldedInstanceConfigArgs> shieldedInstanceConfig,
        @Nullable Output<Boolean> spot,
        @Nullable Output<List<String>> tags,
        @Nullable Output<List<NodeTaintArgs>> taints,
        @Nullable Output<WorkloadMetadataConfigArgs> workloadMetadataConfig) {
        this.accelerators = accelerators;
        this.advancedMachineFeatures = advancedMachineFeatures;
        this.bootDiskKmsKey = bootDiskKmsKey;
        this.diskSizeGb = diskSizeGb;
        this.diskType = diskType;
        this.ephemeralStorageConfig = ephemeralStorageConfig;
        this.gcfsConfig = gcfsConfig;
        this.gvnic = gvnic;
        this.imageType = imageType;
        this.kubeletConfig = kubeletConfig;
        this.labels = labels;
        this.linuxNodeConfig = linuxNodeConfig;
        this.localSsdCount = localSsdCount;
        this.machineType = machineType;
        this.metadata = metadata;
        this.minCpuPlatform = minCpuPlatform;
        this.nodeGroup = nodeGroup;
        this.oauthScopes = oauthScopes;
        this.preemptible = preemptible;
        this.reservationAffinity = reservationAffinity;
        this.sandboxConfig = sandboxConfig;
        this.serviceAccount = serviceAccount;
        this.shieldedInstanceConfig = shieldedInstanceConfig;
        this.spot = spot;
        this.tags = tags;
        this.taints = taints;
        this.workloadMetadataConfig = workloadMetadataConfig;
    }

    private NodeConfigArgs() {
        this.accelerators = Output.empty();
        this.advancedMachineFeatures = Output.empty();
        this.bootDiskKmsKey = Output.empty();
        this.diskSizeGb = Output.empty();
        this.diskType = Output.empty();
        this.ephemeralStorageConfig = Output.empty();
        this.gcfsConfig = Output.empty();
        this.gvnic = Output.empty();
        this.imageType = Output.empty();
        this.kubeletConfig = Output.empty();
        this.labels = Output.empty();
        this.linuxNodeConfig = Output.empty();
        this.localSsdCount = Output.empty();
        this.machineType = Output.empty();
        this.metadata = Output.empty();
        this.minCpuPlatform = Output.empty();
        this.nodeGroup = Output.empty();
        this.oauthScopes = Output.empty();
        this.preemptible = Output.empty();
        this.reservationAffinity = Output.empty();
        this.sandboxConfig = Output.empty();
        this.serviceAccount = Output.empty();
        this.shieldedInstanceConfig = Output.empty();
        this.spot = Output.empty();
        this.tags = Output.empty();
        this.taints = Output.empty();
        this.workloadMetadataConfig = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<AcceleratorConfigArgs>> accelerators;
        private @Nullable Output<AdvancedMachineFeaturesArgs> advancedMachineFeatures;
        private @Nullable Output<String> bootDiskKmsKey;
        private @Nullable Output<Integer> diskSizeGb;
        private @Nullable Output<String> diskType;
        private @Nullable Output<EphemeralStorageConfigArgs> ephemeralStorageConfig;
        private @Nullable Output<GcfsConfigArgs> gcfsConfig;
        private @Nullable Output<VirtualNICArgs> gvnic;
        private @Nullable Output<String> imageType;
        private @Nullable Output<NodeKubeletConfigArgs> kubeletConfig;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<LinuxNodeConfigArgs> linuxNodeConfig;
        private @Nullable Output<Integer> localSsdCount;
        private @Nullable Output<String> machineType;
        private @Nullable Output<Map<String,String>> metadata;
        private @Nullable Output<String> minCpuPlatform;
        private @Nullable Output<String> nodeGroup;
        private @Nullable Output<List<String>> oauthScopes;
        private @Nullable Output<Boolean> preemptible;
        private @Nullable Output<ReservationAffinityArgs> reservationAffinity;
        private @Nullable Output<SandboxConfigArgs> sandboxConfig;
        private @Nullable Output<String> serviceAccount;
        private @Nullable Output<ShieldedInstanceConfigArgs> shieldedInstanceConfig;
        private @Nullable Output<Boolean> spot;
        private @Nullable Output<List<String>> tags;
        private @Nullable Output<List<NodeTaintArgs>> taints;
        private @Nullable Output<WorkloadMetadataConfigArgs> workloadMetadataConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(NodeConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accelerators = defaults.accelerators;
    	      this.advancedMachineFeatures = defaults.advancedMachineFeatures;
    	      this.bootDiskKmsKey = defaults.bootDiskKmsKey;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.ephemeralStorageConfig = defaults.ephemeralStorageConfig;
    	      this.gcfsConfig = defaults.gcfsConfig;
    	      this.gvnic = defaults.gvnic;
    	      this.imageType = defaults.imageType;
    	      this.kubeletConfig = defaults.kubeletConfig;
    	      this.labels = defaults.labels;
    	      this.linuxNodeConfig = defaults.linuxNodeConfig;
    	      this.localSsdCount = defaults.localSsdCount;
    	      this.machineType = defaults.machineType;
    	      this.metadata = defaults.metadata;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.nodeGroup = defaults.nodeGroup;
    	      this.oauthScopes = defaults.oauthScopes;
    	      this.preemptible = defaults.preemptible;
    	      this.reservationAffinity = defaults.reservationAffinity;
    	      this.sandboxConfig = defaults.sandboxConfig;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.shieldedInstanceConfig = defaults.shieldedInstanceConfig;
    	      this.spot = defaults.spot;
    	      this.tags = defaults.tags;
    	      this.taints = defaults.taints;
    	      this.workloadMetadataConfig = defaults.workloadMetadataConfig;
        }

        public Builder accelerators(@Nullable Output<List<AcceleratorConfigArgs>> accelerators) {
            this.accelerators = accelerators;
            return this;
        }

        public Builder accelerators(@Nullable List<AcceleratorConfigArgs> accelerators) {
            this.accelerators = Output.ofNullable(accelerators);
            return this;
        }

        public Builder advancedMachineFeatures(@Nullable Output<AdvancedMachineFeaturesArgs> advancedMachineFeatures) {
            this.advancedMachineFeatures = advancedMachineFeatures;
            return this;
        }

        public Builder advancedMachineFeatures(@Nullable AdvancedMachineFeaturesArgs advancedMachineFeatures) {
            this.advancedMachineFeatures = Output.ofNullable(advancedMachineFeatures);
            return this;
        }

        public Builder bootDiskKmsKey(@Nullable Output<String> bootDiskKmsKey) {
            this.bootDiskKmsKey = bootDiskKmsKey;
            return this;
        }

        public Builder bootDiskKmsKey(@Nullable String bootDiskKmsKey) {
            this.bootDiskKmsKey = Output.ofNullable(bootDiskKmsKey);
            return this;
        }

        public Builder diskSizeGb(@Nullable Output<Integer> diskSizeGb) {
            this.diskSizeGb = diskSizeGb;
            return this;
        }

        public Builder diskSizeGb(@Nullable Integer diskSizeGb) {
            this.diskSizeGb = Output.ofNullable(diskSizeGb);
            return this;
        }

        public Builder diskType(@Nullable Output<String> diskType) {
            this.diskType = diskType;
            return this;
        }

        public Builder diskType(@Nullable String diskType) {
            this.diskType = Output.ofNullable(diskType);
            return this;
        }

        public Builder ephemeralStorageConfig(@Nullable Output<EphemeralStorageConfigArgs> ephemeralStorageConfig) {
            this.ephemeralStorageConfig = ephemeralStorageConfig;
            return this;
        }

        public Builder ephemeralStorageConfig(@Nullable EphemeralStorageConfigArgs ephemeralStorageConfig) {
            this.ephemeralStorageConfig = Output.ofNullable(ephemeralStorageConfig);
            return this;
        }

        public Builder gcfsConfig(@Nullable Output<GcfsConfigArgs> gcfsConfig) {
            this.gcfsConfig = gcfsConfig;
            return this;
        }

        public Builder gcfsConfig(@Nullable GcfsConfigArgs gcfsConfig) {
            this.gcfsConfig = Output.ofNullable(gcfsConfig);
            return this;
        }

        public Builder gvnic(@Nullable Output<VirtualNICArgs> gvnic) {
            this.gvnic = gvnic;
            return this;
        }

        public Builder gvnic(@Nullable VirtualNICArgs gvnic) {
            this.gvnic = Output.ofNullable(gvnic);
            return this;
        }

        public Builder imageType(@Nullable Output<String> imageType) {
            this.imageType = imageType;
            return this;
        }

        public Builder imageType(@Nullable String imageType) {
            this.imageType = Output.ofNullable(imageType);
            return this;
        }

        public Builder kubeletConfig(@Nullable Output<NodeKubeletConfigArgs> kubeletConfig) {
            this.kubeletConfig = kubeletConfig;
            return this;
        }

        public Builder kubeletConfig(@Nullable NodeKubeletConfigArgs kubeletConfig) {
            this.kubeletConfig = Output.ofNullable(kubeletConfig);
            return this;
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Output.ofNullable(labels);
            return this;
        }

        public Builder linuxNodeConfig(@Nullable Output<LinuxNodeConfigArgs> linuxNodeConfig) {
            this.linuxNodeConfig = linuxNodeConfig;
            return this;
        }

        public Builder linuxNodeConfig(@Nullable LinuxNodeConfigArgs linuxNodeConfig) {
            this.linuxNodeConfig = Output.ofNullable(linuxNodeConfig);
            return this;
        }

        public Builder localSsdCount(@Nullable Output<Integer> localSsdCount) {
            this.localSsdCount = localSsdCount;
            return this;
        }

        public Builder localSsdCount(@Nullable Integer localSsdCount) {
            this.localSsdCount = Output.ofNullable(localSsdCount);
            return this;
        }

        public Builder machineType(@Nullable Output<String> machineType) {
            this.machineType = machineType;
            return this;
        }

        public Builder machineType(@Nullable String machineType) {
            this.machineType = Output.ofNullable(machineType);
            return this;
        }

        public Builder metadata(@Nullable Output<Map<String,String>> metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder metadata(@Nullable Map<String,String> metadata) {
            this.metadata = Output.ofNullable(metadata);
            return this;
        }

        public Builder minCpuPlatform(@Nullable Output<String> minCpuPlatform) {
            this.minCpuPlatform = minCpuPlatform;
            return this;
        }

        public Builder minCpuPlatform(@Nullable String minCpuPlatform) {
            this.minCpuPlatform = Output.ofNullable(minCpuPlatform);
            return this;
        }

        public Builder nodeGroup(@Nullable Output<String> nodeGroup) {
            this.nodeGroup = nodeGroup;
            return this;
        }

        public Builder nodeGroup(@Nullable String nodeGroup) {
            this.nodeGroup = Output.ofNullable(nodeGroup);
            return this;
        }

        public Builder oauthScopes(@Nullable Output<List<String>> oauthScopes) {
            this.oauthScopes = oauthScopes;
            return this;
        }

        public Builder oauthScopes(@Nullable List<String> oauthScopes) {
            this.oauthScopes = Output.ofNullable(oauthScopes);
            return this;
        }

        public Builder preemptible(@Nullable Output<Boolean> preemptible) {
            this.preemptible = preemptible;
            return this;
        }

        public Builder preemptible(@Nullable Boolean preemptible) {
            this.preemptible = Output.ofNullable(preemptible);
            return this;
        }

        public Builder reservationAffinity(@Nullable Output<ReservationAffinityArgs> reservationAffinity) {
            this.reservationAffinity = reservationAffinity;
            return this;
        }

        public Builder reservationAffinity(@Nullable ReservationAffinityArgs reservationAffinity) {
            this.reservationAffinity = Output.ofNullable(reservationAffinity);
            return this;
        }

        public Builder sandboxConfig(@Nullable Output<SandboxConfigArgs> sandboxConfig) {
            this.sandboxConfig = sandboxConfig;
            return this;
        }

        public Builder sandboxConfig(@Nullable SandboxConfigArgs sandboxConfig) {
            this.sandboxConfig = Output.ofNullable(sandboxConfig);
            return this;
        }

        public Builder serviceAccount(@Nullable Output<String> serviceAccount) {
            this.serviceAccount = serviceAccount;
            return this;
        }

        public Builder serviceAccount(@Nullable String serviceAccount) {
            this.serviceAccount = Output.ofNullable(serviceAccount);
            return this;
        }

        public Builder shieldedInstanceConfig(@Nullable Output<ShieldedInstanceConfigArgs> shieldedInstanceConfig) {
            this.shieldedInstanceConfig = shieldedInstanceConfig;
            return this;
        }

        public Builder shieldedInstanceConfig(@Nullable ShieldedInstanceConfigArgs shieldedInstanceConfig) {
            this.shieldedInstanceConfig = Output.ofNullable(shieldedInstanceConfig);
            return this;
        }

        public Builder spot(@Nullable Output<Boolean> spot) {
            this.spot = spot;
            return this;
        }

        public Builder spot(@Nullable Boolean spot) {
            this.spot = Output.ofNullable(spot);
            return this;
        }

        public Builder tags(@Nullable Output<List<String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder tags(@Nullable List<String> tags) {
            this.tags = Output.ofNullable(tags);
            return this;
        }

        public Builder taints(@Nullable Output<List<NodeTaintArgs>> taints) {
            this.taints = taints;
            return this;
        }

        public Builder taints(@Nullable List<NodeTaintArgs> taints) {
            this.taints = Output.ofNullable(taints);
            return this;
        }

        public Builder workloadMetadataConfig(@Nullable Output<WorkloadMetadataConfigArgs> workloadMetadataConfig) {
            this.workloadMetadataConfig = workloadMetadataConfig;
            return this;
        }

        public Builder workloadMetadataConfig(@Nullable WorkloadMetadataConfigArgs workloadMetadataConfig) {
            this.workloadMetadataConfig = Output.ofNullable(workloadMetadataConfig);
            return this;
        }
        public NodeConfigArgs build() {
            return new NodeConfigArgs(accelerators, advancedMachineFeatures, bootDiskKmsKey, diskSizeGb, diskType, ephemeralStorageConfig, gcfsConfig, gvnic, imageType, kubeletConfig, labels, linuxNodeConfig, localSsdCount, machineType, metadata, minCpuPlatform, nodeGroup, oauthScopes, preemptible, reservationAffinity, sandboxConfig, serviceAccount, shieldedInstanceConfig, spot, tags, taints, workloadMetadataConfig);
        }
    }
}
