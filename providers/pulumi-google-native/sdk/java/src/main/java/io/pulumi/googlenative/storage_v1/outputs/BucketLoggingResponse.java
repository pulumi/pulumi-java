// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.storage_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class BucketLoggingResponse {
    /**
     * The destination bucket where the current bucket's logs should be placed.
     * 
     */
    private final String logBucket;
    /**
     * A prefix for log object names.
     * 
     */
    private final String logObjectPrefix;

    @OutputCustomType.Constructor({"logBucket","logObjectPrefix"})
    private BucketLoggingResponse(
        String logBucket,
        String logObjectPrefix) {
        this.logBucket = logBucket;
        this.logObjectPrefix = logObjectPrefix;
    }

    /**
     * The destination bucket where the current bucket's logs should be placed.
     * 
    */
    public String getLogBucket() {
        return this.logBucket;
    }
    /**
     * A prefix for log object names.
     * 
    */
    public String getLogObjectPrefix() {
        return this.logObjectPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketLoggingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String logBucket;
        private String logObjectPrefix;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketLoggingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logBucket = defaults.logBucket;
    	      this.logObjectPrefix = defaults.logObjectPrefix;
        }

        public Builder setLogBucket(String logBucket) {
            this.logBucket = Objects.requireNonNull(logBucket);
            return this;
        }

        public Builder setLogObjectPrefix(String logObjectPrefix) {
            this.logObjectPrefix = Objects.requireNonNull(logObjectPrefix);
            return this;
        }
        public BucketLoggingResponse build() {
            return new BucketLoggingResponse(logBucket, logObjectPrefix);
        }
    }
}
