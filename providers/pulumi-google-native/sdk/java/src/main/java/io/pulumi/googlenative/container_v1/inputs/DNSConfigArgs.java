// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.container_v1.enums.DNSConfigClusterDns;
import io.pulumi.googlenative.container_v1.enums.DNSConfigClusterDnsScope;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * DNSConfig contains the desired set of options for configuring clusterDNS.
 * 
 */
public final class DNSConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final DNSConfigArgs Empty = new DNSConfigArgs();

    /**
     * cluster_dns indicates which in-cluster DNS provider should be used.
     * 
     */
    @InputImport(name="clusterDns")
      private final @Nullable Input<DNSConfigClusterDns> clusterDns;

    public Input<DNSConfigClusterDns> getClusterDns() {
        return this.clusterDns == null ? Input.empty() : this.clusterDns;
    }

    /**
     * cluster_dns_domain is the suffix used for all cluster service records.
     * 
     */
    @InputImport(name="clusterDnsDomain")
      private final @Nullable Input<String> clusterDnsDomain;

    public Input<String> getClusterDnsDomain() {
        return this.clusterDnsDomain == null ? Input.empty() : this.clusterDnsDomain;
    }

    /**
     * cluster_dns_scope indicates the scope of access to cluster DNS records.
     * 
     */
    @InputImport(name="clusterDnsScope")
      private final @Nullable Input<DNSConfigClusterDnsScope> clusterDnsScope;

    public Input<DNSConfigClusterDnsScope> getClusterDnsScope() {
        return this.clusterDnsScope == null ? Input.empty() : this.clusterDnsScope;
    }

    public DNSConfigArgs(
        @Nullable Input<DNSConfigClusterDns> clusterDns,
        @Nullable Input<String> clusterDnsDomain,
        @Nullable Input<DNSConfigClusterDnsScope> clusterDnsScope) {
        this.clusterDns = clusterDns;
        this.clusterDnsDomain = clusterDnsDomain;
        this.clusterDnsScope = clusterDnsScope;
    }

    private DNSConfigArgs() {
        this.clusterDns = Input.empty();
        this.clusterDnsDomain = Input.empty();
        this.clusterDnsScope = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DNSConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<DNSConfigClusterDns> clusterDns;
        private @Nullable Input<String> clusterDnsDomain;
        private @Nullable Input<DNSConfigClusterDnsScope> clusterDnsScope;

        public Builder() {
    	      // Empty
        }

        public Builder(DNSConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterDns = defaults.clusterDns;
    	      this.clusterDnsDomain = defaults.clusterDnsDomain;
    	      this.clusterDnsScope = defaults.clusterDnsScope;
        }

        public Builder clusterDns(@Nullable Input<DNSConfigClusterDns> clusterDns) {
            this.clusterDns = clusterDns;
            return this;
        }

        public Builder clusterDns(@Nullable DNSConfigClusterDns clusterDns) {
            this.clusterDns = Input.ofNullable(clusterDns);
            return this;
        }

        public Builder clusterDnsDomain(@Nullable Input<String> clusterDnsDomain) {
            this.clusterDnsDomain = clusterDnsDomain;
            return this;
        }

        public Builder clusterDnsDomain(@Nullable String clusterDnsDomain) {
            this.clusterDnsDomain = Input.ofNullable(clusterDnsDomain);
            return this;
        }

        public Builder clusterDnsScope(@Nullable Input<DNSConfigClusterDnsScope> clusterDnsScope) {
            this.clusterDnsScope = clusterDnsScope;
            return this;
        }

        public Builder clusterDnsScope(@Nullable DNSConfigClusterDnsScope clusterDnsScope) {
            this.clusterDnsScope = Input.ofNullable(clusterDnsScope);
            return this;
        }
        public DNSConfigArgs build() {
            return new DNSConfigArgs(clusterDns, clusterDnsDomain, clusterDnsScope);
        }
    }
}
