// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v3.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3QueryInputResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * The input from the human user.
 * 
 */
public final class GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse Empty = new GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse();

    /**
     * Whether sentiment analysis is enabled.
     * 
     */
    @InputImport(name="enableSentimentAnalysis", required=true)
      private final Boolean enableSentimentAnalysis;

    public Boolean getEnableSentimentAnalysis() {
        return this.enableSentimentAnalysis;
    }

    /**
     * Parameters that need to be injected into the conversation during intent detection.
     * 
     */
    @InputImport(name="injectedParameters", required=true)
      private final Map<String,String> injectedParameters;

    public Map<String,String> getInjectedParameters() {
        return this.injectedParameters;
    }

    /**
     * Supports text input, event input, dtmf input in the test case.
     * 
     */
    @InputImport(name="input", required=true)
      private final GoogleCloudDialogflowCxV3QueryInputResponse input;

    public GoogleCloudDialogflowCxV3QueryInputResponse getInput() {
        return this.input;
    }

    /**
     * If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
     * 
     */
    @InputImport(name="isWebhookEnabled", required=true)
      private final Boolean isWebhookEnabled;

    public Boolean getIsWebhookEnabled() {
        return this.isWebhookEnabled;
    }

    public GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse(
        Boolean enableSentimentAnalysis,
        Map<String,String> injectedParameters,
        GoogleCloudDialogflowCxV3QueryInputResponse input,
        Boolean isWebhookEnabled) {
        this.enableSentimentAnalysis = Objects.requireNonNull(enableSentimentAnalysis, "expected parameter 'enableSentimentAnalysis' to be non-null");
        this.injectedParameters = Objects.requireNonNull(injectedParameters, "expected parameter 'injectedParameters' to be non-null");
        this.input = Objects.requireNonNull(input, "expected parameter 'input' to be non-null");
        this.isWebhookEnabled = Objects.requireNonNull(isWebhookEnabled, "expected parameter 'isWebhookEnabled' to be non-null");
    }

    private GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse() {
        this.enableSentimentAnalysis = null;
        this.injectedParameters = Map.of();
        this.input = null;
        this.isWebhookEnabled = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean enableSentimentAnalysis;
        private Map<String,String> injectedParameters;
        private GoogleCloudDialogflowCxV3QueryInputResponse input;
        private Boolean isWebhookEnabled;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableSentimentAnalysis = defaults.enableSentimentAnalysis;
    	      this.injectedParameters = defaults.injectedParameters;
    	      this.input = defaults.input;
    	      this.isWebhookEnabled = defaults.isWebhookEnabled;
        }

        public Builder enableSentimentAnalysis(Boolean enableSentimentAnalysis) {
            this.enableSentimentAnalysis = Objects.requireNonNull(enableSentimentAnalysis);
            return this;
        }

        public Builder injectedParameters(Map<String,String> injectedParameters) {
            this.injectedParameters = Objects.requireNonNull(injectedParameters);
            return this;
        }

        public Builder input(GoogleCloudDialogflowCxV3QueryInputResponse input) {
            this.input = Objects.requireNonNull(input);
            return this;
        }

        public Builder isWebhookEnabled(Boolean isWebhookEnabled) {
            this.isWebhookEnabled = Objects.requireNonNull(isWebhookEnabled);
            return this;
        }
        public GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse build() {
            return new GoogleCloudDialogflowCxV3ConversationTurnUserInputResponse(enableSentimentAnalysis, injectedParameters, input, isWebhookEnabled);
        }
    }
}
