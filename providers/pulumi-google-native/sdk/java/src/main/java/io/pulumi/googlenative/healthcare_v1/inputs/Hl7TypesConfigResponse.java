// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.healthcare_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.healthcare_v1.inputs.TypeResponse;
import io.pulumi.googlenative.healthcare_v1.inputs.VersionSourceResponse;
import java.util.List;
import java.util.Objects;


/**
 * Root config for HL7v2 datatype definitions for a specific HL7v2 version.
 * 
 */
public final class Hl7TypesConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final Hl7TypesConfigResponse Empty = new Hl7TypesConfigResponse();

    /**
     * The HL7v2 type definitions.
     * 
     */
    @InputImport(name="type", required=true)
    private final List<TypeResponse> type;

    public List<TypeResponse> getType() {
        return this.type;
    }

    /**
     * The version selectors that this config applies to. A message must match ALL version sources to apply.
     * 
     */
    @InputImport(name="version", required=true)
    private final List<VersionSourceResponse> version;

    public List<VersionSourceResponse> getVersion() {
        return this.version;
    }

    public Hl7TypesConfigResponse(
        List<TypeResponse> type,
        List<VersionSourceResponse> version) {
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
        this.version = Objects.requireNonNull(version, "expected parameter 'version' to be non-null");
    }

    private Hl7TypesConfigResponse() {
        this.type = List.of();
        this.version = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Hl7TypesConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<TypeResponse> type;
        private List<VersionSourceResponse> version;

        public Builder() {
    	      // Empty
        }

        public Builder(Hl7TypesConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        public Builder setType(List<TypeResponse> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVersion(List<VersionSourceResponse> version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public Hl7TypesConfigResponse build() {
            return new Hl7TypesConfigResponse(type, version);
        }
    }
}
