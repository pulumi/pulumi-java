// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.logging_v2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.util.Objects;

@OutputCustomType
public final class BigQueryOptionsResponse {
    private final Boolean usePartitionedTables;
    private final Boolean usesTimestampColumnPartitioning;

    @OutputCustomType.Constructor({"usePartitionedTables","usesTimestampColumnPartitioning"})
    private BigQueryOptionsResponse(
        Boolean usePartitionedTables,
        Boolean usesTimestampColumnPartitioning) {
        this.usePartitionedTables = Objects.requireNonNull(usePartitionedTables);
        this.usesTimestampColumnPartitioning = Objects.requireNonNull(usesTimestampColumnPartitioning);
    }

    public Boolean getUsePartitionedTables() {
        return this.usePartitionedTables;
    }
    public Boolean getUsesTimestampColumnPartitioning() {
        return this.usesTimestampColumnPartitioning;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BigQueryOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean usePartitionedTables;
        private Boolean usesTimestampColumnPartitioning;

        public Builder() {
    	      // Empty
        }

        public Builder(BigQueryOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.usePartitionedTables = defaults.usePartitionedTables;
    	      this.usesTimestampColumnPartitioning = defaults.usesTimestampColumnPartitioning;
        }

        public Builder setUsePartitionedTables(Boolean usePartitionedTables) {
            this.usePartitionedTables = Objects.requireNonNull(usePartitionedTables);
            return this;
        }

        public Builder setUsesTimestampColumnPartitioning(Boolean usesTimestampColumnPartitioning) {
            this.usesTimestampColumnPartitioning = Objects.requireNonNull(usesTimestampColumnPartitioning);
            return this;
        }

        public BigQueryOptionsResponse build() {
            return new BigQueryOptionsResponse(usePartitionedTables, usesTimestampColumnPartitioning);
        }
    }
}
