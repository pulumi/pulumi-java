// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.recaptchaenterprise_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.recaptchaenterprise_v1.enums.GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge;
import java.lang.Double;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Options for user acceptance testing.
 * 
 */
public final class GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs Empty = new GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs();

    /**
     * For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
     * 
     */
    @InputImport(name="testingChallenge")
    private final @Nullable Input<GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge> testingChallenge;

    public Input<GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge> getTestingChallenge() {
        return this.testingChallenge == null ? Input.empty() : this.testingChallenge;
    }

    /**
     * All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
     * 
     */
    @InputImport(name="testingScore")
    private final @Nullable Input<Double> testingScore;

    public Input<Double> getTestingScore() {
        return this.testingScore == null ? Input.empty() : this.testingScore;
    }

    public GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs(
        @Nullable Input<GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge> testingChallenge,
        @Nullable Input<Double> testingScore) {
        this.testingChallenge = testingChallenge;
        this.testingScore = testingScore;
    }

    private GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs() {
        this.testingChallenge = Input.empty();
        this.testingScore = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge> testingChallenge;
        private @Nullable Input<Double> testingScore;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.testingChallenge = defaults.testingChallenge;
    	      this.testingScore = defaults.testingScore;
        }

        public Builder setTestingChallenge(@Nullable Input<GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge> testingChallenge) {
            this.testingChallenge = testingChallenge;
            return this;
        }

        public Builder setTestingChallenge(@Nullable GoogleCloudRecaptchaenterpriseV1TestingOptionsTestingChallenge testingChallenge) {
            this.testingChallenge = Input.ofNullable(testingChallenge);
            return this;
        }

        public Builder setTestingScore(@Nullable Input<Double> testingScore) {
            this.testingScore = testingScore;
            return this;
        }

        public Builder setTestingScore(@Nullable Double testingScore) {
            this.testingScore = Input.ofNullable(testingScore);
            return this;
        }

        public GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs build() {
            return new GoogleCloudRecaptchaenterpriseV1TestingOptionsArgs(testingChallenge, testingScore);
        }
    }
}
