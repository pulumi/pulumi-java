// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.bigquery_v2.inputs.DatasetAccessItemArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.DatasetReferenceArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.DatasetTagsItemArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.EncryptionConfigurationArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatasetArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasetArgs Empty = new DatasetArgs();

    @InputImport(name="access")
    private final @Nullable Input<List<DatasetAccessItemArgs>> access;

    public Input<List<DatasetAccessItemArgs>> getAccess() {
        return this.access == null ? Input.empty() : this.access;
    }

    @InputImport(name="datasetReference")
    private final @Nullable Input<DatasetReferenceArgs> datasetReference;

    public Input<DatasetReferenceArgs> getDatasetReference() {
        return this.datasetReference == null ? Input.empty() : this.datasetReference;
    }

    @InputImport(name="defaultEncryptionConfiguration")
    private final @Nullable Input<EncryptionConfigurationArgs> defaultEncryptionConfiguration;

    public Input<EncryptionConfigurationArgs> getDefaultEncryptionConfiguration() {
        return this.defaultEncryptionConfiguration == null ? Input.empty() : this.defaultEncryptionConfiguration;
    }

    @InputImport(name="defaultPartitionExpirationMs")
    private final @Nullable Input<String> defaultPartitionExpirationMs;

    public Input<String> getDefaultPartitionExpirationMs() {
        return this.defaultPartitionExpirationMs == null ? Input.empty() : this.defaultPartitionExpirationMs;
    }

    @InputImport(name="defaultTableExpirationMs")
    private final @Nullable Input<String> defaultTableExpirationMs;

    public Input<String> getDefaultTableExpirationMs() {
        return this.defaultTableExpirationMs == null ? Input.empty() : this.defaultTableExpirationMs;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="friendlyName")
    private final @Nullable Input<String> friendlyName;

    public Input<String> getFriendlyName() {
        return this.friendlyName == null ? Input.empty() : this.friendlyName;
    }

    @InputImport(name="isCaseInsensitive")
    private final @Nullable Input<Boolean> isCaseInsensitive;

    public Input<Boolean> getIsCaseInsensitive() {
        return this.isCaseInsensitive == null ? Input.empty() : this.isCaseInsensitive;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<DatasetTagsItemArgs>> tags;

    public Input<List<DatasetTagsItemArgs>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    public DatasetArgs(
        @Nullable Input<List<DatasetAccessItemArgs>> access,
        @Nullable Input<DatasetReferenceArgs> datasetReference,
        @Nullable Input<EncryptionConfigurationArgs> defaultEncryptionConfiguration,
        @Nullable Input<String> defaultPartitionExpirationMs,
        @Nullable Input<String> defaultTableExpirationMs,
        @Nullable Input<String> description,
        @Nullable Input<String> friendlyName,
        @Nullable Input<Boolean> isCaseInsensitive,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> location,
        @Nullable Input<String> project,
        @Nullable Input<List<DatasetTagsItemArgs>> tags) {
        this.access = access;
        this.datasetReference = datasetReference;
        this.defaultEncryptionConfiguration = defaultEncryptionConfiguration;
        this.defaultPartitionExpirationMs = defaultPartitionExpirationMs;
        this.defaultTableExpirationMs = defaultTableExpirationMs;
        this.description = description;
        this.friendlyName = friendlyName;
        this.isCaseInsensitive = isCaseInsensitive;
        this.labels = labels;
        this.location = location;
        this.project = project;
        this.tags = tags;
    }

    private DatasetArgs() {
        this.access = Input.empty();
        this.datasetReference = Input.empty();
        this.defaultEncryptionConfiguration = Input.empty();
        this.defaultPartitionExpirationMs = Input.empty();
        this.defaultTableExpirationMs = Input.empty();
        this.description = Input.empty();
        this.friendlyName = Input.empty();
        this.isCaseInsensitive = Input.empty();
        this.labels = Input.empty();
        this.location = Input.empty();
        this.project = Input.empty();
        this.tags = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<DatasetAccessItemArgs>> access;
        private @Nullable Input<DatasetReferenceArgs> datasetReference;
        private @Nullable Input<EncryptionConfigurationArgs> defaultEncryptionConfiguration;
        private @Nullable Input<String> defaultPartitionExpirationMs;
        private @Nullable Input<String> defaultTableExpirationMs;
        private @Nullable Input<String> description;
        private @Nullable Input<String> friendlyName;
        private @Nullable Input<Boolean> isCaseInsensitive;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> location;
        private @Nullable Input<String> project;
        private @Nullable Input<List<DatasetTagsItemArgs>> tags;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.access = defaults.access;
    	      this.datasetReference = defaults.datasetReference;
    	      this.defaultEncryptionConfiguration = defaults.defaultEncryptionConfiguration;
    	      this.defaultPartitionExpirationMs = defaults.defaultPartitionExpirationMs;
    	      this.defaultTableExpirationMs = defaults.defaultTableExpirationMs;
    	      this.description = defaults.description;
    	      this.friendlyName = defaults.friendlyName;
    	      this.isCaseInsensitive = defaults.isCaseInsensitive;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.project = defaults.project;
    	      this.tags = defaults.tags;
        }

        public Builder setAccess(@Nullable Input<List<DatasetAccessItemArgs>> access) {
            this.access = access;
            return this;
        }

        public Builder setAccess(@Nullable List<DatasetAccessItemArgs> access) {
            this.access = Input.ofNullable(access);
            return this;
        }

        public Builder setDatasetReference(@Nullable Input<DatasetReferenceArgs> datasetReference) {
            this.datasetReference = datasetReference;
            return this;
        }

        public Builder setDatasetReference(@Nullable DatasetReferenceArgs datasetReference) {
            this.datasetReference = Input.ofNullable(datasetReference);
            return this;
        }

        public Builder setDefaultEncryptionConfiguration(@Nullable Input<EncryptionConfigurationArgs> defaultEncryptionConfiguration) {
            this.defaultEncryptionConfiguration = defaultEncryptionConfiguration;
            return this;
        }

        public Builder setDefaultEncryptionConfiguration(@Nullable EncryptionConfigurationArgs defaultEncryptionConfiguration) {
            this.defaultEncryptionConfiguration = Input.ofNullable(defaultEncryptionConfiguration);
            return this;
        }

        public Builder setDefaultPartitionExpirationMs(@Nullable Input<String> defaultPartitionExpirationMs) {
            this.defaultPartitionExpirationMs = defaultPartitionExpirationMs;
            return this;
        }

        public Builder setDefaultPartitionExpirationMs(@Nullable String defaultPartitionExpirationMs) {
            this.defaultPartitionExpirationMs = Input.ofNullable(defaultPartitionExpirationMs);
            return this;
        }

        public Builder setDefaultTableExpirationMs(@Nullable Input<String> defaultTableExpirationMs) {
            this.defaultTableExpirationMs = defaultTableExpirationMs;
            return this;
        }

        public Builder setDefaultTableExpirationMs(@Nullable String defaultTableExpirationMs) {
            this.defaultTableExpirationMs = Input.ofNullable(defaultTableExpirationMs);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setFriendlyName(@Nullable Input<String> friendlyName) {
            this.friendlyName = friendlyName;
            return this;
        }

        public Builder setFriendlyName(@Nullable String friendlyName) {
            this.friendlyName = Input.ofNullable(friendlyName);
            return this;
        }

        public Builder setIsCaseInsensitive(@Nullable Input<Boolean> isCaseInsensitive) {
            this.isCaseInsensitive = isCaseInsensitive;
            return this;
        }

        public Builder setIsCaseInsensitive(@Nullable Boolean isCaseInsensitive) {
            this.isCaseInsensitive = Input.ofNullable(isCaseInsensitive);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setTags(@Nullable Input<List<DatasetTagsItemArgs>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<DatasetTagsItemArgs> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public DatasetArgs build() {
            return new DatasetArgs(access, datasetReference, defaultEncryptionConfiguration, defaultPartitionExpirationMs, defaultTableExpirationMs, description, friendlyName, isCaseInsensitive, labels, location, project, tags);
        }
    }
}
