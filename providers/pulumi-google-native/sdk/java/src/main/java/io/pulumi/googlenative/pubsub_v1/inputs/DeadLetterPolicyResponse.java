// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.pubsub_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class DeadLetterPolicyResponse extends io.pulumi.resources.InvokeArgs {

    public static final DeadLetterPolicyResponse Empty = new DeadLetterPolicyResponse();

    @InputImport(name="deadLetterTopic", required=true)
    private final String deadLetterTopic;

    public String getDeadLetterTopic() {
        return this.deadLetterTopic;
    }

    @InputImport(name="maxDeliveryAttempts", required=true)
    private final Integer maxDeliveryAttempts;

    public Integer getMaxDeliveryAttempts() {
        return this.maxDeliveryAttempts;
    }

    public DeadLetterPolicyResponse(
        String deadLetterTopic,
        Integer maxDeliveryAttempts) {
        this.deadLetterTopic = Objects.requireNonNull(deadLetterTopic, "expected parameter 'deadLetterTopic' to be non-null");
        this.maxDeliveryAttempts = Objects.requireNonNull(maxDeliveryAttempts, "expected parameter 'maxDeliveryAttempts' to be non-null");
    }

    private DeadLetterPolicyResponse() {
        this.deadLetterTopic = null;
        this.maxDeliveryAttempts = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeadLetterPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String deadLetterTopic;
        private Integer maxDeliveryAttempts;

        public Builder() {
    	      // Empty
        }

        public Builder(DeadLetterPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deadLetterTopic = defaults.deadLetterTopic;
    	      this.maxDeliveryAttempts = defaults.maxDeliveryAttempts;
        }

        public Builder setDeadLetterTopic(String deadLetterTopic) {
            this.deadLetterTopic = Objects.requireNonNull(deadLetterTopic);
            return this;
        }

        public Builder setMaxDeliveryAttempts(Integer maxDeliveryAttempts) {
            this.maxDeliveryAttempts = Objects.requireNonNull(maxDeliveryAttempts);
            return this;
        }

        public DeadLetterPolicyResponse build() {
            return new DeadLetterPolicyResponse(deadLetterTopic, maxDeliveryAttempts);
        }
    }
}
