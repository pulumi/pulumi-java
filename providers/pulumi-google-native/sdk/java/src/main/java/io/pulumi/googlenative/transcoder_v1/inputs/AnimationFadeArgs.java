// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.transcoder_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.transcoder_v1.enums.AnimationFadeFadeType;
import io.pulumi.googlenative.transcoder_v1.inputs.NormalizedCoordinateArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Display overlay object with fade animation.
 * 
 */
public final class AnimationFadeArgs extends io.pulumi.resources.ResourceArgs {

    public static final AnimationFadeArgs Empty = new AnimationFadeArgs();

    /**
     * The time to end the fade animation, in seconds. Default: `start_time_offset` + 1s
     * 
     */
    @Import(name="endTimeOffset")
      private final @Nullable Output<String> endTimeOffset;

    public Output<String> getEndTimeOffset() {
        return this.endTimeOffset == null ? Output.empty() : this.endTimeOffset;
    }

    /**
     * Type of fade animation: `FADE_IN` or `FADE_OUT`.
     * 
     */
    @Import(name="fadeType", required=true)
      private final Output<AnimationFadeFadeType> fadeType;

    public Output<AnimationFadeFadeType> getFadeType() {
        return this.fadeType;
    }

    /**
     * The time to start the fade animation, in seconds. Default: 0
     * 
     */
    @Import(name="startTimeOffset")
      private final @Nullable Output<String> startTimeOffset;

    public Output<String> getStartTimeOffset() {
        return this.startTimeOffset == null ? Output.empty() : this.startTimeOffset;
    }

    /**
     * Normalized coordinates based on output video resolution. Valid values: `0.0`â€“`1.0`. `xy` is the upper-left coordinate of the overlay object. For example, use the x and y coordinates {0,0} to position the top-left corner of the overlay animation in the top-left corner of the output video.
     * 
     */
    @Import(name="xy")
      private final @Nullable Output<NormalizedCoordinateArgs> xy;

    public Output<NormalizedCoordinateArgs> getXy() {
        return this.xy == null ? Output.empty() : this.xy;
    }

    public AnimationFadeArgs(
        @Nullable Output<String> endTimeOffset,
        Output<AnimationFadeFadeType> fadeType,
        @Nullable Output<String> startTimeOffset,
        @Nullable Output<NormalizedCoordinateArgs> xy) {
        this.endTimeOffset = endTimeOffset;
        this.fadeType = Objects.requireNonNull(fadeType, "expected parameter 'fadeType' to be non-null");
        this.startTimeOffset = startTimeOffset;
        this.xy = xy;
    }

    private AnimationFadeArgs() {
        this.endTimeOffset = Output.empty();
        this.fadeType = Output.empty();
        this.startTimeOffset = Output.empty();
        this.xy = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AnimationFadeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> endTimeOffset;
        private Output<AnimationFadeFadeType> fadeType;
        private @Nullable Output<String> startTimeOffset;
        private @Nullable Output<NormalizedCoordinateArgs> xy;

        public Builder() {
    	      // Empty
        }

        public Builder(AnimationFadeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTimeOffset = defaults.endTimeOffset;
    	      this.fadeType = defaults.fadeType;
    	      this.startTimeOffset = defaults.startTimeOffset;
    	      this.xy = defaults.xy;
        }

        public Builder endTimeOffset(@Nullable Output<String> endTimeOffset) {
            this.endTimeOffset = endTimeOffset;
            return this;
        }

        public Builder endTimeOffset(@Nullable String endTimeOffset) {
            this.endTimeOffset = Output.ofNullable(endTimeOffset);
            return this;
        }

        public Builder fadeType(Output<AnimationFadeFadeType> fadeType) {
            this.fadeType = Objects.requireNonNull(fadeType);
            return this;
        }

        public Builder fadeType(AnimationFadeFadeType fadeType) {
            this.fadeType = Output.of(Objects.requireNonNull(fadeType));
            return this;
        }

        public Builder startTimeOffset(@Nullable Output<String> startTimeOffset) {
            this.startTimeOffset = startTimeOffset;
            return this;
        }

        public Builder startTimeOffset(@Nullable String startTimeOffset) {
            this.startTimeOffset = Output.ofNullable(startTimeOffset);
            return this;
        }

        public Builder xy(@Nullable Output<NormalizedCoordinateArgs> xy) {
            this.xy = xy;
            return this;
        }

        public Builder xy(@Nullable NormalizedCoordinateArgs xy) {
            this.xy = Output.ofNullable(xy);
            return this;
        }
        public AnimationFadeArgs build() {
            return new AnimationFadeArgs(endTimeOffset, fadeType, startTimeOffset, xy);
        }
    }
}
