// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.compute_beta.inputs.HttpFilterConfigArgs;
import io.pulumi.googlenative.compute_beta.inputs.HttpHeaderActionArgs;
import io.pulumi.googlenative.compute_beta.inputs.HttpRedirectActionArgs;
import io.pulumi.googlenative.compute_beta.inputs.HttpRouteActionArgs;
import io.pulumi.googlenative.compute_beta.inputs.HttpRouteRuleMatchArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HttpRouteRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final HttpRouteRuleArgs Empty = new HttpRouteRuleArgs();

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="headerAction")
    private final @Nullable Input<HttpHeaderActionArgs> headerAction;

    public Input<HttpHeaderActionArgs> getHeaderAction() {
        return this.headerAction == null ? Input.empty() : this.headerAction;
    }

    @InputImport(name="httpFilterConfigs")
    private final @Nullable Input<List<HttpFilterConfigArgs>> httpFilterConfigs;

    public Input<List<HttpFilterConfigArgs>> getHttpFilterConfigs() {
        return this.httpFilterConfigs == null ? Input.empty() : this.httpFilterConfigs;
    }

    @InputImport(name="httpFilterMetadata")
    private final @Nullable Input<List<HttpFilterConfigArgs>> httpFilterMetadata;

    public Input<List<HttpFilterConfigArgs>> getHttpFilterMetadata() {
        return this.httpFilterMetadata == null ? Input.empty() : this.httpFilterMetadata;
    }

    @InputImport(name="matchRules")
    private final @Nullable Input<List<HttpRouteRuleMatchArgs>> matchRules;

    public Input<List<HttpRouteRuleMatchArgs>> getMatchRules() {
        return this.matchRules == null ? Input.empty() : this.matchRules;
    }

    @InputImport(name="priority")
    private final @Nullable Input<Integer> priority;

    public Input<Integer> getPriority() {
        return this.priority == null ? Input.empty() : this.priority;
    }

    @InputImport(name="routeAction")
    private final @Nullable Input<HttpRouteActionArgs> routeAction;

    public Input<HttpRouteActionArgs> getRouteAction() {
        return this.routeAction == null ? Input.empty() : this.routeAction;
    }

    @InputImport(name="service")
    private final @Nullable Input<String> service;

    public Input<String> getService() {
        return this.service == null ? Input.empty() : this.service;
    }

    @InputImport(name="urlRedirect")
    private final @Nullable Input<HttpRedirectActionArgs> urlRedirect;

    public Input<HttpRedirectActionArgs> getUrlRedirect() {
        return this.urlRedirect == null ? Input.empty() : this.urlRedirect;
    }

    public HttpRouteRuleArgs(
        @Nullable Input<String> description,
        @Nullable Input<HttpHeaderActionArgs> headerAction,
        @Nullable Input<List<HttpFilterConfigArgs>> httpFilterConfigs,
        @Nullable Input<List<HttpFilterConfigArgs>> httpFilterMetadata,
        @Nullable Input<List<HttpRouteRuleMatchArgs>> matchRules,
        @Nullable Input<Integer> priority,
        @Nullable Input<HttpRouteActionArgs> routeAction,
        @Nullable Input<String> service,
        @Nullable Input<HttpRedirectActionArgs> urlRedirect) {
        this.description = description;
        this.headerAction = headerAction;
        this.httpFilterConfigs = httpFilterConfigs;
        this.httpFilterMetadata = httpFilterMetadata;
        this.matchRules = matchRules;
        this.priority = priority;
        this.routeAction = routeAction;
        this.service = service;
        this.urlRedirect = urlRedirect;
    }

    private HttpRouteRuleArgs() {
        this.description = Input.empty();
        this.headerAction = Input.empty();
        this.httpFilterConfigs = Input.empty();
        this.httpFilterMetadata = Input.empty();
        this.matchRules = Input.empty();
        this.priority = Input.empty();
        this.routeAction = Input.empty();
        this.service = Input.empty();
        this.urlRedirect = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpRouteRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<HttpHeaderActionArgs> headerAction;
        private @Nullable Input<List<HttpFilterConfigArgs>> httpFilterConfigs;
        private @Nullable Input<List<HttpFilterConfigArgs>> httpFilterMetadata;
        private @Nullable Input<List<HttpRouteRuleMatchArgs>> matchRules;
        private @Nullable Input<Integer> priority;
        private @Nullable Input<HttpRouteActionArgs> routeAction;
        private @Nullable Input<String> service;
        private @Nullable Input<HttpRedirectActionArgs> urlRedirect;

        public Builder() {
    	      // Empty
        }

        public Builder(HttpRouteRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.headerAction = defaults.headerAction;
    	      this.httpFilterConfigs = defaults.httpFilterConfigs;
    	      this.httpFilterMetadata = defaults.httpFilterMetadata;
    	      this.matchRules = defaults.matchRules;
    	      this.priority = defaults.priority;
    	      this.routeAction = defaults.routeAction;
    	      this.service = defaults.service;
    	      this.urlRedirect = defaults.urlRedirect;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setHeaderAction(@Nullable Input<HttpHeaderActionArgs> headerAction) {
            this.headerAction = headerAction;
            return this;
        }

        public Builder setHeaderAction(@Nullable HttpHeaderActionArgs headerAction) {
            this.headerAction = Input.ofNullable(headerAction);
            return this;
        }

        public Builder setHttpFilterConfigs(@Nullable Input<List<HttpFilterConfigArgs>> httpFilterConfigs) {
            this.httpFilterConfigs = httpFilterConfigs;
            return this;
        }

        public Builder setHttpFilterConfigs(@Nullable List<HttpFilterConfigArgs> httpFilterConfigs) {
            this.httpFilterConfigs = Input.ofNullable(httpFilterConfigs);
            return this;
        }

        public Builder setHttpFilterMetadata(@Nullable Input<List<HttpFilterConfigArgs>> httpFilterMetadata) {
            this.httpFilterMetadata = httpFilterMetadata;
            return this;
        }

        public Builder setHttpFilterMetadata(@Nullable List<HttpFilterConfigArgs> httpFilterMetadata) {
            this.httpFilterMetadata = Input.ofNullable(httpFilterMetadata);
            return this;
        }

        public Builder setMatchRules(@Nullable Input<List<HttpRouteRuleMatchArgs>> matchRules) {
            this.matchRules = matchRules;
            return this;
        }

        public Builder setMatchRules(@Nullable List<HttpRouteRuleMatchArgs> matchRules) {
            this.matchRules = Input.ofNullable(matchRules);
            return this;
        }

        public Builder setPriority(@Nullable Input<Integer> priority) {
            this.priority = priority;
            return this;
        }

        public Builder setPriority(@Nullable Integer priority) {
            this.priority = Input.ofNullable(priority);
            return this;
        }

        public Builder setRouteAction(@Nullable Input<HttpRouteActionArgs> routeAction) {
            this.routeAction = routeAction;
            return this;
        }

        public Builder setRouteAction(@Nullable HttpRouteActionArgs routeAction) {
            this.routeAction = Input.ofNullable(routeAction);
            return this;
        }

        public Builder setService(@Nullable Input<String> service) {
            this.service = service;
            return this;
        }

        public Builder setService(@Nullable String service) {
            this.service = Input.ofNullable(service);
            return this;
        }

        public Builder setUrlRedirect(@Nullable Input<HttpRedirectActionArgs> urlRedirect) {
            this.urlRedirect = urlRedirect;
            return this;
        }

        public Builder setUrlRedirect(@Nullable HttpRedirectActionArgs urlRedirect) {
            this.urlRedirect = Input.ofNullable(urlRedirect);
            return this;
        }

        public HttpRouteRuleArgs build() {
            return new HttpRouteRuleArgs(description, headerAction, httpFilterConfigs, httpFilterMetadata, matchRules, priority, routeAction, service, urlRedirect);
        }
    }
}
