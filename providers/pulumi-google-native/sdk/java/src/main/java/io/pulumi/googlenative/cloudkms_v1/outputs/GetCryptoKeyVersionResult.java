// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudkms_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.cloudkms_v1.outputs.ExternalProtectionLevelOptionsResponse;
import io.pulumi.googlenative.cloudkms_v1.outputs.KeyOperationAttestationResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetCryptoKeyVersionResult {
    private final String algorithm;
    private final KeyOperationAttestationResponse attestation;
    private final String createTime;
    private final String destroyEventTime;
    private final String destroyTime;
    private final ExternalProtectionLevelOptionsResponse externalProtectionLevelOptions;
    private final String generateTime;
    private final String importFailureReason;
    private final String importJob;
    private final String importTime;
    private final String name;
    private final String protectionLevel;
    private final Boolean reimportEligible;
    private final String state;

    @OutputCustomType.Constructor({"algorithm","attestation","createTime","destroyEventTime","destroyTime","externalProtectionLevelOptions","generateTime","importFailureReason","importJob","importTime","name","protectionLevel","reimportEligible","state"})
    private GetCryptoKeyVersionResult(
        String algorithm,
        KeyOperationAttestationResponse attestation,
        String createTime,
        String destroyEventTime,
        String destroyTime,
        ExternalProtectionLevelOptionsResponse externalProtectionLevelOptions,
        String generateTime,
        String importFailureReason,
        String importJob,
        String importTime,
        String name,
        String protectionLevel,
        Boolean reimportEligible,
        String state) {
        this.algorithm = Objects.requireNonNull(algorithm);
        this.attestation = Objects.requireNonNull(attestation);
        this.createTime = Objects.requireNonNull(createTime);
        this.destroyEventTime = Objects.requireNonNull(destroyEventTime);
        this.destroyTime = Objects.requireNonNull(destroyTime);
        this.externalProtectionLevelOptions = Objects.requireNonNull(externalProtectionLevelOptions);
        this.generateTime = Objects.requireNonNull(generateTime);
        this.importFailureReason = Objects.requireNonNull(importFailureReason);
        this.importJob = Objects.requireNonNull(importJob);
        this.importTime = Objects.requireNonNull(importTime);
        this.name = Objects.requireNonNull(name);
        this.protectionLevel = Objects.requireNonNull(protectionLevel);
        this.reimportEligible = Objects.requireNonNull(reimportEligible);
        this.state = Objects.requireNonNull(state);
    }

    public String getAlgorithm() {
        return this.algorithm;
    }
    public KeyOperationAttestationResponse getAttestation() {
        return this.attestation;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public String getDestroyEventTime() {
        return this.destroyEventTime;
    }
    public String getDestroyTime() {
        return this.destroyTime;
    }
    public ExternalProtectionLevelOptionsResponse getExternalProtectionLevelOptions() {
        return this.externalProtectionLevelOptions;
    }
    public String getGenerateTime() {
        return this.generateTime;
    }
    public String getImportFailureReason() {
        return this.importFailureReason;
    }
    public String getImportJob() {
        return this.importJob;
    }
    public String getImportTime() {
        return this.importTime;
    }
    public String getName() {
        return this.name;
    }
    public String getProtectionLevel() {
        return this.protectionLevel;
    }
    public Boolean getReimportEligible() {
        return this.reimportEligible;
    }
    public String getState() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCryptoKeyVersionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String algorithm;
        private KeyOperationAttestationResponse attestation;
        private String createTime;
        private String destroyEventTime;
        private String destroyTime;
        private ExternalProtectionLevelOptionsResponse externalProtectionLevelOptions;
        private String generateTime;
        private String importFailureReason;
        private String importJob;
        private String importTime;
        private String name;
        private String protectionLevel;
        private Boolean reimportEligible;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCryptoKeyVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.attestation = defaults.attestation;
    	      this.createTime = defaults.createTime;
    	      this.destroyEventTime = defaults.destroyEventTime;
    	      this.destroyTime = defaults.destroyTime;
    	      this.externalProtectionLevelOptions = defaults.externalProtectionLevelOptions;
    	      this.generateTime = defaults.generateTime;
    	      this.importFailureReason = defaults.importFailureReason;
    	      this.importJob = defaults.importJob;
    	      this.importTime = defaults.importTime;
    	      this.name = defaults.name;
    	      this.protectionLevel = defaults.protectionLevel;
    	      this.reimportEligible = defaults.reimportEligible;
    	      this.state = defaults.state;
        }

        public Builder setAlgorithm(String algorithm) {
            this.algorithm = Objects.requireNonNull(algorithm);
            return this;
        }

        public Builder setAttestation(KeyOperationAttestationResponse attestation) {
            this.attestation = Objects.requireNonNull(attestation);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDestroyEventTime(String destroyEventTime) {
            this.destroyEventTime = Objects.requireNonNull(destroyEventTime);
            return this;
        }

        public Builder setDestroyTime(String destroyTime) {
            this.destroyTime = Objects.requireNonNull(destroyTime);
            return this;
        }

        public Builder setExternalProtectionLevelOptions(ExternalProtectionLevelOptionsResponse externalProtectionLevelOptions) {
            this.externalProtectionLevelOptions = Objects.requireNonNull(externalProtectionLevelOptions);
            return this;
        }

        public Builder setGenerateTime(String generateTime) {
            this.generateTime = Objects.requireNonNull(generateTime);
            return this;
        }

        public Builder setImportFailureReason(String importFailureReason) {
            this.importFailureReason = Objects.requireNonNull(importFailureReason);
            return this;
        }

        public Builder setImportJob(String importJob) {
            this.importJob = Objects.requireNonNull(importJob);
            return this;
        }

        public Builder setImportTime(String importTime) {
            this.importTime = Objects.requireNonNull(importTime);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setProtectionLevel(String protectionLevel) {
            this.protectionLevel = Objects.requireNonNull(protectionLevel);
            return this;
        }

        public Builder setReimportEligible(Boolean reimportEligible) {
            this.reimportEligible = Objects.requireNonNull(reimportEligible);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public GetCryptoKeyVersionResult build() {
            return new GetCryptoKeyVersionResult(algorithm, attestation, createTime, destroyEventTime, destroyTime, externalProtectionLevelOptions, generateTime, importFailureReason, importJob, importTime, name, protectionLevel, reimportEligible, state);
        }
    }
}
