// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudtasks_v2.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.cloudtasks_v2.inputs.AppEngineRoutingResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class AppEngineHttpRequestResponse extends io.pulumi.resources.InvokeArgs {

    public static final AppEngineHttpRequestResponse Empty = new AppEngineHttpRequestResponse();

    @InputImport(name="appEngineRouting", required=true)
    private final AppEngineRoutingResponse appEngineRouting;

    public AppEngineRoutingResponse getAppEngineRouting() {
        return this.appEngineRouting;
    }

    @InputImport(name="body", required=true)
    private final String body;

    public String getBody() {
        return this.body;
    }

    @InputImport(name="headers", required=true)
    private final Map<String,String> headers;

    public Map<String,String> getHeaders() {
        return this.headers;
    }

    @InputImport(name="httpMethod", required=true)
    private final String httpMethod;

    public String getHttpMethod() {
        return this.httpMethod;
    }

    @InputImport(name="relativeUri", required=true)
    private final String relativeUri;

    public String getRelativeUri() {
        return this.relativeUri;
    }

    public AppEngineHttpRequestResponse(
        AppEngineRoutingResponse appEngineRouting,
        String body,
        Map<String,String> headers,
        String httpMethod,
        String relativeUri) {
        this.appEngineRouting = Objects.requireNonNull(appEngineRouting, "expected parameter 'appEngineRouting' to be non-null");
        this.body = Objects.requireNonNull(body, "expected parameter 'body' to be non-null");
        this.headers = Objects.requireNonNull(headers, "expected parameter 'headers' to be non-null");
        this.httpMethod = Objects.requireNonNull(httpMethod, "expected parameter 'httpMethod' to be non-null");
        this.relativeUri = Objects.requireNonNull(relativeUri, "expected parameter 'relativeUri' to be non-null");
    }

    private AppEngineHttpRequestResponse() {
        this.appEngineRouting = null;
        this.body = null;
        this.headers = Map.of();
        this.httpMethod = null;
        this.relativeUri = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppEngineHttpRequestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppEngineRoutingResponse appEngineRouting;
        private String body;
        private Map<String,String> headers;
        private String httpMethod;
        private String relativeUri;

        public Builder() {
    	      // Empty
        }

        public Builder(AppEngineHttpRequestResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appEngineRouting = defaults.appEngineRouting;
    	      this.body = defaults.body;
    	      this.headers = defaults.headers;
    	      this.httpMethod = defaults.httpMethod;
    	      this.relativeUri = defaults.relativeUri;
        }

        public Builder setAppEngineRouting(AppEngineRoutingResponse appEngineRouting) {
            this.appEngineRouting = Objects.requireNonNull(appEngineRouting);
            return this;
        }

        public Builder setBody(String body) {
            this.body = Objects.requireNonNull(body);
            return this;
        }

        public Builder setHeaders(Map<String,String> headers) {
            this.headers = Objects.requireNonNull(headers);
            return this;
        }

        public Builder setHttpMethod(String httpMethod) {
            this.httpMethod = Objects.requireNonNull(httpMethod);
            return this;
        }

        public Builder setRelativeUri(String relativeUri) {
            this.relativeUri = Objects.requireNonNull(relativeUri);
            return this;
        }

        public AppEngineHttpRequestResponse build() {
            return new AppEngineHttpRequestResponse(appEngineRouting, body, headers, httpMethod, relativeUri);
        }
    }
}
