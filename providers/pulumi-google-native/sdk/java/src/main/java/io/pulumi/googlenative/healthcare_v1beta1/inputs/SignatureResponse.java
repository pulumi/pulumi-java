// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.healthcare_v1beta1.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.healthcare_v1beta1.inputs.ImageResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * User signature.
 * 
 */
public final class SignatureResponse extends io.pulumi.resources.InvokeArgs {

    public static final SignatureResponse Empty = new SignatureResponse();

    /**
     * Optional. An image of the user's signature.
     * 
     */
    @InputImport(name="image", required=true)
    private final ImageResponse image;

    public ImageResponse getImage() {
        return this.image;
    }

    /**
     * Optional. Metadata associated with the user's signature. For example, the user's name or the user's title.
     * 
     */
    @InputImport(name="metadata", required=true)
    private final Map<String,String> metadata;

    public Map<String,String> getMetadata() {
        return this.metadata;
    }

    /**
     * Optional. Timestamp of the signature.
     * 
     */
    @InputImport(name="signatureTime", required=true)
    private final String signatureTime;

    public String getSignatureTime() {
        return this.signatureTime;
    }

    /**
     * User's UUID provided by the client.
     * 
     */
    @InputImport(name="userId", required=true)
    private final String userId;

    public String getUserId() {
        return this.userId;
    }

    public SignatureResponse(
        ImageResponse image,
        Map<String,String> metadata,
        String signatureTime,
        String userId) {
        this.image = Objects.requireNonNull(image, "expected parameter 'image' to be non-null");
        this.metadata = Objects.requireNonNull(metadata, "expected parameter 'metadata' to be non-null");
        this.signatureTime = Objects.requireNonNull(signatureTime, "expected parameter 'signatureTime' to be non-null");
        this.userId = Objects.requireNonNull(userId, "expected parameter 'userId' to be non-null");
    }

    private SignatureResponse() {
        this.image = null;
        this.metadata = Map.of();
        this.signatureTime = null;
        this.userId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SignatureResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageResponse image;
        private Map<String,String> metadata;
        private String signatureTime;
        private String userId;

        public Builder() {
    	      // Empty
        }

        public Builder(SignatureResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.image = defaults.image;
    	      this.metadata = defaults.metadata;
    	      this.signatureTime = defaults.signatureTime;
    	      this.userId = defaults.userId;
        }

        public Builder setImage(ImageResponse image) {
            this.image = Objects.requireNonNull(image);
            return this;
        }

        public Builder setMetadata(Map<String,String> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }

        public Builder setSignatureTime(String signatureTime) {
            this.signatureTime = Objects.requireNonNull(signatureTime);
            return this;
        }

        public Builder setUserId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }

        public SignatureResponse build() {
            return new SignatureResponse(image, metadata, signatureTime, userId);
        }
    }
}
