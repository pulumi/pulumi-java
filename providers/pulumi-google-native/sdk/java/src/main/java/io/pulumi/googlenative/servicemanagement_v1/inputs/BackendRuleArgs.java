// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.servicemanagement_v1.enums.BackendRulePathTranslation;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A backend rule provides configuration for an individual API element.
 * 
 */
public final class BackendRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final BackendRuleArgs Empty = new BackendRuleArgs();

    /**
     * The address of the API backend. The scheme is used to determine the backend protocol and security. The following schemes are accepted: SCHEME PROTOCOL SECURITY http:// HTTP None https:// HTTP TLS grpc:// gRPC None grpcs:// gRPC TLS It is recommended to explicitly include a scheme. Leaving out the scheme may cause constrasting behaviors across platforms. If the port is unspecified, the default is: - 80 for schemes without TLS - 443 for schemes with TLS For HTTP backends, use protocol to specify the protocol version.
     * 
     */
    @Import(name="address")
      private final @Nullable Output<String> address;

    public Output<String> getAddress() {
        return this.address == null ? Output.empty() : this.address;
    }

    /**
     * The number of seconds to wait for a response from a request. The default varies based on the request protocol and deployment environment.
     * 
     */
    @Import(name="deadline")
      private final @Nullable Output<Double> deadline;

    public Output<Double> getDeadline() {
        return this.deadline == null ? Output.empty() : this.deadline;
    }

    /**
     * When disable_auth is true, a JWT ID token won't be generated and the original "Authorization" HTTP header will be preserved. If the header is used to carry the original token and is expected by the backend, this field must be set to true to preserve the header.
     * 
     */
    @Import(name="disableAuth")
      private final @Nullable Output<Boolean> disableAuth;

    public Output<Boolean> getDisableAuth() {
        return this.disableAuth == null ? Output.empty() : this.disableAuth;
    }

    /**
     * The JWT audience is used when generating a JWT ID token for the backend. This ID token will be added in the HTTP "authorization" header, and sent to the backend.
     * 
     */
    @Import(name="jwtAudience")
      private final @Nullable Output<String> jwtAudience;

    public Output<String> getJwtAudience() {
        return this.jwtAudience == null ? Output.empty() : this.jwtAudience;
    }

    /**
     * The number of seconds to wait for the completion of a long running operation. The default is no deadline.
     * 
     */
    @Import(name="operationDeadline")
      private final @Nullable Output<Double> operationDeadline;

    public Output<Double> getOperationDeadline() {
        return this.operationDeadline == null ? Output.empty() : this.operationDeadline;
    }

    @Import(name="pathTranslation")
      private final @Nullable Output<BackendRulePathTranslation> pathTranslation;

    public Output<BackendRulePathTranslation> getPathTranslation() {
        return this.pathTranslation == null ? Output.empty() : this.pathTranslation;
    }

    /**
     * The protocol used for sending a request to the backend. The supported values are "http/1.1" and "h2". The default value is inferred from the scheme in the address field: SCHEME PROTOCOL http:// http/1.1 https:// http/1.1 grpc:// h2 grpcs:// h2 For secure HTTP backends (https://) that support HTTP/2, set this field to "h2" for improved performance. Configuring this field to non-default values is only supported for secure HTTP backends. This field will be ignored for all other backends. See https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids for more details on the supported values.
     * 
     */
    @Import(name="protocol")
      private final @Nullable Output<String> protocol;

    public Output<String> getProtocol() {
        return this.protocol == null ? Output.empty() : this.protocol;
    }

    /**
     * Selects the methods to which this rule applies. Refer to selector for syntax details.
     * 
     */
    @Import(name="selector")
      private final @Nullable Output<String> selector;

    public Output<String> getSelector() {
        return this.selector == null ? Output.empty() : this.selector;
    }

    public BackendRuleArgs(
        @Nullable Output<String> address,
        @Nullable Output<Double> deadline,
        @Nullable Output<Boolean> disableAuth,
        @Nullable Output<String> jwtAudience,
        @Nullable Output<Double> operationDeadline,
        @Nullable Output<BackendRulePathTranslation> pathTranslation,
        @Nullable Output<String> protocol,
        @Nullable Output<String> selector) {
        this.address = address;
        this.deadline = deadline;
        this.disableAuth = disableAuth;
        this.jwtAudience = jwtAudience;
        this.operationDeadline = operationDeadline;
        this.pathTranslation = pathTranslation;
        this.protocol = protocol;
        this.selector = selector;
    }

    private BackendRuleArgs() {
        this.address = Output.empty();
        this.deadline = Output.empty();
        this.disableAuth = Output.empty();
        this.jwtAudience = Output.empty();
        this.operationDeadline = Output.empty();
        this.pathTranslation = Output.empty();
        this.protocol = Output.empty();
        this.selector = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> address;
        private @Nullable Output<Double> deadline;
        private @Nullable Output<Boolean> disableAuth;
        private @Nullable Output<String> jwtAudience;
        private @Nullable Output<Double> operationDeadline;
        private @Nullable Output<BackendRulePathTranslation> pathTranslation;
        private @Nullable Output<String> protocol;
        private @Nullable Output<String> selector;

        public Builder() {
    	      // Empty
        }

        public Builder(BackendRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.deadline = defaults.deadline;
    	      this.disableAuth = defaults.disableAuth;
    	      this.jwtAudience = defaults.jwtAudience;
    	      this.operationDeadline = defaults.operationDeadline;
    	      this.pathTranslation = defaults.pathTranslation;
    	      this.protocol = defaults.protocol;
    	      this.selector = defaults.selector;
        }

        public Builder address(@Nullable Output<String> address) {
            this.address = address;
            return this;
        }

        public Builder address(@Nullable String address) {
            this.address = Output.ofNullable(address);
            return this;
        }

        public Builder deadline(@Nullable Output<Double> deadline) {
            this.deadline = deadline;
            return this;
        }

        public Builder deadline(@Nullable Double deadline) {
            this.deadline = Output.ofNullable(deadline);
            return this;
        }

        public Builder disableAuth(@Nullable Output<Boolean> disableAuth) {
            this.disableAuth = disableAuth;
            return this;
        }

        public Builder disableAuth(@Nullable Boolean disableAuth) {
            this.disableAuth = Output.ofNullable(disableAuth);
            return this;
        }

        public Builder jwtAudience(@Nullable Output<String> jwtAudience) {
            this.jwtAudience = jwtAudience;
            return this;
        }

        public Builder jwtAudience(@Nullable String jwtAudience) {
            this.jwtAudience = Output.ofNullable(jwtAudience);
            return this;
        }

        public Builder operationDeadline(@Nullable Output<Double> operationDeadline) {
            this.operationDeadline = operationDeadline;
            return this;
        }

        public Builder operationDeadline(@Nullable Double operationDeadline) {
            this.operationDeadline = Output.ofNullable(operationDeadline);
            return this;
        }

        public Builder pathTranslation(@Nullable Output<BackendRulePathTranslation> pathTranslation) {
            this.pathTranslation = pathTranslation;
            return this;
        }

        public Builder pathTranslation(@Nullable BackendRulePathTranslation pathTranslation) {
            this.pathTranslation = Output.ofNullable(pathTranslation);
            return this;
        }

        public Builder protocol(@Nullable Output<String> protocol) {
            this.protocol = protocol;
            return this;
        }

        public Builder protocol(@Nullable String protocol) {
            this.protocol = Output.ofNullable(protocol);
            return this;
        }

        public Builder selector(@Nullable Output<String> selector) {
            this.selector = selector;
            return this;
        }

        public Builder selector(@Nullable String selector) {
            this.selector = Output.ofNullable(selector);
            return this;
        }
        public BackendRuleArgs build() {
            return new BackendRuleArgs(address, deadline, disableAuth, jwtAudience, operationDeadline, pathTranslation, protocol, selector);
        }
    }
}
