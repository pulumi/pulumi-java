// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CryptoKeyResponse;
import java.util.Objects;


public final class GooglePrivacyDlpV2CryptoHashConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2CryptoHashConfigResponse Empty = new GooglePrivacyDlpV2CryptoHashConfigResponse();

    @InputImport(name="cryptoKey", required=true)
    private final GooglePrivacyDlpV2CryptoKeyResponse cryptoKey;

    public GooglePrivacyDlpV2CryptoKeyResponse getCryptoKey() {
        return this.cryptoKey;
    }

    public GooglePrivacyDlpV2CryptoHashConfigResponse(GooglePrivacyDlpV2CryptoKeyResponse cryptoKey) {
        this.cryptoKey = Objects.requireNonNull(cryptoKey, "expected parameter 'cryptoKey' to be non-null");
    }

    private GooglePrivacyDlpV2CryptoHashConfigResponse() {
        this.cryptoKey = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2CryptoHashConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2CryptoKeyResponse cryptoKey;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2CryptoHashConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cryptoKey = defaults.cryptoKey;
        }

        public Builder setCryptoKey(GooglePrivacyDlpV2CryptoKeyResponse cryptoKey) {
            this.cryptoKey = Objects.requireNonNull(cryptoKey);
            return this;
        }

        public GooglePrivacyDlpV2CryptoHashConfigResponse build() {
            return new GooglePrivacyDlpV2CryptoHashConfigResponse(cryptoKey);
        }
    }
}
