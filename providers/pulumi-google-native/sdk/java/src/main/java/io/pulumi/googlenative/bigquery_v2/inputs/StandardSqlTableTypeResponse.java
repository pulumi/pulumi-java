// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.bigquery_v2.inputs.StandardSqlFieldResponse;
import java.util.List;
import java.util.Objects;


public final class StandardSqlTableTypeResponse extends io.pulumi.resources.InvokeArgs {

    public static final StandardSqlTableTypeResponse Empty = new StandardSqlTableTypeResponse();

    @InputImport(name="columns", required=true)
    private final List<StandardSqlFieldResponse> columns;

    public List<StandardSqlFieldResponse> getColumns() {
        return this.columns;
    }

    public StandardSqlTableTypeResponse(List<StandardSqlFieldResponse> columns) {
        this.columns = Objects.requireNonNull(columns, "expected parameter 'columns' to be non-null");
    }

    private StandardSqlTableTypeResponse() {
        this.columns = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StandardSqlTableTypeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<StandardSqlFieldResponse> columns;

        public Builder() {
    	      // Empty
        }

        public Builder(StandardSqlTableTypeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columns = defaults.columns;
        }

        public Builder setColumns(List<StandardSqlFieldResponse> columns) {
            this.columns = Objects.requireNonNull(columns);
            return this;
        }

        public StandardSqlTableTypeResponse build() {
            return new StandardSqlTableTypeResponse(columns);
        }
    }
}
