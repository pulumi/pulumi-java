// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.firestore_v1beta2;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.firestore_v1beta2.enums.IndexQueryScope;
import io.pulumi.googlenative.firestore_v1beta2.inputs.GoogleFirestoreAdminV1beta2IndexFieldArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class IndexArgs extends io.pulumi.resources.ResourceArgs {

    public static final IndexArgs Empty = new IndexArgs();

    @InputImport(name="collectionGroupId", required=true)
    private final Input<String> collectionGroupId;

    public Input<String> getCollectionGroupId() {
        return this.collectionGroupId;
    }

    @InputImport(name="databaseId", required=true)
    private final Input<String> databaseId;

    public Input<String> getDatabaseId() {
        return this.databaseId;
    }

    @InputImport(name="fields")
    private final @Nullable Input<List<GoogleFirestoreAdminV1beta2IndexFieldArgs>> fields;

    public Input<List<GoogleFirestoreAdminV1beta2IndexFieldArgs>> getFields() {
        return this.fields == null ? Input.empty() : this.fields;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="queryScope")
    private final @Nullable Input<IndexQueryScope> queryScope;

    public Input<IndexQueryScope> getQueryScope() {
        return this.queryScope == null ? Input.empty() : this.queryScope;
    }

    public IndexArgs(
        Input<String> collectionGroupId,
        Input<String> databaseId,
        @Nullable Input<List<GoogleFirestoreAdminV1beta2IndexFieldArgs>> fields,
        @Nullable Input<String> project,
        @Nullable Input<IndexQueryScope> queryScope) {
        this.collectionGroupId = Objects.requireNonNull(collectionGroupId, "expected parameter 'collectionGroupId' to be non-null");
        this.databaseId = Objects.requireNonNull(databaseId, "expected parameter 'databaseId' to be non-null");
        this.fields = fields;
        this.project = project;
        this.queryScope = queryScope;
    }

    private IndexArgs() {
        this.collectionGroupId = Input.empty();
        this.databaseId = Input.empty();
        this.fields = Input.empty();
        this.project = Input.empty();
        this.queryScope = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IndexArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> collectionGroupId;
        private Input<String> databaseId;
        private @Nullable Input<List<GoogleFirestoreAdminV1beta2IndexFieldArgs>> fields;
        private @Nullable Input<String> project;
        private @Nullable Input<IndexQueryScope> queryScope;

        public Builder() {
    	      // Empty
        }

        public Builder(IndexArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collectionGroupId = defaults.collectionGroupId;
    	      this.databaseId = defaults.databaseId;
    	      this.fields = defaults.fields;
    	      this.project = defaults.project;
    	      this.queryScope = defaults.queryScope;
        }

        public Builder setCollectionGroupId(Input<String> collectionGroupId) {
            this.collectionGroupId = Objects.requireNonNull(collectionGroupId);
            return this;
        }

        public Builder setCollectionGroupId(String collectionGroupId) {
            this.collectionGroupId = Input.of(Objects.requireNonNull(collectionGroupId));
            return this;
        }

        public Builder setDatabaseId(Input<String> databaseId) {
            this.databaseId = Objects.requireNonNull(databaseId);
            return this;
        }

        public Builder setDatabaseId(String databaseId) {
            this.databaseId = Input.of(Objects.requireNonNull(databaseId));
            return this;
        }

        public Builder setFields(@Nullable Input<List<GoogleFirestoreAdminV1beta2IndexFieldArgs>> fields) {
            this.fields = fields;
            return this;
        }

        public Builder setFields(@Nullable List<GoogleFirestoreAdminV1beta2IndexFieldArgs> fields) {
            this.fields = Input.ofNullable(fields);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setQueryScope(@Nullable Input<IndexQueryScope> queryScope) {
            this.queryScope = queryScope;
            return this;
        }

        public Builder setQueryScope(@Nullable IndexQueryScope queryScope) {
            this.queryScope = Input.ofNullable(queryScope);
            return this;
        }

        public IndexArgs build() {
            return new IndexArgs(collectionGroupId, databaseId, fields, project, queryScope);
        }
    }
}
