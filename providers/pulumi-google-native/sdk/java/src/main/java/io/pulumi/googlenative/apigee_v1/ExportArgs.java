// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.apigee_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1DateRangeArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ExportArgs extends io.pulumi.resources.ResourceArgs {

    public static final ExportArgs Empty = new ExportArgs();

    /**
     * Optional. Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\t`).
     * 
     */
    @Import(name="csvDelimiter")
      private final @Nullable Output<String> csvDelimiter;

    public Output<String> getCsvDelimiter() {
        return this.csvDelimiter == null ? Output.empty() : this.csvDelimiter;
    }

    /**
     * Name of the preconfigured datastore.
     * 
     */
    @Import(name="datastoreName", required=true)
      private final Output<String> datastoreName;

    public Output<String> getDatastoreName() {
        return this.datastoreName;
    }

    /**
     * Date range of the data to export.
     * 
     */
    @Import(name="dateRange", required=true)
      private final Output<GoogleCloudApigeeV1DateRangeArgs> dateRange;

    public Output<GoogleCloudApigeeV1DateRangeArgs> getDateRange() {
        return this.dateRange;
    }

    /**
     * Optional. Description of the export job.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    @Import(name="environmentId", required=true)
      private final Output<String> environmentId;

    public Output<String> getEnvironmentId() {
        return this.environmentId;
    }

    /**
     * Display name of the export job.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    @Import(name="organizationId", required=true)
      private final Output<String> organizationId;

    public Output<String> getOrganizationId() {
        return this.organizationId;
    }

    /**
     * Optional. Output format of the export. Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the `csvDelimiter` property.
     * 
     */
    @Import(name="outputFormat")
      private final @Nullable Output<String> outputFormat;

    public Output<String> getOutputFormat() {
        return this.outputFormat == null ? Output.empty() : this.outputFormat;
    }

    public ExportArgs(
        @Nullable Output<String> csvDelimiter,
        Output<String> datastoreName,
        Output<GoogleCloudApigeeV1DateRangeArgs> dateRange,
        @Nullable Output<String> description,
        Output<String> environmentId,
        @Nullable Output<String> name,
        Output<String> organizationId,
        @Nullable Output<String> outputFormat) {
        this.csvDelimiter = csvDelimiter;
        this.datastoreName = Objects.requireNonNull(datastoreName, "expected parameter 'datastoreName' to be non-null");
        this.dateRange = Objects.requireNonNull(dateRange, "expected parameter 'dateRange' to be non-null");
        this.description = description;
        this.environmentId = Objects.requireNonNull(environmentId, "expected parameter 'environmentId' to be non-null");
        this.name = name;
        this.organizationId = Objects.requireNonNull(organizationId, "expected parameter 'organizationId' to be non-null");
        this.outputFormat = outputFormat;
    }

    private ExportArgs() {
        this.csvDelimiter = Output.empty();
        this.datastoreName = Output.empty();
        this.dateRange = Output.empty();
        this.description = Output.empty();
        this.environmentId = Output.empty();
        this.name = Output.empty();
        this.organizationId = Output.empty();
        this.outputFormat = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> csvDelimiter;
        private Output<String> datastoreName;
        private Output<GoogleCloudApigeeV1DateRangeArgs> dateRange;
        private @Nullable Output<String> description;
        private Output<String> environmentId;
        private @Nullable Output<String> name;
        private Output<String> organizationId;
        private @Nullable Output<String> outputFormat;

        public Builder() {
    	      // Empty
        }

        public Builder(ExportArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.csvDelimiter = defaults.csvDelimiter;
    	      this.datastoreName = defaults.datastoreName;
    	      this.dateRange = defaults.dateRange;
    	      this.description = defaults.description;
    	      this.environmentId = defaults.environmentId;
    	      this.name = defaults.name;
    	      this.organizationId = defaults.organizationId;
    	      this.outputFormat = defaults.outputFormat;
        }

        public Builder csvDelimiter(@Nullable Output<String> csvDelimiter) {
            this.csvDelimiter = csvDelimiter;
            return this;
        }

        public Builder csvDelimiter(@Nullable String csvDelimiter) {
            this.csvDelimiter = Output.ofNullable(csvDelimiter);
            return this;
        }

        public Builder datastoreName(Output<String> datastoreName) {
            this.datastoreName = Objects.requireNonNull(datastoreName);
            return this;
        }

        public Builder datastoreName(String datastoreName) {
            this.datastoreName = Output.of(Objects.requireNonNull(datastoreName));
            return this;
        }

        public Builder dateRange(Output<GoogleCloudApigeeV1DateRangeArgs> dateRange) {
            this.dateRange = Objects.requireNonNull(dateRange);
            return this;
        }

        public Builder dateRange(GoogleCloudApigeeV1DateRangeArgs dateRange) {
            this.dateRange = Output.of(Objects.requireNonNull(dateRange));
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder environmentId(Output<String> environmentId) {
            this.environmentId = Objects.requireNonNull(environmentId);
            return this;
        }

        public Builder environmentId(String environmentId) {
            this.environmentId = Output.of(Objects.requireNonNull(environmentId));
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder organizationId(Output<String> organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }

        public Builder organizationId(String organizationId) {
            this.organizationId = Output.of(Objects.requireNonNull(organizationId));
            return this;
        }

        public Builder outputFormat(@Nullable Output<String> outputFormat) {
            this.outputFormat = outputFormat;
            return this;
        }

        public Builder outputFormat(@Nullable String outputFormat) {
            this.outputFormat = Output.ofNullable(outputFormat);
            return this;
        }
        public ExportArgs build() {
            return new ExportArgs(csvDelimiter, datastoreName, dateRange, description, environmentId, name, organizationId, outputFormat);
        }
    }
}
