// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.storage_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.storage_v1.BucketArgs;
import io.pulumi.googlenative.storage_v1.outputs.BucketAccessControlResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketAutoclassResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketBillingResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketCorsItemResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketCustomPlacementConfigResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketEncryptionResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketIamConfigurationResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketLifecycleResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketLoggingResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketOwnerResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketRetentionPolicyResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketVersioningResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketWebsiteResponse;
import io.pulumi.googlenative.storage_v1.outputs.ObjectAccessControlResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:storage/v1:Bucket")
public class Bucket extends io.pulumi.resources.CustomResource {
    @OutputExport(name="acl", type=List.class, parameters={BucketAccessControlResponse.class})
    private Output<List<BucketAccessControlResponse>> acl;

    public Output<List<BucketAccessControlResponse>> getAcl() {
        return this.acl;
    }
    @OutputExport(name="autoclass", type=BucketAutoclassResponse.class, parameters={})
    private Output<BucketAutoclassResponse> autoclass;

    public Output<BucketAutoclassResponse> getAutoclass() {
        return this.autoclass;
    }
    @OutputExport(name="billing", type=BucketBillingResponse.class, parameters={})
    private Output<BucketBillingResponse> billing;

    public Output<BucketBillingResponse> getBilling() {
        return this.billing;
    }
    @OutputExport(name="cors", type=List.class, parameters={BucketCorsItemResponse.class})
    private Output<List<BucketCorsItemResponse>> cors;

    public Output<List<BucketCorsItemResponse>> getCors() {
        return this.cors;
    }
    @OutputExport(name="customPlacementConfig", type=BucketCustomPlacementConfigResponse.class, parameters={})
    private Output<BucketCustomPlacementConfigResponse> customPlacementConfig;

    public Output<BucketCustomPlacementConfigResponse> getCustomPlacementConfig() {
        return this.customPlacementConfig;
    }
    @OutputExport(name="defaultEventBasedHold", type=Boolean.class, parameters={})
    private Output<Boolean> defaultEventBasedHold;

    public Output<Boolean> getDefaultEventBasedHold() {
        return this.defaultEventBasedHold;
    }
    @OutputExport(name="defaultObjectAcl", type=List.class, parameters={ObjectAccessControlResponse.class})
    private Output<List<ObjectAccessControlResponse>> defaultObjectAcl;

    public Output<List<ObjectAccessControlResponse>> getDefaultObjectAcl() {
        return this.defaultObjectAcl;
    }
    @OutputExport(name="encryption", type=BucketEncryptionResponse.class, parameters={})
    private Output<BucketEncryptionResponse> encryption;

    public Output<BucketEncryptionResponse> getEncryption() {
        return this.encryption;
    }
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    public Output<String> getEtag() {
        return this.etag;
    }
    @OutputExport(name="iamConfiguration", type=BucketIamConfigurationResponse.class, parameters={})
    private Output<BucketIamConfigurationResponse> iamConfiguration;

    public Output<BucketIamConfigurationResponse> getIamConfiguration() {
        return this.iamConfiguration;
    }
    @OutputExport(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    public Output<String> getKind() {
        return this.kind;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="lifecycle", type=BucketLifecycleResponse.class, parameters={})
    private Output<BucketLifecycleResponse> lifecycle;

    public Output<BucketLifecycleResponse> getLifecycle() {
        return this.lifecycle;
    }
    @OutputExport(name="location", type=String.class, parameters={})
    private Output<String> location;

    public Output<String> getLocation() {
        return this.location;
    }
    @OutputExport(name="locationType", type=String.class, parameters={})
    private Output<String> locationType;

    public Output<String> getLocationType() {
        return this.locationType;
    }
    @OutputExport(name="logging", type=BucketLoggingResponse.class, parameters={})
    private Output<BucketLoggingResponse> logging;

    public Output<BucketLoggingResponse> getLogging() {
        return this.logging;
    }
    @OutputExport(name="metageneration", type=String.class, parameters={})
    private Output<String> metageneration;

    public Output<String> getMetageneration() {
        return this.metageneration;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="owner", type=BucketOwnerResponse.class, parameters={})
    private Output<BucketOwnerResponse> owner;

    public Output<BucketOwnerResponse> getOwner() {
        return this.owner;
    }
    @OutputExport(name="projectNumber", type=String.class, parameters={})
    private Output<String> projectNumber;

    public Output<String> getProjectNumber() {
        return this.projectNumber;
    }
    @OutputExport(name="retentionPolicy", type=BucketRetentionPolicyResponse.class, parameters={})
    private Output<BucketRetentionPolicyResponse> retentionPolicy;

    public Output<BucketRetentionPolicyResponse> getRetentionPolicy() {
        return this.retentionPolicy;
    }
    @OutputExport(name="rpo", type=String.class, parameters={})
    private Output<String> rpo;

    public Output<String> getRpo() {
        return this.rpo;
    }
    @OutputExport(name="satisfiesPZS", type=Boolean.class, parameters={})
    private Output<Boolean> satisfiesPZS;

    public Output<Boolean> getSatisfiesPZS() {
        return this.satisfiesPZS;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="storageClass", type=String.class, parameters={})
    private Output<String> storageClass;

    public Output<String> getStorageClass() {
        return this.storageClass;
    }
    @OutputExport(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    public Output<String> getTimeCreated() {
        return this.timeCreated;
    }
    @OutputExport(name="updated", type=String.class, parameters={})
    private Output<String> updated;

    public Output<String> getUpdated() {
        return this.updated;
    }
    @OutputExport(name="versioning", type=BucketVersioningResponse.class, parameters={})
    private Output<BucketVersioningResponse> versioning;

    public Output<BucketVersioningResponse> getVersioning() {
        return this.versioning;
    }
    @OutputExport(name="website", type=BucketWebsiteResponse.class, parameters={})
    private Output<BucketWebsiteResponse> website;

    public Output<BucketWebsiteResponse> getWebsite() {
        return this.website;
    }

    public Bucket(String name, @Nullable BucketArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:storage/v1:Bucket", name, args == null ? BucketArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Bucket(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:storage/v1:Bucket", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Bucket get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Bucket(name, id, options);
    }
}
