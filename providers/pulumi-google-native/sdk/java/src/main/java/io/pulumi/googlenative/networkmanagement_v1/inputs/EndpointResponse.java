// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.networkmanagement_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class EndpointResponse extends io.pulumi.resources.InvokeArgs {

    public static final EndpointResponse Empty = new EndpointResponse();

    @InputImport(name="cloudSqlInstance", required=true)
    private final String cloudSqlInstance;

    public String getCloudSqlInstance() {
        return this.cloudSqlInstance;
    }

    @InputImport(name="gkeMasterCluster", required=true)
    private final String gkeMasterCluster;

    public String getGkeMasterCluster() {
        return this.gkeMasterCluster;
    }

    @InputImport(name="instance", required=true)
    private final String instance;

    public String getInstance() {
        return this.instance;
    }

    @InputImport(name="ipAddress", required=true)
    private final String ipAddress;

    public String getIpAddress() {
        return this.ipAddress;
    }

    @InputImport(name="network", required=true)
    private final String network;

    public String getNetwork() {
        return this.network;
    }

    @InputImport(name="networkType", required=true)
    private final String networkType;

    public String getNetworkType() {
        return this.networkType;
    }

    @InputImport(name="port", required=true)
    private final Integer port;

    public Integer getPort() {
        return this.port;
    }

    @InputImport(name="project", required=true)
    private final String project;

    public String getProject() {
        return this.project;
    }

    public EndpointResponse(
        String cloudSqlInstance,
        String gkeMasterCluster,
        String instance,
        String ipAddress,
        String network,
        String networkType,
        Integer port,
        String project) {
        this.cloudSqlInstance = Objects.requireNonNull(cloudSqlInstance, "expected parameter 'cloudSqlInstance' to be non-null");
        this.gkeMasterCluster = Objects.requireNonNull(gkeMasterCluster, "expected parameter 'gkeMasterCluster' to be non-null");
        this.instance = Objects.requireNonNull(instance, "expected parameter 'instance' to be non-null");
        this.ipAddress = Objects.requireNonNull(ipAddress, "expected parameter 'ipAddress' to be non-null");
        this.network = Objects.requireNonNull(network, "expected parameter 'network' to be non-null");
        this.networkType = Objects.requireNonNull(networkType, "expected parameter 'networkType' to be non-null");
        this.port = Objects.requireNonNull(port, "expected parameter 'port' to be non-null");
        this.project = Objects.requireNonNull(project, "expected parameter 'project' to be non-null");
    }

    private EndpointResponse() {
        this.cloudSqlInstance = null;
        this.gkeMasterCluster = null;
        this.instance = null;
        this.ipAddress = null;
        this.network = null;
        this.networkType = null;
        this.port = null;
        this.project = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cloudSqlInstance;
        private String gkeMasterCluster;
        private String instance;
        private String ipAddress;
        private String network;
        private String networkType;
        private Integer port;
        private String project;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudSqlInstance = defaults.cloudSqlInstance;
    	      this.gkeMasterCluster = defaults.gkeMasterCluster;
    	      this.instance = defaults.instance;
    	      this.ipAddress = defaults.ipAddress;
    	      this.network = defaults.network;
    	      this.networkType = defaults.networkType;
    	      this.port = defaults.port;
    	      this.project = defaults.project;
        }

        public Builder setCloudSqlInstance(String cloudSqlInstance) {
            this.cloudSqlInstance = Objects.requireNonNull(cloudSqlInstance);
            return this;
        }

        public Builder setGkeMasterCluster(String gkeMasterCluster) {
            this.gkeMasterCluster = Objects.requireNonNull(gkeMasterCluster);
            return this;
        }

        public Builder setInstance(String instance) {
            this.instance = Objects.requireNonNull(instance);
            return this;
        }

        public Builder setIpAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }

        public Builder setNetwork(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setNetworkType(String networkType) {
            this.networkType = Objects.requireNonNull(networkType);
            return this;
        }

        public Builder setPort(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public Builder setProject(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }

        public EndpointResponse build() {
            return new EndpointResponse(cloudSqlInstance, gkeMasterCluster, instance, ipAddress, network, networkType, port, project);
        }
    }
}
