// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.networkmanagement_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Source or destination of the Connectivity Test.
 * 
 */
public final class EndpointResponse extends io.pulumi.resources.InvokeArgs {

    public static final EndpointResponse Empty = new EndpointResponse();

    /**
     * A [Cloud SQL](https://cloud.google.com/sql) instance URI.
     * 
     */
    @InputImport(name="cloudSqlInstance", required=true)
      private final String cloudSqlInstance;

    public String getCloudSqlInstance() {
        return this.cloudSqlInstance;
    }

    /**
     * A cluster URI for [Google Kubernetes Engine master](https://cloud.google.com/kubernetes-engine/docs/concepts/cluster-architecture).
     * 
     */
    @InputImport(name="gkeMasterCluster", required=true)
      private final String gkeMasterCluster;

    public String getGkeMasterCluster() {
        return this.gkeMasterCluster;
    }

    /**
     * A Compute Engine instance URI.
     * 
     */
    @InputImport(name="instance", required=true)
      private final String instance;

    public String getInstance() {
        return this.instance;
    }

    /**
     * The IP address of the endpoint, which can be an external or internal IP. An IPv6 address is only allowed when the test's destination is a [global load balancer VIP](/load-balancing/docs/load-balancing-overview).
     * 
     */
    @InputImport(name="ipAddress", required=true)
      private final String ipAddress;

    public String getIpAddress() {
        return this.ipAddress;
    }

    /**
     * A Compute Engine network URI.
     * 
     */
    @InputImport(name="network", required=true)
      private final String network;

    public String getNetwork() {
        return this.network;
    }

    /**
     * Type of the network where the endpoint is located. Applicable only to source endpoint, as destination network type can be inferred from the source.
     * 
     */
    @InputImport(name="networkType", required=true)
      private final String networkType;

    public String getNetworkType() {
        return this.networkType;
    }

    /**
     * The IP protocol port of the endpoint. Only applicable when protocol is TCP or UDP.
     * 
     */
    @InputImport(name="port", required=true)
      private final Integer port;

    public Integer getPort() {
        return this.port;
    }

    /**
     * Project ID where the endpoint is located. The Project ID can be derived from the URI if you provide a VM instance or network URI. The following are two cases where you must provide the project ID: 1. Only the IP address is specified, and the IP address is within a GCP project. 2. When you are using Shared VPC and the IP address that you provide is from the service project. In this case, the network that the IP address resides in is defined in the host project.
     * 
     */
    @InputImport(name="project", required=true)
      private final String project;

    public String getProject() {
        return this.project;
    }

    public EndpointResponse(
        String cloudSqlInstance,
        String gkeMasterCluster,
        String instance,
        String ipAddress,
        String network,
        String networkType,
        Integer port,
        String project) {
        this.cloudSqlInstance = Objects.requireNonNull(cloudSqlInstance, "expected parameter 'cloudSqlInstance' to be non-null");
        this.gkeMasterCluster = Objects.requireNonNull(gkeMasterCluster, "expected parameter 'gkeMasterCluster' to be non-null");
        this.instance = Objects.requireNonNull(instance, "expected parameter 'instance' to be non-null");
        this.ipAddress = Objects.requireNonNull(ipAddress, "expected parameter 'ipAddress' to be non-null");
        this.network = Objects.requireNonNull(network, "expected parameter 'network' to be non-null");
        this.networkType = Objects.requireNonNull(networkType, "expected parameter 'networkType' to be non-null");
        this.port = Objects.requireNonNull(port, "expected parameter 'port' to be non-null");
        this.project = Objects.requireNonNull(project, "expected parameter 'project' to be non-null");
    }

    private EndpointResponse() {
        this.cloudSqlInstance = null;
        this.gkeMasterCluster = null;
        this.instance = null;
        this.ipAddress = null;
        this.network = null;
        this.networkType = null;
        this.port = null;
        this.project = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EndpointResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cloudSqlInstance;
        private String gkeMasterCluster;
        private String instance;
        private String ipAddress;
        private String network;
        private String networkType;
        private Integer port;
        private String project;

        public Builder() {
    	      // Empty
        }

        public Builder(EndpointResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudSqlInstance = defaults.cloudSqlInstance;
    	      this.gkeMasterCluster = defaults.gkeMasterCluster;
    	      this.instance = defaults.instance;
    	      this.ipAddress = defaults.ipAddress;
    	      this.network = defaults.network;
    	      this.networkType = defaults.networkType;
    	      this.port = defaults.port;
    	      this.project = defaults.project;
        }

        public Builder setCloudSqlInstance(String cloudSqlInstance) {
            this.cloudSqlInstance = Objects.requireNonNull(cloudSqlInstance);
            return this;
        }

        public Builder setGkeMasterCluster(String gkeMasterCluster) {
            this.gkeMasterCluster = Objects.requireNonNull(gkeMasterCluster);
            return this;
        }

        public Builder setInstance(String instance) {
            this.instance = Objects.requireNonNull(instance);
            return this;
        }

        public Builder setIpAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }

        public Builder setNetwork(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setNetworkType(String networkType) {
            this.networkType = Objects.requireNonNull(networkType);
            return this;
        }

        public Builder setPort(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public Builder setProject(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }
        public EndpointResponse build() {
            return new EndpointResponse(cloudSqlInstance, gkeMasterCluster, instance, ipAddress, network, networkType, port, project);
        }
    }
}
