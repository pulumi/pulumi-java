// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.vmmigration_v1alpha1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.vmmigration_v1alpha1.inputs.InitializingReplicationStepResponse;
import io.pulumi.googlenative.vmmigration_v1alpha1.inputs.PostProcessingStepResponse;
import io.pulumi.googlenative.vmmigration_v1alpha1.inputs.ReplicatingStepResponse;
import java.lang.String;
import java.util.Objects;


public final class CycleStepResponse extends io.pulumi.resources.InvokeArgs {

    public static final CycleStepResponse Empty = new CycleStepResponse();

    @InputImport(name="endTime", required=true)
    private final String endTime;

    public String getEndTime() {
        return this.endTime;
    }

    @InputImport(name="initializingReplication", required=true)
    private final InitializingReplicationStepResponse initializingReplication;

    public InitializingReplicationStepResponse getInitializingReplication() {
        return this.initializingReplication;
    }

    @InputImport(name="postProcessing", required=true)
    private final PostProcessingStepResponse postProcessing;

    public PostProcessingStepResponse getPostProcessing() {
        return this.postProcessing;
    }

    @InputImport(name="replicating", required=true)
    private final ReplicatingStepResponse replicating;

    public ReplicatingStepResponse getReplicating() {
        return this.replicating;
    }

    @InputImport(name="startTime", required=true)
    private final String startTime;

    public String getStartTime() {
        return this.startTime;
    }

    public CycleStepResponse(
        String endTime,
        InitializingReplicationStepResponse initializingReplication,
        PostProcessingStepResponse postProcessing,
        ReplicatingStepResponse replicating,
        String startTime) {
        this.endTime = Objects.requireNonNull(endTime, "expected parameter 'endTime' to be non-null");
        this.initializingReplication = Objects.requireNonNull(initializingReplication, "expected parameter 'initializingReplication' to be non-null");
        this.postProcessing = Objects.requireNonNull(postProcessing, "expected parameter 'postProcessing' to be non-null");
        this.replicating = Objects.requireNonNull(replicating, "expected parameter 'replicating' to be non-null");
        this.startTime = Objects.requireNonNull(startTime, "expected parameter 'startTime' to be non-null");
    }

    private CycleStepResponse() {
        this.endTime = null;
        this.initializingReplication = null;
        this.postProcessing = null;
        this.replicating = null;
        this.startTime = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CycleStepResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String endTime;
        private InitializingReplicationStepResponse initializingReplication;
        private PostProcessingStepResponse postProcessing;
        private ReplicatingStepResponse replicating;
        private String startTime;

        public Builder() {
    	      // Empty
        }

        public Builder(CycleStepResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.endTime = defaults.endTime;
    	      this.initializingReplication = defaults.initializingReplication;
    	      this.postProcessing = defaults.postProcessing;
    	      this.replicating = defaults.replicating;
    	      this.startTime = defaults.startTime;
        }

        public Builder setEndTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }

        public Builder setInitializingReplication(InitializingReplicationStepResponse initializingReplication) {
            this.initializingReplication = Objects.requireNonNull(initializingReplication);
            return this;
        }

        public Builder setPostProcessing(PostProcessingStepResponse postProcessing) {
            this.postProcessing = Objects.requireNonNull(postProcessing);
            return this;
        }

        public Builder setReplicating(ReplicatingStepResponse replicating) {
            this.replicating = Objects.requireNonNull(replicating);
            return this;
        }

        public Builder setStartTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }

        public CycleStepResponse build() {
            return new CycleStepResponse(endTime, initializingReplication, postProcessing, replicating, startTime);
        }
    }
}
