// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.privateca_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.privateca_v1beta1.outputs.AllowedConfigListResponse;
import io.pulumi.googlenative.privateca_v1beta1.outputs.AllowedSubjectAltNamesResponse;
import io.pulumi.googlenative.privateca_v1beta1.outputs.IssuanceModesResponse;
import io.pulumi.googlenative.privateca_v1beta1.outputs.ReusableConfigWrapperResponse;
import io.pulumi.googlenative.privateca_v1beta1.outputs.SubjectResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class CertificateAuthorityPolicyResponse {
    private final List<String> allowedCommonNames;
    private final AllowedConfigListResponse allowedConfigList;
    private final IssuanceModesResponse allowedIssuanceModes;
    private final List<SubjectResponse> allowedLocationsAndOrganizations;
    private final AllowedSubjectAltNamesResponse allowedSans;
    private final String maximumLifetime;
    private final ReusableConfigWrapperResponse overwriteConfigValues;

    @OutputCustomType.Constructor({"allowedCommonNames","allowedConfigList","allowedIssuanceModes","allowedLocationsAndOrganizations","allowedSans","maximumLifetime","overwriteConfigValues"})
    private CertificateAuthorityPolicyResponse(
        List<String> allowedCommonNames,
        AllowedConfigListResponse allowedConfigList,
        IssuanceModesResponse allowedIssuanceModes,
        List<SubjectResponse> allowedLocationsAndOrganizations,
        AllowedSubjectAltNamesResponse allowedSans,
        String maximumLifetime,
        ReusableConfigWrapperResponse overwriteConfigValues) {
        this.allowedCommonNames = Objects.requireNonNull(allowedCommonNames);
        this.allowedConfigList = Objects.requireNonNull(allowedConfigList);
        this.allowedIssuanceModes = Objects.requireNonNull(allowedIssuanceModes);
        this.allowedLocationsAndOrganizations = Objects.requireNonNull(allowedLocationsAndOrganizations);
        this.allowedSans = Objects.requireNonNull(allowedSans);
        this.maximumLifetime = Objects.requireNonNull(maximumLifetime);
        this.overwriteConfigValues = Objects.requireNonNull(overwriteConfigValues);
    }

    public List<String> getAllowedCommonNames() {
        return this.allowedCommonNames;
    }
    public AllowedConfigListResponse getAllowedConfigList() {
        return this.allowedConfigList;
    }
    public IssuanceModesResponse getAllowedIssuanceModes() {
        return this.allowedIssuanceModes;
    }
    public List<SubjectResponse> getAllowedLocationsAndOrganizations() {
        return this.allowedLocationsAndOrganizations;
    }
    public AllowedSubjectAltNamesResponse getAllowedSans() {
        return this.allowedSans;
    }
    public String getMaximumLifetime() {
        return this.maximumLifetime;
    }
    public ReusableConfigWrapperResponse getOverwriteConfigValues() {
        return this.overwriteConfigValues;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateAuthorityPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> allowedCommonNames;
        private AllowedConfigListResponse allowedConfigList;
        private IssuanceModesResponse allowedIssuanceModes;
        private List<SubjectResponse> allowedLocationsAndOrganizations;
        private AllowedSubjectAltNamesResponse allowedSans;
        private String maximumLifetime;
        private ReusableConfigWrapperResponse overwriteConfigValues;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateAuthorityPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedCommonNames = defaults.allowedCommonNames;
    	      this.allowedConfigList = defaults.allowedConfigList;
    	      this.allowedIssuanceModes = defaults.allowedIssuanceModes;
    	      this.allowedLocationsAndOrganizations = defaults.allowedLocationsAndOrganizations;
    	      this.allowedSans = defaults.allowedSans;
    	      this.maximumLifetime = defaults.maximumLifetime;
    	      this.overwriteConfigValues = defaults.overwriteConfigValues;
        }

        public Builder setAllowedCommonNames(List<String> allowedCommonNames) {
            this.allowedCommonNames = Objects.requireNonNull(allowedCommonNames);
            return this;
        }

        public Builder setAllowedConfigList(AllowedConfigListResponse allowedConfigList) {
            this.allowedConfigList = Objects.requireNonNull(allowedConfigList);
            return this;
        }

        public Builder setAllowedIssuanceModes(IssuanceModesResponse allowedIssuanceModes) {
            this.allowedIssuanceModes = Objects.requireNonNull(allowedIssuanceModes);
            return this;
        }

        public Builder setAllowedLocationsAndOrganizations(List<SubjectResponse> allowedLocationsAndOrganizations) {
            this.allowedLocationsAndOrganizations = Objects.requireNonNull(allowedLocationsAndOrganizations);
            return this;
        }

        public Builder setAllowedSans(AllowedSubjectAltNamesResponse allowedSans) {
            this.allowedSans = Objects.requireNonNull(allowedSans);
            return this;
        }

        public Builder setMaximumLifetime(String maximumLifetime) {
            this.maximumLifetime = Objects.requireNonNull(maximumLifetime);
            return this;
        }

        public Builder setOverwriteConfigValues(ReusableConfigWrapperResponse overwriteConfigValues) {
            this.overwriteConfigValues = Objects.requireNonNull(overwriteConfigValues);
            return this;
        }

        public CertificateAuthorityPolicyResponse build() {
            return new CertificateAuthorityPolicyResponse(allowedCommonNames, allowedConfigList, allowedIssuanceModes, allowedLocationsAndOrganizations, allowedSans, maximumLifetime, overwriteConfigValues);
        }
    }
}
