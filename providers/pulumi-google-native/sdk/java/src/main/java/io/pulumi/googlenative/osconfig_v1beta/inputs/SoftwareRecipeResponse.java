// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.osconfig_v1beta.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.osconfig_v1beta.inputs.SoftwareRecipeArtifactResponse;
import io.pulumi.googlenative.osconfig_v1beta.inputs.SoftwareRecipeStepResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SoftwareRecipeResponse extends io.pulumi.resources.InvokeArgs {

    public static final SoftwareRecipeResponse Empty = new SoftwareRecipeResponse();

    @InputImport(name="artifacts", required=true)
    private final List<SoftwareRecipeArtifactResponse> artifacts;

    public List<SoftwareRecipeArtifactResponse> getArtifacts() {
        return this.artifacts;
    }

    @InputImport(name="desiredState", required=true)
    private final String desiredState;

    public String getDesiredState() {
        return this.desiredState;
    }

    @InputImport(name="installSteps", required=true)
    private final List<SoftwareRecipeStepResponse> installSteps;

    public List<SoftwareRecipeStepResponse> getInstallSteps() {
        return this.installSteps;
    }

    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    @InputImport(name="updateSteps", required=true)
    private final List<SoftwareRecipeStepResponse> updateSteps;

    public List<SoftwareRecipeStepResponse> getUpdateSteps() {
        return this.updateSteps;
    }

    @InputImport(name="version", required=true)
    private final String version;

    public String getVersion() {
        return this.version;
    }

    public SoftwareRecipeResponse(
        List<SoftwareRecipeArtifactResponse> artifacts,
        String desiredState,
        List<SoftwareRecipeStepResponse> installSteps,
        String name,
        List<SoftwareRecipeStepResponse> updateSteps,
        String version) {
        this.artifacts = Objects.requireNonNull(artifacts, "expected parameter 'artifacts' to be non-null");
        this.desiredState = Objects.requireNonNull(desiredState, "expected parameter 'desiredState' to be non-null");
        this.installSteps = Objects.requireNonNull(installSteps, "expected parameter 'installSteps' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.updateSteps = Objects.requireNonNull(updateSteps, "expected parameter 'updateSteps' to be non-null");
        this.version = Objects.requireNonNull(version, "expected parameter 'version' to be non-null");
    }

    private SoftwareRecipeResponse() {
        this.artifacts = List.of();
        this.desiredState = null;
        this.installSteps = List.of();
        this.name = null;
        this.updateSteps = List.of();
        this.version = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SoftwareRecipeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<SoftwareRecipeArtifactResponse> artifacts;
        private String desiredState;
        private List<SoftwareRecipeStepResponse> installSteps;
        private String name;
        private List<SoftwareRecipeStepResponse> updateSteps;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(SoftwareRecipeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifacts = defaults.artifacts;
    	      this.desiredState = defaults.desiredState;
    	      this.installSteps = defaults.installSteps;
    	      this.name = defaults.name;
    	      this.updateSteps = defaults.updateSteps;
    	      this.version = defaults.version;
        }

        public Builder setArtifacts(List<SoftwareRecipeArtifactResponse> artifacts) {
            this.artifacts = Objects.requireNonNull(artifacts);
            return this;
        }

        public Builder setDesiredState(String desiredState) {
            this.desiredState = Objects.requireNonNull(desiredState);
            return this;
        }

        public Builder setInstallSteps(List<SoftwareRecipeStepResponse> installSteps) {
            this.installSteps = Objects.requireNonNull(installSteps);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setUpdateSteps(List<SoftwareRecipeStepResponse> updateSteps) {
            this.updateSteps = Objects.requireNonNull(updateSteps);
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public SoftwareRecipeResponse build() {
            return new SoftwareRecipeResponse(artifacts, desiredState, installSteps, name, updateSteps, version);
        }
    }
}
