// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.speech_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.speech_v1.outputs.ClassItemResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetCustomClassResult {
    private final String customClassId;
    private final List<ClassItemResponse> items;
    private final String name;

    @OutputCustomType.Constructor({"customClassId","items","name"})
    private GetCustomClassResult(
        String customClassId,
        List<ClassItemResponse> items,
        String name) {
        this.customClassId = Objects.requireNonNull(customClassId);
        this.items = Objects.requireNonNull(items);
        this.name = Objects.requireNonNull(name);
    }

    public String getCustomClassId() {
        return this.customClassId;
    }
    public List<ClassItemResponse> getItems() {
        return this.items;
    }
    public String getName() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomClassResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String customClassId;
        private List<ClassItemResponse> items;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCustomClassResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customClassId = defaults.customClassId;
    	      this.items = defaults.items;
    	      this.name = defaults.name;
        }

        public Builder setCustomClassId(String customClassId) {
            this.customClassId = Objects.requireNonNull(customClassId);
            return this;
        }

        public Builder setItems(List<ClassItemResponse> items) {
            this.items = Objects.requireNonNull(items);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public GetCustomClassResult build() {
            return new GetCustomClassResult(customClassId, items, name);
        }
    }
}
