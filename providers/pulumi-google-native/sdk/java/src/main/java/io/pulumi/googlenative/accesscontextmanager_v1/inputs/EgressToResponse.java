// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.accesscontextmanager_v1.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.accesscontextmanager_v1.inputs.ApiOperationResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Defines the conditions under which an EgressPolicy matches a request. Conditions are based on information about the ApiOperation intended to be performed on the `resources` specified. Note that if the destination of the request is also protected by a ServicePerimeter, then that ServicePerimeter must have an IngressPolicy which allows access in order for this request to succeed. The request must match `operations` AND `resources` fields in order to be allowed egress out of the perimeter.
 * 
 */
public final class EgressToResponse extends io.pulumi.resources.InvokeArgs {

    public static final EgressToResponse Empty = new EgressToResponse();

    /**
     * A list of ApiOperations allowed to be performed by the sources specified in the corresponding EgressFrom. A request matches if it uses an operation/service in this list.
     * 
     */
    @Import(name="operations", required=true)
      private final List<ApiOperationResponse> operations;

    public List<ApiOperationResponse> operations() {
        return this.operations;
    }

    /**
     * A list of resources, currently only projects in the form `projects/`, that are allowed to be accessed by sources defined in the corresponding EgressFrom. A request matches if it contains a resource in this list. If `*` is specified for `resources`, then this EgressTo rule will authorize access to all resources outside the perimeter.
     * 
     */
    @Import(name="resources", required=true)
      private final List<String> resources;

    public List<String> resources() {
        return this.resources;
    }

    public EgressToResponse(
        List<ApiOperationResponse> operations,
        List<String> resources) {
        this.operations = Objects.requireNonNull(operations, "expected parameter 'operations' to be non-null");
        this.resources = Objects.requireNonNull(resources, "expected parameter 'resources' to be non-null");
    }

    private EgressToResponse() {
        this.operations = List.of();
        this.resources = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EgressToResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<ApiOperationResponse> operations;
        private List<String> resources;

        public Builder() {
    	      // Empty
        }

        public Builder(EgressToResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.operations = defaults.operations;
    	      this.resources = defaults.resources;
        }

        public Builder operations(List<ApiOperationResponse> operations) {
            this.operations = Objects.requireNonNull(operations);
            return this;
        }
        public Builder operations(ApiOperationResponse... operations) {
            return operations(List.of(operations));
        }
        public Builder resources(List<String> resources) {
            this.resources = Objects.requireNonNull(resources);
            return this;
        }
        public Builder resources(String... resources) {
            return resources(List.of(resources));
        }        public EgressToResponse build() {
            return new EgressToResponse(operations, resources);
        }
    }
}
