// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.gameservices_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.gameservices_v1.outputs.ConditionResponse;
import io.pulumi.googlenative.gameservices_v1.outputs.LogConfigResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class RuleResponse {
    private final String action;
    private final List<ConditionResponse> conditions;
    private final String description;
    private final List<String> in;
    private final List<LogConfigResponse> logConfig;
    private final List<String> notIn;
    private final List<String> permissions;

    @OutputCustomType.Constructor({"action","conditions","description","in","logConfig","notIn","permissions"})
    private RuleResponse(
        String action,
        List<ConditionResponse> conditions,
        String description,
        List<String> in,
        List<LogConfigResponse> logConfig,
        List<String> notIn,
        List<String> permissions) {
        this.action = Objects.requireNonNull(action);
        this.conditions = Objects.requireNonNull(conditions);
        this.description = Objects.requireNonNull(description);
        this.in = Objects.requireNonNull(in);
        this.logConfig = Objects.requireNonNull(logConfig);
        this.notIn = Objects.requireNonNull(notIn);
        this.permissions = Objects.requireNonNull(permissions);
    }

    public String getAction() {
        return this.action;
    }
    public List<ConditionResponse> getConditions() {
        return this.conditions;
    }
    public String getDescription() {
        return this.description;
    }
    public List<String> getIn() {
        return this.in;
    }
    public List<LogConfigResponse> getLogConfig() {
        return this.logConfig;
    }
    public List<String> getNotIn() {
        return this.notIn;
    }
    public List<String> getPermissions() {
        return this.permissions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RuleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String action;
        private List<ConditionResponse> conditions;
        private String description;
        private List<String> in;
        private List<LogConfigResponse> logConfig;
        private List<String> notIn;
        private List<String> permissions;

        public Builder() {
    	      // Empty
        }

        public Builder(RuleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.conditions = defaults.conditions;
    	      this.description = defaults.description;
    	      this.in = defaults.in;
    	      this.logConfig = defaults.logConfig;
    	      this.notIn = defaults.notIn;
    	      this.permissions = defaults.permissions;
        }

        public Builder setAction(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }

        public Builder setConditions(List<ConditionResponse> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setIn(List<String> in) {
            this.in = Objects.requireNonNull(in);
            return this;
        }

        public Builder setLogConfig(List<LogConfigResponse> logConfig) {
            this.logConfig = Objects.requireNonNull(logConfig);
            return this;
        }

        public Builder setNotIn(List<String> notIn) {
            this.notIn = Objects.requireNonNull(notIn);
            return this;
        }

        public Builder setPermissions(List<String> permissions) {
            this.permissions = Objects.requireNonNull(permissions);
            return this;
        }

        public RuleResponse build() {
            return new RuleResponse(action, conditions, description, in, logConfig, notIn, permissions);
        }
    }
}
