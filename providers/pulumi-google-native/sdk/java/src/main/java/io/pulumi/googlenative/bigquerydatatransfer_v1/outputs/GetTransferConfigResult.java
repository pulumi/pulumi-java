// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquerydatatransfer_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.bigquerydatatransfer_v1.outputs.EmailPreferencesResponse;
import io.pulumi.googlenative.bigquerydatatransfer_v1.outputs.ScheduleOptionsResponse;
import io.pulumi.googlenative.bigquerydatatransfer_v1.outputs.UserInfoResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetTransferConfigResult {
    private final Integer dataRefreshWindowDays;
    private final String dataSourceId;
    private final String datasetRegion;
    private final String destinationDatasetId;
    private final Boolean disabled;
    private final String displayName;
    private final EmailPreferencesResponse emailPreferences;
    private final String name;
    private final String nextRunTime;
    private final String notificationPubsubTopic;
    private final UserInfoResponse ownerInfo;
    private final Map<String,String> params;
    private final String schedule;
    private final ScheduleOptionsResponse scheduleOptions;
    private final String state;
    private final String updateTime;

    @OutputCustomType.Constructor({"dataRefreshWindowDays","dataSourceId","datasetRegion","destinationDatasetId","disabled","displayName","emailPreferences","name","nextRunTime","notificationPubsubTopic","ownerInfo","params","schedule","scheduleOptions","state","updateTime"})
    private GetTransferConfigResult(
        Integer dataRefreshWindowDays,
        String dataSourceId,
        String datasetRegion,
        String destinationDatasetId,
        Boolean disabled,
        String displayName,
        EmailPreferencesResponse emailPreferences,
        String name,
        String nextRunTime,
        String notificationPubsubTopic,
        UserInfoResponse ownerInfo,
        Map<String,String> params,
        String schedule,
        ScheduleOptionsResponse scheduleOptions,
        String state,
        String updateTime) {
        this.dataRefreshWindowDays = Objects.requireNonNull(dataRefreshWindowDays);
        this.dataSourceId = Objects.requireNonNull(dataSourceId);
        this.datasetRegion = Objects.requireNonNull(datasetRegion);
        this.destinationDatasetId = Objects.requireNonNull(destinationDatasetId);
        this.disabled = Objects.requireNonNull(disabled);
        this.displayName = Objects.requireNonNull(displayName);
        this.emailPreferences = Objects.requireNonNull(emailPreferences);
        this.name = Objects.requireNonNull(name);
        this.nextRunTime = Objects.requireNonNull(nextRunTime);
        this.notificationPubsubTopic = Objects.requireNonNull(notificationPubsubTopic);
        this.ownerInfo = Objects.requireNonNull(ownerInfo);
        this.params = Objects.requireNonNull(params);
        this.schedule = Objects.requireNonNull(schedule);
        this.scheduleOptions = Objects.requireNonNull(scheduleOptions);
        this.state = Objects.requireNonNull(state);
        this.updateTime = Objects.requireNonNull(updateTime);
    }

    public Integer getDataRefreshWindowDays() {
        return this.dataRefreshWindowDays;
    }
    public String getDataSourceId() {
        return this.dataSourceId;
    }
    public String getDatasetRegion() {
        return this.datasetRegion;
    }
    public String getDestinationDatasetId() {
        return this.destinationDatasetId;
    }
    public Boolean getDisabled() {
        return this.disabled;
    }
    public String getDisplayName() {
        return this.displayName;
    }
    public EmailPreferencesResponse getEmailPreferences() {
        return this.emailPreferences;
    }
    public String getName() {
        return this.name;
    }
    public String getNextRunTime() {
        return this.nextRunTime;
    }
    public String getNotificationPubsubTopic() {
        return this.notificationPubsubTopic;
    }
    public UserInfoResponse getOwnerInfo() {
        return this.ownerInfo;
    }
    public Map<String,String> getParams() {
        return this.params;
    }
    public String getSchedule() {
        return this.schedule;
    }
    public ScheduleOptionsResponse getScheduleOptions() {
        return this.scheduleOptions;
    }
    public String getState() {
        return this.state;
    }
    public String getUpdateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTransferConfigResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer dataRefreshWindowDays;
        private String dataSourceId;
        private String datasetRegion;
        private String destinationDatasetId;
        private Boolean disabled;
        private String displayName;
        private EmailPreferencesResponse emailPreferences;
        private String name;
        private String nextRunTime;
        private String notificationPubsubTopic;
        private UserInfoResponse ownerInfo;
        private Map<String,String> params;
        private String schedule;
        private ScheduleOptionsResponse scheduleOptions;
        private String state;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTransferConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataRefreshWindowDays = defaults.dataRefreshWindowDays;
    	      this.dataSourceId = defaults.dataSourceId;
    	      this.datasetRegion = defaults.datasetRegion;
    	      this.destinationDatasetId = defaults.destinationDatasetId;
    	      this.disabled = defaults.disabled;
    	      this.displayName = defaults.displayName;
    	      this.emailPreferences = defaults.emailPreferences;
    	      this.name = defaults.name;
    	      this.nextRunTime = defaults.nextRunTime;
    	      this.notificationPubsubTopic = defaults.notificationPubsubTopic;
    	      this.ownerInfo = defaults.ownerInfo;
    	      this.params = defaults.params;
    	      this.schedule = defaults.schedule;
    	      this.scheduleOptions = defaults.scheduleOptions;
    	      this.state = defaults.state;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setDataRefreshWindowDays(Integer dataRefreshWindowDays) {
            this.dataRefreshWindowDays = Objects.requireNonNull(dataRefreshWindowDays);
            return this;
        }

        public Builder setDataSourceId(String dataSourceId) {
            this.dataSourceId = Objects.requireNonNull(dataSourceId);
            return this;
        }

        public Builder setDatasetRegion(String datasetRegion) {
            this.datasetRegion = Objects.requireNonNull(datasetRegion);
            return this;
        }

        public Builder setDestinationDatasetId(String destinationDatasetId) {
            this.destinationDatasetId = Objects.requireNonNull(destinationDatasetId);
            return this;
        }

        public Builder setDisabled(Boolean disabled) {
            this.disabled = Objects.requireNonNull(disabled);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setEmailPreferences(EmailPreferencesResponse emailPreferences) {
            this.emailPreferences = Objects.requireNonNull(emailPreferences);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNextRunTime(String nextRunTime) {
            this.nextRunTime = Objects.requireNonNull(nextRunTime);
            return this;
        }

        public Builder setNotificationPubsubTopic(String notificationPubsubTopic) {
            this.notificationPubsubTopic = Objects.requireNonNull(notificationPubsubTopic);
            return this;
        }

        public Builder setOwnerInfo(UserInfoResponse ownerInfo) {
            this.ownerInfo = Objects.requireNonNull(ownerInfo);
            return this;
        }

        public Builder setParams(Map<String,String> params) {
            this.params = Objects.requireNonNull(params);
            return this;
        }

        public Builder setSchedule(String schedule) {
            this.schedule = Objects.requireNonNull(schedule);
            return this;
        }

        public Builder setScheduleOptions(ScheduleOptionsResponse scheduleOptions) {
            this.scheduleOptions = Objects.requireNonNull(scheduleOptions);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }

        public GetTransferConfigResult build() {
            return new GetTransferConfigResult(dataRefreshWindowDays, dataSourceId, datasetRegion, destinationDatasetId, disabled, displayName, emailPreferences, name, nextRunTime, notificationPubsubTopic, ownerInfo, params, schedule, scheduleOptions, state, updateTime);
        }
    }
}
