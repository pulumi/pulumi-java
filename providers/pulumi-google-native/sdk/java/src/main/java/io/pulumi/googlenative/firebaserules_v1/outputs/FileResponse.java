// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.firebaserules_v1.outputs;

import io.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class FileResponse {
    /**
     * Textual Content.
     * 
     */
    private final String content;
    /**
     * Fingerprint (e.g. github sha) associated with the `File`.
     * 
     */
    private final String fingerprint;
    /**
     * File name.
     * 
     */
    private final String name;

    @CustomType.Constructor
    private FileResponse(
        @CustomType.Parameter("content") String content,
        @CustomType.Parameter("fingerprint") String fingerprint,
        @CustomType.Parameter("name") String name) {
        this.content = content;
        this.fingerprint = fingerprint;
        this.name = name;
    }

    /**
     * Textual Content.
     * 
    */
    public String getContent() {
        return this.content;
    }
    /**
     * Fingerprint (e.g. github sha) associated with the `File`.
     * 
    */
    public String getFingerprint() {
        return this.fingerprint;
    }
    /**
     * File name.
     * 
    */
    public String getName() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String content;
        private String fingerprint;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(FileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.fingerprint = defaults.fingerprint;
    	      this.name = defaults.name;
        }

        public Builder content(String content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }
        public Builder fingerprint(String fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public FileResponse build() {
            return new FileResponse(content, fingerprint, name);
        }
    }
}
