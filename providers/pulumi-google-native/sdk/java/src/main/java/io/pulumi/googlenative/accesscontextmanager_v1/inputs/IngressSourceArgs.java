// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.accesscontextmanager_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The source that IngressPolicy authorizes access from.
 * 
 */
public final class IngressSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final IngressSourceArgs Empty = new IngressSourceArgs();

    /**
     * An AccessLevel resource name that allow resources within the ServicePerimeters to be accessed from the internet. AccessLevels listed must be in the same policy as this ServicePerimeter. Referencing a nonexistent AccessLevel will cause an error. If no AccessLevel names are listed, resources within the perimeter can only be accessed via Google Cloud calls with request origins within the perimeter. Example: `accessPolicies/MY_POLICY/accessLevels/MY_LEVEL`. If a single `*` is specified for `access_level`, then all IngressSources will be allowed.
     * 
     */
    @InputImport(name="accessLevel")
      private final @Nullable Output<String> accessLevel;

    public Output<String> getAccessLevel() {
        return this.accessLevel == null ? Output.empty() : this.accessLevel;
    }

    /**
     * A Google Cloud resource that is allowed to ingress the perimeter. Requests from these resources will be allowed to access perimeter data. Currently only projects are allowed. Format: `projects/{project_number}` The project may be in any Google Cloud organization, not just the organization that the perimeter is defined in. `*` is not allowed, the case of allowing all Google Cloud resources only is not supported.
     * 
     */
    @InputImport(name="resource")
      private final @Nullable Output<String> resource;

    public Output<String> getResource() {
        return this.resource == null ? Output.empty() : this.resource;
    }

    public IngressSourceArgs(
        @Nullable Output<String> accessLevel,
        @Nullable Output<String> resource) {
        this.accessLevel = accessLevel;
        this.resource = resource;
    }

    private IngressSourceArgs() {
        this.accessLevel = Output.empty();
        this.resource = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IngressSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> accessLevel;
        private @Nullable Output<String> resource;

        public Builder() {
    	      // Empty
        }

        public Builder(IngressSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.resource = defaults.resource;
        }

        public Builder accessLevel(@Nullable Output<String> accessLevel) {
            this.accessLevel = accessLevel;
            return this;
        }

        public Builder accessLevel(@Nullable String accessLevel) {
            this.accessLevel = Output.ofNullable(accessLevel);
            return this;
        }

        public Builder resource(@Nullable Output<String> resource) {
            this.resource = resource;
            return this;
        }

        public Builder resource(@Nullable String resource) {
            this.resource = Output.ofNullable(resource);
            return this;
        }
        public IngressSourceArgs build() {
            return new IngressSourceArgs(accessLevel, resource);
        }
    }
}
