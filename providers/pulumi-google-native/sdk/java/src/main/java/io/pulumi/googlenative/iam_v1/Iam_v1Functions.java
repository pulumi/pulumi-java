// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.iam_v1;

import io.pulumi.core.TypeShape;
import io.pulumi.deployment.Deployment;
import io.pulumi.deployment.InvokeOptions;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.iam_v1.inputs.GetKeyArgs;
import io.pulumi.googlenative.iam_v1.inputs.GetOrganizationRoleArgs;
import io.pulumi.googlenative.iam_v1.inputs.GetProviderArgs;
import io.pulumi.googlenative.iam_v1.inputs.GetRoleArgs;
import io.pulumi.googlenative.iam_v1.inputs.GetServiceAccountArgs;
import io.pulumi.googlenative.iam_v1.inputs.GetServiceAccountIamPolicyArgs;
import io.pulumi.googlenative.iam_v1.inputs.GetWorkloadIdentityPoolArgs;
import io.pulumi.googlenative.iam_v1.outputs.GetKeyResult;
import io.pulumi.googlenative.iam_v1.outputs.GetOrganizationRoleResult;
import io.pulumi.googlenative.iam_v1.outputs.GetProviderResult;
import io.pulumi.googlenative.iam_v1.outputs.GetRoleResult;
import io.pulumi.googlenative.iam_v1.outputs.GetServiceAccountIamPolicyResult;
import io.pulumi.googlenative.iam_v1.outputs.GetServiceAccountResult;
import io.pulumi.googlenative.iam_v1.outputs.GetWorkloadIdentityPoolResult;
import java.util.concurrent.CompletableFuture;

public final class Iam_v1Functions {
    /**
     * Gets a ServiceAccountKey.
     * 
     */
    public static CompletableFuture<GetKeyResult> getKey(GetKeyArgs args) {
        return getKey(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetKeyResult> getKey(GetKeyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:iam/v1:getKey", TypeShape.of(GetKeyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the definition of a Role.
     * 
     */
    public static CompletableFuture<GetOrganizationRoleResult> getOrganizationRole(GetOrganizationRoleArgs args) {
        return getOrganizationRole(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetOrganizationRoleResult> getOrganizationRole(GetOrganizationRoleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:iam/v1:getOrganizationRole", TypeShape.of(GetOrganizationRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets an individual WorkloadIdentityPoolProvider.
     * 
     */
    public static CompletableFuture<GetProviderResult> getProvider(GetProviderArgs args) {
        return getProvider(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetProviderResult> getProvider(GetProviderArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:iam/v1:getProvider", TypeShape.of(GetProviderResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the definition of a Role.
     * 
     */
    public static CompletableFuture<GetRoleResult> getRole(GetRoleArgs args) {
        return getRole(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetRoleResult> getRole(GetRoleArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:iam/v1:getRole", TypeShape.of(GetRoleResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets a ServiceAccount.
     * 
     */
    public static CompletableFuture<GetServiceAccountResult> getServiceAccount(GetServiceAccountArgs args) {
        return getServiceAccount(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetServiceAccountResult> getServiceAccount(GetServiceAccountArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:iam/v1:getServiceAccount", TypeShape.of(GetServiceAccountResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets the IAM policy that is attached to a ServiceAccount. This IAM policy specifies which principals have access to the service account. This method does not tell you whether the service account has been granted any roles on other resources. To check whether a service account has role grants on a resource, use the `getIamPolicy` method for that resource. For example, to view the role grants for a project, call the Resource Manager API's [`projects.getIamPolicy`](https://cloud.google.com/resource-manager/reference/rest/v1/projects/getIamPolicy) method.
     * 
     */
    public static CompletableFuture<GetServiceAccountIamPolicyResult> getServiceAccountIamPolicy(GetServiceAccountIamPolicyArgs args) {
        return getServiceAccountIamPolicy(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetServiceAccountIamPolicyResult> getServiceAccountIamPolicy(GetServiceAccountIamPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:iam/v1:getServiceAccountIamPolicy", TypeShape.of(GetServiceAccountIamPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Gets an individual WorkloadIdentityPool.
     * 
     */
    public static CompletableFuture<GetWorkloadIdentityPoolResult> getWorkloadIdentityPool(GetWorkloadIdentityPoolArgs args) {
        return getWorkloadIdentityPool(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetWorkloadIdentityPoolResult> getWorkloadIdentityPool(GetWorkloadIdentityPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("google-native:iam/v1:getWorkloadIdentityPool", TypeShape.of(GetWorkloadIdentityPoolResult.class), args, Utilities.withVersion(options));
    }
}
