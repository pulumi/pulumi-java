// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v3.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Istio service scoped to a single Kubernetes cluster. Learn more at https://istio.io. Clusters running OSS Istio will have their services ingested as this type.
 * 
 */
public final class ClusterIstioArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterIstioArgs Empty = new ClusterIstioArgs();

    /**
     * The name of the Kubernetes cluster in which this Istio service is defined. Corresponds to the cluster_name resource label in k8s_cluster resources.
     * 
     */
    @InputImport(name="clusterName")
      private final @Nullable Input<String> clusterName;

    public Input<String> getClusterName() {
        return this.clusterName == null ? Input.empty() : this.clusterName;
    }

    /**
     * The location of the Kubernetes cluster in which this Istio service is defined. Corresponds to the location resource label in k8s_cluster resources.
     * 
     */
    @InputImport(name="location")
      private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * The name of the Istio service underlying this service. Corresponds to the destination_service_name metric label in Istio metrics.
     * 
     */
    @InputImport(name="serviceName")
      private final @Nullable Input<String> serviceName;

    public Input<String> getServiceName() {
        return this.serviceName == null ? Input.empty() : this.serviceName;
    }

    /**
     * The namespace of the Istio service underlying this service. Corresponds to the destination_service_namespace metric label in Istio metrics.
     * 
     */
    @InputImport(name="serviceNamespace")
      private final @Nullable Input<String> serviceNamespace;

    public Input<String> getServiceNamespace() {
        return this.serviceNamespace == null ? Input.empty() : this.serviceNamespace;
    }

    public ClusterIstioArgs(
        @Nullable Input<String> clusterName,
        @Nullable Input<String> location,
        @Nullable Input<String> serviceName,
        @Nullable Input<String> serviceNamespace) {
        this.clusterName = clusterName;
        this.location = location;
        this.serviceName = serviceName;
        this.serviceNamespace = serviceNamespace;
    }

    private ClusterIstioArgs() {
        this.clusterName = Input.empty();
        this.location = Input.empty();
        this.serviceName = Input.empty();
        this.serviceNamespace = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterIstioArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> clusterName;
        private @Nullable Input<String> location;
        private @Nullable Input<String> serviceName;
        private @Nullable Input<String> serviceNamespace;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterIstioArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterName = defaults.clusterName;
    	      this.location = defaults.location;
    	      this.serviceName = defaults.serviceName;
    	      this.serviceNamespace = defaults.serviceNamespace;
        }

        public Builder clusterName(@Nullable Input<String> clusterName) {
            this.clusterName = clusterName;
            return this;
        }

        public Builder clusterName(@Nullable String clusterName) {
            this.clusterName = Input.ofNullable(clusterName);
            return this;
        }

        public Builder location(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder serviceName(@Nullable Input<String> serviceName) {
            this.serviceName = serviceName;
            return this;
        }

        public Builder serviceName(@Nullable String serviceName) {
            this.serviceName = Input.ofNullable(serviceName);
            return this;
        }

        public Builder serviceNamespace(@Nullable Input<String> serviceNamespace) {
            this.serviceNamespace = serviceNamespace;
            return this;
        }

        public Builder serviceNamespace(@Nullable String serviceNamespace) {
            this.serviceNamespace = Input.ofNullable(serviceNamespace);
            return this;
        }
        public ClusterIstioArgs build() {
            return new ClusterIstioArgs(clusterName, location, serviceName, serviceNamespace);
        }
    }
}
