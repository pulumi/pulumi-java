// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.container_v1beta1.outputs.ClientCertificateConfigResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class MasterAuthResponse {
    private final String clientCertificate;
    private final ClientCertificateConfigResponse clientCertificateConfig;
    private final String clientKey;
    private final String clusterCaCertificate;
    private final String password;
    private final String username;

    @OutputCustomType.Constructor({"clientCertificate","clientCertificateConfig","clientKey","clusterCaCertificate","password","username"})
    private MasterAuthResponse(
        String clientCertificate,
        ClientCertificateConfigResponse clientCertificateConfig,
        String clientKey,
        String clusterCaCertificate,
        String password,
        String username) {
        this.clientCertificate = Objects.requireNonNull(clientCertificate);
        this.clientCertificateConfig = Objects.requireNonNull(clientCertificateConfig);
        this.clientKey = Objects.requireNonNull(clientKey);
        this.clusterCaCertificate = Objects.requireNonNull(clusterCaCertificate);
        this.password = Objects.requireNonNull(password);
        this.username = Objects.requireNonNull(username);
    }

    public String getClientCertificate() {
        return this.clientCertificate;
    }
    public ClientCertificateConfigResponse getClientCertificateConfig() {
        return this.clientCertificateConfig;
    }
    public String getClientKey() {
        return this.clientKey;
    }
    public String getClusterCaCertificate() {
        return this.clusterCaCertificate;
    }
    public String getPassword() {
        return this.password;
    }
    public String getUsername() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MasterAuthResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String clientCertificate;
        private ClientCertificateConfigResponse clientCertificateConfig;
        private String clientKey;
        private String clusterCaCertificate;
        private String password;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(MasterAuthResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientCertificate = defaults.clientCertificate;
    	      this.clientCertificateConfig = defaults.clientCertificateConfig;
    	      this.clientKey = defaults.clientKey;
    	      this.clusterCaCertificate = defaults.clusterCaCertificate;
    	      this.password = defaults.password;
    	      this.username = defaults.username;
        }

        public Builder setClientCertificate(String clientCertificate) {
            this.clientCertificate = Objects.requireNonNull(clientCertificate);
            return this;
        }

        public Builder setClientCertificateConfig(ClientCertificateConfigResponse clientCertificateConfig) {
            this.clientCertificateConfig = Objects.requireNonNull(clientCertificateConfig);
            return this;
        }

        public Builder setClientKey(String clientKey) {
            this.clientKey = Objects.requireNonNull(clientKey);
            return this;
        }

        public Builder setClusterCaCertificate(String clusterCaCertificate) {
            this.clusterCaCertificate = Objects.requireNonNull(clusterCaCertificate);
            return this;
        }

        public Builder setPassword(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }

        public Builder setUsername(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }

        public MasterAuthResponse build() {
            return new MasterAuthResponse(clientCertificate, clientCertificateConfig, clientKey, clusterCaCertificate, password, username);
        }
    }
}
