// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.domains_v1alpha2.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.domains_v1alpha2.enums.DsRecordAlgorithm;
import io.pulumi.googlenative.domains_v1alpha2.enums.DsRecordDigestType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Defines a Delegation Signer (DS) record, which is needed to enable DNSSEC for a domain. It contains a digest (hash) of a DNSKEY record that must be present in the domain's DNS zone.
 * 
 */
public final class DsRecordArgs extends io.pulumi.resources.ResourceArgs {

    public static final DsRecordArgs Empty = new DsRecordArgs();

    /**
     * The algorithm used to generate the referenced DNSKEY.
     * 
     */
    @Import(name="algorithm")
      private final @Nullable Output<DsRecordAlgorithm> algorithm;

    public Output<DsRecordAlgorithm> getAlgorithm() {
        return this.algorithm == null ? Output.empty() : this.algorithm;
    }

    /**
     * The digest generated from the referenced DNSKEY.
     * 
     */
    @Import(name="digest")
      private final @Nullable Output<String> digest;

    public Output<String> getDigest() {
        return this.digest == null ? Output.empty() : this.digest;
    }

    /**
     * The hash function used to generate the digest of the referenced DNSKEY.
     * 
     */
    @Import(name="digestType")
      private final @Nullable Output<DsRecordDigestType> digestType;

    public Output<DsRecordDigestType> getDigestType() {
        return this.digestType == null ? Output.empty() : this.digestType;
    }

    /**
     * The key tag of the record. Must be set in range 0 -- 65535.
     * 
     */
    @Import(name="keyTag")
      private final @Nullable Output<Integer> keyTag;

    public Output<Integer> getKeyTag() {
        return this.keyTag == null ? Output.empty() : this.keyTag;
    }

    public DsRecordArgs(
        @Nullable Output<DsRecordAlgorithm> algorithm,
        @Nullable Output<String> digest,
        @Nullable Output<DsRecordDigestType> digestType,
        @Nullable Output<Integer> keyTag) {
        this.algorithm = algorithm;
        this.digest = digest;
        this.digestType = digestType;
        this.keyTag = keyTag;
    }

    private DsRecordArgs() {
        this.algorithm = Output.empty();
        this.digest = Output.empty();
        this.digestType = Output.empty();
        this.keyTag = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DsRecordArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<DsRecordAlgorithm> algorithm;
        private @Nullable Output<String> digest;
        private @Nullable Output<DsRecordDigestType> digestType;
        private @Nullable Output<Integer> keyTag;

        public Builder() {
    	      // Empty
        }

        public Builder(DsRecordArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.digest = defaults.digest;
    	      this.digestType = defaults.digestType;
    	      this.keyTag = defaults.keyTag;
        }

        public Builder algorithm(@Nullable Output<DsRecordAlgorithm> algorithm) {
            this.algorithm = algorithm;
            return this;
        }
        public Builder algorithm(@Nullable DsRecordAlgorithm algorithm) {
            this.algorithm = Output.ofNullable(algorithm);
            return this;
        }
        public Builder digest(@Nullable Output<String> digest) {
            this.digest = digest;
            return this;
        }
        public Builder digest(@Nullable String digest) {
            this.digest = Output.ofNullable(digest);
            return this;
        }
        public Builder digestType(@Nullable Output<DsRecordDigestType> digestType) {
            this.digestType = digestType;
            return this;
        }
        public Builder digestType(@Nullable DsRecordDigestType digestType) {
            this.digestType = Output.ofNullable(digestType);
            return this;
        }
        public Builder keyTag(@Nullable Output<Integer> keyTag) {
            this.keyTag = keyTag;
            return this;
        }
        public Builder keyTag(@Nullable Integer keyTag) {
            this.keyTag = Output.ofNullable(keyTag);
            return this;
        }        public DsRecordArgs build() {
            return new DsRecordArgs(algorithm, digest, digestType, keyTag);
        }
    }
}
