// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.networkconnectivity_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.networkconnectivity_v1.outputs.RoutingVPCResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetHubResult {
    /**
     * The time the hub was created.
     * 
     */
    private final String createTime;
    /**
     * An optional description of the hub.
     * 
     */
    private final String description;
    /**
     * Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
     * 
     */
    private final Map<String,String> labels;
    /**
     * Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`
     * 
     */
    private final String name;
    /**
     * The VPC networks associated with this hub's spokes. This field is read-only. Network Connectivity Center automatically populates it based on the set of spokes attached to the hub.
     * 
     */
    private final List<RoutingVPCResponse> routingVpcs;
    /**
     * The current lifecycle state of this hub.
     * 
     */
    private final String state;
    /**
     * The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted and another with the same name is created, the new hub is assigned a different unique_id.
     * 
     */
    private final String uniqueId;
    /**
     * The time the hub was last updated.
     * 
     */
    private final String updateTime;

    @OutputCustomType.Constructor({"createTime","description","labels","name","routingVpcs","state","uniqueId","updateTime"})
    private GetHubResult(
        String createTime,
        String description,
        Map<String,String> labels,
        String name,
        List<RoutingVPCResponse> routingVpcs,
        String state,
        String uniqueId,
        String updateTime) {
        this.createTime = Objects.requireNonNull(createTime);
        this.description = Objects.requireNonNull(description);
        this.labels = Objects.requireNonNull(labels);
        this.name = Objects.requireNonNull(name);
        this.routingVpcs = Objects.requireNonNull(routingVpcs);
        this.state = Objects.requireNonNull(state);
        this.uniqueId = Objects.requireNonNull(uniqueId);
        this.updateTime = Objects.requireNonNull(updateTime);
    }

    /**
     * The time the hub was created.
     * 
     */
    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * An optional description of the hub.
     * 
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).
     * 
     */
    public Map<String,String> getLabels() {
        return this.labels;
    }
    /**
     * Immutable. The name of the hub. Hub names must be unique. They use the following form: `projects/{project_number}/locations/global/hubs/{hub_id}`
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * The VPC networks associated with this hub's spokes. This field is read-only. Network Connectivity Center automatically populates it based on the set of spokes attached to the hub.
     * 
     */
    public List<RoutingVPCResponse> getRoutingVpcs() {
        return this.routingVpcs;
    }
    /**
     * The current lifecycle state of this hub.
     * 
     */
    public String getState() {
        return this.state;
    }
    /**
     * The Google-generated UUID for the hub. This value is unique across all hub resources. If a hub is deleted and another with the same name is created, the new hub is assigned a different unique_id.
     * 
     */
    public String getUniqueId() {
        return this.uniqueId;
    }
    /**
     * The time the hub was last updated.
     * 
     */
    public String getUpdateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHubResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String description;
        private Map<String,String> labels;
        private String name;
        private List<RoutingVPCResponse> routingVpcs;
        private String state;
        private String uniqueId;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHubResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.routingVpcs = defaults.routingVpcs;
    	      this.state = defaults.state;
    	      this.uniqueId = defaults.uniqueId;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRoutingVpcs(List<RoutingVPCResponse> routingVpcs) {
            this.routingVpcs = Objects.requireNonNull(routingVpcs);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setUniqueId(String uniqueId) {
            this.uniqueId = Objects.requireNonNull(uniqueId);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }

        public GetHubResult build() {
            return new GetHubResult(createTime, description, labels, name, routingVpcs, state, uniqueId, updateTime);
        }
    }
}
