// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.compute_alpha.enums.TlsCertificateContextCertificateSource;
import io.pulumi.googlenative.compute_alpha.inputs.SdsConfigArgs;
import io.pulumi.googlenative.compute_alpha.inputs.TlsCertificatePathsArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TlsCertificateContextArgs extends io.pulumi.resources.ResourceArgs {

    public static final TlsCertificateContextArgs Empty = new TlsCertificateContextArgs();

    @InputImport(name="certificatePaths")
    private final @Nullable Input<TlsCertificatePathsArgs> certificatePaths;

    public Input<TlsCertificatePathsArgs> getCertificatePaths() {
        return this.certificatePaths == null ? Input.empty() : this.certificatePaths;
    }

    @InputImport(name="certificateSource")
    private final @Nullable Input<TlsCertificateContextCertificateSource> certificateSource;

    public Input<TlsCertificateContextCertificateSource> getCertificateSource() {
        return this.certificateSource == null ? Input.empty() : this.certificateSource;
    }

    @InputImport(name="sdsConfig")
    private final @Nullable Input<SdsConfigArgs> sdsConfig;

    public Input<SdsConfigArgs> getSdsConfig() {
        return this.sdsConfig == null ? Input.empty() : this.sdsConfig;
    }

    public TlsCertificateContextArgs(
        @Nullable Input<TlsCertificatePathsArgs> certificatePaths,
        @Nullable Input<TlsCertificateContextCertificateSource> certificateSource,
        @Nullable Input<SdsConfigArgs> sdsConfig) {
        this.certificatePaths = certificatePaths;
        this.certificateSource = certificateSource;
        this.sdsConfig = sdsConfig;
    }

    private TlsCertificateContextArgs() {
        this.certificatePaths = Input.empty();
        this.certificateSource = Input.empty();
        this.sdsConfig = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TlsCertificateContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<TlsCertificatePathsArgs> certificatePaths;
        private @Nullable Input<TlsCertificateContextCertificateSource> certificateSource;
        private @Nullable Input<SdsConfigArgs> sdsConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(TlsCertificateContextArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificatePaths = defaults.certificatePaths;
    	      this.certificateSource = defaults.certificateSource;
    	      this.sdsConfig = defaults.sdsConfig;
        }

        public Builder setCertificatePaths(@Nullable Input<TlsCertificatePathsArgs> certificatePaths) {
            this.certificatePaths = certificatePaths;
            return this;
        }

        public Builder setCertificatePaths(@Nullable TlsCertificatePathsArgs certificatePaths) {
            this.certificatePaths = Input.ofNullable(certificatePaths);
            return this;
        }

        public Builder setCertificateSource(@Nullable Input<TlsCertificateContextCertificateSource> certificateSource) {
            this.certificateSource = certificateSource;
            return this;
        }

        public Builder setCertificateSource(@Nullable TlsCertificateContextCertificateSource certificateSource) {
            this.certificateSource = Input.ofNullable(certificateSource);
            return this;
        }

        public Builder setSdsConfig(@Nullable Input<SdsConfigArgs> sdsConfig) {
            this.sdsConfig = sdsConfig;
            return this;
        }

        public Builder setSdsConfig(@Nullable SdsConfigArgs sdsConfig) {
            this.sdsConfig = Input.ofNullable(sdsConfig);
            return this;
        }

        public TlsCertificateContextArgs build() {
            return new TlsCertificateContextArgs(certificatePaths, certificateSource, sdsConfig);
        }
    }
}
