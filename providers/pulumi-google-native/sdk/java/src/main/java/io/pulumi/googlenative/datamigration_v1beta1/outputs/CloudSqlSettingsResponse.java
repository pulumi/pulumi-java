// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datamigration_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.datamigration_v1beta1.outputs.SqlIpConfigResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class CloudSqlSettingsResponse {
    private final String activationPolicy;
    private final Boolean autoStorageIncrease;
    private final String dataDiskSizeGb;
    private final String dataDiskType;
    private final Map<String,String> databaseFlags;
    private final String databaseVersion;
    private final SqlIpConfigResponse ipConfig;
    private final String rootPassword;
    private final Boolean rootPasswordSet;
    private final String sourceId;
    private final String storageAutoResizeLimit;
    private final String tier;
    private final Map<String,String> userLabels;
    private final String zone;

    @OutputCustomType.Constructor({"activationPolicy","autoStorageIncrease","dataDiskSizeGb","dataDiskType","databaseFlags","databaseVersion","ipConfig","rootPassword","rootPasswordSet","sourceId","storageAutoResizeLimit","tier","userLabels","zone"})
    private CloudSqlSettingsResponse(
        String activationPolicy,
        Boolean autoStorageIncrease,
        String dataDiskSizeGb,
        String dataDiskType,
        Map<String,String> databaseFlags,
        String databaseVersion,
        SqlIpConfigResponse ipConfig,
        String rootPassword,
        Boolean rootPasswordSet,
        String sourceId,
        String storageAutoResizeLimit,
        String tier,
        Map<String,String> userLabels,
        String zone) {
        this.activationPolicy = Objects.requireNonNull(activationPolicy);
        this.autoStorageIncrease = Objects.requireNonNull(autoStorageIncrease);
        this.dataDiskSizeGb = Objects.requireNonNull(dataDiskSizeGb);
        this.dataDiskType = Objects.requireNonNull(dataDiskType);
        this.databaseFlags = Objects.requireNonNull(databaseFlags);
        this.databaseVersion = Objects.requireNonNull(databaseVersion);
        this.ipConfig = Objects.requireNonNull(ipConfig);
        this.rootPassword = Objects.requireNonNull(rootPassword);
        this.rootPasswordSet = Objects.requireNonNull(rootPasswordSet);
        this.sourceId = Objects.requireNonNull(sourceId);
        this.storageAutoResizeLimit = Objects.requireNonNull(storageAutoResizeLimit);
        this.tier = Objects.requireNonNull(tier);
        this.userLabels = Objects.requireNonNull(userLabels);
        this.zone = Objects.requireNonNull(zone);
    }

    public String getActivationPolicy() {
        return this.activationPolicy;
    }
    public Boolean getAutoStorageIncrease() {
        return this.autoStorageIncrease;
    }
    public String getDataDiskSizeGb() {
        return this.dataDiskSizeGb;
    }
    public String getDataDiskType() {
        return this.dataDiskType;
    }
    public Map<String,String> getDatabaseFlags() {
        return this.databaseFlags;
    }
    public String getDatabaseVersion() {
        return this.databaseVersion;
    }
    public SqlIpConfigResponse getIpConfig() {
        return this.ipConfig;
    }
    public String getRootPassword() {
        return this.rootPassword;
    }
    public Boolean getRootPasswordSet() {
        return this.rootPasswordSet;
    }
    public String getSourceId() {
        return this.sourceId;
    }
    public String getStorageAutoResizeLimit() {
        return this.storageAutoResizeLimit;
    }
    public String getTier() {
        return this.tier;
    }
    public Map<String,String> getUserLabels() {
        return this.userLabels;
    }
    public String getZone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudSqlSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String activationPolicy;
        private Boolean autoStorageIncrease;
        private String dataDiskSizeGb;
        private String dataDiskType;
        private Map<String,String> databaseFlags;
        private String databaseVersion;
        private SqlIpConfigResponse ipConfig;
        private String rootPassword;
        private Boolean rootPasswordSet;
        private String sourceId;
        private String storageAutoResizeLimit;
        private String tier;
        private Map<String,String> userLabels;
        private String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(CloudSqlSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activationPolicy = defaults.activationPolicy;
    	      this.autoStorageIncrease = defaults.autoStorageIncrease;
    	      this.dataDiskSizeGb = defaults.dataDiskSizeGb;
    	      this.dataDiskType = defaults.dataDiskType;
    	      this.databaseFlags = defaults.databaseFlags;
    	      this.databaseVersion = defaults.databaseVersion;
    	      this.ipConfig = defaults.ipConfig;
    	      this.rootPassword = defaults.rootPassword;
    	      this.rootPasswordSet = defaults.rootPasswordSet;
    	      this.sourceId = defaults.sourceId;
    	      this.storageAutoResizeLimit = defaults.storageAutoResizeLimit;
    	      this.tier = defaults.tier;
    	      this.userLabels = defaults.userLabels;
    	      this.zone = defaults.zone;
        }

        public Builder setActivationPolicy(String activationPolicy) {
            this.activationPolicy = Objects.requireNonNull(activationPolicy);
            return this;
        }

        public Builder setAutoStorageIncrease(Boolean autoStorageIncrease) {
            this.autoStorageIncrease = Objects.requireNonNull(autoStorageIncrease);
            return this;
        }

        public Builder setDataDiskSizeGb(String dataDiskSizeGb) {
            this.dataDiskSizeGb = Objects.requireNonNull(dataDiskSizeGb);
            return this;
        }

        public Builder setDataDiskType(String dataDiskType) {
            this.dataDiskType = Objects.requireNonNull(dataDiskType);
            return this;
        }

        public Builder setDatabaseFlags(Map<String,String> databaseFlags) {
            this.databaseFlags = Objects.requireNonNull(databaseFlags);
            return this;
        }

        public Builder setDatabaseVersion(String databaseVersion) {
            this.databaseVersion = Objects.requireNonNull(databaseVersion);
            return this;
        }

        public Builder setIpConfig(SqlIpConfigResponse ipConfig) {
            this.ipConfig = Objects.requireNonNull(ipConfig);
            return this;
        }

        public Builder setRootPassword(String rootPassword) {
            this.rootPassword = Objects.requireNonNull(rootPassword);
            return this;
        }

        public Builder setRootPasswordSet(Boolean rootPasswordSet) {
            this.rootPasswordSet = Objects.requireNonNull(rootPasswordSet);
            return this;
        }

        public Builder setSourceId(String sourceId) {
            this.sourceId = Objects.requireNonNull(sourceId);
            return this;
        }

        public Builder setStorageAutoResizeLimit(String storageAutoResizeLimit) {
            this.storageAutoResizeLimit = Objects.requireNonNull(storageAutoResizeLimit);
            return this;
        }

        public Builder setTier(String tier) {
            this.tier = Objects.requireNonNull(tier);
            return this;
        }

        public Builder setUserLabels(Map<String,String> userLabels) {
            this.userLabels = Objects.requireNonNull(userLabels);
            return this;
        }

        public Builder setZone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }

        public CloudSqlSettingsResponse build() {
            return new CloudSqlSettingsResponse(activationPolicy, autoStorageIncrease, dataDiskSizeGb, dataDiskType, databaseFlags, databaseVersion, ipConfig, rootPassword, rootPasswordSet, sourceId, storageAutoResizeLimit, tier, userLabels, zone);
        }
    }
}
