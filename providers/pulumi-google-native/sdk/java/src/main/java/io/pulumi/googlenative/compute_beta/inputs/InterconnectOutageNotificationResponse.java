// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class InterconnectOutageNotificationResponse extends io.pulumi.resources.InvokeArgs {

    public static final InterconnectOutageNotificationResponse Empty = new InterconnectOutageNotificationResponse();

    @InputImport(name="affectedCircuits", required=true)
    private final List<String> affectedCircuits;

    public List<String> getAffectedCircuits() {
        return this.affectedCircuits;
    }

    @InputImport(name="description", required=true)
    private final String description;

    public String getDescription() {
        return this.description;
    }

    @InputImport(name="endTime", required=true)
    private final String endTime;

    public String getEndTime() {
        return this.endTime;
    }

    @InputImport(name="issueType", required=true)
    private final String issueType;

    public String getIssueType() {
        return this.issueType;
    }

    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    @InputImport(name="source", required=true)
    private final String source;

    public String getSource() {
        return this.source;
    }

    @InputImport(name="startTime", required=true)
    private final String startTime;

    public String getStartTime() {
        return this.startTime;
    }

    @InputImport(name="state", required=true)
    private final String state;

    public String getState() {
        return this.state;
    }

    public InterconnectOutageNotificationResponse(
        List<String> affectedCircuits,
        String description,
        String endTime,
        String issueType,
        String name,
        String source,
        String startTime,
        String state) {
        this.affectedCircuits = Objects.requireNonNull(affectedCircuits, "expected parameter 'affectedCircuits' to be non-null");
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
        this.endTime = Objects.requireNonNull(endTime, "expected parameter 'endTime' to be non-null");
        this.issueType = Objects.requireNonNull(issueType, "expected parameter 'issueType' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.source = Objects.requireNonNull(source, "expected parameter 'source' to be non-null");
        this.startTime = Objects.requireNonNull(startTime, "expected parameter 'startTime' to be non-null");
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
    }

    private InterconnectOutageNotificationResponse() {
        this.affectedCircuits = List.of();
        this.description = null;
        this.endTime = null;
        this.issueType = null;
        this.name = null;
        this.source = null;
        this.startTime = null;
        this.state = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InterconnectOutageNotificationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> affectedCircuits;
        private String description;
        private String endTime;
        private String issueType;
        private String name;
        private String source;
        private String startTime;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(InterconnectOutageNotificationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.affectedCircuits = defaults.affectedCircuits;
    	      this.description = defaults.description;
    	      this.endTime = defaults.endTime;
    	      this.issueType = defaults.issueType;
    	      this.name = defaults.name;
    	      this.source = defaults.source;
    	      this.startTime = defaults.startTime;
    	      this.state = defaults.state;
        }

        public Builder setAffectedCircuits(List<String> affectedCircuits) {
            this.affectedCircuits = Objects.requireNonNull(affectedCircuits);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setEndTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }

        public Builder setIssueType(String issueType) {
            this.issueType = Objects.requireNonNull(issueType);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSource(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }

        public Builder setStartTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public InterconnectOutageNotificationResponse build() {
            return new InterconnectOutageNotificationResponse(affectedCircuits, description, endTime, issueType, name, source, startTime, state);
        }
    }
}
