// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.billingbudgets_v1beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.billingbudgets_v1beta1.enums.GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasis;
import java.lang.Double;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * ThresholdRule contains the definition of a threshold. Threshold rules define the triggering events used to generate a budget notification email. When a threshold is crossed (spend exceeds the specified percentages of the budget), budget alert emails are sent to the email recipients you specify in the [NotificationsRule](#notificationsrule). Threshold rules also affect the fields included in the [JSON data object](https://cloud.google.com/billing/docs/how-to/budgets-programmatic-notifications#notification_format) sent to a Pub/Sub topic. Threshold rules are _required_ if using email notifications. Threshold rules are _optional_ if only setting a [`pubsubTopic` NotificationsRule](#NotificationsRule), unless you want your JSON data object to include data about the thresholds you set. For more information, see [set budget threshold rules and actions](https://cloud.google.com/billing/docs/how-to/budgets#budget-actions).
 * 
 */
public final class GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs Empty = new GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs();

    /**
     * Optional. The type of basis used to determine if spend has passed the threshold. Behavior defaults to CURRENT_SPEND if not set.
     * 
     */
    @Import(name="spendBasis")
      private final @Nullable Output<GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasis> spendBasis;

    public Output<GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasis> getSpendBasis() {
        return this.spendBasis == null ? Output.empty() : this.spendBasis;
    }

    /**
     * Send an alert when this threshold is exceeded. This is a 1.0-based percentage, so 0.5 = 50%. Validation: non-negative number.
     * 
     */
    @Import(name="thresholdPercent", required=true)
      private final Output<Double> thresholdPercent;

    public Output<Double> getThresholdPercent() {
        return this.thresholdPercent;
    }

    public GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs(
        @Nullable Output<GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasis> spendBasis,
        Output<Double> thresholdPercent) {
        this.spendBasis = spendBasis;
        this.thresholdPercent = Objects.requireNonNull(thresholdPercent, "expected parameter 'thresholdPercent' to be non-null");
    }

    private GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs() {
        this.spendBasis = Output.empty();
        this.thresholdPercent = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasis> spendBasis;
        private Output<Double> thresholdPercent;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.spendBasis = defaults.spendBasis;
    	      this.thresholdPercent = defaults.thresholdPercent;
        }

        public Builder spendBasis(@Nullable Output<GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasis> spendBasis) {
            this.spendBasis = spendBasis;
            return this;
        }

        public Builder spendBasis(@Nullable GoogleCloudBillingBudgetsV1beta1ThresholdRuleSpendBasis spendBasis) {
            this.spendBasis = Output.ofNullable(spendBasis);
            return this;
        }

        public Builder thresholdPercent(Output<Double> thresholdPercent) {
            this.thresholdPercent = Objects.requireNonNull(thresholdPercent);
            return this;
        }

        public Builder thresholdPercent(Double thresholdPercent) {
            this.thresholdPercent = Output.of(Objects.requireNonNull(thresholdPercent));
            return this;
        }
        public GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs build() {
            return new GoogleCloudBillingBudgetsV1beta1ThresholdRuleArgs(spendBasis, thresholdPercent);
        }
    }
}
