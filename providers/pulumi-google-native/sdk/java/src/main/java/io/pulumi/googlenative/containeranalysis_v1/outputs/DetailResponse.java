// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.containeranalysis_v1.outputs.VersionResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class DetailResponse {
    private final String affectedCpeUri;
    private final String affectedPackage;
    private final VersionResponse affectedVersionEnd;
    private final VersionResponse affectedVersionStart;
    private final String description;
    private final String fixedCpeUri;
    private final String fixedPackage;
    private final VersionResponse fixedVersion;
    private final Boolean isObsolete;
    private final String packageType;
    private final String severityName;
    private final String source;
    private final String sourceUpdateTime;
    private final String vendor;

    @OutputCustomType.Constructor({"affectedCpeUri","affectedPackage","affectedVersionEnd","affectedVersionStart","description","fixedCpeUri","fixedPackage","fixedVersion","isObsolete","packageType","severityName","source","sourceUpdateTime","vendor"})
    private DetailResponse(
        String affectedCpeUri,
        String affectedPackage,
        VersionResponse affectedVersionEnd,
        VersionResponse affectedVersionStart,
        String description,
        String fixedCpeUri,
        String fixedPackage,
        VersionResponse fixedVersion,
        Boolean isObsolete,
        String packageType,
        String severityName,
        String source,
        String sourceUpdateTime,
        String vendor) {
        this.affectedCpeUri = Objects.requireNonNull(affectedCpeUri);
        this.affectedPackage = Objects.requireNonNull(affectedPackage);
        this.affectedVersionEnd = Objects.requireNonNull(affectedVersionEnd);
        this.affectedVersionStart = Objects.requireNonNull(affectedVersionStart);
        this.description = Objects.requireNonNull(description);
        this.fixedCpeUri = Objects.requireNonNull(fixedCpeUri);
        this.fixedPackage = Objects.requireNonNull(fixedPackage);
        this.fixedVersion = Objects.requireNonNull(fixedVersion);
        this.isObsolete = Objects.requireNonNull(isObsolete);
        this.packageType = Objects.requireNonNull(packageType);
        this.severityName = Objects.requireNonNull(severityName);
        this.source = Objects.requireNonNull(source);
        this.sourceUpdateTime = Objects.requireNonNull(sourceUpdateTime);
        this.vendor = Objects.requireNonNull(vendor);
    }

    public String getAffectedCpeUri() {
        return this.affectedCpeUri;
    }
    public String getAffectedPackage() {
        return this.affectedPackage;
    }
    public VersionResponse getAffectedVersionEnd() {
        return this.affectedVersionEnd;
    }
    public VersionResponse getAffectedVersionStart() {
        return this.affectedVersionStart;
    }
    public String getDescription() {
        return this.description;
    }
    public String getFixedCpeUri() {
        return this.fixedCpeUri;
    }
    public String getFixedPackage() {
        return this.fixedPackage;
    }
    public VersionResponse getFixedVersion() {
        return this.fixedVersion;
    }
    public Boolean getIsObsolete() {
        return this.isObsolete;
    }
    public String getPackageType() {
        return this.packageType;
    }
    public String getSeverityName() {
        return this.severityName;
    }
    public String getSource() {
        return this.source;
    }
    public String getSourceUpdateTime() {
        return this.sourceUpdateTime;
    }
    public String getVendor() {
        return this.vendor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DetailResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String affectedCpeUri;
        private String affectedPackage;
        private VersionResponse affectedVersionEnd;
        private VersionResponse affectedVersionStart;
        private String description;
        private String fixedCpeUri;
        private String fixedPackage;
        private VersionResponse fixedVersion;
        private Boolean isObsolete;
        private String packageType;
        private String severityName;
        private String source;
        private String sourceUpdateTime;
        private String vendor;

        public Builder() {
    	      // Empty
        }

        public Builder(DetailResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.affectedCpeUri = defaults.affectedCpeUri;
    	      this.affectedPackage = defaults.affectedPackage;
    	      this.affectedVersionEnd = defaults.affectedVersionEnd;
    	      this.affectedVersionStart = defaults.affectedVersionStart;
    	      this.description = defaults.description;
    	      this.fixedCpeUri = defaults.fixedCpeUri;
    	      this.fixedPackage = defaults.fixedPackage;
    	      this.fixedVersion = defaults.fixedVersion;
    	      this.isObsolete = defaults.isObsolete;
    	      this.packageType = defaults.packageType;
    	      this.severityName = defaults.severityName;
    	      this.source = defaults.source;
    	      this.sourceUpdateTime = defaults.sourceUpdateTime;
    	      this.vendor = defaults.vendor;
        }

        public Builder setAffectedCpeUri(String affectedCpeUri) {
            this.affectedCpeUri = Objects.requireNonNull(affectedCpeUri);
            return this;
        }

        public Builder setAffectedPackage(String affectedPackage) {
            this.affectedPackage = Objects.requireNonNull(affectedPackage);
            return this;
        }

        public Builder setAffectedVersionEnd(VersionResponse affectedVersionEnd) {
            this.affectedVersionEnd = Objects.requireNonNull(affectedVersionEnd);
            return this;
        }

        public Builder setAffectedVersionStart(VersionResponse affectedVersionStart) {
            this.affectedVersionStart = Objects.requireNonNull(affectedVersionStart);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setFixedCpeUri(String fixedCpeUri) {
            this.fixedCpeUri = Objects.requireNonNull(fixedCpeUri);
            return this;
        }

        public Builder setFixedPackage(String fixedPackage) {
            this.fixedPackage = Objects.requireNonNull(fixedPackage);
            return this;
        }

        public Builder setFixedVersion(VersionResponse fixedVersion) {
            this.fixedVersion = Objects.requireNonNull(fixedVersion);
            return this;
        }

        public Builder setIsObsolete(Boolean isObsolete) {
            this.isObsolete = Objects.requireNonNull(isObsolete);
            return this;
        }

        public Builder setPackageType(String packageType) {
            this.packageType = Objects.requireNonNull(packageType);
            return this;
        }

        public Builder setSeverityName(String severityName) {
            this.severityName = Objects.requireNonNull(severityName);
            return this;
        }

        public Builder setSource(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }

        public Builder setSourceUpdateTime(String sourceUpdateTime) {
            this.sourceUpdateTime = Objects.requireNonNull(sourceUpdateTime);
            return this;
        }

        public Builder setVendor(String vendor) {
            this.vendor = Objects.requireNonNull(vendor);
            return this;
        }

        public DetailResponse build() {
            return new DetailResponse(affectedCpeUri, affectedPackage, affectedVersionEnd, affectedVersionStart, description, fixedCpeUri, fixedPackage, fixedVersion, isObsolete, packageType, severityName, source, sourceUpdateTime, vendor);
        }
    }
}
