// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.testing_v1.inputs.FileReferenceResponse;
import java.lang.String;
import java.util.Objects;


public final class RegularFileResponse extends io.pulumi.resources.InvokeArgs {

    public static final RegularFileResponse Empty = new RegularFileResponse();

    @InputImport(name="content", required=true)
    private final FileReferenceResponse content;

    public FileReferenceResponse getContent() {
        return this.content;
    }

    @InputImport(name="devicePath", required=true)
    private final String devicePath;

    public String getDevicePath() {
        return this.devicePath;
    }

    public RegularFileResponse(
        FileReferenceResponse content,
        String devicePath) {
        this.content = Objects.requireNonNull(content, "expected parameter 'content' to be non-null");
        this.devicePath = Objects.requireNonNull(devicePath, "expected parameter 'devicePath' to be non-null");
    }

    private RegularFileResponse() {
        this.content = null;
        this.devicePath = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RegularFileResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileReferenceResponse content;
        private String devicePath;

        public Builder() {
    	      // Empty
        }

        public Builder(RegularFileResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.devicePath = defaults.devicePath;
        }

        public Builder setContent(FileReferenceResponse content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }

        public Builder setDevicePath(String devicePath) {
            this.devicePath = Objects.requireNonNull(devicePath);
            return this;
        }

        public RegularFileResponse build() {
            return new RegularFileResponse(content, devicePath);
        }
    }
}
