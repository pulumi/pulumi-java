// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataproc_v1beta2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A selector that chooses target cluster for jobs based on metadata.
 * 
 */
public final class ClusterSelectorArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterSelectorArgs Empty = new ClusterSelectorArgs();

    /**
     * The cluster labels. Cluster must have all labels to match.
     * 
     */
    @InputImport(name="clusterLabels", required=true)
      private final Input<Map<String,String>> clusterLabels;

    public Input<Map<String,String>> getClusterLabels() {
        return this.clusterLabels;
    }

    /**
     * Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
     * 
     */
    @InputImport(name="zone")
      private final @Nullable Input<String> zone;

    public Input<String> getZone() {
        return this.zone == null ? Input.empty() : this.zone;
    }

    public ClusterSelectorArgs(
        Input<Map<String,String>> clusterLabels,
        @Nullable Input<String> zone) {
        this.clusterLabels = Objects.requireNonNull(clusterLabels, "expected parameter 'clusterLabels' to be non-null");
        this.zone = zone;
    }

    private ClusterSelectorArgs() {
        this.clusterLabels = Input.empty();
        this.zone = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterSelectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Map<String,String>> clusterLabels;
        private @Nullable Input<String> zone;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterSelectorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterLabels = defaults.clusterLabels;
    	      this.zone = defaults.zone;
        }

        public Builder clusterLabels(Input<Map<String,String>> clusterLabels) {
            this.clusterLabels = Objects.requireNonNull(clusterLabels);
            return this;
        }

        public Builder clusterLabels(Map<String,String> clusterLabels) {
            this.clusterLabels = Input.of(Objects.requireNonNull(clusterLabels));
            return this;
        }

        public Builder zone(@Nullable Input<String> zone) {
            this.zone = zone;
            return this;
        }

        public Builder zone(@Nullable String zone) {
            this.zone = Input.ofNullable(zone);
            return this;
        }
        public ClusterSelectorArgs build() {
            return new ClusterSelectorArgs(clusterLabels, zone);
        }
    }
}
