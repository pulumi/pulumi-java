// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.managedidentities_v1alpha1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class TrustResponse {
    /**
     * The time the instance was created.
     * 
     */
    private final String createTime;
    /**
     * The last heartbeat time when the trust was known to be connected.
     * 
     */
    private final String lastKnownTrustConnectedHeartbeatTime;
    /**
     * The trust authentication type which decides whether the trusted side has forest/domain wide access or selective access to approved set of resources.
     * 
     */
    private final Boolean selectiveAuthentication;
    /**
     * The current state of this trust.
     * 
     */
    private final String state;
    /**
     * Additional information about the current state of this trust, if available.
     * 
     */
    private final String stateDescription;
    /**
     * The target dns server ip addresses which can resolve the remote domain involved in trust.
     * 
     */
    private final List<String> targetDnsIpAddresses;
    /**
     * The fully qualified target domain name which will be in trust with current domain.
     * 
     */
    private final String targetDomainName;
    /**
     * The trust direction decides the current domain is trusted, trusting or both.
     * 
     */
    private final String trustDirection;
    /**
     * Input only, and will not be stored. The trust secret used for handshake with target domain.
     * 
     */
    private final String trustHandshakeSecret;
    /**
     * The type of trust represented by the trust resource.
     * 
     */
    private final String trustType;
    /**
     * Last update time.
     * 
     */
    private final String updateTime;

    @OutputCustomType.Constructor
    private TrustResponse(
        @OutputCustomType.Parameter("createTime") String createTime,
        @OutputCustomType.Parameter("lastKnownTrustConnectedHeartbeatTime") String lastKnownTrustConnectedHeartbeatTime,
        @OutputCustomType.Parameter("selectiveAuthentication") Boolean selectiveAuthentication,
        @OutputCustomType.Parameter("state") String state,
        @OutputCustomType.Parameter("stateDescription") String stateDescription,
        @OutputCustomType.Parameter("targetDnsIpAddresses") List<String> targetDnsIpAddresses,
        @OutputCustomType.Parameter("targetDomainName") String targetDomainName,
        @OutputCustomType.Parameter("trustDirection") String trustDirection,
        @OutputCustomType.Parameter("trustHandshakeSecret") String trustHandshakeSecret,
        @OutputCustomType.Parameter("trustType") String trustType,
        @OutputCustomType.Parameter("updateTime") String updateTime) {
        this.createTime = createTime;
        this.lastKnownTrustConnectedHeartbeatTime = lastKnownTrustConnectedHeartbeatTime;
        this.selectiveAuthentication = selectiveAuthentication;
        this.state = state;
        this.stateDescription = stateDescription;
        this.targetDnsIpAddresses = targetDnsIpAddresses;
        this.targetDomainName = targetDomainName;
        this.trustDirection = trustDirection;
        this.trustHandshakeSecret = trustHandshakeSecret;
        this.trustType = trustType;
        this.updateTime = updateTime;
    }

    /**
     * The time the instance was created.
     * 
    */
    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * The last heartbeat time when the trust was known to be connected.
     * 
    */
    public String getLastKnownTrustConnectedHeartbeatTime() {
        return this.lastKnownTrustConnectedHeartbeatTime;
    }
    /**
     * The trust authentication type which decides whether the trusted side has forest/domain wide access or selective access to approved set of resources.
     * 
    */
    public Boolean getSelectiveAuthentication() {
        return this.selectiveAuthentication;
    }
    /**
     * The current state of this trust.
     * 
    */
    public String getState() {
        return this.state;
    }
    /**
     * Additional information about the current state of this trust, if available.
     * 
    */
    public String getStateDescription() {
        return this.stateDescription;
    }
    /**
     * The target dns server ip addresses which can resolve the remote domain involved in trust.
     * 
    */
    public List<String> getTargetDnsIpAddresses() {
        return this.targetDnsIpAddresses;
    }
    /**
     * The fully qualified target domain name which will be in trust with current domain.
     * 
    */
    public String getTargetDomainName() {
        return this.targetDomainName;
    }
    /**
     * The trust direction decides the current domain is trusted, trusting or both.
     * 
    */
    public String getTrustDirection() {
        return this.trustDirection;
    }
    /**
     * Input only, and will not be stored. The trust secret used for handshake with target domain.
     * 
    */
    public String getTrustHandshakeSecret() {
        return this.trustHandshakeSecret;
    }
    /**
     * The type of trust represented by the trust resource.
     * 
    */
    public String getTrustType() {
        return this.trustType;
    }
    /**
     * Last update time.
     * 
    */
    public String getUpdateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TrustResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String lastKnownTrustConnectedHeartbeatTime;
        private Boolean selectiveAuthentication;
        private String state;
        private String stateDescription;
        private List<String> targetDnsIpAddresses;
        private String targetDomainName;
        private String trustDirection;
        private String trustHandshakeSecret;
        private String trustType;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(TrustResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.lastKnownTrustConnectedHeartbeatTime = defaults.lastKnownTrustConnectedHeartbeatTime;
    	      this.selectiveAuthentication = defaults.selectiveAuthentication;
    	      this.state = defaults.state;
    	      this.stateDescription = defaults.stateDescription;
    	      this.targetDnsIpAddresses = defaults.targetDnsIpAddresses;
    	      this.targetDomainName = defaults.targetDomainName;
    	      this.trustDirection = defaults.trustDirection;
    	      this.trustHandshakeSecret = defaults.trustHandshakeSecret;
    	      this.trustType = defaults.trustType;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setLastKnownTrustConnectedHeartbeatTime(String lastKnownTrustConnectedHeartbeatTime) {
            this.lastKnownTrustConnectedHeartbeatTime = Objects.requireNonNull(lastKnownTrustConnectedHeartbeatTime);
            return this;
        }

        public Builder setSelectiveAuthentication(Boolean selectiveAuthentication) {
            this.selectiveAuthentication = Objects.requireNonNull(selectiveAuthentication);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setStateDescription(String stateDescription) {
            this.stateDescription = Objects.requireNonNull(stateDescription);
            return this;
        }

        public Builder setTargetDnsIpAddresses(List<String> targetDnsIpAddresses) {
            this.targetDnsIpAddresses = Objects.requireNonNull(targetDnsIpAddresses);
            return this;
        }

        public Builder setTargetDomainName(String targetDomainName) {
            this.targetDomainName = Objects.requireNonNull(targetDomainName);
            return this;
        }

        public Builder setTrustDirection(String trustDirection) {
            this.trustDirection = Objects.requireNonNull(trustDirection);
            return this;
        }

        public Builder setTrustHandshakeSecret(String trustHandshakeSecret) {
            this.trustHandshakeSecret = Objects.requireNonNull(trustHandshakeSecret);
            return this;
        }

        public Builder setTrustType(String trustType) {
            this.trustType = Objects.requireNonNull(trustType);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public TrustResponse build() {
            return new TrustResponse(createTime, lastKnownTrustConnectedHeartbeatTime, selectiveAuthentication, state, stateDescription, targetDnsIpAddresses, targetDomainName, trustDirection, trustHandshakeSecret, trustType, updateTime);
        }
    }
}
