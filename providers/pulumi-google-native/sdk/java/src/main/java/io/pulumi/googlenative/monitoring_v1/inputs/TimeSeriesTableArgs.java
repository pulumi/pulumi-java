// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.monitoring_v1.inputs.TableDataSetArgs;
import java.util.List;
import java.util.Objects;


/**
 * A table that displays time series data.
 * 
 */
public final class TimeSeriesTableArgs extends io.pulumi.resources.ResourceArgs {

    public static final TimeSeriesTableArgs Empty = new TimeSeriesTableArgs();

    /**
     * The data displayed in this table.
     * 
     */
    @InputImport(name="dataSets", required=true)
    private final Input<List<TableDataSetArgs>> dataSets;

    public Input<List<TableDataSetArgs>> getDataSets() {
        return this.dataSets;
    }

    public TimeSeriesTableArgs(Input<List<TableDataSetArgs>> dataSets) {
        this.dataSets = Objects.requireNonNull(dataSets, "expected parameter 'dataSets' to be non-null");
    }

    private TimeSeriesTableArgs() {
        this.dataSets = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TimeSeriesTableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<List<TableDataSetArgs>> dataSets;

        public Builder() {
    	      // Empty
        }

        public Builder(TimeSeriesTableArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataSets = defaults.dataSets;
        }

        public Builder setDataSets(Input<List<TableDataSetArgs>> dataSets) {
            this.dataSets = Objects.requireNonNull(dataSets);
            return this;
        }

        public Builder setDataSets(List<TableDataSetArgs> dataSets) {
            this.dataSets = Input.of(Objects.requireNonNull(dataSets));
            return this;
        }

        public TimeSeriesTableArgs build() {
            return new TimeSeriesTableArgs(dataSets);
        }
    }
}
