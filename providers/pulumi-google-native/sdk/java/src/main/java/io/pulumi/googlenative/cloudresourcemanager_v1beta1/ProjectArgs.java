// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudresourcemanager_v1beta1;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.cloudresourcemanager_v1beta1.enums.ProjectLifecycleState;
import io.pulumi.googlenative.cloudresourcemanager_v1beta1.inputs.ResourceIdArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProjectArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProjectArgs Empty = new ProjectArgs();

    @InputImport(name="createTime")
    private final @Nullable Input<String> createTime;

    public Input<String> getCreateTime() {
        return this.createTime == null ? Input.empty() : this.createTime;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="lifecycleState")
    private final @Nullable Input<ProjectLifecycleState> lifecycleState;

    public Input<ProjectLifecycleState> getLifecycleState() {
        return this.lifecycleState == null ? Input.empty() : this.lifecycleState;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="parent")
    private final @Nullable Input<ResourceIdArgs> parent;

    public Input<ResourceIdArgs> getParent() {
        return this.parent == null ? Input.empty() : this.parent;
    }

    @InputImport(name="projectId")
    private final @Nullable Input<String> projectId;

    public Input<String> getProjectId() {
        return this.projectId == null ? Input.empty() : this.projectId;
    }

    @InputImport(name="projectNumber")
    private final @Nullable Input<String> projectNumber;

    public Input<String> getProjectNumber() {
        return this.projectNumber == null ? Input.empty() : this.projectNumber;
    }

    @InputImport(name="useLegacyStack")
    private final @Nullable Input<String> useLegacyStack;

    public Input<String> getUseLegacyStack() {
        return this.useLegacyStack == null ? Input.empty() : this.useLegacyStack;
    }

    public ProjectArgs(
        @Nullable Input<String> createTime,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<ProjectLifecycleState> lifecycleState,
        @Nullable Input<String> name,
        @Nullable Input<ResourceIdArgs> parent,
        @Nullable Input<String> projectId,
        @Nullable Input<String> projectNumber,
        @Nullable Input<String> useLegacyStack) {
        this.createTime = createTime;
        this.labels = labels;
        this.lifecycleState = lifecycleState;
        this.name = name;
        this.parent = parent;
        this.projectId = projectId;
        this.projectNumber = projectNumber;
        this.useLegacyStack = useLegacyStack;
    }

    private ProjectArgs() {
        this.createTime = Input.empty();
        this.labels = Input.empty();
        this.lifecycleState = Input.empty();
        this.name = Input.empty();
        this.parent = Input.empty();
        this.projectId = Input.empty();
        this.projectNumber = Input.empty();
        this.useLegacyStack = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> createTime;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<ProjectLifecycleState> lifecycleState;
        private @Nullable Input<String> name;
        private @Nullable Input<ResourceIdArgs> parent;
        private @Nullable Input<String> projectId;
        private @Nullable Input<String> projectNumber;
        private @Nullable Input<String> useLegacyStack;

        public Builder() {
    	      // Empty
        }

        public Builder(ProjectArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.labels = defaults.labels;
    	      this.lifecycleState = defaults.lifecycleState;
    	      this.name = defaults.name;
    	      this.parent = defaults.parent;
    	      this.projectId = defaults.projectId;
    	      this.projectNumber = defaults.projectNumber;
    	      this.useLegacyStack = defaults.useLegacyStack;
        }

        public Builder setCreateTime(@Nullable Input<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder setCreateTime(@Nullable String createTime) {
            this.createTime = Input.ofNullable(createTime);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setLifecycleState(@Nullable Input<ProjectLifecycleState> lifecycleState) {
            this.lifecycleState = lifecycleState;
            return this;
        }

        public Builder setLifecycleState(@Nullable ProjectLifecycleState lifecycleState) {
            this.lifecycleState = Input.ofNullable(lifecycleState);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setParent(@Nullable Input<ResourceIdArgs> parent) {
            this.parent = parent;
            return this;
        }

        public Builder setParent(@Nullable ResourceIdArgs parent) {
            this.parent = Input.ofNullable(parent);
            return this;
        }

        public Builder setProjectId(@Nullable Input<String> projectId) {
            this.projectId = projectId;
            return this;
        }

        public Builder setProjectId(@Nullable String projectId) {
            this.projectId = Input.ofNullable(projectId);
            return this;
        }

        public Builder setProjectNumber(@Nullable Input<String> projectNumber) {
            this.projectNumber = projectNumber;
            return this;
        }

        public Builder setProjectNumber(@Nullable String projectNumber) {
            this.projectNumber = Input.ofNullable(projectNumber);
            return this;
        }

        public Builder setUseLegacyStack(@Nullable Input<String> useLegacyStack) {
            this.useLegacyStack = useLegacyStack;
            return this;
        }

        public Builder setUseLegacyStack(@Nullable String useLegacyStack) {
            this.useLegacyStack = Input.ofNullable(useLegacyStack);
            return this;
        }

        public ProjectArgs build() {
            return new ProjectArgs(createTime, labels, lifecycleState, name, parent, projectId, projectNumber, useLegacyStack);
        }
    }
}
