// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.apigee_v1;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SharedflowArgs extends io.pulumi.resources.ResourceArgs {

    public static final SharedflowArgs Empty = new SharedflowArgs();

    @InputImport(name="action", required=true)
    private final Input<String> action;

    public Input<String> getAction() {
        return this.action;
    }

    /**
     * The HTTP Content-Type header value specifying the content type of the body.
     * 
     */
    @InputImport(name="contentType")
    private final @Nullable Input<String> contentType;

    public Input<String> getContentType() {
        return this.contentType == null ? Input.empty() : this.contentType;
    }

    /**
     * The HTTP request/response body as raw binary.
     * 
     */
    @InputImport(name="data")
    private final @Nullable Input<String> data;

    public Input<String> getData() {
        return this.data == null ? Input.empty() : this.data;
    }

    /**
     * Application specific response metadata. Must be set in the first response for streaming APIs.
     * 
     */
    @InputImport(name="extensions")
    private final @Nullable Input<List<Map<String,String>>> extensions;

    public Input<List<Map<String,String>>> getExtensions() {
        return this.extensions == null ? Input.empty() : this.extensions;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="organizationId", required=true)
    private final Input<String> organizationId;

    public Input<String> getOrganizationId() {
        return this.organizationId;
    }

    public SharedflowArgs(
        Input<String> action,
        @Nullable Input<String> contentType,
        @Nullable Input<String> data,
        @Nullable Input<List<Map<String,String>>> extensions,
        @Nullable Input<String> name,
        Input<String> organizationId) {
        this.action = Objects.requireNonNull(action, "expected parameter 'action' to be non-null");
        this.contentType = contentType;
        this.data = data;
        this.extensions = extensions;
        this.name = name;
        this.organizationId = Objects.requireNonNull(organizationId, "expected parameter 'organizationId' to be non-null");
    }

    private SharedflowArgs() {
        this.action = Input.empty();
        this.contentType = Input.empty();
        this.data = Input.empty();
        this.extensions = Input.empty();
        this.name = Input.empty();
        this.organizationId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SharedflowArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> action;
        private @Nullable Input<String> contentType;
        private @Nullable Input<String> data;
        private @Nullable Input<List<Map<String,String>>> extensions;
        private @Nullable Input<String> name;
        private Input<String> organizationId;

        public Builder() {
    	      // Empty
        }

        public Builder(SharedflowArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.contentType = defaults.contentType;
    	      this.data = defaults.data;
    	      this.extensions = defaults.extensions;
    	      this.name = defaults.name;
    	      this.organizationId = defaults.organizationId;
        }

        public Builder setAction(Input<String> action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }

        public Builder setAction(String action) {
            this.action = Input.of(Objects.requireNonNull(action));
            return this;
        }

        public Builder setContentType(@Nullable Input<String> contentType) {
            this.contentType = contentType;
            return this;
        }

        public Builder setContentType(@Nullable String contentType) {
            this.contentType = Input.ofNullable(contentType);
            return this;
        }

        public Builder setData(@Nullable Input<String> data) {
            this.data = data;
            return this;
        }

        public Builder setData(@Nullable String data) {
            this.data = Input.ofNullable(data);
            return this;
        }

        public Builder setExtensions(@Nullable Input<List<Map<String,String>>> extensions) {
            this.extensions = extensions;
            return this;
        }

        public Builder setExtensions(@Nullable List<Map<String,String>> extensions) {
            this.extensions = Input.ofNullable(extensions);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOrganizationId(Input<String> organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }

        public Builder setOrganizationId(String organizationId) {
            this.organizationId = Input.of(Objects.requireNonNull(organizationId));
            return this;
        }

        public SharedflowArgs build() {
            return new SharedflowArgs(action, contentType, data, extensions, name, organizationId);
        }
    }
}
