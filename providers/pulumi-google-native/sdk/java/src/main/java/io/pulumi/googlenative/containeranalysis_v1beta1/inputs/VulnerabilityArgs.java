// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.containeranalysis_v1beta1.enums.VulnerabilitySeverity;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.CVSSv3Args;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.DetailArgs;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.WindowsDetailArgs;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Vulnerability provides metadata about a security vulnerability in a Note.
 * 
 */
public final class VulnerabilityArgs extends io.pulumi.resources.ResourceArgs {

    public static final VulnerabilityArgs Empty = new VulnerabilityArgs();

    /**
     * The CVSS score for this vulnerability.
     * 
     */
    @Import(name="cvssScore")
      private final @Nullable Output<Double> cvssScore;

    public Output<Double> getCvssScore() {
        return this.cvssScore == null ? Output.empty() : this.cvssScore;
    }

    /**
     * The full description of the CVSSv3.
     * 
     */
    @Import(name="cvssV3")
      private final @Nullable Output<CVSSv3Args> cvssV3;

    public Output<CVSSv3Args> getCvssV3() {
        return this.cvssV3 == null ? Output.empty() : this.cvssV3;
    }

    /**
     * All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
     * 
     */
    @Import(name="details")
      private final @Nullable Output<List<DetailArgs>> details;

    public Output<List<DetailArgs>> getDetails() {
        return this.details == null ? Output.empty() : this.details;
    }

    /**
     * Note provider assigned impact of the vulnerability.
     * 
     */
    @Import(name="severity")
      private final @Nullable Output<VulnerabilitySeverity> severity;

    public Output<VulnerabilitySeverity> getSeverity() {
        return this.severity == null ? Output.empty() : this.severity;
    }

    /**
     * The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
     * 
     */
    @Import(name="sourceUpdateTime")
      private final @Nullable Output<String> sourceUpdateTime;

    public Output<String> getSourceUpdateTime() {
        return this.sourceUpdateTime == null ? Output.empty() : this.sourceUpdateTime;
    }

    /**
     * Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.
     * 
     */
    @Import(name="windowsDetails")
      private final @Nullable Output<List<WindowsDetailArgs>> windowsDetails;

    public Output<List<WindowsDetailArgs>> getWindowsDetails() {
        return this.windowsDetails == null ? Output.empty() : this.windowsDetails;
    }

    public VulnerabilityArgs(
        @Nullable Output<Double> cvssScore,
        @Nullable Output<CVSSv3Args> cvssV3,
        @Nullable Output<List<DetailArgs>> details,
        @Nullable Output<VulnerabilitySeverity> severity,
        @Nullable Output<String> sourceUpdateTime,
        @Nullable Output<List<WindowsDetailArgs>> windowsDetails) {
        this.cvssScore = cvssScore;
        this.cvssV3 = cvssV3;
        this.details = details;
        this.severity = severity;
        this.sourceUpdateTime = sourceUpdateTime;
        this.windowsDetails = windowsDetails;
    }

    private VulnerabilityArgs() {
        this.cvssScore = Output.empty();
        this.cvssV3 = Output.empty();
        this.details = Output.empty();
        this.severity = Output.empty();
        this.sourceUpdateTime = Output.empty();
        this.windowsDetails = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VulnerabilityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Double> cvssScore;
        private @Nullable Output<CVSSv3Args> cvssV3;
        private @Nullable Output<List<DetailArgs>> details;
        private @Nullable Output<VulnerabilitySeverity> severity;
        private @Nullable Output<String> sourceUpdateTime;
        private @Nullable Output<List<WindowsDetailArgs>> windowsDetails;

        public Builder() {
    	      // Empty
        }

        public Builder(VulnerabilityArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cvssScore = defaults.cvssScore;
    	      this.cvssV3 = defaults.cvssV3;
    	      this.details = defaults.details;
    	      this.severity = defaults.severity;
    	      this.sourceUpdateTime = defaults.sourceUpdateTime;
    	      this.windowsDetails = defaults.windowsDetails;
        }

        public Builder cvssScore(@Nullable Output<Double> cvssScore) {
            this.cvssScore = cvssScore;
            return this;
        }
        public Builder cvssScore(@Nullable Double cvssScore) {
            this.cvssScore = Output.ofNullable(cvssScore);
            return this;
        }
        public Builder cvssV3(@Nullable Output<CVSSv3Args> cvssV3) {
            this.cvssV3 = cvssV3;
            return this;
        }
        public Builder cvssV3(@Nullable CVSSv3Args cvssV3) {
            this.cvssV3 = Output.ofNullable(cvssV3);
            return this;
        }
        public Builder details(@Nullable Output<List<DetailArgs>> details) {
            this.details = details;
            return this;
        }
        public Builder details(@Nullable List<DetailArgs> details) {
            this.details = Output.ofNullable(details);
            return this;
        }
        public Builder details(DetailArgs... details) {
            return details(List.of(details));
        }
        public Builder severity(@Nullable Output<VulnerabilitySeverity> severity) {
            this.severity = severity;
            return this;
        }
        public Builder severity(@Nullable VulnerabilitySeverity severity) {
            this.severity = Output.ofNullable(severity);
            return this;
        }
        public Builder sourceUpdateTime(@Nullable Output<String> sourceUpdateTime) {
            this.sourceUpdateTime = sourceUpdateTime;
            return this;
        }
        public Builder sourceUpdateTime(@Nullable String sourceUpdateTime) {
            this.sourceUpdateTime = Output.ofNullable(sourceUpdateTime);
            return this;
        }
        public Builder windowsDetails(@Nullable Output<List<WindowsDetailArgs>> windowsDetails) {
            this.windowsDetails = windowsDetails;
            return this;
        }
        public Builder windowsDetails(@Nullable List<WindowsDetailArgs> windowsDetails) {
            this.windowsDetails = Output.ofNullable(windowsDetails);
            return this;
        }
        public Builder windowsDetails(WindowsDetailArgs... windowsDetails) {
            return windowsDetails(List.of(windowsDetails));
        }        public VulnerabilityArgs build() {
            return new VulnerabilityArgs(cvssScore, cvssV3, details, severity, sourceUpdateTime, windowsDetails);
        }
    }
}
