// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.osconfig_v1beta.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


/**
 * Represents a group of VMs that can be identified as having all these labels, for example "env=prod and app=web".
 * 
 */
public final class PatchInstanceFilterGroupLabelResponse extends io.pulumi.resources.InvokeArgs {

    public static final PatchInstanceFilterGroupLabelResponse Empty = new PatchInstanceFilterGroupLabelResponse();

    /**
     * Compute Engine instance labels that must be present for a VM instance to be targeted by this filter.
     * 
     */
    @InputImport(name="labels", required=true)
      private final Map<String,String> labels;

    public Map<String,String> getLabels() {
        return this.labels;
    }

    public PatchInstanceFilterGroupLabelResponse(Map<String,String> labels) {
        this.labels = Objects.requireNonNull(labels, "expected parameter 'labels' to be non-null");
    }

    private PatchInstanceFilterGroupLabelResponse() {
        this.labels = Map.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PatchInstanceFilterGroupLabelResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> labels;

        public Builder() {
    	      // Empty
        }

        public Builder(PatchInstanceFilterGroupLabelResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.labels = defaults.labels;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public PatchInstanceFilterGroupLabelResponse build() {
            return new PatchInstanceFilterGroupLabelResponse(labels);
        }
    }
}
