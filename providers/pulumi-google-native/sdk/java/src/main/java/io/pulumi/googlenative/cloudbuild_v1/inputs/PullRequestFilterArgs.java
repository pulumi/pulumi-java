// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudbuild_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.cloudbuild_v1.enums.PullRequestFilterCommentControl;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * PullRequestFilter contains filter properties for matching GitHub Pull Requests.
 * 
 */
public final class PullRequestFilterArgs extends io.pulumi.resources.ResourceArgs {

    public static final PullRequestFilterArgs Empty = new PullRequestFilterArgs();

    /**
     * Regex of branches to match. The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax
     * 
     */
    @InputImport(name="branch")
    private final @Nullable Input<String> branch;

    public Input<String> getBranch() {
        return this.branch == null ? Input.empty() : this.branch;
    }

    /**
     * Configure builds to run whether a repository owner or collaborator need to comment `/gcbrun`.
     * 
     */
    @InputImport(name="commentControl")
    private final @Nullable Input<PullRequestFilterCommentControl> commentControl;

    public Input<PullRequestFilterCommentControl> getCommentControl() {
        return this.commentControl == null ? Input.empty() : this.commentControl;
    }

    /**
     * If true, branches that do NOT match the git_ref will trigger a build.
     * 
     */
    @InputImport(name="invertRegex")
    private final @Nullable Input<Boolean> invertRegex;

    public Input<Boolean> getInvertRegex() {
        return this.invertRegex == null ? Input.empty() : this.invertRegex;
    }

    public PullRequestFilterArgs(
        @Nullable Input<String> branch,
        @Nullable Input<PullRequestFilterCommentControl> commentControl,
        @Nullable Input<Boolean> invertRegex) {
        this.branch = branch;
        this.commentControl = commentControl;
        this.invertRegex = invertRegex;
    }

    private PullRequestFilterArgs() {
        this.branch = Input.empty();
        this.commentControl = Input.empty();
        this.invertRegex = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PullRequestFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> branch;
        private @Nullable Input<PullRequestFilterCommentControl> commentControl;
        private @Nullable Input<Boolean> invertRegex;

        public Builder() {
    	      // Empty
        }

        public Builder(PullRequestFilterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branch = defaults.branch;
    	      this.commentControl = defaults.commentControl;
    	      this.invertRegex = defaults.invertRegex;
        }

        public Builder setBranch(@Nullable Input<String> branch) {
            this.branch = branch;
            return this;
        }

        public Builder setBranch(@Nullable String branch) {
            this.branch = Input.ofNullable(branch);
            return this;
        }

        public Builder setCommentControl(@Nullable Input<PullRequestFilterCommentControl> commentControl) {
            this.commentControl = commentControl;
            return this;
        }

        public Builder setCommentControl(@Nullable PullRequestFilterCommentControl commentControl) {
            this.commentControl = Input.ofNullable(commentControl);
            return this;
        }

        public Builder setInvertRegex(@Nullable Input<Boolean> invertRegex) {
            this.invertRegex = invertRegex;
            return this;
        }

        public Builder setInvertRegex(@Nullable Boolean invertRegex) {
            this.invertRegex = Input.ofNullable(invertRegex);
            return this;
        }

        public PullRequestFilterArgs build() {
            return new PullRequestFilterArgs(branch, commentControl, invertRegex);
        }
    }
}
