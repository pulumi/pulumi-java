// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.transcoder_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Audio preprocessing configuration.
 * 
 */
public final class AudioArgs extends io.pulumi.resources.ResourceArgs {

    public static final AudioArgs Empty = new AudioArgs();

    /**
     * Enable boosting high frequency components. The default is `false`.
     * 
     */
    @Import(name="highBoost")
      private final @Nullable Output<Boolean> highBoost;

    public Output<Boolean> getHighBoost() {
        return this.highBoost == null ? Output.empty() : this.highBoost;
    }

    /**
     * Enable boosting low frequency components. The default is `false`.
     * 
     */
    @Import(name="lowBoost")
      private final @Nullable Output<Boolean> lowBoost;

    public Output<Boolean> getLowBoost() {
        return this.lowBoost == null ? Output.empty() : this.lowBoost;
    }

    /**
     * Specify audio loudness normalization in loudness units relative to full scale (LUFS). Enter a value between -24 and 0 (the default), where: * -24 is the Advanced Television Systems Committee (ATSC A/85) standard * -23 is the EU R128 broadcast standard * -19 is the prior standard for online mono audio * -18 is the ReplayGain standard * -16 is the prior standard for stereo audio * -14 is the new online audio standard recommended by Spotify, as well as Amazon Echo * 0 disables normalization
     * 
     */
    @Import(name="lufs")
      private final @Nullable Output<Double> lufs;

    public Output<Double> getLufs() {
        return this.lufs == null ? Output.empty() : this.lufs;
    }

    public AudioArgs(
        @Nullable Output<Boolean> highBoost,
        @Nullable Output<Boolean> lowBoost,
        @Nullable Output<Double> lufs) {
        this.highBoost = highBoost;
        this.lowBoost = lowBoost;
        this.lufs = lufs;
    }

    private AudioArgs() {
        this.highBoost = Output.empty();
        this.lowBoost = Output.empty();
        this.lufs = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AudioArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> highBoost;
        private @Nullable Output<Boolean> lowBoost;
        private @Nullable Output<Double> lufs;

        public Builder() {
    	      // Empty
        }

        public Builder(AudioArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.highBoost = defaults.highBoost;
    	      this.lowBoost = defaults.lowBoost;
    	      this.lufs = defaults.lufs;
        }

        public Builder highBoost(@Nullable Output<Boolean> highBoost) {
            this.highBoost = highBoost;
            return this;
        }
        public Builder highBoost(@Nullable Boolean highBoost) {
            this.highBoost = Output.ofNullable(highBoost);
            return this;
        }
        public Builder lowBoost(@Nullable Output<Boolean> lowBoost) {
            this.lowBoost = lowBoost;
            return this;
        }
        public Builder lowBoost(@Nullable Boolean lowBoost) {
            this.lowBoost = Output.ofNullable(lowBoost);
            return this;
        }
        public Builder lufs(@Nullable Output<Double> lufs) {
            this.lufs = lufs;
            return this;
        }
        public Builder lufs(@Nullable Double lufs) {
            this.lufs = Output.ofNullable(lufs);
            return this;
        }        public AudioArgs build() {
            return new AudioArgs(highBoost, lowBoost, lufs);
        }
    }
}
