// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.retail_v2beta;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.retail_v2beta.ServingConfigArgs;
import io.pulumi.googlenative.retail_v2beta.outputs.GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponse;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="google-native:retail/v2beta:ServingConfig")
public class ServingConfig extends io.pulumi.resources.CustomResource {
    @OutputExport(name="boostControlIds", type=List.class, parameters={String.class})
    private Output<List<String>> boostControlIds;

    public Output<List<String>> getBoostControlIds() {
        return this.boostControlIds;
    }
    @OutputExport(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName;
    }
    @OutputExport(name="diversityLevel", type=String.class, parameters={})
    private Output<String> diversityLevel;

    public Output<String> getDiversityLevel() {
        return this.diversityLevel;
    }
    @OutputExport(name="doNotAssociateControlIds", type=List.class, parameters={String.class})
    private Output<List<String>> doNotAssociateControlIds;

    public Output<List<String>> getDoNotAssociateControlIds() {
        return this.doNotAssociateControlIds;
    }
    @OutputExport(name="dynamicFacetSpec", type=GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponse.class, parameters={})
    private Output<GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponse> dynamicFacetSpec;

    public Output<GoogleCloudRetailV2betaSearchRequestDynamicFacetSpecResponse> getDynamicFacetSpec() {
        return this.dynamicFacetSpec;
    }
    @OutputExport(name="enableCategoryFilterLevel", type=String.class, parameters={})
    private Output<String> enableCategoryFilterLevel;

    public Output<String> getEnableCategoryFilterLevel() {
        return this.enableCategoryFilterLevel;
    }
    @OutputExport(name="facetControlIds", type=List.class, parameters={String.class})
    private Output<List<String>> facetControlIds;

    public Output<List<String>> getFacetControlIds() {
        return this.facetControlIds;
    }
    @OutputExport(name="filterControlIds", type=List.class, parameters={String.class})
    private Output<List<String>> filterControlIds;

    public Output<List<String>> getFilterControlIds() {
        return this.filterControlIds;
    }
    @OutputExport(name="ignoreControlIds", type=List.class, parameters={String.class})
    private Output<List<String>> ignoreControlIds;

    public Output<List<String>> getIgnoreControlIds() {
        return this.ignoreControlIds;
    }
    @OutputExport(name="modelId", type=String.class, parameters={})
    private Output<String> modelId;

    public Output<String> getModelId() {
        return this.modelId;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="onewaySynonymsControlIds", type=List.class, parameters={String.class})
    private Output<List<String>> onewaySynonymsControlIds;

    public Output<List<String>> getOnewaySynonymsControlIds() {
        return this.onewaySynonymsControlIds;
    }
    @OutputExport(name="priceRerankingLevel", type=String.class, parameters={})
    private Output<String> priceRerankingLevel;

    public Output<String> getPriceRerankingLevel() {
        return this.priceRerankingLevel;
    }
    @OutputExport(name="redirectControlIds", type=List.class, parameters={String.class})
    private Output<List<String>> redirectControlIds;

    public Output<List<String>> getRedirectControlIds() {
        return this.redirectControlIds;
    }
    @OutputExport(name="replacementControlIds", type=List.class, parameters={String.class})
    private Output<List<String>> replacementControlIds;

    public Output<List<String>> getReplacementControlIds() {
        return this.replacementControlIds;
    }
    @OutputExport(name="solutionTypes", type=List.class, parameters={String.class})
    private Output<List<String>> solutionTypes;

    public Output<List<String>> getSolutionTypes() {
        return this.solutionTypes;
    }
    @OutputExport(name="twowaySynonymsControlIds", type=List.class, parameters={String.class})
    private Output<List<String>> twowaySynonymsControlIds;

    public Output<List<String>> getTwowaySynonymsControlIds() {
        return this.twowaySynonymsControlIds;
    }

    public ServingConfig(String name, ServingConfigArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:retail/v2beta:ServingConfig", name, args == null ? ServingConfigArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ServingConfig(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:retail/v2beta:ServingConfig", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static ServingConfig get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ServingConfig(name, id, options);
    }
}
