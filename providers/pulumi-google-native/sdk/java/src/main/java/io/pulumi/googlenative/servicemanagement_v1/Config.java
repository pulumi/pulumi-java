// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.servicemanagement_v1.ConfigArgs;
import io.pulumi.googlenative.servicemanagement_v1.outputs.ApiResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.AuthenticationResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.BackendResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.BillingResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.ContextResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.ControlResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.CustomErrorResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.DocumentationResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.EndpointResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.EnumResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.HttpResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.LogDescriptorResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.LoggingResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.MetricDescriptorResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.MonitoredResourceDescriptorResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.MonitoringResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.QuotaResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.SourceInfoResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.SystemParametersResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.TypeResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.UsageResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="google-native:servicemanagement/v1:Config")
public class Config extends io.pulumi.resources.CustomResource {
    @OutputExport(name="apis", type=List.class, parameters={ApiResponse.class})
    private Output<List<ApiResponse>> apis;

    public Output<List<ApiResponse>> getApis() {
        return this.apis;
    }
    @OutputExport(name="authentication", type=AuthenticationResponse.class, parameters={})
    private Output<AuthenticationResponse> authentication;

    public Output<AuthenticationResponse> getAuthentication() {
        return this.authentication;
    }
    @OutputExport(name="backend", type=BackendResponse.class, parameters={})
    private Output<BackendResponse> backend;

    public Output<BackendResponse> getBackend() {
        return this.backend;
    }
    @OutputExport(name="billing", type=BillingResponse.class, parameters={})
    private Output<BillingResponse> billing;

    public Output<BillingResponse> getBilling() {
        return this.billing;
    }
    @OutputExport(name="configVersion", type=Integer.class, parameters={})
    private Output<Integer> configVersion;

    public Output<Integer> getConfigVersion() {
        return this.configVersion;
    }
    @OutputExport(name="context", type=ContextResponse.class, parameters={})
    private Output<ContextResponse> context;

    public Output<ContextResponse> getContext() {
        return this.context;
    }
    @OutputExport(name="control", type=ControlResponse.class, parameters={})
    private Output<ControlResponse> control;

    public Output<ControlResponse> getControl() {
        return this.control;
    }
    @OutputExport(name="customError", type=CustomErrorResponse.class, parameters={})
    private Output<CustomErrorResponse> customError;

    public Output<CustomErrorResponse> getCustomError() {
        return this.customError;
    }
    @OutputExport(name="documentation", type=DocumentationResponse.class, parameters={})
    private Output<DocumentationResponse> documentation;

    public Output<DocumentationResponse> getDocumentation() {
        return this.documentation;
    }
    @OutputExport(name="endpoints", type=List.class, parameters={EndpointResponse.class})
    private Output<List<EndpointResponse>> endpoints;

    public Output<List<EndpointResponse>> getEndpoints() {
        return this.endpoints;
    }
    @OutputExport(name="enums", type=List.class, parameters={EnumResponse.class})
    private Output<List<EnumResponse>> enums;

    public Output<List<EnumResponse>> getEnums() {
        return this.enums;
    }
    @OutputExport(name="http", type=HttpResponse.class, parameters={})
    private Output<HttpResponse> http;

    public Output<HttpResponse> getHttp() {
        return this.http;
    }
    @OutputExport(name="logging", type=LoggingResponse.class, parameters={})
    private Output<LoggingResponse> logging;

    public Output<LoggingResponse> getLogging() {
        return this.logging;
    }
    @OutputExport(name="logs", type=List.class, parameters={LogDescriptorResponse.class})
    private Output<List<LogDescriptorResponse>> logs;

    public Output<List<LogDescriptorResponse>> getLogs() {
        return this.logs;
    }
    @OutputExport(name="metrics", type=List.class, parameters={MetricDescriptorResponse.class})
    private Output<List<MetricDescriptorResponse>> metrics;

    public Output<List<MetricDescriptorResponse>> getMetrics() {
        return this.metrics;
    }
    @OutputExport(name="monitoredResources", type=List.class, parameters={MonitoredResourceDescriptorResponse.class})
    private Output<List<MonitoredResourceDescriptorResponse>> monitoredResources;

    public Output<List<MonitoredResourceDescriptorResponse>> getMonitoredResources() {
        return this.monitoredResources;
    }
    @OutputExport(name="monitoring", type=MonitoringResponse.class, parameters={})
    private Output<MonitoringResponse> monitoring;

    public Output<MonitoringResponse> getMonitoring() {
        return this.monitoring;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="producerProjectId", type=String.class, parameters={})
    private Output<String> producerProjectId;

    public Output<String> getProducerProjectId() {
        return this.producerProjectId;
    }
    @OutputExport(name="quota", type=QuotaResponse.class, parameters={})
    private Output<QuotaResponse> quota;

    public Output<QuotaResponse> getQuota() {
        return this.quota;
    }
    @OutputExport(name="sourceInfo", type=SourceInfoResponse.class, parameters={})
    private Output<SourceInfoResponse> sourceInfo;

    public Output<SourceInfoResponse> getSourceInfo() {
        return this.sourceInfo;
    }
    @OutputExport(name="systemParameters", type=SystemParametersResponse.class, parameters={})
    private Output<SystemParametersResponse> systemParameters;

    public Output<SystemParametersResponse> getSystemParameters() {
        return this.systemParameters;
    }
    @OutputExport(name="systemTypes", type=List.class, parameters={TypeResponse.class})
    private Output<List<TypeResponse>> systemTypes;

    public Output<List<TypeResponse>> getSystemTypes() {
        return this.systemTypes;
    }
    @OutputExport(name="title", type=String.class, parameters={})
    private Output<String> title;

    public Output<String> getTitle() {
        return this.title;
    }
    @OutputExport(name="types", type=List.class, parameters={TypeResponse.class})
    private Output<List<TypeResponse>> types;

    public Output<List<TypeResponse>> getTypes() {
        return this.types;
    }
    @OutputExport(name="usage", type=UsageResponse.class, parameters={})
    private Output<UsageResponse> usage;

    public Output<UsageResponse> getUsage() {
        return this.usage;
    }

    public Config(String name, ConfigArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:servicemanagement/v1:Config", name, args == null ? ConfigArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Config(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:servicemanagement/v1:Config", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Config get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Config(name, id, options);
    }
}
