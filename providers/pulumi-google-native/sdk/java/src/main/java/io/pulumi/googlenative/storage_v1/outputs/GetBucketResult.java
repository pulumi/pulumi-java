// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.storage_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.storage_v1.outputs.BucketAccessControlResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketAutoclassResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketBillingResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketCorsItemResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketCustomPlacementConfigResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketEncryptionResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketIamConfigurationResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketLifecycleResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketLoggingResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketOwnerResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketRetentionPolicyResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketVersioningResponse;
import io.pulumi.googlenative.storage_v1.outputs.BucketWebsiteResponse;
import io.pulumi.googlenative.storage_v1.outputs.ObjectAccessControlResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetBucketResult {
    private final List<BucketAccessControlResponse> acl;
    private final BucketAutoclassResponse autoclass;
    private final BucketBillingResponse billing;
    private final List<BucketCorsItemResponse> cors;
    private final BucketCustomPlacementConfigResponse customPlacementConfig;
    private final Boolean defaultEventBasedHold;
    private final List<ObjectAccessControlResponse> defaultObjectAcl;
    private final BucketEncryptionResponse encryption;
    private final String etag;
    private final BucketIamConfigurationResponse iamConfiguration;
    private final String kind;
    private final Map<String,String> labels;
    private final BucketLifecycleResponse lifecycle;
    private final String location;
    private final String locationType;
    private final BucketLoggingResponse logging;
    private final String metageneration;
    private final String name;
    private final BucketOwnerResponse owner;
    private final String projectNumber;
    private final BucketRetentionPolicyResponse retentionPolicy;
    private final String rpo;
    private final Boolean satisfiesPZS;
    private final String selfLink;
    private final String storageClass;
    private final String timeCreated;
    private final String updated;
    private final BucketVersioningResponse versioning;
    private final BucketWebsiteResponse website;

    @OutputCustomType.Constructor({"acl","autoclass","billing","cors","customPlacementConfig","defaultEventBasedHold","defaultObjectAcl","encryption","etag","iamConfiguration","kind","labels","lifecycle","location","locationType","logging","metageneration","name","owner","projectNumber","retentionPolicy","rpo","satisfiesPZS","selfLink","storageClass","timeCreated","updated","versioning","website"})
    private GetBucketResult(
        List<BucketAccessControlResponse> acl,
        BucketAutoclassResponse autoclass,
        BucketBillingResponse billing,
        List<BucketCorsItemResponse> cors,
        BucketCustomPlacementConfigResponse customPlacementConfig,
        Boolean defaultEventBasedHold,
        List<ObjectAccessControlResponse> defaultObjectAcl,
        BucketEncryptionResponse encryption,
        String etag,
        BucketIamConfigurationResponse iamConfiguration,
        String kind,
        Map<String,String> labels,
        BucketLifecycleResponse lifecycle,
        String location,
        String locationType,
        BucketLoggingResponse logging,
        String metageneration,
        String name,
        BucketOwnerResponse owner,
        String projectNumber,
        BucketRetentionPolicyResponse retentionPolicy,
        String rpo,
        Boolean satisfiesPZS,
        String selfLink,
        String storageClass,
        String timeCreated,
        String updated,
        BucketVersioningResponse versioning,
        BucketWebsiteResponse website) {
        this.acl = Objects.requireNonNull(acl);
        this.autoclass = Objects.requireNonNull(autoclass);
        this.billing = Objects.requireNonNull(billing);
        this.cors = Objects.requireNonNull(cors);
        this.customPlacementConfig = Objects.requireNonNull(customPlacementConfig);
        this.defaultEventBasedHold = Objects.requireNonNull(defaultEventBasedHold);
        this.defaultObjectAcl = Objects.requireNonNull(defaultObjectAcl);
        this.encryption = Objects.requireNonNull(encryption);
        this.etag = Objects.requireNonNull(etag);
        this.iamConfiguration = Objects.requireNonNull(iamConfiguration);
        this.kind = Objects.requireNonNull(kind);
        this.labels = Objects.requireNonNull(labels);
        this.lifecycle = Objects.requireNonNull(lifecycle);
        this.location = Objects.requireNonNull(location);
        this.locationType = Objects.requireNonNull(locationType);
        this.logging = Objects.requireNonNull(logging);
        this.metageneration = Objects.requireNonNull(metageneration);
        this.name = Objects.requireNonNull(name);
        this.owner = Objects.requireNonNull(owner);
        this.projectNumber = Objects.requireNonNull(projectNumber);
        this.retentionPolicy = Objects.requireNonNull(retentionPolicy);
        this.rpo = Objects.requireNonNull(rpo);
        this.satisfiesPZS = Objects.requireNonNull(satisfiesPZS);
        this.selfLink = Objects.requireNonNull(selfLink);
        this.storageClass = Objects.requireNonNull(storageClass);
        this.timeCreated = Objects.requireNonNull(timeCreated);
        this.updated = Objects.requireNonNull(updated);
        this.versioning = Objects.requireNonNull(versioning);
        this.website = Objects.requireNonNull(website);
    }

    public List<BucketAccessControlResponse> getAcl() {
        return this.acl;
    }
    public BucketAutoclassResponse getAutoclass() {
        return this.autoclass;
    }
    public BucketBillingResponse getBilling() {
        return this.billing;
    }
    public List<BucketCorsItemResponse> getCors() {
        return this.cors;
    }
    public BucketCustomPlacementConfigResponse getCustomPlacementConfig() {
        return this.customPlacementConfig;
    }
    public Boolean getDefaultEventBasedHold() {
        return this.defaultEventBasedHold;
    }
    public List<ObjectAccessControlResponse> getDefaultObjectAcl() {
        return this.defaultObjectAcl;
    }
    public BucketEncryptionResponse getEncryption() {
        return this.encryption;
    }
    public String getEtag() {
        return this.etag;
    }
    public BucketIamConfigurationResponse getIamConfiguration() {
        return this.iamConfiguration;
    }
    public String getKind() {
        return this.kind;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public BucketLifecycleResponse getLifecycle() {
        return this.lifecycle;
    }
    public String getLocation() {
        return this.location;
    }
    public String getLocationType() {
        return this.locationType;
    }
    public BucketLoggingResponse getLogging() {
        return this.logging;
    }
    public String getMetageneration() {
        return this.metageneration;
    }
    public String getName() {
        return this.name;
    }
    public BucketOwnerResponse getOwner() {
        return this.owner;
    }
    public String getProjectNumber() {
        return this.projectNumber;
    }
    public BucketRetentionPolicyResponse getRetentionPolicy() {
        return this.retentionPolicy;
    }
    public String getRpo() {
        return this.rpo;
    }
    public Boolean getSatisfiesPZS() {
        return this.satisfiesPZS;
    }
    public String getSelfLink() {
        return this.selfLink;
    }
    public String getStorageClass() {
        return this.storageClass;
    }
    public String getTimeCreated() {
        return this.timeCreated;
    }
    public String getUpdated() {
        return this.updated;
    }
    public BucketVersioningResponse getVersioning() {
        return this.versioning;
    }
    public BucketWebsiteResponse getWebsite() {
        return this.website;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBucketResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<BucketAccessControlResponse> acl;
        private BucketAutoclassResponse autoclass;
        private BucketBillingResponse billing;
        private List<BucketCorsItemResponse> cors;
        private BucketCustomPlacementConfigResponse customPlacementConfig;
        private Boolean defaultEventBasedHold;
        private List<ObjectAccessControlResponse> defaultObjectAcl;
        private BucketEncryptionResponse encryption;
        private String etag;
        private BucketIamConfigurationResponse iamConfiguration;
        private String kind;
        private Map<String,String> labels;
        private BucketLifecycleResponse lifecycle;
        private String location;
        private String locationType;
        private BucketLoggingResponse logging;
        private String metageneration;
        private String name;
        private BucketOwnerResponse owner;
        private String projectNumber;
        private BucketRetentionPolicyResponse retentionPolicy;
        private String rpo;
        private Boolean satisfiesPZS;
        private String selfLink;
        private String storageClass;
        private String timeCreated;
        private String updated;
        private BucketVersioningResponse versioning;
        private BucketWebsiteResponse website;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBucketResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acl = defaults.acl;
    	      this.autoclass = defaults.autoclass;
    	      this.billing = defaults.billing;
    	      this.cors = defaults.cors;
    	      this.customPlacementConfig = defaults.customPlacementConfig;
    	      this.defaultEventBasedHold = defaults.defaultEventBasedHold;
    	      this.defaultObjectAcl = defaults.defaultObjectAcl;
    	      this.encryption = defaults.encryption;
    	      this.etag = defaults.etag;
    	      this.iamConfiguration = defaults.iamConfiguration;
    	      this.kind = defaults.kind;
    	      this.labels = defaults.labels;
    	      this.lifecycle = defaults.lifecycle;
    	      this.location = defaults.location;
    	      this.locationType = defaults.locationType;
    	      this.logging = defaults.logging;
    	      this.metageneration = defaults.metageneration;
    	      this.name = defaults.name;
    	      this.owner = defaults.owner;
    	      this.projectNumber = defaults.projectNumber;
    	      this.retentionPolicy = defaults.retentionPolicy;
    	      this.rpo = defaults.rpo;
    	      this.satisfiesPZS = defaults.satisfiesPZS;
    	      this.selfLink = defaults.selfLink;
    	      this.storageClass = defaults.storageClass;
    	      this.timeCreated = defaults.timeCreated;
    	      this.updated = defaults.updated;
    	      this.versioning = defaults.versioning;
    	      this.website = defaults.website;
        }

        public Builder setAcl(List<BucketAccessControlResponse> acl) {
            this.acl = Objects.requireNonNull(acl);
            return this;
        }

        public Builder setAutoclass(BucketAutoclassResponse autoclass) {
            this.autoclass = Objects.requireNonNull(autoclass);
            return this;
        }

        public Builder setBilling(BucketBillingResponse billing) {
            this.billing = Objects.requireNonNull(billing);
            return this;
        }

        public Builder setCors(List<BucketCorsItemResponse> cors) {
            this.cors = Objects.requireNonNull(cors);
            return this;
        }

        public Builder setCustomPlacementConfig(BucketCustomPlacementConfigResponse customPlacementConfig) {
            this.customPlacementConfig = Objects.requireNonNull(customPlacementConfig);
            return this;
        }

        public Builder setDefaultEventBasedHold(Boolean defaultEventBasedHold) {
            this.defaultEventBasedHold = Objects.requireNonNull(defaultEventBasedHold);
            return this;
        }

        public Builder setDefaultObjectAcl(List<ObjectAccessControlResponse> defaultObjectAcl) {
            this.defaultObjectAcl = Objects.requireNonNull(defaultObjectAcl);
            return this;
        }

        public Builder setEncryption(BucketEncryptionResponse encryption) {
            this.encryption = Objects.requireNonNull(encryption);
            return this;
        }

        public Builder setEtag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }

        public Builder setIamConfiguration(BucketIamConfigurationResponse iamConfiguration) {
            this.iamConfiguration = Objects.requireNonNull(iamConfiguration);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setLifecycle(BucketLifecycleResponse lifecycle) {
            this.lifecycle = Objects.requireNonNull(lifecycle);
            return this;
        }

        public Builder setLocation(String location) {
            this.location = Objects.requireNonNull(location);
            return this;
        }

        public Builder setLocationType(String locationType) {
            this.locationType = Objects.requireNonNull(locationType);
            return this;
        }

        public Builder setLogging(BucketLoggingResponse logging) {
            this.logging = Objects.requireNonNull(logging);
            return this;
        }

        public Builder setMetageneration(String metageneration) {
            this.metageneration = Objects.requireNonNull(metageneration);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOwner(BucketOwnerResponse owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }

        public Builder setProjectNumber(String projectNumber) {
            this.projectNumber = Objects.requireNonNull(projectNumber);
            return this;
        }

        public Builder setRetentionPolicy(BucketRetentionPolicyResponse retentionPolicy) {
            this.retentionPolicy = Objects.requireNonNull(retentionPolicy);
            return this;
        }

        public Builder setRpo(String rpo) {
            this.rpo = Objects.requireNonNull(rpo);
            return this;
        }

        public Builder setSatisfiesPZS(Boolean satisfiesPZS) {
            this.satisfiesPZS = Objects.requireNonNull(satisfiesPZS);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setStorageClass(String storageClass) {
            this.storageClass = Objects.requireNonNull(storageClass);
            return this;
        }

        public Builder setTimeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }

        public Builder setUpdated(String updated) {
            this.updated = Objects.requireNonNull(updated);
            return this;
        }

        public Builder setVersioning(BucketVersioningResponse versioning) {
            this.versioning = Objects.requireNonNull(versioning);
            return this;
        }

        public Builder setWebsite(BucketWebsiteResponse website) {
            this.website = Objects.requireNonNull(website);
            return this;
        }

        public GetBucketResult build() {
            return new GetBucketResult(acl, autoclass, billing, cors, customPlacementConfig, defaultEventBasedHold, defaultObjectAcl, encryption, etag, iamConfiguration, kind, labels, lifecycle, location, locationType, logging, metageneration, name, owner, projectNumber, retentionPolicy, rpo, satisfiesPZS, selfLink, storageClass, timeCreated, updated, versioning, website);
        }
    }
}
