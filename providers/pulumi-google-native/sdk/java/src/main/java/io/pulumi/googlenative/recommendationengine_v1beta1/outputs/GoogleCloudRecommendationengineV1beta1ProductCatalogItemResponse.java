// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.recommendationengine_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.recommendationengine_v1beta1.outputs.GoogleCloudRecommendationengineV1beta1ImageResponse;
import io.pulumi.googlenative.recommendationengine_v1beta1.outputs.GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPriceResponse;
import io.pulumi.googlenative.recommendationengine_v1beta1.outputs.GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRangeResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponse {
    private final String availableQuantity;
    private final String canonicalProductUri;
    private final Map<String,String> costs;
    private final String currencyCode;
    private final GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPriceResponse exactPrice;
    private final List<GoogleCloudRecommendationengineV1beta1ImageResponse> images;
    private final GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRangeResponse priceRange;
    private final String stockState;

    @OutputCustomType.Constructor({"availableQuantity","canonicalProductUri","costs","currencyCode","exactPrice","images","priceRange","stockState"})
    private GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponse(
        String availableQuantity,
        String canonicalProductUri,
        Map<String,String> costs,
        String currencyCode,
        GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPriceResponse exactPrice,
        List<GoogleCloudRecommendationengineV1beta1ImageResponse> images,
        GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRangeResponse priceRange,
        String stockState) {
        this.availableQuantity = Objects.requireNonNull(availableQuantity);
        this.canonicalProductUri = Objects.requireNonNull(canonicalProductUri);
        this.costs = Objects.requireNonNull(costs);
        this.currencyCode = Objects.requireNonNull(currencyCode);
        this.exactPrice = Objects.requireNonNull(exactPrice);
        this.images = Objects.requireNonNull(images);
        this.priceRange = Objects.requireNonNull(priceRange);
        this.stockState = Objects.requireNonNull(stockState);
    }

    public String getAvailableQuantity() {
        return this.availableQuantity;
    }
    public String getCanonicalProductUri() {
        return this.canonicalProductUri;
    }
    public Map<String,String> getCosts() {
        return this.costs;
    }
    public String getCurrencyCode() {
        return this.currencyCode;
    }
    public GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPriceResponse getExactPrice() {
        return this.exactPrice;
    }
    public List<GoogleCloudRecommendationengineV1beta1ImageResponse> getImages() {
        return this.images;
    }
    public GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRangeResponse getPriceRange() {
        return this.priceRange;
    }
    public String getStockState() {
        return this.stockState;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String availableQuantity;
        private String canonicalProductUri;
        private Map<String,String> costs;
        private String currencyCode;
        private GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPriceResponse exactPrice;
        private List<GoogleCloudRecommendationengineV1beta1ImageResponse> images;
        private GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRangeResponse priceRange;
        private String stockState;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableQuantity = defaults.availableQuantity;
    	      this.canonicalProductUri = defaults.canonicalProductUri;
    	      this.costs = defaults.costs;
    	      this.currencyCode = defaults.currencyCode;
    	      this.exactPrice = defaults.exactPrice;
    	      this.images = defaults.images;
    	      this.priceRange = defaults.priceRange;
    	      this.stockState = defaults.stockState;
        }

        public Builder setAvailableQuantity(String availableQuantity) {
            this.availableQuantity = Objects.requireNonNull(availableQuantity);
            return this;
        }

        public Builder setCanonicalProductUri(String canonicalProductUri) {
            this.canonicalProductUri = Objects.requireNonNull(canonicalProductUri);
            return this;
        }

        public Builder setCosts(Map<String,String> costs) {
            this.costs = Objects.requireNonNull(costs);
            return this;
        }

        public Builder setCurrencyCode(String currencyCode) {
            this.currencyCode = Objects.requireNonNull(currencyCode);
            return this;
        }

        public Builder setExactPrice(GoogleCloudRecommendationengineV1beta1ProductCatalogItemExactPriceResponse exactPrice) {
            this.exactPrice = Objects.requireNonNull(exactPrice);
            return this;
        }

        public Builder setImages(List<GoogleCloudRecommendationengineV1beta1ImageResponse> images) {
            this.images = Objects.requireNonNull(images);
            return this;
        }

        public Builder setPriceRange(GoogleCloudRecommendationengineV1beta1ProductCatalogItemPriceRangeResponse priceRange) {
            this.priceRange = Objects.requireNonNull(priceRange);
            return this;
        }

        public Builder setStockState(String stockState) {
            this.stockState = Objects.requireNonNull(stockState);
            return this;
        }

        public GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponse build() {
            return new GoogleCloudRecommendationengineV1beta1ProductCatalogItemResponse(availableQuantity, canonicalProductUri, costs, currencyCode, exactPrice, images, priceRange, stockState);
        }
    }
}
