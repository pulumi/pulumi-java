// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.compute_v1.enums.InstanceGroupManagerUpdatePolicyInstanceRedistributionType;
import io.pulumi.googlenative.compute_v1.enums.InstanceGroupManagerUpdatePolicyMinimalAction;
import io.pulumi.googlenative.compute_v1.enums.InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction;
import io.pulumi.googlenative.compute_v1.enums.InstanceGroupManagerUpdatePolicyReplacementMethod;
import io.pulumi.googlenative.compute_v1.enums.InstanceGroupManagerUpdatePolicyType;
import io.pulumi.googlenative.compute_v1.inputs.FixedOrPercentArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceGroupManagerUpdatePolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceGroupManagerUpdatePolicyArgs Empty = new InstanceGroupManagerUpdatePolicyArgs();

    @InputImport(name="instanceRedistributionType")
    private final @Nullable Input<InstanceGroupManagerUpdatePolicyInstanceRedistributionType> instanceRedistributionType;

    public Input<InstanceGroupManagerUpdatePolicyInstanceRedistributionType> getInstanceRedistributionType() {
        return this.instanceRedistributionType == null ? Input.empty() : this.instanceRedistributionType;
    }

    @InputImport(name="maxSurge")
    private final @Nullable Input<FixedOrPercentArgs> maxSurge;

    public Input<FixedOrPercentArgs> getMaxSurge() {
        return this.maxSurge == null ? Input.empty() : this.maxSurge;
    }

    @InputImport(name="maxUnavailable")
    private final @Nullable Input<FixedOrPercentArgs> maxUnavailable;

    public Input<FixedOrPercentArgs> getMaxUnavailable() {
        return this.maxUnavailable == null ? Input.empty() : this.maxUnavailable;
    }

    @InputImport(name="minimalAction")
    private final @Nullable Input<InstanceGroupManagerUpdatePolicyMinimalAction> minimalAction;

    public Input<InstanceGroupManagerUpdatePolicyMinimalAction> getMinimalAction() {
        return this.minimalAction == null ? Input.empty() : this.minimalAction;
    }

    @InputImport(name="mostDisruptiveAllowedAction")
    private final @Nullable Input<InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction> mostDisruptiveAllowedAction;

    public Input<InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction> getMostDisruptiveAllowedAction() {
        return this.mostDisruptiveAllowedAction == null ? Input.empty() : this.mostDisruptiveAllowedAction;
    }

    @InputImport(name="replacementMethod")
    private final @Nullable Input<InstanceGroupManagerUpdatePolicyReplacementMethod> replacementMethod;

    public Input<InstanceGroupManagerUpdatePolicyReplacementMethod> getReplacementMethod() {
        return this.replacementMethod == null ? Input.empty() : this.replacementMethod;
    }

    @InputImport(name="type")
    private final @Nullable Input<InstanceGroupManagerUpdatePolicyType> type;

    public Input<InstanceGroupManagerUpdatePolicyType> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    public InstanceGroupManagerUpdatePolicyArgs(
        @Nullable Input<InstanceGroupManagerUpdatePolicyInstanceRedistributionType> instanceRedistributionType,
        @Nullable Input<FixedOrPercentArgs> maxSurge,
        @Nullable Input<FixedOrPercentArgs> maxUnavailable,
        @Nullable Input<InstanceGroupManagerUpdatePolicyMinimalAction> minimalAction,
        @Nullable Input<InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction> mostDisruptiveAllowedAction,
        @Nullable Input<InstanceGroupManagerUpdatePolicyReplacementMethod> replacementMethod,
        @Nullable Input<InstanceGroupManagerUpdatePolicyType> type) {
        this.instanceRedistributionType = instanceRedistributionType;
        this.maxSurge = maxSurge;
        this.maxUnavailable = maxUnavailable;
        this.minimalAction = minimalAction;
        this.mostDisruptiveAllowedAction = mostDisruptiveAllowedAction;
        this.replacementMethod = replacementMethod;
        this.type = type;
    }

    private InstanceGroupManagerUpdatePolicyArgs() {
        this.instanceRedistributionType = Input.empty();
        this.maxSurge = Input.empty();
        this.maxUnavailable = Input.empty();
        this.minimalAction = Input.empty();
        this.mostDisruptiveAllowedAction = Input.empty();
        this.replacementMethod = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceGroupManagerUpdatePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<InstanceGroupManagerUpdatePolicyInstanceRedistributionType> instanceRedistributionType;
        private @Nullable Input<FixedOrPercentArgs> maxSurge;
        private @Nullable Input<FixedOrPercentArgs> maxUnavailable;
        private @Nullable Input<InstanceGroupManagerUpdatePolicyMinimalAction> minimalAction;
        private @Nullable Input<InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction> mostDisruptiveAllowedAction;
        private @Nullable Input<InstanceGroupManagerUpdatePolicyReplacementMethod> replacementMethod;
        private @Nullable Input<InstanceGroupManagerUpdatePolicyType> type;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceGroupManagerUpdatePolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.instanceRedistributionType = defaults.instanceRedistributionType;
    	      this.maxSurge = defaults.maxSurge;
    	      this.maxUnavailable = defaults.maxUnavailable;
    	      this.minimalAction = defaults.minimalAction;
    	      this.mostDisruptiveAllowedAction = defaults.mostDisruptiveAllowedAction;
    	      this.replacementMethod = defaults.replacementMethod;
    	      this.type = defaults.type;
        }

        public Builder setInstanceRedistributionType(@Nullable Input<InstanceGroupManagerUpdatePolicyInstanceRedistributionType> instanceRedistributionType) {
            this.instanceRedistributionType = instanceRedistributionType;
            return this;
        }

        public Builder setInstanceRedistributionType(@Nullable InstanceGroupManagerUpdatePolicyInstanceRedistributionType instanceRedistributionType) {
            this.instanceRedistributionType = Input.ofNullable(instanceRedistributionType);
            return this;
        }

        public Builder setMaxSurge(@Nullable Input<FixedOrPercentArgs> maxSurge) {
            this.maxSurge = maxSurge;
            return this;
        }

        public Builder setMaxSurge(@Nullable FixedOrPercentArgs maxSurge) {
            this.maxSurge = Input.ofNullable(maxSurge);
            return this;
        }

        public Builder setMaxUnavailable(@Nullable Input<FixedOrPercentArgs> maxUnavailable) {
            this.maxUnavailable = maxUnavailable;
            return this;
        }

        public Builder setMaxUnavailable(@Nullable FixedOrPercentArgs maxUnavailable) {
            this.maxUnavailable = Input.ofNullable(maxUnavailable);
            return this;
        }

        public Builder setMinimalAction(@Nullable Input<InstanceGroupManagerUpdatePolicyMinimalAction> minimalAction) {
            this.minimalAction = minimalAction;
            return this;
        }

        public Builder setMinimalAction(@Nullable InstanceGroupManagerUpdatePolicyMinimalAction minimalAction) {
            this.minimalAction = Input.ofNullable(minimalAction);
            return this;
        }

        public Builder setMostDisruptiveAllowedAction(@Nullable Input<InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction> mostDisruptiveAllowedAction) {
            this.mostDisruptiveAllowedAction = mostDisruptiveAllowedAction;
            return this;
        }

        public Builder setMostDisruptiveAllowedAction(@Nullable InstanceGroupManagerUpdatePolicyMostDisruptiveAllowedAction mostDisruptiveAllowedAction) {
            this.mostDisruptiveAllowedAction = Input.ofNullable(mostDisruptiveAllowedAction);
            return this;
        }

        public Builder setReplacementMethod(@Nullable Input<InstanceGroupManagerUpdatePolicyReplacementMethod> replacementMethod) {
            this.replacementMethod = replacementMethod;
            return this;
        }

        public Builder setReplacementMethod(@Nullable InstanceGroupManagerUpdatePolicyReplacementMethod replacementMethod) {
            this.replacementMethod = Input.ofNullable(replacementMethod);
            return this;
        }

        public Builder setType(@Nullable Input<InstanceGroupManagerUpdatePolicyType> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable InstanceGroupManagerUpdatePolicyType type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public InstanceGroupManagerUpdatePolicyArgs build() {
            return new InstanceGroupManagerUpdatePolicyArgs(instanceRedistributionType, maxSurge, maxUnavailable, minimalAction, mostDisruptiveAllowedAction, replacementMethod, type);
        }
    }
}
