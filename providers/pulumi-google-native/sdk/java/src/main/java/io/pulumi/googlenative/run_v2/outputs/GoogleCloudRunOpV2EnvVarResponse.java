// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.run_v2.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.run_v2.outputs.GoogleCloudRunOpV2EnvVarSourceResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GoogleCloudRunOpV2EnvVarResponse {
    /**
     * Name of the environment variable. Must be a C_IDENTIFIER, and mnay not exceed 32768 characters.
     * 
     */
    private final String name;
    /**
     * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "", and the maximum length is 32768 bytes.
     * 
     */
    private final String value;
    /**
     * Source for the environment variable's value.
     * 
     */
    private final GoogleCloudRunOpV2EnvVarSourceResponse valueSource;

    @OutputCustomType.Constructor({"name","value","valueSource"})
    private GoogleCloudRunOpV2EnvVarResponse(
        String name,
        String value,
        GoogleCloudRunOpV2EnvVarSourceResponse valueSource) {
        this.name = name;
        this.value = value;
        this.valueSource = valueSource;
    }

    /**
     * Name of the environment variable. Must be a C_IDENTIFIER, and mnay not exceed 32768 characters.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "", and the maximum length is 32768 bytes.
     * 
    */
    public String getValue() {
        return this.value;
    }
    /**
     * Source for the environment variable's value.
     * 
    */
    public GoogleCloudRunOpV2EnvVarSourceResponse getValueSource() {
        return this.valueSource;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRunOpV2EnvVarResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String name;
        private String value;
        private GoogleCloudRunOpV2EnvVarSourceResponse valueSource;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRunOpV2EnvVarResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.value = defaults.value;
    	      this.valueSource = defaults.valueSource;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setValue(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }

        public Builder setValueSource(GoogleCloudRunOpV2EnvVarSourceResponse valueSource) {
            this.valueSource = Objects.requireNonNull(valueSource);
            return this;
        }
        public GoogleCloudRunOpV2EnvVarResponse build() {
            return new GoogleCloudRunOpV2EnvVarResponse(name, value, valueSource);
        }
    }
}
