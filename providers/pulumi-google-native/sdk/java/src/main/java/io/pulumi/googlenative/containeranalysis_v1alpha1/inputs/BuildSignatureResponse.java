// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class BuildSignatureResponse extends io.pulumi.resources.InvokeArgs {

    public static final BuildSignatureResponse Empty = new BuildSignatureResponse();

    @InputImport(name="keyId", required=true)
    private final String keyId;

    public String getKeyId() {
        return this.keyId;
    }

    @InputImport(name="keyType", required=true)
    private final String keyType;

    public String getKeyType() {
        return this.keyType;
    }

    @InputImport(name="publicKey", required=true)
    private final String publicKey;

    public String getPublicKey() {
        return this.publicKey;
    }

    @InputImport(name="signature", required=true)
    private final String signature;

    public String getSignature() {
        return this.signature;
    }

    public BuildSignatureResponse(
        String keyId,
        String keyType,
        String publicKey,
        String signature) {
        this.keyId = Objects.requireNonNull(keyId, "expected parameter 'keyId' to be non-null");
        this.keyType = Objects.requireNonNull(keyType, "expected parameter 'keyType' to be non-null");
        this.publicKey = Objects.requireNonNull(publicKey, "expected parameter 'publicKey' to be non-null");
        this.signature = Objects.requireNonNull(signature, "expected parameter 'signature' to be non-null");
    }

    private BuildSignatureResponse() {
        this.keyId = null;
        this.keyType = null;
        this.publicKey = null;
        this.signature = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BuildSignatureResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String keyId;
        private String keyType;
        private String publicKey;
        private String signature;

        public Builder() {
    	      // Empty
        }

        public Builder(BuildSignatureResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyId = defaults.keyId;
    	      this.keyType = defaults.keyType;
    	      this.publicKey = defaults.publicKey;
    	      this.signature = defaults.signature;
        }

        public Builder setKeyId(String keyId) {
            this.keyId = Objects.requireNonNull(keyId);
            return this;
        }

        public Builder setKeyType(String keyType) {
            this.keyType = Objects.requireNonNull(keyType);
            return this;
        }

        public Builder setPublicKey(String publicKey) {
            this.publicKey = Objects.requireNonNull(publicKey);
            return this;
        }

        public Builder setSignature(String signature) {
            this.signature = Objects.requireNonNull(signature);
            return this;
        }

        public BuildSignatureResponse build() {
            return new BuildSignatureResponse(keyId, keyType, publicKey, signature);
        }
    }
}
