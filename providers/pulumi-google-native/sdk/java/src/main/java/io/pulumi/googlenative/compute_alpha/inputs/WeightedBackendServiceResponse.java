// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.compute_alpha.inputs.HttpHeaderActionResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class WeightedBackendServiceResponse extends io.pulumi.resources.InvokeArgs {

    public static final WeightedBackendServiceResponse Empty = new WeightedBackendServiceResponse();

    @InputImport(name="backendService", required=true)
    private final String backendService;

    public String getBackendService() {
        return this.backendService;
    }

    @InputImport(name="headerAction", required=true)
    private final HttpHeaderActionResponse headerAction;

    public HttpHeaderActionResponse getHeaderAction() {
        return this.headerAction;
    }

    @InputImport(name="weight", required=true)
    private final Integer weight;

    public Integer getWeight() {
        return this.weight;
    }

    public WeightedBackendServiceResponse(
        String backendService,
        HttpHeaderActionResponse headerAction,
        Integer weight) {
        this.backendService = Objects.requireNonNull(backendService, "expected parameter 'backendService' to be non-null");
        this.headerAction = Objects.requireNonNull(headerAction, "expected parameter 'headerAction' to be non-null");
        this.weight = Objects.requireNonNull(weight, "expected parameter 'weight' to be non-null");
    }

    private WeightedBackendServiceResponse() {
        this.backendService = null;
        this.headerAction = null;
        this.weight = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WeightedBackendServiceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String backendService;
        private HttpHeaderActionResponse headerAction;
        private Integer weight;

        public Builder() {
    	      // Empty
        }

        public Builder(WeightedBackendServiceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendService = defaults.backendService;
    	      this.headerAction = defaults.headerAction;
    	      this.weight = defaults.weight;
        }

        public Builder setBackendService(String backendService) {
            this.backendService = Objects.requireNonNull(backendService);
            return this;
        }

        public Builder setHeaderAction(HttpHeaderActionResponse headerAction) {
            this.headerAction = Objects.requireNonNull(headerAction);
            return this;
        }

        public Builder setWeight(Integer weight) {
            this.weight = Objects.requireNonNull(weight);
            return this;
        }

        public WeightedBackendServiceResponse build() {
            return new WeightedBackendServiceResponse(backendService, headerAction, weight);
        }
    }
}
