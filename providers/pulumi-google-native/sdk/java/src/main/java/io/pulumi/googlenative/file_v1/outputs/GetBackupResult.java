// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.file_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetBackupResult {
    private final String capacityGb;
    private final String createTime;
    private final String description;
    private final String downloadBytes;
    private final Map<String,String> labels;
    private final String name;
    private final Boolean satisfiesPzs;
    private final String sourceFileShare;
    private final String sourceInstance;
    private final String sourceInstanceTier;
    private final String state;
    private final String storageBytes;

    @OutputCustomType.Constructor({"capacityGb","createTime","description","downloadBytes","labels","name","satisfiesPzs","sourceFileShare","sourceInstance","sourceInstanceTier","state","storageBytes"})
    private GetBackupResult(
        String capacityGb,
        String createTime,
        String description,
        String downloadBytes,
        Map<String,String> labels,
        String name,
        Boolean satisfiesPzs,
        String sourceFileShare,
        String sourceInstance,
        String sourceInstanceTier,
        String state,
        String storageBytes) {
        this.capacityGb = Objects.requireNonNull(capacityGb);
        this.createTime = Objects.requireNonNull(createTime);
        this.description = Objects.requireNonNull(description);
        this.downloadBytes = Objects.requireNonNull(downloadBytes);
        this.labels = Objects.requireNonNull(labels);
        this.name = Objects.requireNonNull(name);
        this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
        this.sourceFileShare = Objects.requireNonNull(sourceFileShare);
        this.sourceInstance = Objects.requireNonNull(sourceInstance);
        this.sourceInstanceTier = Objects.requireNonNull(sourceInstanceTier);
        this.state = Objects.requireNonNull(state);
        this.storageBytes = Objects.requireNonNull(storageBytes);
    }

    public String getCapacityGb() {
        return this.capacityGb;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public String getDescription() {
        return this.description;
    }
    public String getDownloadBytes() {
        return this.downloadBytes;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public String getName() {
        return this.name;
    }
    public Boolean getSatisfiesPzs() {
        return this.satisfiesPzs;
    }
    public String getSourceFileShare() {
        return this.sourceFileShare;
    }
    public String getSourceInstance() {
        return this.sourceInstance;
    }
    public String getSourceInstanceTier() {
        return this.sourceInstanceTier;
    }
    public String getState() {
        return this.state;
    }
    public String getStorageBytes() {
        return this.storageBytes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String capacityGb;
        private String createTime;
        private String description;
        private String downloadBytes;
        private Map<String,String> labels;
        private String name;
        private Boolean satisfiesPzs;
        private String sourceFileShare;
        private String sourceInstance;
        private String sourceInstanceTier;
        private String state;
        private String storageBytes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBackupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityGb = defaults.capacityGb;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.downloadBytes = defaults.downloadBytes;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.sourceFileShare = defaults.sourceFileShare;
    	      this.sourceInstance = defaults.sourceInstance;
    	      this.sourceInstanceTier = defaults.sourceInstanceTier;
    	      this.state = defaults.state;
    	      this.storageBytes = defaults.storageBytes;
        }

        public Builder setCapacityGb(String capacityGb) {
            this.capacityGb = Objects.requireNonNull(capacityGb);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDownloadBytes(String downloadBytes) {
            this.downloadBytes = Objects.requireNonNull(downloadBytes);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSatisfiesPzs(Boolean satisfiesPzs) {
            this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
            return this;
        }

        public Builder setSourceFileShare(String sourceFileShare) {
            this.sourceFileShare = Objects.requireNonNull(sourceFileShare);
            return this;
        }

        public Builder setSourceInstance(String sourceInstance) {
            this.sourceInstance = Objects.requireNonNull(sourceInstance);
            return this;
        }

        public Builder setSourceInstanceTier(String sourceInstanceTier) {
            this.sourceInstanceTier = Objects.requireNonNull(sourceInstanceTier);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setStorageBytes(String storageBytes) {
            this.storageBytes = Objects.requireNonNull(storageBytes);
            return this;
        }

        public GetBackupResult build() {
            return new GetBackupResult(capacityGb, createTime, description, downloadBytes, labels, name, satisfiesPzs, sourceFileShare, sourceInstance, sourceInstanceTier, state, storageBytes);
        }
    }
}
