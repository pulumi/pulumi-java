// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.networkmanagement_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class InstanceInfoResponse {
    private final String displayName;
    private final String externalIp;
    private final String $interface;
    private final String internalIp;
    private final List<String> networkTags;
    private final String networkUri;
    private final String serviceAccount;
    private final String uri;

    @OutputCustomType.Constructor({"displayName","externalIp","$interface","internalIp","networkTags","networkUri","serviceAccount","uri"})
    private InstanceInfoResponse(
        String displayName,
        String externalIp,
        String $interface,
        String internalIp,
        List<String> networkTags,
        String networkUri,
        String serviceAccount,
        String uri) {
        this.displayName = Objects.requireNonNull(displayName);
        this.externalIp = Objects.requireNonNull(externalIp);
        this.$interface = Objects.requireNonNull($interface);
        this.internalIp = Objects.requireNonNull(internalIp);
        this.networkTags = Objects.requireNonNull(networkTags);
        this.networkUri = Objects.requireNonNull(networkUri);
        this.serviceAccount = Objects.requireNonNull(serviceAccount);
        this.uri = Objects.requireNonNull(uri);
    }

    public String getDisplayName() {
        return this.displayName;
    }
    public String getExternalIp() {
        return this.externalIp;
    }
    public String get$interface() {
        return this.$interface;
    }
    public String getInternalIp() {
        return this.internalIp;
    }
    public List<String> getNetworkTags() {
        return this.networkTags;
    }
    public String getNetworkUri() {
        return this.networkUri;
    }
    public String getServiceAccount() {
        return this.serviceAccount;
    }
    public String getUri() {
        return this.uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String displayName;
        private String externalIp;
        private String $interface;
        private String internalIp;
        private List<String> networkTags;
        private String networkUri;
        private String serviceAccount;
        private String uri;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.externalIp = defaults.externalIp;
    	      this.$interface = defaults.$interface;
    	      this.internalIp = defaults.internalIp;
    	      this.networkTags = defaults.networkTags;
    	      this.networkUri = defaults.networkUri;
    	      this.serviceAccount = defaults.serviceAccount;
    	      this.uri = defaults.uri;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setExternalIp(String externalIp) {
            this.externalIp = Objects.requireNonNull(externalIp);
            return this;
        }

        public Builder set$interface(String $interface) {
            this.$interface = Objects.requireNonNull($interface);
            return this;
        }

        public Builder setInternalIp(String internalIp) {
            this.internalIp = Objects.requireNonNull(internalIp);
            return this;
        }

        public Builder setNetworkTags(List<String> networkTags) {
            this.networkTags = Objects.requireNonNull(networkTags);
            return this;
        }

        public Builder setNetworkUri(String networkUri) {
            this.networkUri = Objects.requireNonNull(networkUri);
            return this;
        }

        public Builder setServiceAccount(String serviceAccount) {
            this.serviceAccount = Objects.requireNonNull(serviceAccount);
            return this;
        }

        public Builder setUri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }

        public InstanceInfoResponse build() {
            return new InstanceInfoResponse(displayName, externalIp, $interface, internalIp, networkTags, networkUri, serviceAccount, uri);
        }
    }
}
