// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.privateca_v1beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;


/**
 * IssuanceModes specifies the allowed ways in which Certificates may be requested from this CertificateAuthority.
 * 
 */
public final class IssuanceModesArgs extends io.pulumi.resources.ResourceArgs {

    public static final IssuanceModesArgs Empty = new IssuanceModesArgs();

    /**
     * When true, allows callers to create Certificates by specifying a CertificateConfig.
     * 
     */
    @Import(name="allowConfigBasedIssuance", required=true)
      private final Output<Boolean> allowConfigBasedIssuance;

    public Output<Boolean> getAllowConfigBasedIssuance() {
        return this.allowConfigBasedIssuance;
    }

    /**
     * When true, allows callers to create Certificates by specifying a CSR.
     * 
     */
    @Import(name="allowCsrBasedIssuance", required=true)
      private final Output<Boolean> allowCsrBasedIssuance;

    public Output<Boolean> getAllowCsrBasedIssuance() {
        return this.allowCsrBasedIssuance;
    }

    public IssuanceModesArgs(
        Output<Boolean> allowConfigBasedIssuance,
        Output<Boolean> allowCsrBasedIssuance) {
        this.allowConfigBasedIssuance = Objects.requireNonNull(allowConfigBasedIssuance, "expected parameter 'allowConfigBasedIssuance' to be non-null");
        this.allowCsrBasedIssuance = Objects.requireNonNull(allowCsrBasedIssuance, "expected parameter 'allowCsrBasedIssuance' to be non-null");
    }

    private IssuanceModesArgs() {
        this.allowConfigBasedIssuance = Output.empty();
        this.allowCsrBasedIssuance = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IssuanceModesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<Boolean> allowConfigBasedIssuance;
        private Output<Boolean> allowCsrBasedIssuance;

        public Builder() {
    	      // Empty
        }

        public Builder(IssuanceModesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowConfigBasedIssuance = defaults.allowConfigBasedIssuance;
    	      this.allowCsrBasedIssuance = defaults.allowCsrBasedIssuance;
        }

        public Builder allowConfigBasedIssuance(Output<Boolean> allowConfigBasedIssuance) {
            this.allowConfigBasedIssuance = Objects.requireNonNull(allowConfigBasedIssuance);
            return this;
        }
        public Builder allowConfigBasedIssuance(Boolean allowConfigBasedIssuance) {
            this.allowConfigBasedIssuance = Output.of(Objects.requireNonNull(allowConfigBasedIssuance));
            return this;
        }
        public Builder allowCsrBasedIssuance(Output<Boolean> allowCsrBasedIssuance) {
            this.allowCsrBasedIssuance = Objects.requireNonNull(allowCsrBasedIssuance);
            return this;
        }
        public Builder allowCsrBasedIssuance(Boolean allowCsrBasedIssuance) {
            this.allowCsrBasedIssuance = Output.of(Objects.requireNonNull(allowCsrBasedIssuance));
            return this;
        }        public IssuanceModesArgs build() {
            return new IssuanceModesArgs(allowConfigBasedIssuance, allowCsrBasedIssuance);
        }
    }
}
