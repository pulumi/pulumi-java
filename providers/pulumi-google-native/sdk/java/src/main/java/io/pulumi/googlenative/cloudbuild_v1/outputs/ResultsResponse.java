// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudbuild_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.cloudbuild_v1.outputs.BuiltImageResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.TimeSpanResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class ResultsResponse {
    private final String artifactManifest;
    private final TimeSpanResponse artifactTiming;
    private final List<String> buildStepImages;
    private final List<String> buildStepOutputs;
    private final List<BuiltImageResponse> images;
    private final String numArtifacts;

    @OutputCustomType.Constructor({"artifactManifest","artifactTiming","buildStepImages","buildStepOutputs","images","numArtifacts"})
    private ResultsResponse(
        String artifactManifest,
        TimeSpanResponse artifactTiming,
        List<String> buildStepImages,
        List<String> buildStepOutputs,
        List<BuiltImageResponse> images,
        String numArtifacts) {
        this.artifactManifest = Objects.requireNonNull(artifactManifest);
        this.artifactTiming = Objects.requireNonNull(artifactTiming);
        this.buildStepImages = Objects.requireNonNull(buildStepImages);
        this.buildStepOutputs = Objects.requireNonNull(buildStepOutputs);
        this.images = Objects.requireNonNull(images);
        this.numArtifacts = Objects.requireNonNull(numArtifacts);
    }

    public String getArtifactManifest() {
        return this.artifactManifest;
    }
    public TimeSpanResponse getArtifactTiming() {
        return this.artifactTiming;
    }
    public List<String> getBuildStepImages() {
        return this.buildStepImages;
    }
    public List<String> getBuildStepOutputs() {
        return this.buildStepOutputs;
    }
    public List<BuiltImageResponse> getImages() {
        return this.images;
    }
    public String getNumArtifacts() {
        return this.numArtifacts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResultsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String artifactManifest;
        private TimeSpanResponse artifactTiming;
        private List<String> buildStepImages;
        private List<String> buildStepOutputs;
        private List<BuiltImageResponse> images;
        private String numArtifacts;

        public Builder() {
    	      // Empty
        }

        public Builder(ResultsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactManifest = defaults.artifactManifest;
    	      this.artifactTiming = defaults.artifactTiming;
    	      this.buildStepImages = defaults.buildStepImages;
    	      this.buildStepOutputs = defaults.buildStepOutputs;
    	      this.images = defaults.images;
    	      this.numArtifacts = defaults.numArtifacts;
        }

        public Builder setArtifactManifest(String artifactManifest) {
            this.artifactManifest = Objects.requireNonNull(artifactManifest);
            return this;
        }

        public Builder setArtifactTiming(TimeSpanResponse artifactTiming) {
            this.artifactTiming = Objects.requireNonNull(artifactTiming);
            return this;
        }

        public Builder setBuildStepImages(List<String> buildStepImages) {
            this.buildStepImages = Objects.requireNonNull(buildStepImages);
            return this;
        }

        public Builder setBuildStepOutputs(List<String> buildStepOutputs) {
            this.buildStepOutputs = Objects.requireNonNull(buildStepOutputs);
            return this;
        }

        public Builder setImages(List<BuiltImageResponse> images) {
            this.images = Objects.requireNonNull(images);
            return this;
        }

        public Builder setNumArtifacts(String numArtifacts) {
            this.numArtifacts = Objects.requireNonNull(numArtifacts);
            return this;
        }

        public ResultsResponse build() {
            return new ResultsResponse(artifactManifest, artifactTiming, buildStepImages, buildStepOutputs, images, numArtifacts);
        }
    }
}
