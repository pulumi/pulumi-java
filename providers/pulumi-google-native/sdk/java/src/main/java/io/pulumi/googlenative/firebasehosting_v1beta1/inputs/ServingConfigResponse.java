// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.firebasehosting_v1beta1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.firebasehosting_v1beta1.inputs.HeaderResponse;
import io.pulumi.googlenative.firebasehosting_v1beta1.inputs.I18nConfigResponse;
import io.pulumi.googlenative.firebasehosting_v1beta1.inputs.RedirectResponse;
import io.pulumi.googlenative.firebasehosting_v1beta1.inputs.RewriteResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ServingConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final ServingConfigResponse Empty = new ServingConfigResponse();

    @InputImport(name="appAssociation", required=true)
    private final String appAssociation;

    public String getAppAssociation() {
        return this.appAssociation;
    }

    @InputImport(name="cleanUrls", required=true)
    private final Boolean cleanUrls;

    public Boolean getCleanUrls() {
        return this.cleanUrls;
    }

    @InputImport(name="headers", required=true)
    private final List<HeaderResponse> headers;

    public List<HeaderResponse> getHeaders() {
        return this.headers;
    }

    @InputImport(name="i18n", required=true)
    private final I18nConfigResponse i18n;

    public I18nConfigResponse getI18n() {
        return this.i18n;
    }

    @InputImport(name="redirects", required=true)
    private final List<RedirectResponse> redirects;

    public List<RedirectResponse> getRedirects() {
        return this.redirects;
    }

    @InputImport(name="rewrites", required=true)
    private final List<RewriteResponse> rewrites;

    public List<RewriteResponse> getRewrites() {
        return this.rewrites;
    }

    @InputImport(name="trailingSlashBehavior", required=true)
    private final String trailingSlashBehavior;

    public String getTrailingSlashBehavior() {
        return this.trailingSlashBehavior;
    }

    public ServingConfigResponse(
        String appAssociation,
        Boolean cleanUrls,
        List<HeaderResponse> headers,
        I18nConfigResponse i18n,
        List<RedirectResponse> redirects,
        List<RewriteResponse> rewrites,
        String trailingSlashBehavior) {
        this.appAssociation = Objects.requireNonNull(appAssociation, "expected parameter 'appAssociation' to be non-null");
        this.cleanUrls = Objects.requireNonNull(cleanUrls, "expected parameter 'cleanUrls' to be non-null");
        this.headers = Objects.requireNonNull(headers, "expected parameter 'headers' to be non-null");
        this.i18n = Objects.requireNonNull(i18n, "expected parameter 'i18n' to be non-null");
        this.redirects = Objects.requireNonNull(redirects, "expected parameter 'redirects' to be non-null");
        this.rewrites = Objects.requireNonNull(rewrites, "expected parameter 'rewrites' to be non-null");
        this.trailingSlashBehavior = Objects.requireNonNull(trailingSlashBehavior, "expected parameter 'trailingSlashBehavior' to be non-null");
    }

    private ServingConfigResponse() {
        this.appAssociation = null;
        this.cleanUrls = null;
        this.headers = List.of();
        this.i18n = null;
        this.redirects = List.of();
        this.rewrites = List.of();
        this.trailingSlashBehavior = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServingConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String appAssociation;
        private Boolean cleanUrls;
        private List<HeaderResponse> headers;
        private I18nConfigResponse i18n;
        private List<RedirectResponse> redirects;
        private List<RewriteResponse> rewrites;
        private String trailingSlashBehavior;

        public Builder() {
    	      // Empty
        }

        public Builder(ServingConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appAssociation = defaults.appAssociation;
    	      this.cleanUrls = defaults.cleanUrls;
    	      this.headers = defaults.headers;
    	      this.i18n = defaults.i18n;
    	      this.redirects = defaults.redirects;
    	      this.rewrites = defaults.rewrites;
    	      this.trailingSlashBehavior = defaults.trailingSlashBehavior;
        }

        public Builder setAppAssociation(String appAssociation) {
            this.appAssociation = Objects.requireNonNull(appAssociation);
            return this;
        }

        public Builder setCleanUrls(Boolean cleanUrls) {
            this.cleanUrls = Objects.requireNonNull(cleanUrls);
            return this;
        }

        public Builder setHeaders(List<HeaderResponse> headers) {
            this.headers = Objects.requireNonNull(headers);
            return this;
        }

        public Builder setI18n(I18nConfigResponse i18n) {
            this.i18n = Objects.requireNonNull(i18n);
            return this;
        }

        public Builder setRedirects(List<RedirectResponse> redirects) {
            this.redirects = Objects.requireNonNull(redirects);
            return this;
        }

        public Builder setRewrites(List<RewriteResponse> rewrites) {
            this.rewrites = Objects.requireNonNull(rewrites);
            return this;
        }

        public Builder setTrailingSlashBehavior(String trailingSlashBehavior) {
            this.trailingSlashBehavior = Objects.requireNonNull(trailingSlashBehavior);
            return this;
        }

        public ServingConfigResponse build() {
            return new ServingConfigResponse(appAssociation, cleanUrls, headers, i18n, redirects, rewrites, trailingSlashBehavior);
        }
    }
}
