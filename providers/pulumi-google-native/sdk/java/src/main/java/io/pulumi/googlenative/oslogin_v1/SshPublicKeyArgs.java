// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.oslogin_v1;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SshPublicKeyArgs extends io.pulumi.resources.ResourceArgs {

    public static final SshPublicKeyArgs Empty = new SshPublicKeyArgs();

    /**
     * An expiration time in microseconds since epoch.
     * 
     */
    @InputImport(name="expirationTimeUsec")
      private final @Nullable Input<String> expirationTimeUsec;

    public Input<String> getExpirationTimeUsec() {
        return this.expirationTimeUsec == null ? Input.empty() : this.expirationTimeUsec;
    }

    /**
     * Public key text in SSH format, defined by RFC4253 section 6.6.
     * 
     */
    @InputImport(name="key")
      private final @Nullable Input<String> key;

    public Input<String> getKey() {
        return this.key == null ? Input.empty() : this.key;
    }

    @InputImport(name="userId", required=true)
      private final Input<String> userId;

    public Input<String> getUserId() {
        return this.userId;
    }

    public SshPublicKeyArgs(
        @Nullable Input<String> expirationTimeUsec,
        @Nullable Input<String> key,
        Input<String> userId) {
        this.expirationTimeUsec = expirationTimeUsec;
        this.key = key;
        this.userId = Objects.requireNonNull(userId, "expected parameter 'userId' to be non-null");
    }

    private SshPublicKeyArgs() {
        this.expirationTimeUsec = Input.empty();
        this.key = Input.empty();
        this.userId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SshPublicKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> expirationTimeUsec;
        private @Nullable Input<String> key;
        private Input<String> userId;

        public Builder() {
    	      // Empty
        }

        public Builder(SshPublicKeyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.expirationTimeUsec = defaults.expirationTimeUsec;
    	      this.key = defaults.key;
    	      this.userId = defaults.userId;
        }

        public Builder expirationTimeUsec(@Nullable Input<String> expirationTimeUsec) {
            this.expirationTimeUsec = expirationTimeUsec;
            return this;
        }

        public Builder expirationTimeUsec(@Nullable String expirationTimeUsec) {
            this.expirationTimeUsec = Input.ofNullable(expirationTimeUsec);
            return this;
        }

        public Builder key(@Nullable Input<String> key) {
            this.key = key;
            return this;
        }

        public Builder key(@Nullable String key) {
            this.key = Input.ofNullable(key);
            return this;
        }

        public Builder userId(Input<String> userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }

        public Builder userId(String userId) {
            this.userId = Input.of(Objects.requireNonNull(userId));
            return this;
        }
        public SshPublicKeyArgs build() {
            return new SshPublicKeyArgs(expirationTimeUsec, key, userId);
        }
    }
}
