// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.networkconnectivity_v1alpha1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.networkconnectivity_v1alpha1.outputs.RouterApplianceInstanceResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetSpokeResult {
    /**
     * The time when the Spoke was created.
     * 
     */
    private final String createTime;
    /**
     * Short description of the spoke resource
     * 
     */
    private final String description;
    /**
     * The resource URL of the hub resource that the spoke is attached to
     * 
     */
    private final String hub;
    /**
     * User-defined labels.
     * 
     */
    private final Map<String,String> labels;
    /**
     * The URIs of linked interconnect attachment resources
     * 
     */
    private final List<String> linkedInterconnectAttachments;
    /**
     * The URIs of linked Router appliance resources
     * 
     */
    private final List<RouterApplianceInstanceResponse> linkedRouterApplianceInstances;
    /**
     * The URIs of linked VPN tunnel resources
     * 
     */
    private final List<String> linkedVpnTunnels;
    /**
     * Immutable. The name of a Spoke resource.
     * 
     */
    private final String name;
    /**
     * The current lifecycle state of this Hub.
     * 
     */
    private final String state;
    /**
     * Google-generated UUID for this resource. This is unique across all Spoke resources. If a Spoke resource is deleted and another with the same name is created, it gets a different unique_id.
     * 
     */
    private final String uniqueId;
    /**
     * The time when the Spoke was updated.
     * 
     */
    private final String updateTime;

    @OutputCustomType.Constructor({"createTime","description","hub","labels","linkedInterconnectAttachments","linkedRouterApplianceInstances","linkedVpnTunnels","name","state","uniqueId","updateTime"})
    private GetSpokeResult(
        String createTime,
        String description,
        String hub,
        Map<String,String> labels,
        List<String> linkedInterconnectAttachments,
        List<RouterApplianceInstanceResponse> linkedRouterApplianceInstances,
        List<String> linkedVpnTunnels,
        String name,
        String state,
        String uniqueId,
        String updateTime) {
        this.createTime = Objects.requireNonNull(createTime);
        this.description = Objects.requireNonNull(description);
        this.hub = Objects.requireNonNull(hub);
        this.labels = Objects.requireNonNull(labels);
        this.linkedInterconnectAttachments = Objects.requireNonNull(linkedInterconnectAttachments);
        this.linkedRouterApplianceInstances = Objects.requireNonNull(linkedRouterApplianceInstances);
        this.linkedVpnTunnels = Objects.requireNonNull(linkedVpnTunnels);
        this.name = Objects.requireNonNull(name);
        this.state = Objects.requireNonNull(state);
        this.uniqueId = Objects.requireNonNull(uniqueId);
        this.updateTime = Objects.requireNonNull(updateTime);
    }

    /**
     * The time when the Spoke was created.
     * 
    */
    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * Short description of the spoke resource
     * 
    */
    public String getDescription() {
        return this.description;
    }
    /**
     * The resource URL of the hub resource that the spoke is attached to
     * 
    */
    public String getHub() {
        return this.hub;
    }
    /**
     * User-defined labels.
     * 
    */
    public Map<String,String> getLabels() {
        return this.labels;
    }
    /**
     * The URIs of linked interconnect attachment resources
     * 
    */
    public List<String> getLinkedInterconnectAttachments() {
        return this.linkedInterconnectAttachments;
    }
    /**
     * The URIs of linked Router appliance resources
     * 
    */
    public List<RouterApplianceInstanceResponse> getLinkedRouterApplianceInstances() {
        return this.linkedRouterApplianceInstances;
    }
    /**
     * The URIs of linked VPN tunnel resources
     * 
    */
    public List<String> getLinkedVpnTunnels() {
        return this.linkedVpnTunnels;
    }
    /**
     * Immutable. The name of a Spoke resource.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * The current lifecycle state of this Hub.
     * 
    */
    public String getState() {
        return this.state;
    }
    /**
     * Google-generated UUID for this resource. This is unique across all Spoke resources. If a Spoke resource is deleted and another with the same name is created, it gets a different unique_id.
     * 
    */
    public String getUniqueId() {
        return this.uniqueId;
    }
    /**
     * The time when the Spoke was updated.
     * 
    */
    public String getUpdateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSpokeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String description;
        private String hub;
        private Map<String,String> labels;
        private List<String> linkedInterconnectAttachments;
        private List<RouterApplianceInstanceResponse> linkedRouterApplianceInstances;
        private List<String> linkedVpnTunnels;
        private String name;
        private String state;
        private String uniqueId;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSpokeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.hub = defaults.hub;
    	      this.labels = defaults.labels;
    	      this.linkedInterconnectAttachments = defaults.linkedInterconnectAttachments;
    	      this.linkedRouterApplianceInstances = defaults.linkedRouterApplianceInstances;
    	      this.linkedVpnTunnels = defaults.linkedVpnTunnels;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.uniqueId = defaults.uniqueId;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setHub(String hub) {
            this.hub = Objects.requireNonNull(hub);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setLinkedInterconnectAttachments(List<String> linkedInterconnectAttachments) {
            this.linkedInterconnectAttachments = Objects.requireNonNull(linkedInterconnectAttachments);
            return this;
        }

        public Builder setLinkedRouterApplianceInstances(List<RouterApplianceInstanceResponse> linkedRouterApplianceInstances) {
            this.linkedRouterApplianceInstances = Objects.requireNonNull(linkedRouterApplianceInstances);
            return this;
        }

        public Builder setLinkedVpnTunnels(List<String> linkedVpnTunnels) {
            this.linkedVpnTunnels = Objects.requireNonNull(linkedVpnTunnels);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setUniqueId(String uniqueId) {
            this.uniqueId = Objects.requireNonNull(uniqueId);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetSpokeResult build() {
            return new GetSpokeResult(createTime, description, hub, labels, linkedInterconnectAttachments, linkedRouterApplianceInstances, linkedVpnTunnels, name, state, uniqueId, updateTime);
        }
    }
}
