// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class QuotaLimitResponse extends io.pulumi.resources.InvokeArgs {

    public static final QuotaLimitResponse Empty = new QuotaLimitResponse();

    @InputImport(name="defaultLimit", required=true)
    private final String defaultLimit;

    public String getDefaultLimit() {
        return this.defaultLimit;
    }

    @InputImport(name="description", required=true)
    private final String description;

    public String getDescription() {
        return this.description;
    }

    @InputImport(name="displayName", required=true)
    private final String displayName;

    public String getDisplayName() {
        return this.displayName;
    }

    @InputImport(name="duration", required=true)
    private final String duration;

    public String getDuration() {
        return this.duration;
    }

    @InputImport(name="freeTier", required=true)
    private final String freeTier;

    public String getFreeTier() {
        return this.freeTier;
    }

    @InputImport(name="maxLimit", required=true)
    private final String maxLimit;

    public String getMaxLimit() {
        return this.maxLimit;
    }

    @InputImport(name="metric", required=true)
    private final String metric;

    public String getMetric() {
        return this.metric;
    }

    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    @InputImport(name="unit", required=true)
    private final String unit;

    public String getUnit() {
        return this.unit;
    }

    @InputImport(name="values", required=true)
    private final Map<String,String> values;

    public Map<String,String> getValues() {
        return this.values;
    }

    public QuotaLimitResponse(
        String defaultLimit,
        String description,
        String displayName,
        String duration,
        String freeTier,
        String maxLimit,
        String metric,
        String name,
        String unit,
        Map<String,String> values) {
        this.defaultLimit = Objects.requireNonNull(defaultLimit, "expected parameter 'defaultLimit' to be non-null");
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.duration = Objects.requireNonNull(duration, "expected parameter 'duration' to be non-null");
        this.freeTier = Objects.requireNonNull(freeTier, "expected parameter 'freeTier' to be non-null");
        this.maxLimit = Objects.requireNonNull(maxLimit, "expected parameter 'maxLimit' to be non-null");
        this.metric = Objects.requireNonNull(metric, "expected parameter 'metric' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.unit = Objects.requireNonNull(unit, "expected parameter 'unit' to be non-null");
        this.values = Objects.requireNonNull(values, "expected parameter 'values' to be non-null");
    }

    private QuotaLimitResponse() {
        this.defaultLimit = null;
        this.description = null;
        this.displayName = null;
        this.duration = null;
        this.freeTier = null;
        this.maxLimit = null;
        this.metric = null;
        this.name = null;
        this.unit = null;
        this.values = Map.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(QuotaLimitResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String defaultLimit;
        private String description;
        private String displayName;
        private String duration;
        private String freeTier;
        private String maxLimit;
        private String metric;
        private String name;
        private String unit;
        private Map<String,String> values;

        public Builder() {
    	      // Empty
        }

        public Builder(QuotaLimitResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultLimit = defaults.defaultLimit;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.duration = defaults.duration;
    	      this.freeTier = defaults.freeTier;
    	      this.maxLimit = defaults.maxLimit;
    	      this.metric = defaults.metric;
    	      this.name = defaults.name;
    	      this.unit = defaults.unit;
    	      this.values = defaults.values;
        }

        public Builder setDefaultLimit(String defaultLimit) {
            this.defaultLimit = Objects.requireNonNull(defaultLimit);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setDuration(String duration) {
            this.duration = Objects.requireNonNull(duration);
            return this;
        }

        public Builder setFreeTier(String freeTier) {
            this.freeTier = Objects.requireNonNull(freeTier);
            return this;
        }

        public Builder setMaxLimit(String maxLimit) {
            this.maxLimit = Objects.requireNonNull(maxLimit);
            return this;
        }

        public Builder setMetric(String metric) {
            this.metric = Objects.requireNonNull(metric);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setUnit(String unit) {
            this.unit = Objects.requireNonNull(unit);
            return this;
        }

        public Builder setValues(Map<String,String> values) {
            this.values = Objects.requireNonNull(values);
            return this;
        }

        public QuotaLimitResponse build() {
            return new QuotaLimitResponse(defaultLimit, description, displayName, duration, freeTier, maxLimit, metric, name, unit, values);
        }
    }
}
