// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.compute_alpha.inputs.UpcomingMaintenanceTimeWindowResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Upcoming Maintenance notification information. TODO(b/196881882) Deprecate this proto once it's fully migrated to be under proto ResourceStatus.UpcomingMaintenance.
 * 
 */
public final class UpcomingMaintenanceResponse extends io.pulumi.resources.InvokeArgs {

    public static final UpcomingMaintenanceResponse Empty = new UpcomingMaintenanceResponse();

    /**
     * Indicates if the maintenance can be customer triggered. From more detail, see go/sf-ctm-design.
     * 
     */
    @InputImport(name="canReschedule", required=true)
      private final Boolean canReschedule;

    public Boolean getCanReschedule() {
        return this.canReschedule;
    }

    /**
     * The start time window of the maintenance disruption.
     * 
     */
    @InputImport(name="startTimeWindow", required=true)
      private final UpcomingMaintenanceTimeWindowResponse startTimeWindow;

    public UpcomingMaintenanceTimeWindowResponse getStartTimeWindow() {
        return this.startTimeWindow;
    }

    /**
     * Defines the type of maintenance.
     * 
     */
    @InputImport(name="type", required=true)
      private final String type;

    public String getType() {
        return this.type;
    }

    public UpcomingMaintenanceResponse(
        Boolean canReschedule,
        UpcomingMaintenanceTimeWindowResponse startTimeWindow,
        String type) {
        this.canReschedule = Objects.requireNonNull(canReschedule, "expected parameter 'canReschedule' to be non-null");
        this.startTimeWindow = Objects.requireNonNull(startTimeWindow, "expected parameter 'startTimeWindow' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private UpcomingMaintenanceResponse() {
        this.canReschedule = null;
        this.startTimeWindow = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UpcomingMaintenanceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean canReschedule;
        private UpcomingMaintenanceTimeWindowResponse startTimeWindow;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(UpcomingMaintenanceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.canReschedule = defaults.canReschedule;
    	      this.startTimeWindow = defaults.startTimeWindow;
    	      this.type = defaults.type;
        }

        public Builder setCanReschedule(Boolean canReschedule) {
            this.canReschedule = Objects.requireNonNull(canReschedule);
            return this;
        }

        public Builder setStartTimeWindow(UpcomingMaintenanceTimeWindowResponse startTimeWindow) {
            this.startTimeWindow = Objects.requireNonNull(startTimeWindow);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public UpcomingMaintenanceResponse build() {
            return new UpcomingMaintenanceResponse(canReschedule, startTimeWindow, type);
        }
    }
}
