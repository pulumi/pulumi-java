// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.privateca_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.privateca_v1.enums.PublicKeyFormat;
import java.lang.String;
import java.util.Objects;


/**
 * A PublicKey describes a public key.
 * 
 */
public final class PublicKeyArgs extends io.pulumi.resources.ResourceArgs {

    public static final PublicKeyArgs Empty = new PublicKeyArgs();

    /**
     * The format of the public key.
     * 
     */
    @Import(name="format", required=true)
      private final Output<PublicKeyFormat> format;

    public Output<PublicKeyFormat> getFormat() {
        return this.format;
    }

    /**
     * A public key. The padding and encoding must match with the `KeyFormat` value specified for the `format` field.
     * 
     */
    @Import(name="key", required=true)
      private final Output<String> key;

    public Output<String> getKey() {
        return this.key;
    }

    public PublicKeyArgs(
        Output<PublicKeyFormat> format,
        Output<String> key) {
        this.format = Objects.requireNonNull(format, "expected parameter 'format' to be non-null");
        this.key = Objects.requireNonNull(key, "expected parameter 'key' to be non-null");
    }

    private PublicKeyArgs() {
        this.format = Codegen.empty();
        this.key = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PublicKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<PublicKeyFormat> format;
        private Output<String> key;

        public Builder() {
    	      // Empty
        }

        public Builder(PublicKeyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.format = defaults.format;
    	      this.key = defaults.key;
        }

        public Builder format(Output<PublicKeyFormat> format) {
            this.format = Objects.requireNonNull(format);
            return this;
        }
        public Builder format(PublicKeyFormat format) {
            this.format = Output.of(Objects.requireNonNull(format));
            return this;
        }
        public Builder key(Output<String> key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder key(String key) {
            this.key = Output.of(Objects.requireNonNull(key));
            return this;
        }        public PublicKeyArgs build() {
            return new PublicKeyArgs(format, key);
        }
    }
}
