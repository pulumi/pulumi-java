// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.sqladmin_v1beta4.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.sqladmin_v1beta4.inputs.MySqlReplicaConfigurationResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class ReplicaConfigurationResponse extends io.pulumi.resources.InvokeArgs {

    public static final ReplicaConfigurationResponse Empty = new ReplicaConfigurationResponse();

    @InputImport(name="failoverTarget", required=true)
    private final Boolean failoverTarget;

    public Boolean getFailoverTarget() {
        return this.failoverTarget;
    }

    @InputImport(name="kind", required=true)
    private final String kind;

    public String getKind() {
        return this.kind;
    }

    @InputImport(name="mysqlReplicaConfiguration", required=true)
    private final MySqlReplicaConfigurationResponse mysqlReplicaConfiguration;

    public MySqlReplicaConfigurationResponse getMysqlReplicaConfiguration() {
        return this.mysqlReplicaConfiguration;
    }

    public ReplicaConfigurationResponse(
        Boolean failoverTarget,
        String kind,
        MySqlReplicaConfigurationResponse mysqlReplicaConfiguration) {
        this.failoverTarget = Objects.requireNonNull(failoverTarget, "expected parameter 'failoverTarget' to be non-null");
        this.kind = Objects.requireNonNull(kind, "expected parameter 'kind' to be non-null");
        this.mysqlReplicaConfiguration = Objects.requireNonNull(mysqlReplicaConfiguration, "expected parameter 'mysqlReplicaConfiguration' to be non-null");
    }

    private ReplicaConfigurationResponse() {
        this.failoverTarget = null;
        this.kind = null;
        this.mysqlReplicaConfiguration = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReplicaConfigurationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean failoverTarget;
        private String kind;
        private MySqlReplicaConfigurationResponse mysqlReplicaConfiguration;

        public Builder() {
    	      // Empty
        }

        public Builder(ReplicaConfigurationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failoverTarget = defaults.failoverTarget;
    	      this.kind = defaults.kind;
    	      this.mysqlReplicaConfiguration = defaults.mysqlReplicaConfiguration;
        }

        public Builder setFailoverTarget(Boolean failoverTarget) {
            this.failoverTarget = Objects.requireNonNull(failoverTarget);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setMysqlReplicaConfiguration(MySqlReplicaConfigurationResponse mysqlReplicaConfiguration) {
            this.mysqlReplicaConfiguration = Objects.requireNonNull(mysqlReplicaConfiguration);
            return this;
        }

        public ReplicaConfigurationResponse build() {
            return new ReplicaConfigurationResponse(failoverTarget, kind, mysqlReplicaConfiguration);
        }
    }
}
