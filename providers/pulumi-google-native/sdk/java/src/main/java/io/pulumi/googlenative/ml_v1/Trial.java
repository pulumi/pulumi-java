// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.ml_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.ml_v1.TrialArgs;
import io.pulumi.googlenative.ml_v1.outputs.GoogleCloudMlV1_Trial_ParameterResponse;
import io.pulumi.googlenative.ml_v1.outputs.GoogleCloudMlV1__MeasurementResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

@ResourceType(type="google-native:ml/v1:Trial")
public class Trial extends io.pulumi.resources.CustomResource {
    @OutputExport(name="clientId", type=String.class, parameters={})
    private Output<String> clientId;

    public Output<String> getClientId() {
        return this.clientId;
    }
    @OutputExport(name="endTime", type=String.class, parameters={})
    private Output<String> endTime;

    public Output<String> getEndTime() {
        return this.endTime;
    }
    @OutputExport(name="finalMeasurement", type=GoogleCloudMlV1__MeasurementResponse.class, parameters={})
    private Output<GoogleCloudMlV1__MeasurementResponse> finalMeasurement;

    public Output<GoogleCloudMlV1__MeasurementResponse> getFinalMeasurement() {
        return this.finalMeasurement;
    }
    @OutputExport(name="infeasibleReason", type=String.class, parameters={})
    private Output<String> infeasibleReason;

    public Output<String> getInfeasibleReason() {
        return this.infeasibleReason;
    }
    @OutputExport(name="measurements", type=List.class, parameters={GoogleCloudMlV1__MeasurementResponse.class})
    private Output<List<GoogleCloudMlV1__MeasurementResponse>> measurements;

    public Output<List<GoogleCloudMlV1__MeasurementResponse>> getMeasurements() {
        return this.measurements;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="parameters", type=List.class, parameters={GoogleCloudMlV1_Trial_ParameterResponse.class})
    private Output<List<GoogleCloudMlV1_Trial_ParameterResponse>> parameters;

    public Output<List<GoogleCloudMlV1_Trial_ParameterResponse>> getParameters() {
        return this.parameters;
    }
    @OutputExport(name="startTime", type=String.class, parameters={})
    private Output<String> startTime;

    public Output<String> getStartTime() {
        return this.startTime;
    }
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> getState() {
        return this.state;
    }
    @OutputExport(name="trialInfeasible", type=Boolean.class, parameters={})
    private Output<Boolean> trialInfeasible;

    public Output<Boolean> getTrialInfeasible() {
        return this.trialInfeasible;
    }

    public Trial(String name, TrialArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:ml/v1:Trial", name, args == null ? TrialArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Trial(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:ml/v1:Trial", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Trial get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Trial(name, id, options);
    }
}
