// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datacatalog_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A column within a schema. Columns can be nested inside other columns.
 * 
 */
public final class GoogleCloudDatacatalogV1ColumnSchemaArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDatacatalogV1ColumnSchemaArgs Empty = new GoogleCloudDatacatalogV1ColumnSchemaArgs();

    /**
     * Name of the column. Must be a UTF-8 string without dots (.). The maximum size is 64 bytes.
     * 
     */
    @InputImport(name="column", required=true)
    private final Input<String> column;

    public Input<String> getColumn() {
        return this.column;
    }

    /**
     * Optional. Description of the column. Default value is an empty string. The description must be a UTF-8 string with the maximum size of 2000 bytes.
     * 
     */
    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Optional. A column's mode indicates whether values in this column are required, nullable, or repeated. Only `NULLABLE`, `REQUIRED`, and `REPEATED` values are supported. Default mode is `NULLABLE`.
     * 
     */
    @InputImport(name="mode")
    private final @Nullable Input<String> mode;

    public Input<String> getMode() {
        return this.mode == null ? Input.empty() : this.mode;
    }

    /**
     * Optional. Schema of sub-columns. A column can have zero or more sub-columns.
     * 
     */
    @InputImport(name="subcolumns")
    private final @Nullable Input<List<GoogleCloudDatacatalogV1ColumnSchemaArgs>> subcolumns;

    public Input<List<GoogleCloudDatacatalogV1ColumnSchemaArgs>> getSubcolumns() {
        return this.subcolumns == null ? Input.empty() : this.subcolumns;
    }

    /**
     * Type of the column. Must be a UTF-8 string with the maximum size of 128 bytes.
     * 
     */
    @InputImport(name="type", required=true)
    private final Input<String> type;

    public Input<String> getType() {
        return this.type;
    }

    public GoogleCloudDatacatalogV1ColumnSchemaArgs(
        Input<String> column,
        @Nullable Input<String> description,
        @Nullable Input<String> mode,
        @Nullable Input<List<GoogleCloudDatacatalogV1ColumnSchemaArgs>> subcolumns,
        Input<String> type) {
        this.column = Objects.requireNonNull(column, "expected parameter 'column' to be non-null");
        this.description = description;
        this.mode = mode;
        this.subcolumns = subcolumns;
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private GoogleCloudDatacatalogV1ColumnSchemaArgs() {
        this.column = Input.empty();
        this.description = Input.empty();
        this.mode = Input.empty();
        this.subcolumns = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDatacatalogV1ColumnSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> column;
        private @Nullable Input<String> description;
        private @Nullable Input<String> mode;
        private @Nullable Input<List<GoogleCloudDatacatalogV1ColumnSchemaArgs>> subcolumns;
        private Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDatacatalogV1ColumnSchemaArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.column = defaults.column;
    	      this.description = defaults.description;
    	      this.mode = defaults.mode;
    	      this.subcolumns = defaults.subcolumns;
    	      this.type = defaults.type;
        }

        public Builder setColumn(Input<String> column) {
            this.column = Objects.requireNonNull(column);
            return this;
        }

        public Builder setColumn(String column) {
            this.column = Input.of(Objects.requireNonNull(column));
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setMode(@Nullable Input<String> mode) {
            this.mode = mode;
            return this;
        }

        public Builder setMode(@Nullable String mode) {
            this.mode = Input.ofNullable(mode);
            return this;
        }

        public Builder setSubcolumns(@Nullable Input<List<GoogleCloudDatacatalogV1ColumnSchemaArgs>> subcolumns) {
            this.subcolumns = subcolumns;
            return this;
        }

        public Builder setSubcolumns(@Nullable List<GoogleCloudDatacatalogV1ColumnSchemaArgs> subcolumns) {
            this.subcolumns = Input.ofNullable(subcolumns);
            return this;
        }

        public Builder setType(Input<String> type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setType(String type) {
            this.type = Input.of(Objects.requireNonNull(type));
            return this;
        }

        public GoogleCloudDatacatalogV1ColumnSchemaArgs build() {
            return new GoogleCloudDatacatalogV1ColumnSchemaArgs(column, description, mode, subcolumns, type);
        }
    }
}
