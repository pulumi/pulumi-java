// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.transcoder_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.transcoder_v1.outputs.JobConfigResponse;
import io.pulumi.googlenative.transcoder_v1.outputs.StatusResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetJobResult {
    private final JobConfigResponse config;
    private final String createTime;
    private final String endTime;
    private final StatusResponse error;
    private final String inputUri;
    private final String name;
    private final String outputUri;
    private final String startTime;
    private final String state;
    private final String templateId;
    private final Integer ttlAfterCompletionDays;

    @OutputCustomType.Constructor({"config","createTime","endTime","error","inputUri","name","outputUri","startTime","state","templateId","ttlAfterCompletionDays"})
    private GetJobResult(
        JobConfigResponse config,
        String createTime,
        String endTime,
        StatusResponse error,
        String inputUri,
        String name,
        String outputUri,
        String startTime,
        String state,
        String templateId,
        Integer ttlAfterCompletionDays) {
        this.config = Objects.requireNonNull(config);
        this.createTime = Objects.requireNonNull(createTime);
        this.endTime = Objects.requireNonNull(endTime);
        this.error = Objects.requireNonNull(error);
        this.inputUri = Objects.requireNonNull(inputUri);
        this.name = Objects.requireNonNull(name);
        this.outputUri = Objects.requireNonNull(outputUri);
        this.startTime = Objects.requireNonNull(startTime);
        this.state = Objects.requireNonNull(state);
        this.templateId = Objects.requireNonNull(templateId);
        this.ttlAfterCompletionDays = Objects.requireNonNull(ttlAfterCompletionDays);
    }

    public JobConfigResponse getConfig() {
        return this.config;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public String getEndTime() {
        return this.endTime;
    }
    public StatusResponse getError() {
        return this.error;
    }
    public String getInputUri() {
        return this.inputUri;
    }
    public String getName() {
        return this.name;
    }
    public String getOutputUri() {
        return this.outputUri;
    }
    public String getStartTime() {
        return this.startTime;
    }
    public String getState() {
        return this.state;
    }
    public String getTemplateId() {
        return this.templateId;
    }
    public Integer getTtlAfterCompletionDays() {
        return this.ttlAfterCompletionDays;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private JobConfigResponse config;
        private String createTime;
        private String endTime;
        private StatusResponse error;
        private String inputUri;
        private String name;
        private String outputUri;
        private String startTime;
        private String state;
        private String templateId;
        private Integer ttlAfterCompletionDays;

        public Builder() {
    	      // Empty
        }

        public Builder(GetJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.createTime = defaults.createTime;
    	      this.endTime = defaults.endTime;
    	      this.error = defaults.error;
    	      this.inputUri = defaults.inputUri;
    	      this.name = defaults.name;
    	      this.outputUri = defaults.outputUri;
    	      this.startTime = defaults.startTime;
    	      this.state = defaults.state;
    	      this.templateId = defaults.templateId;
    	      this.ttlAfterCompletionDays = defaults.ttlAfterCompletionDays;
        }

        public Builder setConfig(JobConfigResponse config) {
            this.config = Objects.requireNonNull(config);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setEndTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }

        public Builder setError(StatusResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }

        public Builder setInputUri(String inputUri) {
            this.inputUri = Objects.requireNonNull(inputUri);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOutputUri(String outputUri) {
            this.outputUri = Objects.requireNonNull(outputUri);
            return this;
        }

        public Builder setStartTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setTemplateId(String templateId) {
            this.templateId = Objects.requireNonNull(templateId);
            return this;
        }

        public Builder setTtlAfterCompletionDays(Integer ttlAfterCompletionDays) {
            this.ttlAfterCompletionDays = Objects.requireNonNull(ttlAfterCompletionDays);
            return this;
        }

        public GetJobResult build() {
            return new GetJobResult(config, createTime, endTime, error, inputUri, name, outputUri, startTime, state, templateId, ttlAfterCompletionDays);
        }
    }
}
