// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datacatalog_v1beta1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetPolicyTagResult {
    /**
     * Resource names of child policy tags of this policy tag.
     * 
     */
    private final List<String> childPolicyTags;
    /**
     * Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.
     * 
     */
    private final String description;
    /**
     * User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.
     * 
     */
    private final String displayName;
    /**
     * Resource name of this policy tag, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
     * 
     */
    private final String name;
    /**
     * Resource name of this policy tag's parent policy tag (e.g. for the "LatLong" policy tag in the example above, this field contains the resource name of the "Geolocation" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the "Geolocation" policy tag in the example above). If not set, defaults to an empty string.
     * 
     */
    private final String parentPolicyTag;

    @OutputCustomType.Constructor({"childPolicyTags","description","displayName","name","parentPolicyTag"})
    private GetPolicyTagResult(
        List<String> childPolicyTags,
        String description,
        String displayName,
        String name,
        String parentPolicyTag) {
        this.childPolicyTags = Objects.requireNonNull(childPolicyTags);
        this.description = Objects.requireNonNull(description);
        this.displayName = Objects.requireNonNull(displayName);
        this.name = Objects.requireNonNull(name);
        this.parentPolicyTag = Objects.requireNonNull(parentPolicyTag);
    }

    /**
     * Resource names of child policy tags of this policy tag.
     * 
     */
    public List<String> getChildPolicyTags() {
        return this.childPolicyTags;
    }
    /**
     * Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description.
     * 
     */
    public String getDescription() {
        return this.description;
    }
    /**
     * User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8.
     * 
     */
    public String getDisplayName() {
        return this.displayName;
    }
    /**
     * Resource name of this policy tag, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * Resource name of this policy tag's parent policy tag (e.g. for the "LatLong" policy tag in the example above, this field contains the resource name of the "Geolocation" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the "Geolocation" policy tag in the example above). If not set, defaults to an empty string.
     * 
     */
    public String getParentPolicyTag() {
        return this.parentPolicyTag;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPolicyTagResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> childPolicyTags;
        private String description;
        private String displayName;
        private String name;
        private String parentPolicyTag;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPolicyTagResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childPolicyTags = defaults.childPolicyTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.name = defaults.name;
    	      this.parentPolicyTag = defaults.parentPolicyTag;
        }

        public Builder setChildPolicyTags(List<String> childPolicyTags) {
            this.childPolicyTags = Objects.requireNonNull(childPolicyTags);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setParentPolicyTag(String parentPolicyTag) {
            this.parentPolicyTag = Objects.requireNonNull(parentPolicyTag);
            return this;
        }

        public GetPolicyTagResult build() {
            return new GetPolicyTagResult(childPolicyTags, description, displayName, name, parentPolicyTag);
        }
    }
}
