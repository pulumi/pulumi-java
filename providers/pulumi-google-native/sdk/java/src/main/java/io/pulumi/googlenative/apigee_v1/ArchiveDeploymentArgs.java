// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.apigee_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ArchiveDeploymentArgs extends io.pulumi.resources.ResourceArgs {

    public static final ArchiveDeploymentArgs Empty = new ArchiveDeploymentArgs();

    @Import(name="environmentId", required=true)
      private final Output<String> environmentId;

    public Output<String> environmentId() {
        return this.environmentId;
    }

    /**
     * Input only. The Google Cloud Storage signed URL returned from GenerateUploadUrl and used to upload the Archive zip file.
     * 
     */
    @Import(name="gcsUri")
      private final @Nullable Output<String> gcsUri;

    public Output<String> gcsUri() {
        return this.gcsUri == null ? Codegen.empty() : this.gcsUri;
    }

    /**
     * User-supplied key-value pairs used to organize ArchiveDeployments. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \p{Ll}\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\p{Ll}\p{Lo}\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> labels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    /**
     * Name of the Archive Deployment in the following format: `organizations/{org}/environments/{env}/archiveDeployments/{id}`.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="organizationId", required=true)
      private final Output<String> organizationId;

    public Output<String> organizationId() {
        return this.organizationId;
    }

    public ArchiveDeploymentArgs(
        Output<String> environmentId,
        @Nullable Output<String> gcsUri,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<String> name,
        Output<String> organizationId) {
        this.environmentId = Objects.requireNonNull(environmentId, "expected parameter 'environmentId' to be non-null");
        this.gcsUri = gcsUri;
        this.labels = labels;
        this.name = name;
        this.organizationId = Objects.requireNonNull(organizationId, "expected parameter 'organizationId' to be non-null");
    }

    private ArchiveDeploymentArgs() {
        this.environmentId = Codegen.empty();
        this.gcsUri = Codegen.empty();
        this.labels = Codegen.empty();
        this.name = Codegen.empty();
        this.organizationId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ArchiveDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> environmentId;
        private @Nullable Output<String> gcsUri;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<String> name;
        private Output<String> organizationId;

        public Builder() {
    	      // Empty
        }

        public Builder(ArchiveDeploymentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environmentId = defaults.environmentId;
    	      this.gcsUri = defaults.gcsUri;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.organizationId = defaults.organizationId;
        }

        public Builder environmentId(Output<String> environmentId) {
            this.environmentId = Objects.requireNonNull(environmentId);
            return this;
        }
        public Builder environmentId(String environmentId) {
            this.environmentId = Output.of(Objects.requireNonNull(environmentId));
            return this;
        }
        public Builder gcsUri(@Nullable Output<String> gcsUri) {
            this.gcsUri = gcsUri;
            return this;
        }
        public Builder gcsUri(@Nullable String gcsUri) {
            this.gcsUri = Codegen.ofNullable(gcsUri);
            return this;
        }
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder organizationId(Output<String> organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }
        public Builder organizationId(String organizationId) {
            this.organizationId = Output.of(Objects.requireNonNull(organizationId));
            return this;
        }        public ArchiveDeploymentArgs build() {
            return new ArchiveDeploymentArgs(environmentId, gcsUri, labels, name, organizationId);
        }
    }
}
