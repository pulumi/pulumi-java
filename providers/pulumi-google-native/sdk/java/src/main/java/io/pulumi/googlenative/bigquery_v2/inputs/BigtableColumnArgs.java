// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BigtableColumnArgs extends io.pulumi.resources.ResourceArgs {

    public static final BigtableColumnArgs Empty = new BigtableColumnArgs();

    @InputImport(name="encoding")
    private final @Nullable Input<String> encoding;

    public Input<String> getEncoding() {
        return this.encoding == null ? Input.empty() : this.encoding;
    }

    @InputImport(name="fieldName")
    private final @Nullable Input<String> fieldName;

    public Input<String> getFieldName() {
        return this.fieldName == null ? Input.empty() : this.fieldName;
    }

    @InputImport(name="onlyReadLatest")
    private final @Nullable Input<Boolean> onlyReadLatest;

    public Input<Boolean> getOnlyReadLatest() {
        return this.onlyReadLatest == null ? Input.empty() : this.onlyReadLatest;
    }

    @InputImport(name="qualifierEncoded")
    private final @Nullable Input<String> qualifierEncoded;

    public Input<String> getQualifierEncoded() {
        return this.qualifierEncoded == null ? Input.empty() : this.qualifierEncoded;
    }

    @InputImport(name="qualifierString")
    private final @Nullable Input<String> qualifierString;

    public Input<String> getQualifierString() {
        return this.qualifierString == null ? Input.empty() : this.qualifierString;
    }

    @InputImport(name="type")
    private final @Nullable Input<String> type;

    public Input<String> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    public BigtableColumnArgs(
        @Nullable Input<String> encoding,
        @Nullable Input<String> fieldName,
        @Nullable Input<Boolean> onlyReadLatest,
        @Nullable Input<String> qualifierEncoded,
        @Nullable Input<String> qualifierString,
        @Nullable Input<String> type) {
        this.encoding = encoding;
        this.fieldName = fieldName;
        this.onlyReadLatest = onlyReadLatest;
        this.qualifierEncoded = qualifierEncoded;
        this.qualifierString = qualifierString;
        this.type = type;
    }

    private BigtableColumnArgs() {
        this.encoding = Input.empty();
        this.fieldName = Input.empty();
        this.onlyReadLatest = Input.empty();
        this.qualifierEncoded = Input.empty();
        this.qualifierString = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BigtableColumnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> encoding;
        private @Nullable Input<String> fieldName;
        private @Nullable Input<Boolean> onlyReadLatest;
        private @Nullable Input<String> qualifierEncoded;
        private @Nullable Input<String> qualifierString;
        private @Nullable Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(BigtableColumnArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.encoding = defaults.encoding;
    	      this.fieldName = defaults.fieldName;
    	      this.onlyReadLatest = defaults.onlyReadLatest;
    	      this.qualifierEncoded = defaults.qualifierEncoded;
    	      this.qualifierString = defaults.qualifierString;
    	      this.type = defaults.type;
        }

        public Builder setEncoding(@Nullable Input<String> encoding) {
            this.encoding = encoding;
            return this;
        }

        public Builder setEncoding(@Nullable String encoding) {
            this.encoding = Input.ofNullable(encoding);
            return this;
        }

        public Builder setFieldName(@Nullable Input<String> fieldName) {
            this.fieldName = fieldName;
            return this;
        }

        public Builder setFieldName(@Nullable String fieldName) {
            this.fieldName = Input.ofNullable(fieldName);
            return this;
        }

        public Builder setOnlyReadLatest(@Nullable Input<Boolean> onlyReadLatest) {
            this.onlyReadLatest = onlyReadLatest;
            return this;
        }

        public Builder setOnlyReadLatest(@Nullable Boolean onlyReadLatest) {
            this.onlyReadLatest = Input.ofNullable(onlyReadLatest);
            return this;
        }

        public Builder setQualifierEncoded(@Nullable Input<String> qualifierEncoded) {
            this.qualifierEncoded = qualifierEncoded;
            return this;
        }

        public Builder setQualifierEncoded(@Nullable String qualifierEncoded) {
            this.qualifierEncoded = Input.ofNullable(qualifierEncoded);
            return this;
        }

        public Builder setQualifierString(@Nullable Input<String> qualifierString) {
            this.qualifierString = qualifierString;
            return this;
        }

        public Builder setQualifierString(@Nullable String qualifierString) {
            this.qualifierString = Input.ofNullable(qualifierString);
            return this;
        }

        public Builder setType(@Nullable Input<String> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public BigtableColumnArgs build() {
            return new BigtableColumnArgs(encoding, fieldName, onlyReadLatest, qualifierEncoded, qualifierString, type);
        }
    }
}
