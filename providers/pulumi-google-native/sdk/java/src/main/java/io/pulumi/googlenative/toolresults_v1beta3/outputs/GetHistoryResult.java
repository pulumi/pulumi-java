// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.toolresults_v1beta3.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetHistoryResult {
    /**
     * A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional
     * 
     */
    private final String displayName;
    /**
     * A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set
     * 
     */
    private final String historyId;
    /**
     * A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set
     * 
     */
    private final String name;
    /**
     * The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
     * 
     */
    private final String testPlatform;

    @OutputCustomType.Constructor({"displayName","historyId","name","testPlatform"})
    private GetHistoryResult(
        String displayName,
        String historyId,
        String name,
        String testPlatform) {
        this.displayName = Objects.requireNonNull(displayName);
        this.historyId = Objects.requireNonNull(historyId);
        this.name = Objects.requireNonNull(name);
        this.testPlatform = Objects.requireNonNull(testPlatform);
    }

    /**
     * A short human-readable (plain text) name to display in the UI. Maximum of 100 characters. - In response: present if set during create. - In create request: optional
     * 
     */
    public String getDisplayName() {
        return this.displayName;
    }
    /**
     * A unique identifier within a project for this History. Returns INVALID_ARGUMENT if this field is set or overwritten by the caller. - In response always set - In create request: never set
     * 
     */
    public String getHistoryId() {
        return this.historyId;
    }
    /**
     * A name to uniquely identify a history within a project. Maximum of 200 characters. - In response always set - In create request: always set
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * The platform of the test history. - In response: always set. Returns the platform of the last execution if unknown.
     * 
     */
    public String getTestPlatform() {
        return this.testPlatform;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetHistoryResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String displayName;
        private String historyId;
        private String name;
        private String testPlatform;

        public Builder() {
    	      // Empty
        }

        public Builder(GetHistoryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.historyId = defaults.historyId;
    	      this.name = defaults.name;
    	      this.testPlatform = defaults.testPlatform;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setHistoryId(String historyId) {
            this.historyId = Objects.requireNonNull(historyId);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setTestPlatform(String testPlatform) {
            this.testPlatform = Objects.requireNonNull(testPlatform);
            return this;
        }
        public GetHistoryResult build() {
            return new GetHistoryResult(displayName, historyId, name, testPlatform);
        }
    }
}
