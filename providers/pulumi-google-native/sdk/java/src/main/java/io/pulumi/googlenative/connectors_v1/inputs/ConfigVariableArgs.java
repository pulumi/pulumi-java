// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.connectors_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.connectors_v1.inputs.SecretArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * ConfigVariable represents a configuration variable present in a Connection. or AuthConfig.
 * 
 */
public final class ConfigVariableArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConfigVariableArgs Empty = new ConfigVariableArgs();

    /**
     * Value is a bool.
     * 
     */
    @InputImport(name="boolValue")
      private final @Nullable Output<Boolean> boolValue;

    public Output<Boolean> getBoolValue() {
        return this.boolValue == null ? Output.empty() : this.boolValue;
    }

    /**
     * Value is an integer
     * 
     */
    @InputImport(name="intValue")
      private final @Nullable Output<String> intValue;

    public Output<String> getIntValue() {
        return this.intValue == null ? Output.empty() : this.intValue;
    }

    /**
     * Key of the config variable.
     * 
     */
    @InputImport(name="key")
      private final @Nullable Output<String> key;

    public Output<String> getKey() {
        return this.key == null ? Output.empty() : this.key;
    }

    /**
     * Value is a secret.
     * 
     */
    @InputImport(name="secretValue")
      private final @Nullable Output<SecretArgs> secretValue;

    public Output<SecretArgs> getSecretValue() {
        return this.secretValue == null ? Output.empty() : this.secretValue;
    }

    /**
     * Value is a string.
     * 
     */
    @InputImport(name="stringValue")
      private final @Nullable Output<String> stringValue;

    public Output<String> getStringValue() {
        return this.stringValue == null ? Output.empty() : this.stringValue;
    }

    public ConfigVariableArgs(
        @Nullable Output<Boolean> boolValue,
        @Nullable Output<String> intValue,
        @Nullable Output<String> key,
        @Nullable Output<SecretArgs> secretValue,
        @Nullable Output<String> stringValue) {
        this.boolValue = boolValue;
        this.intValue = intValue;
        this.key = key;
        this.secretValue = secretValue;
        this.stringValue = stringValue;
    }

    private ConfigVariableArgs() {
        this.boolValue = Output.empty();
        this.intValue = Output.empty();
        this.key = Output.empty();
        this.secretValue = Output.empty();
        this.stringValue = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigVariableArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> boolValue;
        private @Nullable Output<String> intValue;
        private @Nullable Output<String> key;
        private @Nullable Output<SecretArgs> secretValue;
        private @Nullable Output<String> stringValue;

        public Builder() {
    	      // Empty
        }

        public Builder(ConfigVariableArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.boolValue = defaults.boolValue;
    	      this.intValue = defaults.intValue;
    	      this.key = defaults.key;
    	      this.secretValue = defaults.secretValue;
    	      this.stringValue = defaults.stringValue;
        }

        public Builder boolValue(@Nullable Output<Boolean> boolValue) {
            this.boolValue = boolValue;
            return this;
        }

        public Builder boolValue(@Nullable Boolean boolValue) {
            this.boolValue = Output.ofNullable(boolValue);
            return this;
        }

        public Builder intValue(@Nullable Output<String> intValue) {
            this.intValue = intValue;
            return this;
        }

        public Builder intValue(@Nullable String intValue) {
            this.intValue = Output.ofNullable(intValue);
            return this;
        }

        public Builder key(@Nullable Output<String> key) {
            this.key = key;
            return this;
        }

        public Builder key(@Nullable String key) {
            this.key = Output.ofNullable(key);
            return this;
        }

        public Builder secretValue(@Nullable Output<SecretArgs> secretValue) {
            this.secretValue = secretValue;
            return this;
        }

        public Builder secretValue(@Nullable SecretArgs secretValue) {
            this.secretValue = Output.ofNullable(secretValue);
            return this;
        }

        public Builder stringValue(@Nullable Output<String> stringValue) {
            this.stringValue = stringValue;
            return this;
        }

        public Builder stringValue(@Nullable String stringValue) {
            this.stringValue = Output.ofNullable(stringValue);
            return this;
        }
        public ConfigVariableArgs build() {
            return new ConfigVariableArgs(boolValue, intValue, key, secretValue, stringValue);
        }
    }
}
