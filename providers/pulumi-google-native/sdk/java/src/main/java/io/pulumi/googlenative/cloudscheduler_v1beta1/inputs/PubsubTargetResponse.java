// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudscheduler_v1beta1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Map;
import java.util.Objects;


public final class PubsubTargetResponse extends io.pulumi.resources.InvokeArgs {

    public static final PubsubTargetResponse Empty = new PubsubTargetResponse();

    @InputImport(name="attributes", required=true)
    private final Map<String,String> attributes;

    public Map<String,String> getAttributes() {
        return this.attributes;
    }

    @InputImport(name="data", required=true)
    private final String data;

    public String getData() {
        return this.data;
    }

    @InputImport(name="topicName", required=true)
    private final String topicName;

    public String getTopicName() {
        return this.topicName;
    }

    public PubsubTargetResponse(
        Map<String,String> attributes,
        String data,
        String topicName) {
        this.attributes = Objects.requireNonNull(attributes, "expected parameter 'attributes' to be non-null");
        this.data = Objects.requireNonNull(data, "expected parameter 'data' to be non-null");
        this.topicName = Objects.requireNonNull(topicName, "expected parameter 'topicName' to be non-null");
    }

    private PubsubTargetResponse() {
        this.attributes = Map.of();
        this.data = null;
        this.topicName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PubsubTargetResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,String> attributes;
        private String data;
        private String topicName;

        public Builder() {
    	      // Empty
        }

        public Builder(PubsubTargetResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.data = defaults.data;
    	      this.topicName = defaults.topicName;
        }

        public Builder setAttributes(Map<String,String> attributes) {
            this.attributes = Objects.requireNonNull(attributes);
            return this;
        }

        public Builder setData(String data) {
            this.data = Objects.requireNonNull(data);
            return this;
        }

        public Builder setTopicName(String topicName) {
            this.topicName = Objects.requireNonNull(topicName);
            return this;
        }

        public PubsubTargetResponse build() {
            return new PubsubTargetResponse(attributes, data, topicName);
        }
    }
}
