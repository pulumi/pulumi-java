// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.run_v1alpha1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.run_v1alpha1.outputs.ContainerResponse;
import io.pulumi.googlenative.run_v1alpha1.outputs.VolumeResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class InstanceSpecResponse {
    private final String activeDeadlineSeconds;
    private final List<ContainerResponse> containers;
    private final String restartPolicy;
    private final String serviceAccountName;
    private final String terminationGracePeriodSeconds;
    private final List<VolumeResponse> volumes;

    @OutputCustomType.Constructor({"activeDeadlineSeconds","containers","restartPolicy","serviceAccountName","terminationGracePeriodSeconds","volumes"})
    private InstanceSpecResponse(
        String activeDeadlineSeconds,
        List<ContainerResponse> containers,
        String restartPolicy,
        String serviceAccountName,
        String terminationGracePeriodSeconds,
        List<VolumeResponse> volumes) {
        this.activeDeadlineSeconds = Objects.requireNonNull(activeDeadlineSeconds);
        this.containers = Objects.requireNonNull(containers);
        this.restartPolicy = Objects.requireNonNull(restartPolicy);
        this.serviceAccountName = Objects.requireNonNull(serviceAccountName);
        this.terminationGracePeriodSeconds = Objects.requireNonNull(terminationGracePeriodSeconds);
        this.volumes = Objects.requireNonNull(volumes);
    }

    public String getActiveDeadlineSeconds() {
        return this.activeDeadlineSeconds;
    }
    public List<ContainerResponse> getContainers() {
        return this.containers;
    }
    public String getRestartPolicy() {
        return this.restartPolicy;
    }
    public String getServiceAccountName() {
        return this.serviceAccountName;
    }
    public String getTerminationGracePeriodSeconds() {
        return this.terminationGracePeriodSeconds;
    }
    public List<VolumeResponse> getVolumes() {
        return this.volumes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String activeDeadlineSeconds;
        private List<ContainerResponse> containers;
        private String restartPolicy;
        private String serviceAccountName;
        private String terminationGracePeriodSeconds;
        private List<VolumeResponse> volumes;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceSpecResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeDeadlineSeconds = defaults.activeDeadlineSeconds;
    	      this.containers = defaults.containers;
    	      this.restartPolicy = defaults.restartPolicy;
    	      this.serviceAccountName = defaults.serviceAccountName;
    	      this.terminationGracePeriodSeconds = defaults.terminationGracePeriodSeconds;
    	      this.volumes = defaults.volumes;
        }

        public Builder setActiveDeadlineSeconds(String activeDeadlineSeconds) {
            this.activeDeadlineSeconds = Objects.requireNonNull(activeDeadlineSeconds);
            return this;
        }

        public Builder setContainers(List<ContainerResponse> containers) {
            this.containers = Objects.requireNonNull(containers);
            return this;
        }

        public Builder setRestartPolicy(String restartPolicy) {
            this.restartPolicy = Objects.requireNonNull(restartPolicy);
            return this;
        }

        public Builder setServiceAccountName(String serviceAccountName) {
            this.serviceAccountName = Objects.requireNonNull(serviceAccountName);
            return this;
        }

        public Builder setTerminationGracePeriodSeconds(String terminationGracePeriodSeconds) {
            this.terminationGracePeriodSeconds = Objects.requireNonNull(terminationGracePeriodSeconds);
            return this;
        }

        public Builder setVolumes(List<VolumeResponse> volumes) {
            this.volumes = Objects.requireNonNull(volumes);
            return this;
        }

        public InstanceSpecResponse build() {
            return new InstanceSpecResponse(activeDeadlineSeconds, containers, restartPolicy, serviceAccountName, terminationGracePeriodSeconds, volumes);
        }
    }
}
