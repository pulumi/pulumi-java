// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.containeranalysis_v1alpha1.inputs.CisBenchmarkArgs;
import io.pulumi.googlenative.containeranalysis_v1alpha1.inputs.ComplianceVersionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * ComplianceNote encapsulates all information about a specific compliance check.
 * 
 */
public final class ComplianceNoteArgs extends io.pulumi.resources.ResourceArgs {

    public static final ComplianceNoteArgs Empty = new ComplianceNoteArgs();

    /**
     * Right now we only have one compliance type, but we may add additional types in the future.
     * 
     */
    @Import(name="cisBenchmark")
      private final @Nullable Output<CisBenchmarkArgs> cisBenchmark;

    public Output<CisBenchmarkArgs> getCisBenchmark() {
        return this.cisBenchmark == null ? Output.empty() : this.cisBenchmark;
    }

    /**
     * A description about this compliance check.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    /**
     * A rationale for the existence of this compliance check.
     * 
     */
    @Import(name="rationale")
      private final @Nullable Output<String> rationale;

    public Output<String> getRationale() {
        return this.rationale == null ? Output.empty() : this.rationale;
    }

    /**
     * A description of remediation steps if the compliance check fails.
     * 
     */
    @Import(name="remediation")
      private final @Nullable Output<String> remediation;

    public Output<String> getRemediation() {
        return this.remediation == null ? Output.empty() : this.remediation;
    }

    /**
     * Serialized scan instructions with a predefined format.
     * 
     */
    @Import(name="scanInstructions")
      private final @Nullable Output<String> scanInstructions;

    public Output<String> getScanInstructions() {
        return this.scanInstructions == null ? Output.empty() : this.scanInstructions;
    }

    /**
     * The title that identifies this compliance check.
     * 
     */
    @Import(name="title")
      private final @Nullable Output<String> title;

    public Output<String> getTitle() {
        return this.title == null ? Output.empty() : this.title;
    }

    /**
     * The OS and config versions the benchmark applies to.
     * 
     */
    @Import(name="version")
      private final @Nullable Output<List<ComplianceVersionArgs>> version;

    public Output<List<ComplianceVersionArgs>> getVersion() {
        return this.version == null ? Output.empty() : this.version;
    }

    public ComplianceNoteArgs(
        @Nullable Output<CisBenchmarkArgs> cisBenchmark,
        @Nullable Output<String> description,
        @Nullable Output<String> rationale,
        @Nullable Output<String> remediation,
        @Nullable Output<String> scanInstructions,
        @Nullable Output<String> title,
        @Nullable Output<List<ComplianceVersionArgs>> version) {
        this.cisBenchmark = cisBenchmark;
        this.description = description;
        this.rationale = rationale;
        this.remediation = remediation;
        this.scanInstructions = scanInstructions;
        this.title = title;
        this.version = version;
    }

    private ComplianceNoteArgs() {
        this.cisBenchmark = Output.empty();
        this.description = Output.empty();
        this.rationale = Output.empty();
        this.remediation = Output.empty();
        this.scanInstructions = Output.empty();
        this.title = Output.empty();
        this.version = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ComplianceNoteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<CisBenchmarkArgs> cisBenchmark;
        private @Nullable Output<String> description;
        private @Nullable Output<String> rationale;
        private @Nullable Output<String> remediation;
        private @Nullable Output<String> scanInstructions;
        private @Nullable Output<String> title;
        private @Nullable Output<List<ComplianceVersionArgs>> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ComplianceNoteArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cisBenchmark = defaults.cisBenchmark;
    	      this.description = defaults.description;
    	      this.rationale = defaults.rationale;
    	      this.remediation = defaults.remediation;
    	      this.scanInstructions = defaults.scanInstructions;
    	      this.title = defaults.title;
    	      this.version = defaults.version;
        }

        public Builder cisBenchmark(@Nullable Output<CisBenchmarkArgs> cisBenchmark) {
            this.cisBenchmark = cisBenchmark;
            return this;
        }

        public Builder cisBenchmark(@Nullable CisBenchmarkArgs cisBenchmark) {
            this.cisBenchmark = Output.ofNullable(cisBenchmark);
            return this;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder rationale(@Nullable Output<String> rationale) {
            this.rationale = rationale;
            return this;
        }

        public Builder rationale(@Nullable String rationale) {
            this.rationale = Output.ofNullable(rationale);
            return this;
        }

        public Builder remediation(@Nullable Output<String> remediation) {
            this.remediation = remediation;
            return this;
        }

        public Builder remediation(@Nullable String remediation) {
            this.remediation = Output.ofNullable(remediation);
            return this;
        }

        public Builder scanInstructions(@Nullable Output<String> scanInstructions) {
            this.scanInstructions = scanInstructions;
            return this;
        }

        public Builder scanInstructions(@Nullable String scanInstructions) {
            this.scanInstructions = Output.ofNullable(scanInstructions);
            return this;
        }

        public Builder title(@Nullable Output<String> title) {
            this.title = title;
            return this;
        }

        public Builder title(@Nullable String title) {
            this.title = Output.ofNullable(title);
            return this;
        }

        public Builder version(@Nullable Output<List<ComplianceVersionArgs>> version) {
            this.version = version;
            return this;
        }

        public Builder version(@Nullable List<ComplianceVersionArgs> version) {
            this.version = Output.ofNullable(version);
            return this;
        }
        public ComplianceNoteArgs build() {
            return new ComplianceNoteArgs(cisBenchmark, description, rationale, remediation, scanInstructions, title, version);
        }
    }
}
