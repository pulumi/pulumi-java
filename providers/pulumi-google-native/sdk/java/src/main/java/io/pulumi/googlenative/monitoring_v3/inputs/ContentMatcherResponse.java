// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v3.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class ContentMatcherResponse extends io.pulumi.resources.InvokeArgs {

    public static final ContentMatcherResponse Empty = new ContentMatcherResponse();

    @InputImport(name="content", required=true)
    private final String content;

    public String getContent() {
        return this.content;
    }

    @InputImport(name="matcher", required=true)
    private final String matcher;

    public String getMatcher() {
        return this.matcher;
    }

    public ContentMatcherResponse(
        String content,
        String matcher) {
        this.content = Objects.requireNonNull(content, "expected parameter 'content' to be non-null");
        this.matcher = Objects.requireNonNull(matcher, "expected parameter 'matcher' to be non-null");
    }

    private ContentMatcherResponse() {
        this.content = null;
        this.matcher = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContentMatcherResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String content;
        private String matcher;

        public Builder() {
    	      // Empty
        }

        public Builder(ContentMatcherResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.matcher = defaults.matcher;
        }

        public Builder setContent(String content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }

        public Builder setMatcher(String matcher) {
            this.matcher = Objects.requireNonNull(matcher);
            return this;
        }

        public ContentMatcherResponse build() {
            return new ContentMatcherResponse(content, matcher);
        }
    }
}
