// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.pubsub_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class RetryPolicyResponse {
    /**
     * The maximum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 600 seconds.
     * 
     */
    private final String maximumBackoff;
    /**
     * The minimum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 10 seconds.
     * 
     */
    private final String minimumBackoff;

    @OutputCustomType.Constructor({"maximumBackoff","minimumBackoff"})
    private RetryPolicyResponse(
        String maximumBackoff,
        String minimumBackoff) {
        this.maximumBackoff = Objects.requireNonNull(maximumBackoff);
        this.minimumBackoff = Objects.requireNonNull(minimumBackoff);
    }

    /**
     * The maximum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 600 seconds.
     * 
     */
    public String getMaximumBackoff() {
        return this.maximumBackoff;
    }
    /**
     * The minimum delay between consecutive deliveries of a given message. Value should be between 0 and 600 seconds. Defaults to 10 seconds.
     * 
     */
    public String getMinimumBackoff() {
        return this.minimumBackoff;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RetryPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String maximumBackoff;
        private String minimumBackoff;

        public Builder() {
    	      // Empty
        }

        public Builder(RetryPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maximumBackoff = defaults.maximumBackoff;
    	      this.minimumBackoff = defaults.minimumBackoff;
        }

        public Builder setMaximumBackoff(String maximumBackoff) {
            this.maximumBackoff = Objects.requireNonNull(maximumBackoff);
            return this;
        }

        public Builder setMinimumBackoff(String minimumBackoff) {
            this.minimumBackoff = Objects.requireNonNull(minimumBackoff);
            return this;
        }
        public RetryPolicyResponse build() {
            return new RetryPolicyResponse(maximumBackoff, minimumBackoff);
        }
    }
}
