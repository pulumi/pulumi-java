// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.privateca_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.privateca_v1.outputs.AllowedKeyTypeResponse;
import io.pulumi.googlenative.privateca_v1.outputs.CertificateExtensionConstraintsResponse;
import io.pulumi.googlenative.privateca_v1.outputs.CertificateIdentityConstraintsResponse;
import io.pulumi.googlenative.privateca_v1.outputs.IssuanceModesResponse;
import io.pulumi.googlenative.privateca_v1.outputs.X509ParametersResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class IssuancePolicyResponse {
    private final IssuanceModesResponse allowedIssuanceModes;
    private final List<AllowedKeyTypeResponse> allowedKeyTypes;
    private final X509ParametersResponse baselineValues;
    private final CertificateIdentityConstraintsResponse identityConstraints;
    private final String maximumLifetime;
    private final CertificateExtensionConstraintsResponse passthroughExtensions;

    @OutputCustomType.Constructor({"allowedIssuanceModes","allowedKeyTypes","baselineValues","identityConstraints","maximumLifetime","passthroughExtensions"})
    private IssuancePolicyResponse(
        IssuanceModesResponse allowedIssuanceModes,
        List<AllowedKeyTypeResponse> allowedKeyTypes,
        X509ParametersResponse baselineValues,
        CertificateIdentityConstraintsResponse identityConstraints,
        String maximumLifetime,
        CertificateExtensionConstraintsResponse passthroughExtensions) {
        this.allowedIssuanceModes = Objects.requireNonNull(allowedIssuanceModes);
        this.allowedKeyTypes = Objects.requireNonNull(allowedKeyTypes);
        this.baselineValues = Objects.requireNonNull(baselineValues);
        this.identityConstraints = Objects.requireNonNull(identityConstraints);
        this.maximumLifetime = Objects.requireNonNull(maximumLifetime);
        this.passthroughExtensions = Objects.requireNonNull(passthroughExtensions);
    }

    public IssuanceModesResponse getAllowedIssuanceModes() {
        return this.allowedIssuanceModes;
    }
    public List<AllowedKeyTypeResponse> getAllowedKeyTypes() {
        return this.allowedKeyTypes;
    }
    public X509ParametersResponse getBaselineValues() {
        return this.baselineValues;
    }
    public CertificateIdentityConstraintsResponse getIdentityConstraints() {
        return this.identityConstraints;
    }
    public String getMaximumLifetime() {
        return this.maximumLifetime;
    }
    public CertificateExtensionConstraintsResponse getPassthroughExtensions() {
        return this.passthroughExtensions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IssuancePolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IssuanceModesResponse allowedIssuanceModes;
        private List<AllowedKeyTypeResponse> allowedKeyTypes;
        private X509ParametersResponse baselineValues;
        private CertificateIdentityConstraintsResponse identityConstraints;
        private String maximumLifetime;
        private CertificateExtensionConstraintsResponse passthroughExtensions;

        public Builder() {
    	      // Empty
        }

        public Builder(IssuancePolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedIssuanceModes = defaults.allowedIssuanceModes;
    	      this.allowedKeyTypes = defaults.allowedKeyTypes;
    	      this.baselineValues = defaults.baselineValues;
    	      this.identityConstraints = defaults.identityConstraints;
    	      this.maximumLifetime = defaults.maximumLifetime;
    	      this.passthroughExtensions = defaults.passthroughExtensions;
        }

        public Builder setAllowedIssuanceModes(IssuanceModesResponse allowedIssuanceModes) {
            this.allowedIssuanceModes = Objects.requireNonNull(allowedIssuanceModes);
            return this;
        }

        public Builder setAllowedKeyTypes(List<AllowedKeyTypeResponse> allowedKeyTypes) {
            this.allowedKeyTypes = Objects.requireNonNull(allowedKeyTypes);
            return this;
        }

        public Builder setBaselineValues(X509ParametersResponse baselineValues) {
            this.baselineValues = Objects.requireNonNull(baselineValues);
            return this;
        }

        public Builder setIdentityConstraints(CertificateIdentityConstraintsResponse identityConstraints) {
            this.identityConstraints = Objects.requireNonNull(identityConstraints);
            return this;
        }

        public Builder setMaximumLifetime(String maximumLifetime) {
            this.maximumLifetime = Objects.requireNonNull(maximumLifetime);
            return this;
        }

        public Builder setPassthroughExtensions(CertificateExtensionConstraintsResponse passthroughExtensions) {
            this.passthroughExtensions = Objects.requireNonNull(passthroughExtensions);
            return this;
        }

        public IssuancePolicyResponse build() {
            return new IssuancePolicyResponse(allowedIssuanceModes, allowedKeyTypes, baselineValues, identityConstraints, maximumLifetime, passthroughExtensions);
        }
    }
}
