// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.appengine_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.appengine_v1.VersionArgs;
import io.pulumi.googlenative.appengine_v1.outputs.ApiConfigHandlerResponse;
import io.pulumi.googlenative.appengine_v1.outputs.AutomaticScalingResponse;
import io.pulumi.googlenative.appengine_v1.outputs.BasicScalingResponse;
import io.pulumi.googlenative.appengine_v1.outputs.DeploymentResponse;
import io.pulumi.googlenative.appengine_v1.outputs.EndpointsApiServiceResponse;
import io.pulumi.googlenative.appengine_v1.outputs.EntrypointResponse;
import io.pulumi.googlenative.appengine_v1.outputs.ErrorHandlerResponse;
import io.pulumi.googlenative.appengine_v1.outputs.HealthCheckResponse;
import io.pulumi.googlenative.appengine_v1.outputs.LibraryResponse;
import io.pulumi.googlenative.appengine_v1.outputs.LivenessCheckResponse;
import io.pulumi.googlenative.appengine_v1.outputs.ManualScalingResponse;
import io.pulumi.googlenative.appengine_v1.outputs.NetworkResponse;
import io.pulumi.googlenative.appengine_v1.outputs.ReadinessCheckResponse;
import io.pulumi.googlenative.appengine_v1.outputs.ResourcesResponse;
import io.pulumi.googlenative.appengine_v1.outputs.UrlMapResponse;
import io.pulumi.googlenative.appengine_v1.outputs.VpcAccessConnectorResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:appengine/v1:Version")
public class Version extends io.pulumi.resources.CustomResource {
    @OutputExport(name="apiConfig", type=ApiConfigHandlerResponse.class, parameters={})
    private Output<ApiConfigHandlerResponse> apiConfig;

    public Output<ApiConfigHandlerResponse> getApiConfig() {
        return this.apiConfig;
    }
    @OutputExport(name="automaticScaling", type=AutomaticScalingResponse.class, parameters={})
    private Output<AutomaticScalingResponse> automaticScaling;

    public Output<AutomaticScalingResponse> getAutomaticScaling() {
        return this.automaticScaling;
    }
    @OutputExport(name="basicScaling", type=BasicScalingResponse.class, parameters={})
    private Output<BasicScalingResponse> basicScaling;

    public Output<BasicScalingResponse> getBasicScaling() {
        return this.basicScaling;
    }
    @OutputExport(name="betaSettings", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> betaSettings;

    public Output<Map<String,String>> getBetaSettings() {
        return this.betaSettings;
    }
    @OutputExport(name="buildEnvVariables", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> buildEnvVariables;

    public Output<Map<String,String>> getBuildEnvVariables() {
        return this.buildEnvVariables;
    }
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime;
    }
    @OutputExport(name="createdBy", type=String.class, parameters={})
    private Output<String> createdBy;

    public Output<String> getCreatedBy() {
        return this.createdBy;
    }
    @OutputExport(name="defaultExpiration", type=String.class, parameters={})
    private Output<String> defaultExpiration;

    public Output<String> getDefaultExpiration() {
        return this.defaultExpiration;
    }
    @OutputExport(name="deployment", type=DeploymentResponse.class, parameters={})
    private Output<DeploymentResponse> deployment;

    public Output<DeploymentResponse> getDeployment() {
        return this.deployment;
    }
    @OutputExport(name="diskUsageBytes", type=String.class, parameters={})
    private Output<String> diskUsageBytes;

    public Output<String> getDiskUsageBytes() {
        return this.diskUsageBytes;
    }
    @OutputExport(name="endpointsApiService", type=EndpointsApiServiceResponse.class, parameters={})
    private Output<EndpointsApiServiceResponse> endpointsApiService;

    public Output<EndpointsApiServiceResponse> getEndpointsApiService() {
        return this.endpointsApiService;
    }
    @OutputExport(name="entrypoint", type=EntrypointResponse.class, parameters={})
    private Output<EntrypointResponse> entrypoint;

    public Output<EntrypointResponse> getEntrypoint() {
        return this.entrypoint;
    }
    @OutputExport(name="env", type=String.class, parameters={})
    private Output<String> env;

    public Output<String> getEnv() {
        return this.env;
    }
    @OutputExport(name="envVariables", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> envVariables;

    public Output<Map<String,String>> getEnvVariables() {
        return this.envVariables;
    }
    @OutputExport(name="errorHandlers", type=List.class, parameters={ErrorHandlerResponse.class})
    private Output<List<ErrorHandlerResponse>> errorHandlers;

    public Output<List<ErrorHandlerResponse>> getErrorHandlers() {
        return this.errorHandlers;
    }
    @OutputExport(name="handlers", type=List.class, parameters={UrlMapResponse.class})
    private Output<List<UrlMapResponse>> handlers;

    public Output<List<UrlMapResponse>> getHandlers() {
        return this.handlers;
    }
    @OutputExport(name="healthCheck", type=HealthCheckResponse.class, parameters={})
    private Output<HealthCheckResponse> healthCheck;

    public Output<HealthCheckResponse> getHealthCheck() {
        return this.healthCheck;
    }
    @OutputExport(name="inboundServices", type=List.class, parameters={String.class})
    private Output<List<String>> inboundServices;

    public Output<List<String>> getInboundServices() {
        return this.inboundServices;
    }
    @OutputExport(name="instanceClass", type=String.class, parameters={})
    private Output<String> instanceClass;

    public Output<String> getInstanceClass() {
        return this.instanceClass;
    }
    @OutputExport(name="libraries", type=List.class, parameters={LibraryResponse.class})
    private Output<List<LibraryResponse>> libraries;

    public Output<List<LibraryResponse>> getLibraries() {
        return this.libraries;
    }
    @OutputExport(name="livenessCheck", type=LivenessCheckResponse.class, parameters={})
    private Output<LivenessCheckResponse> livenessCheck;

    public Output<LivenessCheckResponse> getLivenessCheck() {
        return this.livenessCheck;
    }
    @OutputExport(name="manualScaling", type=ManualScalingResponse.class, parameters={})
    private Output<ManualScalingResponse> manualScaling;

    public Output<ManualScalingResponse> getManualScaling() {
        return this.manualScaling;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="network", type=NetworkResponse.class, parameters={})
    private Output<NetworkResponse> network;

    public Output<NetworkResponse> getNetwork() {
        return this.network;
    }
    @OutputExport(name="nobuildFilesRegex", type=String.class, parameters={})
    private Output<String> nobuildFilesRegex;

    public Output<String> getNobuildFilesRegex() {
        return this.nobuildFilesRegex;
    }
    @OutputExport(name="readinessCheck", type=ReadinessCheckResponse.class, parameters={})
    private Output<ReadinessCheckResponse> readinessCheck;

    public Output<ReadinessCheckResponse> getReadinessCheck() {
        return this.readinessCheck;
    }
    @OutputExport(name="resources", type=ResourcesResponse.class, parameters={})
    private Output<ResourcesResponse> resources;

    public Output<ResourcesResponse> getResources() {
        return this.resources;
    }
    @OutputExport(name="runtime", type=String.class, parameters={})
    private Output<String> runtime;

    public Output<String> getRuntime() {
        return this.runtime;
    }
    @OutputExport(name="runtimeApiVersion", type=String.class, parameters={})
    private Output<String> runtimeApiVersion;

    public Output<String> getRuntimeApiVersion() {
        return this.runtimeApiVersion;
    }
    @OutputExport(name="runtimeChannel", type=String.class, parameters={})
    private Output<String> runtimeChannel;

    public Output<String> getRuntimeChannel() {
        return this.runtimeChannel;
    }
    @OutputExport(name="runtimeMainExecutablePath", type=String.class, parameters={})
    private Output<String> runtimeMainExecutablePath;

    public Output<String> getRuntimeMainExecutablePath() {
        return this.runtimeMainExecutablePath;
    }
    @OutputExport(name="serviceAccount", type=String.class, parameters={})
    private Output<String> serviceAccount;

    public Output<String> getServiceAccount() {
        return this.serviceAccount;
    }
    @OutputExport(name="servingStatus", type=String.class, parameters={})
    private Output<String> servingStatus;

    public Output<String> getServingStatus() {
        return this.servingStatus;
    }
    @OutputExport(name="threadsafe", type=Boolean.class, parameters={})
    private Output<Boolean> threadsafe;

    public Output<Boolean> getThreadsafe() {
        return this.threadsafe;
    }
    @OutputExport(name="versionUrl", type=String.class, parameters={})
    private Output<String> versionUrl;

    public Output<String> getVersionUrl() {
        return this.versionUrl;
    }
    @OutputExport(name="vm", type=Boolean.class, parameters={})
    private Output<Boolean> vm;

    public Output<Boolean> getVm() {
        return this.vm;
    }
    @OutputExport(name="vpcAccessConnector", type=VpcAccessConnectorResponse.class, parameters={})
    private Output<VpcAccessConnectorResponse> vpcAccessConnector;

    public Output<VpcAccessConnectorResponse> getVpcAccessConnector() {
        return this.vpcAccessConnector;
    }

    public Version(String name, VersionArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:appengine/v1:Version", name, args == null ? VersionArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Version(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:appengine/v1:Version", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Version get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Version(name, id, options);
    }
}
