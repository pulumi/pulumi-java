// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.connectors_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class ConnectionStatusResponse {
    private final String description;
    private final String state;
    private final String status;

    @OutputCustomType.Constructor({"description","state","status"})
    private ConnectionStatusResponse(
        String description,
        String state,
        String status) {
        this.description = Objects.requireNonNull(description);
        this.state = Objects.requireNonNull(state);
        this.status = Objects.requireNonNull(status);
    }

    public String getDescription() {
        return this.description;
    }
    public String getState() {
        return this.state;
    }
    public String getStatus() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionStatusResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String description;
        private String state;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectionStatusResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public ConnectionStatusResponse build() {
            return new ConnectionStatusResponse(description, state, status);
        }
    }
}
