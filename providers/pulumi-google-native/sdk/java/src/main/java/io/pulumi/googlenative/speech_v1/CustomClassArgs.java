// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.speech_v1;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.speech_v1.inputs.ClassItemArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CustomClassArgs extends io.pulumi.resources.ResourceArgs {

    public static final CustomClassArgs Empty = new CustomClassArgs();

    /**
     * The ID to use for the custom class, which will become the final component of the custom class' resource name. This value should be 4-63 characters, and valid characters are /a-z-/.
     * 
     */
    @InputImport(name="customClassId", required=true)
      private final Input<String> customClassId;

    public Input<String> getCustomClassId() {
        return this.customClassId;
    }

    /**
     * A collection of class items.
     * 
     */
    @InputImport(name="items")
      private final @Nullable Input<List<ClassItemArgs>> items;

    public Input<List<ClassItemArgs>> getItems() {
        return this.items == null ? Input.empty() : this.items;
    }

    @InputImport(name="location")
      private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * The resource name of the custom class.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
      private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    public CustomClassArgs(
        Input<String> customClassId,
        @Nullable Input<List<ClassItemArgs>> items,
        @Nullable Input<String> location,
        @Nullable Input<String> name,
        @Nullable Input<String> project) {
        this.customClassId = Objects.requireNonNull(customClassId, "expected parameter 'customClassId' to be non-null");
        this.items = items;
        this.location = location;
        this.name = name;
        this.project = project;
    }

    private CustomClassArgs() {
        this.customClassId = Input.empty();
        this.items = Input.empty();
        this.location = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CustomClassArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> customClassId;
        private @Nullable Input<List<ClassItemArgs>> items;
        private @Nullable Input<String> location;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(CustomClassArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.customClassId = defaults.customClassId;
    	      this.items = defaults.items;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
        }

        public Builder customClassId(Input<String> customClassId) {
            this.customClassId = Objects.requireNonNull(customClassId);
            return this;
        }

        public Builder customClassId(String customClassId) {
            this.customClassId = Input.of(Objects.requireNonNull(customClassId));
            return this;
        }

        public Builder items(@Nullable Input<List<ClassItemArgs>> items) {
            this.items = items;
            return this;
        }

        public Builder items(@Nullable List<ClassItemArgs> items) {
            this.items = Input.ofNullable(items);
            return this;
        }

        public Builder location(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder project(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }
        public CustomClassArgs build() {
            return new CustomClassArgs(customClassId, items, location, name, project);
        }
    }
}
