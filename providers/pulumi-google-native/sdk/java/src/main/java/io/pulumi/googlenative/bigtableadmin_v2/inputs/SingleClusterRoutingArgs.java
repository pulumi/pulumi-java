// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigtableadmin_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Unconditionally routes all read/write requests to a specific cluster. This option preserves read-your-writes consistency but does not improve availability.
 * 
 */
public final class SingleClusterRoutingArgs extends io.pulumi.resources.ResourceArgs {

    public static final SingleClusterRoutingArgs Empty = new SingleClusterRoutingArgs();

    /**
     * Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters.
     * 
     */
    @InputImport(name="allowTransactionalWrites")
      private final @Nullable Input<Boolean> allowTransactionalWrites;

    public Input<Boolean> getAllowTransactionalWrites() {
        return this.allowTransactionalWrites == null ? Input.empty() : this.allowTransactionalWrites;
    }

    /**
     * The cluster to which read/write requests should be routed.
     * 
     */
    @InputImport(name="clusterId")
      private final @Nullable Input<String> clusterId;

    public Input<String> getClusterId() {
        return this.clusterId == null ? Input.empty() : this.clusterId;
    }

    public SingleClusterRoutingArgs(
        @Nullable Input<Boolean> allowTransactionalWrites,
        @Nullable Input<String> clusterId) {
        this.allowTransactionalWrites = allowTransactionalWrites;
        this.clusterId = clusterId;
    }

    private SingleClusterRoutingArgs() {
        this.allowTransactionalWrites = Input.empty();
        this.clusterId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SingleClusterRoutingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> allowTransactionalWrites;
        private @Nullable Input<String> clusterId;

        public Builder() {
    	      // Empty
        }

        public Builder(SingleClusterRoutingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowTransactionalWrites = defaults.allowTransactionalWrites;
    	      this.clusterId = defaults.clusterId;
        }

        public Builder allowTransactionalWrites(@Nullable Input<Boolean> allowTransactionalWrites) {
            this.allowTransactionalWrites = allowTransactionalWrites;
            return this;
        }

        public Builder allowTransactionalWrites(@Nullable Boolean allowTransactionalWrites) {
            this.allowTransactionalWrites = Input.ofNullable(allowTransactionalWrites);
            return this;
        }

        public Builder clusterId(@Nullable Input<String> clusterId) {
            this.clusterId = clusterId;
            return this;
        }

        public Builder clusterId(@Nullable String clusterId) {
            this.clusterId = Input.ofNullable(clusterId);
            return this;
        }
        public SingleClusterRoutingArgs build() {
            return new SingleClusterRoutingArgs(allowTransactionalWrites, clusterId);
        }
    }
}
