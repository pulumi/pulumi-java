// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataflow_v1b3;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dataflow_v1b3.enums.JobCurrentState;
import io.pulumi.googlenative.dataflow_v1b3.enums.JobRequestedState;
import io.pulumi.googlenative.dataflow_v1b3.enums.JobType;
import io.pulumi.googlenative.dataflow_v1b3.inputs.EnvironmentArgs;
import io.pulumi.googlenative.dataflow_v1b3.inputs.ExecutionStageStateArgs;
import io.pulumi.googlenative.dataflow_v1b3.inputs.JobMetadataArgs;
import io.pulumi.googlenative.dataflow_v1b3.inputs.PipelineDescriptionArgs;
import io.pulumi.googlenative.dataflow_v1b3.inputs.StepArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobArgs Empty = new JobArgs();

    /**
     * The client's unique identifier of the job, re-used across retried attempts. If this field is set, the service will ensure its uniqueness. The request to create a job will fail if the service has knowledge of a previously submitted job with the same client's ID and job name. The caller may use this field to ensure idempotence of job creation across retried attempts to create a job. By default, the field is empty and, in that case, the service ignores it.
     * 
     */
    @InputImport(name="clientRequestId")
      private final @Nullable Output<String> clientRequestId;

    public Output<String> getClientRequestId() {
        return this.clientRequestId == null ? Output.empty() : this.clientRequestId;
    }

    /**
     * The timestamp when the job was initially created. Immutable and set by the Cloud Dataflow service.
     * 
     */
    @InputImport(name="createTime")
      private final @Nullable Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime == null ? Output.empty() : this.createTime;
    }

    /**
     * If this is specified, the job's initial state is populated from the given snapshot.
     * 
     */
    @InputImport(name="createdFromSnapshotId")
      private final @Nullable Output<String> createdFromSnapshotId;

    public Output<String> getCreatedFromSnapshotId() {
        return this.createdFromSnapshotId == null ? Output.empty() : this.createdFromSnapshotId;
    }

    /**
     * The current state of the job. Jobs are created in the `JOB_STATE_STOPPED` state unless otherwise specified. A job in the `JOB_STATE_RUNNING` state may asynchronously enter a terminal state. After a job has reached a terminal state, no further state updates may be made. This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.
     * 
     */
    @InputImport(name="currentState")
      private final @Nullable Output<JobCurrentState> currentState;

    public Output<JobCurrentState> getCurrentState() {
        return this.currentState == null ? Output.empty() : this.currentState;
    }

    /**
     * The timestamp associated with the current state.
     * 
     */
    @InputImport(name="currentStateTime")
      private final @Nullable Output<String> currentStateTime;

    public Output<String> getCurrentStateTime() {
        return this.currentStateTime == null ? Output.empty() : this.currentStateTime;
    }

    /**
     * The environment for the job.
     * 
     */
    @InputImport(name="environment")
      private final @Nullable Output<EnvironmentArgs> environment;

    public Output<EnvironmentArgs> getEnvironment() {
        return this.environment == null ? Output.empty() : this.environment;
    }

    /**
     * The unique ID of this job. This field is set by the Cloud Dataflow service when the Job is created, and is immutable for the life of the job.
     * 
     */
    @InputImport(name="id")
      private final @Nullable Output<String> id;

    public Output<String> getId() {
        return this.id == null ? Output.empty() : this.id;
    }

    /**
     * This field is populated by the Dataflow service to support filtering jobs by the metadata values provided here. Populated for ListJobs and all GetJob views SUMMARY and higher.
     * 
     */
    @InputImport(name="jobMetadata")
      private final @Nullable Output<JobMetadataArgs> jobMetadata;

    public Output<JobMetadataArgs> getJobMetadata() {
        return this.jobMetadata == null ? Output.empty() : this.jobMetadata;
    }

    /**
     * User-defined labels for this job. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \p{Ll}\p{Lo}{0,62} * Values must conform to regexp: [\p{Ll}\p{Lo}\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.
     * 
     */
    @InputImport(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels == null ? Output.empty() : this.labels;
    }

    /**
     * The [regional endpoint] (https://cloud.google.com/dataflow/docs/concepts/regional-endpoints) that contains this job.
     * 
     */
    @InputImport(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The user-specified Cloud Dataflow job name. Only one Job with a given name may exist in a project at any given time. If a caller attempts to create a Job with the same name as an already-existing Job, the attempt returns the existing Job. The name must match the regular expression `[a-z]([-a-z0-9]{0,38}[a-z0-9])?`
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * Preliminary field: The format of this data may change at any time. A description of the user pipeline and stages through which it is executed. Created by Cloud Dataflow service. Only retrieved with JOB_VIEW_DESCRIPTION or JOB_VIEW_ALL.
     * 
     */
    @InputImport(name="pipelineDescription")
      private final @Nullable Output<PipelineDescriptionArgs> pipelineDescription;

    public Output<PipelineDescriptionArgs> getPipelineDescription() {
        return this.pipelineDescription == null ? Output.empty() : this.pipelineDescription;
    }

    /**
     * The ID of the Cloud Platform project that the job belongs to.
     * 
     */
    @InputImport(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * If this job is an update of an existing job, this field is the job ID of the job it replaced. When sending a `CreateJobRequest`, you can update a job by specifying it here. The job named here is stopped, and its intermediate state is transferred to this job.
     * 
     */
    @InputImport(name="replaceJobId")
      private final @Nullable Output<String> replaceJobId;

    public Output<String> getReplaceJobId() {
        return this.replaceJobId == null ? Output.empty() : this.replaceJobId;
    }

    /**
     * If another job is an update of this job (and thus, this job is in `JOB_STATE_UPDATED`), this field contains the ID of that job.
     * 
     */
    @InputImport(name="replacedByJobId")
      private final @Nullable Output<String> replacedByJobId;

    public Output<String> getReplacedByJobId() {
        return this.replacedByJobId == null ? Output.empty() : this.replacedByJobId;
    }

    /**
     * The job's requested state. `UpdateJob` may be used to switch between the `JOB_STATE_STOPPED` and `JOB_STATE_RUNNING` states, by setting requested_state. `UpdateJob` may also be used to directly set a job's requested state to `JOB_STATE_CANCELLED` or `JOB_STATE_DONE`, irrevocably terminating the job if it has not already reached a terminal state.
     * 
     */
    @InputImport(name="requestedState")
      private final @Nullable Output<JobRequestedState> requestedState;

    public Output<JobRequestedState> getRequestedState() {
        return this.requestedState == null ? Output.empty() : this.requestedState;
    }

    /**
     * Reserved for future use. This field is set only in responses from the server; it is ignored if it is set in any requests.
     * 
     */
    @InputImport(name="satisfiesPzs")
      private final @Nullable Output<Boolean> satisfiesPzs;

    public Output<Boolean> getSatisfiesPzs() {
        return this.satisfiesPzs == null ? Output.empty() : this.satisfiesPzs;
    }

    /**
     * This field may be mutated by the Cloud Dataflow service; callers cannot mutate it.
     * 
     */
    @InputImport(name="stageStates")
      private final @Nullable Output<List<ExecutionStageStateArgs>> stageStates;

    public Output<List<ExecutionStageStateArgs>> getStageStates() {
        return this.stageStates == null ? Output.empty() : this.stageStates;
    }

    /**
     * The timestamp when the job was started (transitioned to JOB_STATE_PENDING). Flexible resource scheduling jobs are started with some delay after job creation, so start_time is unset before start and is updated when the job is started by the Cloud Dataflow service. For other jobs, start_time always equals to create_time and is immutable and set by the Cloud Dataflow service.
     * 
     */
    @InputImport(name="startTime")
      private final @Nullable Output<String> startTime;

    public Output<String> getStartTime() {
        return this.startTime == null ? Output.empty() : this.startTime;
    }

    /**
     * Exactly one of step or steps_location should be specified. The top-level steps that constitute the entire job. Only retrieved with JOB_VIEW_ALL.
     * 
     */
    @InputImport(name="steps")
      private final @Nullable Output<List<StepArgs>> steps;

    public Output<List<StepArgs>> getSteps() {
        return this.steps == null ? Output.empty() : this.steps;
    }

    /**
     * The Cloud Storage location where the steps are stored.
     * 
     */
    @InputImport(name="stepsLocation")
      private final @Nullable Output<String> stepsLocation;

    public Output<String> getStepsLocation() {
        return this.stepsLocation == null ? Output.empty() : this.stepsLocation;
    }

    /**
     * A set of files the system should be aware of that are used for temporary storage. These temporary files will be removed on job completion. No duplicates are allowed. No file patterns are supported. The supported files are: Google Cloud Storage: storage.googleapis.com/{bucket}/{object} bucket.storage.googleapis.com/{object}
     * 
     */
    @InputImport(name="tempFiles")
      private final @Nullable Output<List<String>> tempFiles;

    public Output<List<String>> getTempFiles() {
        return this.tempFiles == null ? Output.empty() : this.tempFiles;
    }

    /**
     * The map of transform name prefixes of the job to be replaced to the corresponding name prefixes of the new job.
     * 
     */
    @InputImport(name="transformNameMapping")
      private final @Nullable Output<Map<String,String>> transformNameMapping;

    public Output<Map<String,String>> getTransformNameMapping() {
        return this.transformNameMapping == null ? Output.empty() : this.transformNameMapping;
    }

    /**
     * The type of Cloud Dataflow job.
     * 
     */
    @InputImport(name="type")
      private final @Nullable Output<JobType> type;

    public Output<JobType> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    @InputImport(name="view")
      private final @Nullable Output<String> view;

    public Output<String> getView() {
        return this.view == null ? Output.empty() : this.view;
    }

    public JobArgs(
        @Nullable Output<String> clientRequestId,
        @Nullable Output<String> createTime,
        @Nullable Output<String> createdFromSnapshotId,
        @Nullable Output<JobCurrentState> currentState,
        @Nullable Output<String> currentStateTime,
        @Nullable Output<EnvironmentArgs> environment,
        @Nullable Output<String> id,
        @Nullable Output<JobMetadataArgs> jobMetadata,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<PipelineDescriptionArgs> pipelineDescription,
        @Nullable Output<String> project,
        @Nullable Output<String> replaceJobId,
        @Nullable Output<String> replacedByJobId,
        @Nullable Output<JobRequestedState> requestedState,
        @Nullable Output<Boolean> satisfiesPzs,
        @Nullable Output<List<ExecutionStageStateArgs>> stageStates,
        @Nullable Output<String> startTime,
        @Nullable Output<List<StepArgs>> steps,
        @Nullable Output<String> stepsLocation,
        @Nullable Output<List<String>> tempFiles,
        @Nullable Output<Map<String,String>> transformNameMapping,
        @Nullable Output<JobType> type,
        @Nullable Output<String> view) {
        this.clientRequestId = clientRequestId;
        this.createTime = createTime;
        this.createdFromSnapshotId = createdFromSnapshotId;
        this.currentState = currentState;
        this.currentStateTime = currentStateTime;
        this.environment = environment;
        this.id = id;
        this.jobMetadata = jobMetadata;
        this.labels = labels;
        this.location = location;
        this.name = name;
        this.pipelineDescription = pipelineDescription;
        this.project = project;
        this.replaceJobId = replaceJobId;
        this.replacedByJobId = replacedByJobId;
        this.requestedState = requestedState;
        this.satisfiesPzs = satisfiesPzs;
        this.stageStates = stageStates;
        this.startTime = startTime;
        this.steps = steps;
        this.stepsLocation = stepsLocation;
        this.tempFiles = tempFiles;
        this.transformNameMapping = transformNameMapping;
        this.type = type;
        this.view = view;
    }

    private JobArgs() {
        this.clientRequestId = Output.empty();
        this.createTime = Output.empty();
        this.createdFromSnapshotId = Output.empty();
        this.currentState = Output.empty();
        this.currentStateTime = Output.empty();
        this.environment = Output.empty();
        this.id = Output.empty();
        this.jobMetadata = Output.empty();
        this.labels = Output.empty();
        this.location = Output.empty();
        this.name = Output.empty();
        this.pipelineDescription = Output.empty();
        this.project = Output.empty();
        this.replaceJobId = Output.empty();
        this.replacedByJobId = Output.empty();
        this.requestedState = Output.empty();
        this.satisfiesPzs = Output.empty();
        this.stageStates = Output.empty();
        this.startTime = Output.empty();
        this.steps = Output.empty();
        this.stepsLocation = Output.empty();
        this.tempFiles = Output.empty();
        this.transformNameMapping = Output.empty();
        this.type = Output.empty();
        this.view = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> clientRequestId;
        private @Nullable Output<String> createTime;
        private @Nullable Output<String> createdFromSnapshotId;
        private @Nullable Output<JobCurrentState> currentState;
        private @Nullable Output<String> currentStateTime;
        private @Nullable Output<EnvironmentArgs> environment;
        private @Nullable Output<String> id;
        private @Nullable Output<JobMetadataArgs> jobMetadata;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<PipelineDescriptionArgs> pipelineDescription;
        private @Nullable Output<String> project;
        private @Nullable Output<String> replaceJobId;
        private @Nullable Output<String> replacedByJobId;
        private @Nullable Output<JobRequestedState> requestedState;
        private @Nullable Output<Boolean> satisfiesPzs;
        private @Nullable Output<List<ExecutionStageStateArgs>> stageStates;
        private @Nullable Output<String> startTime;
        private @Nullable Output<List<StepArgs>> steps;
        private @Nullable Output<String> stepsLocation;
        private @Nullable Output<List<String>> tempFiles;
        private @Nullable Output<Map<String,String>> transformNameMapping;
        private @Nullable Output<JobType> type;
        private @Nullable Output<String> view;

        public Builder() {
    	      // Empty
        }

        public Builder(JobArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientRequestId = defaults.clientRequestId;
    	      this.createTime = defaults.createTime;
    	      this.createdFromSnapshotId = defaults.createdFromSnapshotId;
    	      this.currentState = defaults.currentState;
    	      this.currentStateTime = defaults.currentStateTime;
    	      this.environment = defaults.environment;
    	      this.id = defaults.id;
    	      this.jobMetadata = defaults.jobMetadata;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.pipelineDescription = defaults.pipelineDescription;
    	      this.project = defaults.project;
    	      this.replaceJobId = defaults.replaceJobId;
    	      this.replacedByJobId = defaults.replacedByJobId;
    	      this.requestedState = defaults.requestedState;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.stageStates = defaults.stageStates;
    	      this.startTime = defaults.startTime;
    	      this.steps = defaults.steps;
    	      this.stepsLocation = defaults.stepsLocation;
    	      this.tempFiles = defaults.tempFiles;
    	      this.transformNameMapping = defaults.transformNameMapping;
    	      this.type = defaults.type;
    	      this.view = defaults.view;
        }

        public Builder clientRequestId(@Nullable Output<String> clientRequestId) {
            this.clientRequestId = clientRequestId;
            return this;
        }

        public Builder clientRequestId(@Nullable String clientRequestId) {
            this.clientRequestId = Output.ofNullable(clientRequestId);
            return this;
        }

        public Builder createTime(@Nullable Output<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder createTime(@Nullable String createTime) {
            this.createTime = Output.ofNullable(createTime);
            return this;
        }

        public Builder createdFromSnapshotId(@Nullable Output<String> createdFromSnapshotId) {
            this.createdFromSnapshotId = createdFromSnapshotId;
            return this;
        }

        public Builder createdFromSnapshotId(@Nullable String createdFromSnapshotId) {
            this.createdFromSnapshotId = Output.ofNullable(createdFromSnapshotId);
            return this;
        }

        public Builder currentState(@Nullable Output<JobCurrentState> currentState) {
            this.currentState = currentState;
            return this;
        }

        public Builder currentState(@Nullable JobCurrentState currentState) {
            this.currentState = Output.ofNullable(currentState);
            return this;
        }

        public Builder currentStateTime(@Nullable Output<String> currentStateTime) {
            this.currentStateTime = currentStateTime;
            return this;
        }

        public Builder currentStateTime(@Nullable String currentStateTime) {
            this.currentStateTime = Output.ofNullable(currentStateTime);
            return this;
        }

        public Builder environment(@Nullable Output<EnvironmentArgs> environment) {
            this.environment = environment;
            return this;
        }

        public Builder environment(@Nullable EnvironmentArgs environment) {
            this.environment = Output.ofNullable(environment);
            return this;
        }

        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }

        public Builder id(@Nullable String id) {
            this.id = Output.ofNullable(id);
            return this;
        }

        public Builder jobMetadata(@Nullable Output<JobMetadataArgs> jobMetadata) {
            this.jobMetadata = jobMetadata;
            return this;
        }

        public Builder jobMetadata(@Nullable JobMetadataArgs jobMetadata) {
            this.jobMetadata = Output.ofNullable(jobMetadata);
            return this;
        }

        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Output.ofNullable(labels);
            return this;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder pipelineDescription(@Nullable Output<PipelineDescriptionArgs> pipelineDescription) {
            this.pipelineDescription = pipelineDescription;
            return this;
        }

        public Builder pipelineDescription(@Nullable PipelineDescriptionArgs pipelineDescription) {
            this.pipelineDescription = Output.ofNullable(pipelineDescription);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder replaceJobId(@Nullable Output<String> replaceJobId) {
            this.replaceJobId = replaceJobId;
            return this;
        }

        public Builder replaceJobId(@Nullable String replaceJobId) {
            this.replaceJobId = Output.ofNullable(replaceJobId);
            return this;
        }

        public Builder replacedByJobId(@Nullable Output<String> replacedByJobId) {
            this.replacedByJobId = replacedByJobId;
            return this;
        }

        public Builder replacedByJobId(@Nullable String replacedByJobId) {
            this.replacedByJobId = Output.ofNullable(replacedByJobId);
            return this;
        }

        public Builder requestedState(@Nullable Output<JobRequestedState> requestedState) {
            this.requestedState = requestedState;
            return this;
        }

        public Builder requestedState(@Nullable JobRequestedState requestedState) {
            this.requestedState = Output.ofNullable(requestedState);
            return this;
        }

        public Builder satisfiesPzs(@Nullable Output<Boolean> satisfiesPzs) {
            this.satisfiesPzs = satisfiesPzs;
            return this;
        }

        public Builder satisfiesPzs(@Nullable Boolean satisfiesPzs) {
            this.satisfiesPzs = Output.ofNullable(satisfiesPzs);
            return this;
        }

        public Builder stageStates(@Nullable Output<List<ExecutionStageStateArgs>> stageStates) {
            this.stageStates = stageStates;
            return this;
        }

        public Builder stageStates(@Nullable List<ExecutionStageStateArgs> stageStates) {
            this.stageStates = Output.ofNullable(stageStates);
            return this;
        }

        public Builder startTime(@Nullable Output<String> startTime) {
            this.startTime = startTime;
            return this;
        }

        public Builder startTime(@Nullable String startTime) {
            this.startTime = Output.ofNullable(startTime);
            return this;
        }

        public Builder steps(@Nullable Output<List<StepArgs>> steps) {
            this.steps = steps;
            return this;
        }

        public Builder steps(@Nullable List<StepArgs> steps) {
            this.steps = Output.ofNullable(steps);
            return this;
        }

        public Builder stepsLocation(@Nullable Output<String> stepsLocation) {
            this.stepsLocation = stepsLocation;
            return this;
        }

        public Builder stepsLocation(@Nullable String stepsLocation) {
            this.stepsLocation = Output.ofNullable(stepsLocation);
            return this;
        }

        public Builder tempFiles(@Nullable Output<List<String>> tempFiles) {
            this.tempFiles = tempFiles;
            return this;
        }

        public Builder tempFiles(@Nullable List<String> tempFiles) {
            this.tempFiles = Output.ofNullable(tempFiles);
            return this;
        }

        public Builder transformNameMapping(@Nullable Output<Map<String,String>> transformNameMapping) {
            this.transformNameMapping = transformNameMapping;
            return this;
        }

        public Builder transformNameMapping(@Nullable Map<String,String> transformNameMapping) {
            this.transformNameMapping = Output.ofNullable(transformNameMapping);
            return this;
        }

        public Builder type(@Nullable Output<JobType> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable JobType type) {
            this.type = Output.ofNullable(type);
            return this;
        }

        public Builder view(@Nullable Output<String> view) {
            this.view = view;
            return this;
        }

        public Builder view(@Nullable String view) {
            this.view = Output.ofNullable(view);
            return this;
        }
        public JobArgs build() {
            return new JobArgs(clientRequestId, createTime, createdFromSnapshotId, currentState, currentStateTime, environment, id, jobMetadata, labels, location, name, pipelineDescription, project, replaceJobId, replacedByJobId, requestedState, satisfiesPzs, stageStates, startTime, steps, stepsLocation, tempFiles, transformNameMapping, type, view);
        }
    }
}
