// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataflow_v1b3;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.dataflow_v1b3.enums.JobCurrentState;
import io.pulumi.googlenative.dataflow_v1b3.enums.JobRequestedState;
import io.pulumi.googlenative.dataflow_v1b3.enums.JobType;
import io.pulumi.googlenative.dataflow_v1b3.inputs.EnvironmentArgs;
import io.pulumi.googlenative.dataflow_v1b3.inputs.ExecutionStageStateArgs;
import io.pulumi.googlenative.dataflow_v1b3.inputs.JobMetadataArgs;
import io.pulumi.googlenative.dataflow_v1b3.inputs.PipelineDescriptionArgs;
import io.pulumi.googlenative.dataflow_v1b3.inputs.StepArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobArgs Empty = new JobArgs();

    @InputImport(name="clientRequestId")
    private final @Nullable Input<String> clientRequestId;

    public Input<String> getClientRequestId() {
        return this.clientRequestId == null ? Input.empty() : this.clientRequestId;
    }

    @InputImport(name="createTime")
    private final @Nullable Input<String> createTime;

    public Input<String> getCreateTime() {
        return this.createTime == null ? Input.empty() : this.createTime;
    }

    @InputImport(name="createdFromSnapshotId")
    private final @Nullable Input<String> createdFromSnapshotId;

    public Input<String> getCreatedFromSnapshotId() {
        return this.createdFromSnapshotId == null ? Input.empty() : this.createdFromSnapshotId;
    }

    @InputImport(name="currentState")
    private final @Nullable Input<JobCurrentState> currentState;

    public Input<JobCurrentState> getCurrentState() {
        return this.currentState == null ? Input.empty() : this.currentState;
    }

    @InputImport(name="currentStateTime")
    private final @Nullable Input<String> currentStateTime;

    public Input<String> getCurrentStateTime() {
        return this.currentStateTime == null ? Input.empty() : this.currentStateTime;
    }

    @InputImport(name="environment")
    private final @Nullable Input<EnvironmentArgs> environment;

    public Input<EnvironmentArgs> getEnvironment() {
        return this.environment == null ? Input.empty() : this.environment;
    }

    @InputImport(name="id")
    private final @Nullable Input<String> id;

    public Input<String> getId() {
        return this.id == null ? Input.empty() : this.id;
    }

    @InputImport(name="jobMetadata")
    private final @Nullable Input<JobMetadataArgs> jobMetadata;

    public Input<JobMetadataArgs> getJobMetadata() {
        return this.jobMetadata == null ? Input.empty() : this.jobMetadata;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="pipelineDescription")
    private final @Nullable Input<PipelineDescriptionArgs> pipelineDescription;

    public Input<PipelineDescriptionArgs> getPipelineDescription() {
        return this.pipelineDescription == null ? Input.empty() : this.pipelineDescription;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="replaceJobId")
    private final @Nullable Input<String> replaceJobId;

    public Input<String> getReplaceJobId() {
        return this.replaceJobId == null ? Input.empty() : this.replaceJobId;
    }

    @InputImport(name="replacedByJobId")
    private final @Nullable Input<String> replacedByJobId;

    public Input<String> getReplacedByJobId() {
        return this.replacedByJobId == null ? Input.empty() : this.replacedByJobId;
    }

    @InputImport(name="requestedState")
    private final @Nullable Input<JobRequestedState> requestedState;

    public Input<JobRequestedState> getRequestedState() {
        return this.requestedState == null ? Input.empty() : this.requestedState;
    }

    @InputImport(name="satisfiesPzs")
    private final @Nullable Input<Boolean> satisfiesPzs;

    public Input<Boolean> getSatisfiesPzs() {
        return this.satisfiesPzs == null ? Input.empty() : this.satisfiesPzs;
    }

    @InputImport(name="stageStates")
    private final @Nullable Input<List<ExecutionStageStateArgs>> stageStates;

    public Input<List<ExecutionStageStateArgs>> getStageStates() {
        return this.stageStates == null ? Input.empty() : this.stageStates;
    }

    @InputImport(name="startTime")
    private final @Nullable Input<String> startTime;

    public Input<String> getStartTime() {
        return this.startTime == null ? Input.empty() : this.startTime;
    }

    @InputImport(name="steps")
    private final @Nullable Input<List<StepArgs>> steps;

    public Input<List<StepArgs>> getSteps() {
        return this.steps == null ? Input.empty() : this.steps;
    }

    @InputImport(name="stepsLocation")
    private final @Nullable Input<String> stepsLocation;

    public Input<String> getStepsLocation() {
        return this.stepsLocation == null ? Input.empty() : this.stepsLocation;
    }

    @InputImport(name="tempFiles")
    private final @Nullable Input<List<String>> tempFiles;

    public Input<List<String>> getTempFiles() {
        return this.tempFiles == null ? Input.empty() : this.tempFiles;
    }

    @InputImport(name="transformNameMapping")
    private final @Nullable Input<Map<String,String>> transformNameMapping;

    public Input<Map<String,String>> getTransformNameMapping() {
        return this.transformNameMapping == null ? Input.empty() : this.transformNameMapping;
    }

    @InputImport(name="type")
    private final @Nullable Input<JobType> type;

    public Input<JobType> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    @InputImport(name="view")
    private final @Nullable Input<String> view;

    public Input<String> getView() {
        return this.view == null ? Input.empty() : this.view;
    }

    public JobArgs(
        @Nullable Input<String> clientRequestId,
        @Nullable Input<String> createTime,
        @Nullable Input<String> createdFromSnapshotId,
        @Nullable Input<JobCurrentState> currentState,
        @Nullable Input<String> currentStateTime,
        @Nullable Input<EnvironmentArgs> environment,
        @Nullable Input<String> id,
        @Nullable Input<JobMetadataArgs> jobMetadata,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> location,
        @Nullable Input<String> name,
        @Nullable Input<PipelineDescriptionArgs> pipelineDescription,
        @Nullable Input<String> project,
        @Nullable Input<String> replaceJobId,
        @Nullable Input<String> replacedByJobId,
        @Nullable Input<JobRequestedState> requestedState,
        @Nullable Input<Boolean> satisfiesPzs,
        @Nullable Input<List<ExecutionStageStateArgs>> stageStates,
        @Nullable Input<String> startTime,
        @Nullable Input<List<StepArgs>> steps,
        @Nullable Input<String> stepsLocation,
        @Nullable Input<List<String>> tempFiles,
        @Nullable Input<Map<String,String>> transformNameMapping,
        @Nullable Input<JobType> type,
        @Nullable Input<String> view) {
        this.clientRequestId = clientRequestId;
        this.createTime = createTime;
        this.createdFromSnapshotId = createdFromSnapshotId;
        this.currentState = currentState;
        this.currentStateTime = currentStateTime;
        this.environment = environment;
        this.id = id;
        this.jobMetadata = jobMetadata;
        this.labels = labels;
        this.location = location;
        this.name = name;
        this.pipelineDescription = pipelineDescription;
        this.project = project;
        this.replaceJobId = replaceJobId;
        this.replacedByJobId = replacedByJobId;
        this.requestedState = requestedState;
        this.satisfiesPzs = satisfiesPzs;
        this.stageStates = stageStates;
        this.startTime = startTime;
        this.steps = steps;
        this.stepsLocation = stepsLocation;
        this.tempFiles = tempFiles;
        this.transformNameMapping = transformNameMapping;
        this.type = type;
        this.view = view;
    }

    private JobArgs() {
        this.clientRequestId = Input.empty();
        this.createTime = Input.empty();
        this.createdFromSnapshotId = Input.empty();
        this.currentState = Input.empty();
        this.currentStateTime = Input.empty();
        this.environment = Input.empty();
        this.id = Input.empty();
        this.jobMetadata = Input.empty();
        this.labels = Input.empty();
        this.location = Input.empty();
        this.name = Input.empty();
        this.pipelineDescription = Input.empty();
        this.project = Input.empty();
        this.replaceJobId = Input.empty();
        this.replacedByJobId = Input.empty();
        this.requestedState = Input.empty();
        this.satisfiesPzs = Input.empty();
        this.stageStates = Input.empty();
        this.startTime = Input.empty();
        this.steps = Input.empty();
        this.stepsLocation = Input.empty();
        this.tempFiles = Input.empty();
        this.transformNameMapping = Input.empty();
        this.type = Input.empty();
        this.view = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> clientRequestId;
        private @Nullable Input<String> createTime;
        private @Nullable Input<String> createdFromSnapshotId;
        private @Nullable Input<JobCurrentState> currentState;
        private @Nullable Input<String> currentStateTime;
        private @Nullable Input<EnvironmentArgs> environment;
        private @Nullable Input<String> id;
        private @Nullable Input<JobMetadataArgs> jobMetadata;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> location;
        private @Nullable Input<String> name;
        private @Nullable Input<PipelineDescriptionArgs> pipelineDescription;
        private @Nullable Input<String> project;
        private @Nullable Input<String> replaceJobId;
        private @Nullable Input<String> replacedByJobId;
        private @Nullable Input<JobRequestedState> requestedState;
        private @Nullable Input<Boolean> satisfiesPzs;
        private @Nullable Input<List<ExecutionStageStateArgs>> stageStates;
        private @Nullable Input<String> startTime;
        private @Nullable Input<List<StepArgs>> steps;
        private @Nullable Input<String> stepsLocation;
        private @Nullable Input<List<String>> tempFiles;
        private @Nullable Input<Map<String,String>> transformNameMapping;
        private @Nullable Input<JobType> type;
        private @Nullable Input<String> view;

        public Builder() {
    	      // Empty
        }

        public Builder(JobArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientRequestId = defaults.clientRequestId;
    	      this.createTime = defaults.createTime;
    	      this.createdFromSnapshotId = defaults.createdFromSnapshotId;
    	      this.currentState = defaults.currentState;
    	      this.currentStateTime = defaults.currentStateTime;
    	      this.environment = defaults.environment;
    	      this.id = defaults.id;
    	      this.jobMetadata = defaults.jobMetadata;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.pipelineDescription = defaults.pipelineDescription;
    	      this.project = defaults.project;
    	      this.replaceJobId = defaults.replaceJobId;
    	      this.replacedByJobId = defaults.replacedByJobId;
    	      this.requestedState = defaults.requestedState;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.stageStates = defaults.stageStates;
    	      this.startTime = defaults.startTime;
    	      this.steps = defaults.steps;
    	      this.stepsLocation = defaults.stepsLocation;
    	      this.tempFiles = defaults.tempFiles;
    	      this.transformNameMapping = defaults.transformNameMapping;
    	      this.type = defaults.type;
    	      this.view = defaults.view;
        }

        public Builder setClientRequestId(@Nullable Input<String> clientRequestId) {
            this.clientRequestId = clientRequestId;
            return this;
        }

        public Builder setClientRequestId(@Nullable String clientRequestId) {
            this.clientRequestId = Input.ofNullable(clientRequestId);
            return this;
        }

        public Builder setCreateTime(@Nullable Input<String> createTime) {
            this.createTime = createTime;
            return this;
        }

        public Builder setCreateTime(@Nullable String createTime) {
            this.createTime = Input.ofNullable(createTime);
            return this;
        }

        public Builder setCreatedFromSnapshotId(@Nullable Input<String> createdFromSnapshotId) {
            this.createdFromSnapshotId = createdFromSnapshotId;
            return this;
        }

        public Builder setCreatedFromSnapshotId(@Nullable String createdFromSnapshotId) {
            this.createdFromSnapshotId = Input.ofNullable(createdFromSnapshotId);
            return this;
        }

        public Builder setCurrentState(@Nullable Input<JobCurrentState> currentState) {
            this.currentState = currentState;
            return this;
        }

        public Builder setCurrentState(@Nullable JobCurrentState currentState) {
            this.currentState = Input.ofNullable(currentState);
            return this;
        }

        public Builder setCurrentStateTime(@Nullable Input<String> currentStateTime) {
            this.currentStateTime = currentStateTime;
            return this;
        }

        public Builder setCurrentStateTime(@Nullable String currentStateTime) {
            this.currentStateTime = Input.ofNullable(currentStateTime);
            return this;
        }

        public Builder setEnvironment(@Nullable Input<EnvironmentArgs> environment) {
            this.environment = environment;
            return this;
        }

        public Builder setEnvironment(@Nullable EnvironmentArgs environment) {
            this.environment = Input.ofNullable(environment);
            return this;
        }

        public Builder setId(@Nullable Input<String> id) {
            this.id = id;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = Input.ofNullable(id);
            return this;
        }

        public Builder setJobMetadata(@Nullable Input<JobMetadataArgs> jobMetadata) {
            this.jobMetadata = jobMetadata;
            return this;
        }

        public Builder setJobMetadata(@Nullable JobMetadataArgs jobMetadata) {
            this.jobMetadata = Input.ofNullable(jobMetadata);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPipelineDescription(@Nullable Input<PipelineDescriptionArgs> pipelineDescription) {
            this.pipelineDescription = pipelineDescription;
            return this;
        }

        public Builder setPipelineDescription(@Nullable PipelineDescriptionArgs pipelineDescription) {
            this.pipelineDescription = Input.ofNullable(pipelineDescription);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setReplaceJobId(@Nullable Input<String> replaceJobId) {
            this.replaceJobId = replaceJobId;
            return this;
        }

        public Builder setReplaceJobId(@Nullable String replaceJobId) {
            this.replaceJobId = Input.ofNullable(replaceJobId);
            return this;
        }

        public Builder setReplacedByJobId(@Nullable Input<String> replacedByJobId) {
            this.replacedByJobId = replacedByJobId;
            return this;
        }

        public Builder setReplacedByJobId(@Nullable String replacedByJobId) {
            this.replacedByJobId = Input.ofNullable(replacedByJobId);
            return this;
        }

        public Builder setRequestedState(@Nullable Input<JobRequestedState> requestedState) {
            this.requestedState = requestedState;
            return this;
        }

        public Builder setRequestedState(@Nullable JobRequestedState requestedState) {
            this.requestedState = Input.ofNullable(requestedState);
            return this;
        }

        public Builder setSatisfiesPzs(@Nullable Input<Boolean> satisfiesPzs) {
            this.satisfiesPzs = satisfiesPzs;
            return this;
        }

        public Builder setSatisfiesPzs(@Nullable Boolean satisfiesPzs) {
            this.satisfiesPzs = Input.ofNullable(satisfiesPzs);
            return this;
        }

        public Builder setStageStates(@Nullable Input<List<ExecutionStageStateArgs>> stageStates) {
            this.stageStates = stageStates;
            return this;
        }

        public Builder setStageStates(@Nullable List<ExecutionStageStateArgs> stageStates) {
            this.stageStates = Input.ofNullable(stageStates);
            return this;
        }

        public Builder setStartTime(@Nullable Input<String> startTime) {
            this.startTime = startTime;
            return this;
        }

        public Builder setStartTime(@Nullable String startTime) {
            this.startTime = Input.ofNullable(startTime);
            return this;
        }

        public Builder setSteps(@Nullable Input<List<StepArgs>> steps) {
            this.steps = steps;
            return this;
        }

        public Builder setSteps(@Nullable List<StepArgs> steps) {
            this.steps = Input.ofNullable(steps);
            return this;
        }

        public Builder setStepsLocation(@Nullable Input<String> stepsLocation) {
            this.stepsLocation = stepsLocation;
            return this;
        }

        public Builder setStepsLocation(@Nullable String stepsLocation) {
            this.stepsLocation = Input.ofNullable(stepsLocation);
            return this;
        }

        public Builder setTempFiles(@Nullable Input<List<String>> tempFiles) {
            this.tempFiles = tempFiles;
            return this;
        }

        public Builder setTempFiles(@Nullable List<String> tempFiles) {
            this.tempFiles = Input.ofNullable(tempFiles);
            return this;
        }

        public Builder setTransformNameMapping(@Nullable Input<Map<String,String>> transformNameMapping) {
            this.transformNameMapping = transformNameMapping;
            return this;
        }

        public Builder setTransformNameMapping(@Nullable Map<String,String> transformNameMapping) {
            this.transformNameMapping = Input.ofNullable(transformNameMapping);
            return this;
        }

        public Builder setType(@Nullable Input<JobType> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable JobType type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public Builder setView(@Nullable Input<String> view) {
            this.view = view;
            return this;
        }

        public Builder setView(@Nullable String view) {
            this.view = Input.ofNullable(view);
            return this;
        }

        public JobArgs build() {
            return new JobArgs(clientRequestId, createTime, createdFromSnapshotId, currentState, currentStateTime, environment, id, jobMetadata, labels, location, name, pipelineDescription, project, replaceJobId, replacedByJobId, requestedState, satisfiesPzs, stageStates, startTime, steps, stepsLocation, tempFiles, transformNameMapping, type, view);
        }
    }
}
