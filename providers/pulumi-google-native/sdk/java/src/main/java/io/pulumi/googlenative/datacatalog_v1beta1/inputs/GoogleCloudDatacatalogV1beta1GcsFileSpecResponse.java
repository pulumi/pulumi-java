// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datacatalog_v1beta1.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.datacatalog_v1beta1.inputs.GoogleCloudDatacatalogV1beta1SystemTimestampsResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Specifications of a single file in Cloud Storage.
 * 
 */
public final class GoogleCloudDatacatalogV1beta1GcsFileSpecResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDatacatalogV1beta1GcsFileSpecResponse Empty = new GoogleCloudDatacatalogV1beta1GcsFileSpecResponse();

    /**
     * The full file path. Example: `gs://bucket_name/a/b.txt`.
     * 
     */
    @InputImport(name="filePath", required=true)
      private final String filePath;

    public String getFilePath() {
        return this.filePath;
    }

    /**
     * Timestamps about the Cloud Storage file.
     * 
     */
    @InputImport(name="gcsTimestamps", required=true)
      private final GoogleCloudDatacatalogV1beta1SystemTimestampsResponse gcsTimestamps;

    public GoogleCloudDatacatalogV1beta1SystemTimestampsResponse getGcsTimestamps() {
        return this.gcsTimestamps;
    }

    /**
     * The size of the file, in bytes.
     * 
     */
    @InputImport(name="sizeBytes", required=true)
      private final String sizeBytes;

    public String getSizeBytes() {
        return this.sizeBytes;
    }

    public GoogleCloudDatacatalogV1beta1GcsFileSpecResponse(
        String filePath,
        GoogleCloudDatacatalogV1beta1SystemTimestampsResponse gcsTimestamps,
        String sizeBytes) {
        this.filePath = Objects.requireNonNull(filePath, "expected parameter 'filePath' to be non-null");
        this.gcsTimestamps = Objects.requireNonNull(gcsTimestamps, "expected parameter 'gcsTimestamps' to be non-null");
        this.sizeBytes = Objects.requireNonNull(sizeBytes, "expected parameter 'sizeBytes' to be non-null");
    }

    private GoogleCloudDatacatalogV1beta1GcsFileSpecResponse() {
        this.filePath = null;
        this.gcsTimestamps = null;
        this.sizeBytes = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDatacatalogV1beta1GcsFileSpecResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String filePath;
        private GoogleCloudDatacatalogV1beta1SystemTimestampsResponse gcsTimestamps;
        private String sizeBytes;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDatacatalogV1beta1GcsFileSpecResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filePath = defaults.filePath;
    	      this.gcsTimestamps = defaults.gcsTimestamps;
    	      this.sizeBytes = defaults.sizeBytes;
        }

        public Builder setFilePath(String filePath) {
            this.filePath = Objects.requireNonNull(filePath);
            return this;
        }

        public Builder setGcsTimestamps(GoogleCloudDatacatalogV1beta1SystemTimestampsResponse gcsTimestamps) {
            this.gcsTimestamps = Objects.requireNonNull(gcsTimestamps);
            return this;
        }

        public Builder setSizeBytes(String sizeBytes) {
            this.sizeBytes = Objects.requireNonNull(sizeBytes);
            return this;
        }
        public GoogleCloudDatacatalogV1beta1GcsFileSpecResponse build() {
            return new GoogleCloudDatacatalogV1beta1GcsFileSpecResponse(filePath, gcsTimestamps, sizeBytes);
        }
    }
}
