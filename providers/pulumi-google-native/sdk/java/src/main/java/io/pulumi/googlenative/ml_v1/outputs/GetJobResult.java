// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.ml_v1.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.googlenative.ml_v1.outputs.GoogleCloudMlV1__PredictionInputResponse;
import io.pulumi.googlenative.ml_v1.outputs.GoogleCloudMlV1__PredictionOutputResponse;
import io.pulumi.googlenative.ml_v1.outputs.GoogleCloudMlV1__TrainingInputResponse;
import io.pulumi.googlenative.ml_v1.outputs.GoogleCloudMlV1__TrainingOutputResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetJobResult {
    /**
     * When the job was created.
     * 
     */
    private final String createTime;
    /**
     * When the job processing was completed.
     * 
     */
    private final String endTime;
    /**
     * The details of a failure or a cancellation.
     * 
     */
    private final String errorMessage;
    /**
     * `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a job from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform job updates in order to avoid race conditions: An `etag` is returned in the response to `GetJob`, and systems are expected to put that etag in the request to `UpdateJob` to ensure that their change will be applied to the same version of the job.
     * 
     */
    private final String etag;
    /**
     * The user-specified id of the job.
     * 
     */
    private final String jobId;
    /**
     * It's only effect when the job is in QUEUED state. If it's positive, it indicates the job's position in the job scheduler. It's 0 when the job is already scheduled.
     * 
     */
    private final String jobPosition;
    /**
     * Optional. One or more labels that you can add, to organize your jobs. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels.
     * 
     */
    private final Map<String,String> labels;
    /**
     * Input parameters to create a prediction job.
     * 
     */
    private final GoogleCloudMlV1__PredictionInputResponse predictionInput;
    /**
     * The current prediction job result.
     * 
     */
    private final GoogleCloudMlV1__PredictionOutputResponse predictionOutput;
    /**
     * When the job processing was started.
     * 
     */
    private final String startTime;
    /**
     * The detailed state of a job.
     * 
     */
    private final String state;
    /**
     * Input parameters to create a training job.
     * 
     */
    private final GoogleCloudMlV1__TrainingInputResponse trainingInput;
    /**
     * The current training job result.
     * 
     */
    private final GoogleCloudMlV1__TrainingOutputResponse trainingOutput;

    @CustomType.Constructor
    private GetJobResult(
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("endTime") String endTime,
        @CustomType.Parameter("errorMessage") String errorMessage,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("jobId") String jobId,
        @CustomType.Parameter("jobPosition") String jobPosition,
        @CustomType.Parameter("labels") Map<String,String> labels,
        @CustomType.Parameter("predictionInput") GoogleCloudMlV1__PredictionInputResponse predictionInput,
        @CustomType.Parameter("predictionOutput") GoogleCloudMlV1__PredictionOutputResponse predictionOutput,
        @CustomType.Parameter("startTime") String startTime,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("trainingInput") GoogleCloudMlV1__TrainingInputResponse trainingInput,
        @CustomType.Parameter("trainingOutput") GoogleCloudMlV1__TrainingOutputResponse trainingOutput) {
        this.createTime = createTime;
        this.endTime = endTime;
        this.errorMessage = errorMessage;
        this.etag = etag;
        this.jobId = jobId;
        this.jobPosition = jobPosition;
        this.labels = labels;
        this.predictionInput = predictionInput;
        this.predictionOutput = predictionOutput;
        this.startTime = startTime;
        this.state = state;
        this.trainingInput = trainingInput;
        this.trainingOutput = trainingOutput;
    }

    /**
     * When the job was created.
     * 
    */
    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * When the job processing was completed.
     * 
    */
    public String getEndTime() {
        return this.endTime;
    }
    /**
     * The details of a failure or a cancellation.
     * 
    */
    public String getErrorMessage() {
        return this.errorMessage;
    }
    /**
     * `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a job from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform job updates in order to avoid race conditions: An `etag` is returned in the response to `GetJob`, and systems are expected to put that etag in the request to `UpdateJob` to ensure that their change will be applied to the same version of the job.
     * 
    */
    public String getEtag() {
        return this.etag;
    }
    /**
     * The user-specified id of the job.
     * 
    */
    public String getJobId() {
        return this.jobId;
    }
    /**
     * It's only effect when the job is in QUEUED state. If it's positive, it indicates the job's position in the job scheduler. It's 0 when the job is already scheduled.
     * 
    */
    public String getJobPosition() {
        return this.jobPosition;
    }
    /**
     * Optional. One or more labels that you can add, to organize your jobs. Each label is a key-value pair, where both the key and the value are arbitrary strings that you supply. For more information, see the documentation on using labels.
     * 
    */
    public Map<String,String> getLabels() {
        return this.labels;
    }
    /**
     * Input parameters to create a prediction job.
     * 
    */
    public GoogleCloudMlV1__PredictionInputResponse getPredictionInput() {
        return this.predictionInput;
    }
    /**
     * The current prediction job result.
     * 
    */
    public GoogleCloudMlV1__PredictionOutputResponse getPredictionOutput() {
        return this.predictionOutput;
    }
    /**
     * When the job processing was started.
     * 
    */
    public String getStartTime() {
        return this.startTime;
    }
    /**
     * The detailed state of a job.
     * 
    */
    public String getState() {
        return this.state;
    }
    /**
     * Input parameters to create a training job.
     * 
    */
    public GoogleCloudMlV1__TrainingInputResponse getTrainingInput() {
        return this.trainingInput;
    }
    /**
     * The current training job result.
     * 
    */
    public GoogleCloudMlV1__TrainingOutputResponse getTrainingOutput() {
        return this.trainingOutput;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String endTime;
        private String errorMessage;
        private String etag;
        private String jobId;
        private String jobPosition;
        private Map<String,String> labels;
        private GoogleCloudMlV1__PredictionInputResponse predictionInput;
        private GoogleCloudMlV1__PredictionOutputResponse predictionOutput;
        private String startTime;
        private String state;
        private GoogleCloudMlV1__TrainingInputResponse trainingInput;
        private GoogleCloudMlV1__TrainingOutputResponse trainingOutput;

        public Builder() {
    	      // Empty
        }

        public Builder(GetJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.endTime = defaults.endTime;
    	      this.errorMessage = defaults.errorMessage;
    	      this.etag = defaults.etag;
    	      this.jobId = defaults.jobId;
    	      this.jobPosition = defaults.jobPosition;
    	      this.labels = defaults.labels;
    	      this.predictionInput = defaults.predictionInput;
    	      this.predictionOutput = defaults.predictionOutput;
    	      this.startTime = defaults.startTime;
    	      this.state = defaults.state;
    	      this.trainingInput = defaults.trainingInput;
    	      this.trainingOutput = defaults.trainingOutput;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        public Builder errorMessage(String errorMessage) {
            this.errorMessage = Objects.requireNonNull(errorMessage);
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder jobId(String jobId) {
            this.jobId = Objects.requireNonNull(jobId);
            return this;
        }
        public Builder jobPosition(String jobPosition) {
            this.jobPosition = Objects.requireNonNull(jobPosition);
            return this;
        }
        public Builder labels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder predictionInput(GoogleCloudMlV1__PredictionInputResponse predictionInput) {
            this.predictionInput = Objects.requireNonNull(predictionInput);
            return this;
        }
        public Builder predictionOutput(GoogleCloudMlV1__PredictionOutputResponse predictionOutput) {
            this.predictionOutput = Objects.requireNonNull(predictionOutput);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder trainingInput(GoogleCloudMlV1__TrainingInputResponse trainingInput) {
            this.trainingInput = Objects.requireNonNull(trainingInput);
            return this;
        }
        public Builder trainingOutput(GoogleCloudMlV1__TrainingOutputResponse trainingOutput) {
            this.trainingOutput = Objects.requireNonNull(trainingOutput);
            return this;
        }        public GetJobResult build() {
            return new GetJobResult(createTime, endTime, errorMessage, etag, jobId, jobPosition, labels, predictionInput, predictionOutput, startTime, state, trainingInput, trainingOutput);
        }
    }
}
