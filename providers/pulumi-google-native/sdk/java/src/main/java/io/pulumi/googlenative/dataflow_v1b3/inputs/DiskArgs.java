// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataflow_v1b3.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DiskArgs extends io.pulumi.resources.ResourceArgs {

    public static final DiskArgs Empty = new DiskArgs();

    @InputImport(name="diskType")
    private final @Nullable Input<String> diskType;

    public Input<String> getDiskType() {
        return this.diskType == null ? Input.empty() : this.diskType;
    }

    @InputImport(name="mountPoint")
    private final @Nullable Input<String> mountPoint;

    public Input<String> getMountPoint() {
        return this.mountPoint == null ? Input.empty() : this.mountPoint;
    }

    @InputImport(name="sizeGb")
    private final @Nullable Input<Integer> sizeGb;

    public Input<Integer> getSizeGb() {
        return this.sizeGb == null ? Input.empty() : this.sizeGb;
    }

    public DiskArgs(
        @Nullable Input<String> diskType,
        @Nullable Input<String> mountPoint,
        @Nullable Input<Integer> sizeGb) {
        this.diskType = diskType;
        this.mountPoint = mountPoint;
        this.sizeGb = sizeGb;
    }

    private DiskArgs() {
        this.diskType = Input.empty();
        this.mountPoint = Input.empty();
        this.sizeGb = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> diskType;
        private @Nullable Input<String> mountPoint;
        private @Nullable Input<Integer> sizeGb;

        public Builder() {
    	      // Empty
        }

        public Builder(DiskArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.diskType = defaults.diskType;
    	      this.mountPoint = defaults.mountPoint;
    	      this.sizeGb = defaults.sizeGb;
        }

        public Builder setDiskType(@Nullable Input<String> diskType) {
            this.diskType = diskType;
            return this;
        }

        public Builder setDiskType(@Nullable String diskType) {
            this.diskType = Input.ofNullable(diskType);
            return this;
        }

        public Builder setMountPoint(@Nullable Input<String> mountPoint) {
            this.mountPoint = mountPoint;
            return this;
        }

        public Builder setMountPoint(@Nullable String mountPoint) {
            this.mountPoint = Input.ofNullable(mountPoint);
            return this;
        }

        public Builder setSizeGb(@Nullable Input<Integer> sizeGb) {
            this.sizeGb = sizeGb;
            return this;
        }

        public Builder setSizeGb(@Nullable Integer sizeGb) {
            this.sizeGb = Input.ofNullable(sizeGb);
            return this;
        }

        public DiskArgs build() {
            return new DiskArgs(diskType, mountPoint, sizeGb);
        }
    }
}
