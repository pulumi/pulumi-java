// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class TestDetailsResponse extends io.pulumi.resources.InvokeArgs {

    public static final TestDetailsResponse Empty = new TestDetailsResponse();

    @InputImport(name="errorMessage", required=true)
    private final String errorMessage;

    public String getErrorMessage() {
        return this.errorMessage;
    }

    @InputImport(name="progressMessages", required=true)
    private final List<String> progressMessages;

    public List<String> getProgressMessages() {
        return this.progressMessages;
    }

    public TestDetailsResponse(
        String errorMessage,
        List<String> progressMessages) {
        this.errorMessage = Objects.requireNonNull(errorMessage, "expected parameter 'errorMessage' to be non-null");
        this.progressMessages = Objects.requireNonNull(progressMessages, "expected parameter 'progressMessages' to be non-null");
    }

    private TestDetailsResponse() {
        this.errorMessage = null;
        this.progressMessages = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TestDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String errorMessage;
        private List<String> progressMessages;

        public Builder() {
    	      // Empty
        }

        public Builder(TestDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorMessage = defaults.errorMessage;
    	      this.progressMessages = defaults.progressMessages;
        }

        public Builder setErrorMessage(String errorMessage) {
            this.errorMessage = Objects.requireNonNull(errorMessage);
            return this;
        }

        public Builder setProgressMessages(List<String> progressMessages) {
            this.progressMessages = Objects.requireNonNull(progressMessages);
            return this;
        }

        public TestDetailsResponse build() {
            return new TestDetailsResponse(errorMessage, progressMessages);
        }
    }
}
