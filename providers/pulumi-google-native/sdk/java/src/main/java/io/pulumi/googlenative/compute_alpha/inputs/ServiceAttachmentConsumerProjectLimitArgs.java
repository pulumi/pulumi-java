// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ServiceAttachmentConsumerProjectLimitArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceAttachmentConsumerProjectLimitArgs Empty = new ServiceAttachmentConsumerProjectLimitArgs();

    @InputImport(name="connectionLimit")
    private final @Nullable Input<Integer> connectionLimit;

    public Input<Integer> getConnectionLimit() {
        return this.connectionLimit == null ? Input.empty() : this.connectionLimit;
    }

    @InputImport(name="projectIdOrNum")
    private final @Nullable Input<String> projectIdOrNum;

    public Input<String> getProjectIdOrNum() {
        return this.projectIdOrNum == null ? Input.empty() : this.projectIdOrNum;
    }

    public ServiceAttachmentConsumerProjectLimitArgs(
        @Nullable Input<Integer> connectionLimit,
        @Nullable Input<String> projectIdOrNum) {
        this.connectionLimit = connectionLimit;
        this.projectIdOrNum = projectIdOrNum;
    }

    private ServiceAttachmentConsumerProjectLimitArgs() {
        this.connectionLimit = Input.empty();
        this.projectIdOrNum = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceAttachmentConsumerProjectLimitArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Integer> connectionLimit;
        private @Nullable Input<String> projectIdOrNum;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceAttachmentConsumerProjectLimitArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionLimit = defaults.connectionLimit;
    	      this.projectIdOrNum = defaults.projectIdOrNum;
        }

        public Builder setConnectionLimit(@Nullable Input<Integer> connectionLimit) {
            this.connectionLimit = connectionLimit;
            return this;
        }

        public Builder setConnectionLimit(@Nullable Integer connectionLimit) {
            this.connectionLimit = Input.ofNullable(connectionLimit);
            return this;
        }

        public Builder setProjectIdOrNum(@Nullable Input<String> projectIdOrNum) {
            this.projectIdOrNum = projectIdOrNum;
            return this;
        }

        public Builder setProjectIdOrNum(@Nullable String projectIdOrNum) {
            this.projectIdOrNum = Input.ofNullable(projectIdOrNum);
            return this;
        }

        public ServiceAttachmentConsumerProjectLimitArgs build() {
            return new ServiceAttachmentConsumerProjectLimitArgs(connectionLimit, projectIdOrNum);
        }
    }
}
