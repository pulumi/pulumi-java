// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.ml_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


/**
 * Represents results of a prediction job.
 * 
 */
public final class GoogleCloudMlV1__PredictionOutputResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudMlV1__PredictionOutputResponse Empty = new GoogleCloudMlV1__PredictionOutputResponse();

    /**
     * The number of data instances which resulted in errors.
     * 
     */
    @InputImport(name="errorCount", required=true)
      private final String errorCount;

    public String getErrorCount() {
        return this.errorCount;
    }

    /**
     * Node hours used by the batch prediction job.
     * 
     */
    @InputImport(name="nodeHours", required=true)
      private final Double nodeHours;

    public Double getNodeHours() {
        return this.nodeHours;
    }

    /**
     * The output Google Cloud Storage location provided at the job creation time.
     * 
     */
    @InputImport(name="outputPath", required=true)
      private final String outputPath;

    public String getOutputPath() {
        return this.outputPath;
    }

    /**
     * The number of generated predictions.
     * 
     */
    @InputImport(name="predictionCount", required=true)
      private final String predictionCount;

    public String getPredictionCount() {
        return this.predictionCount;
    }

    public GoogleCloudMlV1__PredictionOutputResponse(
        String errorCount,
        Double nodeHours,
        String outputPath,
        String predictionCount) {
        this.errorCount = Objects.requireNonNull(errorCount, "expected parameter 'errorCount' to be non-null");
        this.nodeHours = Objects.requireNonNull(nodeHours, "expected parameter 'nodeHours' to be non-null");
        this.outputPath = Objects.requireNonNull(outputPath, "expected parameter 'outputPath' to be non-null");
        this.predictionCount = Objects.requireNonNull(predictionCount, "expected parameter 'predictionCount' to be non-null");
    }

    private GoogleCloudMlV1__PredictionOutputResponse() {
        this.errorCount = null;
        this.nodeHours = null;
        this.outputPath = null;
        this.predictionCount = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudMlV1__PredictionOutputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String errorCount;
        private Double nodeHours;
        private String outputPath;
        private String predictionCount;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudMlV1__PredictionOutputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.errorCount = defaults.errorCount;
    	      this.nodeHours = defaults.nodeHours;
    	      this.outputPath = defaults.outputPath;
    	      this.predictionCount = defaults.predictionCount;
        }

        public Builder setErrorCount(String errorCount) {
            this.errorCount = Objects.requireNonNull(errorCount);
            return this;
        }

        public Builder setNodeHours(Double nodeHours) {
            this.nodeHours = Objects.requireNonNull(nodeHours);
            return this;
        }

        public Builder setOutputPath(String outputPath) {
            this.outputPath = Objects.requireNonNull(outputPath);
            return this;
        }

        public Builder setPredictionCount(String predictionCount) {
            this.predictionCount = Objects.requireNonNull(predictionCount);
            return this;
        }
        public GoogleCloudMlV1__PredictionOutputResponse build() {
            return new GoogleCloudMlV1__PredictionOutputResponse(errorCount, nodeHours, outputPath, predictionCount);
        }
    }
}
