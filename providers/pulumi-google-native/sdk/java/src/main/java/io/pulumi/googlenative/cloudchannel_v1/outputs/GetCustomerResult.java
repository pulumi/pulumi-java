// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudchannel_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.cloudchannel_v1.outputs.GoogleCloudChannelV1CloudIdentityInfoResponse;
import io.pulumi.googlenative.cloudchannel_v1.outputs.GoogleCloudChannelV1ContactInfoResponse;
import io.pulumi.googlenative.cloudchannel_v1.outputs.GoogleTypePostalAddressResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetCustomerResult {
    /**
     * Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
     * 
     */
    private final String alternateEmail;
    /**
     * Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer.
     * 
     */
    private final String channelPartnerId;
    /**
     * The customer's Cloud Identity ID if the customer has a Cloud Identity resource.
     * 
     */
    private final String cloudIdentityId;
    /**
     * Cloud Identity information for the customer. Populated only if a Cloud Identity account exists for this customer.
     * 
     */
    private final GoogleCloudChannelV1CloudIdentityInfoResponse cloudIdentityInfo;
    /**
     * Time when the customer was created.
     * 
     */
    private final String createTime;
    /**
     * The customer's primary domain. Must match the primary contact email's domain.
     * 
     */
    private final String domain;
    /**
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * 
     */
    private final String languageCode;
    /**
     * Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
     * 
     */
    private final String name;
    /**
     * Name of the organization that the customer entity represents.
     * 
     */
    private final String orgDisplayName;
    /**
     * The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer's language, use the Customer-level language code.
     * 
     */
    private final GoogleTypePostalAddressResponse orgPostalAddress;
    /**
     * Primary contact info.
     * 
     */
    private final GoogleCloudChannelV1ContactInfoResponse primaryContactInfo;
    /**
     * Time when the customer was updated.
     * 
     */
    private final String updateTime;

    @OutputCustomType.Constructor({"alternateEmail","channelPartnerId","cloudIdentityId","cloudIdentityInfo","createTime","domain","languageCode","name","orgDisplayName","orgPostalAddress","primaryContactInfo","updateTime"})
    private GetCustomerResult(
        String alternateEmail,
        String channelPartnerId,
        String cloudIdentityId,
        GoogleCloudChannelV1CloudIdentityInfoResponse cloudIdentityInfo,
        String createTime,
        String domain,
        String languageCode,
        String name,
        String orgDisplayName,
        GoogleTypePostalAddressResponse orgPostalAddress,
        GoogleCloudChannelV1ContactInfoResponse primaryContactInfo,
        String updateTime) {
        this.alternateEmail = Objects.requireNonNull(alternateEmail);
        this.channelPartnerId = Objects.requireNonNull(channelPartnerId);
        this.cloudIdentityId = Objects.requireNonNull(cloudIdentityId);
        this.cloudIdentityInfo = Objects.requireNonNull(cloudIdentityInfo);
        this.createTime = Objects.requireNonNull(createTime);
        this.domain = Objects.requireNonNull(domain);
        this.languageCode = Objects.requireNonNull(languageCode);
        this.name = Objects.requireNonNull(name);
        this.orgDisplayName = Objects.requireNonNull(orgDisplayName);
        this.orgPostalAddress = Objects.requireNonNull(orgPostalAddress);
        this.primaryContactInfo = Objects.requireNonNull(primaryContactInfo);
        this.updateTime = Objects.requireNonNull(updateTime);
    }

    /**
     * Secondary contact email. You need to provide an alternate email to create different domains if a primary contact email already exists. Users will receive a notification with credentials when you create an admin.google.com account. Secondary emails are also recovery email addresses. Alternate emails are optional when you create Team customers.
     * 
     */
    public String getAlternateEmail() {
        return this.alternateEmail;
    }
    /**
     * Cloud Identity ID of the customer's channel partner. Populated only if a channel partner exists for this customer.
     * 
     */
    public String getChannelPartnerId() {
        return this.channelPartnerId;
    }
    /**
     * The customer's Cloud Identity ID if the customer has a Cloud Identity resource.
     * 
     */
    public String getCloudIdentityId() {
        return this.cloudIdentityId;
    }
    /**
     * Cloud Identity information for the customer. Populated only if a Cloud Identity account exists for this customer.
     * 
     */
    public GoogleCloudChannelV1CloudIdentityInfoResponse getCloudIdentityInfo() {
        return this.cloudIdentityInfo;
    }
    /**
     * Time when the customer was created.
     * 
     */
    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * The customer's primary domain. Must match the primary contact email's domain.
     * 
     */
    public String getDomain() {
        return this.domain;
    }
    /**
     * Optional. The BCP-47 language code, such as "en-US" or "sr-Latn". For more information, see https://www.unicode.org/reports/tr35/#Unicode_locale_identifier.
     * 
     */
    public String getLanguageCode() {
        return this.languageCode;
    }
    /**
     * Resource name of the customer. Format: accounts/{account_id}/customers/{customer_id}
     * 
     */
    public String getName() {
        return this.name;
    }
    /**
     * Name of the organization that the customer entity represents.
     * 
     */
    public String getOrgDisplayName() {
        return this.orgDisplayName;
    }
    /**
     * The organization address for the customer. To enforce US laws and embargoes, we require a region and zip code. You must provide valid addresses for every customer. To set the customer's language, use the Customer-level language code.
     * 
     */
    public GoogleTypePostalAddressResponse getOrgPostalAddress() {
        return this.orgPostalAddress;
    }
    /**
     * Primary contact info.
     * 
     */
    public GoogleCloudChannelV1ContactInfoResponse getPrimaryContactInfo() {
        return this.primaryContactInfo;
    }
    /**
     * Time when the customer was updated.
     * 
     */
    public String getUpdateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCustomerResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String alternateEmail;
        private String channelPartnerId;
        private String cloudIdentityId;
        private GoogleCloudChannelV1CloudIdentityInfoResponse cloudIdentityInfo;
        private String createTime;
        private String domain;
        private String languageCode;
        private String name;
        private String orgDisplayName;
        private GoogleTypePostalAddressResponse orgPostalAddress;
        private GoogleCloudChannelV1ContactInfoResponse primaryContactInfo;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCustomerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alternateEmail = defaults.alternateEmail;
    	      this.channelPartnerId = defaults.channelPartnerId;
    	      this.cloudIdentityId = defaults.cloudIdentityId;
    	      this.cloudIdentityInfo = defaults.cloudIdentityInfo;
    	      this.createTime = defaults.createTime;
    	      this.domain = defaults.domain;
    	      this.languageCode = defaults.languageCode;
    	      this.name = defaults.name;
    	      this.orgDisplayName = defaults.orgDisplayName;
    	      this.orgPostalAddress = defaults.orgPostalAddress;
    	      this.primaryContactInfo = defaults.primaryContactInfo;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setAlternateEmail(String alternateEmail) {
            this.alternateEmail = Objects.requireNonNull(alternateEmail);
            return this;
        }

        public Builder setChannelPartnerId(String channelPartnerId) {
            this.channelPartnerId = Objects.requireNonNull(channelPartnerId);
            return this;
        }

        public Builder setCloudIdentityId(String cloudIdentityId) {
            this.cloudIdentityId = Objects.requireNonNull(cloudIdentityId);
            return this;
        }

        public Builder setCloudIdentityInfo(GoogleCloudChannelV1CloudIdentityInfoResponse cloudIdentityInfo) {
            this.cloudIdentityInfo = Objects.requireNonNull(cloudIdentityInfo);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDomain(String domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }

        public Builder setLanguageCode(String languageCode) {
            this.languageCode = Objects.requireNonNull(languageCode);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOrgDisplayName(String orgDisplayName) {
            this.orgDisplayName = Objects.requireNonNull(orgDisplayName);
            return this;
        }

        public Builder setOrgPostalAddress(GoogleTypePostalAddressResponse orgPostalAddress) {
            this.orgPostalAddress = Objects.requireNonNull(orgPostalAddress);
            return this;
        }

        public Builder setPrimaryContactInfo(GoogleCloudChannelV1ContactInfoResponse primaryContactInfo) {
            this.primaryContactInfo = Objects.requireNonNull(primaryContactInfo);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }
        public GetCustomerResult build() {
            return new GetCustomerResult(alternateEmail, channelPartnerId, cloudIdentityId, cloudIdentityInfo, createTime, domain, languageCode, name, orgDisplayName, orgPostalAddress, primaryContactInfo, updateTime);
        }
    }
}
