// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dns_v1beta2.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * Cloud Logging configurations for publicly visible zones.
 * 
 */
public final class ManagedZoneCloudLoggingConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final ManagedZoneCloudLoggingConfigResponse Empty = new ManagedZoneCloudLoggingConfigResponse();

    /**
     * If set, enable query logging for this ManagedZone. False by default, making logging opt-in.
     * 
     */
    @Import(name="enableLogging", required=true)
      private final Boolean enableLogging;

    public Boolean getEnableLogging() {
        return this.enableLogging;
    }

    @Import(name="kind", required=true)
      private final String kind;

    public String getKind() {
        return this.kind;
    }

    public ManagedZoneCloudLoggingConfigResponse(
        Boolean enableLogging,
        String kind) {
        this.enableLogging = Objects.requireNonNull(enableLogging, "expected parameter 'enableLogging' to be non-null");
        this.kind = Objects.requireNonNull(kind, "expected parameter 'kind' to be non-null");
    }

    private ManagedZoneCloudLoggingConfigResponse() {
        this.enableLogging = null;
        this.kind = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagedZoneCloudLoggingConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean enableLogging;
        private String kind;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagedZoneCloudLoggingConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enableLogging = defaults.enableLogging;
    	      this.kind = defaults.kind;
        }

        public Builder enableLogging(Boolean enableLogging) {
            this.enableLogging = Objects.requireNonNull(enableLogging);
            return this;
        }

        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public ManagedZoneCloudLoggingConfigResponse build() {
            return new ManagedZoneCloudLoggingConfigResponse(enableLogging, kind);
        }
    }
}
