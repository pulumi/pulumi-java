// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.deploymentmanager_v2beta;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.deploymentmanager_v2beta.enums.CompositeTypeStatus;
import io.pulumi.googlenative.deploymentmanager_v2beta.inputs.CompositeTypeLabelEntryArgs;
import io.pulumi.googlenative.deploymentmanager_v2beta.inputs.TemplateContentsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CompositeTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final CompositeTypeArgs Empty = new CompositeTypeArgs();

    /**
     * An optional textual description of the resource; provided by the client when the resource is created.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> getId() {
        return this.id == null ? Output.empty() : this.id;
    }

    /**
     * Map of labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<List<CompositeTypeLabelEntryArgs>> labels;

    public Output<List<CompositeTypeLabelEntryArgs>> getLabels() {
        return this.labels == null ? Output.empty() : this.labels;
    }

    /**
     * Name of the composite type, must follow the expression: `[a-z]([-a-z0-9_.]{0,61}[a-z0-9])?`.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    @Import(name="status")
      private final @Nullable Output<CompositeTypeStatus> status;

    public Output<CompositeTypeStatus> getStatus() {
        return this.status == null ? Output.empty() : this.status;
    }

    /**
     * Files for the template type.
     * 
     */
    @Import(name="templateContents")
      private final @Nullable Output<TemplateContentsArgs> templateContents;

    public Output<TemplateContentsArgs> getTemplateContents() {
        return this.templateContents == null ? Output.empty() : this.templateContents;
    }

    public CompositeTypeArgs(
        @Nullable Output<String> description,
        @Nullable Output<String> id,
        @Nullable Output<List<CompositeTypeLabelEntryArgs>> labels,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<CompositeTypeStatus> status,
        @Nullable Output<TemplateContentsArgs> templateContents) {
        this.description = description;
        this.id = id;
        this.labels = labels;
        this.name = name;
        this.project = project;
        this.status = status;
        this.templateContents = templateContents;
    }

    private CompositeTypeArgs() {
        this.description = Output.empty();
        this.id = Output.empty();
        this.labels = Output.empty();
        this.name = Output.empty();
        this.project = Output.empty();
        this.status = Output.empty();
        this.templateContents = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CompositeTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> id;
        private @Nullable Output<List<CompositeTypeLabelEntryArgs>> labels;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<CompositeTypeStatus> status;
        private @Nullable Output<TemplateContentsArgs> templateContents;

        public Builder() {
    	      // Empty
        }

        public Builder(CompositeTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.status = defaults.status;
    	      this.templateContents = defaults.templateContents;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }

        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }

        public Builder id(@Nullable String id) {
            this.id = Output.ofNullable(id);
            return this;
        }

        public Builder labels(@Nullable Output<List<CompositeTypeLabelEntryArgs>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder labels(@Nullable List<CompositeTypeLabelEntryArgs> labels) {
            this.labels = Output.ofNullable(labels);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder status(@Nullable Output<CompositeTypeStatus> status) {
            this.status = status;
            return this;
        }

        public Builder status(@Nullable CompositeTypeStatus status) {
            this.status = Output.ofNullable(status);
            return this;
        }

        public Builder templateContents(@Nullable Output<TemplateContentsArgs> templateContents) {
            this.templateContents = templateContents;
            return this;
        }

        public Builder templateContents(@Nullable TemplateContentsArgs templateContents) {
            this.templateContents = Output.ofNullable(templateContents);
            return this;
        }
        public CompositeTypeArgs build() {
            return new CompositeTypeArgs(description, id, labels, name, project, status, templateContents);
        }
    }
}
