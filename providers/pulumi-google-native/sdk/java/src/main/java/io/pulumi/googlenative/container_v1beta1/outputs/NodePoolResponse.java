// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.container_v1beta1.outputs.MaxPodsConstraintResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.NodeConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.NodeManagementResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.NodeNetworkConfigResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.NodePoolAutoscalingResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.PlacementPolicyResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.StatusConditionResponse;
import io.pulumi.googlenative.container_v1beta1.outputs.UpgradeSettingsResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class NodePoolResponse {
    private final NodePoolAutoscalingResponse autoscaling;
    private final List<StatusConditionResponse> conditions;
    private final NodeConfigResponse config;
    private final Integer initialNodeCount;
    private final List<String> instanceGroupUrls;
    private final List<String> locations;
    private final NodeManagementResponse management;
    private final MaxPodsConstraintResponse maxPodsConstraint;
    private final String name;
    private final NodeNetworkConfigResponse networkConfig;
    private final PlacementPolicyResponse placementPolicy;
    private final Integer podIpv4CidrSize;
    private final String selfLink;
    private final String status;
    private final UpgradeSettingsResponse upgradeSettings;
    private final String version;

    @OutputCustomType.Constructor({"autoscaling","conditions","config","initialNodeCount","instanceGroupUrls","locations","management","maxPodsConstraint","name","networkConfig","placementPolicy","podIpv4CidrSize","selfLink","status","upgradeSettings","version"})
    private NodePoolResponse(
        NodePoolAutoscalingResponse autoscaling,
        List<StatusConditionResponse> conditions,
        NodeConfigResponse config,
        Integer initialNodeCount,
        List<String> instanceGroupUrls,
        List<String> locations,
        NodeManagementResponse management,
        MaxPodsConstraintResponse maxPodsConstraint,
        String name,
        NodeNetworkConfigResponse networkConfig,
        PlacementPolicyResponse placementPolicy,
        Integer podIpv4CidrSize,
        String selfLink,
        String status,
        UpgradeSettingsResponse upgradeSettings,
        String version) {
        this.autoscaling = Objects.requireNonNull(autoscaling);
        this.conditions = Objects.requireNonNull(conditions);
        this.config = Objects.requireNonNull(config);
        this.initialNodeCount = Objects.requireNonNull(initialNodeCount);
        this.instanceGroupUrls = Objects.requireNonNull(instanceGroupUrls);
        this.locations = Objects.requireNonNull(locations);
        this.management = Objects.requireNonNull(management);
        this.maxPodsConstraint = Objects.requireNonNull(maxPodsConstraint);
        this.name = Objects.requireNonNull(name);
        this.networkConfig = Objects.requireNonNull(networkConfig);
        this.placementPolicy = Objects.requireNonNull(placementPolicy);
        this.podIpv4CidrSize = Objects.requireNonNull(podIpv4CidrSize);
        this.selfLink = Objects.requireNonNull(selfLink);
        this.status = Objects.requireNonNull(status);
        this.upgradeSettings = Objects.requireNonNull(upgradeSettings);
        this.version = Objects.requireNonNull(version);
    }

    public NodePoolAutoscalingResponse getAutoscaling() {
        return this.autoscaling;
    }
    public List<StatusConditionResponse> getConditions() {
        return this.conditions;
    }
    public NodeConfigResponse getConfig() {
        return this.config;
    }
    public Integer getInitialNodeCount() {
        return this.initialNodeCount;
    }
    public List<String> getInstanceGroupUrls() {
        return this.instanceGroupUrls;
    }
    public List<String> getLocations() {
        return this.locations;
    }
    public NodeManagementResponse getManagement() {
        return this.management;
    }
    public MaxPodsConstraintResponse getMaxPodsConstraint() {
        return this.maxPodsConstraint;
    }
    public String getName() {
        return this.name;
    }
    public NodeNetworkConfigResponse getNetworkConfig() {
        return this.networkConfig;
    }
    public PlacementPolicyResponse getPlacementPolicy() {
        return this.placementPolicy;
    }
    public Integer getPodIpv4CidrSize() {
        return this.podIpv4CidrSize;
    }
    public String getSelfLink() {
        return this.selfLink;
    }
    public String getStatus() {
        return this.status;
    }
    public UpgradeSettingsResponse getUpgradeSettings() {
        return this.upgradeSettings;
    }
    public String getVersion() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodePoolResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodePoolAutoscalingResponse autoscaling;
        private List<StatusConditionResponse> conditions;
        private NodeConfigResponse config;
        private Integer initialNodeCount;
        private List<String> instanceGroupUrls;
        private List<String> locations;
        private NodeManagementResponse management;
        private MaxPodsConstraintResponse maxPodsConstraint;
        private String name;
        private NodeNetworkConfigResponse networkConfig;
        private PlacementPolicyResponse placementPolicy;
        private Integer podIpv4CidrSize;
        private String selfLink;
        private String status;
        private UpgradeSettingsResponse upgradeSettings;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(NodePoolResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoscaling = defaults.autoscaling;
    	      this.conditions = defaults.conditions;
    	      this.config = defaults.config;
    	      this.initialNodeCount = defaults.initialNodeCount;
    	      this.instanceGroupUrls = defaults.instanceGroupUrls;
    	      this.locations = defaults.locations;
    	      this.management = defaults.management;
    	      this.maxPodsConstraint = defaults.maxPodsConstraint;
    	      this.name = defaults.name;
    	      this.networkConfig = defaults.networkConfig;
    	      this.placementPolicy = defaults.placementPolicy;
    	      this.podIpv4CidrSize = defaults.podIpv4CidrSize;
    	      this.selfLink = defaults.selfLink;
    	      this.status = defaults.status;
    	      this.upgradeSettings = defaults.upgradeSettings;
    	      this.version = defaults.version;
        }

        public Builder setAutoscaling(NodePoolAutoscalingResponse autoscaling) {
            this.autoscaling = Objects.requireNonNull(autoscaling);
            return this;
        }

        public Builder setConditions(List<StatusConditionResponse> conditions) {
            this.conditions = Objects.requireNonNull(conditions);
            return this;
        }

        public Builder setConfig(NodeConfigResponse config) {
            this.config = Objects.requireNonNull(config);
            return this;
        }

        public Builder setInitialNodeCount(Integer initialNodeCount) {
            this.initialNodeCount = Objects.requireNonNull(initialNodeCount);
            return this;
        }

        public Builder setInstanceGroupUrls(List<String> instanceGroupUrls) {
            this.instanceGroupUrls = Objects.requireNonNull(instanceGroupUrls);
            return this;
        }

        public Builder setLocations(List<String> locations) {
            this.locations = Objects.requireNonNull(locations);
            return this;
        }

        public Builder setManagement(NodeManagementResponse management) {
            this.management = Objects.requireNonNull(management);
            return this;
        }

        public Builder setMaxPodsConstraint(MaxPodsConstraintResponse maxPodsConstraint) {
            this.maxPodsConstraint = Objects.requireNonNull(maxPodsConstraint);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetworkConfig(NodeNetworkConfigResponse networkConfig) {
            this.networkConfig = Objects.requireNonNull(networkConfig);
            return this;
        }

        public Builder setPlacementPolicy(PlacementPolicyResponse placementPolicy) {
            this.placementPolicy = Objects.requireNonNull(placementPolicy);
            return this;
        }

        public Builder setPodIpv4CidrSize(Integer podIpv4CidrSize) {
            this.podIpv4CidrSize = Objects.requireNonNull(podIpv4CidrSize);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setUpgradeSettings(UpgradeSettingsResponse upgradeSettings) {
            this.upgradeSettings = Objects.requireNonNull(upgradeSettings);
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public NodePoolResponse build() {
            return new NodePoolResponse(autoscaling, conditions, config, initialNodeCount, instanceGroupUrls, locations, management, maxPodsConstraint, name, networkConfig, placementPolicy, podIpv4CidrSize, selfLink, status, upgradeSettings, version);
        }
    }
}
