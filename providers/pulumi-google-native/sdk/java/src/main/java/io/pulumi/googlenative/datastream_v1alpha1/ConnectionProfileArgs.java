// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datastream_v1alpha1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.datastream_v1alpha1.inputs.ForwardSshTunnelConnectivityArgs;
import io.pulumi.googlenative.datastream_v1alpha1.inputs.GcsProfileArgs;
import io.pulumi.googlenative.datastream_v1alpha1.inputs.MysqlProfileArgs;
import io.pulumi.googlenative.datastream_v1alpha1.inputs.NoConnectivitySettingsArgs;
import io.pulumi.googlenative.datastream_v1alpha1.inputs.OracleProfileArgs;
import io.pulumi.googlenative.datastream_v1alpha1.inputs.PrivateConnectivityArgs;
import io.pulumi.googlenative.datastream_v1alpha1.inputs.StaticServiceIpConnectivityArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ConnectionProfileArgs extends io.pulumi.resources.ResourceArgs {

    public static final ConnectionProfileArgs Empty = new ConnectionProfileArgs();

    @Import(name="connectionProfileId", required=true)
      private final Output<String> connectionProfileId;

    public Output<String> connectionProfileId() {
        return this.connectionProfileId;
    }

    /**
     * Display name.
     * 
     */
    @Import(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Forward SSH tunnel connectivity.
     * 
     */
    @Import(name="forwardSshConnectivity")
      private final @Nullable Output<ForwardSshTunnelConnectivityArgs> forwardSshConnectivity;

    public Output<ForwardSshTunnelConnectivityArgs> forwardSshConnectivity() {
        return this.forwardSshConnectivity == null ? Codegen.empty() : this.forwardSshConnectivity;
    }

    /**
     * Cloud Storage ConnectionProfile configuration.
     * 
     */
    @Import(name="gcsProfile")
      private final @Nullable Output<GcsProfileArgs> gcsProfile;

    public Output<GcsProfileArgs> gcsProfile() {
        return this.gcsProfile == null ? Codegen.empty() : this.gcsProfile;
    }

    /**
     * Labels.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> labels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * MySQL ConnectionProfile configuration.
     * 
     */
    @Import(name="mysqlProfile")
      private final @Nullable Output<MysqlProfileArgs> mysqlProfile;

    public Output<MysqlProfileArgs> mysqlProfile() {
        return this.mysqlProfile == null ? Codegen.empty() : this.mysqlProfile;
    }

    /**
     * No connectivity option chosen.
     * 
     */
    @Import(name="noConnectivity")
      private final @Nullable Output<NoConnectivitySettingsArgs> noConnectivity;

    public Output<NoConnectivitySettingsArgs> noConnectivity() {
        return this.noConnectivity == null ? Codegen.empty() : this.noConnectivity;
    }

    /**
     * Oracle ConnectionProfile configuration.
     * 
     */
    @Import(name="oracleProfile")
      private final @Nullable Output<OracleProfileArgs> oracleProfile;

    public Output<OracleProfileArgs> oracleProfile() {
        return this.oracleProfile == null ? Codegen.empty() : this.oracleProfile;
    }

    /**
     * Private connectivity.
     * 
     */
    @Import(name="privateConnectivity")
      private final @Nullable Output<PrivateConnectivityArgs> privateConnectivity;

    public Output<PrivateConnectivityArgs> privateConnectivity() {
        return this.privateConnectivity == null ? Codegen.empty() : this.privateConnectivity;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    @Import(name="requestId")
      private final @Nullable Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId == null ? Codegen.empty() : this.requestId;
    }

    /**
     * Static Service IP connectivity.
     * 
     */
    @Import(name="staticServiceIpConnectivity")
      private final @Nullable Output<StaticServiceIpConnectivityArgs> staticServiceIpConnectivity;

    public Output<StaticServiceIpConnectivityArgs> staticServiceIpConnectivity() {
        return this.staticServiceIpConnectivity == null ? Codegen.empty() : this.staticServiceIpConnectivity;
    }

    public ConnectionProfileArgs(
        Output<String> connectionProfileId,
        Output<String> displayName,
        @Nullable Output<ForwardSshTunnelConnectivityArgs> forwardSshConnectivity,
        @Nullable Output<GcsProfileArgs> gcsProfile,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<String> location,
        @Nullable Output<MysqlProfileArgs> mysqlProfile,
        @Nullable Output<NoConnectivitySettingsArgs> noConnectivity,
        @Nullable Output<OracleProfileArgs> oracleProfile,
        @Nullable Output<PrivateConnectivityArgs> privateConnectivity,
        @Nullable Output<String> project,
        @Nullable Output<String> requestId,
        @Nullable Output<StaticServiceIpConnectivityArgs> staticServiceIpConnectivity) {
        this.connectionProfileId = Objects.requireNonNull(connectionProfileId, "expected parameter 'connectionProfileId' to be non-null");
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.forwardSshConnectivity = forwardSshConnectivity;
        this.gcsProfile = gcsProfile;
        this.labels = labels;
        this.location = location;
        this.mysqlProfile = mysqlProfile;
        this.noConnectivity = noConnectivity;
        this.oracleProfile = oracleProfile;
        this.privateConnectivity = privateConnectivity;
        this.project = project;
        this.requestId = requestId;
        this.staticServiceIpConnectivity = staticServiceIpConnectivity;
    }

    private ConnectionProfileArgs() {
        this.connectionProfileId = Codegen.empty();
        this.displayName = Codegen.empty();
        this.forwardSshConnectivity = Codegen.empty();
        this.gcsProfile = Codegen.empty();
        this.labels = Codegen.empty();
        this.location = Codegen.empty();
        this.mysqlProfile = Codegen.empty();
        this.noConnectivity = Codegen.empty();
        this.oracleProfile = Codegen.empty();
        this.privateConnectivity = Codegen.empty();
        this.project = Codegen.empty();
        this.requestId = Codegen.empty();
        this.staticServiceIpConnectivity = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionProfileArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> connectionProfileId;
        private Output<String> displayName;
        private @Nullable Output<ForwardSshTunnelConnectivityArgs> forwardSshConnectivity;
        private @Nullable Output<GcsProfileArgs> gcsProfile;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<String> location;
        private @Nullable Output<MysqlProfileArgs> mysqlProfile;
        private @Nullable Output<NoConnectivitySettingsArgs> noConnectivity;
        private @Nullable Output<OracleProfileArgs> oracleProfile;
        private @Nullable Output<PrivateConnectivityArgs> privateConnectivity;
        private @Nullable Output<String> project;
        private @Nullable Output<String> requestId;
        private @Nullable Output<StaticServiceIpConnectivityArgs> staticServiceIpConnectivity;

        public Builder() {
    	      // Empty
        }

        public Builder(ConnectionProfileArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionProfileId = defaults.connectionProfileId;
    	      this.displayName = defaults.displayName;
    	      this.forwardSshConnectivity = defaults.forwardSshConnectivity;
    	      this.gcsProfile = defaults.gcsProfile;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.mysqlProfile = defaults.mysqlProfile;
    	      this.noConnectivity = defaults.noConnectivity;
    	      this.oracleProfile = defaults.oracleProfile;
    	      this.privateConnectivity = defaults.privateConnectivity;
    	      this.project = defaults.project;
    	      this.requestId = defaults.requestId;
    	      this.staticServiceIpConnectivity = defaults.staticServiceIpConnectivity;
        }

        public Builder connectionProfileId(Output<String> connectionProfileId) {
            this.connectionProfileId = Objects.requireNonNull(connectionProfileId);
            return this;
        }
        public Builder connectionProfileId(String connectionProfileId) {
            this.connectionProfileId = Output.of(Objects.requireNonNull(connectionProfileId));
            return this;
        }
        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }
        public Builder forwardSshConnectivity(@Nullable Output<ForwardSshTunnelConnectivityArgs> forwardSshConnectivity) {
            this.forwardSshConnectivity = forwardSshConnectivity;
            return this;
        }
        public Builder forwardSshConnectivity(@Nullable ForwardSshTunnelConnectivityArgs forwardSshConnectivity) {
            this.forwardSshConnectivity = Codegen.ofNullable(forwardSshConnectivity);
            return this;
        }
        public Builder gcsProfile(@Nullable Output<GcsProfileArgs> gcsProfile) {
            this.gcsProfile = gcsProfile;
            return this;
        }
        public Builder gcsProfile(@Nullable GcsProfileArgs gcsProfile) {
            this.gcsProfile = Codegen.ofNullable(gcsProfile);
            return this;
        }
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder mysqlProfile(@Nullable Output<MysqlProfileArgs> mysqlProfile) {
            this.mysqlProfile = mysqlProfile;
            return this;
        }
        public Builder mysqlProfile(@Nullable MysqlProfileArgs mysqlProfile) {
            this.mysqlProfile = Codegen.ofNullable(mysqlProfile);
            return this;
        }
        public Builder noConnectivity(@Nullable Output<NoConnectivitySettingsArgs> noConnectivity) {
            this.noConnectivity = noConnectivity;
            return this;
        }
        public Builder noConnectivity(@Nullable NoConnectivitySettingsArgs noConnectivity) {
            this.noConnectivity = Codegen.ofNullable(noConnectivity);
            return this;
        }
        public Builder oracleProfile(@Nullable Output<OracleProfileArgs> oracleProfile) {
            this.oracleProfile = oracleProfile;
            return this;
        }
        public Builder oracleProfile(@Nullable OracleProfileArgs oracleProfile) {
            this.oracleProfile = Codegen.ofNullable(oracleProfile);
            return this;
        }
        public Builder privateConnectivity(@Nullable Output<PrivateConnectivityArgs> privateConnectivity) {
            this.privateConnectivity = privateConnectivity;
            return this;
        }
        public Builder privateConnectivity(@Nullable PrivateConnectivityArgs privateConnectivity) {
            this.privateConnectivity = Codegen.ofNullable(privateConnectivity);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder requestId(@Nullable Output<String> requestId) {
            this.requestId = requestId;
            return this;
        }
        public Builder requestId(@Nullable String requestId) {
            this.requestId = Codegen.ofNullable(requestId);
            return this;
        }
        public Builder staticServiceIpConnectivity(@Nullable Output<StaticServiceIpConnectivityArgs> staticServiceIpConnectivity) {
            this.staticServiceIpConnectivity = staticServiceIpConnectivity;
            return this;
        }
        public Builder staticServiceIpConnectivity(@Nullable StaticServiceIpConnectivityArgs staticServiceIpConnectivity) {
            this.staticServiceIpConnectivity = Codegen.ofNullable(staticServiceIpConnectivity);
            return this;
        }        public ConnectionProfileArgs build() {
            return new ConnectionProfileArgs(connectionProfileId, displayName, forwardSshConnectivity, gcsProfile, labels, location, mysqlProfile, noConnectivity, oracleProfile, privateConnectivity, project, requestId, staticServiceIpConnectivity);
        }
    }
}
