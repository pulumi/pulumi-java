// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.run_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.run_v1.inputs.AddressableArgs;
import io.pulumi.googlenative.run_v1.inputs.GoogleCloudRunV1ConditionArgs;
import io.pulumi.googlenative.run_v1.inputs.TrafficTargetArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The current state of the Service. Output only.
 * 
 */
public final class ServiceStatusArgs extends io.pulumi.resources.ResourceArgs {

    public static final ServiceStatusArgs Empty = new ServiceStatusArgs();

    /**
     * From RouteStatus. Similar to url, information on where the service is available on HTTP.
     * 
     */
    @InputImport(name="address")
      private final @Nullable Output<AddressableArgs> address;

    public Output<AddressableArgs> getAddress() {
        return this.address == null ? Output.empty() : this.address;
    }

    /**
     * Conditions communicates information about ongoing/complete reconciliation processes that bring the "spec" inline with the observed state of the world. Service-specific conditions include: * "ConfigurationsReady": true when the underlying Configuration is ready. * "RoutesReady": true when the underlying Route is ready. * "Ready": true when both the underlying Route and Configuration are ready.
     * 
     */
    @InputImport(name="conditions")
      private final @Nullable Output<List<GoogleCloudRunV1ConditionArgs>> conditions;

    public Output<List<GoogleCloudRunV1ConditionArgs>> getConditions() {
        return this.conditions == null ? Output.empty() : this.conditions;
    }

    /**
     * From ConfigurationStatus. LatestCreatedRevisionName is the last revision that was created from this Service's Configuration. It might not be ready yet, for that use LatestReadyRevisionName.
     * 
     */
    @InputImport(name="latestCreatedRevisionName")
      private final @Nullable Output<String> latestCreatedRevisionName;

    public Output<String> getLatestCreatedRevisionName() {
        return this.latestCreatedRevisionName == null ? Output.empty() : this.latestCreatedRevisionName;
    }

    /**
     * From ConfigurationStatus. LatestReadyRevisionName holds the name of the latest Revision stamped out from this Service's Configuration that has had its "Ready" condition become "True".
     * 
     */
    @InputImport(name="latestReadyRevisionName")
      private final @Nullable Output<String> latestReadyRevisionName;

    public Output<String> getLatestReadyRevisionName() {
        return this.latestReadyRevisionName == null ? Output.empty() : this.latestReadyRevisionName;
    }

    /**
     * ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.
     * 
     */
    @InputImport(name="observedGeneration")
      private final @Nullable Output<Integer> observedGeneration;

    public Output<Integer> getObservedGeneration() {
        return this.observedGeneration == null ? Output.empty() : this.observedGeneration;
    }

    /**
     * From RouteStatus. Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed.
     * 
     */
    @InputImport(name="traffic")
      private final @Nullable Output<List<TrafficTargetArgs>> traffic;

    public Output<List<TrafficTargetArgs>> getTraffic() {
        return this.traffic == null ? Output.empty() : this.traffic;
    }

    /**
     * From RouteStatus. URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app
     * 
     */
    @InputImport(name="url")
      private final @Nullable Output<String> url;

    public Output<String> getUrl() {
        return this.url == null ? Output.empty() : this.url;
    }

    public ServiceStatusArgs(
        @Nullable Output<AddressableArgs> address,
        @Nullable Output<List<GoogleCloudRunV1ConditionArgs>> conditions,
        @Nullable Output<String> latestCreatedRevisionName,
        @Nullable Output<String> latestReadyRevisionName,
        @Nullable Output<Integer> observedGeneration,
        @Nullable Output<List<TrafficTargetArgs>> traffic,
        @Nullable Output<String> url) {
        this.address = address;
        this.conditions = conditions;
        this.latestCreatedRevisionName = latestCreatedRevisionName;
        this.latestReadyRevisionName = latestReadyRevisionName;
        this.observedGeneration = observedGeneration;
        this.traffic = traffic;
        this.url = url;
    }

    private ServiceStatusArgs() {
        this.address = Output.empty();
        this.conditions = Output.empty();
        this.latestCreatedRevisionName = Output.empty();
        this.latestReadyRevisionName = Output.empty();
        this.observedGeneration = Output.empty();
        this.traffic = Output.empty();
        this.url = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<AddressableArgs> address;
        private @Nullable Output<List<GoogleCloudRunV1ConditionArgs>> conditions;
        private @Nullable Output<String> latestCreatedRevisionName;
        private @Nullable Output<String> latestReadyRevisionName;
        private @Nullable Output<Integer> observedGeneration;
        private @Nullable Output<List<TrafficTargetArgs>> traffic;
        private @Nullable Output<String> url;

        public Builder() {
    	      // Empty
        }

        public Builder(ServiceStatusArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.conditions = defaults.conditions;
    	      this.latestCreatedRevisionName = defaults.latestCreatedRevisionName;
    	      this.latestReadyRevisionName = defaults.latestReadyRevisionName;
    	      this.observedGeneration = defaults.observedGeneration;
    	      this.traffic = defaults.traffic;
    	      this.url = defaults.url;
        }

        public Builder address(@Nullable Output<AddressableArgs> address) {
            this.address = address;
            return this;
        }

        public Builder address(@Nullable AddressableArgs address) {
            this.address = Output.ofNullable(address);
            return this;
        }

        public Builder conditions(@Nullable Output<List<GoogleCloudRunV1ConditionArgs>> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder conditions(@Nullable List<GoogleCloudRunV1ConditionArgs> conditions) {
            this.conditions = Output.ofNullable(conditions);
            return this;
        }

        public Builder latestCreatedRevisionName(@Nullable Output<String> latestCreatedRevisionName) {
            this.latestCreatedRevisionName = latestCreatedRevisionName;
            return this;
        }

        public Builder latestCreatedRevisionName(@Nullable String latestCreatedRevisionName) {
            this.latestCreatedRevisionName = Output.ofNullable(latestCreatedRevisionName);
            return this;
        }

        public Builder latestReadyRevisionName(@Nullable Output<String> latestReadyRevisionName) {
            this.latestReadyRevisionName = latestReadyRevisionName;
            return this;
        }

        public Builder latestReadyRevisionName(@Nullable String latestReadyRevisionName) {
            this.latestReadyRevisionName = Output.ofNullable(latestReadyRevisionName);
            return this;
        }

        public Builder observedGeneration(@Nullable Output<Integer> observedGeneration) {
            this.observedGeneration = observedGeneration;
            return this;
        }

        public Builder observedGeneration(@Nullable Integer observedGeneration) {
            this.observedGeneration = Output.ofNullable(observedGeneration);
            return this;
        }

        public Builder traffic(@Nullable Output<List<TrafficTargetArgs>> traffic) {
            this.traffic = traffic;
            return this;
        }

        public Builder traffic(@Nullable List<TrafficTargetArgs> traffic) {
            this.traffic = Output.ofNullable(traffic);
            return this;
        }

        public Builder url(@Nullable Output<String> url) {
            this.url = url;
            return this;
        }

        public Builder url(@Nullable String url) {
            this.url = Output.ofNullable(url);
            return this;
        }
        public ServiceStatusArgs build() {
            return new ServiceStatusArgs(address, conditions, latestCreatedRevisionName, latestReadyRevisionName, observedGeneration, traffic, url);
        }
    }
}
