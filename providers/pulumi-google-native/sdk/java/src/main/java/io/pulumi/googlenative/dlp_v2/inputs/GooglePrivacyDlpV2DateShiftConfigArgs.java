// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CryptoKeyArgs;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2FieldIdArgs;
import java.lang.Integer;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Shifts dates by random number of days, with option to be consistent for the same context. See https://cloud.google.com/dlp/docs/concepts-date-shifting to learn more.
 * 
 */
public final class GooglePrivacyDlpV2DateShiftConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2DateShiftConfigArgs Empty = new GooglePrivacyDlpV2DateShiftConfigArgs();

    /**
     * Points to the field that contains the context, for example, an entity id. If set, must also set cryptoKey. If set, shift will be consistent for the given context.
     * 
     */
    @InputImport(name="context")
      private final @Nullable Input<GooglePrivacyDlpV2FieldIdArgs> context;

    public Input<GooglePrivacyDlpV2FieldIdArgs> getContext() {
        return this.context == null ? Input.empty() : this.context;
    }

    /**
     * Causes the shift to be computed based on this key and the context. This results in the same shift for the same context and crypto_key. If set, must also set context. Can only be applied to table items.
     * 
     */
    @InputImport(name="cryptoKey")
      private final @Nullable Input<GooglePrivacyDlpV2CryptoKeyArgs> cryptoKey;

    public Input<GooglePrivacyDlpV2CryptoKeyArgs> getCryptoKey() {
        return this.cryptoKey == null ? Input.empty() : this.cryptoKey;
    }

    /**
     * For example, -5 means shift date to at most 5 days back in the past.
     * 
     */
    @InputImport(name="lowerBoundDays", required=true)
      private final Input<Integer> lowerBoundDays;

    public Input<Integer> getLowerBoundDays() {
        return this.lowerBoundDays;
    }

    /**
     * Range of shift in days. Actual shift will be selected at random within this range (inclusive ends). Negative means shift to earlier in time. Must not be more than 365250 days (1000 years) each direction. For example, 3 means shift date to at most 3 days into the future.
     * 
     */
    @InputImport(name="upperBoundDays", required=true)
      private final Input<Integer> upperBoundDays;

    public Input<Integer> getUpperBoundDays() {
        return this.upperBoundDays;
    }

    public GooglePrivacyDlpV2DateShiftConfigArgs(
        @Nullable Input<GooglePrivacyDlpV2FieldIdArgs> context,
        @Nullable Input<GooglePrivacyDlpV2CryptoKeyArgs> cryptoKey,
        Input<Integer> lowerBoundDays,
        Input<Integer> upperBoundDays) {
        this.context = context;
        this.cryptoKey = cryptoKey;
        this.lowerBoundDays = Objects.requireNonNull(lowerBoundDays, "expected parameter 'lowerBoundDays' to be non-null");
        this.upperBoundDays = Objects.requireNonNull(upperBoundDays, "expected parameter 'upperBoundDays' to be non-null");
    }

    private GooglePrivacyDlpV2DateShiftConfigArgs() {
        this.context = Input.empty();
        this.cryptoKey = Input.empty();
        this.lowerBoundDays = Input.empty();
        this.upperBoundDays = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2DateShiftConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GooglePrivacyDlpV2FieldIdArgs> context;
        private @Nullable Input<GooglePrivacyDlpV2CryptoKeyArgs> cryptoKey;
        private Input<Integer> lowerBoundDays;
        private Input<Integer> upperBoundDays;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2DateShiftConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.context = defaults.context;
    	      this.cryptoKey = defaults.cryptoKey;
    	      this.lowerBoundDays = defaults.lowerBoundDays;
    	      this.upperBoundDays = defaults.upperBoundDays;
        }

        public Builder setContext(@Nullable Input<GooglePrivacyDlpV2FieldIdArgs> context) {
            this.context = context;
            return this;
        }

        public Builder setContext(@Nullable GooglePrivacyDlpV2FieldIdArgs context) {
            this.context = Input.ofNullable(context);
            return this;
        }

        public Builder setCryptoKey(@Nullable Input<GooglePrivacyDlpV2CryptoKeyArgs> cryptoKey) {
            this.cryptoKey = cryptoKey;
            return this;
        }

        public Builder setCryptoKey(@Nullable GooglePrivacyDlpV2CryptoKeyArgs cryptoKey) {
            this.cryptoKey = Input.ofNullable(cryptoKey);
            return this;
        }

        public Builder setLowerBoundDays(Input<Integer> lowerBoundDays) {
            this.lowerBoundDays = Objects.requireNonNull(lowerBoundDays);
            return this;
        }

        public Builder setLowerBoundDays(Integer lowerBoundDays) {
            this.lowerBoundDays = Input.of(Objects.requireNonNull(lowerBoundDays));
            return this;
        }

        public Builder setUpperBoundDays(Input<Integer> upperBoundDays) {
            this.upperBoundDays = Objects.requireNonNull(upperBoundDays);
            return this;
        }

        public Builder setUpperBoundDays(Integer upperBoundDays) {
            this.upperBoundDays = Input.of(Objects.requireNonNull(upperBoundDays));
            return this;
        }
        public GooglePrivacyDlpV2DateShiftConfigArgs build() {
            return new GooglePrivacyDlpV2DateShiftConfigArgs(context, cryptoKey, lowerBoundDays, upperBoundDays);
        }
    }
}
