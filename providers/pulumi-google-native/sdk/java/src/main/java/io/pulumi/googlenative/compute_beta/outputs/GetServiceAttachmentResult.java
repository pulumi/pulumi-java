// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_beta.outputs.ServiceAttachmentConnectedEndpointResponse;
import io.pulumi.googlenative.compute_beta.outputs.ServiceAttachmentConsumerProjectLimitResponse;
import io.pulumi.googlenative.compute_beta.outputs.Uint128Response;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetServiceAttachmentResult {
    private final List<ServiceAttachmentConnectedEndpointResponse> connectedEndpoints;
    private final String connectionPreference;
    private final List<ServiceAttachmentConsumerProjectLimitResponse> consumerAcceptLists;
    private final List<String> consumerRejectLists;
    private final String creationTimestamp;
    private final String description;
    private final List<String> domainNames;
    private final Boolean enableProxyProtocol;
    private final String fingerprint;
    private final String kind;
    private final String name;
    private final List<String> natSubnets;
    private final String producerForwardingRule;
    private final Uint128Response pscServiceAttachmentId;
    private final String region;
    private final String selfLink;
    private final String targetService;

    @OutputCustomType.Constructor({"connectedEndpoints","connectionPreference","consumerAcceptLists","consumerRejectLists","creationTimestamp","description","domainNames","enableProxyProtocol","fingerprint","kind","name","natSubnets","producerForwardingRule","pscServiceAttachmentId","region","selfLink","targetService"})
    private GetServiceAttachmentResult(
        List<ServiceAttachmentConnectedEndpointResponse> connectedEndpoints,
        String connectionPreference,
        List<ServiceAttachmentConsumerProjectLimitResponse> consumerAcceptLists,
        List<String> consumerRejectLists,
        String creationTimestamp,
        String description,
        List<String> domainNames,
        Boolean enableProxyProtocol,
        String fingerprint,
        String kind,
        String name,
        List<String> natSubnets,
        String producerForwardingRule,
        Uint128Response pscServiceAttachmentId,
        String region,
        String selfLink,
        String targetService) {
        this.connectedEndpoints = Objects.requireNonNull(connectedEndpoints);
        this.connectionPreference = Objects.requireNonNull(connectionPreference);
        this.consumerAcceptLists = Objects.requireNonNull(consumerAcceptLists);
        this.consumerRejectLists = Objects.requireNonNull(consumerRejectLists);
        this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
        this.description = Objects.requireNonNull(description);
        this.domainNames = Objects.requireNonNull(domainNames);
        this.enableProxyProtocol = Objects.requireNonNull(enableProxyProtocol);
        this.fingerprint = Objects.requireNonNull(fingerprint);
        this.kind = Objects.requireNonNull(kind);
        this.name = Objects.requireNonNull(name);
        this.natSubnets = Objects.requireNonNull(natSubnets);
        this.producerForwardingRule = Objects.requireNonNull(producerForwardingRule);
        this.pscServiceAttachmentId = Objects.requireNonNull(pscServiceAttachmentId);
        this.region = Objects.requireNonNull(region);
        this.selfLink = Objects.requireNonNull(selfLink);
        this.targetService = Objects.requireNonNull(targetService);
    }

    public List<ServiceAttachmentConnectedEndpointResponse> getConnectedEndpoints() {
        return this.connectedEndpoints;
    }
    public String getConnectionPreference() {
        return this.connectionPreference;
    }
    public List<ServiceAttachmentConsumerProjectLimitResponse> getConsumerAcceptLists() {
        return this.consumerAcceptLists;
    }
    public List<String> getConsumerRejectLists() {
        return this.consumerRejectLists;
    }
    public String getCreationTimestamp() {
        return this.creationTimestamp;
    }
    public String getDescription() {
        return this.description;
    }
    public List<String> getDomainNames() {
        return this.domainNames;
    }
    public Boolean getEnableProxyProtocol() {
        return this.enableProxyProtocol;
    }
    public String getFingerprint() {
        return this.fingerprint;
    }
    public String getKind() {
        return this.kind;
    }
    public String getName() {
        return this.name;
    }
    public List<String> getNatSubnets() {
        return this.natSubnets;
    }
    public String getProducerForwardingRule() {
        return this.producerForwardingRule;
    }
    public Uint128Response getPscServiceAttachmentId() {
        return this.pscServiceAttachmentId;
    }
    public String getRegion() {
        return this.region;
    }
    public String getSelfLink() {
        return this.selfLink;
    }
    public String getTargetService() {
        return this.targetService;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceAttachmentResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<ServiceAttachmentConnectedEndpointResponse> connectedEndpoints;
        private String connectionPreference;
        private List<ServiceAttachmentConsumerProjectLimitResponse> consumerAcceptLists;
        private List<String> consumerRejectLists;
        private String creationTimestamp;
        private String description;
        private List<String> domainNames;
        private Boolean enableProxyProtocol;
        private String fingerprint;
        private String kind;
        private String name;
        private List<String> natSubnets;
        private String producerForwardingRule;
        private Uint128Response pscServiceAttachmentId;
        private String region;
        private String selfLink;
        private String targetService;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceAttachmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectedEndpoints = defaults.connectedEndpoints;
    	      this.connectionPreference = defaults.connectionPreference;
    	      this.consumerAcceptLists = defaults.consumerAcceptLists;
    	      this.consumerRejectLists = defaults.consumerRejectLists;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.description = defaults.description;
    	      this.domainNames = defaults.domainNames;
    	      this.enableProxyProtocol = defaults.enableProxyProtocol;
    	      this.fingerprint = defaults.fingerprint;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.natSubnets = defaults.natSubnets;
    	      this.producerForwardingRule = defaults.producerForwardingRule;
    	      this.pscServiceAttachmentId = defaults.pscServiceAttachmentId;
    	      this.region = defaults.region;
    	      this.selfLink = defaults.selfLink;
    	      this.targetService = defaults.targetService;
        }

        public Builder setConnectedEndpoints(List<ServiceAttachmentConnectedEndpointResponse> connectedEndpoints) {
            this.connectedEndpoints = Objects.requireNonNull(connectedEndpoints);
            return this;
        }

        public Builder setConnectionPreference(String connectionPreference) {
            this.connectionPreference = Objects.requireNonNull(connectionPreference);
            return this;
        }

        public Builder setConsumerAcceptLists(List<ServiceAttachmentConsumerProjectLimitResponse> consumerAcceptLists) {
            this.consumerAcceptLists = Objects.requireNonNull(consumerAcceptLists);
            return this;
        }

        public Builder setConsumerRejectLists(List<String> consumerRejectLists) {
            this.consumerRejectLists = Objects.requireNonNull(consumerRejectLists);
            return this;
        }

        public Builder setCreationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDomainNames(List<String> domainNames) {
            this.domainNames = Objects.requireNonNull(domainNames);
            return this;
        }

        public Builder setEnableProxyProtocol(Boolean enableProxyProtocol) {
            this.enableProxyProtocol = Objects.requireNonNull(enableProxyProtocol);
            return this;
        }

        public Builder setFingerprint(String fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNatSubnets(List<String> natSubnets) {
            this.natSubnets = Objects.requireNonNull(natSubnets);
            return this;
        }

        public Builder setProducerForwardingRule(String producerForwardingRule) {
            this.producerForwardingRule = Objects.requireNonNull(producerForwardingRule);
            return this;
        }

        public Builder setPscServiceAttachmentId(Uint128Response pscServiceAttachmentId) {
            this.pscServiceAttachmentId = Objects.requireNonNull(pscServiceAttachmentId);
            return this;
        }

        public Builder setRegion(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setTargetService(String targetService) {
            this.targetService = Objects.requireNonNull(targetService);
            return this;
        }

        public GetServiceAttachmentResult build() {
            return new GetServiceAttachmentResult(connectedEndpoints, connectionPreference, consumerAcceptLists, consumerRejectLists, creationTimestamp, description, domainNames, enableProxyProtocol, fingerprint, kind, name, natSubnets, producerForwardingRule, pscServiceAttachmentId, region, selfLink, targetService);
        }
    }
}
