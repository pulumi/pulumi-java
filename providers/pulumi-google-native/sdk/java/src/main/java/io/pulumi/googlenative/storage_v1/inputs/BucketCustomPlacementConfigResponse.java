// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.storage_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * The bucket's custom placement configuration for Custom Dual Regions.
 * 
 */
public final class BucketCustomPlacementConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final BucketCustomPlacementConfigResponse Empty = new BucketCustomPlacementConfigResponse();

    /**
     * The list of regional locations in which data is placed.
     * 
     */
    @InputImport(name="dataLocations", required=true)
    private final List<String> dataLocations;

    public List<String> getDataLocations() {
        return this.dataLocations;
    }

    public BucketCustomPlacementConfigResponse(List<String> dataLocations) {
        this.dataLocations = Objects.requireNonNull(dataLocations, "expected parameter 'dataLocations' to be non-null");
    }

    private BucketCustomPlacementConfigResponse() {
        this.dataLocations = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketCustomPlacementConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> dataLocations;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketCustomPlacementConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataLocations = defaults.dataLocations;
        }

        public Builder setDataLocations(List<String> dataLocations) {
            this.dataLocations = Objects.requireNonNull(dataLocations);
            return this;
        }

        public BucketCustomPlacementConfigResponse build() {
            return new BucketCustomPlacementConfigResponse(dataLocations);
        }
    }
}
