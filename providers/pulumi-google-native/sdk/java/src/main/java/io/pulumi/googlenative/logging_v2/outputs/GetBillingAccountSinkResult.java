// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.logging_v2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.logging_v2.outputs.BigQueryOptionsResponse;
import io.pulumi.googlenative.logging_v2.outputs.LogExclusionResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetBillingAccountSinkResult {
    private final BigQueryOptionsResponse bigqueryOptions;
    private final String createTime;
    private final String description;
    private final String destination;
    private final Boolean disabled;
    private final List<LogExclusionResponse> exclusions;
    private final String filter;
    private final Boolean includeChildren;
    private final String name;
    private final String updateTime;
    private final String writerIdentity;

    @OutputCustomType.Constructor({"bigqueryOptions","createTime","description","destination","disabled","exclusions","filter","includeChildren","name","updateTime","writerIdentity"})
    private GetBillingAccountSinkResult(
        BigQueryOptionsResponse bigqueryOptions,
        String createTime,
        String description,
        String destination,
        Boolean disabled,
        List<LogExclusionResponse> exclusions,
        String filter,
        Boolean includeChildren,
        String name,
        String updateTime,
        String writerIdentity) {
        this.bigqueryOptions = Objects.requireNonNull(bigqueryOptions);
        this.createTime = Objects.requireNonNull(createTime);
        this.description = Objects.requireNonNull(description);
        this.destination = Objects.requireNonNull(destination);
        this.disabled = Objects.requireNonNull(disabled);
        this.exclusions = Objects.requireNonNull(exclusions);
        this.filter = Objects.requireNonNull(filter);
        this.includeChildren = Objects.requireNonNull(includeChildren);
        this.name = Objects.requireNonNull(name);
        this.updateTime = Objects.requireNonNull(updateTime);
        this.writerIdentity = Objects.requireNonNull(writerIdentity);
    }

    public BigQueryOptionsResponse getBigqueryOptions() {
        return this.bigqueryOptions;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public String getDescription() {
        return this.description;
    }
    public String getDestination() {
        return this.destination;
    }
    public Boolean getDisabled() {
        return this.disabled;
    }
    public List<LogExclusionResponse> getExclusions() {
        return this.exclusions;
    }
    public String getFilter() {
        return this.filter;
    }
    public Boolean getIncludeChildren() {
        return this.includeChildren;
    }
    public String getName() {
        return this.name;
    }
    public String getUpdateTime() {
        return this.updateTime;
    }
    public String getWriterIdentity() {
        return this.writerIdentity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBillingAccountSinkResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BigQueryOptionsResponse bigqueryOptions;
        private String createTime;
        private String description;
        private String destination;
        private Boolean disabled;
        private List<LogExclusionResponse> exclusions;
        private String filter;
        private Boolean includeChildren;
        private String name;
        private String updateTime;
        private String writerIdentity;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBillingAccountSinkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryOptions = defaults.bigqueryOptions;
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.destination = defaults.destination;
    	      this.disabled = defaults.disabled;
    	      this.exclusions = defaults.exclusions;
    	      this.filter = defaults.filter;
    	      this.includeChildren = defaults.includeChildren;
    	      this.name = defaults.name;
    	      this.updateTime = defaults.updateTime;
    	      this.writerIdentity = defaults.writerIdentity;
        }

        public Builder setBigqueryOptions(BigQueryOptionsResponse bigqueryOptions) {
            this.bigqueryOptions = Objects.requireNonNull(bigqueryOptions);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDestination(String destination) {
            this.destination = Objects.requireNonNull(destination);
            return this;
        }

        public Builder setDisabled(Boolean disabled) {
            this.disabled = Objects.requireNonNull(disabled);
            return this;
        }

        public Builder setExclusions(List<LogExclusionResponse> exclusions) {
            this.exclusions = Objects.requireNonNull(exclusions);
            return this;
        }

        public Builder setFilter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }

        public Builder setIncludeChildren(Boolean includeChildren) {
            this.includeChildren = Objects.requireNonNull(includeChildren);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }

        public Builder setWriterIdentity(String writerIdentity) {
            this.writerIdentity = Objects.requireNonNull(writerIdentity);
            return this;
        }

        public GetBillingAccountSinkResult build() {
            return new GetBillingAccountSinkResult(bigqueryOptions, createTime, description, destination, disabled, exclusions, filter, includeChildren, name, updateTime, writerIdentity);
        }
    }
}
