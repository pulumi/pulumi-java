// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudsupport_v2beta.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


/**
 * An object containing information about the effective user and authenticated principal responsible for an action.
 * 
 */
public final class ActorResponse extends io.pulumi.resources.InvokeArgs {

    public static final ActorResponse Empty = new ActorResponse();

    /**
     * The name to display for the actor. If not provided, it is inferred from credentials supplied during case creation. When an email is provided, a display name must also be provided. This will be obfuscated if the user is a Google Support agent.
     * 
     */
    @InputImport(name="displayName", required=true)
    private final String displayName;

    public String getDisplayName() {
        return this.displayName;
    }

    /**
     * The email address of the actor. If not provided, it is inferred from credentials supplied during case creation. If the authenticated principal does not have an email address, one must be provided. When a name is provided, an email must also be provided. This will be obfuscated if the user is a Google Support agent.
     * 
     */
    @InputImport(name="email", required=true)
    private final String email;

    public String getEmail() {
        return this.email;
    }

    /**
     * Whether the actor is a Google support actor.
     * 
     */
    @InputImport(name="googleSupport", required=true)
    private final Boolean googleSupport;

    public Boolean getGoogleSupport() {
        return this.googleSupport;
    }

    /**
     * An ID representing the user that was authenticated when the corresponding action was taken. This will be an email address, if one is available, or some other unique ID. See https://cloud.google.com/docs/authentication for more information on types of authentication.
     * 
     */
    @InputImport(name="principalId", required=true)
    private final String principalId;

    public String getPrincipalId() {
        return this.principalId;
    }

    public ActorResponse(
        String displayName,
        String email,
        Boolean googleSupport,
        String principalId) {
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.email = Objects.requireNonNull(email, "expected parameter 'email' to be non-null");
        this.googleSupport = Objects.requireNonNull(googleSupport, "expected parameter 'googleSupport' to be non-null");
        this.principalId = Objects.requireNonNull(principalId, "expected parameter 'principalId' to be non-null");
    }

    private ActorResponse() {
        this.displayName = null;
        this.email = null;
        this.googleSupport = null;
        this.principalId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ActorResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String displayName;
        private String email;
        private Boolean googleSupport;
        private String principalId;

        public Builder() {
    	      // Empty
        }

        public Builder(ActorResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.email = defaults.email;
    	      this.googleSupport = defaults.googleSupport;
    	      this.principalId = defaults.principalId;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setEmail(String email) {
            this.email = Objects.requireNonNull(email);
            return this;
        }

        public Builder setGoogleSupport(Boolean googleSupport) {
            this.googleSupport = Objects.requireNonNull(googleSupport);
            return this;
        }

        public Builder setPrincipalId(String principalId) {
            this.principalId = Objects.requireNonNull(principalId);
            return this;
        }

        public ActorResponse build() {
            return new ActorResponse(displayName, email, googleSupport, principalId);
        }
    }
}
