// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.run_v1alpha1.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * ContainerPort represents a network port in a single container.
 * 
 */
public final class ContainerPortResponse extends io.pulumi.resources.InvokeArgs {

    public static final ContainerPortResponse Empty = new ContainerPortResponse();

    /**
     * (Optional) Port number the container listens on. This must be a valid port number, 0 < x < 65536.
     * 
     */
    @Import(name="containerPort", required=true)
      private final Integer containerPort;

    public Integer getContainerPort() {
        return this.containerPort;
    }

    /**
     * (Optional) If specified, used to specify which protocol to use. Allowed values are "http1" and "h2c".
     * 
     */
    @Import(name="name", required=true)
      private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * (Optional) Protocol for port. Must be "TCP". Defaults to "TCP".
     * 
     */
    @Import(name="protocol", required=true)
      private final String protocol;

    public String getProtocol() {
        return this.protocol;
    }

    public ContainerPortResponse(
        Integer containerPort,
        String name,
        String protocol) {
        this.containerPort = Objects.requireNonNull(containerPort, "expected parameter 'containerPort' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.protocol = Objects.requireNonNull(protocol, "expected parameter 'protocol' to be non-null");
    }

    private ContainerPortResponse() {
        this.containerPort = null;
        this.name = null;
        this.protocol = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerPortResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer containerPort;
        private String name;
        private String protocol;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerPortResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerPort = defaults.containerPort;
    	      this.name = defaults.name;
    	      this.protocol = defaults.protocol;
        }

        public Builder containerPort(Integer containerPort) {
            this.containerPort = Objects.requireNonNull(containerPort);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        public ContainerPortResponse build() {
            return new ContainerPortResponse(containerPort, name, protocol);
        }
    }
}
