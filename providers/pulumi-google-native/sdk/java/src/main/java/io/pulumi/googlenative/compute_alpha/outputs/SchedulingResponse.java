// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_alpha.outputs.DurationResponse;
import io.pulumi.googlenative.compute_alpha.outputs.SchedulingNodeAffinityResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class SchedulingResponse {
    private final Boolean automaticRestart;
    private final Integer availabilityDomain;
    private final Integer currentCpus;
    private final String currentMemoryMb;
    private final Integer hostErrorTimeoutSeconds;
    private final String instanceTerminationAction;
    private final Boolean latencyTolerant;
    private final String locationHint;
    private final Integer maintenanceFreezeDurationHours;
    private final String maintenanceInterval;
    private final DurationResponse maxRunDuration;
    private final Integer minNodeCpus;
    private final List<SchedulingNodeAffinityResponse> nodeAffinities;
    private final String onHostMaintenance;
    private final Boolean preemptible;
    private final String provisioningModel;
    private final String terminationTime;

    @OutputCustomType.Constructor({"automaticRestart","availabilityDomain","currentCpus","currentMemoryMb","hostErrorTimeoutSeconds","instanceTerminationAction","latencyTolerant","locationHint","maintenanceFreezeDurationHours","maintenanceInterval","maxRunDuration","minNodeCpus","nodeAffinities","onHostMaintenance","preemptible","provisioningModel","terminationTime"})
    private SchedulingResponse(
        Boolean automaticRestart,
        Integer availabilityDomain,
        Integer currentCpus,
        String currentMemoryMb,
        Integer hostErrorTimeoutSeconds,
        String instanceTerminationAction,
        Boolean latencyTolerant,
        String locationHint,
        Integer maintenanceFreezeDurationHours,
        String maintenanceInterval,
        DurationResponse maxRunDuration,
        Integer minNodeCpus,
        List<SchedulingNodeAffinityResponse> nodeAffinities,
        String onHostMaintenance,
        Boolean preemptible,
        String provisioningModel,
        String terminationTime) {
        this.automaticRestart = Objects.requireNonNull(automaticRestart);
        this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
        this.currentCpus = Objects.requireNonNull(currentCpus);
        this.currentMemoryMb = Objects.requireNonNull(currentMemoryMb);
        this.hostErrorTimeoutSeconds = Objects.requireNonNull(hostErrorTimeoutSeconds);
        this.instanceTerminationAction = Objects.requireNonNull(instanceTerminationAction);
        this.latencyTolerant = Objects.requireNonNull(latencyTolerant);
        this.locationHint = Objects.requireNonNull(locationHint);
        this.maintenanceFreezeDurationHours = Objects.requireNonNull(maintenanceFreezeDurationHours);
        this.maintenanceInterval = Objects.requireNonNull(maintenanceInterval);
        this.maxRunDuration = Objects.requireNonNull(maxRunDuration);
        this.minNodeCpus = Objects.requireNonNull(minNodeCpus);
        this.nodeAffinities = Objects.requireNonNull(nodeAffinities);
        this.onHostMaintenance = Objects.requireNonNull(onHostMaintenance);
        this.preemptible = Objects.requireNonNull(preemptible);
        this.provisioningModel = Objects.requireNonNull(provisioningModel);
        this.terminationTime = Objects.requireNonNull(terminationTime);
    }

    public Boolean getAutomaticRestart() {
        return this.automaticRestart;
    }
    public Integer getAvailabilityDomain() {
        return this.availabilityDomain;
    }
    public Integer getCurrentCpus() {
        return this.currentCpus;
    }
    public String getCurrentMemoryMb() {
        return this.currentMemoryMb;
    }
    public Integer getHostErrorTimeoutSeconds() {
        return this.hostErrorTimeoutSeconds;
    }
    public String getInstanceTerminationAction() {
        return this.instanceTerminationAction;
    }
    public Boolean getLatencyTolerant() {
        return this.latencyTolerant;
    }
    public String getLocationHint() {
        return this.locationHint;
    }
    public Integer getMaintenanceFreezeDurationHours() {
        return this.maintenanceFreezeDurationHours;
    }
    public String getMaintenanceInterval() {
        return this.maintenanceInterval;
    }
    public DurationResponse getMaxRunDuration() {
        return this.maxRunDuration;
    }
    public Integer getMinNodeCpus() {
        return this.minNodeCpus;
    }
    public List<SchedulingNodeAffinityResponse> getNodeAffinities() {
        return this.nodeAffinities;
    }
    public String getOnHostMaintenance() {
        return this.onHostMaintenance;
    }
    public Boolean getPreemptible() {
        return this.preemptible;
    }
    public String getProvisioningModel() {
        return this.provisioningModel;
    }
    public String getTerminationTime() {
        return this.terminationTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SchedulingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean automaticRestart;
        private Integer availabilityDomain;
        private Integer currentCpus;
        private String currentMemoryMb;
        private Integer hostErrorTimeoutSeconds;
        private String instanceTerminationAction;
        private Boolean latencyTolerant;
        private String locationHint;
        private Integer maintenanceFreezeDurationHours;
        private String maintenanceInterval;
        private DurationResponse maxRunDuration;
        private Integer minNodeCpus;
        private List<SchedulingNodeAffinityResponse> nodeAffinities;
        private String onHostMaintenance;
        private Boolean preemptible;
        private String provisioningModel;
        private String terminationTime;

        public Builder() {
    	      // Empty
        }

        public Builder(SchedulingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.automaticRestart = defaults.automaticRestart;
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.currentCpus = defaults.currentCpus;
    	      this.currentMemoryMb = defaults.currentMemoryMb;
    	      this.hostErrorTimeoutSeconds = defaults.hostErrorTimeoutSeconds;
    	      this.instanceTerminationAction = defaults.instanceTerminationAction;
    	      this.latencyTolerant = defaults.latencyTolerant;
    	      this.locationHint = defaults.locationHint;
    	      this.maintenanceFreezeDurationHours = defaults.maintenanceFreezeDurationHours;
    	      this.maintenanceInterval = defaults.maintenanceInterval;
    	      this.maxRunDuration = defaults.maxRunDuration;
    	      this.minNodeCpus = defaults.minNodeCpus;
    	      this.nodeAffinities = defaults.nodeAffinities;
    	      this.onHostMaintenance = defaults.onHostMaintenance;
    	      this.preemptible = defaults.preemptible;
    	      this.provisioningModel = defaults.provisioningModel;
    	      this.terminationTime = defaults.terminationTime;
        }

        public Builder setAutomaticRestart(Boolean automaticRestart) {
            this.automaticRestart = Objects.requireNonNull(automaticRestart);
            return this;
        }

        public Builder setAvailabilityDomain(Integer availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }

        public Builder setCurrentCpus(Integer currentCpus) {
            this.currentCpus = Objects.requireNonNull(currentCpus);
            return this;
        }

        public Builder setCurrentMemoryMb(String currentMemoryMb) {
            this.currentMemoryMb = Objects.requireNonNull(currentMemoryMb);
            return this;
        }

        public Builder setHostErrorTimeoutSeconds(Integer hostErrorTimeoutSeconds) {
            this.hostErrorTimeoutSeconds = Objects.requireNonNull(hostErrorTimeoutSeconds);
            return this;
        }

        public Builder setInstanceTerminationAction(String instanceTerminationAction) {
            this.instanceTerminationAction = Objects.requireNonNull(instanceTerminationAction);
            return this;
        }

        public Builder setLatencyTolerant(Boolean latencyTolerant) {
            this.latencyTolerant = Objects.requireNonNull(latencyTolerant);
            return this;
        }

        public Builder setLocationHint(String locationHint) {
            this.locationHint = Objects.requireNonNull(locationHint);
            return this;
        }

        public Builder setMaintenanceFreezeDurationHours(Integer maintenanceFreezeDurationHours) {
            this.maintenanceFreezeDurationHours = Objects.requireNonNull(maintenanceFreezeDurationHours);
            return this;
        }

        public Builder setMaintenanceInterval(String maintenanceInterval) {
            this.maintenanceInterval = Objects.requireNonNull(maintenanceInterval);
            return this;
        }

        public Builder setMaxRunDuration(DurationResponse maxRunDuration) {
            this.maxRunDuration = Objects.requireNonNull(maxRunDuration);
            return this;
        }

        public Builder setMinNodeCpus(Integer minNodeCpus) {
            this.minNodeCpus = Objects.requireNonNull(minNodeCpus);
            return this;
        }

        public Builder setNodeAffinities(List<SchedulingNodeAffinityResponse> nodeAffinities) {
            this.nodeAffinities = Objects.requireNonNull(nodeAffinities);
            return this;
        }

        public Builder setOnHostMaintenance(String onHostMaintenance) {
            this.onHostMaintenance = Objects.requireNonNull(onHostMaintenance);
            return this;
        }

        public Builder setPreemptible(Boolean preemptible) {
            this.preemptible = Objects.requireNonNull(preemptible);
            return this;
        }

        public Builder setProvisioningModel(String provisioningModel) {
            this.provisioningModel = Objects.requireNonNull(provisioningModel);
            return this;
        }

        public Builder setTerminationTime(String terminationTime) {
            this.terminationTime = Objects.requireNonNull(terminationTime);
            return this;
        }

        public SchedulingResponse build() {
            return new SchedulingResponse(automaticRestart, availabilityDomain, currentCpus, currentMemoryMb, hostErrorTimeoutSeconds, instanceTerminationAction, latencyTolerant, locationHint, maintenanceFreezeDurationHours, maintenanceInterval, maxRunDuration, minNodeCpus, nodeAffinities, onHostMaintenance, preemptible, provisioningModel, terminationTime);
        }
    }
}
