// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2BigQueryOptionsResponse;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2CloudStorageOptionsResponse;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2DatastoreOptionsResponse;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2HybridOptionsResponse;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2TimespanConfigResponse;
import java.util.Objects;

@OutputCustomType
public final class GooglePrivacyDlpV2StorageConfigResponse {
    /**
     * BigQuery options.
     * 
     */
    private final GooglePrivacyDlpV2BigQueryOptionsResponse bigQueryOptions;
    /**
     * Google Cloud Storage options.
     * 
     */
    private final GooglePrivacyDlpV2CloudStorageOptionsResponse cloudStorageOptions;
    /**
     * Google Cloud Datastore options.
     * 
     */
    private final GooglePrivacyDlpV2DatastoreOptionsResponse datastoreOptions;
    /**
     * Hybrid inspection options.
     * 
     */
    private final GooglePrivacyDlpV2HybridOptionsResponse hybridOptions;
    private final GooglePrivacyDlpV2TimespanConfigResponse timespanConfig;

    @OutputCustomType.Constructor({"bigQueryOptions","cloudStorageOptions","datastoreOptions","hybridOptions","timespanConfig"})
    private GooglePrivacyDlpV2StorageConfigResponse(
        GooglePrivacyDlpV2BigQueryOptionsResponse bigQueryOptions,
        GooglePrivacyDlpV2CloudStorageOptionsResponse cloudStorageOptions,
        GooglePrivacyDlpV2DatastoreOptionsResponse datastoreOptions,
        GooglePrivacyDlpV2HybridOptionsResponse hybridOptions,
        GooglePrivacyDlpV2TimespanConfigResponse timespanConfig) {
        this.bigQueryOptions = Objects.requireNonNull(bigQueryOptions);
        this.cloudStorageOptions = Objects.requireNonNull(cloudStorageOptions);
        this.datastoreOptions = Objects.requireNonNull(datastoreOptions);
        this.hybridOptions = Objects.requireNonNull(hybridOptions);
        this.timespanConfig = Objects.requireNonNull(timespanConfig);
    }

    /**
     * BigQuery options.
     * 
     */
    public GooglePrivacyDlpV2BigQueryOptionsResponse getBigQueryOptions() {
        return this.bigQueryOptions;
    }
    /**
     * Google Cloud Storage options.
     * 
     */
    public GooglePrivacyDlpV2CloudStorageOptionsResponse getCloudStorageOptions() {
        return this.cloudStorageOptions;
    }
    /**
     * Google Cloud Datastore options.
     * 
     */
    public GooglePrivacyDlpV2DatastoreOptionsResponse getDatastoreOptions() {
        return this.datastoreOptions;
    }
    /**
     * Hybrid inspection options.
     * 
     */
    public GooglePrivacyDlpV2HybridOptionsResponse getHybridOptions() {
        return this.hybridOptions;
    }
    public GooglePrivacyDlpV2TimespanConfigResponse getTimespanConfig() {
        return this.timespanConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2StorageConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2BigQueryOptionsResponse bigQueryOptions;
        private GooglePrivacyDlpV2CloudStorageOptionsResponse cloudStorageOptions;
        private GooglePrivacyDlpV2DatastoreOptionsResponse datastoreOptions;
        private GooglePrivacyDlpV2HybridOptionsResponse hybridOptions;
        private GooglePrivacyDlpV2TimespanConfigResponse timespanConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2StorageConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigQueryOptions = defaults.bigQueryOptions;
    	      this.cloudStorageOptions = defaults.cloudStorageOptions;
    	      this.datastoreOptions = defaults.datastoreOptions;
    	      this.hybridOptions = defaults.hybridOptions;
    	      this.timespanConfig = defaults.timespanConfig;
        }

        public Builder setBigQueryOptions(GooglePrivacyDlpV2BigQueryOptionsResponse bigQueryOptions) {
            this.bigQueryOptions = Objects.requireNonNull(bigQueryOptions);
            return this;
        }

        public Builder setCloudStorageOptions(GooglePrivacyDlpV2CloudStorageOptionsResponse cloudStorageOptions) {
            this.cloudStorageOptions = Objects.requireNonNull(cloudStorageOptions);
            return this;
        }

        public Builder setDatastoreOptions(GooglePrivacyDlpV2DatastoreOptionsResponse datastoreOptions) {
            this.datastoreOptions = Objects.requireNonNull(datastoreOptions);
            return this;
        }

        public Builder setHybridOptions(GooglePrivacyDlpV2HybridOptionsResponse hybridOptions) {
            this.hybridOptions = Objects.requireNonNull(hybridOptions);
            return this;
        }

        public Builder setTimespanConfig(GooglePrivacyDlpV2TimespanConfigResponse timespanConfig) {
            this.timespanConfig = Objects.requireNonNull(timespanConfig);
            return this;
        }

        public GooglePrivacyDlpV2StorageConfigResponse build() {
            return new GooglePrivacyDlpV2StorageConfigResponse(bigQueryOptions, cloudStorageOptions, datastoreOptions, hybridOptions, timespanConfig);
        }
    }
}
