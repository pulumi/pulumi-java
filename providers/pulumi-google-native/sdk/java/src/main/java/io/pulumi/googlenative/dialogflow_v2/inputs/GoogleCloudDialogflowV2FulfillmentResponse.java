// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v2.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dialogflow_v2.inputs.GoogleCloudDialogflowV2FulfillmentFeatureResponse;
import io.pulumi.googlenative.dialogflow_v2.inputs.GoogleCloudDialogflowV2FulfillmentGenericWebServiceResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * By default, your agent responds to a matched intent with a static response. As an alternative, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday. For more information, see the [fulfillment guide](https://cloud.google.com/dialogflow/docs/fulfillment-overview).
 * 
 */
public final class GoogleCloudDialogflowV2FulfillmentResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudDialogflowV2FulfillmentResponse Empty = new GoogleCloudDialogflowV2FulfillmentResponse();

    /**
     * Optional. The human-readable name of the fulfillment, unique within the agent. This field is not used for Fulfillment in an Environment.
     * 
     */
    @InputImport(name="displayName", required=true)
      private final String displayName;

    public String getDisplayName() {
        return this.displayName;
    }

    /**
     * Optional. Whether fulfillment is enabled.
     * 
     */
    @InputImport(name="enabled", required=true)
      private final Boolean enabled;

    public Boolean getEnabled() {
        return this.enabled;
    }

    /**
     * Optional. The field defines whether the fulfillment is enabled for certain features.
     * 
     */
    @InputImport(name="features", required=true)
      private final List<GoogleCloudDialogflowV2FulfillmentFeatureResponse> features;

    public List<GoogleCloudDialogflowV2FulfillmentFeatureResponse> getFeatures() {
        return this.features;
    }

    /**
     * Configuration for a generic web service.
     * 
     */
    @InputImport(name="genericWebService", required=true)
      private final GoogleCloudDialogflowV2FulfillmentGenericWebServiceResponse genericWebService;

    public GoogleCloudDialogflowV2FulfillmentGenericWebServiceResponse getGenericWebService() {
        return this.genericWebService;
    }

    /**
     * The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for Fulfillment in an Environment.
     * 
     */
    @InputImport(name="name", required=true)
      private final String name;

    public String getName() {
        return this.name;
    }

    public GoogleCloudDialogflowV2FulfillmentResponse(
        String displayName,
        Boolean enabled,
        List<GoogleCloudDialogflowV2FulfillmentFeatureResponse> features,
        GoogleCloudDialogflowV2FulfillmentGenericWebServiceResponse genericWebService,
        String name) {
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.enabled = Objects.requireNonNull(enabled, "expected parameter 'enabled' to be non-null");
        this.features = Objects.requireNonNull(features, "expected parameter 'features' to be non-null");
        this.genericWebService = Objects.requireNonNull(genericWebService, "expected parameter 'genericWebService' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private GoogleCloudDialogflowV2FulfillmentResponse() {
        this.displayName = null;
        this.enabled = null;
        this.features = List.of();
        this.genericWebService = null;
        this.name = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDialogflowV2FulfillmentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String displayName;
        private Boolean enabled;
        private List<GoogleCloudDialogflowV2FulfillmentFeatureResponse> features;
        private GoogleCloudDialogflowV2FulfillmentGenericWebServiceResponse genericWebService;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDialogflowV2FulfillmentResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.enabled = defaults.enabled;
    	      this.features = defaults.features;
    	      this.genericWebService = defaults.genericWebService;
    	      this.name = defaults.name;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setEnabled(Boolean enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }

        public Builder setFeatures(List<GoogleCloudDialogflowV2FulfillmentFeatureResponse> features) {
            this.features = Objects.requireNonNull(features);
            return this;
        }

        public Builder setGenericWebService(GoogleCloudDialogflowV2FulfillmentGenericWebServiceResponse genericWebService) {
            this.genericWebService = Objects.requireNonNull(genericWebService);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public GoogleCloudDialogflowV2FulfillmentResponse build() {
            return new GoogleCloudDialogflowV2FulfillmentResponse(displayName, enabled, features, genericWebService, name);
        }
    }
}
