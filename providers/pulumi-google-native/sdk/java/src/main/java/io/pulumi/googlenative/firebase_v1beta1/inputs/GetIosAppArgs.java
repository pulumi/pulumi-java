// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.firebase_v1beta1.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIosAppArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetIosAppArgs Empty = new GetIosAppArgs();

    @Import(name="iosAppId", required=true)
      private final String iosAppId;

    public String getIosAppId() {
        return this.iosAppId;
    }

    @Import(name="project")
      private final @Nullable String project;

    public Optional<String> getProject() {
        return this.project == null ? Optional.empty() : Optional.ofNullable(this.project);
    }

    public GetIosAppArgs(
        String iosAppId,
        @Nullable String project) {
        this.iosAppId = Objects.requireNonNull(iosAppId, "expected parameter 'iosAppId' to be non-null");
        this.project = project;
    }

    private GetIosAppArgs() {
        this.iosAppId = null;
        this.project = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIosAppArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String iosAppId;
        private @Nullable String project;

        public Builder() {
    	      // Empty
        }

        public Builder(GetIosAppArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.iosAppId = defaults.iosAppId;
    	      this.project = defaults.project;
        }

        public Builder iosAppId(String iosAppId) {
            this.iosAppId = Objects.requireNonNull(iosAppId);
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }        public GetIosAppArgs build() {
            return new GetIosAppArgs(iosAppId, project);
        }
    }
}
