// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1beta1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.container_v1beta1.inputs.AddonsConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.AuthenticatorGroupsConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.AutopilotArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.BinaryAuthorizationArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.ClusterAutoscalingArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.ClusterTelemetryArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.ConfidentialNodesArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.DatabaseEncryptionArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.IPAllocationPolicyArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.IdentityServiceConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.LegacyAbacArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.LoggingConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.MaintenancePolicyArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.MasterArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.MasterAuthArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.MasterAuthorizedNetworksConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.MaxPodsConstraintArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.MeshCertificatesArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.MonitoringConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.NetworkConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.NetworkPolicyArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.NodePoolArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.NodePoolDefaultsArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.NotificationConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.PodSecurityPolicyConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.PrivateClusterConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.ReleaseChannelArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.ResourceUsageExportConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.ShieldedNodesArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.StatusConditionArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.TpuConfigArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.VerticalPodAutoscalingArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.WorkloadCertificatesArgs;
import io.pulumi.googlenative.container_v1beta1.inputs.WorkloadIdentityConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ClusterArgs extends io.pulumi.resources.ResourceArgs {

    public static final ClusterArgs Empty = new ClusterArgs();

    /**
     * Configurations for the various addons available to run in the cluster.
     * 
     */
    @Import(name="addonsConfig")
      private final @Nullable Output<AddonsConfigArgs> addonsConfig;

    public Output<AddonsConfigArgs> addonsConfig() {
        return this.addonsConfig == null ? Codegen.empty() : this.addonsConfig;
    }

    /**
     * Configuration controlling RBAC group membership information.
     * 
     */
    @Import(name="authenticatorGroupsConfig")
      private final @Nullable Output<AuthenticatorGroupsConfigArgs> authenticatorGroupsConfig;

    public Output<AuthenticatorGroupsConfigArgs> authenticatorGroupsConfig() {
        return this.authenticatorGroupsConfig == null ? Codegen.empty() : this.authenticatorGroupsConfig;
    }

    /**
     * Autopilot configuration for the cluster.
     * 
     */
    @Import(name="autopilot")
      private final @Nullable Output<AutopilotArgs> autopilot;

    public Output<AutopilotArgs> autopilot() {
        return this.autopilot == null ? Codegen.empty() : this.autopilot;
    }

    /**
     * Cluster-level autoscaling configuration.
     * 
     */
    @Import(name="autoscaling")
      private final @Nullable Output<ClusterAutoscalingArgs> autoscaling;

    public Output<ClusterAutoscalingArgs> autoscaling() {
        return this.autoscaling == null ? Codegen.empty() : this.autoscaling;
    }

    /**
     * Configuration for Binary Authorization.
     * 
     */
    @Import(name="binaryAuthorization")
      private final @Nullable Output<BinaryAuthorizationArgs> binaryAuthorization;

    public Output<BinaryAuthorizationArgs> binaryAuthorization() {
        return this.binaryAuthorization == null ? Codegen.empty() : this.binaryAuthorization;
    }

    /**
     * The IP address range of the container pods in this cluster, in [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing) notation (e.g. `10.96.0.0/14`). Leave blank to have one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
     * 
     */
    @Import(name="clusterIpv4Cidr")
      private final @Nullable Output<String> clusterIpv4Cidr;

    public Output<String> clusterIpv4Cidr() {
        return this.clusterIpv4Cidr == null ? Codegen.empty() : this.clusterIpv4Cidr;
    }

    /**
     * Telemetry integration for the cluster.
     * 
     */
    @Import(name="clusterTelemetry")
      private final @Nullable Output<ClusterTelemetryArgs> clusterTelemetry;

    public Output<ClusterTelemetryArgs> clusterTelemetry() {
        return this.clusterTelemetry == null ? Codegen.empty() : this.clusterTelemetry;
    }

    /**
     * Which conditions caused the current cluster state.
     * 
     */
    @Import(name="conditions")
      private final @Nullable Output<List<StatusConditionArgs>> conditions;

    public Output<List<StatusConditionArgs>> conditions() {
        return this.conditions == null ? Codegen.empty() : this.conditions;
    }

    /**
     * Configuration of Confidential Nodes. All the nodes in the cluster will be Confidential VM once enabled.
     * 
     */
    @Import(name="confidentialNodes")
      private final @Nullable Output<ConfidentialNodesArgs> confidentialNodes;

    public Output<ConfidentialNodesArgs> confidentialNodes() {
        return this.confidentialNodes == null ? Codegen.empty() : this.confidentialNodes;
    }

    /**
     * Configuration of etcd encryption.
     * 
     */
    @Import(name="databaseEncryption")
      private final @Nullable Output<DatabaseEncryptionArgs> databaseEncryption;

    public Output<DatabaseEncryptionArgs> databaseEncryption() {
        return this.databaseEncryption == null ? Codegen.empty() : this.databaseEncryption;
    }

    /**
     * The default constraint on the maximum number of pods that can be run simultaneously on a node in the node pool of this cluster. Only honored if cluster created with IP Alias support.
     * 
     */
    @Import(name="defaultMaxPodsConstraint")
      private final @Nullable Output<MaxPodsConstraintArgs> defaultMaxPodsConstraint;

    public Output<MaxPodsConstraintArgs> defaultMaxPodsConstraint() {
        return this.defaultMaxPodsConstraint == null ? Codegen.empty() : this.defaultMaxPodsConstraint;
    }

    /**
     * An optional description of this cluster.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Kubernetes alpha features are enabled on this cluster. This includes alpha API groups (e.g. v1beta1) and features that may not be production ready in the kubernetes version of the master and nodes. The cluster has no SLA for uptime and master/node upgrades are disabled. Alpha enabled clusters are automatically deleted thirty days after creation.
     * 
     */
    @Import(name="enableKubernetesAlpha")
      private final @Nullable Output<Boolean> enableKubernetesAlpha;

    public Output<Boolean> enableKubernetesAlpha() {
        return this.enableKubernetesAlpha == null ? Codegen.empty() : this.enableKubernetesAlpha;
    }

    /**
     * Configuration for Identity Service component.
     * 
     */
    @Import(name="identityServiceConfig")
      private final @Nullable Output<IdentityServiceConfigArgs> identityServiceConfig;

    public Output<IdentityServiceConfigArgs> identityServiceConfig() {
        return this.identityServiceConfig == null ? Codegen.empty() : this.identityServiceConfig;
    }

    /**
     * The initial Kubernetes version for this cluster. Valid versions are those found in validMasterVersions returned by getServerConfig. The version can be upgraded over time; such upgrades are reflected in currentMasterVersion and currentNodeVersion. Users may specify either explicit versions offered by Kubernetes Engine or version aliases, which have the following behavior: - "latest": picks the highest valid Kubernetes version - "1.X": picks the highest valid patch+gke.N patch in the 1.X version - "1.X.Y": picks the highest valid gke.N patch in the 1.X.Y version - "1.X.Y-gke.N": picks an explicit Kubernetes version - "","-": picks the default Kubernetes version
     * 
     */
    @Import(name="initialClusterVersion")
      private final @Nullable Output<String> initialClusterVersion;

    public Output<String> initialClusterVersion() {
        return this.initialClusterVersion == null ? Codegen.empty() : this.initialClusterVersion;
    }

    /**
     * Configuration for cluster IP allocation.
     * 
     */
    @Import(name="ipAllocationPolicy")
      private final @Nullable Output<IPAllocationPolicyArgs> ipAllocationPolicy;

    public Output<IPAllocationPolicyArgs> ipAllocationPolicy() {
        return this.ipAllocationPolicy == null ? Codegen.empty() : this.ipAllocationPolicy;
    }

    /**
     * Configuration for the legacy ABAC authorization mode.
     * 
     */
    @Import(name="legacyAbac")
      private final @Nullable Output<LegacyAbacArgs> legacyAbac;

    public Output<LegacyAbacArgs> legacyAbac() {
        return this.legacyAbac == null ? Codegen.empty() : this.legacyAbac;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The list of Google Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) in which the cluster's nodes should be located. This field provides a default value if [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) are not specified during node pool creation. Warning: changing cluster locations will update the [NodePool.Locations](https://cloud.google.com/kubernetes-engine/docs/reference/rest/v1/projects.locations.clusters.nodePools#NodePool.FIELDS.locations) of all node pools and will result in nodes being added and/or removed.
     * 
     */
    @Import(name="locations")
      private final @Nullable Output<List<String>> locations;

    public Output<List<String>> locations() {
        return this.locations == null ? Codegen.empty() : this.locations;
    }

    /**
     * Logging configuration for the cluster.
     * 
     */
    @Import(name="loggingConfig")
      private final @Nullable Output<LoggingConfigArgs> loggingConfig;

    public Output<LoggingConfigArgs> loggingConfig() {
        return this.loggingConfig == null ? Codegen.empty() : this.loggingConfig;
    }

    /**
     * The logging service the cluster should use to write logs. Currently available options: * `logging.googleapis.com/kubernetes` - The Cloud Logging service with a Kubernetes-native resource model * `logging.googleapis.com` - The legacy Cloud Logging service (no longer available as of GKE 1.15). * `none` - no logs will be exported from the cluster. If left as an empty string,`logging.googleapis.com/kubernetes` will be used for GKE 1.14+ or `logging.googleapis.com` for earlier versions.
     * 
     */
    @Import(name="loggingService")
      private final @Nullable Output<String> loggingService;

    public Output<String> loggingService() {
        return this.loggingService == null ? Codegen.empty() : this.loggingService;
    }

    /**
     * Configure the maintenance policy for this cluster.
     * 
     */
    @Import(name="maintenancePolicy")
      private final @Nullable Output<MaintenancePolicyArgs> maintenancePolicy;

    public Output<MaintenancePolicyArgs> maintenancePolicy() {
        return this.maintenancePolicy == null ? Codegen.empty() : this.maintenancePolicy;
    }

    /**
     * Configuration for master components.
     * 
     */
    @Import(name="master")
      private final @Nullable Output<MasterArgs> master;

    public Output<MasterArgs> master() {
        return this.master == null ? Codegen.empty() : this.master;
    }

    /**
     * The authentication information for accessing the master endpoint. If unspecified, the defaults are used: For clusters before v1.12, if master_auth is unspecified, `username` will be set to "admin", a random password will be generated, and a client certificate will be issued.
     * 
     */
    @Import(name="masterAuth")
      private final @Nullable Output<MasterAuthArgs> masterAuth;

    public Output<MasterAuthArgs> masterAuth() {
        return this.masterAuth == null ? Codegen.empty() : this.masterAuth;
    }

    /**
     * The configuration options for master authorized networks feature.
     * 
     */
    @Import(name="masterAuthorizedNetworksConfig")
      private final @Nullable Output<MasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig;

    public Output<MasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig() {
        return this.masterAuthorizedNetworksConfig == null ? Codegen.empty() : this.masterAuthorizedNetworksConfig;
    }

    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     * 
     */
    @Import(name="meshCertificates")
      private final @Nullable Output<MeshCertificatesArgs> meshCertificates;

    public Output<MeshCertificatesArgs> meshCertificates() {
        return this.meshCertificates == null ? Codegen.empty() : this.meshCertificates;
    }

    /**
     * Monitoring configuration for the cluster.
     * 
     */
    @Import(name="monitoringConfig")
      private final @Nullable Output<MonitoringConfigArgs> monitoringConfig;

    public Output<MonitoringConfigArgs> monitoringConfig() {
        return this.monitoringConfig == null ? Codegen.empty() : this.monitoringConfig;
    }

    /**
     * The monitoring service the cluster should use to write metrics. Currently available options: * "monitoring.googleapis.com/kubernetes" - The Cloud Monitoring service with a Kubernetes-native resource model * `monitoring.googleapis.com` - The legacy Cloud Monitoring service (no longer available as of GKE 1.15). * `none` - No metrics will be exported from the cluster. If left as an empty string,`monitoring.googleapis.com/kubernetes` will be used for GKE 1.14+ or `monitoring.googleapis.com` for earlier versions.
     * 
     */
    @Import(name="monitoringService")
      private final @Nullable Output<String> monitoringService;

    public Output<String> monitoringService() {
        return this.monitoringService == null ? Codegen.empty() : this.monitoringService;
    }

    /**
     * The name of this cluster. The name must be unique within this project and location (e.g. zone or region), and can be up to 40 characters with the following restrictions: * Lowercase letters, numbers, and hyphens only. * Must start with a letter. * Must end with a number or a letter.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * The name of the Google Compute Engine [network](https://cloud.google.com/compute/docs/networks-and-firewalls#networks) to which the cluster is connected. If left unspecified, the `default` network will be used. On output this shows the network ID instead of the name.
     * 
     */
    @Import(name="network")
      private final @Nullable Output<String> network;

    public Output<String> network() {
        return this.network == null ? Codegen.empty() : this.network;
    }

    /**
     * Configuration for cluster networking.
     * 
     */
    @Import(name="networkConfig")
      private final @Nullable Output<NetworkConfigArgs> networkConfig;

    public Output<NetworkConfigArgs> networkConfig() {
        return this.networkConfig == null ? Codegen.empty() : this.networkConfig;
    }

    /**
     * Configuration options for the NetworkPolicy feature.
     * 
     */
    @Import(name="networkPolicy")
      private final @Nullable Output<NetworkPolicyArgs> networkPolicy;

    public Output<NetworkPolicyArgs> networkPolicy() {
        return this.networkPolicy == null ? Codegen.empty() : this.networkPolicy;
    }

    /**
     * Default NodePool settings for the entire cluster. These settings are overridden if specified on the specific NodePool object.
     * 
     */
    @Import(name="nodePoolDefaults")
      private final @Nullable Output<NodePoolDefaultsArgs> nodePoolDefaults;

    public Output<NodePoolDefaultsArgs> nodePoolDefaults() {
        return this.nodePoolDefaults == null ? Codegen.empty() : this.nodePoolDefaults;
    }

    /**
     * The node pools associated with this cluster. This field should not be set if "node_config" or "initial_node_count" are specified.
     * 
     */
    @Import(name="nodePools")
      private final @Nullable Output<List<NodePoolArgs>> nodePools;

    public Output<List<NodePoolArgs>> nodePools() {
        return this.nodePools == null ? Codegen.empty() : this.nodePools;
    }

    /**
     * Notification configuration of the cluster.
     * 
     */
    @Import(name="notificationConfig")
      private final @Nullable Output<NotificationConfigArgs> notificationConfig;

    public Output<NotificationConfigArgs> notificationConfig() {
        return this.notificationConfig == null ? Codegen.empty() : this.notificationConfig;
    }

    /**
     * The parent (project and location) where the cluster will be created. Specified in the format `projects/*{@literal /}locations/*`.
     * 
     */
    @Import(name="parent")
      private final @Nullable Output<String> parent;

    public Output<String> parent() {
        return this.parent == null ? Codegen.empty() : this.parent;
    }

    /**
     * Configuration for the PodSecurityPolicy feature.
     * 
     */
    @Import(name="podSecurityPolicyConfig")
      private final @Nullable Output<PodSecurityPolicyConfigArgs> podSecurityPolicyConfig;

    public Output<PodSecurityPolicyConfigArgs> podSecurityPolicyConfig() {
        return this.podSecurityPolicyConfig == null ? Codegen.empty() : this.podSecurityPolicyConfig;
    }

    /**
     * Configuration for private cluster.
     * 
     */
    @Import(name="privateClusterConfig")
      private final @Nullable Output<PrivateClusterConfigArgs> privateClusterConfig;

    public Output<PrivateClusterConfigArgs> privateClusterConfig() {
        return this.privateClusterConfig == null ? Codegen.empty() : this.privateClusterConfig;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * Release channel configuration.
     * 
     */
    @Import(name="releaseChannel")
      private final @Nullable Output<ReleaseChannelArgs> releaseChannel;

    public Output<ReleaseChannelArgs> releaseChannel() {
        return this.releaseChannel == null ? Codegen.empty() : this.releaseChannel;
    }

    /**
     * The resource labels for the cluster to use to annotate any related Google Compute Engine resources.
     * 
     */
    @Import(name="resourceLabels")
      private final @Nullable Output<Map<String,String>> resourceLabels;

    public Output<Map<String,String>> resourceLabels() {
        return this.resourceLabels == null ? Codegen.empty() : this.resourceLabels;
    }

    /**
     * Configuration for exporting resource usages. Resource usage export is disabled when this config unspecified.
     * 
     */
    @Import(name="resourceUsageExportConfig")
      private final @Nullable Output<ResourceUsageExportConfigArgs> resourceUsageExportConfig;

    public Output<ResourceUsageExportConfigArgs> resourceUsageExportConfig() {
        return this.resourceUsageExportConfig == null ? Codegen.empty() : this.resourceUsageExportConfig;
    }

    /**
     * Shielded Nodes configuration.
     * 
     */
    @Import(name="shieldedNodes")
      private final @Nullable Output<ShieldedNodesArgs> shieldedNodes;

    public Output<ShieldedNodesArgs> shieldedNodes() {
        return this.shieldedNodes == null ? Codegen.empty() : this.shieldedNodes;
    }

    /**
     * The name of the Google Compute Engine [subnetwork](https://cloud.google.com/compute/docs/subnetworks) to which the cluster is connected. On output this shows the subnetwork ID instead of the name.
     * 
     */
    @Import(name="subnetwork")
      private final @Nullable Output<String> subnetwork;

    public Output<String> subnetwork() {
        return this.subnetwork == null ? Codegen.empty() : this.subnetwork;
    }

    /**
     * Configuration for Cloud TPU support;
     * 
     */
    @Import(name="tpuConfig")
      private final @Nullable Output<TpuConfigArgs> tpuConfig;

    public Output<TpuConfigArgs> tpuConfig() {
        return this.tpuConfig == null ? Codegen.empty() : this.tpuConfig;
    }

    /**
     * Cluster-level Vertical Pod Autoscaling configuration.
     * 
     */
    @Import(name="verticalPodAutoscaling")
      private final @Nullable Output<VerticalPodAutoscalingArgs> verticalPodAutoscaling;

    public Output<VerticalPodAutoscalingArgs> verticalPodAutoscaling() {
        return this.verticalPodAutoscaling == null ? Codegen.empty() : this.verticalPodAutoscaling;
    }

    /**
     * Configuration for issuance of mTLS keys and certificates to Kubernetes pods.
     * 
     */
    @Import(name="workloadCertificates")
      private final @Nullable Output<WorkloadCertificatesArgs> workloadCertificates;

    public Output<WorkloadCertificatesArgs> workloadCertificates() {
        return this.workloadCertificates == null ? Codegen.empty() : this.workloadCertificates;
    }

    /**
     * Configuration for the use of Kubernetes Service Accounts in GCP IAM policies.
     * 
     */
    @Import(name="workloadIdentityConfig")
      private final @Nullable Output<WorkloadIdentityConfigArgs> workloadIdentityConfig;

    public Output<WorkloadIdentityConfigArgs> workloadIdentityConfig() {
        return this.workloadIdentityConfig == null ? Codegen.empty() : this.workloadIdentityConfig;
    }

    public ClusterArgs(
        @Nullable Output<AddonsConfigArgs> addonsConfig,
        @Nullable Output<AuthenticatorGroupsConfigArgs> authenticatorGroupsConfig,
        @Nullable Output<AutopilotArgs> autopilot,
        @Nullable Output<ClusterAutoscalingArgs> autoscaling,
        @Nullable Output<BinaryAuthorizationArgs> binaryAuthorization,
        @Nullable Output<String> clusterIpv4Cidr,
        @Nullable Output<ClusterTelemetryArgs> clusterTelemetry,
        @Nullable Output<List<StatusConditionArgs>> conditions,
        @Nullable Output<ConfidentialNodesArgs> confidentialNodes,
        @Nullable Output<DatabaseEncryptionArgs> databaseEncryption,
        @Nullable Output<MaxPodsConstraintArgs> defaultMaxPodsConstraint,
        @Nullable Output<String> description,
        @Nullable Output<Boolean> enableKubernetesAlpha,
        @Nullable Output<IdentityServiceConfigArgs> identityServiceConfig,
        @Nullable Output<String> initialClusterVersion,
        @Nullable Output<IPAllocationPolicyArgs> ipAllocationPolicy,
        @Nullable Output<LegacyAbacArgs> legacyAbac,
        @Nullable Output<String> location,
        @Nullable Output<List<String>> locations,
        @Nullable Output<LoggingConfigArgs> loggingConfig,
        @Nullable Output<String> loggingService,
        @Nullable Output<MaintenancePolicyArgs> maintenancePolicy,
        @Nullable Output<MasterArgs> master,
        @Nullable Output<MasterAuthArgs> masterAuth,
        @Nullable Output<MasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig,
        @Nullable Output<MeshCertificatesArgs> meshCertificates,
        @Nullable Output<MonitoringConfigArgs> monitoringConfig,
        @Nullable Output<String> monitoringService,
        @Nullable Output<String> name,
        @Nullable Output<String> network,
        @Nullable Output<NetworkConfigArgs> networkConfig,
        @Nullable Output<NetworkPolicyArgs> networkPolicy,
        @Nullable Output<NodePoolDefaultsArgs> nodePoolDefaults,
        @Nullable Output<List<NodePoolArgs>> nodePools,
        @Nullable Output<NotificationConfigArgs> notificationConfig,
        @Nullable Output<String> parent,
        @Nullable Output<PodSecurityPolicyConfigArgs> podSecurityPolicyConfig,
        @Nullable Output<PrivateClusterConfigArgs> privateClusterConfig,
        @Nullable Output<String> project,
        @Nullable Output<ReleaseChannelArgs> releaseChannel,
        @Nullable Output<Map<String,String>> resourceLabels,
        @Nullable Output<ResourceUsageExportConfigArgs> resourceUsageExportConfig,
        @Nullable Output<ShieldedNodesArgs> shieldedNodes,
        @Nullable Output<String> subnetwork,
        @Nullable Output<TpuConfigArgs> tpuConfig,
        @Nullable Output<VerticalPodAutoscalingArgs> verticalPodAutoscaling,
        @Nullable Output<WorkloadCertificatesArgs> workloadCertificates,
        @Nullable Output<WorkloadIdentityConfigArgs> workloadIdentityConfig) {
        this.addonsConfig = addonsConfig;
        this.authenticatorGroupsConfig = authenticatorGroupsConfig;
        this.autopilot = autopilot;
        this.autoscaling = autoscaling;
        this.binaryAuthorization = binaryAuthorization;
        this.clusterIpv4Cidr = clusterIpv4Cidr;
        this.clusterTelemetry = clusterTelemetry;
        this.conditions = conditions;
        this.confidentialNodes = confidentialNodes;
        this.databaseEncryption = databaseEncryption;
        this.defaultMaxPodsConstraint = defaultMaxPodsConstraint;
        this.description = description;
        this.enableKubernetesAlpha = enableKubernetesAlpha;
        this.identityServiceConfig = identityServiceConfig;
        this.initialClusterVersion = initialClusterVersion;
        this.ipAllocationPolicy = ipAllocationPolicy;
        this.legacyAbac = legacyAbac;
        this.location = location;
        this.locations = locations;
        this.loggingConfig = loggingConfig;
        this.loggingService = loggingService;
        this.maintenancePolicy = maintenancePolicy;
        this.master = master;
        this.masterAuth = masterAuth;
        this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
        this.meshCertificates = meshCertificates;
        this.monitoringConfig = monitoringConfig;
        this.monitoringService = monitoringService;
        this.name = name;
        this.network = network;
        this.networkConfig = networkConfig;
        this.networkPolicy = networkPolicy;
        this.nodePoolDefaults = nodePoolDefaults;
        this.nodePools = nodePools;
        this.notificationConfig = notificationConfig;
        this.parent = parent;
        this.podSecurityPolicyConfig = podSecurityPolicyConfig;
        this.privateClusterConfig = privateClusterConfig;
        this.project = project;
        this.releaseChannel = releaseChannel;
        this.resourceLabels = resourceLabels;
        this.resourceUsageExportConfig = resourceUsageExportConfig;
        this.shieldedNodes = shieldedNodes;
        this.subnetwork = subnetwork;
        this.tpuConfig = tpuConfig;
        this.verticalPodAutoscaling = verticalPodAutoscaling;
        this.workloadCertificates = workloadCertificates;
        this.workloadIdentityConfig = workloadIdentityConfig;
    }

    private ClusterArgs() {
        this.addonsConfig = Codegen.empty();
        this.authenticatorGroupsConfig = Codegen.empty();
        this.autopilot = Codegen.empty();
        this.autoscaling = Codegen.empty();
        this.binaryAuthorization = Codegen.empty();
        this.clusterIpv4Cidr = Codegen.empty();
        this.clusterTelemetry = Codegen.empty();
        this.conditions = Codegen.empty();
        this.confidentialNodes = Codegen.empty();
        this.databaseEncryption = Codegen.empty();
        this.defaultMaxPodsConstraint = Codegen.empty();
        this.description = Codegen.empty();
        this.enableKubernetesAlpha = Codegen.empty();
        this.identityServiceConfig = Codegen.empty();
        this.initialClusterVersion = Codegen.empty();
        this.ipAllocationPolicy = Codegen.empty();
        this.legacyAbac = Codegen.empty();
        this.location = Codegen.empty();
        this.locations = Codegen.empty();
        this.loggingConfig = Codegen.empty();
        this.loggingService = Codegen.empty();
        this.maintenancePolicy = Codegen.empty();
        this.master = Codegen.empty();
        this.masterAuth = Codegen.empty();
        this.masterAuthorizedNetworksConfig = Codegen.empty();
        this.meshCertificates = Codegen.empty();
        this.monitoringConfig = Codegen.empty();
        this.monitoringService = Codegen.empty();
        this.name = Codegen.empty();
        this.network = Codegen.empty();
        this.networkConfig = Codegen.empty();
        this.networkPolicy = Codegen.empty();
        this.nodePoolDefaults = Codegen.empty();
        this.nodePools = Codegen.empty();
        this.notificationConfig = Codegen.empty();
        this.parent = Codegen.empty();
        this.podSecurityPolicyConfig = Codegen.empty();
        this.privateClusterConfig = Codegen.empty();
        this.project = Codegen.empty();
        this.releaseChannel = Codegen.empty();
        this.resourceLabels = Codegen.empty();
        this.resourceUsageExportConfig = Codegen.empty();
        this.shieldedNodes = Codegen.empty();
        this.subnetwork = Codegen.empty();
        this.tpuConfig = Codegen.empty();
        this.verticalPodAutoscaling = Codegen.empty();
        this.workloadCertificates = Codegen.empty();
        this.workloadIdentityConfig = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ClusterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<AddonsConfigArgs> addonsConfig;
        private @Nullable Output<AuthenticatorGroupsConfigArgs> authenticatorGroupsConfig;
        private @Nullable Output<AutopilotArgs> autopilot;
        private @Nullable Output<ClusterAutoscalingArgs> autoscaling;
        private @Nullable Output<BinaryAuthorizationArgs> binaryAuthorization;
        private @Nullable Output<String> clusterIpv4Cidr;
        private @Nullable Output<ClusterTelemetryArgs> clusterTelemetry;
        private @Nullable Output<List<StatusConditionArgs>> conditions;
        private @Nullable Output<ConfidentialNodesArgs> confidentialNodes;
        private @Nullable Output<DatabaseEncryptionArgs> databaseEncryption;
        private @Nullable Output<MaxPodsConstraintArgs> defaultMaxPodsConstraint;
        private @Nullable Output<String> description;
        private @Nullable Output<Boolean> enableKubernetesAlpha;
        private @Nullable Output<IdentityServiceConfigArgs> identityServiceConfig;
        private @Nullable Output<String> initialClusterVersion;
        private @Nullable Output<IPAllocationPolicyArgs> ipAllocationPolicy;
        private @Nullable Output<LegacyAbacArgs> legacyAbac;
        private @Nullable Output<String> location;
        private @Nullable Output<List<String>> locations;
        private @Nullable Output<LoggingConfigArgs> loggingConfig;
        private @Nullable Output<String> loggingService;
        private @Nullable Output<MaintenancePolicyArgs> maintenancePolicy;
        private @Nullable Output<MasterArgs> master;
        private @Nullable Output<MasterAuthArgs> masterAuth;
        private @Nullable Output<MasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig;
        private @Nullable Output<MeshCertificatesArgs> meshCertificates;
        private @Nullable Output<MonitoringConfigArgs> monitoringConfig;
        private @Nullable Output<String> monitoringService;
        private @Nullable Output<String> name;
        private @Nullable Output<String> network;
        private @Nullable Output<NetworkConfigArgs> networkConfig;
        private @Nullable Output<NetworkPolicyArgs> networkPolicy;
        private @Nullable Output<NodePoolDefaultsArgs> nodePoolDefaults;
        private @Nullable Output<List<NodePoolArgs>> nodePools;
        private @Nullable Output<NotificationConfigArgs> notificationConfig;
        private @Nullable Output<String> parent;
        private @Nullable Output<PodSecurityPolicyConfigArgs> podSecurityPolicyConfig;
        private @Nullable Output<PrivateClusterConfigArgs> privateClusterConfig;
        private @Nullable Output<String> project;
        private @Nullable Output<ReleaseChannelArgs> releaseChannel;
        private @Nullable Output<Map<String,String>> resourceLabels;
        private @Nullable Output<ResourceUsageExportConfigArgs> resourceUsageExportConfig;
        private @Nullable Output<ShieldedNodesArgs> shieldedNodes;
        private @Nullable Output<String> subnetwork;
        private @Nullable Output<TpuConfigArgs> tpuConfig;
        private @Nullable Output<VerticalPodAutoscalingArgs> verticalPodAutoscaling;
        private @Nullable Output<WorkloadCertificatesArgs> workloadCertificates;
        private @Nullable Output<WorkloadIdentityConfigArgs> workloadIdentityConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(ClusterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addonsConfig = defaults.addonsConfig;
    	      this.authenticatorGroupsConfig = defaults.authenticatorGroupsConfig;
    	      this.autopilot = defaults.autopilot;
    	      this.autoscaling = defaults.autoscaling;
    	      this.binaryAuthorization = defaults.binaryAuthorization;
    	      this.clusterIpv4Cidr = defaults.clusterIpv4Cidr;
    	      this.clusterTelemetry = defaults.clusterTelemetry;
    	      this.conditions = defaults.conditions;
    	      this.confidentialNodes = defaults.confidentialNodes;
    	      this.databaseEncryption = defaults.databaseEncryption;
    	      this.defaultMaxPodsConstraint = defaults.defaultMaxPodsConstraint;
    	      this.description = defaults.description;
    	      this.enableKubernetesAlpha = defaults.enableKubernetesAlpha;
    	      this.identityServiceConfig = defaults.identityServiceConfig;
    	      this.initialClusterVersion = defaults.initialClusterVersion;
    	      this.ipAllocationPolicy = defaults.ipAllocationPolicy;
    	      this.legacyAbac = defaults.legacyAbac;
    	      this.location = defaults.location;
    	      this.locations = defaults.locations;
    	      this.loggingConfig = defaults.loggingConfig;
    	      this.loggingService = defaults.loggingService;
    	      this.maintenancePolicy = defaults.maintenancePolicy;
    	      this.master = defaults.master;
    	      this.masterAuth = defaults.masterAuth;
    	      this.masterAuthorizedNetworksConfig = defaults.masterAuthorizedNetworksConfig;
    	      this.meshCertificates = defaults.meshCertificates;
    	      this.monitoringConfig = defaults.monitoringConfig;
    	      this.monitoringService = defaults.monitoringService;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.networkConfig = defaults.networkConfig;
    	      this.networkPolicy = defaults.networkPolicy;
    	      this.nodePoolDefaults = defaults.nodePoolDefaults;
    	      this.nodePools = defaults.nodePools;
    	      this.notificationConfig = defaults.notificationConfig;
    	      this.parent = defaults.parent;
    	      this.podSecurityPolicyConfig = defaults.podSecurityPolicyConfig;
    	      this.privateClusterConfig = defaults.privateClusterConfig;
    	      this.project = defaults.project;
    	      this.releaseChannel = defaults.releaseChannel;
    	      this.resourceLabels = defaults.resourceLabels;
    	      this.resourceUsageExportConfig = defaults.resourceUsageExportConfig;
    	      this.shieldedNodes = defaults.shieldedNodes;
    	      this.subnetwork = defaults.subnetwork;
    	      this.tpuConfig = defaults.tpuConfig;
    	      this.verticalPodAutoscaling = defaults.verticalPodAutoscaling;
    	      this.workloadCertificates = defaults.workloadCertificates;
    	      this.workloadIdentityConfig = defaults.workloadIdentityConfig;
        }

        public Builder addonsConfig(@Nullable Output<AddonsConfigArgs> addonsConfig) {
            this.addonsConfig = addonsConfig;
            return this;
        }
        public Builder addonsConfig(@Nullable AddonsConfigArgs addonsConfig) {
            this.addonsConfig = Codegen.ofNullable(addonsConfig);
            return this;
        }
        public Builder authenticatorGroupsConfig(@Nullable Output<AuthenticatorGroupsConfigArgs> authenticatorGroupsConfig) {
            this.authenticatorGroupsConfig = authenticatorGroupsConfig;
            return this;
        }
        public Builder authenticatorGroupsConfig(@Nullable AuthenticatorGroupsConfigArgs authenticatorGroupsConfig) {
            this.authenticatorGroupsConfig = Codegen.ofNullable(authenticatorGroupsConfig);
            return this;
        }
        public Builder autopilot(@Nullable Output<AutopilotArgs> autopilot) {
            this.autopilot = autopilot;
            return this;
        }
        public Builder autopilot(@Nullable AutopilotArgs autopilot) {
            this.autopilot = Codegen.ofNullable(autopilot);
            return this;
        }
        public Builder autoscaling(@Nullable Output<ClusterAutoscalingArgs> autoscaling) {
            this.autoscaling = autoscaling;
            return this;
        }
        public Builder autoscaling(@Nullable ClusterAutoscalingArgs autoscaling) {
            this.autoscaling = Codegen.ofNullable(autoscaling);
            return this;
        }
        public Builder binaryAuthorization(@Nullable Output<BinaryAuthorizationArgs> binaryAuthorization) {
            this.binaryAuthorization = binaryAuthorization;
            return this;
        }
        public Builder binaryAuthorization(@Nullable BinaryAuthorizationArgs binaryAuthorization) {
            this.binaryAuthorization = Codegen.ofNullable(binaryAuthorization);
            return this;
        }
        public Builder clusterIpv4Cidr(@Nullable Output<String> clusterIpv4Cidr) {
            this.clusterIpv4Cidr = clusterIpv4Cidr;
            return this;
        }
        public Builder clusterIpv4Cidr(@Nullable String clusterIpv4Cidr) {
            this.clusterIpv4Cidr = Codegen.ofNullable(clusterIpv4Cidr);
            return this;
        }
        public Builder clusterTelemetry(@Nullable Output<ClusterTelemetryArgs> clusterTelemetry) {
            this.clusterTelemetry = clusterTelemetry;
            return this;
        }
        public Builder clusterTelemetry(@Nullable ClusterTelemetryArgs clusterTelemetry) {
            this.clusterTelemetry = Codegen.ofNullable(clusterTelemetry);
            return this;
        }
        public Builder conditions(@Nullable Output<List<StatusConditionArgs>> conditions) {
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(@Nullable List<StatusConditionArgs> conditions) {
            this.conditions = Codegen.ofNullable(conditions);
            return this;
        }
        public Builder conditions(StatusConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }
        public Builder confidentialNodes(@Nullable Output<ConfidentialNodesArgs> confidentialNodes) {
            this.confidentialNodes = confidentialNodes;
            return this;
        }
        public Builder confidentialNodes(@Nullable ConfidentialNodesArgs confidentialNodes) {
            this.confidentialNodes = Codegen.ofNullable(confidentialNodes);
            return this;
        }
        public Builder databaseEncryption(@Nullable Output<DatabaseEncryptionArgs> databaseEncryption) {
            this.databaseEncryption = databaseEncryption;
            return this;
        }
        public Builder databaseEncryption(@Nullable DatabaseEncryptionArgs databaseEncryption) {
            this.databaseEncryption = Codegen.ofNullable(databaseEncryption);
            return this;
        }
        public Builder defaultMaxPodsConstraint(@Nullable Output<MaxPodsConstraintArgs> defaultMaxPodsConstraint) {
            this.defaultMaxPodsConstraint = defaultMaxPodsConstraint;
            return this;
        }
        public Builder defaultMaxPodsConstraint(@Nullable MaxPodsConstraintArgs defaultMaxPodsConstraint) {
            this.defaultMaxPodsConstraint = Codegen.ofNullable(defaultMaxPodsConstraint);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder enableKubernetesAlpha(@Nullable Output<Boolean> enableKubernetesAlpha) {
            this.enableKubernetesAlpha = enableKubernetesAlpha;
            return this;
        }
        public Builder enableKubernetesAlpha(@Nullable Boolean enableKubernetesAlpha) {
            this.enableKubernetesAlpha = Codegen.ofNullable(enableKubernetesAlpha);
            return this;
        }
        public Builder identityServiceConfig(@Nullable Output<IdentityServiceConfigArgs> identityServiceConfig) {
            this.identityServiceConfig = identityServiceConfig;
            return this;
        }
        public Builder identityServiceConfig(@Nullable IdentityServiceConfigArgs identityServiceConfig) {
            this.identityServiceConfig = Codegen.ofNullable(identityServiceConfig);
            return this;
        }
        public Builder initialClusterVersion(@Nullable Output<String> initialClusterVersion) {
            this.initialClusterVersion = initialClusterVersion;
            return this;
        }
        public Builder initialClusterVersion(@Nullable String initialClusterVersion) {
            this.initialClusterVersion = Codegen.ofNullable(initialClusterVersion);
            return this;
        }
        public Builder ipAllocationPolicy(@Nullable Output<IPAllocationPolicyArgs> ipAllocationPolicy) {
            this.ipAllocationPolicy = ipAllocationPolicy;
            return this;
        }
        public Builder ipAllocationPolicy(@Nullable IPAllocationPolicyArgs ipAllocationPolicy) {
            this.ipAllocationPolicy = Codegen.ofNullable(ipAllocationPolicy);
            return this;
        }
        public Builder legacyAbac(@Nullable Output<LegacyAbacArgs> legacyAbac) {
            this.legacyAbac = legacyAbac;
            return this;
        }
        public Builder legacyAbac(@Nullable LegacyAbacArgs legacyAbac) {
            this.legacyAbac = Codegen.ofNullable(legacyAbac);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder locations(@Nullable Output<List<String>> locations) {
            this.locations = locations;
            return this;
        }
        public Builder locations(@Nullable List<String> locations) {
            this.locations = Codegen.ofNullable(locations);
            return this;
        }
        public Builder locations(String... locations) {
            return locations(List.of(locations));
        }
        public Builder loggingConfig(@Nullable Output<LoggingConfigArgs> loggingConfig) {
            this.loggingConfig = loggingConfig;
            return this;
        }
        public Builder loggingConfig(@Nullable LoggingConfigArgs loggingConfig) {
            this.loggingConfig = Codegen.ofNullable(loggingConfig);
            return this;
        }
        public Builder loggingService(@Nullable Output<String> loggingService) {
            this.loggingService = loggingService;
            return this;
        }
        public Builder loggingService(@Nullable String loggingService) {
            this.loggingService = Codegen.ofNullable(loggingService);
            return this;
        }
        public Builder maintenancePolicy(@Nullable Output<MaintenancePolicyArgs> maintenancePolicy) {
            this.maintenancePolicy = maintenancePolicy;
            return this;
        }
        public Builder maintenancePolicy(@Nullable MaintenancePolicyArgs maintenancePolicy) {
            this.maintenancePolicy = Codegen.ofNullable(maintenancePolicy);
            return this;
        }
        public Builder master(@Nullable Output<MasterArgs> master) {
            this.master = master;
            return this;
        }
        public Builder master(@Nullable MasterArgs master) {
            this.master = Codegen.ofNullable(master);
            return this;
        }
        public Builder masterAuth(@Nullable Output<MasterAuthArgs> masterAuth) {
            this.masterAuth = masterAuth;
            return this;
        }
        public Builder masterAuth(@Nullable MasterAuthArgs masterAuth) {
            this.masterAuth = Codegen.ofNullable(masterAuth);
            return this;
        }
        public Builder masterAuthorizedNetworksConfig(@Nullable Output<MasterAuthorizedNetworksConfigArgs> masterAuthorizedNetworksConfig) {
            this.masterAuthorizedNetworksConfig = masterAuthorizedNetworksConfig;
            return this;
        }
        public Builder masterAuthorizedNetworksConfig(@Nullable MasterAuthorizedNetworksConfigArgs masterAuthorizedNetworksConfig) {
            this.masterAuthorizedNetworksConfig = Codegen.ofNullable(masterAuthorizedNetworksConfig);
            return this;
        }
        public Builder meshCertificates(@Nullable Output<MeshCertificatesArgs> meshCertificates) {
            this.meshCertificates = meshCertificates;
            return this;
        }
        public Builder meshCertificates(@Nullable MeshCertificatesArgs meshCertificates) {
            this.meshCertificates = Codegen.ofNullable(meshCertificates);
            return this;
        }
        public Builder monitoringConfig(@Nullable Output<MonitoringConfigArgs> monitoringConfig) {
            this.monitoringConfig = monitoringConfig;
            return this;
        }
        public Builder monitoringConfig(@Nullable MonitoringConfigArgs monitoringConfig) {
            this.monitoringConfig = Codegen.ofNullable(monitoringConfig);
            return this;
        }
        public Builder monitoringService(@Nullable Output<String> monitoringService) {
            this.monitoringService = monitoringService;
            return this;
        }
        public Builder monitoringService(@Nullable String monitoringService) {
            this.monitoringService = Codegen.ofNullable(monitoringService);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder network(@Nullable Output<String> network) {
            this.network = network;
            return this;
        }
        public Builder network(@Nullable String network) {
            this.network = Codegen.ofNullable(network);
            return this;
        }
        public Builder networkConfig(@Nullable Output<NetworkConfigArgs> networkConfig) {
            this.networkConfig = networkConfig;
            return this;
        }
        public Builder networkConfig(@Nullable NetworkConfigArgs networkConfig) {
            this.networkConfig = Codegen.ofNullable(networkConfig);
            return this;
        }
        public Builder networkPolicy(@Nullable Output<NetworkPolicyArgs> networkPolicy) {
            this.networkPolicy = networkPolicy;
            return this;
        }
        public Builder networkPolicy(@Nullable NetworkPolicyArgs networkPolicy) {
            this.networkPolicy = Codegen.ofNullable(networkPolicy);
            return this;
        }
        public Builder nodePoolDefaults(@Nullable Output<NodePoolDefaultsArgs> nodePoolDefaults) {
            this.nodePoolDefaults = nodePoolDefaults;
            return this;
        }
        public Builder nodePoolDefaults(@Nullable NodePoolDefaultsArgs nodePoolDefaults) {
            this.nodePoolDefaults = Codegen.ofNullable(nodePoolDefaults);
            return this;
        }
        public Builder nodePools(@Nullable Output<List<NodePoolArgs>> nodePools) {
            this.nodePools = nodePools;
            return this;
        }
        public Builder nodePools(@Nullable List<NodePoolArgs> nodePools) {
            this.nodePools = Codegen.ofNullable(nodePools);
            return this;
        }
        public Builder nodePools(NodePoolArgs... nodePools) {
            return nodePools(List.of(nodePools));
        }
        public Builder notificationConfig(@Nullable Output<NotificationConfigArgs> notificationConfig) {
            this.notificationConfig = notificationConfig;
            return this;
        }
        public Builder notificationConfig(@Nullable NotificationConfigArgs notificationConfig) {
            this.notificationConfig = Codegen.ofNullable(notificationConfig);
            return this;
        }
        public Builder parent(@Nullable Output<String> parent) {
            this.parent = parent;
            return this;
        }
        public Builder parent(@Nullable String parent) {
            this.parent = Codegen.ofNullable(parent);
            return this;
        }
        public Builder podSecurityPolicyConfig(@Nullable Output<PodSecurityPolicyConfigArgs> podSecurityPolicyConfig) {
            this.podSecurityPolicyConfig = podSecurityPolicyConfig;
            return this;
        }
        public Builder podSecurityPolicyConfig(@Nullable PodSecurityPolicyConfigArgs podSecurityPolicyConfig) {
            this.podSecurityPolicyConfig = Codegen.ofNullable(podSecurityPolicyConfig);
            return this;
        }
        public Builder privateClusterConfig(@Nullable Output<PrivateClusterConfigArgs> privateClusterConfig) {
            this.privateClusterConfig = privateClusterConfig;
            return this;
        }
        public Builder privateClusterConfig(@Nullable PrivateClusterConfigArgs privateClusterConfig) {
            this.privateClusterConfig = Codegen.ofNullable(privateClusterConfig);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder releaseChannel(@Nullable Output<ReleaseChannelArgs> releaseChannel) {
            this.releaseChannel = releaseChannel;
            return this;
        }
        public Builder releaseChannel(@Nullable ReleaseChannelArgs releaseChannel) {
            this.releaseChannel = Codegen.ofNullable(releaseChannel);
            return this;
        }
        public Builder resourceLabels(@Nullable Output<Map<String,String>> resourceLabels) {
            this.resourceLabels = resourceLabels;
            return this;
        }
        public Builder resourceLabels(@Nullable Map<String,String> resourceLabels) {
            this.resourceLabels = Codegen.ofNullable(resourceLabels);
            return this;
        }
        public Builder resourceUsageExportConfig(@Nullable Output<ResourceUsageExportConfigArgs> resourceUsageExportConfig) {
            this.resourceUsageExportConfig = resourceUsageExportConfig;
            return this;
        }
        public Builder resourceUsageExportConfig(@Nullable ResourceUsageExportConfigArgs resourceUsageExportConfig) {
            this.resourceUsageExportConfig = Codegen.ofNullable(resourceUsageExportConfig);
            return this;
        }
        public Builder shieldedNodes(@Nullable Output<ShieldedNodesArgs> shieldedNodes) {
            this.shieldedNodes = shieldedNodes;
            return this;
        }
        public Builder shieldedNodes(@Nullable ShieldedNodesArgs shieldedNodes) {
            this.shieldedNodes = Codegen.ofNullable(shieldedNodes);
            return this;
        }
        public Builder subnetwork(@Nullable Output<String> subnetwork) {
            this.subnetwork = subnetwork;
            return this;
        }
        public Builder subnetwork(@Nullable String subnetwork) {
            this.subnetwork = Codegen.ofNullable(subnetwork);
            return this;
        }
        public Builder tpuConfig(@Nullable Output<TpuConfigArgs> tpuConfig) {
            this.tpuConfig = tpuConfig;
            return this;
        }
        public Builder tpuConfig(@Nullable TpuConfigArgs tpuConfig) {
            this.tpuConfig = Codegen.ofNullable(tpuConfig);
            return this;
        }
        public Builder verticalPodAutoscaling(@Nullable Output<VerticalPodAutoscalingArgs> verticalPodAutoscaling) {
            this.verticalPodAutoscaling = verticalPodAutoscaling;
            return this;
        }
        public Builder verticalPodAutoscaling(@Nullable VerticalPodAutoscalingArgs verticalPodAutoscaling) {
            this.verticalPodAutoscaling = Codegen.ofNullable(verticalPodAutoscaling);
            return this;
        }
        public Builder workloadCertificates(@Nullable Output<WorkloadCertificatesArgs> workloadCertificates) {
            this.workloadCertificates = workloadCertificates;
            return this;
        }
        public Builder workloadCertificates(@Nullable WorkloadCertificatesArgs workloadCertificates) {
            this.workloadCertificates = Codegen.ofNullable(workloadCertificates);
            return this;
        }
        public Builder workloadIdentityConfig(@Nullable Output<WorkloadIdentityConfigArgs> workloadIdentityConfig) {
            this.workloadIdentityConfig = workloadIdentityConfig;
            return this;
        }
        public Builder workloadIdentityConfig(@Nullable WorkloadIdentityConfigArgs workloadIdentityConfig) {
            this.workloadIdentityConfig = Codegen.ofNullable(workloadIdentityConfig);
            return this;
        }        public ClusterArgs build() {
            return new ClusterArgs(addonsConfig, authenticatorGroupsConfig, autopilot, autoscaling, binaryAuthorization, clusterIpv4Cidr, clusterTelemetry, conditions, confidentialNodes, databaseEncryption, defaultMaxPodsConstraint, description, enableKubernetesAlpha, identityServiceConfig, initialClusterVersion, ipAllocationPolicy, legacyAbac, location, locations, loggingConfig, loggingService, maintenancePolicy, master, masterAuth, masterAuthorizedNetworksConfig, meshCertificates, monitoringConfig, monitoringService, name, network, networkConfig, networkPolicy, nodePoolDefaults, nodePools, notificationConfig, parent, podSecurityPolicyConfig, privateClusterConfig, project, releaseChannel, resourceLabels, resourceUsageExportConfig, shieldedNodes, subnetwork, tpuConfig, verticalPodAutoscaling, workloadCertificates, workloadIdentityConfig);
        }
    }
}
