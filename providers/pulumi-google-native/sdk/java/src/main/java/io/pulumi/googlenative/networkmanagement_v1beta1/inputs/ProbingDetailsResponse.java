// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.networkmanagement_v1beta1.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.networkmanagement_v1beta1.inputs.EndpointInfoResponse;
import io.pulumi.googlenative.networkmanagement_v1beta1.inputs.LatencyDistributionResponse;
import io.pulumi.googlenative.networkmanagement_v1beta1.inputs.StatusResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


/**
 * Results of active probing from the last run of the test.
 * 
 */
public final class ProbingDetailsResponse extends io.pulumi.resources.InvokeArgs {

    public static final ProbingDetailsResponse Empty = new ProbingDetailsResponse();

    /**
     * The reason probing was aborted.
     * 
     */
    @Import(name="abortCause", required=true)
      private final String abortCause;

    public String getAbortCause() {
        return this.abortCause;
    }

    /**
     * The source and destination endpoints derived from the test input and used for active probing.
     * 
     */
    @Import(name="endpointInfo", required=true)
      private final EndpointInfoResponse endpointInfo;

    public EndpointInfoResponse getEndpointInfo() {
        return this.endpointInfo;
    }

    /**
     * Details about an internal failure or the cancellation of active probing.
     * 
     */
    @Import(name="error", required=true)
      private final StatusResponse error;

    public StatusResponse getError() {
        return this.error;
    }

    /**
     * Latency as measured by active probing in one direction: from the source to the destination endpoint.
     * 
     */
    @Import(name="probingLatency", required=true)
      private final LatencyDistributionResponse probingLatency;

    public LatencyDistributionResponse getProbingLatency() {
        return this.probingLatency;
    }

    /**
     * The overall result of active probing.
     * 
     */
    @Import(name="result", required=true)
      private final String result;

    public String getResult() {
        return this.result;
    }

    /**
     * Number of probes sent.
     * 
     */
    @Import(name="sentProbeCount", required=true)
      private final Integer sentProbeCount;

    public Integer getSentProbeCount() {
        return this.sentProbeCount;
    }

    /**
     * Number of probes that reached the destination.
     * 
     */
    @Import(name="successfulProbeCount", required=true)
      private final Integer successfulProbeCount;

    public Integer getSuccessfulProbeCount() {
        return this.successfulProbeCount;
    }

    /**
     * The time that reachability was assessed through active probing.
     * 
     */
    @Import(name="verifyTime", required=true)
      private final String verifyTime;

    public String getVerifyTime() {
        return this.verifyTime;
    }

    public ProbingDetailsResponse(
        String abortCause,
        EndpointInfoResponse endpointInfo,
        StatusResponse error,
        LatencyDistributionResponse probingLatency,
        String result,
        Integer sentProbeCount,
        Integer successfulProbeCount,
        String verifyTime) {
        this.abortCause = Objects.requireNonNull(abortCause, "expected parameter 'abortCause' to be non-null");
        this.endpointInfo = Objects.requireNonNull(endpointInfo, "expected parameter 'endpointInfo' to be non-null");
        this.error = Objects.requireNonNull(error, "expected parameter 'error' to be non-null");
        this.probingLatency = Objects.requireNonNull(probingLatency, "expected parameter 'probingLatency' to be non-null");
        this.result = Objects.requireNonNull(result, "expected parameter 'result' to be non-null");
        this.sentProbeCount = Objects.requireNonNull(sentProbeCount, "expected parameter 'sentProbeCount' to be non-null");
        this.successfulProbeCount = Objects.requireNonNull(successfulProbeCount, "expected parameter 'successfulProbeCount' to be non-null");
        this.verifyTime = Objects.requireNonNull(verifyTime, "expected parameter 'verifyTime' to be non-null");
    }

    private ProbingDetailsResponse() {
        this.abortCause = null;
        this.endpointInfo = null;
        this.error = null;
        this.probingLatency = null;
        this.result = null;
        this.sentProbeCount = null;
        this.successfulProbeCount = null;
        this.verifyTime = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProbingDetailsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String abortCause;
        private EndpointInfoResponse endpointInfo;
        private StatusResponse error;
        private LatencyDistributionResponse probingLatency;
        private String result;
        private Integer sentProbeCount;
        private Integer successfulProbeCount;
        private String verifyTime;

        public Builder() {
    	      // Empty
        }

        public Builder(ProbingDetailsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.abortCause = defaults.abortCause;
    	      this.endpointInfo = defaults.endpointInfo;
    	      this.error = defaults.error;
    	      this.probingLatency = defaults.probingLatency;
    	      this.result = defaults.result;
    	      this.sentProbeCount = defaults.sentProbeCount;
    	      this.successfulProbeCount = defaults.successfulProbeCount;
    	      this.verifyTime = defaults.verifyTime;
        }

        public Builder abortCause(String abortCause) {
            this.abortCause = Objects.requireNonNull(abortCause);
            return this;
        }
        public Builder endpointInfo(EndpointInfoResponse endpointInfo) {
            this.endpointInfo = Objects.requireNonNull(endpointInfo);
            return this;
        }
        public Builder error(StatusResponse error) {
            this.error = Objects.requireNonNull(error);
            return this;
        }
        public Builder probingLatency(LatencyDistributionResponse probingLatency) {
            this.probingLatency = Objects.requireNonNull(probingLatency);
            return this;
        }
        public Builder result(String result) {
            this.result = Objects.requireNonNull(result);
            return this;
        }
        public Builder sentProbeCount(Integer sentProbeCount) {
            this.sentProbeCount = Objects.requireNonNull(sentProbeCount);
            return this;
        }
        public Builder successfulProbeCount(Integer successfulProbeCount) {
            this.successfulProbeCount = Objects.requireNonNull(successfulProbeCount);
            return this;
        }
        public Builder verifyTime(String verifyTime) {
            this.verifyTime = Objects.requireNonNull(verifyTime);
            return this;
        }        public ProbingDetailsResponse build() {
            return new ProbingDetailsResponse(abortCause, endpointInfo, error, probingLatency, result, sentProbeCount, successfulProbeCount, verifyTime);
        }
    }
}
