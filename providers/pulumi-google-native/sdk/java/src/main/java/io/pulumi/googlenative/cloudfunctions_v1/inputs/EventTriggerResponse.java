// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudfunctions_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.cloudfunctions_v1.inputs.FailurePolicyResponse;
import java.lang.String;
import java.util.Objects;


public final class EventTriggerResponse extends io.pulumi.resources.InvokeArgs {

    public static final EventTriggerResponse Empty = new EventTriggerResponse();

    @InputImport(name="eventType", required=true)
    private final String eventType;

    public String getEventType() {
        return this.eventType;
    }

    @InputImport(name="failurePolicy", required=true)
    private final FailurePolicyResponse failurePolicy;

    public FailurePolicyResponse getFailurePolicy() {
        return this.failurePolicy;
    }

    @InputImport(name="resource", required=true)
    private final String resource;

    public String getResource() {
        return this.resource;
    }

    @InputImport(name="service", required=true)
    private final String service;

    public String getService() {
        return this.service;
    }

    public EventTriggerResponse(
        String eventType,
        FailurePolicyResponse failurePolicy,
        String resource,
        String service) {
        this.eventType = Objects.requireNonNull(eventType, "expected parameter 'eventType' to be non-null");
        this.failurePolicy = Objects.requireNonNull(failurePolicy, "expected parameter 'failurePolicy' to be non-null");
        this.resource = Objects.requireNonNull(resource, "expected parameter 'resource' to be non-null");
        this.service = Objects.requireNonNull(service, "expected parameter 'service' to be non-null");
    }

    private EventTriggerResponse() {
        this.eventType = null;
        this.failurePolicy = null;
        this.resource = null;
        this.service = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventTriggerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String eventType;
        private FailurePolicyResponse failurePolicy;
        private String resource;
        private String service;

        public Builder() {
    	      // Empty
        }

        public Builder(EventTriggerResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.eventType = defaults.eventType;
    	      this.failurePolicy = defaults.failurePolicy;
    	      this.resource = defaults.resource;
    	      this.service = defaults.service;
        }

        public Builder setEventType(String eventType) {
            this.eventType = Objects.requireNonNull(eventType);
            return this;
        }

        public Builder setFailurePolicy(FailurePolicyResponse failurePolicy) {
            this.failurePolicy = Objects.requireNonNull(failurePolicy);
            return this;
        }

        public Builder setResource(String resource) {
            this.resource = Objects.requireNonNull(resource);
            return this;
        }

        public Builder setService(String service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }

        public EventTriggerResponse build() {
            return new EventTriggerResponse(eventType, failurePolicy, resource, service);
        }
    }
}
