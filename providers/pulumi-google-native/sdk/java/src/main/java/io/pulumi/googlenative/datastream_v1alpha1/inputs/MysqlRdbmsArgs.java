// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datastream_v1alpha1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.datastream_v1alpha1.inputs.MysqlDatabaseArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * MySQL database structure
 * 
 */
public final class MysqlRdbmsArgs extends io.pulumi.resources.ResourceArgs {

    public static final MysqlRdbmsArgs Empty = new MysqlRdbmsArgs();

    /**
     * Mysql databases on the server
     * 
     */
    @InputImport(name="mysqlDatabases")
    private final @Nullable Input<List<MysqlDatabaseArgs>> mysqlDatabases;

    public Input<List<MysqlDatabaseArgs>> getMysqlDatabases() {
        return this.mysqlDatabases == null ? Input.empty() : this.mysqlDatabases;
    }

    public MysqlRdbmsArgs(@Nullable Input<List<MysqlDatabaseArgs>> mysqlDatabases) {
        this.mysqlDatabases = mysqlDatabases;
    }

    private MysqlRdbmsArgs() {
        this.mysqlDatabases = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MysqlRdbmsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<MysqlDatabaseArgs>> mysqlDatabases;

        public Builder() {
    	      // Empty
        }

        public Builder(MysqlRdbmsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mysqlDatabases = defaults.mysqlDatabases;
        }

        public Builder setMysqlDatabases(@Nullable Input<List<MysqlDatabaseArgs>> mysqlDatabases) {
            this.mysqlDatabases = mysqlDatabases;
            return this;
        }

        public Builder setMysqlDatabases(@Nullable List<MysqlDatabaseArgs> mysqlDatabases) {
            this.mysqlDatabases = Input.ofNullable(mysqlDatabases);
            return this;
        }

        public MysqlRdbmsArgs build() {
            return new MysqlRdbmsArgs(mysqlDatabases);
        }
    }
}
