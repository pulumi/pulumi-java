// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.testing_v1.enums.AndroidInstrumentationTestOrchestratorOption;
import io.pulumi.googlenative.testing_v1.inputs.AppBundleArgs;
import io.pulumi.googlenative.testing_v1.inputs.FileReferenceArgs;
import io.pulumi.googlenative.testing_v1.inputs.ShardingOptionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AndroidInstrumentationTestArgs extends io.pulumi.resources.ResourceArgs {

    public static final AndroidInstrumentationTestArgs Empty = new AndroidInstrumentationTestArgs();

    @InputImport(name="appApk")
    private final @Nullable Input<FileReferenceArgs> appApk;

    public Input<FileReferenceArgs> getAppApk() {
        return this.appApk == null ? Input.empty() : this.appApk;
    }

    @InputImport(name="appBundle")
    private final @Nullable Input<AppBundleArgs> appBundle;

    public Input<AppBundleArgs> getAppBundle() {
        return this.appBundle == null ? Input.empty() : this.appBundle;
    }

    @InputImport(name="appPackageId")
    private final @Nullable Input<String> appPackageId;

    public Input<String> getAppPackageId() {
        return this.appPackageId == null ? Input.empty() : this.appPackageId;
    }

    @InputImport(name="orchestratorOption")
    private final @Nullable Input<AndroidInstrumentationTestOrchestratorOption> orchestratorOption;

    public Input<AndroidInstrumentationTestOrchestratorOption> getOrchestratorOption() {
        return this.orchestratorOption == null ? Input.empty() : this.orchestratorOption;
    }

    @InputImport(name="shardingOption")
    private final @Nullable Input<ShardingOptionArgs> shardingOption;

    public Input<ShardingOptionArgs> getShardingOption() {
        return this.shardingOption == null ? Input.empty() : this.shardingOption;
    }

    @InputImport(name="testApk", required=true)
    private final Input<FileReferenceArgs> testApk;

    public Input<FileReferenceArgs> getTestApk() {
        return this.testApk;
    }

    @InputImport(name="testPackageId")
    private final @Nullable Input<String> testPackageId;

    public Input<String> getTestPackageId() {
        return this.testPackageId == null ? Input.empty() : this.testPackageId;
    }

    @InputImport(name="testRunnerClass")
    private final @Nullable Input<String> testRunnerClass;

    public Input<String> getTestRunnerClass() {
        return this.testRunnerClass == null ? Input.empty() : this.testRunnerClass;
    }

    @InputImport(name="testTargets")
    private final @Nullable Input<List<String>> testTargets;

    public Input<List<String>> getTestTargets() {
        return this.testTargets == null ? Input.empty() : this.testTargets;
    }

    public AndroidInstrumentationTestArgs(
        @Nullable Input<FileReferenceArgs> appApk,
        @Nullable Input<AppBundleArgs> appBundle,
        @Nullable Input<String> appPackageId,
        @Nullable Input<AndroidInstrumentationTestOrchestratorOption> orchestratorOption,
        @Nullable Input<ShardingOptionArgs> shardingOption,
        Input<FileReferenceArgs> testApk,
        @Nullable Input<String> testPackageId,
        @Nullable Input<String> testRunnerClass,
        @Nullable Input<List<String>> testTargets) {
        this.appApk = appApk;
        this.appBundle = appBundle;
        this.appPackageId = appPackageId;
        this.orchestratorOption = orchestratorOption;
        this.shardingOption = shardingOption;
        this.testApk = Objects.requireNonNull(testApk, "expected parameter 'testApk' to be non-null");
        this.testPackageId = testPackageId;
        this.testRunnerClass = testRunnerClass;
        this.testTargets = testTargets;
    }

    private AndroidInstrumentationTestArgs() {
        this.appApk = Input.empty();
        this.appBundle = Input.empty();
        this.appPackageId = Input.empty();
        this.orchestratorOption = Input.empty();
        this.shardingOption = Input.empty();
        this.testApk = Input.empty();
        this.testPackageId = Input.empty();
        this.testRunnerClass = Input.empty();
        this.testTargets = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AndroidInstrumentationTestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<FileReferenceArgs> appApk;
        private @Nullable Input<AppBundleArgs> appBundle;
        private @Nullable Input<String> appPackageId;
        private @Nullable Input<AndroidInstrumentationTestOrchestratorOption> orchestratorOption;
        private @Nullable Input<ShardingOptionArgs> shardingOption;
        private Input<FileReferenceArgs> testApk;
        private @Nullable Input<String> testPackageId;
        private @Nullable Input<String> testRunnerClass;
        private @Nullable Input<List<String>> testTargets;

        public Builder() {
    	      // Empty
        }

        public Builder(AndroidInstrumentationTestArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appApk = defaults.appApk;
    	      this.appBundle = defaults.appBundle;
    	      this.appPackageId = defaults.appPackageId;
    	      this.orchestratorOption = defaults.orchestratorOption;
    	      this.shardingOption = defaults.shardingOption;
    	      this.testApk = defaults.testApk;
    	      this.testPackageId = defaults.testPackageId;
    	      this.testRunnerClass = defaults.testRunnerClass;
    	      this.testTargets = defaults.testTargets;
        }

        public Builder setAppApk(@Nullable Input<FileReferenceArgs> appApk) {
            this.appApk = appApk;
            return this;
        }

        public Builder setAppApk(@Nullable FileReferenceArgs appApk) {
            this.appApk = Input.ofNullable(appApk);
            return this;
        }

        public Builder setAppBundle(@Nullable Input<AppBundleArgs> appBundle) {
            this.appBundle = appBundle;
            return this;
        }

        public Builder setAppBundle(@Nullable AppBundleArgs appBundle) {
            this.appBundle = Input.ofNullable(appBundle);
            return this;
        }

        public Builder setAppPackageId(@Nullable Input<String> appPackageId) {
            this.appPackageId = appPackageId;
            return this;
        }

        public Builder setAppPackageId(@Nullable String appPackageId) {
            this.appPackageId = Input.ofNullable(appPackageId);
            return this;
        }

        public Builder setOrchestratorOption(@Nullable Input<AndroidInstrumentationTestOrchestratorOption> orchestratorOption) {
            this.orchestratorOption = orchestratorOption;
            return this;
        }

        public Builder setOrchestratorOption(@Nullable AndroidInstrumentationTestOrchestratorOption orchestratorOption) {
            this.orchestratorOption = Input.ofNullable(orchestratorOption);
            return this;
        }

        public Builder setShardingOption(@Nullable Input<ShardingOptionArgs> shardingOption) {
            this.shardingOption = shardingOption;
            return this;
        }

        public Builder setShardingOption(@Nullable ShardingOptionArgs shardingOption) {
            this.shardingOption = Input.ofNullable(shardingOption);
            return this;
        }

        public Builder setTestApk(Input<FileReferenceArgs> testApk) {
            this.testApk = Objects.requireNonNull(testApk);
            return this;
        }

        public Builder setTestApk(FileReferenceArgs testApk) {
            this.testApk = Input.of(Objects.requireNonNull(testApk));
            return this;
        }

        public Builder setTestPackageId(@Nullable Input<String> testPackageId) {
            this.testPackageId = testPackageId;
            return this;
        }

        public Builder setTestPackageId(@Nullable String testPackageId) {
            this.testPackageId = Input.ofNullable(testPackageId);
            return this;
        }

        public Builder setTestRunnerClass(@Nullable Input<String> testRunnerClass) {
            this.testRunnerClass = testRunnerClass;
            return this;
        }

        public Builder setTestRunnerClass(@Nullable String testRunnerClass) {
            this.testRunnerClass = Input.ofNullable(testRunnerClass);
            return this;
        }

        public Builder setTestTargets(@Nullable Input<List<String>> testTargets) {
            this.testTargets = testTargets;
            return this;
        }

        public Builder setTestTargets(@Nullable List<String> testTargets) {
            this.testTargets = Input.ofNullable(testTargets);
            return this;
        }

        public AndroidInstrumentationTestArgs build() {
            return new AndroidInstrumentationTestArgs(appApk, appBundle, appPackageId, orchestratorOption, shardingOption, testApk, testPackageId, testRunnerClass, testTargets);
        }
    }
}
