// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.osconfig_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.osconfig_v1.outputs.WeekDayOfMonthResponse;
import java.lang.Integer;
import java.util.Objects;

@OutputCustomType
public final class MonthlyScheduleResponse {
    private final Integer monthDay;
    private final WeekDayOfMonthResponse weekDayOfMonth;

    @OutputCustomType.Constructor({"monthDay","weekDayOfMonth"})
    private MonthlyScheduleResponse(
        Integer monthDay,
        WeekDayOfMonthResponse weekDayOfMonth) {
        this.monthDay = Objects.requireNonNull(monthDay);
        this.weekDayOfMonth = Objects.requireNonNull(weekDayOfMonth);
    }

    public Integer getMonthDay() {
        return this.monthDay;
    }
    public WeekDayOfMonthResponse getWeekDayOfMonth() {
        return this.weekDayOfMonth;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonthlyScheduleResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer monthDay;
        private WeekDayOfMonthResponse weekDayOfMonth;

        public Builder() {
    	      // Empty
        }

        public Builder(MonthlyScheduleResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.monthDay = defaults.monthDay;
    	      this.weekDayOfMonth = defaults.weekDayOfMonth;
        }

        public Builder setMonthDay(Integer monthDay) {
            this.monthDay = Objects.requireNonNull(monthDay);
            return this;
        }

        public Builder setWeekDayOfMonth(WeekDayOfMonthResponse weekDayOfMonth) {
            this.weekDayOfMonth = Objects.requireNonNull(weekDayOfMonth);
            return this;
        }

        public MonthlyScheduleResponse build() {
            return new MonthlyScheduleResponse(monthDay, weekDayOfMonth);
        }
    }
}
