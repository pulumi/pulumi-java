// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_alpha.outputs.AcceleratorConfigResponse;
import io.pulumi.googlenative.compute_alpha.outputs.AdvancedMachineFeaturesResponse;
import io.pulumi.googlenative.compute_alpha.outputs.AttachedDiskResponse;
import io.pulumi.googlenative.compute_alpha.outputs.ConfidentialInstanceConfigResponse;
import io.pulumi.googlenative.compute_alpha.outputs.CustomerEncryptionKeyResponse;
import io.pulumi.googlenative.compute_alpha.outputs.DisplayDeviceResponse;
import io.pulumi.googlenative.compute_alpha.outputs.InstanceParamsResponse;
import io.pulumi.googlenative.compute_alpha.outputs.MetadataResponse;
import io.pulumi.googlenative.compute_alpha.outputs.NetworkInterfaceResponse;
import io.pulumi.googlenative.compute_alpha.outputs.NetworkPerformanceConfigResponse;
import io.pulumi.googlenative.compute_alpha.outputs.ReservationAffinityResponse;
import io.pulumi.googlenative.compute_alpha.outputs.ResourceStatusResponse;
import io.pulumi.googlenative.compute_alpha.outputs.SchedulingResponse;
import io.pulumi.googlenative.compute_alpha.outputs.ServiceAccountResponse;
import io.pulumi.googlenative.compute_alpha.outputs.ShieldedInstanceConfigResponse;
import io.pulumi.googlenative.compute_alpha.outputs.ShieldedInstanceIntegrityPolicyResponse;
import io.pulumi.googlenative.compute_alpha.outputs.ShieldedVmConfigResponse;
import io.pulumi.googlenative.compute_alpha.outputs.ShieldedVmIntegrityPolicyResponse;
import io.pulumi.googlenative.compute_alpha.outputs.TagsResponse;
import io.pulumi.googlenative.compute_alpha.outputs.UpcomingMaintenanceResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetInstanceResult {
    /**
     * Controls for advanced machine-related behavior features.
     * 
     */
    private final AdvancedMachineFeaturesResponse advancedMachineFeatures;
    /**
     * Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding .
     * 
     */
    private final Boolean canIpForward;
    private final ConfidentialInstanceConfigResponse confidentialInstanceConfig;
    /**
     * The CPU platform used by this instance.
     * 
     */
    private final String cpuPlatform;
    /**
     * Creation timestamp in RFC3339 text format.
     * 
     */
    private final String creationTimestamp;
    /**
     * Whether the resource should be protected against deletion.
     * 
     */
    private final Boolean deletionProtection;
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    private final String description;
    /**
     * Array of disks associated with this instance. Persistent disks must be created before you can assign them.
     * 
     */
    private final List<AttachedDiskResponse> disks;
    /**
     * Enables display device for the instance.
     * 
     */
    private final DisplayDeviceResponse displayDevice;
    /**
     * Specifies whether the disks restored from source snapshots or source machine image should erase Windows specific VSS signature.
     * 
     */
    private final Boolean eraseWindowsVssSignature;
    /**
     * Specifies a fingerprint for this resource, which is essentially a hash of the instance's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update the instance. You must always provide an up-to-date fingerprint hash in order to update the instance. To see the latest fingerprint, make get() request to the instance.
     * 
     */
    private final String fingerprint;
    /**
     * A list of the type and count of accelerator cards attached to the instance.
     * 
     */
    private final List<AcceleratorConfigResponse> guestAccelerators;
    /**
     * Specifies the hostname of the instance. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
     * 
     */
    private final String hostname;
    /**
     * Encrypts or decrypts data for an instance with a customer-supplied encryption key. If you are creating a new instance, this field encrypts the local SSD and in-memory contents of the instance using a key that you provide. If you are restarting an instance protected with a customer-supplied encryption key, you must provide the correct key in order to successfully restart the instance. If you do not provide an encryption key when creating the instance, then the local SSD and in-memory contents will be encrypted using an automatically generated key and you do not need to provide a key to start the instance later. Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt local SSDs and in-memory content in a managed instance group.
     * 
     */
    private final CustomerEncryptionKeyResponse instanceEncryptionKey;
    /**
     * KeyRevocationActionType of the instance.
     * 
     */
    private final String keyRevocationActionType;
    /**
     * Type of the resource. Always compute#instance for instances.
     * 
     */
    private final String kind;
    /**
     * A fingerprint for this request, which is essentially a hash of the label's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make get() request to the instance.
     * 
     */
    private final String labelFingerprint;
    /**
     * Labels to apply to this instance. These can be later modified by the setLabels method.
     * 
     */
    private final Map<String,String> labels;
    /**
     * Last start timestamp in RFC3339 text format.
     * 
     */
    private final String lastStartTimestamp;
    /**
     * Last stop timestamp in RFC3339 text format.
     * 
     */
    private final String lastStopTimestamp;
    /**
     * Last suspended timestamp in RFC3339 text format.
     * 
     */
    private final String lastSuspendedTimestamp;
    /**
     * Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types.
     * 
     */
    private final String machineType;
    /**
     * The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
     * 
     */
    private final MetadataResponse metadata;
    /**
     * Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge".
     * 
     */
    private final String minCpuPlatform;
    /**
     * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    private final String name;
    /**
     * An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.
     * 
     */
    private final List<NetworkInterfaceResponse> networkInterfaces;
    private final NetworkPerformanceConfigResponse networkPerformanceConfig;
    /**
     * Input only. [Input Only] Additional params passed with the request, but not persisted as part of resource payload.
     * 
     */
    private final InstanceParamsResponse params;
    /**
     * PostKeyRevocationActionType of the instance.
     * 
     */
    private final String postKeyRevocationActionType;
    /**
     * Total amount of preserved state for SUSPENDED instances. Read-only in the api.
     * 
     */
    private final String preservedStateSizeGb;
    /**
     * The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.
     * 
     */
    private final String privateIpv6GoogleAccess;
    /**
     * Specifies the reservations that this instance can consume from.
     * 
     */
    private final ReservationAffinityResponse reservationAffinity;
    /**
     * Resource policies applied to this instance.
     * 
     */
    private final List<String> resourcePolicies;
    /**
     * Specifies values set for instance attributes as compared to the values requested by user in the corresponding input only field.
     * 
     */
    private final ResourceStatusResponse resourceStatus;
    /**
     * Reserved for future use.
     * 
     */
    private final Boolean satisfiesPzs;
    /**
     * Sets the scheduling options for this instance.
     * 
     */
    private final SchedulingResponse scheduling;
    /**
     * [Input Only] Secure tags to apply to this instance. These can be later modified by the update method. Maximum number of secure tags allowed is 50.
     * 
     */
    private final List<String> secureTags;
    /**
     * Server-defined URL for this resource.
     * 
     */
    private final String selfLink;
    /**
     * Server-defined URL for this resource with the resource id.
     * 
     */
    private final String selfLinkWithId;
    /**
     * A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
     * 
     */
    private final List<ServiceAccountResponse> serviceAccounts;
    private final ShieldedInstanceConfigResponse shieldedInstanceConfig;
    private final ShieldedInstanceIntegrityPolicyResponse shieldedInstanceIntegrityPolicy;
    /**
     * Deprecating, please use shielded_instance_config.
     * 
     */
    private final ShieldedVmConfigResponse shieldedVmConfig;
    /**
     * Deprecating, please use shielded_instance_integrity_policy.
     * 
     */
    private final ShieldedVmIntegrityPolicyResponse shieldedVmIntegrityPolicy;
    /**
     * Source machine image
     * 
     */
    private final String sourceMachineImage;
    /**
     * Source machine image encryption key when creating an instance from a machine image.
     * 
     */
    private final CustomerEncryptionKeyResponse sourceMachineImageEncryptionKey;
    /**
     * Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.
     * 
     */
    private final Boolean startRestricted;
    /**
     * The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.
     * 
     */
    private final String status;
    /**
     * An optional, human-readable explanation of the status.
     * 
     */
    private final String statusMessage;
    /**
     * Tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035. Multiple tags can be specified via the 'tags.items' field.
     * 
     */
    private final TagsResponse tags;
    /**
     * Specifies upcoming maintenance for the instance.
     * 
     */
    private final UpcomingMaintenanceResponse upcomingMaintenance;
    /**
     * URL of the zone where the instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * 
     */
    private final String zone;

    @OutputCustomType.Constructor({"advancedMachineFeatures","canIpForward","confidentialInstanceConfig","cpuPlatform","creationTimestamp","deletionProtection","description","disks","displayDevice","eraseWindowsVssSignature","fingerprint","guestAccelerators","hostname","instanceEncryptionKey","keyRevocationActionType","kind","labelFingerprint","labels","lastStartTimestamp","lastStopTimestamp","lastSuspendedTimestamp","machineType","metadata","minCpuPlatform","name","networkInterfaces","networkPerformanceConfig","params","postKeyRevocationActionType","preservedStateSizeGb","privateIpv6GoogleAccess","reservationAffinity","resourcePolicies","resourceStatus","satisfiesPzs","scheduling","secureTags","selfLink","selfLinkWithId","serviceAccounts","shieldedInstanceConfig","shieldedInstanceIntegrityPolicy","shieldedVmConfig","shieldedVmIntegrityPolicy","sourceMachineImage","sourceMachineImageEncryptionKey","startRestricted","status","statusMessage","tags","upcomingMaintenance","zone"})
    private GetInstanceResult(
        AdvancedMachineFeaturesResponse advancedMachineFeatures,
        Boolean canIpForward,
        ConfidentialInstanceConfigResponse confidentialInstanceConfig,
        String cpuPlatform,
        String creationTimestamp,
        Boolean deletionProtection,
        String description,
        List<AttachedDiskResponse> disks,
        DisplayDeviceResponse displayDevice,
        Boolean eraseWindowsVssSignature,
        String fingerprint,
        List<AcceleratorConfigResponse> guestAccelerators,
        String hostname,
        CustomerEncryptionKeyResponse instanceEncryptionKey,
        String keyRevocationActionType,
        String kind,
        String labelFingerprint,
        Map<String,String> labels,
        String lastStartTimestamp,
        String lastStopTimestamp,
        String lastSuspendedTimestamp,
        String machineType,
        MetadataResponse metadata,
        String minCpuPlatform,
        String name,
        List<NetworkInterfaceResponse> networkInterfaces,
        NetworkPerformanceConfigResponse networkPerformanceConfig,
        InstanceParamsResponse params,
        String postKeyRevocationActionType,
        String preservedStateSizeGb,
        String privateIpv6GoogleAccess,
        ReservationAffinityResponse reservationAffinity,
        List<String> resourcePolicies,
        ResourceStatusResponse resourceStatus,
        Boolean satisfiesPzs,
        SchedulingResponse scheduling,
        List<String> secureTags,
        String selfLink,
        String selfLinkWithId,
        List<ServiceAccountResponse> serviceAccounts,
        ShieldedInstanceConfigResponse shieldedInstanceConfig,
        ShieldedInstanceIntegrityPolicyResponse shieldedInstanceIntegrityPolicy,
        ShieldedVmConfigResponse shieldedVmConfig,
        ShieldedVmIntegrityPolicyResponse shieldedVmIntegrityPolicy,
        String sourceMachineImage,
        CustomerEncryptionKeyResponse sourceMachineImageEncryptionKey,
        Boolean startRestricted,
        String status,
        String statusMessage,
        TagsResponse tags,
        UpcomingMaintenanceResponse upcomingMaintenance,
        String zone) {
        this.advancedMachineFeatures = advancedMachineFeatures;
        this.canIpForward = canIpForward;
        this.confidentialInstanceConfig = confidentialInstanceConfig;
        this.cpuPlatform = cpuPlatform;
        this.creationTimestamp = creationTimestamp;
        this.deletionProtection = deletionProtection;
        this.description = description;
        this.disks = disks;
        this.displayDevice = displayDevice;
        this.eraseWindowsVssSignature = eraseWindowsVssSignature;
        this.fingerprint = fingerprint;
        this.guestAccelerators = guestAccelerators;
        this.hostname = hostname;
        this.instanceEncryptionKey = instanceEncryptionKey;
        this.keyRevocationActionType = keyRevocationActionType;
        this.kind = kind;
        this.labelFingerprint = labelFingerprint;
        this.labels = labels;
        this.lastStartTimestamp = lastStartTimestamp;
        this.lastStopTimestamp = lastStopTimestamp;
        this.lastSuspendedTimestamp = lastSuspendedTimestamp;
        this.machineType = machineType;
        this.metadata = metadata;
        this.minCpuPlatform = minCpuPlatform;
        this.name = name;
        this.networkInterfaces = networkInterfaces;
        this.networkPerformanceConfig = networkPerformanceConfig;
        this.params = params;
        this.postKeyRevocationActionType = postKeyRevocationActionType;
        this.preservedStateSizeGb = preservedStateSizeGb;
        this.privateIpv6GoogleAccess = privateIpv6GoogleAccess;
        this.reservationAffinity = reservationAffinity;
        this.resourcePolicies = resourcePolicies;
        this.resourceStatus = resourceStatus;
        this.satisfiesPzs = satisfiesPzs;
        this.scheduling = scheduling;
        this.secureTags = secureTags;
        this.selfLink = selfLink;
        this.selfLinkWithId = selfLinkWithId;
        this.serviceAccounts = serviceAccounts;
        this.shieldedInstanceConfig = shieldedInstanceConfig;
        this.shieldedInstanceIntegrityPolicy = shieldedInstanceIntegrityPolicy;
        this.shieldedVmConfig = shieldedVmConfig;
        this.shieldedVmIntegrityPolicy = shieldedVmIntegrityPolicy;
        this.sourceMachineImage = sourceMachineImage;
        this.sourceMachineImageEncryptionKey = sourceMachineImageEncryptionKey;
        this.startRestricted = startRestricted;
        this.status = status;
        this.statusMessage = statusMessage;
        this.tags = tags;
        this.upcomingMaintenance = upcomingMaintenance;
        this.zone = zone;
    }

    /**
     * Controls for advanced machine-related behavior features.
     * 
    */
    public AdvancedMachineFeaturesResponse getAdvancedMachineFeatures() {
        return this.advancedMachineFeatures;
    }
    /**
     * Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding .
     * 
    */
    public Boolean getCanIpForward() {
        return this.canIpForward;
    }
    public ConfidentialInstanceConfigResponse getConfidentialInstanceConfig() {
        return this.confidentialInstanceConfig;
    }
    /**
     * The CPU platform used by this instance.
     * 
    */
    public String getCpuPlatform() {
        return this.cpuPlatform;
    }
    /**
     * Creation timestamp in RFC3339 text format.
     * 
    */
    public String getCreationTimestamp() {
        return this.creationTimestamp;
    }
    /**
     * Whether the resource should be protected against deletion.
     * 
    */
    public Boolean getDeletionProtection() {
        return this.deletionProtection;
    }
    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
    */
    public String getDescription() {
        return this.description;
    }
    /**
     * Array of disks associated with this instance. Persistent disks must be created before you can assign them.
     * 
    */
    public List<AttachedDiskResponse> getDisks() {
        return this.disks;
    }
    /**
     * Enables display device for the instance.
     * 
    */
    public DisplayDeviceResponse getDisplayDevice() {
        return this.displayDevice;
    }
    /**
     * Specifies whether the disks restored from source snapshots or source machine image should erase Windows specific VSS signature.
     * 
    */
    public Boolean getEraseWindowsVssSignature() {
        return this.eraseWindowsVssSignature;
    }
    /**
     * Specifies a fingerprint for this resource, which is essentially a hash of the instance's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update the instance. You must always provide an up-to-date fingerprint hash in order to update the instance. To see the latest fingerprint, make get() request to the instance.
     * 
    */
    public String getFingerprint() {
        return this.fingerprint;
    }
    /**
     * A list of the type and count of accelerator cards attached to the instance.
     * 
    */
    public List<AcceleratorConfigResponse> getGuestAccelerators() {
        return this.guestAccelerators;
    }
    /**
     * Specifies the hostname of the instance. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
     * 
    */
    public String getHostname() {
        return this.hostname;
    }
    /**
     * Encrypts or decrypts data for an instance with a customer-supplied encryption key. If you are creating a new instance, this field encrypts the local SSD and in-memory contents of the instance using a key that you provide. If you are restarting an instance protected with a customer-supplied encryption key, you must provide the correct key in order to successfully restart the instance. If you do not provide an encryption key when creating the instance, then the local SSD and in-memory contents will be encrypted using an automatically generated key and you do not need to provide a key to start the instance later. Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt local SSDs and in-memory content in a managed instance group.
     * 
    */
    public CustomerEncryptionKeyResponse getInstanceEncryptionKey() {
        return this.instanceEncryptionKey;
    }
    /**
     * KeyRevocationActionType of the instance.
     * 
    */
    public String getKeyRevocationActionType() {
        return this.keyRevocationActionType;
    }
    /**
     * Type of the resource. Always compute#instance for instances.
     * 
    */
    public String getKind() {
        return this.kind;
    }
    /**
     * A fingerprint for this request, which is essentially a hash of the label's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make get() request to the instance.
     * 
    */
    public String getLabelFingerprint() {
        return this.labelFingerprint;
    }
    /**
     * Labels to apply to this instance. These can be later modified by the setLabels method.
     * 
    */
    public Map<String,String> getLabels() {
        return this.labels;
    }
    /**
     * Last start timestamp in RFC3339 text format.
     * 
    */
    public String getLastStartTimestamp() {
        return this.lastStartTimestamp;
    }
    /**
     * Last stop timestamp in RFC3339 text format.
     * 
    */
    public String getLastStopTimestamp() {
        return this.lastStopTimestamp;
    }
    /**
     * Last suspended timestamp in RFC3339 text format.
     * 
    */
    public String getLastSuspendedTimestamp() {
        return this.lastSuspendedTimestamp;
    }
    /**
     * Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types.
     * 
    */
    public String getMachineType() {
        return this.machineType;
    }
    /**
     * The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
     * 
    */
    public MetadataResponse getMetadata() {
        return this.metadata;
    }
    /**
     * Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge".
     * 
    */
    public String getMinCpuPlatform() {
        return this.minCpuPlatform;
    }
    /**
     * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.
     * 
    */
    public List<NetworkInterfaceResponse> getNetworkInterfaces() {
        return this.networkInterfaces;
    }
    public NetworkPerformanceConfigResponse getNetworkPerformanceConfig() {
        return this.networkPerformanceConfig;
    }
    /**
     * Input only. [Input Only] Additional params passed with the request, but not persisted as part of resource payload.
     * 
    */
    public InstanceParamsResponse getParams() {
        return this.params;
    }
    /**
     * PostKeyRevocationActionType of the instance.
     * 
    */
    public String getPostKeyRevocationActionType() {
        return this.postKeyRevocationActionType;
    }
    /**
     * Total amount of preserved state for SUSPENDED instances. Read-only in the api.
     * 
    */
    public String getPreservedStateSizeGb() {
        return this.preservedStateSizeGb;
    }
    /**
     * The private IPv6 google access type for the VM. If not specified, use INHERIT_FROM_SUBNETWORK as default.
     * 
    */
    public String getPrivateIpv6GoogleAccess() {
        return this.privateIpv6GoogleAccess;
    }
    /**
     * Specifies the reservations that this instance can consume from.
     * 
    */
    public ReservationAffinityResponse getReservationAffinity() {
        return this.reservationAffinity;
    }
    /**
     * Resource policies applied to this instance.
     * 
    */
    public List<String> getResourcePolicies() {
        return this.resourcePolicies;
    }
    /**
     * Specifies values set for instance attributes as compared to the values requested by user in the corresponding input only field.
     * 
    */
    public ResourceStatusResponse getResourceStatus() {
        return this.resourceStatus;
    }
    /**
     * Reserved for future use.
     * 
    */
    public Boolean getSatisfiesPzs() {
        return this.satisfiesPzs;
    }
    /**
     * Sets the scheduling options for this instance.
     * 
    */
    public SchedulingResponse getScheduling() {
        return this.scheduling;
    }
    /**
     * [Input Only] Secure tags to apply to this instance. These can be later modified by the update method. Maximum number of secure tags allowed is 50.
     * 
    */
    public List<String> getSecureTags() {
        return this.secureTags;
    }
    /**
     * Server-defined URL for this resource.
     * 
    */
    public String getSelfLink() {
        return this.selfLink;
    }
    /**
     * Server-defined URL for this resource with the resource id.
     * 
    */
    public String getSelfLinkWithId() {
        return this.selfLinkWithId;
    }
    /**
     * A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
     * 
    */
    public List<ServiceAccountResponse> getServiceAccounts() {
        return this.serviceAccounts;
    }
    public ShieldedInstanceConfigResponse getShieldedInstanceConfig() {
        return this.shieldedInstanceConfig;
    }
    public ShieldedInstanceIntegrityPolicyResponse getShieldedInstanceIntegrityPolicy() {
        return this.shieldedInstanceIntegrityPolicy;
    }
    /**
     * Deprecating, please use shielded_instance_config.
     * 
    */
    public ShieldedVmConfigResponse getShieldedVmConfig() {
        return this.shieldedVmConfig;
    }
    /**
     * Deprecating, please use shielded_instance_integrity_policy.
     * 
    */
    public ShieldedVmIntegrityPolicyResponse getShieldedVmIntegrityPolicy() {
        return this.shieldedVmIntegrityPolicy;
    }
    /**
     * Source machine image
     * 
    */
    public String getSourceMachineImage() {
        return this.sourceMachineImage;
    }
    /**
     * Source machine image encryption key when creating an instance from a machine image.
     * 
    */
    public CustomerEncryptionKeyResponse getSourceMachineImageEncryptionKey() {
        return this.sourceMachineImageEncryptionKey;
    }
    /**
     * Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.
     * 
    */
    public Boolean getStartRestricted() {
        return this.startRestricted;
    }
    /**
     * The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see Instance life cycle.
     * 
    */
    public String getStatus() {
        return this.status;
    }
    /**
     * An optional, human-readable explanation of the status.
     * 
    */
    public String getStatusMessage() {
        return this.statusMessage;
    }
    /**
     * Tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035. Multiple tags can be specified via the 'tags.items' field.
     * 
    */
    public TagsResponse getTags() {
        return this.tags;
    }
    /**
     * Specifies upcoming maintenance for the instance.
     * 
    */
    public UpcomingMaintenanceResponse getUpcomingMaintenance() {
        return this.upcomingMaintenance;
    }
    /**
     * URL of the zone where the instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
     * 
    */
    public String getZone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AdvancedMachineFeaturesResponse advancedMachineFeatures;
        private Boolean canIpForward;
        private ConfidentialInstanceConfigResponse confidentialInstanceConfig;
        private String cpuPlatform;
        private String creationTimestamp;
        private Boolean deletionProtection;
        private String description;
        private List<AttachedDiskResponse> disks;
        private DisplayDeviceResponse displayDevice;
        private Boolean eraseWindowsVssSignature;
        private String fingerprint;
        private List<AcceleratorConfigResponse> guestAccelerators;
        private String hostname;
        private CustomerEncryptionKeyResponse instanceEncryptionKey;
        private String keyRevocationActionType;
        private String kind;
        private String labelFingerprint;
        private Map<String,String> labels;
        private String lastStartTimestamp;
        private String lastStopTimestamp;
        private String lastSuspendedTimestamp;
        private String machineType;
        private MetadataResponse metadata;
        private String minCpuPlatform;
        private String name;
        private List<NetworkInterfaceResponse> networkInterfaces;
        private NetworkPerformanceConfigResponse networkPerformanceConfig;
        private InstanceParamsResponse params;
        private String postKeyRevocationActionType;
        private String preservedStateSizeGb;
        private String privateIpv6GoogleAccess;
        private ReservationAffinityResponse reservationAffinity;
        private List<String> resourcePolicies;
        private ResourceStatusResponse resourceStatus;
        private Boolean satisfiesPzs;
        private SchedulingResponse scheduling;
        private List<String> secureTags;
        private String selfLink;
        private String selfLinkWithId;
        private List<ServiceAccountResponse> serviceAccounts;
        private ShieldedInstanceConfigResponse shieldedInstanceConfig;
        private ShieldedInstanceIntegrityPolicyResponse shieldedInstanceIntegrityPolicy;
        private ShieldedVmConfigResponse shieldedVmConfig;
        private ShieldedVmIntegrityPolicyResponse shieldedVmIntegrityPolicy;
        private String sourceMachineImage;
        private CustomerEncryptionKeyResponse sourceMachineImageEncryptionKey;
        private Boolean startRestricted;
        private String status;
        private String statusMessage;
        private TagsResponse tags;
        private UpcomingMaintenanceResponse upcomingMaintenance;
        private String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.advancedMachineFeatures = defaults.advancedMachineFeatures;
    	      this.canIpForward = defaults.canIpForward;
    	      this.confidentialInstanceConfig = defaults.confidentialInstanceConfig;
    	      this.cpuPlatform = defaults.cpuPlatform;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.deletionProtection = defaults.deletionProtection;
    	      this.description = defaults.description;
    	      this.disks = defaults.disks;
    	      this.displayDevice = defaults.displayDevice;
    	      this.eraseWindowsVssSignature = defaults.eraseWindowsVssSignature;
    	      this.fingerprint = defaults.fingerprint;
    	      this.guestAccelerators = defaults.guestAccelerators;
    	      this.hostname = defaults.hostname;
    	      this.instanceEncryptionKey = defaults.instanceEncryptionKey;
    	      this.keyRevocationActionType = defaults.keyRevocationActionType;
    	      this.kind = defaults.kind;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.labels = defaults.labels;
    	      this.lastStartTimestamp = defaults.lastStartTimestamp;
    	      this.lastStopTimestamp = defaults.lastStopTimestamp;
    	      this.lastSuspendedTimestamp = defaults.lastSuspendedTimestamp;
    	      this.machineType = defaults.machineType;
    	      this.metadata = defaults.metadata;
    	      this.minCpuPlatform = defaults.minCpuPlatform;
    	      this.name = defaults.name;
    	      this.networkInterfaces = defaults.networkInterfaces;
    	      this.networkPerformanceConfig = defaults.networkPerformanceConfig;
    	      this.params = defaults.params;
    	      this.postKeyRevocationActionType = defaults.postKeyRevocationActionType;
    	      this.preservedStateSizeGb = defaults.preservedStateSizeGb;
    	      this.privateIpv6GoogleAccess = defaults.privateIpv6GoogleAccess;
    	      this.reservationAffinity = defaults.reservationAffinity;
    	      this.resourcePolicies = defaults.resourcePolicies;
    	      this.resourceStatus = defaults.resourceStatus;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.scheduling = defaults.scheduling;
    	      this.secureTags = defaults.secureTags;
    	      this.selfLink = defaults.selfLink;
    	      this.selfLinkWithId = defaults.selfLinkWithId;
    	      this.serviceAccounts = defaults.serviceAccounts;
    	      this.shieldedInstanceConfig = defaults.shieldedInstanceConfig;
    	      this.shieldedInstanceIntegrityPolicy = defaults.shieldedInstanceIntegrityPolicy;
    	      this.shieldedVmConfig = defaults.shieldedVmConfig;
    	      this.shieldedVmIntegrityPolicy = defaults.shieldedVmIntegrityPolicy;
    	      this.sourceMachineImage = defaults.sourceMachineImage;
    	      this.sourceMachineImageEncryptionKey = defaults.sourceMachineImageEncryptionKey;
    	      this.startRestricted = defaults.startRestricted;
    	      this.status = defaults.status;
    	      this.statusMessage = defaults.statusMessage;
    	      this.tags = defaults.tags;
    	      this.upcomingMaintenance = defaults.upcomingMaintenance;
    	      this.zone = defaults.zone;
        }

        public Builder setAdvancedMachineFeatures(AdvancedMachineFeaturesResponse advancedMachineFeatures) {
            this.advancedMachineFeatures = Objects.requireNonNull(advancedMachineFeatures);
            return this;
        }

        public Builder setCanIpForward(Boolean canIpForward) {
            this.canIpForward = Objects.requireNonNull(canIpForward);
            return this;
        }

        public Builder setConfidentialInstanceConfig(ConfidentialInstanceConfigResponse confidentialInstanceConfig) {
            this.confidentialInstanceConfig = Objects.requireNonNull(confidentialInstanceConfig);
            return this;
        }

        public Builder setCpuPlatform(String cpuPlatform) {
            this.cpuPlatform = Objects.requireNonNull(cpuPlatform);
            return this;
        }

        public Builder setCreationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }

        public Builder setDeletionProtection(Boolean deletionProtection) {
            this.deletionProtection = Objects.requireNonNull(deletionProtection);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDisks(List<AttachedDiskResponse> disks) {
            this.disks = Objects.requireNonNull(disks);
            return this;
        }

        public Builder setDisplayDevice(DisplayDeviceResponse displayDevice) {
            this.displayDevice = Objects.requireNonNull(displayDevice);
            return this;
        }

        public Builder setEraseWindowsVssSignature(Boolean eraseWindowsVssSignature) {
            this.eraseWindowsVssSignature = Objects.requireNonNull(eraseWindowsVssSignature);
            return this;
        }

        public Builder setFingerprint(String fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }

        public Builder setGuestAccelerators(List<AcceleratorConfigResponse> guestAccelerators) {
            this.guestAccelerators = Objects.requireNonNull(guestAccelerators);
            return this;
        }

        public Builder setHostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }

        public Builder setInstanceEncryptionKey(CustomerEncryptionKeyResponse instanceEncryptionKey) {
            this.instanceEncryptionKey = Objects.requireNonNull(instanceEncryptionKey);
            return this;
        }

        public Builder setKeyRevocationActionType(String keyRevocationActionType) {
            this.keyRevocationActionType = Objects.requireNonNull(keyRevocationActionType);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setLabelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setLastStartTimestamp(String lastStartTimestamp) {
            this.lastStartTimestamp = Objects.requireNonNull(lastStartTimestamp);
            return this;
        }

        public Builder setLastStopTimestamp(String lastStopTimestamp) {
            this.lastStopTimestamp = Objects.requireNonNull(lastStopTimestamp);
            return this;
        }

        public Builder setLastSuspendedTimestamp(String lastSuspendedTimestamp) {
            this.lastSuspendedTimestamp = Objects.requireNonNull(lastSuspendedTimestamp);
            return this;
        }

        public Builder setMachineType(String machineType) {
            this.machineType = Objects.requireNonNull(machineType);
            return this;
        }

        public Builder setMetadata(MetadataResponse metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }

        public Builder setMinCpuPlatform(String minCpuPlatform) {
            this.minCpuPlatform = Objects.requireNonNull(minCpuPlatform);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetworkInterfaces(List<NetworkInterfaceResponse> networkInterfaces) {
            this.networkInterfaces = Objects.requireNonNull(networkInterfaces);
            return this;
        }

        public Builder setNetworkPerformanceConfig(NetworkPerformanceConfigResponse networkPerformanceConfig) {
            this.networkPerformanceConfig = Objects.requireNonNull(networkPerformanceConfig);
            return this;
        }

        public Builder setParams(InstanceParamsResponse params) {
            this.params = Objects.requireNonNull(params);
            return this;
        }

        public Builder setPostKeyRevocationActionType(String postKeyRevocationActionType) {
            this.postKeyRevocationActionType = Objects.requireNonNull(postKeyRevocationActionType);
            return this;
        }

        public Builder setPreservedStateSizeGb(String preservedStateSizeGb) {
            this.preservedStateSizeGb = Objects.requireNonNull(preservedStateSizeGb);
            return this;
        }

        public Builder setPrivateIpv6GoogleAccess(String privateIpv6GoogleAccess) {
            this.privateIpv6GoogleAccess = Objects.requireNonNull(privateIpv6GoogleAccess);
            return this;
        }

        public Builder setReservationAffinity(ReservationAffinityResponse reservationAffinity) {
            this.reservationAffinity = Objects.requireNonNull(reservationAffinity);
            return this;
        }

        public Builder setResourcePolicies(List<String> resourcePolicies) {
            this.resourcePolicies = Objects.requireNonNull(resourcePolicies);
            return this;
        }

        public Builder setResourceStatus(ResourceStatusResponse resourceStatus) {
            this.resourceStatus = Objects.requireNonNull(resourceStatus);
            return this;
        }

        public Builder setSatisfiesPzs(Boolean satisfiesPzs) {
            this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
            return this;
        }

        public Builder setScheduling(SchedulingResponse scheduling) {
            this.scheduling = Objects.requireNonNull(scheduling);
            return this;
        }

        public Builder setSecureTags(List<String> secureTags) {
            this.secureTags = Objects.requireNonNull(secureTags);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setSelfLinkWithId(String selfLinkWithId) {
            this.selfLinkWithId = Objects.requireNonNull(selfLinkWithId);
            return this;
        }

        public Builder setServiceAccounts(List<ServiceAccountResponse> serviceAccounts) {
            this.serviceAccounts = Objects.requireNonNull(serviceAccounts);
            return this;
        }

        public Builder setShieldedInstanceConfig(ShieldedInstanceConfigResponse shieldedInstanceConfig) {
            this.shieldedInstanceConfig = Objects.requireNonNull(shieldedInstanceConfig);
            return this;
        }

        public Builder setShieldedInstanceIntegrityPolicy(ShieldedInstanceIntegrityPolicyResponse shieldedInstanceIntegrityPolicy) {
            this.shieldedInstanceIntegrityPolicy = Objects.requireNonNull(shieldedInstanceIntegrityPolicy);
            return this;
        }

        public Builder setShieldedVmConfig(ShieldedVmConfigResponse shieldedVmConfig) {
            this.shieldedVmConfig = Objects.requireNonNull(shieldedVmConfig);
            return this;
        }

        public Builder setShieldedVmIntegrityPolicy(ShieldedVmIntegrityPolicyResponse shieldedVmIntegrityPolicy) {
            this.shieldedVmIntegrityPolicy = Objects.requireNonNull(shieldedVmIntegrityPolicy);
            return this;
        }

        public Builder setSourceMachineImage(String sourceMachineImage) {
            this.sourceMachineImage = Objects.requireNonNull(sourceMachineImage);
            return this;
        }

        public Builder setSourceMachineImageEncryptionKey(CustomerEncryptionKeyResponse sourceMachineImageEncryptionKey) {
            this.sourceMachineImageEncryptionKey = Objects.requireNonNull(sourceMachineImageEncryptionKey);
            return this;
        }

        public Builder setStartRestricted(Boolean startRestricted) {
            this.startRestricted = Objects.requireNonNull(startRestricted);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setStatusMessage(String statusMessage) {
            this.statusMessage = Objects.requireNonNull(statusMessage);
            return this;
        }

        public Builder setTags(TagsResponse tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder setUpcomingMaintenance(UpcomingMaintenanceResponse upcomingMaintenance) {
            this.upcomingMaintenance = Objects.requireNonNull(upcomingMaintenance);
            return this;
        }

        public Builder setZone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }
        public GetInstanceResult build() {
            return new GetInstanceResult(advancedMachineFeatures, canIpForward, confidentialInstanceConfig, cpuPlatform, creationTimestamp, deletionProtection, description, disks, displayDevice, eraseWindowsVssSignature, fingerprint, guestAccelerators, hostname, instanceEncryptionKey, keyRevocationActionType, kind, labelFingerprint, labels, lastStartTimestamp, lastStopTimestamp, lastSuspendedTimestamp, machineType, metadata, minCpuPlatform, name, networkInterfaces, networkPerformanceConfig, params, postKeyRevocationActionType, preservedStateSizeGb, privateIpv6GoogleAccess, reservationAffinity, resourcePolicies, resourceStatus, satisfiesPzs, scheduling, secureTags, selfLink, selfLinkWithId, serviceAccounts, shieldedInstanceConfig, shieldedInstanceIntegrityPolicy, shieldedVmConfig, shieldedVmIntegrityPolicy, sourceMachineImage, sourceMachineImageEncryptionKey, startRestricted, status, statusMessage, tags, upcomingMaintenance, zone);
        }
    }
}
