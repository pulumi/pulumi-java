// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.monitoring_v1.outputs.AggregationResponse;
import io.pulumi.googlenative.monitoring_v1.outputs.PickTimeSeriesFilterResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class TimeSeriesFilterResponse {
    /**
     * By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.
     * 
     */
    private final AggregationResponse aggregation;
    /**
     * The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
     * 
     */
    private final String filter;
    /**
     * Ranking based time series filter.
     * 
     */
    private final PickTimeSeriesFilterResponse pickTimeSeriesFilter;
    /**
     * Apply a second aggregation after aggregation is applied.
     * 
     */
    private final AggregationResponse secondaryAggregation;

    @OutputCustomType.Constructor
    private TimeSeriesFilterResponse(
        @OutputCustomType.Parameter("aggregation") AggregationResponse aggregation,
        @OutputCustomType.Parameter("filter") String filter,
        @OutputCustomType.Parameter("pickTimeSeriesFilter") PickTimeSeriesFilterResponse pickTimeSeriesFilter,
        @OutputCustomType.Parameter("secondaryAggregation") AggregationResponse secondaryAggregation) {
        this.aggregation = aggregation;
        this.filter = filter;
        this.pickTimeSeriesFilter = pickTimeSeriesFilter;
        this.secondaryAggregation = secondaryAggregation;
    }

    /**
     * By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.
     * 
    */
    public AggregationResponse getAggregation() {
        return this.aggregation;
    }
    /**
     * The monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
     * 
    */
    public String getFilter() {
        return this.filter;
    }
    /**
     * Ranking based time series filter.
     * 
    */
    public PickTimeSeriesFilterResponse getPickTimeSeriesFilter() {
        return this.pickTimeSeriesFilter;
    }
    /**
     * Apply a second aggregation after aggregation is applied.
     * 
    */
    public AggregationResponse getSecondaryAggregation() {
        return this.secondaryAggregation;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TimeSeriesFilterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AggregationResponse aggregation;
        private String filter;
        private PickTimeSeriesFilterResponse pickTimeSeriesFilter;
        private AggregationResponse secondaryAggregation;

        public Builder() {
    	      // Empty
        }

        public Builder(TimeSeriesFilterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregation = defaults.aggregation;
    	      this.filter = defaults.filter;
    	      this.pickTimeSeriesFilter = defaults.pickTimeSeriesFilter;
    	      this.secondaryAggregation = defaults.secondaryAggregation;
        }

        public Builder aggregation(AggregationResponse aggregation) {
            this.aggregation = Objects.requireNonNull(aggregation);
            return this;
        }

        public Builder filter(String filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }

        public Builder pickTimeSeriesFilter(PickTimeSeriesFilterResponse pickTimeSeriesFilter) {
            this.pickTimeSeriesFilter = Objects.requireNonNull(pickTimeSeriesFilter);
            return this;
        }

        public Builder secondaryAggregation(AggregationResponse secondaryAggregation) {
            this.secondaryAggregation = Objects.requireNonNull(secondaryAggregation);
            return this;
        }
        public TimeSeriesFilterResponse build() {
            return new TimeSeriesFilterResponse(aggregation, filter, pickTimeSeriesFilter, secondaryAggregation);
        }
    }
}
