// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.storage_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class DefaultObjectAccessControlProjectTeamResponse extends io.pulumi.resources.InvokeArgs {

    public static final DefaultObjectAccessControlProjectTeamResponse Empty = new DefaultObjectAccessControlProjectTeamResponse();

    @InputImport(name="projectNumber", required=true)
    private final String projectNumber;

    public String getProjectNumber() {
        return this.projectNumber;
    }

    @InputImport(name="team", required=true)
    private final String team;

    public String getTeam() {
        return this.team;
    }

    public DefaultObjectAccessControlProjectTeamResponse(
        String projectNumber,
        String team) {
        this.projectNumber = Objects.requireNonNull(projectNumber, "expected parameter 'projectNumber' to be non-null");
        this.team = Objects.requireNonNull(team, "expected parameter 'team' to be non-null");
    }

    private DefaultObjectAccessControlProjectTeamResponse() {
        this.projectNumber = null;
        this.team = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DefaultObjectAccessControlProjectTeamResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String projectNumber;
        private String team;

        public Builder() {
    	      // Empty
        }

        public Builder(DefaultObjectAccessControlProjectTeamResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.projectNumber = defaults.projectNumber;
    	      this.team = defaults.team;
        }

        public Builder setProjectNumber(String projectNumber) {
            this.projectNumber = Objects.requireNonNull(projectNumber);
            return this;
        }

        public Builder setTeam(String team) {
            this.team = Objects.requireNonNull(team);
            return this;
        }

        public DefaultObjectAccessControlProjectTeamResponse build() {
            return new DefaultObjectAccessControlProjectTeamResponse(projectNumber, team);
        }
    }
}
