// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.containeranalysis_v1alpha1.inputs.MaterialArgs;
import io.pulumi.googlenative.containeranalysis_v1alpha1.inputs.SlsaBuilderArgs;
import io.pulumi.googlenative.containeranalysis_v1alpha1.inputs.SlsaMetadataArgs;
import io.pulumi.googlenative.containeranalysis_v1alpha1.inputs.SlsaRecipeArgs;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * SlsaProvenance is the slsa provenance as defined by the slsa spec.
 * 
 */
public final class SlsaProvenanceArgs extends io.pulumi.resources.ResourceArgs {

    public static final SlsaProvenanceArgs Empty = new SlsaProvenanceArgs();

    /**
     * builder is the builder of this provenance
     * 
     */
    @InputImport(name="builder")
      private final @Nullable Input<SlsaBuilderArgs> builder;

    public Input<SlsaBuilderArgs> getBuilder() {
        return this.builder == null ? Input.empty() : this.builder;
    }

    /**
     * The collection of artifacts that influenced the build including sources, dependencies, build tools, base images, and so on. This is considered to be incomplete unless metadata.completeness.materials is true. Unset or null is equivalent to empty.
     * 
     */
    @InputImport(name="materials")
      private final @Nullable Input<List<MaterialArgs>> materials;

    public Input<List<MaterialArgs>> getMaterials() {
        return this.materials == null ? Input.empty() : this.materials;
    }

    /**
     * metadata is the metadata of the provenance
     * 
     */
    @InputImport(name="metadata")
      private final @Nullable Input<SlsaMetadataArgs> metadata;

    public Input<SlsaMetadataArgs> getMetadata() {
        return this.metadata == null ? Input.empty() : this.metadata;
    }

    /**
     * Identifies the configuration used for the build. When combined with materials, this SHOULD fully describe the build, such that re-running this recipe results in bit-for-bit identical output (if the build is reproducible).
     * 
     */
    @InputImport(name="recipe")
      private final @Nullable Input<SlsaRecipeArgs> recipe;

    public Input<SlsaRecipeArgs> getRecipe() {
        return this.recipe == null ? Input.empty() : this.recipe;
    }

    public SlsaProvenanceArgs(
        @Nullable Input<SlsaBuilderArgs> builder,
        @Nullable Input<List<MaterialArgs>> materials,
        @Nullable Input<SlsaMetadataArgs> metadata,
        @Nullable Input<SlsaRecipeArgs> recipe) {
        this.builder = builder;
        this.materials = materials;
        this.metadata = metadata;
        this.recipe = recipe;
    }

    private SlsaProvenanceArgs() {
        this.builder = Input.empty();
        this.materials = Input.empty();
        this.metadata = Input.empty();
        this.recipe = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SlsaProvenanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<SlsaBuilderArgs> builder;
        private @Nullable Input<List<MaterialArgs>> materials;
        private @Nullable Input<SlsaMetadataArgs> metadata;
        private @Nullable Input<SlsaRecipeArgs> recipe;

        public Builder() {
    	      // Empty
        }

        public Builder(SlsaProvenanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.builder = defaults.builder;
    	      this.materials = defaults.materials;
    	      this.metadata = defaults.metadata;
    	      this.recipe = defaults.recipe;
        }

        public Builder setBuilder(@Nullable Input<SlsaBuilderArgs> builder) {
            this.builder = builder;
            return this;
        }

        public Builder setBuilder(@Nullable SlsaBuilderArgs builder) {
            this.builder = Input.ofNullable(builder);
            return this;
        }

        public Builder setMaterials(@Nullable Input<List<MaterialArgs>> materials) {
            this.materials = materials;
            return this;
        }

        public Builder setMaterials(@Nullable List<MaterialArgs> materials) {
            this.materials = Input.ofNullable(materials);
            return this;
        }

        public Builder setMetadata(@Nullable Input<SlsaMetadataArgs> metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder setMetadata(@Nullable SlsaMetadataArgs metadata) {
            this.metadata = Input.ofNullable(metadata);
            return this;
        }

        public Builder setRecipe(@Nullable Input<SlsaRecipeArgs> recipe) {
            this.recipe = recipe;
            return this;
        }

        public Builder setRecipe(@Nullable SlsaRecipeArgs recipe) {
            this.recipe = Input.ofNullable(recipe);
            return this;
        }
        public SlsaProvenanceArgs build() {
            return new SlsaProvenanceArgs(builder, materials, metadata, recipe);
        }
    }
}
