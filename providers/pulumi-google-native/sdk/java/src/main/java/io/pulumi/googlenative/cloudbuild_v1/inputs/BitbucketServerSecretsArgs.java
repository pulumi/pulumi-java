// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudbuild_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


/**
 * BitbucketServerSecrets represents the secrets in Secret Manager for a Bitbucket Server.
 * 
 */
public final class BitbucketServerSecretsArgs extends io.pulumi.resources.ResourceArgs {

    public static final BitbucketServerSecretsArgs Empty = new BitbucketServerSecretsArgs();

    /**
     * The resource name for the admin access token's secret version.
     * 
     */
    @InputImport(name="adminAccessTokenVersionName", required=true)
      private final Output<String> adminAccessTokenVersionName;

    public Output<String> getAdminAccessTokenVersionName() {
        return this.adminAccessTokenVersionName;
    }

    /**
     * The resource name for the read access token's secret version.
     * 
     */
    @InputImport(name="readAccessTokenVersionName", required=true)
      private final Output<String> readAccessTokenVersionName;

    public Output<String> getReadAccessTokenVersionName() {
        return this.readAccessTokenVersionName;
    }

    /**
     * Immutable. The resource name for the webhook secret's secret version. Once this field has been set, it cannot be changed. If you need to change it, please create another BitbucketServerConfig.
     * 
     */
    @InputImport(name="webhookSecretVersionName", required=true)
      private final Output<String> webhookSecretVersionName;

    public Output<String> getWebhookSecretVersionName() {
        return this.webhookSecretVersionName;
    }

    public BitbucketServerSecretsArgs(
        Output<String> adminAccessTokenVersionName,
        Output<String> readAccessTokenVersionName,
        Output<String> webhookSecretVersionName) {
        this.adminAccessTokenVersionName = Objects.requireNonNull(adminAccessTokenVersionName, "expected parameter 'adminAccessTokenVersionName' to be non-null");
        this.readAccessTokenVersionName = Objects.requireNonNull(readAccessTokenVersionName, "expected parameter 'readAccessTokenVersionName' to be non-null");
        this.webhookSecretVersionName = Objects.requireNonNull(webhookSecretVersionName, "expected parameter 'webhookSecretVersionName' to be non-null");
    }

    private BitbucketServerSecretsArgs() {
        this.adminAccessTokenVersionName = Output.empty();
        this.readAccessTokenVersionName = Output.empty();
        this.webhookSecretVersionName = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BitbucketServerSecretsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> adminAccessTokenVersionName;
        private Output<String> readAccessTokenVersionName;
        private Output<String> webhookSecretVersionName;

        public Builder() {
    	      // Empty
        }

        public Builder(BitbucketServerSecretsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminAccessTokenVersionName = defaults.adminAccessTokenVersionName;
    	      this.readAccessTokenVersionName = defaults.readAccessTokenVersionName;
    	      this.webhookSecretVersionName = defaults.webhookSecretVersionName;
        }

        public Builder adminAccessTokenVersionName(Output<String> adminAccessTokenVersionName) {
            this.adminAccessTokenVersionName = Objects.requireNonNull(adminAccessTokenVersionName);
            return this;
        }

        public Builder adminAccessTokenVersionName(String adminAccessTokenVersionName) {
            this.adminAccessTokenVersionName = Output.of(Objects.requireNonNull(adminAccessTokenVersionName));
            return this;
        }

        public Builder readAccessTokenVersionName(Output<String> readAccessTokenVersionName) {
            this.readAccessTokenVersionName = Objects.requireNonNull(readAccessTokenVersionName);
            return this;
        }

        public Builder readAccessTokenVersionName(String readAccessTokenVersionName) {
            this.readAccessTokenVersionName = Output.of(Objects.requireNonNull(readAccessTokenVersionName));
            return this;
        }

        public Builder webhookSecretVersionName(Output<String> webhookSecretVersionName) {
            this.webhookSecretVersionName = Objects.requireNonNull(webhookSecretVersionName);
            return this;
        }

        public Builder webhookSecretVersionName(String webhookSecretVersionName) {
            this.webhookSecretVersionName = Output.of(Objects.requireNonNull(webhookSecretVersionName));
            return this;
        }
        public BitbucketServerSecretsArgs build() {
            return new BitbucketServerSecretsArgs(adminAccessTokenVersionName, readAccessTokenVersionName, webhookSecretVersionName);
        }
    }
}
