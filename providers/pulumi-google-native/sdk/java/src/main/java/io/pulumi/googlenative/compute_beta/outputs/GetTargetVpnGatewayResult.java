// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetTargetVpnGatewayResult {
    private final String creationTimestamp;
    private final String description;
    private final List<String> forwardingRules;
    private final String kind;
    private final String labelFingerprint;
    private final Map<String,String> labels;
    private final String name;
    private final String network;
    private final String region;
    private final String selfLink;
    private final String status;
    private final List<String> tunnels;

    @OutputCustomType.Constructor({"creationTimestamp","description","forwardingRules","kind","labelFingerprint","labels","name","network","region","selfLink","status","tunnels"})
    private GetTargetVpnGatewayResult(
        String creationTimestamp,
        String description,
        List<String> forwardingRules,
        String kind,
        String labelFingerprint,
        Map<String,String> labels,
        String name,
        String network,
        String region,
        String selfLink,
        String status,
        List<String> tunnels) {
        this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
        this.description = Objects.requireNonNull(description);
        this.forwardingRules = Objects.requireNonNull(forwardingRules);
        this.kind = Objects.requireNonNull(kind);
        this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
        this.labels = Objects.requireNonNull(labels);
        this.name = Objects.requireNonNull(name);
        this.network = Objects.requireNonNull(network);
        this.region = Objects.requireNonNull(region);
        this.selfLink = Objects.requireNonNull(selfLink);
        this.status = Objects.requireNonNull(status);
        this.tunnels = Objects.requireNonNull(tunnels);
    }

    public String getCreationTimestamp() {
        return this.creationTimestamp;
    }
    public String getDescription() {
        return this.description;
    }
    public List<String> getForwardingRules() {
        return this.forwardingRules;
    }
    public String getKind() {
        return this.kind;
    }
    public String getLabelFingerprint() {
        return this.labelFingerprint;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public String getName() {
        return this.name;
    }
    public String getNetwork() {
        return this.network;
    }
    public String getRegion() {
        return this.region;
    }
    public String getSelfLink() {
        return this.selfLink;
    }
    public String getStatus() {
        return this.status;
    }
    public List<String> getTunnels() {
        return this.tunnels;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetVpnGatewayResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String creationTimestamp;
        private String description;
        private List<String> forwardingRules;
        private String kind;
        private String labelFingerprint;
        private Map<String,String> labels;
        private String name;
        private String network;
        private String region;
        private String selfLink;
        private String status;
        private List<String> tunnels;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTargetVpnGatewayResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.description = defaults.description;
    	      this.forwardingRules = defaults.forwardingRules;
    	      this.kind = defaults.kind;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.region = defaults.region;
    	      this.selfLink = defaults.selfLink;
    	      this.status = defaults.status;
    	      this.tunnels = defaults.tunnels;
        }

        public Builder setCreationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setForwardingRules(List<String> forwardingRules) {
            this.forwardingRules = Objects.requireNonNull(forwardingRules);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setLabelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetwork(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setRegion(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setTunnels(List<String> tunnels) {
            this.tunnels = Objects.requireNonNull(tunnels);
            return this;
        }

        public GetTargetVpnGatewayResult build() {
            return new GetTargetVpnGatewayResult(creationTimestamp, description, forwardingRules, kind, labelFingerprint, labels, name, network, region, selfLink, status, tunnels);
        }
    }
}
