// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.ml_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GoogleCloudMlV1__PredictionInputResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudMlV1__PredictionInputResponse Empty = new GoogleCloudMlV1__PredictionInputResponse();

    @InputImport(name="batchSize", required=true)
    private final String batchSize;

    public String getBatchSize() {
        return this.batchSize;
    }

    @InputImport(name="dataFormat", required=true)
    private final String dataFormat;

    public String getDataFormat() {
        return this.dataFormat;
    }

    @InputImport(name="inputPaths", required=true)
    private final List<String> inputPaths;

    public List<String> getInputPaths() {
        return this.inputPaths;
    }

    @InputImport(name="maxWorkerCount", required=true)
    private final String maxWorkerCount;

    public String getMaxWorkerCount() {
        return this.maxWorkerCount;
    }

    @InputImport(name="modelName", required=true)
    private final String modelName;

    public String getModelName() {
        return this.modelName;
    }

    @InputImport(name="outputDataFormat", required=true)
    private final String outputDataFormat;

    public String getOutputDataFormat() {
        return this.outputDataFormat;
    }

    @InputImport(name="outputPath", required=true)
    private final String outputPath;

    public String getOutputPath() {
        return this.outputPath;
    }

    @InputImport(name="region", required=true)
    private final String region;

    public String getRegion() {
        return this.region;
    }

    @InputImport(name="runtimeVersion", required=true)
    private final String runtimeVersion;

    public String getRuntimeVersion() {
        return this.runtimeVersion;
    }

    @InputImport(name="signatureName", required=true)
    private final String signatureName;

    public String getSignatureName() {
        return this.signatureName;
    }

    @InputImport(name="uri", required=true)
    private final String uri;

    public String getUri() {
        return this.uri;
    }

    @InputImport(name="versionName", required=true)
    private final String versionName;

    public String getVersionName() {
        return this.versionName;
    }

    public GoogleCloudMlV1__PredictionInputResponse(
        String batchSize,
        String dataFormat,
        List<String> inputPaths,
        String maxWorkerCount,
        String modelName,
        String outputDataFormat,
        String outputPath,
        String region,
        String runtimeVersion,
        String signatureName,
        String uri,
        String versionName) {
        this.batchSize = Objects.requireNonNull(batchSize, "expected parameter 'batchSize' to be non-null");
        this.dataFormat = Objects.requireNonNull(dataFormat, "expected parameter 'dataFormat' to be non-null");
        this.inputPaths = Objects.requireNonNull(inputPaths, "expected parameter 'inputPaths' to be non-null");
        this.maxWorkerCount = Objects.requireNonNull(maxWorkerCount, "expected parameter 'maxWorkerCount' to be non-null");
        this.modelName = Objects.requireNonNull(modelName, "expected parameter 'modelName' to be non-null");
        this.outputDataFormat = Objects.requireNonNull(outputDataFormat, "expected parameter 'outputDataFormat' to be non-null");
        this.outputPath = Objects.requireNonNull(outputPath, "expected parameter 'outputPath' to be non-null");
        this.region = Objects.requireNonNull(region, "expected parameter 'region' to be non-null");
        this.runtimeVersion = Objects.requireNonNull(runtimeVersion, "expected parameter 'runtimeVersion' to be non-null");
        this.signatureName = Objects.requireNonNull(signatureName, "expected parameter 'signatureName' to be non-null");
        this.uri = Objects.requireNonNull(uri, "expected parameter 'uri' to be non-null");
        this.versionName = Objects.requireNonNull(versionName, "expected parameter 'versionName' to be non-null");
    }

    private GoogleCloudMlV1__PredictionInputResponse() {
        this.batchSize = null;
        this.dataFormat = null;
        this.inputPaths = List.of();
        this.maxWorkerCount = null;
        this.modelName = null;
        this.outputDataFormat = null;
        this.outputPath = null;
        this.region = null;
        this.runtimeVersion = null;
        this.signatureName = null;
        this.uri = null;
        this.versionName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudMlV1__PredictionInputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String batchSize;
        private String dataFormat;
        private List<String> inputPaths;
        private String maxWorkerCount;
        private String modelName;
        private String outputDataFormat;
        private String outputPath;
        private String region;
        private String runtimeVersion;
        private String signatureName;
        private String uri;
        private String versionName;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudMlV1__PredictionInputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.batchSize = defaults.batchSize;
    	      this.dataFormat = defaults.dataFormat;
    	      this.inputPaths = defaults.inputPaths;
    	      this.maxWorkerCount = defaults.maxWorkerCount;
    	      this.modelName = defaults.modelName;
    	      this.outputDataFormat = defaults.outputDataFormat;
    	      this.outputPath = defaults.outputPath;
    	      this.region = defaults.region;
    	      this.runtimeVersion = defaults.runtimeVersion;
    	      this.signatureName = defaults.signatureName;
    	      this.uri = defaults.uri;
    	      this.versionName = defaults.versionName;
        }

        public Builder setBatchSize(String batchSize) {
            this.batchSize = Objects.requireNonNull(batchSize);
            return this;
        }

        public Builder setDataFormat(String dataFormat) {
            this.dataFormat = Objects.requireNonNull(dataFormat);
            return this;
        }

        public Builder setInputPaths(List<String> inputPaths) {
            this.inputPaths = Objects.requireNonNull(inputPaths);
            return this;
        }

        public Builder setMaxWorkerCount(String maxWorkerCount) {
            this.maxWorkerCount = Objects.requireNonNull(maxWorkerCount);
            return this;
        }

        public Builder setModelName(String modelName) {
            this.modelName = Objects.requireNonNull(modelName);
            return this;
        }

        public Builder setOutputDataFormat(String outputDataFormat) {
            this.outputDataFormat = Objects.requireNonNull(outputDataFormat);
            return this;
        }

        public Builder setOutputPath(String outputPath) {
            this.outputPath = Objects.requireNonNull(outputPath);
            return this;
        }

        public Builder setRegion(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }

        public Builder setRuntimeVersion(String runtimeVersion) {
            this.runtimeVersion = Objects.requireNonNull(runtimeVersion);
            return this;
        }

        public Builder setSignatureName(String signatureName) {
            this.signatureName = Objects.requireNonNull(signatureName);
            return this;
        }

        public Builder setUri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }

        public Builder setVersionName(String versionName) {
            this.versionName = Objects.requireNonNull(versionName);
            return this;
        }

        public GoogleCloudMlV1__PredictionInputResponse build() {
            return new GoogleCloudMlV1__PredictionInputResponse(batchSize, dataFormat, inputPaths, maxWorkerCount, modelName, outputDataFormat, outputPath, region, runtimeVersion, signatureName, uri, versionName);
        }
    }
}
