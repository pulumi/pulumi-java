// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InfoTypeTransformationResponse;
import java.util.List;
import java.util.Objects;


/**
 * A type of transformation that will scan unstructured text and apply various `PrimitiveTransformation`s to each finding, where the transformation is applied to only values that were identified as a specific info_type.
 * 
 */
public final class GooglePrivacyDlpV2InfoTypeTransformationsResponse extends io.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2InfoTypeTransformationsResponse Empty = new GooglePrivacyDlpV2InfoTypeTransformationsResponse();

    /**
     * Transformation for each infoType. Cannot specify more than one for a given infoType.
     * 
     */
    @InputImport(name="transformations", required=true)
      private final List<GooglePrivacyDlpV2InfoTypeTransformationResponse> transformations;

    public List<GooglePrivacyDlpV2InfoTypeTransformationResponse> getTransformations() {
        return this.transformations;
    }

    public GooglePrivacyDlpV2InfoTypeTransformationsResponse(List<GooglePrivacyDlpV2InfoTypeTransformationResponse> transformations) {
        this.transformations = Objects.requireNonNull(transformations, "expected parameter 'transformations' to be non-null");
    }

    private GooglePrivacyDlpV2InfoTypeTransformationsResponse() {
        this.transformations = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2InfoTypeTransformationsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GooglePrivacyDlpV2InfoTypeTransformationResponse> transformations;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2InfoTypeTransformationsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.transformations = defaults.transformations;
        }

        public Builder setTransformations(List<GooglePrivacyDlpV2InfoTypeTransformationResponse> transformations) {
            this.transformations = Objects.requireNonNull(transformations);
            return this;
        }
        public GooglePrivacyDlpV2InfoTypeTransformationsResponse build() {
            return new GooglePrivacyDlpV2InfoTypeTransformationsResponse(transformations);
        }
    }
}
