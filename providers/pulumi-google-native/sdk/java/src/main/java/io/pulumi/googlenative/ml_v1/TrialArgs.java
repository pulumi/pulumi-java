// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.ml_v1;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.ml_v1.enums.TrialState;
import io.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1_Trial_ParameterArgs;
import io.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1__MeasurementArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TrialArgs extends io.pulumi.resources.ResourceArgs {

    public static final TrialArgs Empty = new TrialArgs();

    /**
     * The final measurement containing the objective value.
     * 
     */
    @InputImport(name="finalMeasurement")
      private final @Nullable Input<GoogleCloudMlV1__MeasurementArgs> finalMeasurement;

    public Input<GoogleCloudMlV1__MeasurementArgs> getFinalMeasurement() {
        return this.finalMeasurement == null ? Input.empty() : this.finalMeasurement;
    }

    @InputImport(name="location")
      private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * A list of measurements that are strictly lexicographically ordered by their induced tuples (steps, elapsed_time). These are used for early stopping computations.
     * 
     */
    @InputImport(name="measurements")
      private final @Nullable Input<List<GoogleCloudMlV1__MeasurementArgs>> measurements;

    public Input<List<GoogleCloudMlV1__MeasurementArgs>> getMeasurements() {
        return this.measurements == null ? Input.empty() : this.measurements;
    }

    /**
     * The parameters of the trial.
     * 
     */
    @InputImport(name="parameters")
      private final @Nullable Input<List<GoogleCloudMlV1_Trial_ParameterArgs>> parameters;

    public Input<List<GoogleCloudMlV1_Trial_ParameterArgs>> getParameters() {
        return this.parameters == null ? Input.empty() : this.parameters;
    }

    @InputImport(name="project")
      private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * The detailed state of a trial.
     * 
     */
    @InputImport(name="state")
      private final @Nullable Input<TrialState> state;

    public Input<TrialState> getState() {
        return this.state == null ? Input.empty() : this.state;
    }

    @InputImport(name="studyId", required=true)
      private final Input<String> studyId;

    public Input<String> getStudyId() {
        return this.studyId;
    }

    public TrialArgs(
        @Nullable Input<GoogleCloudMlV1__MeasurementArgs> finalMeasurement,
        @Nullable Input<String> location,
        @Nullable Input<List<GoogleCloudMlV1__MeasurementArgs>> measurements,
        @Nullable Input<List<GoogleCloudMlV1_Trial_ParameterArgs>> parameters,
        @Nullable Input<String> project,
        @Nullable Input<TrialState> state,
        Input<String> studyId) {
        this.finalMeasurement = finalMeasurement;
        this.location = location;
        this.measurements = measurements;
        this.parameters = parameters;
        this.project = project;
        this.state = state;
        this.studyId = Objects.requireNonNull(studyId, "expected parameter 'studyId' to be non-null");
    }

    private TrialArgs() {
        this.finalMeasurement = Input.empty();
        this.location = Input.empty();
        this.measurements = Input.empty();
        this.parameters = Input.empty();
        this.project = Input.empty();
        this.state = Input.empty();
        this.studyId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TrialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GoogleCloudMlV1__MeasurementArgs> finalMeasurement;
        private @Nullable Input<String> location;
        private @Nullable Input<List<GoogleCloudMlV1__MeasurementArgs>> measurements;
        private @Nullable Input<List<GoogleCloudMlV1_Trial_ParameterArgs>> parameters;
        private @Nullable Input<String> project;
        private @Nullable Input<TrialState> state;
        private Input<String> studyId;

        public Builder() {
    	      // Empty
        }

        public Builder(TrialArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.finalMeasurement = defaults.finalMeasurement;
    	      this.location = defaults.location;
    	      this.measurements = defaults.measurements;
    	      this.parameters = defaults.parameters;
    	      this.project = defaults.project;
    	      this.state = defaults.state;
    	      this.studyId = defaults.studyId;
        }

        public Builder setFinalMeasurement(@Nullable Input<GoogleCloudMlV1__MeasurementArgs> finalMeasurement) {
            this.finalMeasurement = finalMeasurement;
            return this;
        }

        public Builder setFinalMeasurement(@Nullable GoogleCloudMlV1__MeasurementArgs finalMeasurement) {
            this.finalMeasurement = Input.ofNullable(finalMeasurement);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setMeasurements(@Nullable Input<List<GoogleCloudMlV1__MeasurementArgs>> measurements) {
            this.measurements = measurements;
            return this;
        }

        public Builder setMeasurements(@Nullable List<GoogleCloudMlV1__MeasurementArgs> measurements) {
            this.measurements = Input.ofNullable(measurements);
            return this;
        }

        public Builder setParameters(@Nullable Input<List<GoogleCloudMlV1_Trial_ParameterArgs>> parameters) {
            this.parameters = parameters;
            return this;
        }

        public Builder setParameters(@Nullable List<GoogleCloudMlV1_Trial_ParameterArgs> parameters) {
            this.parameters = Input.ofNullable(parameters);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setState(@Nullable Input<TrialState> state) {
            this.state = state;
            return this;
        }

        public Builder setState(@Nullable TrialState state) {
            this.state = Input.ofNullable(state);
            return this;
        }

        public Builder setStudyId(Input<String> studyId) {
            this.studyId = Objects.requireNonNull(studyId);
            return this;
        }

        public Builder setStudyId(String studyId) {
            this.studyId = Input.of(Objects.requireNonNull(studyId));
            return this;
        }
        public TrialArgs build() {
            return new TrialArgs(finalMeasurement, location, measurements, parameters, project, state, studyId);
        }
    }
}
