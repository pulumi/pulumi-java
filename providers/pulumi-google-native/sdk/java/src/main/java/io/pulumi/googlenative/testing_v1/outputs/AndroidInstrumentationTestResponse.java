// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.testing_v1.outputs.AppBundleResponse;
import io.pulumi.googlenative.testing_v1.outputs.FileReferenceResponse;
import io.pulumi.googlenative.testing_v1.outputs.ShardingOptionResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class AndroidInstrumentationTestResponse {
    private final FileReferenceResponse appApk;
    private final AppBundleResponse appBundle;
    private final String appPackageId;
    private final String orchestratorOption;
    private final ShardingOptionResponse shardingOption;
    private final FileReferenceResponse testApk;
    private final String testPackageId;
    private final String testRunnerClass;
    private final List<String> testTargets;

    @OutputCustomType.Constructor({"appApk","appBundle","appPackageId","orchestratorOption","shardingOption","testApk","testPackageId","testRunnerClass","testTargets"})
    private AndroidInstrumentationTestResponse(
        FileReferenceResponse appApk,
        AppBundleResponse appBundle,
        String appPackageId,
        String orchestratorOption,
        ShardingOptionResponse shardingOption,
        FileReferenceResponse testApk,
        String testPackageId,
        String testRunnerClass,
        List<String> testTargets) {
        this.appApk = Objects.requireNonNull(appApk);
        this.appBundle = Objects.requireNonNull(appBundle);
        this.appPackageId = Objects.requireNonNull(appPackageId);
        this.orchestratorOption = Objects.requireNonNull(orchestratorOption);
        this.shardingOption = Objects.requireNonNull(shardingOption);
        this.testApk = Objects.requireNonNull(testApk);
        this.testPackageId = Objects.requireNonNull(testPackageId);
        this.testRunnerClass = Objects.requireNonNull(testRunnerClass);
        this.testTargets = Objects.requireNonNull(testTargets);
    }

    public FileReferenceResponse getAppApk() {
        return this.appApk;
    }
    public AppBundleResponse getAppBundle() {
        return this.appBundle;
    }
    public String getAppPackageId() {
        return this.appPackageId;
    }
    public String getOrchestratorOption() {
        return this.orchestratorOption;
    }
    public ShardingOptionResponse getShardingOption() {
        return this.shardingOption;
    }
    public FileReferenceResponse getTestApk() {
        return this.testApk;
    }
    public String getTestPackageId() {
        return this.testPackageId;
    }
    public String getTestRunnerClass() {
        return this.testRunnerClass;
    }
    public List<String> getTestTargets() {
        return this.testTargets;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AndroidInstrumentationTestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FileReferenceResponse appApk;
        private AppBundleResponse appBundle;
        private String appPackageId;
        private String orchestratorOption;
        private ShardingOptionResponse shardingOption;
        private FileReferenceResponse testApk;
        private String testPackageId;
        private String testRunnerClass;
        private List<String> testTargets;

        public Builder() {
    	      // Empty
        }

        public Builder(AndroidInstrumentationTestResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appApk = defaults.appApk;
    	      this.appBundle = defaults.appBundle;
    	      this.appPackageId = defaults.appPackageId;
    	      this.orchestratorOption = defaults.orchestratorOption;
    	      this.shardingOption = defaults.shardingOption;
    	      this.testApk = defaults.testApk;
    	      this.testPackageId = defaults.testPackageId;
    	      this.testRunnerClass = defaults.testRunnerClass;
    	      this.testTargets = defaults.testTargets;
        }

        public Builder setAppApk(FileReferenceResponse appApk) {
            this.appApk = Objects.requireNonNull(appApk);
            return this;
        }

        public Builder setAppBundle(AppBundleResponse appBundle) {
            this.appBundle = Objects.requireNonNull(appBundle);
            return this;
        }

        public Builder setAppPackageId(String appPackageId) {
            this.appPackageId = Objects.requireNonNull(appPackageId);
            return this;
        }

        public Builder setOrchestratorOption(String orchestratorOption) {
            this.orchestratorOption = Objects.requireNonNull(orchestratorOption);
            return this;
        }

        public Builder setShardingOption(ShardingOptionResponse shardingOption) {
            this.shardingOption = Objects.requireNonNull(shardingOption);
            return this;
        }

        public Builder setTestApk(FileReferenceResponse testApk) {
            this.testApk = Objects.requireNonNull(testApk);
            return this;
        }

        public Builder setTestPackageId(String testPackageId) {
            this.testPackageId = Objects.requireNonNull(testPackageId);
            return this;
        }

        public Builder setTestRunnerClass(String testRunnerClass) {
            this.testRunnerClass = Objects.requireNonNull(testRunnerClass);
            return this;
        }

        public Builder setTestTargets(List<String> testTargets) {
            this.testTargets = Objects.requireNonNull(testTargets);
            return this;
        }

        public AndroidInstrumentationTestResponse build() {
            return new AndroidInstrumentationTestResponse(appApk, appBundle, appPackageId, orchestratorOption, shardingOption, testApk, testPackageId, testRunnerClass, testTargets);
        }
    }
}
