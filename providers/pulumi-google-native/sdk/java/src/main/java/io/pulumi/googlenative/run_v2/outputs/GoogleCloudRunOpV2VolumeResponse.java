// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.run_v2.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.run_v2.outputs.GoogleCloudRunOpV2CloudSqlInstanceResponse;
import io.pulumi.googlenative.run_v2.outputs.GoogleCloudRunOpV2SecretVolumeSourceResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GoogleCloudRunOpV2VolumeResponse {
    /**
     * For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
     * 
     */
    private final GoogleCloudRunOpV2CloudSqlInstanceResponse cloudSqlInstance;
    /**
     * Volume's name.
     * 
     */
    private final String name;
    /**
     * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * 
     */
    private final GoogleCloudRunOpV2SecretVolumeSourceResponse secret;

    @OutputCustomType.Constructor
    private GoogleCloudRunOpV2VolumeResponse(
        @OutputCustomType.Parameter("cloudSqlInstance") GoogleCloudRunOpV2CloudSqlInstanceResponse cloudSqlInstance,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("secret") GoogleCloudRunOpV2SecretVolumeSourceResponse secret) {
        this.cloudSqlInstance = cloudSqlInstance;
        this.name = name;
        this.secret = secret;
    }

    /**
     * For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.
     * 
    */
    public GoogleCloudRunOpV2CloudSqlInstanceResponse getCloudSqlInstance() {
        return this.cloudSqlInstance;
    }
    /**
     * Volume's name.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
     * 
    */
    public GoogleCloudRunOpV2SecretVolumeSourceResponse getSecret() {
        return this.secret;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRunOpV2VolumeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudRunOpV2CloudSqlInstanceResponse cloudSqlInstance;
        private String name;
        private GoogleCloudRunOpV2SecretVolumeSourceResponse secret;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRunOpV2VolumeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudSqlInstance = defaults.cloudSqlInstance;
    	      this.name = defaults.name;
    	      this.secret = defaults.secret;
        }

        public Builder cloudSqlInstance(GoogleCloudRunOpV2CloudSqlInstanceResponse cloudSqlInstance) {
            this.cloudSqlInstance = Objects.requireNonNull(cloudSqlInstance);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder secret(GoogleCloudRunOpV2SecretVolumeSourceResponse secret) {
            this.secret = Objects.requireNonNull(secret);
            return this;
        }
        public GoogleCloudRunOpV2VolumeResponse build() {
            return new GoogleCloudRunOpV2VolumeResponse(cloudSqlInstance, name, secret);
        }
    }
}
