// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2DetectionRuleResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2DictionaryResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InfoTypeResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2RegexResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2StoredTypeResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2SurrogateTypeResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class GooglePrivacyDlpV2CustomInfoTypeResponse extends io.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2CustomInfoTypeResponse Empty = new GooglePrivacyDlpV2CustomInfoTypeResponse();

    @InputImport(name="detectionRules", required=true)
    private final List<GooglePrivacyDlpV2DetectionRuleResponse> detectionRules;

    public List<GooglePrivacyDlpV2DetectionRuleResponse> getDetectionRules() {
        return this.detectionRules;
    }

    @InputImport(name="dictionary", required=true)
    private final GooglePrivacyDlpV2DictionaryResponse dictionary;

    public GooglePrivacyDlpV2DictionaryResponse getDictionary() {
        return this.dictionary;
    }

    @InputImport(name="exclusionType", required=true)
    private final String exclusionType;

    public String getExclusionType() {
        return this.exclusionType;
    }

    @InputImport(name="infoType", required=true)
    private final GooglePrivacyDlpV2InfoTypeResponse infoType;

    public GooglePrivacyDlpV2InfoTypeResponse getInfoType() {
        return this.infoType;
    }

    @InputImport(name="likelihood", required=true)
    private final String likelihood;

    public String getLikelihood() {
        return this.likelihood;
    }

    @InputImport(name="regex", required=true)
    private final GooglePrivacyDlpV2RegexResponse regex;

    public GooglePrivacyDlpV2RegexResponse getRegex() {
        return this.regex;
    }

    @InputImport(name="storedType", required=true)
    private final GooglePrivacyDlpV2StoredTypeResponse storedType;

    public GooglePrivacyDlpV2StoredTypeResponse getStoredType() {
        return this.storedType;
    }

    @InputImport(name="surrogateType", required=true)
    private final GooglePrivacyDlpV2SurrogateTypeResponse surrogateType;

    public GooglePrivacyDlpV2SurrogateTypeResponse getSurrogateType() {
        return this.surrogateType;
    }

    public GooglePrivacyDlpV2CustomInfoTypeResponse(
        List<GooglePrivacyDlpV2DetectionRuleResponse> detectionRules,
        GooglePrivacyDlpV2DictionaryResponse dictionary,
        String exclusionType,
        GooglePrivacyDlpV2InfoTypeResponse infoType,
        String likelihood,
        GooglePrivacyDlpV2RegexResponse regex,
        GooglePrivacyDlpV2StoredTypeResponse storedType,
        GooglePrivacyDlpV2SurrogateTypeResponse surrogateType) {
        this.detectionRules = Objects.requireNonNull(detectionRules, "expected parameter 'detectionRules' to be non-null");
        this.dictionary = Objects.requireNonNull(dictionary, "expected parameter 'dictionary' to be non-null");
        this.exclusionType = Objects.requireNonNull(exclusionType, "expected parameter 'exclusionType' to be non-null");
        this.infoType = Objects.requireNonNull(infoType, "expected parameter 'infoType' to be non-null");
        this.likelihood = Objects.requireNonNull(likelihood, "expected parameter 'likelihood' to be non-null");
        this.regex = Objects.requireNonNull(regex, "expected parameter 'regex' to be non-null");
        this.storedType = Objects.requireNonNull(storedType, "expected parameter 'storedType' to be non-null");
        this.surrogateType = Objects.requireNonNull(surrogateType, "expected parameter 'surrogateType' to be non-null");
    }

    private GooglePrivacyDlpV2CustomInfoTypeResponse() {
        this.detectionRules = List.of();
        this.dictionary = null;
        this.exclusionType = null;
        this.infoType = null;
        this.likelihood = null;
        this.regex = null;
        this.storedType = null;
        this.surrogateType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2CustomInfoTypeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GooglePrivacyDlpV2DetectionRuleResponse> detectionRules;
        private GooglePrivacyDlpV2DictionaryResponse dictionary;
        private String exclusionType;
        private GooglePrivacyDlpV2InfoTypeResponse infoType;
        private String likelihood;
        private GooglePrivacyDlpV2RegexResponse regex;
        private GooglePrivacyDlpV2StoredTypeResponse storedType;
        private GooglePrivacyDlpV2SurrogateTypeResponse surrogateType;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2CustomInfoTypeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.detectionRules = defaults.detectionRules;
    	      this.dictionary = defaults.dictionary;
    	      this.exclusionType = defaults.exclusionType;
    	      this.infoType = defaults.infoType;
    	      this.likelihood = defaults.likelihood;
    	      this.regex = defaults.regex;
    	      this.storedType = defaults.storedType;
    	      this.surrogateType = defaults.surrogateType;
        }

        public Builder setDetectionRules(List<GooglePrivacyDlpV2DetectionRuleResponse> detectionRules) {
            this.detectionRules = Objects.requireNonNull(detectionRules);
            return this;
        }

        public Builder setDictionary(GooglePrivacyDlpV2DictionaryResponse dictionary) {
            this.dictionary = Objects.requireNonNull(dictionary);
            return this;
        }

        public Builder setExclusionType(String exclusionType) {
            this.exclusionType = Objects.requireNonNull(exclusionType);
            return this;
        }

        public Builder setInfoType(GooglePrivacyDlpV2InfoTypeResponse infoType) {
            this.infoType = Objects.requireNonNull(infoType);
            return this;
        }

        public Builder setLikelihood(String likelihood) {
            this.likelihood = Objects.requireNonNull(likelihood);
            return this;
        }

        public Builder setRegex(GooglePrivacyDlpV2RegexResponse regex) {
            this.regex = Objects.requireNonNull(regex);
            return this;
        }

        public Builder setStoredType(GooglePrivacyDlpV2StoredTypeResponse storedType) {
            this.storedType = Objects.requireNonNull(storedType);
            return this;
        }

        public Builder setSurrogateType(GooglePrivacyDlpV2SurrogateTypeResponse surrogateType) {
            this.surrogateType = Objects.requireNonNull(surrogateType);
            return this;
        }

        public GooglePrivacyDlpV2CustomInfoTypeResponse build() {
            return new GooglePrivacyDlpV2CustomInfoTypeResponse(detectionRules, dictionary, exclusionType, infoType, likelihood, regex, storedType, surrogateType);
        }
    }
}
