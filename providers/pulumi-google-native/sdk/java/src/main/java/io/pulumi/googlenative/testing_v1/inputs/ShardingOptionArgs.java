// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.testing_v1.inputs.ManualShardingArgs;
import io.pulumi.googlenative.testing_v1.inputs.UniformShardingArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Options for enabling sharding.
 * 
 */
public final class ShardingOptionArgs extends io.pulumi.resources.ResourceArgs {

    public static final ShardingOptionArgs Empty = new ShardingOptionArgs();

    /**
     * Shards test cases into the specified groups of packages, classes, and/or methods.
     * 
     */
    @Import(name="manualSharding")
      private final @Nullable Output<ManualShardingArgs> manualSharding;

    public Output<ManualShardingArgs> getManualSharding() {
        return this.manualSharding == null ? Codegen.empty() : this.manualSharding;
    }

    /**
     * Uniformly shards test cases given a total number of shards.
     * 
     */
    @Import(name="uniformSharding")
      private final @Nullable Output<UniformShardingArgs> uniformSharding;

    public Output<UniformShardingArgs> getUniformSharding() {
        return this.uniformSharding == null ? Codegen.empty() : this.uniformSharding;
    }

    public ShardingOptionArgs(
        @Nullable Output<ManualShardingArgs> manualSharding,
        @Nullable Output<UniformShardingArgs> uniformSharding) {
        this.manualSharding = manualSharding;
        this.uniformSharding = uniformSharding;
    }

    private ShardingOptionArgs() {
        this.manualSharding = Codegen.empty();
        this.uniformSharding = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ShardingOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<ManualShardingArgs> manualSharding;
        private @Nullable Output<UniformShardingArgs> uniformSharding;

        public Builder() {
    	      // Empty
        }

        public Builder(ShardingOptionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.manualSharding = defaults.manualSharding;
    	      this.uniformSharding = defaults.uniformSharding;
        }

        public Builder manualSharding(@Nullable Output<ManualShardingArgs> manualSharding) {
            this.manualSharding = manualSharding;
            return this;
        }
        public Builder manualSharding(@Nullable ManualShardingArgs manualSharding) {
            this.manualSharding = Codegen.ofNullable(manualSharding);
            return this;
        }
        public Builder uniformSharding(@Nullable Output<UniformShardingArgs> uniformSharding) {
            this.uniformSharding = uniformSharding;
            return this;
        }
        public Builder uniformSharding(@Nullable UniformShardingArgs uniformSharding) {
            this.uniformSharding = Codegen.ofNullable(uniformSharding);
            return this;
        }        public ShardingOptionArgs build() {
            return new ShardingOptionArgs(manualSharding, uniformSharding);
        }
    }
}
