// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.container_v1.inputs.FilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Pub/Sub specific notification config.
 * 
 */
public final class PubSubArgs extends io.pulumi.resources.ResourceArgs {

    public static final PubSubArgs Empty = new PubSubArgs();

    /**
     * Enable notifications for Pub/Sub.
     * 
     */
    @InputImport(name="enabled")
      private final @Nullable Input<Boolean> enabled;

    public Input<Boolean> getEnabled() {
        return this.enabled == null ? Input.empty() : this.enabled;
    }

    /**
     * Allows filtering to one or more specific event types. If no filter is specified, or if a filter is specified with no event types, all event types will be sent
     * 
     */
    @InputImport(name="filter")
      private final @Nullable Input<FilterArgs> filter;

    public Input<FilterArgs> getFilter() {
        return this.filter == null ? Input.empty() : this.filter;
    }

    /**
     * The desired Pub/Sub topic to which notifications will be sent by GKE. Format is `projects/{project}/topics/{topic}`.
     * 
     */
    @InputImport(name="topic")
      private final @Nullable Input<String> topic;

    public Input<String> getTopic() {
        return this.topic == null ? Input.empty() : this.topic;
    }

    public PubSubArgs(
        @Nullable Input<Boolean> enabled,
        @Nullable Input<FilterArgs> filter,
        @Nullable Input<String> topic) {
        this.enabled = enabled;
        this.filter = filter;
        this.topic = topic;
    }

    private PubSubArgs() {
        this.enabled = Input.empty();
        this.filter = Input.empty();
        this.topic = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PubSubArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> enabled;
        private @Nullable Input<FilterArgs> filter;
        private @Nullable Input<String> topic;

        public Builder() {
    	      // Empty
        }

        public Builder(PubSubArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.enabled = defaults.enabled;
    	      this.filter = defaults.filter;
    	      this.topic = defaults.topic;
        }

        public Builder setEnabled(@Nullable Input<Boolean> enabled) {
            this.enabled = enabled;
            return this;
        }

        public Builder setEnabled(@Nullable Boolean enabled) {
            this.enabled = Input.ofNullable(enabled);
            return this;
        }

        public Builder setFilter(@Nullable Input<FilterArgs> filter) {
            this.filter = filter;
            return this;
        }

        public Builder setFilter(@Nullable FilterArgs filter) {
            this.filter = Input.ofNullable(filter);
            return this;
        }

        public Builder setTopic(@Nullable Input<String> topic) {
            this.topic = topic;
            return this;
        }

        public Builder setTopic(@Nullable String topic) {
            this.topic = Input.ofNullable(topic);
            return this;
        }
        public PubSubArgs build() {
            return new PubSubArgs(enabled, filter, topic);
        }
    }
}
