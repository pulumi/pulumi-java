// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.osconfig_v1beta.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.googlenative.osconfig_v1beta.outputs.SoftwareRecipeStepCopyFileResponse;
import io.pulumi.googlenative.osconfig_v1beta.outputs.SoftwareRecipeStepExecFileResponse;
import io.pulumi.googlenative.osconfig_v1beta.outputs.SoftwareRecipeStepExtractArchiveResponse;
import io.pulumi.googlenative.osconfig_v1beta.outputs.SoftwareRecipeStepInstallDpkgResponse;
import io.pulumi.googlenative.osconfig_v1beta.outputs.SoftwareRecipeStepInstallMsiResponse;
import io.pulumi.googlenative.osconfig_v1beta.outputs.SoftwareRecipeStepInstallRpmResponse;
import io.pulumi.googlenative.osconfig_v1beta.outputs.SoftwareRecipeStepRunScriptResponse;
import java.util.Objects;

@CustomType
public final class SoftwareRecipeStepResponse {
    /**
     * Extracts an archive into the specified directory.
     * 
     */
    private final SoftwareRecipeStepExtractArchiveResponse archiveExtraction;
    /**
     * Installs a deb file via dpkg.
     * 
     */
    private final SoftwareRecipeStepInstallDpkgResponse dpkgInstallation;
    /**
     * Copies a file onto the instance.
     * 
     */
    private final SoftwareRecipeStepCopyFileResponse fileCopy;
    /**
     * Executes an artifact or local file.
     * 
     */
    private final SoftwareRecipeStepExecFileResponse fileExec;
    /**
     * Installs an MSI file.
     * 
     */
    private final SoftwareRecipeStepInstallMsiResponse msiInstallation;
    /**
     * Installs an rpm file via the rpm utility.
     * 
     */
    private final SoftwareRecipeStepInstallRpmResponse rpmInstallation;
    /**
     * Runs commands in a shell.
     * 
     */
    private final SoftwareRecipeStepRunScriptResponse scriptRun;

    @CustomType.Constructor
    private SoftwareRecipeStepResponse(
        @CustomType.Parameter("archiveExtraction") SoftwareRecipeStepExtractArchiveResponse archiveExtraction,
        @CustomType.Parameter("dpkgInstallation") SoftwareRecipeStepInstallDpkgResponse dpkgInstallation,
        @CustomType.Parameter("fileCopy") SoftwareRecipeStepCopyFileResponse fileCopy,
        @CustomType.Parameter("fileExec") SoftwareRecipeStepExecFileResponse fileExec,
        @CustomType.Parameter("msiInstallation") SoftwareRecipeStepInstallMsiResponse msiInstallation,
        @CustomType.Parameter("rpmInstallation") SoftwareRecipeStepInstallRpmResponse rpmInstallation,
        @CustomType.Parameter("scriptRun") SoftwareRecipeStepRunScriptResponse scriptRun) {
        this.archiveExtraction = archiveExtraction;
        this.dpkgInstallation = dpkgInstallation;
        this.fileCopy = fileCopy;
        this.fileExec = fileExec;
        this.msiInstallation = msiInstallation;
        this.rpmInstallation = rpmInstallation;
        this.scriptRun = scriptRun;
    }

    /**
     * Extracts an archive into the specified directory.
     * 
    */
    public SoftwareRecipeStepExtractArchiveResponse getArchiveExtraction() {
        return this.archiveExtraction;
    }
    /**
     * Installs a deb file via dpkg.
     * 
    */
    public SoftwareRecipeStepInstallDpkgResponse getDpkgInstallation() {
        return this.dpkgInstallation;
    }
    /**
     * Copies a file onto the instance.
     * 
    */
    public SoftwareRecipeStepCopyFileResponse getFileCopy() {
        return this.fileCopy;
    }
    /**
     * Executes an artifact or local file.
     * 
    */
    public SoftwareRecipeStepExecFileResponse getFileExec() {
        return this.fileExec;
    }
    /**
     * Installs an MSI file.
     * 
    */
    public SoftwareRecipeStepInstallMsiResponse getMsiInstallation() {
        return this.msiInstallation;
    }
    /**
     * Installs an rpm file via the rpm utility.
     * 
    */
    public SoftwareRecipeStepInstallRpmResponse getRpmInstallation() {
        return this.rpmInstallation;
    }
    /**
     * Runs commands in a shell.
     * 
    */
    public SoftwareRecipeStepRunScriptResponse getScriptRun() {
        return this.scriptRun;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SoftwareRecipeStepResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SoftwareRecipeStepExtractArchiveResponse archiveExtraction;
        private SoftwareRecipeStepInstallDpkgResponse dpkgInstallation;
        private SoftwareRecipeStepCopyFileResponse fileCopy;
        private SoftwareRecipeStepExecFileResponse fileExec;
        private SoftwareRecipeStepInstallMsiResponse msiInstallation;
        private SoftwareRecipeStepInstallRpmResponse rpmInstallation;
        private SoftwareRecipeStepRunScriptResponse scriptRun;

        public Builder() {
    	      // Empty
        }

        public Builder(SoftwareRecipeStepResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archiveExtraction = defaults.archiveExtraction;
    	      this.dpkgInstallation = defaults.dpkgInstallation;
    	      this.fileCopy = defaults.fileCopy;
    	      this.fileExec = defaults.fileExec;
    	      this.msiInstallation = defaults.msiInstallation;
    	      this.rpmInstallation = defaults.rpmInstallation;
    	      this.scriptRun = defaults.scriptRun;
        }

        public Builder archiveExtraction(SoftwareRecipeStepExtractArchiveResponse archiveExtraction) {
            this.archiveExtraction = Objects.requireNonNull(archiveExtraction);
            return this;
        }
        public Builder dpkgInstallation(SoftwareRecipeStepInstallDpkgResponse dpkgInstallation) {
            this.dpkgInstallation = Objects.requireNonNull(dpkgInstallation);
            return this;
        }
        public Builder fileCopy(SoftwareRecipeStepCopyFileResponse fileCopy) {
            this.fileCopy = Objects.requireNonNull(fileCopy);
            return this;
        }
        public Builder fileExec(SoftwareRecipeStepExecFileResponse fileExec) {
            this.fileExec = Objects.requireNonNull(fileExec);
            return this;
        }
        public Builder msiInstallation(SoftwareRecipeStepInstallMsiResponse msiInstallation) {
            this.msiInstallation = Objects.requireNonNull(msiInstallation);
            return this;
        }
        public Builder rpmInstallation(SoftwareRecipeStepInstallRpmResponse rpmInstallation) {
            this.rpmInstallation = Objects.requireNonNull(rpmInstallation);
            return this;
        }
        public Builder scriptRun(SoftwareRecipeStepRunScriptResponse scriptRun) {
            this.scriptRun = Objects.requireNonNull(scriptRun);
            return this;
        }        public SoftwareRecipeStepResponse build() {
            return new SoftwareRecipeStepResponse(archiveExtraction, dpkgInstallation, fileCopy, fileExec, msiInstallation, rpmInstallation, scriptRun);
        }
    }
}
