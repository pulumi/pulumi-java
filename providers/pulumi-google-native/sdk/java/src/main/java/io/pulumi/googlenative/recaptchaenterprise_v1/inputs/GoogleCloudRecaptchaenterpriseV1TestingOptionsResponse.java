// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.recaptchaenterprise_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;


/**
 * Options for user acceptance testing.
 * 
 */
public final class GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse Empty = new GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse();

    /**
     * For challenge-based keys only (CHECKBOX, INVISIBLE), all challenge requests for this site will return nocaptcha if NOCAPTCHA, or an unsolvable challenge if CHALLENGE.
     * 
     */
    @InputImport(name="testingChallenge", required=true)
    private final String testingChallenge;

    public String getTestingChallenge() {
        return this.testingChallenge;
    }

    /**
     * All assessments for this Key will return this score. Must be between 0 (likely not legitimate) and 1 (likely legitimate) inclusive.
     * 
     */
    @InputImport(name="testingScore", required=true)
    private final Double testingScore;

    public Double getTestingScore() {
        return this.testingScore;
    }

    public GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse(
        String testingChallenge,
        Double testingScore) {
        this.testingChallenge = Objects.requireNonNull(testingChallenge, "expected parameter 'testingChallenge' to be non-null");
        this.testingScore = Objects.requireNonNull(testingScore, "expected parameter 'testingScore' to be non-null");
    }

    private GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse() {
        this.testingChallenge = null;
        this.testingScore = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String testingChallenge;
        private Double testingScore;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.testingChallenge = defaults.testingChallenge;
    	      this.testingScore = defaults.testingScore;
        }

        public Builder setTestingChallenge(String testingChallenge) {
            this.testingChallenge = Objects.requireNonNull(testingChallenge);
            return this;
        }

        public Builder setTestingScore(Double testingScore) {
            this.testingScore = Objects.requireNonNull(testingScore);
            return this;
        }

        public GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse build() {
            return new GoogleCloudRecaptchaenterpriseV1TestingOptionsResponse(testingChallenge, testingScore);
        }
    }
}
