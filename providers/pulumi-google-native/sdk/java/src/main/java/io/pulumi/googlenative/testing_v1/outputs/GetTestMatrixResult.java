// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.testing_v1.outputs.ClientInfoResponse;
import io.pulumi.googlenative.testing_v1.outputs.EnvironmentMatrixResponse;
import io.pulumi.googlenative.testing_v1.outputs.ResultStorageResponse;
import io.pulumi.googlenative.testing_v1.outputs.TestExecutionResponse;
import io.pulumi.googlenative.testing_v1.outputs.TestSpecificationResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetTestMatrixResult {
    private final ClientInfoResponse clientInfo;
    private final EnvironmentMatrixResponse environmentMatrix;
    private final Boolean failFast;
    private final Integer flakyTestAttempts;
    private final String invalidMatrixDetails;
    private final String outcomeSummary;
    private final String project;
    private final ResultStorageResponse resultStorage;
    private final String state;
    private final List<TestExecutionResponse> testExecutions;
    private final String testMatrixId;
    private final TestSpecificationResponse testSpecification;
    private final String timestamp;

    @OutputCustomType.Constructor({"clientInfo","environmentMatrix","failFast","flakyTestAttempts","invalidMatrixDetails","outcomeSummary","project","resultStorage","state","testExecutions","testMatrixId","testSpecification","timestamp"})
    private GetTestMatrixResult(
        ClientInfoResponse clientInfo,
        EnvironmentMatrixResponse environmentMatrix,
        Boolean failFast,
        Integer flakyTestAttempts,
        String invalidMatrixDetails,
        String outcomeSummary,
        String project,
        ResultStorageResponse resultStorage,
        String state,
        List<TestExecutionResponse> testExecutions,
        String testMatrixId,
        TestSpecificationResponse testSpecification,
        String timestamp) {
        this.clientInfo = Objects.requireNonNull(clientInfo);
        this.environmentMatrix = Objects.requireNonNull(environmentMatrix);
        this.failFast = Objects.requireNonNull(failFast);
        this.flakyTestAttempts = Objects.requireNonNull(flakyTestAttempts);
        this.invalidMatrixDetails = Objects.requireNonNull(invalidMatrixDetails);
        this.outcomeSummary = Objects.requireNonNull(outcomeSummary);
        this.project = Objects.requireNonNull(project);
        this.resultStorage = Objects.requireNonNull(resultStorage);
        this.state = Objects.requireNonNull(state);
        this.testExecutions = Objects.requireNonNull(testExecutions);
        this.testMatrixId = Objects.requireNonNull(testMatrixId);
        this.testSpecification = Objects.requireNonNull(testSpecification);
        this.timestamp = Objects.requireNonNull(timestamp);
    }

    public ClientInfoResponse getClientInfo() {
        return this.clientInfo;
    }
    public EnvironmentMatrixResponse getEnvironmentMatrix() {
        return this.environmentMatrix;
    }
    public Boolean getFailFast() {
        return this.failFast;
    }
    public Integer getFlakyTestAttempts() {
        return this.flakyTestAttempts;
    }
    public String getInvalidMatrixDetails() {
        return this.invalidMatrixDetails;
    }
    public String getOutcomeSummary() {
        return this.outcomeSummary;
    }
    public String getProject() {
        return this.project;
    }
    public ResultStorageResponse getResultStorage() {
        return this.resultStorage;
    }
    public String getState() {
        return this.state;
    }
    public List<TestExecutionResponse> getTestExecutions() {
        return this.testExecutions;
    }
    public String getTestMatrixId() {
        return this.testMatrixId;
    }
    public TestSpecificationResponse getTestSpecification() {
        return this.testSpecification;
    }
    public String getTimestamp() {
        return this.timestamp;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTestMatrixResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClientInfoResponse clientInfo;
        private EnvironmentMatrixResponse environmentMatrix;
        private Boolean failFast;
        private Integer flakyTestAttempts;
        private String invalidMatrixDetails;
        private String outcomeSummary;
        private String project;
        private ResultStorageResponse resultStorage;
        private String state;
        private List<TestExecutionResponse> testExecutions;
        private String testMatrixId;
        private TestSpecificationResponse testSpecification;
        private String timestamp;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTestMatrixResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clientInfo = defaults.clientInfo;
    	      this.environmentMatrix = defaults.environmentMatrix;
    	      this.failFast = defaults.failFast;
    	      this.flakyTestAttempts = defaults.flakyTestAttempts;
    	      this.invalidMatrixDetails = defaults.invalidMatrixDetails;
    	      this.outcomeSummary = defaults.outcomeSummary;
    	      this.project = defaults.project;
    	      this.resultStorage = defaults.resultStorage;
    	      this.state = defaults.state;
    	      this.testExecutions = defaults.testExecutions;
    	      this.testMatrixId = defaults.testMatrixId;
    	      this.testSpecification = defaults.testSpecification;
    	      this.timestamp = defaults.timestamp;
        }

        public Builder setClientInfo(ClientInfoResponse clientInfo) {
            this.clientInfo = Objects.requireNonNull(clientInfo);
            return this;
        }

        public Builder setEnvironmentMatrix(EnvironmentMatrixResponse environmentMatrix) {
            this.environmentMatrix = Objects.requireNonNull(environmentMatrix);
            return this;
        }

        public Builder setFailFast(Boolean failFast) {
            this.failFast = Objects.requireNonNull(failFast);
            return this;
        }

        public Builder setFlakyTestAttempts(Integer flakyTestAttempts) {
            this.flakyTestAttempts = Objects.requireNonNull(flakyTestAttempts);
            return this;
        }

        public Builder setInvalidMatrixDetails(String invalidMatrixDetails) {
            this.invalidMatrixDetails = Objects.requireNonNull(invalidMatrixDetails);
            return this;
        }

        public Builder setOutcomeSummary(String outcomeSummary) {
            this.outcomeSummary = Objects.requireNonNull(outcomeSummary);
            return this;
        }

        public Builder setProject(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }

        public Builder setResultStorage(ResultStorageResponse resultStorage) {
            this.resultStorage = Objects.requireNonNull(resultStorage);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setTestExecutions(List<TestExecutionResponse> testExecutions) {
            this.testExecutions = Objects.requireNonNull(testExecutions);
            return this;
        }

        public Builder setTestMatrixId(String testMatrixId) {
            this.testMatrixId = Objects.requireNonNull(testMatrixId);
            return this;
        }

        public Builder setTestSpecification(TestSpecificationResponse testSpecification) {
            this.testSpecification = Objects.requireNonNull(testSpecification);
            return this;
        }

        public Builder setTimestamp(String timestamp) {
            this.timestamp = Objects.requireNonNull(timestamp);
            return this;
        }

        public GetTestMatrixResult build() {
            return new GetTestMatrixResult(clientInfo, environmentMatrix, failFast, flakyTestAttempts, invalidMatrixDetails, outcomeSummary, project, resultStorage, state, testExecutions, testMatrixId, testSpecification, timestamp);
        }
    }
}
