// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.containeranalysis_v1.inputs.CVSSv3Response;
import io.pulumi.googlenative.containeranalysis_v1.inputs.DetailResponse;
import io.pulumi.googlenative.containeranalysis_v1.inputs.WindowsDetailResponse;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * A security vulnerability that can be found in resources.
 * 
 */
public final class VulnerabilityNoteResponse extends io.pulumi.resources.InvokeArgs {

    public static final VulnerabilityNoteResponse Empty = new VulnerabilityNoteResponse();

    /**
     * The CVSS score of this vulnerability. CVSS score is on a scale of 0 - 10 where 0 indicates low severity and 10 indicates high severity.
     * 
     */
    @Import(name="cvssScore", required=true)
      private final Double cvssScore;

    public Double cvssScore() {
        return this.cvssScore;
    }

    /**
     * The full description of the CVSSv3 for this vulnerability.
     * 
     */
    @Import(name="cvssV3", required=true)
      private final CVSSv3Response cvssV3;

    public CVSSv3Response cvssV3() {
        return this.cvssV3;
    }

    /**
     * Details of all known distros and packages affected by this vulnerability.
     * 
     */
    @Import(name="details", required=true)
      private final List<DetailResponse> details;

    public List<DetailResponse> details() {
        return this.details;
    }

    /**
     * The note provider assigned severity of this vulnerability.
     * 
     */
    @Import(name="severity", required=true)
      private final String severity;

    public String severity() {
        return this.severity;
    }

    /**
     * The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
     * 
     */
    @Import(name="sourceUpdateTime", required=true)
      private final String sourceUpdateTime;

    public String sourceUpdateTime() {
        return this.sourceUpdateTime;
    }

    /**
     * Windows details get their own format because the information format and model don't match a normal detail. Specifically Windows updates are done as patches, thus Windows vulnerabilities really are a missing package, rather than a package being at an incorrect version.
     * 
     */
    @Import(name="windowsDetails", required=true)
      private final List<WindowsDetailResponse> windowsDetails;

    public List<WindowsDetailResponse> windowsDetails() {
        return this.windowsDetails;
    }

    public VulnerabilityNoteResponse(
        Double cvssScore,
        CVSSv3Response cvssV3,
        List<DetailResponse> details,
        String severity,
        String sourceUpdateTime,
        List<WindowsDetailResponse> windowsDetails) {
        this.cvssScore = Objects.requireNonNull(cvssScore, "expected parameter 'cvssScore' to be non-null");
        this.cvssV3 = Objects.requireNonNull(cvssV3, "expected parameter 'cvssV3' to be non-null");
        this.details = Objects.requireNonNull(details, "expected parameter 'details' to be non-null");
        this.severity = Objects.requireNonNull(severity, "expected parameter 'severity' to be non-null");
        this.sourceUpdateTime = Objects.requireNonNull(sourceUpdateTime, "expected parameter 'sourceUpdateTime' to be non-null");
        this.windowsDetails = Objects.requireNonNull(windowsDetails, "expected parameter 'windowsDetails' to be non-null");
    }

    private VulnerabilityNoteResponse() {
        this.cvssScore = null;
        this.cvssV3 = null;
        this.details = List.of();
        this.severity = null;
        this.sourceUpdateTime = null;
        this.windowsDetails = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VulnerabilityNoteResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double cvssScore;
        private CVSSv3Response cvssV3;
        private List<DetailResponse> details;
        private String severity;
        private String sourceUpdateTime;
        private List<WindowsDetailResponse> windowsDetails;

        public Builder() {
    	      // Empty
        }

        public Builder(VulnerabilityNoteResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cvssScore = defaults.cvssScore;
    	      this.cvssV3 = defaults.cvssV3;
    	      this.details = defaults.details;
    	      this.severity = defaults.severity;
    	      this.sourceUpdateTime = defaults.sourceUpdateTime;
    	      this.windowsDetails = defaults.windowsDetails;
        }

        public Builder cvssScore(Double cvssScore) {
            this.cvssScore = Objects.requireNonNull(cvssScore);
            return this;
        }
        public Builder cvssV3(CVSSv3Response cvssV3) {
            this.cvssV3 = Objects.requireNonNull(cvssV3);
            return this;
        }
        public Builder details(List<DetailResponse> details) {
            this.details = Objects.requireNonNull(details);
            return this;
        }
        public Builder details(DetailResponse... details) {
            return details(List.of(details));
        }
        public Builder severity(String severity) {
            this.severity = Objects.requireNonNull(severity);
            return this;
        }
        public Builder sourceUpdateTime(String sourceUpdateTime) {
            this.sourceUpdateTime = Objects.requireNonNull(sourceUpdateTime);
            return this;
        }
        public Builder windowsDetails(List<WindowsDetailResponse> windowsDetails) {
            this.windowsDetails = Objects.requireNonNull(windowsDetails);
            return this;
        }
        public Builder windowsDetails(WindowsDetailResponse... windowsDetails) {
            return windowsDetails(List.of(windowsDetails));
        }        public VulnerabilityNoteResponse build() {
            return new VulnerabilityNoteResponse(cvssScore, cvssV3, details, severity, sourceUpdateTime, windowsDetails);
        }
    }
}
