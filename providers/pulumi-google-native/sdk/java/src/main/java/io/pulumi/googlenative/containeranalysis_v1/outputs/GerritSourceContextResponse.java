// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.googlenative.containeranalysis_v1.outputs.AliasContextResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GerritSourceContextResponse {
    /**
     * An alias, which may be a branch or tag.
     * 
     */
    private final AliasContextResponse aliasContext;
    /**
     * The full project name within the host. Projects may be nested, so "project/subproject" is a valid project name. The "repo name" is the hostURI/project.
     * 
     */
    private final String gerritProject;
    /**
     * The URI of a running Gerrit instance.
     * 
     */
    private final String hostUri;
    /**
     * A revision (commit) ID.
     * 
     */
    private final String revisionId;

    @CustomType.Constructor
    private GerritSourceContextResponse(
        @CustomType.Parameter("aliasContext") AliasContextResponse aliasContext,
        @CustomType.Parameter("gerritProject") String gerritProject,
        @CustomType.Parameter("hostUri") String hostUri,
        @CustomType.Parameter("revisionId") String revisionId) {
        this.aliasContext = aliasContext;
        this.gerritProject = gerritProject;
        this.hostUri = hostUri;
        this.revisionId = revisionId;
    }

    /**
     * An alias, which may be a branch or tag.
     * 
    */
    public AliasContextResponse getAliasContext() {
        return this.aliasContext;
    }
    /**
     * The full project name within the host. Projects may be nested, so "project/subproject" is a valid project name. The "repo name" is the hostURI/project.
     * 
    */
    public String getGerritProject() {
        return this.gerritProject;
    }
    /**
     * The URI of a running Gerrit instance.
     * 
    */
    public String getHostUri() {
        return this.hostUri;
    }
    /**
     * A revision (commit) ID.
     * 
    */
    public String getRevisionId() {
        return this.revisionId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GerritSourceContextResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AliasContextResponse aliasContext;
        private String gerritProject;
        private String hostUri;
        private String revisionId;

        public Builder() {
    	      // Empty
        }

        public Builder(GerritSourceContextResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliasContext = defaults.aliasContext;
    	      this.gerritProject = defaults.gerritProject;
    	      this.hostUri = defaults.hostUri;
    	      this.revisionId = defaults.revisionId;
        }

        public Builder aliasContext(AliasContextResponse aliasContext) {
            this.aliasContext = Objects.requireNonNull(aliasContext);
            return this;
        }
        public Builder gerritProject(String gerritProject) {
            this.gerritProject = Objects.requireNonNull(gerritProject);
            return this;
        }
        public Builder hostUri(String hostUri) {
            this.hostUri = Objects.requireNonNull(hostUri);
            return this;
        }
        public Builder revisionId(String revisionId) {
            this.revisionId = Objects.requireNonNull(revisionId);
            return this;
        }        public GerritSourceContextResponse build() {
            return new GerritSourceContextResponse(aliasContext, gerritProject, hostUri, revisionId);
        }
    }
}
