// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.containeranalysis_v1.inputs.AliasContextResponse;
import io.pulumi.googlenative.containeranalysis_v1.inputs.RepoIdResponse;
import java.lang.String;
import java.util.Objects;


/**
 * A CloudRepoSourceContext denotes a particular revision in a Google Cloud Source Repo.
 * 
 */
public final class CloudRepoSourceContextResponse extends io.pulumi.resources.InvokeArgs {

    public static final CloudRepoSourceContextResponse Empty = new CloudRepoSourceContextResponse();

    /**
     * An alias, which may be a branch or tag.
     * 
     */
    @Import(name="aliasContext", required=true)
      private final AliasContextResponse aliasContext;

    public AliasContextResponse getAliasContext() {
        return this.aliasContext;
    }

    /**
     * The ID of the repo.
     * 
     */
    @Import(name="repoId", required=true)
      private final RepoIdResponse repoId;

    public RepoIdResponse getRepoId() {
        return this.repoId;
    }

    /**
     * A revision ID.
     * 
     */
    @Import(name="revisionId", required=true)
      private final String revisionId;

    public String getRevisionId() {
        return this.revisionId;
    }

    public CloudRepoSourceContextResponse(
        AliasContextResponse aliasContext,
        RepoIdResponse repoId,
        String revisionId) {
        this.aliasContext = Objects.requireNonNull(aliasContext, "expected parameter 'aliasContext' to be non-null");
        this.repoId = Objects.requireNonNull(repoId, "expected parameter 'repoId' to be non-null");
        this.revisionId = Objects.requireNonNull(revisionId, "expected parameter 'revisionId' to be non-null");
    }

    private CloudRepoSourceContextResponse() {
        this.aliasContext = null;
        this.repoId = null;
        this.revisionId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudRepoSourceContextResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AliasContextResponse aliasContext;
        private RepoIdResponse repoId;
        private String revisionId;

        public Builder() {
    	      // Empty
        }

        public Builder(CloudRepoSourceContextResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliasContext = defaults.aliasContext;
    	      this.repoId = defaults.repoId;
    	      this.revisionId = defaults.revisionId;
        }

        public Builder aliasContext(AliasContextResponse aliasContext) {
            this.aliasContext = Objects.requireNonNull(aliasContext);
            return this;
        }
        public Builder repoId(RepoIdResponse repoId) {
            this.repoId = Objects.requireNonNull(repoId);
            return this;
        }
        public Builder revisionId(String revisionId) {
            this.revisionId = Objects.requireNonNull(revisionId);
            return this;
        }        public CloudRepoSourceContextResponse build() {
            return new CloudRepoSourceContextResponse(aliasContext, repoId, revisionId);
        }
    }
}
