// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.retail_v2beta.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.retail_v2beta.inputs.GoogleCloudRetailV2betaConditionQueryTermResponse;
import io.pulumi.googlenative.retail_v2beta.inputs.GoogleCloudRetailV2betaConditionTimeRangeResponse;
import java.util.List;
import java.util.Objects;


/**
 * Metadata that is used to define a condition that triggers an action. A valid condition must specify at least one of 'query_terms' or 'products_filter'. If multiple fields are specified, the condition is met if all the fields are satisfied e.g. if a set of query terms and product_filter are set, then only items matching the product_filter for requests with a query matching the query terms wil get boosted.
 * 
 */
public final class GoogleCloudRetailV2betaConditionResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudRetailV2betaConditionResponse Empty = new GoogleCloudRetailV2betaConditionResponse();

    /**
     * Range of time(s) specifying when Condition is active. Condition true if any time range matches.
     * 
     */
    @InputImport(name="activeTimeRange", required=true)
      private final List<GoogleCloudRetailV2betaConditionTimeRangeResponse> activeTimeRange;

    public List<GoogleCloudRetailV2betaConditionTimeRangeResponse> getActiveTimeRange() {
        return this.activeTimeRange;
    }

    /**
     * A list (up to 10 entries) of terms to match the query on. If not specified, match all queries. If many query terms are specified, the condition is matched if any of the terms is a match (i.e. using the OR operator).
     * 
     */
    @InputImport(name="queryTerms", required=true)
      private final List<GoogleCloudRetailV2betaConditionQueryTermResponse> queryTerms;

    public List<GoogleCloudRetailV2betaConditionQueryTermResponse> getQueryTerms() {
        return this.queryTerms;
    }

    public GoogleCloudRetailV2betaConditionResponse(
        List<GoogleCloudRetailV2betaConditionTimeRangeResponse> activeTimeRange,
        List<GoogleCloudRetailV2betaConditionQueryTermResponse> queryTerms) {
        this.activeTimeRange = Objects.requireNonNull(activeTimeRange, "expected parameter 'activeTimeRange' to be non-null");
        this.queryTerms = Objects.requireNonNull(queryTerms, "expected parameter 'queryTerms' to be non-null");
    }

    private GoogleCloudRetailV2betaConditionResponse() {
        this.activeTimeRange = List.of();
        this.queryTerms = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRetailV2betaConditionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GoogleCloudRetailV2betaConditionTimeRangeResponse> activeTimeRange;
        private List<GoogleCloudRetailV2betaConditionQueryTermResponse> queryTerms;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRetailV2betaConditionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activeTimeRange = defaults.activeTimeRange;
    	      this.queryTerms = defaults.queryTerms;
        }

        public Builder setActiveTimeRange(List<GoogleCloudRetailV2betaConditionTimeRangeResponse> activeTimeRange) {
            this.activeTimeRange = Objects.requireNonNull(activeTimeRange);
            return this;
        }

        public Builder setQueryTerms(List<GoogleCloudRetailV2betaConditionQueryTermResponse> queryTerms) {
            this.queryTerms = Objects.requireNonNull(queryTerms);
            return this;
        }
        public GoogleCloudRetailV2betaConditionResponse build() {
            return new GoogleCloudRetailV2betaConditionResponse(activeTimeRange, queryTerms);
        }
    }
}
