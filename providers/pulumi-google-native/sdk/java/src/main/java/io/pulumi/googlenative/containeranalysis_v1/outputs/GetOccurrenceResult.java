// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.googlenative.containeranalysis_v1.outputs.AttestationOccurrenceResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.BuildOccurrenceResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.ComplianceOccurrenceResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.DSSEAttestationOccurrenceResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.DeploymentOccurrenceResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.DiscoveryOccurrenceResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.EnvelopeResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.ImageOccurrenceResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.PackageOccurrenceResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.UpgradeOccurrenceResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.VulnerabilityOccurrenceResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetOccurrenceResult {
    /**
     * Describes an attestation of an artifact.
     * 
     */
    private final AttestationOccurrenceResponse attestation;
    /**
     * Describes a verifiable build.
     * 
     */
    private final BuildOccurrenceResponse build;
    /**
     * Describes a compliance violation on a linked resource.
     * 
     */
    private final ComplianceOccurrenceResponse compliance;
    /**
     * The time this occurrence was created.
     * 
     */
    private final String createTime;
    /**
     * Describes the deployment of an artifact on a runtime.
     * 
     */
    private final DeploymentOccurrenceResponse deployment;
    /**
     * Describes when a resource was discovered.
     * 
     */
    private final DiscoveryOccurrenceResponse discovery;
    /**
     * Describes an attestation of an artifact using dsse.
     * 
     */
    private final DSSEAttestationOccurrenceResponse dsseAttestation;
    /**
     * https://github.com/secure-systems-lab/dsse
     * 
     */
    private final EnvelopeResponse envelope;
    /**
     * Describes how this resource derives from the basis in the associated note.
     * 
     */
    private final ImageOccurrenceResponse image;
    /**
     * This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.
     * 
     */
    private final String kind;
    /**
     * The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.
     * 
     */
    private final String name;
    /**
     * Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.
     * 
     */
    private final String noteName;
    /**
     * Describes the installation of a package on the linked resource.
     * 
     */
    private final PackageOccurrenceResponse $package;
    /**
     * A description of actions that can be taken to remedy the note.
     * 
     */
    private final String remediation;
    /**
     * Immutable. A URI that represents the resource for which the occurrence applies. For example, `https://gcr.io/project/image@sha256:123abc` for a Docker image.
     * 
     */
    private final String resourceUri;
    /**
     * The time this occurrence was last updated.
     * 
     */
    private final String updateTime;
    /**
     * Describes an available package upgrade on the linked resource.
     * 
     */
    private final UpgradeOccurrenceResponse upgrade;
    /**
     * Describes a security vulnerability.
     * 
     */
    private final VulnerabilityOccurrenceResponse vulnerability;

    @CustomType.Constructor
    private GetOccurrenceResult(
        @CustomType.Parameter("attestation") AttestationOccurrenceResponse attestation,
        @CustomType.Parameter("build") BuildOccurrenceResponse build,
        @CustomType.Parameter("compliance") ComplianceOccurrenceResponse compliance,
        @CustomType.Parameter("createTime") String createTime,
        @CustomType.Parameter("deployment") DeploymentOccurrenceResponse deployment,
        @CustomType.Parameter("discovery") DiscoveryOccurrenceResponse discovery,
        @CustomType.Parameter("dsseAttestation") DSSEAttestationOccurrenceResponse dsseAttestation,
        @CustomType.Parameter("envelope") EnvelopeResponse envelope,
        @CustomType.Parameter("image") ImageOccurrenceResponse image,
        @CustomType.Parameter("kind") String kind,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("noteName") String noteName,
        @CustomType.Parameter("package") PackageOccurrenceResponse $package,
        @CustomType.Parameter("remediation") String remediation,
        @CustomType.Parameter("resourceUri") String resourceUri,
        @CustomType.Parameter("updateTime") String updateTime,
        @CustomType.Parameter("upgrade") UpgradeOccurrenceResponse upgrade,
        @CustomType.Parameter("vulnerability") VulnerabilityOccurrenceResponse vulnerability) {
        this.attestation = attestation;
        this.build = build;
        this.compliance = compliance;
        this.createTime = createTime;
        this.deployment = deployment;
        this.discovery = discovery;
        this.dsseAttestation = dsseAttestation;
        this.envelope = envelope;
        this.image = image;
        this.kind = kind;
        this.name = name;
        this.noteName = noteName;
        this.$package = $package;
        this.remediation = remediation;
        this.resourceUri = resourceUri;
        this.updateTime = updateTime;
        this.upgrade = upgrade;
        this.vulnerability = vulnerability;
    }

    /**
     * Describes an attestation of an artifact.
     * 
    */
    public AttestationOccurrenceResponse getAttestation() {
        return this.attestation;
    }
    /**
     * Describes a verifiable build.
     * 
    */
    public BuildOccurrenceResponse getBuild() {
        return this.build;
    }
    /**
     * Describes a compliance violation on a linked resource.
     * 
    */
    public ComplianceOccurrenceResponse getCompliance() {
        return this.compliance;
    }
    /**
     * The time this occurrence was created.
     * 
    */
    public String getCreateTime() {
        return this.createTime;
    }
    /**
     * Describes the deployment of an artifact on a runtime.
     * 
    */
    public DeploymentOccurrenceResponse getDeployment() {
        return this.deployment;
    }
    /**
     * Describes when a resource was discovered.
     * 
    */
    public DiscoveryOccurrenceResponse getDiscovery() {
        return this.discovery;
    }
    /**
     * Describes an attestation of an artifact using dsse.
     * 
    */
    public DSSEAttestationOccurrenceResponse getDsseAttestation() {
        return this.dsseAttestation;
    }
    /**
     * https://github.com/secure-systems-lab/dsse
     * 
    */
    public EnvelopeResponse getEnvelope() {
        return this.envelope;
    }
    /**
     * Describes how this resource derives from the basis in the associated note.
     * 
    */
    public ImageOccurrenceResponse getImage() {
        return this.image;
    }
    /**
     * This explicitly denotes which of the occurrence details are specified. This field can be used as a filter in list requests.
     * 
    */
    public String getKind() {
        return this.kind;
    }
    /**
     * The name of the occurrence in the form of `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Immutable. The analysis note associated with this occurrence, in the form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be used as a filter in list requests.
     * 
    */
    public String getNoteName() {
        return this.noteName;
    }
    /**
     * Describes the installation of a package on the linked resource.
     * 
    */
    public PackageOccurrenceResponse get$package() {
        return this.$package;
    }
    /**
     * A description of actions that can be taken to remedy the note.
     * 
    */
    public String getRemediation() {
        return this.remediation;
    }
    /**
     * Immutable. A URI that represents the resource for which the occurrence applies. For example, `https://gcr.io/project/image@sha256:123abc` for a Docker image.
     * 
    */
    public String getResourceUri() {
        return this.resourceUri;
    }
    /**
     * The time this occurrence was last updated.
     * 
    */
    public String getUpdateTime() {
        return this.updateTime;
    }
    /**
     * Describes an available package upgrade on the linked resource.
     * 
    */
    public UpgradeOccurrenceResponse getUpgrade() {
        return this.upgrade;
    }
    /**
     * Describes a security vulnerability.
     * 
    */
    public VulnerabilityOccurrenceResponse getVulnerability() {
        return this.vulnerability;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOccurrenceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AttestationOccurrenceResponse attestation;
        private BuildOccurrenceResponse build;
        private ComplianceOccurrenceResponse compliance;
        private String createTime;
        private DeploymentOccurrenceResponse deployment;
        private DiscoveryOccurrenceResponse discovery;
        private DSSEAttestationOccurrenceResponse dsseAttestation;
        private EnvelopeResponse envelope;
        private ImageOccurrenceResponse image;
        private String kind;
        private String name;
        private String noteName;
        private PackageOccurrenceResponse $package;
        private String remediation;
        private String resourceUri;
        private String updateTime;
        private UpgradeOccurrenceResponse upgrade;
        private VulnerabilityOccurrenceResponse vulnerability;

        public Builder() {
    	      // Empty
        }

        public Builder(GetOccurrenceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attestation = defaults.attestation;
    	      this.build = defaults.build;
    	      this.compliance = defaults.compliance;
    	      this.createTime = defaults.createTime;
    	      this.deployment = defaults.deployment;
    	      this.discovery = defaults.discovery;
    	      this.dsseAttestation = defaults.dsseAttestation;
    	      this.envelope = defaults.envelope;
    	      this.image = defaults.image;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.noteName = defaults.noteName;
    	      this.$package = defaults.$package;
    	      this.remediation = defaults.remediation;
    	      this.resourceUri = defaults.resourceUri;
    	      this.updateTime = defaults.updateTime;
    	      this.upgrade = defaults.upgrade;
    	      this.vulnerability = defaults.vulnerability;
        }

        public Builder attestation(AttestationOccurrenceResponse attestation) {
            this.attestation = Objects.requireNonNull(attestation);
            return this;
        }

        public Builder build(BuildOccurrenceResponse build) {
            this.build = Objects.requireNonNull(build);
            return this;
        }

        public Builder compliance(ComplianceOccurrenceResponse compliance) {
            this.compliance = Objects.requireNonNull(compliance);
            return this;
        }

        public Builder createTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder deployment(DeploymentOccurrenceResponse deployment) {
            this.deployment = Objects.requireNonNull(deployment);
            return this;
        }

        public Builder discovery(DiscoveryOccurrenceResponse discovery) {
            this.discovery = Objects.requireNonNull(discovery);
            return this;
        }

        public Builder dsseAttestation(DSSEAttestationOccurrenceResponse dsseAttestation) {
            this.dsseAttestation = Objects.requireNonNull(dsseAttestation);
            return this;
        }

        public Builder envelope(EnvelopeResponse envelope) {
            this.envelope = Objects.requireNonNull(envelope);
            return this;
        }

        public Builder image(ImageOccurrenceResponse image) {
            this.image = Objects.requireNonNull(image);
            return this;
        }

        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder noteName(String noteName) {
            this.noteName = Objects.requireNonNull(noteName);
            return this;
        }

        public Builder $package(PackageOccurrenceResponse $package) {
            this.$package = Objects.requireNonNull($package);
            return this;
        }

        public Builder remediation(String remediation) {
            this.remediation = Objects.requireNonNull(remediation);
            return this;
        }

        public Builder resourceUri(String resourceUri) {
            this.resourceUri = Objects.requireNonNull(resourceUri);
            return this;
        }

        public Builder updateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }

        public Builder upgrade(UpgradeOccurrenceResponse upgrade) {
            this.upgrade = Objects.requireNonNull(upgrade);
            return this;
        }

        public Builder vulnerability(VulnerabilityOccurrenceResponse vulnerability) {
            this.vulnerability = Objects.requireNonNull(vulnerability);
            return this;
        }
        public GetOccurrenceResult build() {
            return new GetOccurrenceResult(attestation, build, compliance, createTime, deployment, discovery, dsseAttestation, envelope, image, kind, name, noteName, $package, remediation, resourceUri, updateTime, upgrade, vulnerability);
        }
    }
}
