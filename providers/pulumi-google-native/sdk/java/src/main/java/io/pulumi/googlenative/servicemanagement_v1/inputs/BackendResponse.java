// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.servicemanagement_v1.inputs.BackendRuleResponse;
import java.util.List;
import java.util.Objects;


/**
 * `Backend` defines the backend configuration for a service.
 * 
 */
public final class BackendResponse extends io.pulumi.resources.InvokeArgs {

    public static final BackendResponse Empty = new BackendResponse();

    /**
     * A list of API backend rules that apply to individual API methods. **NOTE:** All service configuration rules follow "last one wins" order.
     * 
     */
    @InputImport(name="rules", required=true)
      private final List<BackendRuleResponse> rules;

    public List<BackendRuleResponse> getRules() {
        return this.rules;
    }

    public BackendResponse(List<BackendRuleResponse> rules) {
        this.rules = Objects.requireNonNull(rules, "expected parameter 'rules' to be non-null");
    }

    private BackendResponse() {
        this.rules = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<BackendRuleResponse> rules;

        public Builder() {
    	      // Empty
        }

        public Builder(BackendResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.rules = defaults.rules;
        }

        public Builder rules(List<BackendRuleResponse> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public BackendResponse build() {
            return new BackendResponse(rules);
        }
    }
}
