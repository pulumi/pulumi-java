// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v3.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3IntentArgs;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3PageArgs;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleCloudDialogflowCxV3ResponseMessageTextArgs;
import io.pulumi.googlenative.dialogflow_v3.inputs.GoogleRpcStatusArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The output from the virtual agent.
 * 
 */
public final class GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs Empty = new GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs();

    /**
     * The Page on which the utterance was spoken. Only name and displayName will be set.
     * 
     */
    @InputImport(name="currentPage")
      private final @Nullable Input<GoogleCloudDialogflowCxV3PageArgs> currentPage;

    public Input<GoogleCloudDialogflowCxV3PageArgs> getCurrentPage() {
        return this.currentPage == null ? Input.empty() : this.currentPage;
    }

    /**
     * Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
     * 
     */
    @InputImport(name="diagnosticInfo", required=true)
      private final Input<Map<String,String>> diagnosticInfo;

    public Input<Map<String,String>> getDiagnosticInfo() {
        return this.diagnosticInfo;
    }

    /**
     * The session parameters available to the bot at this point.
     * 
     */
    @InputImport(name="sessionParameters")
      private final @Nullable Input<Map<String,String>> sessionParameters;

    public Input<Map<String,String>> getSessionParameters() {
        return this.sessionParameters == null ? Input.empty() : this.sessionParameters;
    }

    /**
     * Response error from the agent in the test result. If set, other output is empty.
     * 
     */
    @InputImport(name="status")
      private final @Nullable Input<GoogleRpcStatusArgs> status;

    public Input<GoogleRpcStatusArgs> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    /**
     * The text responses from the agent for the turn.
     * 
     */
    @InputImport(name="textResponses")
      private final @Nullable Input<List<GoogleCloudDialogflowCxV3ResponseMessageTextArgs>> textResponses;

    public Input<List<GoogleCloudDialogflowCxV3ResponseMessageTextArgs>> getTextResponses() {
        return this.textResponses == null ? Input.empty() : this.textResponses;
    }

    /**
     * The Intent that triggered the response. Only name and displayName will be set.
     * 
     */
    @InputImport(name="triggeredIntent")
      private final @Nullable Input<GoogleCloudDialogflowCxV3IntentArgs> triggeredIntent;

    public Input<GoogleCloudDialogflowCxV3IntentArgs> getTriggeredIntent() {
        return this.triggeredIntent == null ? Input.empty() : this.triggeredIntent;
    }

    public GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs(
        @Nullable Input<GoogleCloudDialogflowCxV3PageArgs> currentPage,
        Input<Map<String,String>> diagnosticInfo,
        @Nullable Input<Map<String,String>> sessionParameters,
        @Nullable Input<GoogleRpcStatusArgs> status,
        @Nullable Input<List<GoogleCloudDialogflowCxV3ResponseMessageTextArgs>> textResponses,
        @Nullable Input<GoogleCloudDialogflowCxV3IntentArgs> triggeredIntent) {
        this.currentPage = currentPage;
        this.diagnosticInfo = Objects.requireNonNull(diagnosticInfo, "expected parameter 'diagnosticInfo' to be non-null");
        this.sessionParameters = sessionParameters;
        this.status = status;
        this.textResponses = textResponses;
        this.triggeredIntent = triggeredIntent;
    }

    private GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs() {
        this.currentPage = Input.empty();
        this.diagnosticInfo = Input.empty();
        this.sessionParameters = Input.empty();
        this.status = Input.empty();
        this.textResponses = Input.empty();
        this.triggeredIntent = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GoogleCloudDialogflowCxV3PageArgs> currentPage;
        private Input<Map<String,String>> diagnosticInfo;
        private @Nullable Input<Map<String,String>> sessionParameters;
        private @Nullable Input<GoogleRpcStatusArgs> status;
        private @Nullable Input<List<GoogleCloudDialogflowCxV3ResponseMessageTextArgs>> textResponses;
        private @Nullable Input<GoogleCloudDialogflowCxV3IntentArgs> triggeredIntent;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentPage = defaults.currentPage;
    	      this.diagnosticInfo = defaults.diagnosticInfo;
    	      this.sessionParameters = defaults.sessionParameters;
    	      this.status = defaults.status;
    	      this.textResponses = defaults.textResponses;
    	      this.triggeredIntent = defaults.triggeredIntent;
        }

        public Builder setCurrentPage(@Nullable Input<GoogleCloudDialogflowCxV3PageArgs> currentPage) {
            this.currentPage = currentPage;
            return this;
        }

        public Builder setCurrentPage(@Nullable GoogleCloudDialogflowCxV3PageArgs currentPage) {
            this.currentPage = Input.ofNullable(currentPage);
            return this;
        }

        public Builder setDiagnosticInfo(Input<Map<String,String>> diagnosticInfo) {
            this.diagnosticInfo = Objects.requireNonNull(diagnosticInfo);
            return this;
        }

        public Builder setDiagnosticInfo(Map<String,String> diagnosticInfo) {
            this.diagnosticInfo = Input.of(Objects.requireNonNull(diagnosticInfo));
            return this;
        }

        public Builder setSessionParameters(@Nullable Input<Map<String,String>> sessionParameters) {
            this.sessionParameters = sessionParameters;
            return this;
        }

        public Builder setSessionParameters(@Nullable Map<String,String> sessionParameters) {
            this.sessionParameters = Input.ofNullable(sessionParameters);
            return this;
        }

        public Builder setStatus(@Nullable Input<GoogleRpcStatusArgs> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable GoogleRpcStatusArgs status) {
            this.status = Input.ofNullable(status);
            return this;
        }

        public Builder setTextResponses(@Nullable Input<List<GoogleCloudDialogflowCxV3ResponseMessageTextArgs>> textResponses) {
            this.textResponses = textResponses;
            return this;
        }

        public Builder setTextResponses(@Nullable List<GoogleCloudDialogflowCxV3ResponseMessageTextArgs> textResponses) {
            this.textResponses = Input.ofNullable(textResponses);
            return this;
        }

        public Builder setTriggeredIntent(@Nullable Input<GoogleCloudDialogflowCxV3IntentArgs> triggeredIntent) {
            this.triggeredIntent = triggeredIntent;
            return this;
        }

        public Builder setTriggeredIntent(@Nullable GoogleCloudDialogflowCxV3IntentArgs triggeredIntent) {
            this.triggeredIntent = Input.ofNullable(triggeredIntent);
            return this;
        }
        public GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs build() {
            return new GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutputArgs(currentPage, diagnosticInfo, sessionParameters, status, textResponses, triggeredIntent);
        }
    }
}
