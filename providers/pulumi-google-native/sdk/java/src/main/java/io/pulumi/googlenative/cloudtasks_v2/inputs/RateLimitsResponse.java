// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudtasks_v2.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;


public final class RateLimitsResponse extends io.pulumi.resources.InvokeArgs {

    public static final RateLimitsResponse Empty = new RateLimitsResponse();

    @InputImport(name="maxBurstSize", required=true)
    private final Integer maxBurstSize;

    public Integer getMaxBurstSize() {
        return this.maxBurstSize;
    }

    @InputImport(name="maxConcurrentDispatches", required=true)
    private final Integer maxConcurrentDispatches;

    public Integer getMaxConcurrentDispatches() {
        return this.maxConcurrentDispatches;
    }

    @InputImport(name="maxDispatchesPerSecond", required=true)
    private final Double maxDispatchesPerSecond;

    public Double getMaxDispatchesPerSecond() {
        return this.maxDispatchesPerSecond;
    }

    public RateLimitsResponse(
        Integer maxBurstSize,
        Integer maxConcurrentDispatches,
        Double maxDispatchesPerSecond) {
        this.maxBurstSize = Objects.requireNonNull(maxBurstSize, "expected parameter 'maxBurstSize' to be non-null");
        this.maxConcurrentDispatches = Objects.requireNonNull(maxConcurrentDispatches, "expected parameter 'maxConcurrentDispatches' to be non-null");
        this.maxDispatchesPerSecond = Objects.requireNonNull(maxDispatchesPerSecond, "expected parameter 'maxDispatchesPerSecond' to be non-null");
    }

    private RateLimitsResponse() {
        this.maxBurstSize = null;
        this.maxConcurrentDispatches = null;
        this.maxDispatchesPerSecond = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RateLimitsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer maxBurstSize;
        private Integer maxConcurrentDispatches;
        private Double maxDispatchesPerSecond;

        public Builder() {
    	      // Empty
        }

        public Builder(RateLimitsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxBurstSize = defaults.maxBurstSize;
    	      this.maxConcurrentDispatches = defaults.maxConcurrentDispatches;
    	      this.maxDispatchesPerSecond = defaults.maxDispatchesPerSecond;
        }

        public Builder setMaxBurstSize(Integer maxBurstSize) {
            this.maxBurstSize = Objects.requireNonNull(maxBurstSize);
            return this;
        }

        public Builder setMaxConcurrentDispatches(Integer maxConcurrentDispatches) {
            this.maxConcurrentDispatches = Objects.requireNonNull(maxConcurrentDispatches);
            return this;
        }

        public Builder setMaxDispatchesPerSecond(Double maxDispatchesPerSecond) {
            this.maxDispatchesPerSecond = Objects.requireNonNull(maxDispatchesPerSecond);
            return this;
        }

        public RateLimitsResponse build() {
            return new RateLimitsResponse(maxBurstSize, maxConcurrentDispatches, maxDispatchesPerSecond);
        }
    }
}
