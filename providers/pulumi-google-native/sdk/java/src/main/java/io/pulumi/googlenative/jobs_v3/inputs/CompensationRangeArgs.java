// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.jobs_v3.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.jobs_v3.inputs.MoneyArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Compensation range.
 * 
 */
public final class CompensationRangeArgs extends io.pulumi.resources.ResourceArgs {

    public static final CompensationRangeArgs Empty = new CompensationRangeArgs();

    /**
     * Optional. The maximum amount of compensation. If left empty, the value is set to a maximal compensation value and the currency code is set to match the currency code of min_compensation.
     * 
     */
    @Import(name="maxCompensation")
      private final @Nullable Output<MoneyArgs> maxCompensation;

    public Output<MoneyArgs> maxCompensation() {
        return this.maxCompensation == null ? Codegen.empty() : this.maxCompensation;
    }

    /**
     * Optional. The minimum amount of compensation. If left empty, the value is set to zero and the currency code is set to match the currency code of max_compensation.
     * 
     */
    @Import(name="minCompensation")
      private final @Nullable Output<MoneyArgs> minCompensation;

    public Output<MoneyArgs> minCompensation() {
        return this.minCompensation == null ? Codegen.empty() : this.minCompensation;
    }

    public CompensationRangeArgs(
        @Nullable Output<MoneyArgs> maxCompensation,
        @Nullable Output<MoneyArgs> minCompensation) {
        this.maxCompensation = maxCompensation;
        this.minCompensation = minCompensation;
    }

    private CompensationRangeArgs() {
        this.maxCompensation = Codegen.empty();
        this.minCompensation = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CompensationRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<MoneyArgs> maxCompensation;
        private @Nullable Output<MoneyArgs> minCompensation;

        public Builder() {
    	      // Empty
        }

        public Builder(CompensationRangeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxCompensation = defaults.maxCompensation;
    	      this.minCompensation = defaults.minCompensation;
        }

        public Builder maxCompensation(@Nullable Output<MoneyArgs> maxCompensation) {
            this.maxCompensation = maxCompensation;
            return this;
        }
        public Builder maxCompensation(@Nullable MoneyArgs maxCompensation) {
            this.maxCompensation = Codegen.ofNullable(maxCompensation);
            return this;
        }
        public Builder minCompensation(@Nullable Output<MoneyArgs> minCompensation) {
            this.minCompensation = minCompensation;
            return this;
        }
        public Builder minCompensation(@Nullable MoneyArgs minCompensation) {
            this.minCompensation = Codegen.ofNullable(minCompensation);
            return this;
        }        public CompensationRangeArgs build() {
            return new CompensationRangeArgs(maxCompensation, minCompensation);
        }
    }
}
