// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.websecurityscanner_v1alpha;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.websecurityscanner_v1alpha.enums.ScanConfigTargetPlatformsItem;
import io.pulumi.googlenative.websecurityscanner_v1alpha.enums.ScanConfigUserAgent;
import io.pulumi.googlenative.websecurityscanner_v1alpha.inputs.AuthenticationArgs;
import io.pulumi.googlenative.websecurityscanner_v1alpha.inputs.ScanRunArgs;
import io.pulumi.googlenative.websecurityscanner_v1alpha.inputs.ScheduleArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ScanConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final ScanConfigArgs Empty = new ScanConfigArgs();

    @InputImport(name="authentication")
    private final @Nullable Input<AuthenticationArgs> authentication;

    public Input<AuthenticationArgs> getAuthentication() {
        return this.authentication == null ? Input.empty() : this.authentication;
    }

    @InputImport(name="blacklistPatterns")
    private final @Nullable Input<List<String>> blacklistPatterns;

    public Input<List<String>> getBlacklistPatterns() {
        return this.blacklistPatterns == null ? Input.empty() : this.blacklistPatterns;
    }

    @InputImport(name="displayName", required=true)
    private final Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName;
    }

    @InputImport(name="latestRun")
    private final @Nullable Input<ScanRunArgs> latestRun;

    public Input<ScanRunArgs> getLatestRun() {
        return this.latestRun == null ? Input.empty() : this.latestRun;
    }

    @InputImport(name="maxQps")
    private final @Nullable Input<Integer> maxQps;

    public Input<Integer> getMaxQps() {
        return this.maxQps == null ? Input.empty() : this.maxQps;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="schedule")
    private final @Nullable Input<ScheduleArgs> schedule;

    public Input<ScheduleArgs> getSchedule() {
        return this.schedule == null ? Input.empty() : this.schedule;
    }

    @InputImport(name="startingUrls", required=true)
    private final Input<List<String>> startingUrls;

    public Input<List<String>> getStartingUrls() {
        return this.startingUrls;
    }

    @InputImport(name="targetPlatforms")
    private final @Nullable Input<List<ScanConfigTargetPlatformsItem>> targetPlatforms;

    public Input<List<ScanConfigTargetPlatformsItem>> getTargetPlatforms() {
        return this.targetPlatforms == null ? Input.empty() : this.targetPlatforms;
    }

    @InputImport(name="userAgent")
    private final @Nullable Input<ScanConfigUserAgent> userAgent;

    public Input<ScanConfigUserAgent> getUserAgent() {
        return this.userAgent == null ? Input.empty() : this.userAgent;
    }

    public ScanConfigArgs(
        @Nullable Input<AuthenticationArgs> authentication,
        @Nullable Input<List<String>> blacklistPatterns,
        Input<String> displayName,
        @Nullable Input<ScanRunArgs> latestRun,
        @Nullable Input<Integer> maxQps,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<ScheduleArgs> schedule,
        Input<List<String>> startingUrls,
        @Nullable Input<List<ScanConfigTargetPlatformsItem>> targetPlatforms,
        @Nullable Input<ScanConfigUserAgent> userAgent) {
        this.authentication = authentication;
        this.blacklistPatterns = blacklistPatterns;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.latestRun = latestRun;
        this.maxQps = maxQps;
        this.name = name;
        this.project = project;
        this.schedule = schedule;
        this.startingUrls = Objects.requireNonNull(startingUrls, "expected parameter 'startingUrls' to be non-null");
        this.targetPlatforms = targetPlatforms;
        this.userAgent = userAgent;
    }

    private ScanConfigArgs() {
        this.authentication = Input.empty();
        this.blacklistPatterns = Input.empty();
        this.displayName = Input.empty();
        this.latestRun = Input.empty();
        this.maxQps = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.schedule = Input.empty();
        this.startingUrls = Input.empty();
        this.targetPlatforms = Input.empty();
        this.userAgent = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScanConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AuthenticationArgs> authentication;
        private @Nullable Input<List<String>> blacklistPatterns;
        private Input<String> displayName;
        private @Nullable Input<ScanRunArgs> latestRun;
        private @Nullable Input<Integer> maxQps;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<ScheduleArgs> schedule;
        private Input<List<String>> startingUrls;
        private @Nullable Input<List<ScanConfigTargetPlatformsItem>> targetPlatforms;
        private @Nullable Input<ScanConfigUserAgent> userAgent;

        public Builder() {
    	      // Empty
        }

        public Builder(ScanConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authentication = defaults.authentication;
    	      this.blacklistPatterns = defaults.blacklistPatterns;
    	      this.displayName = defaults.displayName;
    	      this.latestRun = defaults.latestRun;
    	      this.maxQps = defaults.maxQps;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.schedule = defaults.schedule;
    	      this.startingUrls = defaults.startingUrls;
    	      this.targetPlatforms = defaults.targetPlatforms;
    	      this.userAgent = defaults.userAgent;
        }

        public Builder setAuthentication(@Nullable Input<AuthenticationArgs> authentication) {
            this.authentication = authentication;
            return this;
        }

        public Builder setAuthentication(@Nullable AuthenticationArgs authentication) {
            this.authentication = Input.ofNullable(authentication);
            return this;
        }

        public Builder setBlacklistPatterns(@Nullable Input<List<String>> blacklistPatterns) {
            this.blacklistPatterns = blacklistPatterns;
            return this;
        }

        public Builder setBlacklistPatterns(@Nullable List<String> blacklistPatterns) {
            this.blacklistPatterns = Input.ofNullable(blacklistPatterns);
            return this;
        }

        public Builder setDisplayName(Input<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Input.of(Objects.requireNonNull(displayName));
            return this;
        }

        public Builder setLatestRun(@Nullable Input<ScanRunArgs> latestRun) {
            this.latestRun = latestRun;
            return this;
        }

        public Builder setLatestRun(@Nullable ScanRunArgs latestRun) {
            this.latestRun = Input.ofNullable(latestRun);
            return this;
        }

        public Builder setMaxQps(@Nullable Input<Integer> maxQps) {
            this.maxQps = maxQps;
            return this;
        }

        public Builder setMaxQps(@Nullable Integer maxQps) {
            this.maxQps = Input.ofNullable(maxQps);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setSchedule(@Nullable Input<ScheduleArgs> schedule) {
            this.schedule = schedule;
            return this;
        }

        public Builder setSchedule(@Nullable ScheduleArgs schedule) {
            this.schedule = Input.ofNullable(schedule);
            return this;
        }

        public Builder setStartingUrls(Input<List<String>> startingUrls) {
            this.startingUrls = Objects.requireNonNull(startingUrls);
            return this;
        }

        public Builder setStartingUrls(List<String> startingUrls) {
            this.startingUrls = Input.of(Objects.requireNonNull(startingUrls));
            return this;
        }

        public Builder setTargetPlatforms(@Nullable Input<List<ScanConfigTargetPlatformsItem>> targetPlatforms) {
            this.targetPlatforms = targetPlatforms;
            return this;
        }

        public Builder setTargetPlatforms(@Nullable List<ScanConfigTargetPlatformsItem> targetPlatforms) {
            this.targetPlatforms = Input.ofNullable(targetPlatforms);
            return this;
        }

        public Builder setUserAgent(@Nullable Input<ScanConfigUserAgent> userAgent) {
            this.userAgent = userAgent;
            return this;
        }

        public Builder setUserAgent(@Nullable ScanConfigUserAgent userAgent) {
            this.userAgent = Input.ofNullable(userAgent);
            return this;
        }

        public ScanConfigArgs build() {
            return new ScanConfigArgs(authentication, blacklistPatterns, displayName, latestRun, maxQps, name, project, schedule, startingUrls, targetPlatforms, userAgent);
        }
    }
}
