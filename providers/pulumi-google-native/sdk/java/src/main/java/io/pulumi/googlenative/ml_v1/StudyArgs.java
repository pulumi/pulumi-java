// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.ml_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.ml_v1.inputs.GoogleCloudMlV1__StudyConfigArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class StudyArgs extends io.pulumi.resources.ResourceArgs {

    public static final StudyArgs Empty = new StudyArgs();

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * Configuration of the study.
     * 
     */
    @Import(name="studyConfig", required=true)
      private final Output<GoogleCloudMlV1__StudyConfigArgs> studyConfig;

    public Output<GoogleCloudMlV1__StudyConfigArgs> studyConfig() {
        return this.studyConfig;
    }

    @Import(name="studyId", required=true)
      private final Output<String> studyId;

    public Output<String> studyId() {
        return this.studyId;
    }

    public StudyArgs(
        @Nullable Output<String> location,
        @Nullable Output<String> project,
        Output<GoogleCloudMlV1__StudyConfigArgs> studyConfig,
        Output<String> studyId) {
        this.location = location;
        this.project = project;
        this.studyConfig = Objects.requireNonNull(studyConfig, "expected parameter 'studyConfig' to be non-null");
        this.studyId = Objects.requireNonNull(studyId, "expected parameter 'studyId' to be non-null");
    }

    private StudyArgs() {
        this.location = Codegen.empty();
        this.project = Codegen.empty();
        this.studyConfig = Codegen.empty();
        this.studyId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StudyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> location;
        private @Nullable Output<String> project;
        private Output<GoogleCloudMlV1__StudyConfigArgs> studyConfig;
        private Output<String> studyId;

        public Builder() {
    	      // Empty
        }

        public Builder(StudyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.project = defaults.project;
    	      this.studyConfig = defaults.studyConfig;
    	      this.studyId = defaults.studyId;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder studyConfig(Output<GoogleCloudMlV1__StudyConfigArgs> studyConfig) {
            this.studyConfig = Objects.requireNonNull(studyConfig);
            return this;
        }
        public Builder studyConfig(GoogleCloudMlV1__StudyConfigArgs studyConfig) {
            this.studyConfig = Output.of(Objects.requireNonNull(studyConfig));
            return this;
        }
        public Builder studyId(Output<String> studyId) {
            this.studyId = Objects.requireNonNull(studyId);
            return this;
        }
        public Builder studyId(String studyId) {
            this.studyId = Output.of(Objects.requireNonNull(studyId));
            return this;
        }        public StudyArgs build() {
            return new StudyArgs(location, project, studyConfig, studyId);
        }
    }
}
