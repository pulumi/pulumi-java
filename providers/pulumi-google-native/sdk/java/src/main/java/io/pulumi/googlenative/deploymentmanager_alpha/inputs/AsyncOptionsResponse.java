// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.deploymentmanager_alpha.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.deploymentmanager_alpha.inputs.PollingOptionsResponse;
import java.lang.String;
import java.util.Objects;


/**
 * Async options that determine when a resource should finish.
 * 
 */
public final class AsyncOptionsResponse extends io.pulumi.resources.InvokeArgs {

    public static final AsyncOptionsResponse Empty = new AsyncOptionsResponse();

    /**
     * Method regex where this policy will apply.
     * 
     */
    @InputImport(name="methodMatch", required=true)
    private final String methodMatch;

    public String getMethodMatch() {
        return this.methodMatch;
    }

    /**
     * Deployment manager will poll instances for this API resource setting a RUNNING state, and blocking until polling conditions tell whether the resource is completed or failed.
     * 
     */
    @InputImport(name="pollingOptions", required=true)
    private final PollingOptionsResponse pollingOptions;

    public PollingOptionsResponse getPollingOptions() {
        return this.pollingOptions;
    }

    public AsyncOptionsResponse(
        String methodMatch,
        PollingOptionsResponse pollingOptions) {
        this.methodMatch = Objects.requireNonNull(methodMatch, "expected parameter 'methodMatch' to be non-null");
        this.pollingOptions = Objects.requireNonNull(pollingOptions, "expected parameter 'pollingOptions' to be non-null");
    }

    private AsyncOptionsResponse() {
        this.methodMatch = null;
        this.pollingOptions = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AsyncOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String methodMatch;
        private PollingOptionsResponse pollingOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(AsyncOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.methodMatch = defaults.methodMatch;
    	      this.pollingOptions = defaults.pollingOptions;
        }

        public Builder setMethodMatch(String methodMatch) {
            this.methodMatch = Objects.requireNonNull(methodMatch);
            return this;
        }

        public Builder setPollingOptions(PollingOptionsResponse pollingOptions) {
            this.pollingOptions = Objects.requireNonNull(pollingOptions);
            return this;
        }

        public AsyncOptionsResponse build() {
            return new AsyncOptionsResponse(methodMatch, pollingOptions);
        }
    }
}
