// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.servicemanagement_v1.outputs.DocumentationRuleResponse;
import io.pulumi.googlenative.servicemanagement_v1.outputs.PageResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class DocumentationResponse {
    private final String documentationRootUrl;
    private final String overview;
    private final List<PageResponse> pages;
    private final List<DocumentationRuleResponse> rules;
    private final String serviceRootUrl;
    private final String summary;

    @OutputCustomType.Constructor({"documentationRootUrl","overview","pages","rules","serviceRootUrl","summary"})
    private DocumentationResponse(
        String documentationRootUrl,
        String overview,
        List<PageResponse> pages,
        List<DocumentationRuleResponse> rules,
        String serviceRootUrl,
        String summary) {
        this.documentationRootUrl = Objects.requireNonNull(documentationRootUrl);
        this.overview = Objects.requireNonNull(overview);
        this.pages = Objects.requireNonNull(pages);
        this.rules = Objects.requireNonNull(rules);
        this.serviceRootUrl = Objects.requireNonNull(serviceRootUrl);
        this.summary = Objects.requireNonNull(summary);
    }

    public String getDocumentationRootUrl() {
        return this.documentationRootUrl;
    }
    public String getOverview() {
        return this.overview;
    }
    public List<PageResponse> getPages() {
        return this.pages;
    }
    public List<DocumentationRuleResponse> getRules() {
        return this.rules;
    }
    public String getServiceRootUrl() {
        return this.serviceRootUrl;
    }
    public String getSummary() {
        return this.summary;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DocumentationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String documentationRootUrl;
        private String overview;
        private List<PageResponse> pages;
        private List<DocumentationRuleResponse> rules;
        private String serviceRootUrl;
        private String summary;

        public Builder() {
    	      // Empty
        }

        public Builder(DocumentationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.documentationRootUrl = defaults.documentationRootUrl;
    	      this.overview = defaults.overview;
    	      this.pages = defaults.pages;
    	      this.rules = defaults.rules;
    	      this.serviceRootUrl = defaults.serviceRootUrl;
    	      this.summary = defaults.summary;
        }

        public Builder setDocumentationRootUrl(String documentationRootUrl) {
            this.documentationRootUrl = Objects.requireNonNull(documentationRootUrl);
            return this;
        }

        public Builder setOverview(String overview) {
            this.overview = Objects.requireNonNull(overview);
            return this;
        }

        public Builder setPages(List<PageResponse> pages) {
            this.pages = Objects.requireNonNull(pages);
            return this;
        }

        public Builder setRules(List<DocumentationRuleResponse> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }

        public Builder setServiceRootUrl(String serviceRootUrl) {
            this.serviceRootUrl = Objects.requireNonNull(serviceRootUrl);
            return this;
        }

        public Builder setSummary(String summary) {
            this.summary = Objects.requireNonNull(summary);
            return this;
        }

        public DocumentationResponse build() {
            return new DocumentationResponse(documentationRootUrl, overview, pages, rules, serviceRootUrl, summary);
        }
    }
}
