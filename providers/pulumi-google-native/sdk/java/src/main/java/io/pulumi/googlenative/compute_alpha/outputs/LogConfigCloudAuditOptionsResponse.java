// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_alpha.outputs.AuthorizationLoggingOptionsResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class LogConfigCloudAuditOptionsResponse {
    private final AuthorizationLoggingOptionsResponse authorizationLoggingOptions;
    private final String logName;

    @OutputCustomType.Constructor({"authorizationLoggingOptions","logName"})
    private LogConfigCloudAuditOptionsResponse(
        AuthorizationLoggingOptionsResponse authorizationLoggingOptions,
        String logName) {
        this.authorizationLoggingOptions = Objects.requireNonNull(authorizationLoggingOptions);
        this.logName = Objects.requireNonNull(logName);
    }

    public AuthorizationLoggingOptionsResponse getAuthorizationLoggingOptions() {
        return this.authorizationLoggingOptions;
    }
    public String getLogName() {
        return this.logName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(LogConfigCloudAuditOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuthorizationLoggingOptionsResponse authorizationLoggingOptions;
        private String logName;

        public Builder() {
    	      // Empty
        }

        public Builder(LogConfigCloudAuditOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizationLoggingOptions = defaults.authorizationLoggingOptions;
    	      this.logName = defaults.logName;
        }

        public Builder setAuthorizationLoggingOptions(AuthorizationLoggingOptionsResponse authorizationLoggingOptions) {
            this.authorizationLoggingOptions = Objects.requireNonNull(authorizationLoggingOptions);
            return this;
        }

        public Builder setLogName(String logName) {
            this.logName = Objects.requireNonNull(logName);
            return this;
        }

        public LogConfigCloudAuditOptionsResponse build() {
            return new LogConfigCloudAuditOptionsResponse(authorizationLoggingOptions, logName);
        }
    }
}
