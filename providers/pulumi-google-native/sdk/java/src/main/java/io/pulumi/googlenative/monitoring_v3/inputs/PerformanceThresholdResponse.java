// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v3.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.monitoring_v3.inputs.BasicSliResponse;
import io.pulumi.googlenative.monitoring_v3.inputs.RequestBasedSliResponse;
import java.lang.Double;
import java.util.Objects;


public final class PerformanceThresholdResponse extends io.pulumi.resources.InvokeArgs {

    public static final PerformanceThresholdResponse Empty = new PerformanceThresholdResponse();

    @InputImport(name="basicSliPerformance", required=true)
    private final BasicSliResponse basicSliPerformance;

    public BasicSliResponse getBasicSliPerformance() {
        return this.basicSliPerformance;
    }

    @InputImport(name="performance", required=true)
    private final RequestBasedSliResponse performance;

    public RequestBasedSliResponse getPerformance() {
        return this.performance;
    }

    @InputImport(name="threshold", required=true)
    private final Double threshold;

    public Double getThreshold() {
        return this.threshold;
    }

    public PerformanceThresholdResponse(
        BasicSliResponse basicSliPerformance,
        RequestBasedSliResponse performance,
        Double threshold) {
        this.basicSliPerformance = Objects.requireNonNull(basicSliPerformance, "expected parameter 'basicSliPerformance' to be non-null");
        this.performance = Objects.requireNonNull(performance, "expected parameter 'performance' to be non-null");
        this.threshold = Objects.requireNonNull(threshold, "expected parameter 'threshold' to be non-null");
    }

    private PerformanceThresholdResponse() {
        this.basicSliPerformance = null;
        this.performance = null;
        this.threshold = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PerformanceThresholdResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BasicSliResponse basicSliPerformance;
        private RequestBasedSliResponse performance;
        private Double threshold;

        public Builder() {
    	      // Empty
        }

        public Builder(PerformanceThresholdResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.basicSliPerformance = defaults.basicSliPerformance;
    	      this.performance = defaults.performance;
    	      this.threshold = defaults.threshold;
        }

        public Builder setBasicSliPerformance(BasicSliResponse basicSliPerformance) {
            this.basicSliPerformance = Objects.requireNonNull(basicSliPerformance);
            return this;
        }

        public Builder setPerformance(RequestBasedSliResponse performance) {
            this.performance = Objects.requireNonNull(performance);
            return this;
        }

        public Builder setThreshold(Double threshold) {
            this.threshold = Objects.requireNonNull(threshold);
            return this;
        }

        public PerformanceThresholdResponse build() {
            return new PerformanceThresholdResponse(basicSliPerformance, performance, threshold);
        }
    }
}
