// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v3.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.googlenative.monitoring_v3.outputs.AppEngineResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.CloudEndpointsResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.ClusterIstioResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.CustomResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.IstioCanonicalServiceResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.MeshIstioResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.TelemetryResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServiceResult {
    /**
     * Type used for App Engine services.
     * 
     */
    private final AppEngineResponse appEngine;
    /**
     * Type used for Cloud Endpoints services.
     * 
     */
    private final CloudEndpointsResponse cloudEndpoints;
    /**
     * Type used for Istio services that live in a Kubernetes cluster.
     * 
     */
    private final ClusterIstioResponse clusterIstio;
    /**
     * Custom service type.
     * 
     */
    private final CustomResponse custom;
    /**
     * Name used for UI elements listing this Service.
     * 
     */
    private final String displayName;
    /**
     * Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
     * 
     */
    private final IstioCanonicalServiceResponse istioCanonicalService;
    /**
     * Type used for Istio services scoped to an Istio mesh.
     * 
     */
    private final MeshIstioResponse meshIstio;
    /**
     * Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
     * 
     */
    private final String name;
    /**
     * Configuration for how to query telemetry on a Service.
     * 
     */
    private final TelemetryResponse telemetry;
    /**
     * Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
     * 
     */
    private final Map<String,String> userLabels;

    @CustomType.Constructor
    private GetServiceResult(
        @CustomType.Parameter("appEngine") AppEngineResponse appEngine,
        @CustomType.Parameter("cloudEndpoints") CloudEndpointsResponse cloudEndpoints,
        @CustomType.Parameter("clusterIstio") ClusterIstioResponse clusterIstio,
        @CustomType.Parameter("custom") CustomResponse custom,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("istioCanonicalService") IstioCanonicalServiceResponse istioCanonicalService,
        @CustomType.Parameter("meshIstio") MeshIstioResponse meshIstio,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("telemetry") TelemetryResponse telemetry,
        @CustomType.Parameter("userLabels") Map<String,String> userLabels) {
        this.appEngine = appEngine;
        this.cloudEndpoints = cloudEndpoints;
        this.clusterIstio = clusterIstio;
        this.custom = custom;
        this.displayName = displayName;
        this.istioCanonicalService = istioCanonicalService;
        this.meshIstio = meshIstio;
        this.name = name;
        this.telemetry = telemetry;
        this.userLabels = userLabels;
    }

    /**
     * Type used for App Engine services.
     * 
    */
    public AppEngineResponse appEngine() {
        return this.appEngine;
    }
    /**
     * Type used for Cloud Endpoints services.
     * 
    */
    public CloudEndpointsResponse cloudEndpoints() {
        return this.cloudEndpoints;
    }
    /**
     * Type used for Istio services that live in a Kubernetes cluster.
     * 
    */
    public ClusterIstioResponse clusterIstio() {
        return this.clusterIstio;
    }
    /**
     * Custom service type.
     * 
    */
    public CustomResponse custom() {
        return this.custom;
    }
    /**
     * Name used for UI elements listing this Service.
     * 
    */
    public String displayName() {
        return this.displayName;
    }
    /**
     * Type used for canonical services scoped to an Istio mesh. Metrics for Istio are documented here (https://istio.io/latest/docs/reference/config/metrics/)
     * 
    */
    public IstioCanonicalServiceResponse istioCanonicalService() {
        return this.istioCanonicalService;
    }
    /**
     * Type used for Istio services scoped to an Istio mesh.
     * 
    */
    public MeshIstioResponse meshIstio() {
        return this.meshIstio;
    }
    /**
     * Resource name for this Service. The format is: projects/[PROJECT_ID_OR_NUMBER]/services/[SERVICE_ID]
     * 
    */
    public String name() {
        return this.name;
    }
    /**
     * Configuration for how to query telemetry on a Service.
     * 
    */
    public TelemetryResponse telemetry() {
        return this.telemetry;
    }
    /**
     * Labels which have been used to annotate the service. Label keys must start with a letter. Label keys and values may contain lowercase letters, numbers, underscores, and dashes. Label keys and values have a maximum length of 63 characters, and must be less than 128 bytes in size. Up to 64 label entries may be stored. For labels which do not have a semantic value, the empty string may be supplied for the label value.
     * 
    */
    public Map<String,String> userLabels() {
        return this.userLabels;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppEngineResponse appEngine;
        private CloudEndpointsResponse cloudEndpoints;
        private ClusterIstioResponse clusterIstio;
        private CustomResponse custom;
        private String displayName;
        private IstioCanonicalServiceResponse istioCanonicalService;
        private MeshIstioResponse meshIstio;
        private String name;
        private TelemetryResponse telemetry;
        private Map<String,String> userLabels;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appEngine = defaults.appEngine;
    	      this.cloudEndpoints = defaults.cloudEndpoints;
    	      this.clusterIstio = defaults.clusterIstio;
    	      this.custom = defaults.custom;
    	      this.displayName = defaults.displayName;
    	      this.istioCanonicalService = defaults.istioCanonicalService;
    	      this.meshIstio = defaults.meshIstio;
    	      this.name = defaults.name;
    	      this.telemetry = defaults.telemetry;
    	      this.userLabels = defaults.userLabels;
        }

        public Builder appEngine(AppEngineResponse appEngine) {
            this.appEngine = Objects.requireNonNull(appEngine);
            return this;
        }
        public Builder cloudEndpoints(CloudEndpointsResponse cloudEndpoints) {
            this.cloudEndpoints = Objects.requireNonNull(cloudEndpoints);
            return this;
        }
        public Builder clusterIstio(ClusterIstioResponse clusterIstio) {
            this.clusterIstio = Objects.requireNonNull(clusterIstio);
            return this;
        }
        public Builder custom(CustomResponse custom) {
            this.custom = Objects.requireNonNull(custom);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder istioCanonicalService(IstioCanonicalServiceResponse istioCanonicalService) {
            this.istioCanonicalService = Objects.requireNonNull(istioCanonicalService);
            return this;
        }
        public Builder meshIstio(MeshIstioResponse meshIstio) {
            this.meshIstio = Objects.requireNonNull(meshIstio);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder telemetry(TelemetryResponse telemetry) {
            this.telemetry = Objects.requireNonNull(telemetry);
            return this;
        }
        public Builder userLabels(Map<String,String> userLabels) {
            this.userLabels = Objects.requireNonNull(userLabels);
            return this;
        }        public GetServiceResult build() {
            return new GetServiceResult(appEngine, cloudEndpoints, clusterIstio, custom, displayName, istioCanonicalService, meshIstio, name, telemetry, userLabels);
        }
    }
}
