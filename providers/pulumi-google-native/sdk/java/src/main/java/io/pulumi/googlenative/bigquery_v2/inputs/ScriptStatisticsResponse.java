// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.bigquery_v2.inputs.ScriptStackFrameResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class ScriptStatisticsResponse extends io.pulumi.resources.InvokeArgs {

    public static final ScriptStatisticsResponse Empty = new ScriptStatisticsResponse();

    /**
     * Whether this child job was a statement or expression.
     * 
     */
    @InputImport(name="evaluationKind", required=true)
      private final String evaluationKind;

    public String getEvaluationKind() {
        return this.evaluationKind;
    }

    /**
     * Stack trace showing the line/column/procedure name of each frame on the stack at the point where the current evaluation happened. The leaf frame is first, the primary script is last. Never empty.
     * 
     */
    @InputImport(name="stackFrames", required=true)
      private final List<ScriptStackFrameResponse> stackFrames;

    public List<ScriptStackFrameResponse> getStackFrames() {
        return this.stackFrames;
    }

    public ScriptStatisticsResponse(
        String evaluationKind,
        List<ScriptStackFrameResponse> stackFrames) {
        this.evaluationKind = Objects.requireNonNull(evaluationKind, "expected parameter 'evaluationKind' to be non-null");
        this.stackFrames = Objects.requireNonNull(stackFrames, "expected parameter 'stackFrames' to be non-null");
    }

    private ScriptStatisticsResponse() {
        this.evaluationKind = null;
        this.stackFrames = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScriptStatisticsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String evaluationKind;
        private List<ScriptStackFrameResponse> stackFrames;

        public Builder() {
    	      // Empty
        }

        public Builder(ScriptStatisticsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.evaluationKind = defaults.evaluationKind;
    	      this.stackFrames = defaults.stackFrames;
        }

        public Builder setEvaluationKind(String evaluationKind) {
            this.evaluationKind = Objects.requireNonNull(evaluationKind);
            return this;
        }

        public Builder setStackFrames(List<ScriptStackFrameResponse> stackFrames) {
            this.stackFrames = Objects.requireNonNull(stackFrames);
            return this;
        }
        public ScriptStatisticsResponse build() {
            return new ScriptStatisticsResponse(evaluationKind, stackFrames);
        }
    }
}
