// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v3beta1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.dialogflow_v3beta1.enums.EntityTypeAutoExpansionMode;
import io.pulumi.googlenative.dialogflow_v3beta1.enums.EntityTypeKind;
import io.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs;
import io.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EntityTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final EntityTypeArgs Empty = new EntityTypeArgs();

    @Import(name="agentId", required=true)
      private final Output<String> agentId;

    public Output<String> agentId() {
        return this.agentId;
    }

    /**
     * Indicates whether the entity type can be automatically expanded.
     * 
     */
    @Import(name="autoExpansionMode")
      private final @Nullable Output<EntityTypeAutoExpansionMode> autoExpansionMode;

    public Output<EntityTypeAutoExpansionMode> autoExpansionMode() {
        return this.autoExpansionMode == null ? Codegen.empty() : this.autoExpansionMode;
    }

    /**
     * The human-readable name of the entity type, unique within the agent.
     * 
     */
    @Import(name="displayName", required=true)
      private final Output<String> displayName;

    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Enables fuzzy entity extraction during classification.
     * 
     */
    @Import(name="enableFuzzyExtraction")
      private final @Nullable Output<Boolean> enableFuzzyExtraction;

    public Output<Boolean> enableFuzzyExtraction() {
        return this.enableFuzzyExtraction == null ? Codegen.empty() : this.enableFuzzyExtraction;
    }

    /**
     * The collection of entity entries associated with the entity type.
     * 
     */
    @Import(name="entities")
      private final @Nullable Output<List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs>> entities;

    public Output<List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs>> entities() {
        return this.entities == null ? Codegen.empty() : this.entities;
    }

    /**
     * Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
     * 
     */
    @Import(name="excludedPhrases")
      private final @Nullable Output<List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs>> excludedPhrases;

    public Output<List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs>> excludedPhrases() {
        return this.excludedPhrases == null ? Codegen.empty() : this.excludedPhrases;
    }

    /**
     * Indicates the kind of entity type.
     * 
     */
    @Import(name="kind", required=true)
      private final Output<EntityTypeKind> kind;

    public Output<EntityTypeKind> kind() {
        return this.kind;
    }

    @Import(name="languageCode")
      private final @Nullable Output<String> languageCode;

    public Output<String> languageCode() {
        return this.languageCode == null ? Codegen.empty() : this.languageCode;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name during logging.
     * 
     */
    @Import(name="redact")
      private final @Nullable Output<Boolean> redact;

    public Output<Boolean> redact() {
        return this.redact == null ? Codegen.empty() : this.redact;
    }

    public EntityTypeArgs(
        Output<String> agentId,
        @Nullable Output<EntityTypeAutoExpansionMode> autoExpansionMode,
        Output<String> displayName,
        @Nullable Output<Boolean> enableFuzzyExtraction,
        @Nullable Output<List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs>> entities,
        @Nullable Output<List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs>> excludedPhrases,
        Output<EntityTypeKind> kind,
        @Nullable Output<String> languageCode,
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<Boolean> redact) {
        this.agentId = Objects.requireNonNull(agentId, "expected parameter 'agentId' to be non-null");
        this.autoExpansionMode = autoExpansionMode;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.enableFuzzyExtraction = enableFuzzyExtraction;
        this.entities = entities;
        this.excludedPhrases = excludedPhrases;
        this.kind = Objects.requireNonNull(kind, "expected parameter 'kind' to be non-null");
        this.languageCode = languageCode;
        this.location = location;
        this.name = name;
        this.project = project;
        this.redact = redact;
    }

    private EntityTypeArgs() {
        this.agentId = Codegen.empty();
        this.autoExpansionMode = Codegen.empty();
        this.displayName = Codegen.empty();
        this.enableFuzzyExtraction = Codegen.empty();
        this.entities = Codegen.empty();
        this.excludedPhrases = Codegen.empty();
        this.kind = Codegen.empty();
        this.languageCode = Codegen.empty();
        this.location = Codegen.empty();
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.redact = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EntityTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> agentId;
        private @Nullable Output<EntityTypeAutoExpansionMode> autoExpansionMode;
        private Output<String> displayName;
        private @Nullable Output<Boolean> enableFuzzyExtraction;
        private @Nullable Output<List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs>> entities;
        private @Nullable Output<List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs>> excludedPhrases;
        private Output<EntityTypeKind> kind;
        private @Nullable Output<String> languageCode;
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<Boolean> redact;

        public Builder() {
    	      // Empty
        }

        public Builder(EntityTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentId = defaults.agentId;
    	      this.autoExpansionMode = defaults.autoExpansionMode;
    	      this.displayName = defaults.displayName;
    	      this.enableFuzzyExtraction = defaults.enableFuzzyExtraction;
    	      this.entities = defaults.entities;
    	      this.excludedPhrases = defaults.excludedPhrases;
    	      this.kind = defaults.kind;
    	      this.languageCode = defaults.languageCode;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.redact = defaults.redact;
        }

        public Builder agentId(Output<String> agentId) {
            this.agentId = Objects.requireNonNull(agentId);
            return this;
        }
        public Builder agentId(String agentId) {
            this.agentId = Output.of(Objects.requireNonNull(agentId));
            return this;
        }
        public Builder autoExpansionMode(@Nullable Output<EntityTypeAutoExpansionMode> autoExpansionMode) {
            this.autoExpansionMode = autoExpansionMode;
            return this;
        }
        public Builder autoExpansionMode(@Nullable EntityTypeAutoExpansionMode autoExpansionMode) {
            this.autoExpansionMode = Codegen.ofNullable(autoExpansionMode);
            return this;
        }
        public Builder displayName(Output<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Output.of(Objects.requireNonNull(displayName));
            return this;
        }
        public Builder enableFuzzyExtraction(@Nullable Output<Boolean> enableFuzzyExtraction) {
            this.enableFuzzyExtraction = enableFuzzyExtraction;
            return this;
        }
        public Builder enableFuzzyExtraction(@Nullable Boolean enableFuzzyExtraction) {
            this.enableFuzzyExtraction = Codegen.ofNullable(enableFuzzyExtraction);
            return this;
        }
        public Builder entities(@Nullable Output<List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs>> entities) {
            this.entities = entities;
            return this;
        }
        public Builder entities(@Nullable List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs> entities) {
            this.entities = Codegen.ofNullable(entities);
            return this;
        }
        public Builder entities(GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs... entities) {
            return entities(List.of(entities));
        }
        public Builder excludedPhrases(@Nullable Output<List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs>> excludedPhrases) {
            this.excludedPhrases = excludedPhrases;
            return this;
        }
        public Builder excludedPhrases(@Nullable List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs> excludedPhrases) {
            this.excludedPhrases = Codegen.ofNullable(excludedPhrases);
            return this;
        }
        public Builder excludedPhrases(GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs... excludedPhrases) {
            return excludedPhrases(List.of(excludedPhrases));
        }
        public Builder kind(Output<EntityTypeKind> kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder kind(EntityTypeKind kind) {
            this.kind = Output.of(Objects.requireNonNull(kind));
            return this;
        }
        public Builder languageCode(@Nullable Output<String> languageCode) {
            this.languageCode = languageCode;
            return this;
        }
        public Builder languageCode(@Nullable String languageCode) {
            this.languageCode = Codegen.ofNullable(languageCode);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder redact(@Nullable Output<Boolean> redact) {
            this.redact = redact;
            return this;
        }
        public Builder redact(@Nullable Boolean redact) {
            this.redact = Codegen.ofNullable(redact);
            return this;
        }        public EntityTypeArgs build() {
            return new EntityTypeArgs(agentId, autoExpansionMode, displayName, enableFuzzyExtraction, entities, excludedPhrases, kind, languageCode, location, name, project, redact);
        }
    }
}
