// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dialogflow_v3beta1;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dialogflow_v3beta1.enums.EntityTypeAutoExpansionMode;
import io.pulumi.googlenative.dialogflow_v3beta1.enums.EntityTypeKind;
import io.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs;
import io.pulumi.googlenative.dialogflow_v3beta1.inputs.GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EntityTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final EntityTypeArgs Empty = new EntityTypeArgs();

    @InputImport(name="agentId", required=true)
      private final Input<String> agentId;

    public Input<String> getAgentId() {
        return this.agentId;
    }

    /**
     * Indicates whether the entity type can be automatically expanded.
     * 
     */
    @InputImport(name="autoExpansionMode")
      private final @Nullable Input<EntityTypeAutoExpansionMode> autoExpansionMode;

    public Input<EntityTypeAutoExpansionMode> getAutoExpansionMode() {
        return this.autoExpansionMode == null ? Input.empty() : this.autoExpansionMode;
    }

    /**
     * The human-readable name of the entity type, unique within the agent.
     * 
     */
    @InputImport(name="displayName", required=true)
      private final Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName;
    }

    /**
     * Enables fuzzy entity extraction during classification.
     * 
     */
    @InputImport(name="enableFuzzyExtraction")
      private final @Nullable Input<Boolean> enableFuzzyExtraction;

    public Input<Boolean> getEnableFuzzyExtraction() {
        return this.enableFuzzyExtraction == null ? Input.empty() : this.enableFuzzyExtraction;
    }

    /**
     * The collection of entity entries associated with the entity type.
     * 
     */
    @InputImport(name="entities")
      private final @Nullable Input<List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs>> entities;

    public Input<List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs>> getEntities() {
        return this.entities == null ? Input.empty() : this.entities;
    }

    /**
     * Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
     * 
     */
    @InputImport(name="excludedPhrases")
      private final @Nullable Input<List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs>> excludedPhrases;

    public Input<List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs>> getExcludedPhrases() {
        return this.excludedPhrases == null ? Input.empty() : this.excludedPhrases;
    }

    /**
     * Indicates the kind of entity type.
     * 
     */
    @InputImport(name="kind", required=true)
      private final Input<EntityTypeKind> kind;

    public Input<EntityTypeKind> getKind() {
        return this.kind;
    }

    @InputImport(name="languageCode")
      private final @Nullable Input<String> languageCode;

    public Input<String> getLanguageCode() {
        return this.languageCode == null ? Input.empty() : this.languageCode;
    }

    @InputImport(name="location")
      private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`.
     * 
     */
    @InputImport(name="name")
      private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
      private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name during logging.
     * 
     */
    @InputImport(name="redact")
      private final @Nullable Input<Boolean> redact;

    public Input<Boolean> getRedact() {
        return this.redact == null ? Input.empty() : this.redact;
    }

    public EntityTypeArgs(
        Input<String> agentId,
        @Nullable Input<EntityTypeAutoExpansionMode> autoExpansionMode,
        Input<String> displayName,
        @Nullable Input<Boolean> enableFuzzyExtraction,
        @Nullable Input<List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs>> entities,
        @Nullable Input<List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs>> excludedPhrases,
        Input<EntityTypeKind> kind,
        @Nullable Input<String> languageCode,
        @Nullable Input<String> location,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<Boolean> redact) {
        this.agentId = Objects.requireNonNull(agentId, "expected parameter 'agentId' to be non-null");
        this.autoExpansionMode = autoExpansionMode;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.enableFuzzyExtraction = enableFuzzyExtraction;
        this.entities = entities;
        this.excludedPhrases = excludedPhrases;
        this.kind = Objects.requireNonNull(kind, "expected parameter 'kind' to be non-null");
        this.languageCode = languageCode;
        this.location = location;
        this.name = name;
        this.project = project;
        this.redact = redact;
    }

    private EntityTypeArgs() {
        this.agentId = Input.empty();
        this.autoExpansionMode = Input.empty();
        this.displayName = Input.empty();
        this.enableFuzzyExtraction = Input.empty();
        this.entities = Input.empty();
        this.excludedPhrases = Input.empty();
        this.kind = Input.empty();
        this.languageCode = Input.empty();
        this.location = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.redact = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EntityTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> agentId;
        private @Nullable Input<EntityTypeAutoExpansionMode> autoExpansionMode;
        private Input<String> displayName;
        private @Nullable Input<Boolean> enableFuzzyExtraction;
        private @Nullable Input<List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs>> entities;
        private @Nullable Input<List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs>> excludedPhrases;
        private Input<EntityTypeKind> kind;
        private @Nullable Input<String> languageCode;
        private @Nullable Input<String> location;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<Boolean> redact;

        public Builder() {
    	      // Empty
        }

        public Builder(EntityTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentId = defaults.agentId;
    	      this.autoExpansionMode = defaults.autoExpansionMode;
    	      this.displayName = defaults.displayName;
    	      this.enableFuzzyExtraction = defaults.enableFuzzyExtraction;
    	      this.entities = defaults.entities;
    	      this.excludedPhrases = defaults.excludedPhrases;
    	      this.kind = defaults.kind;
    	      this.languageCode = defaults.languageCode;
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.redact = defaults.redact;
        }

        public Builder agentId(Input<String> agentId) {
            this.agentId = Objects.requireNonNull(agentId);
            return this;
        }

        public Builder agentId(String agentId) {
            this.agentId = Input.of(Objects.requireNonNull(agentId));
            return this;
        }

        public Builder autoExpansionMode(@Nullable Input<EntityTypeAutoExpansionMode> autoExpansionMode) {
            this.autoExpansionMode = autoExpansionMode;
            return this;
        }

        public Builder autoExpansionMode(@Nullable EntityTypeAutoExpansionMode autoExpansionMode) {
            this.autoExpansionMode = Input.ofNullable(autoExpansionMode);
            return this;
        }

        public Builder displayName(Input<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder displayName(String displayName) {
            this.displayName = Input.of(Objects.requireNonNull(displayName));
            return this;
        }

        public Builder enableFuzzyExtraction(@Nullable Input<Boolean> enableFuzzyExtraction) {
            this.enableFuzzyExtraction = enableFuzzyExtraction;
            return this;
        }

        public Builder enableFuzzyExtraction(@Nullable Boolean enableFuzzyExtraction) {
            this.enableFuzzyExtraction = Input.ofNullable(enableFuzzyExtraction);
            return this;
        }

        public Builder entities(@Nullable Input<List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs>> entities) {
            this.entities = entities;
            return this;
        }

        public Builder entities(@Nullable List<GoogleCloudDialogflowCxV3beta1EntityTypeEntityArgs> entities) {
            this.entities = Input.ofNullable(entities);
            return this;
        }

        public Builder excludedPhrases(@Nullable Input<List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs>> excludedPhrases) {
            this.excludedPhrases = excludedPhrases;
            return this;
        }

        public Builder excludedPhrases(@Nullable List<GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhraseArgs> excludedPhrases) {
            this.excludedPhrases = Input.ofNullable(excludedPhrases);
            return this;
        }

        public Builder kind(Input<EntityTypeKind> kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder kind(EntityTypeKind kind) {
            this.kind = Input.of(Objects.requireNonNull(kind));
            return this;
        }

        public Builder languageCode(@Nullable Input<String> languageCode) {
            this.languageCode = languageCode;
            return this;
        }

        public Builder languageCode(@Nullable String languageCode) {
            this.languageCode = Input.ofNullable(languageCode);
            return this;
        }

        public Builder location(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder name(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder project(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder redact(@Nullable Input<Boolean> redact) {
            this.redact = redact;
            return this;
        }

        public Builder redact(@Nullable Boolean redact) {
            this.redact = Input.ofNullable(redact);
            return this;
        }
        public EntityTypeArgs build() {
            return new EntityTypeArgs(agentId, autoExpansionMode, displayName, enableFuzzyExtraction, entities, excludedPhrases, kind, languageCode, location, name, project, redact);
        }
    }
}
