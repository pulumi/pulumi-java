// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.transcoder_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.transcoder_v1.outputs.PreprocessingConfigResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class InputResponse {
    private final String key;
    private final PreprocessingConfigResponse preprocessingConfig;
    private final String uri;

    @OutputCustomType.Constructor({"key","preprocessingConfig","uri"})
    private InputResponse(
        String key,
        PreprocessingConfigResponse preprocessingConfig,
        String uri) {
        this.key = Objects.requireNonNull(key);
        this.preprocessingConfig = Objects.requireNonNull(preprocessingConfig);
        this.uri = Objects.requireNonNull(uri);
    }

    public String getKey() {
        return this.key;
    }
    public PreprocessingConfigResponse getPreprocessingConfig() {
        return this.preprocessingConfig;
    }
    public String getUri() {
        return this.uri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InputResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String key;
        private PreprocessingConfigResponse preprocessingConfig;
        private String uri;

        public Builder() {
    	      // Empty
        }

        public Builder(InputResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.key = defaults.key;
    	      this.preprocessingConfig = defaults.preprocessingConfig;
    	      this.uri = defaults.uri;
        }

        public Builder setKey(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }

        public Builder setPreprocessingConfig(PreprocessingConfigResponse preprocessingConfig) {
            this.preprocessingConfig = Objects.requireNonNull(preprocessingConfig);
            return this;
        }

        public Builder setUri(String uri) {
            this.uri = Objects.requireNonNull(uri);
            return this;
        }

        public InputResponse build() {
            return new InputResponse(key, preprocessingConfig, uri);
        }
    }
}
