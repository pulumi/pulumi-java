// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudbuild_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.cloudbuild_v1.outputs.BitbucketServerConfigResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.PullRequestFilterResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.PushFilterResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class BitbucketServerTriggerConfigResponse {
    private final BitbucketServerConfigResponse bitbucketServerConfig;
    private final String bitbucketServerConfigResource;
    private final String projectKey;
    private final PullRequestFilterResponse pullRequest;
    private final PushFilterResponse push;
    private final String repoSlug;

    @OutputCustomType.Constructor({"bitbucketServerConfig","bitbucketServerConfigResource","projectKey","pullRequest","push","repoSlug"})
    private BitbucketServerTriggerConfigResponse(
        BitbucketServerConfigResponse bitbucketServerConfig,
        String bitbucketServerConfigResource,
        String projectKey,
        PullRequestFilterResponse pullRequest,
        PushFilterResponse push,
        String repoSlug) {
        this.bitbucketServerConfig = Objects.requireNonNull(bitbucketServerConfig);
        this.bitbucketServerConfigResource = Objects.requireNonNull(bitbucketServerConfigResource);
        this.projectKey = Objects.requireNonNull(projectKey);
        this.pullRequest = Objects.requireNonNull(pullRequest);
        this.push = Objects.requireNonNull(push);
        this.repoSlug = Objects.requireNonNull(repoSlug);
    }

    public BitbucketServerConfigResponse getBitbucketServerConfig() {
        return this.bitbucketServerConfig;
    }
    public String getBitbucketServerConfigResource() {
        return this.bitbucketServerConfigResource;
    }
    public String getProjectKey() {
        return this.projectKey;
    }
    public PullRequestFilterResponse getPullRequest() {
        return this.pullRequest;
    }
    public PushFilterResponse getPush() {
        return this.push;
    }
    public String getRepoSlug() {
        return this.repoSlug;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BitbucketServerTriggerConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BitbucketServerConfigResponse bitbucketServerConfig;
        private String bitbucketServerConfigResource;
        private String projectKey;
        private PullRequestFilterResponse pullRequest;
        private PushFilterResponse push;
        private String repoSlug;

        public Builder() {
    	      // Empty
        }

        public Builder(BitbucketServerTriggerConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bitbucketServerConfig = defaults.bitbucketServerConfig;
    	      this.bitbucketServerConfigResource = defaults.bitbucketServerConfigResource;
    	      this.projectKey = defaults.projectKey;
    	      this.pullRequest = defaults.pullRequest;
    	      this.push = defaults.push;
    	      this.repoSlug = defaults.repoSlug;
        }

        public Builder setBitbucketServerConfig(BitbucketServerConfigResponse bitbucketServerConfig) {
            this.bitbucketServerConfig = Objects.requireNonNull(bitbucketServerConfig);
            return this;
        }

        public Builder setBitbucketServerConfigResource(String bitbucketServerConfigResource) {
            this.bitbucketServerConfigResource = Objects.requireNonNull(bitbucketServerConfigResource);
            return this;
        }

        public Builder setProjectKey(String projectKey) {
            this.projectKey = Objects.requireNonNull(projectKey);
            return this;
        }

        public Builder setPullRequest(PullRequestFilterResponse pullRequest) {
            this.pullRequest = Objects.requireNonNull(pullRequest);
            return this;
        }

        public Builder setPush(PushFilterResponse push) {
            this.push = Objects.requireNonNull(push);
            return this;
        }

        public Builder setRepoSlug(String repoSlug) {
            this.repoSlug = Objects.requireNonNull(repoSlug);
            return this;
        }

        public BitbucketServerTriggerConfigResponse build() {
            return new BitbucketServerTriggerConfigResponse(bitbucketServerConfig, bitbucketServerConfigResource, projectKey, pullRequest, push, repoSlug);
        }
    }
}
