// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.sourcerepo_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class MirrorConfigResponse {
    /**
     * ID of the SSH deploy key at the other hosting service. Removing this key from the other service would deauthorize Google Cloud Source Repositories from mirroring.
     * 
     */
    private final String deployKeyId;
    /**
     * URL of the main repository at the other hosting service.
     * 
     */
    private final String url;
    /**
     * ID of the webhook listening to updates to trigger mirroring. Removing this webhook from the other hosting service will stop Google Cloud Source Repositories from receiving notifications, and thereby disabling mirroring.
     * 
     */
    private final String webhookId;

    @OutputCustomType.Constructor({"deployKeyId","url","webhookId"})
    private MirrorConfigResponse(
        String deployKeyId,
        String url,
        String webhookId) {
        this.deployKeyId = Objects.requireNonNull(deployKeyId);
        this.url = Objects.requireNonNull(url);
        this.webhookId = Objects.requireNonNull(webhookId);
    }

    /**
     * ID of the SSH deploy key at the other hosting service. Removing this key from the other service would deauthorize Google Cloud Source Repositories from mirroring.
     * 
     */
    public String getDeployKeyId() {
        return this.deployKeyId;
    }
    /**
     * URL of the main repository at the other hosting service.
     * 
     */
    public String getUrl() {
        return this.url;
    }
    /**
     * ID of the webhook listening to updates to trigger mirroring. Removing this webhook from the other hosting service will stop Google Cloud Source Repositories from receiving notifications, and thereby disabling mirroring.
     * 
     */
    public String getWebhookId() {
        return this.webhookId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MirrorConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String deployKeyId;
        private String url;
        private String webhookId;

        public Builder() {
    	      // Empty
        }

        public Builder(MirrorConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deployKeyId = defaults.deployKeyId;
    	      this.url = defaults.url;
    	      this.webhookId = defaults.webhookId;
        }

        public Builder setDeployKeyId(String deployKeyId) {
            this.deployKeyId = Objects.requireNonNull(deployKeyId);
            return this;
        }

        public Builder setUrl(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }

        public Builder setWebhookId(String webhookId) {
            this.webhookId = Objects.requireNonNull(webhookId);
            return this;
        }

        public MirrorConfigResponse build() {
            return new MirrorConfigResponse(deployKeyId, url, webhookId);
        }
    }
}
