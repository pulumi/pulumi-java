// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.container_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.container_v1.inputs.CloudRunConfigResponse;
import io.pulumi.googlenative.container_v1.inputs.ConfigConnectorConfigResponse;
import io.pulumi.googlenative.container_v1.inputs.DnsCacheConfigResponse;
import io.pulumi.googlenative.container_v1.inputs.GcePersistentDiskCsiDriverConfigResponse;
import io.pulumi.googlenative.container_v1.inputs.GcpFilestoreCsiDriverConfigResponse;
import io.pulumi.googlenative.container_v1.inputs.HorizontalPodAutoscalingResponse;
import io.pulumi.googlenative.container_v1.inputs.HttpLoadBalancingResponse;
import io.pulumi.googlenative.container_v1.inputs.KubernetesDashboardResponse;
import io.pulumi.googlenative.container_v1.inputs.NetworkPolicyConfigResponse;
import java.util.Objects;


public final class AddonsConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final AddonsConfigResponse Empty = new AddonsConfigResponse();

    @InputImport(name="cloudRunConfig", required=true)
    private final CloudRunConfigResponse cloudRunConfig;

    public CloudRunConfigResponse getCloudRunConfig() {
        return this.cloudRunConfig;
    }

    @InputImport(name="configConnectorConfig", required=true)
    private final ConfigConnectorConfigResponse configConnectorConfig;

    public ConfigConnectorConfigResponse getConfigConnectorConfig() {
        return this.configConnectorConfig;
    }

    @InputImport(name="dnsCacheConfig", required=true)
    private final DnsCacheConfigResponse dnsCacheConfig;

    public DnsCacheConfigResponse getDnsCacheConfig() {
        return this.dnsCacheConfig;
    }

    @InputImport(name="gcePersistentDiskCsiDriverConfig", required=true)
    private final GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig;

    public GcePersistentDiskCsiDriverConfigResponse getGcePersistentDiskCsiDriverConfig() {
        return this.gcePersistentDiskCsiDriverConfig;
    }

    @InputImport(name="gcpFilestoreCsiDriverConfig", required=true)
    private final GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig;

    public GcpFilestoreCsiDriverConfigResponse getGcpFilestoreCsiDriverConfig() {
        return this.gcpFilestoreCsiDriverConfig;
    }

    @InputImport(name="horizontalPodAutoscaling", required=true)
    private final HorizontalPodAutoscalingResponse horizontalPodAutoscaling;

    public HorizontalPodAutoscalingResponse getHorizontalPodAutoscaling() {
        return this.horizontalPodAutoscaling;
    }

    @InputImport(name="httpLoadBalancing", required=true)
    private final HttpLoadBalancingResponse httpLoadBalancing;

    public HttpLoadBalancingResponse getHttpLoadBalancing() {
        return this.httpLoadBalancing;
    }

    @InputImport(name="kubernetesDashboard", required=true)
    private final KubernetesDashboardResponse kubernetesDashboard;

    public KubernetesDashboardResponse getKubernetesDashboard() {
        return this.kubernetesDashboard;
    }

    @InputImport(name="networkPolicyConfig", required=true)
    private final NetworkPolicyConfigResponse networkPolicyConfig;

    public NetworkPolicyConfigResponse getNetworkPolicyConfig() {
        return this.networkPolicyConfig;
    }

    public AddonsConfigResponse(
        CloudRunConfigResponse cloudRunConfig,
        ConfigConnectorConfigResponse configConnectorConfig,
        DnsCacheConfigResponse dnsCacheConfig,
        GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig,
        GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig,
        HorizontalPodAutoscalingResponse horizontalPodAutoscaling,
        HttpLoadBalancingResponse httpLoadBalancing,
        KubernetesDashboardResponse kubernetesDashboard,
        NetworkPolicyConfigResponse networkPolicyConfig) {
        this.cloudRunConfig = Objects.requireNonNull(cloudRunConfig, "expected parameter 'cloudRunConfig' to be non-null");
        this.configConnectorConfig = Objects.requireNonNull(configConnectorConfig, "expected parameter 'configConnectorConfig' to be non-null");
        this.dnsCacheConfig = Objects.requireNonNull(dnsCacheConfig, "expected parameter 'dnsCacheConfig' to be non-null");
        this.gcePersistentDiskCsiDriverConfig = Objects.requireNonNull(gcePersistentDiskCsiDriverConfig, "expected parameter 'gcePersistentDiskCsiDriverConfig' to be non-null");
        this.gcpFilestoreCsiDriverConfig = Objects.requireNonNull(gcpFilestoreCsiDriverConfig, "expected parameter 'gcpFilestoreCsiDriverConfig' to be non-null");
        this.horizontalPodAutoscaling = Objects.requireNonNull(horizontalPodAutoscaling, "expected parameter 'horizontalPodAutoscaling' to be non-null");
        this.httpLoadBalancing = Objects.requireNonNull(httpLoadBalancing, "expected parameter 'httpLoadBalancing' to be non-null");
        this.kubernetesDashboard = Objects.requireNonNull(kubernetesDashboard, "expected parameter 'kubernetesDashboard' to be non-null");
        this.networkPolicyConfig = Objects.requireNonNull(networkPolicyConfig, "expected parameter 'networkPolicyConfig' to be non-null");
    }

    private AddonsConfigResponse() {
        this.cloudRunConfig = null;
        this.configConnectorConfig = null;
        this.dnsCacheConfig = null;
        this.gcePersistentDiskCsiDriverConfig = null;
        this.gcpFilestoreCsiDriverConfig = null;
        this.horizontalPodAutoscaling = null;
        this.httpLoadBalancing = null;
        this.kubernetesDashboard = null;
        this.networkPolicyConfig = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AddonsConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudRunConfigResponse cloudRunConfig;
        private ConfigConnectorConfigResponse configConnectorConfig;
        private DnsCacheConfigResponse dnsCacheConfig;
        private GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig;
        private GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig;
        private HorizontalPodAutoscalingResponse horizontalPodAutoscaling;
        private HttpLoadBalancingResponse httpLoadBalancing;
        private KubernetesDashboardResponse kubernetesDashboard;
        private NetworkPolicyConfigResponse networkPolicyConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(AddonsConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudRunConfig = defaults.cloudRunConfig;
    	      this.configConnectorConfig = defaults.configConnectorConfig;
    	      this.dnsCacheConfig = defaults.dnsCacheConfig;
    	      this.gcePersistentDiskCsiDriverConfig = defaults.gcePersistentDiskCsiDriverConfig;
    	      this.gcpFilestoreCsiDriverConfig = defaults.gcpFilestoreCsiDriverConfig;
    	      this.horizontalPodAutoscaling = defaults.horizontalPodAutoscaling;
    	      this.httpLoadBalancing = defaults.httpLoadBalancing;
    	      this.kubernetesDashboard = defaults.kubernetesDashboard;
    	      this.networkPolicyConfig = defaults.networkPolicyConfig;
        }

        public Builder setCloudRunConfig(CloudRunConfigResponse cloudRunConfig) {
            this.cloudRunConfig = Objects.requireNonNull(cloudRunConfig);
            return this;
        }

        public Builder setConfigConnectorConfig(ConfigConnectorConfigResponse configConnectorConfig) {
            this.configConnectorConfig = Objects.requireNonNull(configConnectorConfig);
            return this;
        }

        public Builder setDnsCacheConfig(DnsCacheConfigResponse dnsCacheConfig) {
            this.dnsCacheConfig = Objects.requireNonNull(dnsCacheConfig);
            return this;
        }

        public Builder setGcePersistentDiskCsiDriverConfig(GcePersistentDiskCsiDriverConfigResponse gcePersistentDiskCsiDriverConfig) {
            this.gcePersistentDiskCsiDriverConfig = Objects.requireNonNull(gcePersistentDiskCsiDriverConfig);
            return this;
        }

        public Builder setGcpFilestoreCsiDriverConfig(GcpFilestoreCsiDriverConfigResponse gcpFilestoreCsiDriverConfig) {
            this.gcpFilestoreCsiDriverConfig = Objects.requireNonNull(gcpFilestoreCsiDriverConfig);
            return this;
        }

        public Builder setHorizontalPodAutoscaling(HorizontalPodAutoscalingResponse horizontalPodAutoscaling) {
            this.horizontalPodAutoscaling = Objects.requireNonNull(horizontalPodAutoscaling);
            return this;
        }

        public Builder setHttpLoadBalancing(HttpLoadBalancingResponse httpLoadBalancing) {
            this.httpLoadBalancing = Objects.requireNonNull(httpLoadBalancing);
            return this;
        }

        public Builder setKubernetesDashboard(KubernetesDashboardResponse kubernetesDashboard) {
            this.kubernetesDashboard = Objects.requireNonNull(kubernetesDashboard);
            return this;
        }

        public Builder setNetworkPolicyConfig(NetworkPolicyConfigResponse networkPolicyConfig) {
            this.networkPolicyConfig = Objects.requireNonNull(networkPolicyConfig);
            return this;
        }

        public AddonsConfigResponse build() {
            return new AddonsConfigResponse(cloudRunConfig, configConnectorConfig, dnsCacheConfig, gcePersistentDiskCsiDriverConfig, gcpFilestoreCsiDriverConfig, horizontalPodAutoscaling, httpLoadBalancing, kubernetesDashboard, networkPolicyConfig);
        }
    }
}
