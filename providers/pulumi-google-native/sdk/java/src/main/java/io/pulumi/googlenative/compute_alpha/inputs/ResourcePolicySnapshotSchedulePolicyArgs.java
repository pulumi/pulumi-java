// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.compute_alpha.inputs.ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs;
import io.pulumi.googlenative.compute_alpha.inputs.ResourcePolicySnapshotSchedulePolicyScheduleArgs;
import io.pulumi.googlenative.compute_alpha.inputs.ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A snapshot schedule policy specifies when and how frequently snapshots are to be created for the target disk. Also specifies how many and how long these scheduled snapshots should be retained.
 * 
 */
public final class ResourcePolicySnapshotSchedulePolicyArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourcePolicySnapshotSchedulePolicyArgs Empty = new ResourcePolicySnapshotSchedulePolicyArgs();

    /**
     * Retention policy applied to snapshots created by this resource policy.
     * 
     */
    @InputImport(name="retentionPolicy")
      private final @Nullable Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs> retentionPolicy;

    public Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs> getRetentionPolicy() {
        return this.retentionPolicy == null ? Input.empty() : this.retentionPolicy;
    }

    /**
     * A Vm Maintenance Policy specifies what kind of infrastructure maintenance we are allowed to perform on this VM and when. Schedule that is applied to disks covered by this policy.
     * 
     */
    @InputImport(name="schedule")
      private final @Nullable Input<ResourcePolicySnapshotSchedulePolicyScheduleArgs> schedule;

    public Input<ResourcePolicySnapshotSchedulePolicyScheduleArgs> getSchedule() {
        return this.schedule == null ? Input.empty() : this.schedule;
    }

    /**
     * Properties with which snapshots are created such as labels, encryption keys.
     * 
     */
    @InputImport(name="snapshotProperties")
      private final @Nullable Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs> snapshotProperties;

    public Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs> getSnapshotProperties() {
        return this.snapshotProperties == null ? Input.empty() : this.snapshotProperties;
    }

    public ResourcePolicySnapshotSchedulePolicyArgs(
        @Nullable Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs> retentionPolicy,
        @Nullable Input<ResourcePolicySnapshotSchedulePolicyScheduleArgs> schedule,
        @Nullable Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs> snapshotProperties) {
        this.retentionPolicy = retentionPolicy;
        this.schedule = schedule;
        this.snapshotProperties = snapshotProperties;
    }

    private ResourcePolicySnapshotSchedulePolicyArgs() {
        this.retentionPolicy = Input.empty();
        this.schedule = Input.empty();
        this.snapshotProperties = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicySnapshotSchedulePolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs> retentionPolicy;
        private @Nullable Input<ResourcePolicySnapshotSchedulePolicyScheduleArgs> schedule;
        private @Nullable Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs> snapshotProperties;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicySnapshotSchedulePolicyArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.retentionPolicy = defaults.retentionPolicy;
    	      this.schedule = defaults.schedule;
    	      this.snapshotProperties = defaults.snapshotProperties;
        }

        public Builder setRetentionPolicy(@Nullable Input<ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs> retentionPolicy) {
            this.retentionPolicy = retentionPolicy;
            return this;
        }

        public Builder setRetentionPolicy(@Nullable ResourcePolicySnapshotSchedulePolicyRetentionPolicyArgs retentionPolicy) {
            this.retentionPolicy = Input.ofNullable(retentionPolicy);
            return this;
        }

        public Builder setSchedule(@Nullable Input<ResourcePolicySnapshotSchedulePolicyScheduleArgs> schedule) {
            this.schedule = schedule;
            return this;
        }

        public Builder setSchedule(@Nullable ResourcePolicySnapshotSchedulePolicyScheduleArgs schedule) {
            this.schedule = Input.ofNullable(schedule);
            return this;
        }

        public Builder setSnapshotProperties(@Nullable Input<ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs> snapshotProperties) {
            this.snapshotProperties = snapshotProperties;
            return this;
        }

        public Builder setSnapshotProperties(@Nullable ResourcePolicySnapshotSchedulePolicySnapshotPropertiesArgs snapshotProperties) {
            this.snapshotProperties = Input.ofNullable(snapshotProperties);
            return this;
        }
        public ResourcePolicySnapshotSchedulePolicyArgs build() {
            return new ResourcePolicySnapshotSchedulePolicyArgs(retentionPolicy, schedule, snapshotProperties);
        }
    }
}
