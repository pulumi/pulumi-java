// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ExclusionRuleArgs;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2HotwordRuleArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A single inspection rule to be applied to infoTypes, specified in `InspectionRuleSet`.
 * 
 */
public final class GooglePrivacyDlpV2InspectionRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2InspectionRuleArgs Empty = new GooglePrivacyDlpV2InspectionRuleArgs();

    /**
     * Exclusion rule.
     * 
     */
    @Import(name="exclusionRule")
      private final @Nullable Output<GooglePrivacyDlpV2ExclusionRuleArgs> exclusionRule;

    public Output<GooglePrivacyDlpV2ExclusionRuleArgs> exclusionRule() {
        return this.exclusionRule == null ? Codegen.empty() : this.exclusionRule;
    }

    /**
     * Hotword-based detection rule.
     * 
     */
    @Import(name="hotwordRule")
      private final @Nullable Output<GooglePrivacyDlpV2HotwordRuleArgs> hotwordRule;

    public Output<GooglePrivacyDlpV2HotwordRuleArgs> hotwordRule() {
        return this.hotwordRule == null ? Codegen.empty() : this.hotwordRule;
    }

    public GooglePrivacyDlpV2InspectionRuleArgs(
        @Nullable Output<GooglePrivacyDlpV2ExclusionRuleArgs> exclusionRule,
        @Nullable Output<GooglePrivacyDlpV2HotwordRuleArgs> hotwordRule) {
        this.exclusionRule = exclusionRule;
        this.hotwordRule = hotwordRule;
    }

    private GooglePrivacyDlpV2InspectionRuleArgs() {
        this.exclusionRule = Codegen.empty();
        this.hotwordRule = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2InspectionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<GooglePrivacyDlpV2ExclusionRuleArgs> exclusionRule;
        private @Nullable Output<GooglePrivacyDlpV2HotwordRuleArgs> hotwordRule;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2InspectionRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.exclusionRule = defaults.exclusionRule;
    	      this.hotwordRule = defaults.hotwordRule;
        }

        public Builder exclusionRule(@Nullable Output<GooglePrivacyDlpV2ExclusionRuleArgs> exclusionRule) {
            this.exclusionRule = exclusionRule;
            return this;
        }
        public Builder exclusionRule(@Nullable GooglePrivacyDlpV2ExclusionRuleArgs exclusionRule) {
            this.exclusionRule = Codegen.ofNullable(exclusionRule);
            return this;
        }
        public Builder hotwordRule(@Nullable Output<GooglePrivacyDlpV2HotwordRuleArgs> hotwordRule) {
            this.hotwordRule = hotwordRule;
            return this;
        }
        public Builder hotwordRule(@Nullable GooglePrivacyDlpV2HotwordRuleArgs hotwordRule) {
            this.hotwordRule = Codegen.ofNullable(hotwordRule);
            return this;
        }        public GooglePrivacyDlpV2InspectionRuleArgs build() {
            return new GooglePrivacyDlpV2InspectionRuleArgs(exclusionRule, hotwordRule);
        }
    }
}
