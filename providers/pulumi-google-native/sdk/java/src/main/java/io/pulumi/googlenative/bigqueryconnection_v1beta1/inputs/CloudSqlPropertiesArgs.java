// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigqueryconnection_v1beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.bigqueryconnection_v1beta1.enums.CloudSqlPropertiesType;
import io.pulumi.googlenative.bigqueryconnection_v1beta1.inputs.CloudSqlCredentialArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Connection properties specific to the Cloud SQL.
 * 
 */
public final class CloudSqlPropertiesArgs extends io.pulumi.resources.ResourceArgs {

    public static final CloudSqlPropertiesArgs Empty = new CloudSqlPropertiesArgs();

    /**
     * Input only. Cloud SQL credential.
     * 
     */
    @InputImport(name="credential")
      private final @Nullable Output<CloudSqlCredentialArgs> credential;

    public Output<CloudSqlCredentialArgs> getCredential() {
        return this.credential == null ? Output.empty() : this.credential;
    }

    /**
     * Database name.
     * 
     */
    @InputImport(name="database")
      private final @Nullable Output<String> database;

    public Output<String> getDatabase() {
        return this.database == null ? Output.empty() : this.database;
    }

    /**
     * Cloud SQL instance ID in the form `project:location:instance`.
     * 
     */
    @InputImport(name="instanceId")
      private final @Nullable Output<String> instanceId;

    public Output<String> getInstanceId() {
        return this.instanceId == null ? Output.empty() : this.instanceId;
    }

    /**
     * Type of the Cloud SQL database.
     * 
     */
    @InputImport(name="type")
      private final @Nullable Output<CloudSqlPropertiesType> type;

    public Output<CloudSqlPropertiesType> getType() {
        return this.type == null ? Output.empty() : this.type;
    }

    public CloudSqlPropertiesArgs(
        @Nullable Output<CloudSqlCredentialArgs> credential,
        @Nullable Output<String> database,
        @Nullable Output<String> instanceId,
        @Nullable Output<CloudSqlPropertiesType> type) {
        this.credential = credential;
        this.database = database;
        this.instanceId = instanceId;
        this.type = type;
    }

    private CloudSqlPropertiesArgs() {
        this.credential = Output.empty();
        this.database = Output.empty();
        this.instanceId = Output.empty();
        this.type = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CloudSqlPropertiesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<CloudSqlCredentialArgs> credential;
        private @Nullable Output<String> database;
        private @Nullable Output<String> instanceId;
        private @Nullable Output<CloudSqlPropertiesType> type;

        public Builder() {
    	      // Empty
        }

        public Builder(CloudSqlPropertiesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credential = defaults.credential;
    	      this.database = defaults.database;
    	      this.instanceId = defaults.instanceId;
    	      this.type = defaults.type;
        }

        public Builder credential(@Nullable Output<CloudSqlCredentialArgs> credential) {
            this.credential = credential;
            return this;
        }

        public Builder credential(@Nullable CloudSqlCredentialArgs credential) {
            this.credential = Output.ofNullable(credential);
            return this;
        }

        public Builder database(@Nullable Output<String> database) {
            this.database = database;
            return this;
        }

        public Builder database(@Nullable String database) {
            this.database = Output.ofNullable(database);
            return this;
        }

        public Builder instanceId(@Nullable Output<String> instanceId) {
            this.instanceId = instanceId;
            return this;
        }

        public Builder instanceId(@Nullable String instanceId) {
            this.instanceId = Output.ofNullable(instanceId);
            return this;
        }

        public Builder type(@Nullable Output<CloudSqlPropertiesType> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable CloudSqlPropertiesType type) {
            this.type = Output.ofNullable(type);
            return this;
        }
        public CloudSqlPropertiesArgs build() {
            return new CloudSqlPropertiesArgs(credential, database, instanceId, type);
        }
    }
}
