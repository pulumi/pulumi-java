// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.transcoder_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.transcoder_v1.inputs.TextMappingArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Encoding of a text stream. For example, closed captions or subtitles.
 * 
 */
public final class TextStreamArgs extends io.pulumi.resources.ResourceArgs {

    public static final TextStreamArgs Empty = new TextStreamArgs();

    /**
     * The codec for this text stream. The default is `webvtt`. Supported text codecs: - `srt` - `ttml` - `cea608` - `cea708` - `webvtt`
     * 
     */
    @Import(name="codec")
      private final @Nullable Output<String> codec;

    public Output<String> getCodec() {
        return this.codec == null ? Codegen.empty() : this.codec;
    }

    /**
     * The mapping for the `Job.edit_list` atoms with text `EditAtom.inputs`.
     * 
     */
    @Import(name="mapping")
      private final @Nullable Output<List<TextMappingArgs>> mapping;

    public Output<List<TextMappingArgs>> getMapping() {
        return this.mapping == null ? Codegen.empty() : this.mapping;
    }

    public TextStreamArgs(
        @Nullable Output<String> codec,
        @Nullable Output<List<TextMappingArgs>> mapping) {
        this.codec = codec;
        this.mapping = mapping;
    }

    private TextStreamArgs() {
        this.codec = Codegen.empty();
        this.mapping = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TextStreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> codec;
        private @Nullable Output<List<TextMappingArgs>> mapping;

        public Builder() {
    	      // Empty
        }

        public Builder(TextStreamArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.codec = defaults.codec;
    	      this.mapping = defaults.mapping;
        }

        public Builder codec(@Nullable Output<String> codec) {
            this.codec = codec;
            return this;
        }
        public Builder codec(@Nullable String codec) {
            this.codec = Codegen.ofNullable(codec);
            return this;
        }
        public Builder mapping(@Nullable Output<List<TextMappingArgs>> mapping) {
            this.mapping = mapping;
            return this;
        }
        public Builder mapping(@Nullable List<TextMappingArgs> mapping) {
            this.mapping = Codegen.ofNullable(mapping);
            return this;
        }
        public Builder mapping(TextMappingArgs... mapping) {
            return mapping(List.of(mapping));
        }        public TextStreamArgs build() {
            return new TextStreamArgs(codec, mapping);
        }
    }
}
