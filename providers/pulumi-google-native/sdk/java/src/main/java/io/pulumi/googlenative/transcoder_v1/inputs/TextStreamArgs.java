// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.transcoder_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.transcoder_v1.inputs.TextMappingArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TextStreamArgs extends io.pulumi.resources.ResourceArgs {

    public static final TextStreamArgs Empty = new TextStreamArgs();

    @InputImport(name="codec")
    private final @Nullable Input<String> codec;

    public Input<String> getCodec() {
        return this.codec == null ? Input.empty() : this.codec;
    }

    @InputImport(name="mapping")
    private final @Nullable Input<List<TextMappingArgs>> mapping;

    public Input<List<TextMappingArgs>> getMapping() {
        return this.mapping == null ? Input.empty() : this.mapping;
    }

    public TextStreamArgs(
        @Nullable Input<String> codec,
        @Nullable Input<List<TextMappingArgs>> mapping) {
        this.codec = codec;
        this.mapping = mapping;
    }

    private TextStreamArgs() {
        this.codec = Input.empty();
        this.mapping = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TextStreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> codec;
        private @Nullable Input<List<TextMappingArgs>> mapping;

        public Builder() {
    	      // Empty
        }

        public Builder(TextStreamArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.codec = defaults.codec;
    	      this.mapping = defaults.mapping;
        }

        public Builder setCodec(@Nullable Input<String> codec) {
            this.codec = codec;
            return this;
        }

        public Builder setCodec(@Nullable String codec) {
            this.codec = Input.ofNullable(codec);
            return this;
        }

        public Builder setMapping(@Nullable Input<List<TextMappingArgs>> mapping) {
            this.mapping = mapping;
            return this;
        }

        public Builder setMapping(@Nullable List<TextMappingArgs> mapping) {
            this.mapping = Input.ofNullable(mapping);
            return this;
        }

        public TextStreamArgs build() {
            return new TextStreamArgs(codec, mapping);
        }
    }
}
