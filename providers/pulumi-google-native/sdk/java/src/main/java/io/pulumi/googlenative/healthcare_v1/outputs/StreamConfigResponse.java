// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.healthcare_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.healthcare_v1.outputs.GoogleCloudHealthcareV1FhirBigQueryDestinationResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class StreamConfigResponse {
    private final GoogleCloudHealthcareV1FhirBigQueryDestinationResponse bigqueryDestination;
    private final List<String> resourceTypes;

    @OutputCustomType.Constructor({"bigqueryDestination","resourceTypes"})
    private StreamConfigResponse(
        GoogleCloudHealthcareV1FhirBigQueryDestinationResponse bigqueryDestination,
        List<String> resourceTypes) {
        this.bigqueryDestination = Objects.requireNonNull(bigqueryDestination);
        this.resourceTypes = Objects.requireNonNull(resourceTypes);
    }

    public GoogleCloudHealthcareV1FhirBigQueryDestinationResponse getBigqueryDestination() {
        return this.bigqueryDestination;
    }
    public List<String> getResourceTypes() {
        return this.resourceTypes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StreamConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudHealthcareV1FhirBigQueryDestinationResponse bigqueryDestination;
        private List<String> resourceTypes;

        public Builder() {
    	      // Empty
        }

        public Builder(StreamConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryDestination = defaults.bigqueryDestination;
    	      this.resourceTypes = defaults.resourceTypes;
        }

        public Builder setBigqueryDestination(GoogleCloudHealthcareV1FhirBigQueryDestinationResponse bigqueryDestination) {
            this.bigqueryDestination = Objects.requireNonNull(bigqueryDestination);
            return this;
        }

        public Builder setResourceTypes(List<String> resourceTypes) {
            this.resourceTypes = Objects.requireNonNull(resourceTypes);
            return this;
        }

        public StreamConfigResponse build() {
            return new StreamConfigResponse(bigqueryDestination, resourceTypes);
        }
    }
}
