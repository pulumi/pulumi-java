// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.file_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.file_v1.inputs.NfsExportOptionsResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * File share configuration for the instance.
 * 
 */
public final class FileShareConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final FileShareConfigResponse Empty = new FileShareConfigResponse();

    /**
     * File share capacity in gigabytes (GB). Cloud Filestore defines 1 GB as 1024^3 bytes.
     * 
     */
    @InputImport(name="capacityGb", required=true)
      private final String capacityGb;

    public String getCapacityGb() {
        return this.capacityGb;
    }

    /**
     * The name of the file share (must be 16 characters or less).
     * 
     */
    @InputImport(name="name", required=true)
      private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * Nfs Export Options. There is a limit of 10 export options per file share.
     * 
     */
    @InputImport(name="nfsExportOptions", required=true)
      private final List<NfsExportOptionsResponse> nfsExportOptions;

    public List<NfsExportOptionsResponse> getNfsExportOptions() {
        return this.nfsExportOptions;
    }

    /**
     * The resource name of the backup, in the format `projects/{project_number}/locations/{location_id}/backups/{backup_id}`, that this file share has been restored from.
     * 
     */
    @InputImport(name="sourceBackup", required=true)
      private final String sourceBackup;

    public String getSourceBackup() {
        return this.sourceBackup;
    }

    public FileShareConfigResponse(
        String capacityGb,
        String name,
        List<NfsExportOptionsResponse> nfsExportOptions,
        String sourceBackup) {
        this.capacityGb = Objects.requireNonNull(capacityGb, "expected parameter 'capacityGb' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.nfsExportOptions = Objects.requireNonNull(nfsExportOptions, "expected parameter 'nfsExportOptions' to be non-null");
        this.sourceBackup = Objects.requireNonNull(sourceBackup, "expected parameter 'sourceBackup' to be non-null");
    }

    private FileShareConfigResponse() {
        this.capacityGb = null;
        this.name = null;
        this.nfsExportOptions = List.of();
        this.sourceBackup = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FileShareConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String capacityGb;
        private String name;
        private List<NfsExportOptionsResponse> nfsExportOptions;
        private String sourceBackup;

        public Builder() {
    	      // Empty
        }

        public Builder(FileShareConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacityGb = defaults.capacityGb;
    	      this.name = defaults.name;
    	      this.nfsExportOptions = defaults.nfsExportOptions;
    	      this.sourceBackup = defaults.sourceBackup;
        }

        public Builder capacityGb(String capacityGb) {
            this.capacityGb = Objects.requireNonNull(capacityGb);
            return this;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder nfsExportOptions(List<NfsExportOptionsResponse> nfsExportOptions) {
            this.nfsExportOptions = Objects.requireNonNull(nfsExportOptions);
            return this;
        }

        public Builder sourceBackup(String sourceBackup) {
            this.sourceBackup = Objects.requireNonNull(sourceBackup);
            return this;
        }
        public FileShareConfigResponse build() {
            return new FileShareConfigResponse(capacityGb, name, nfsExportOptions, sourceBackup);
        }
    }
}
