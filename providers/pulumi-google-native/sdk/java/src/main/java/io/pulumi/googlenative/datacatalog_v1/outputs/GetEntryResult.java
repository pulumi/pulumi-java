// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datacatalog_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1BigQueryTableSpecResponse;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1BusinessContextResponse;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1DataSourceConnectionSpecResponse;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1DataSourceResponse;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1DatabaseTableSpecResponse;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1GcsFilesetSpecResponse;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1PersonalDetailsResponse;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1RoutineSpecResponse;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1SchemaResponse;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1SystemTimestampsResponse;
import io.pulumi.googlenative.datacatalog_v1.outputs.GoogleCloudDatacatalogV1UsageSignalResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetEntryResult {
    /**
     * Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
     * 
     */
    private final GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse bigqueryDateShardedSpec;
    /**
     * Specification that applies to a BigQuery table. Valid only for entries with the `TABLE` type.
     * 
     */
    private final GoogleCloudDatacatalogV1BigQueryTableSpecResponse bigqueryTableSpec;
    /**
     * Business Context of the entry.
     * 
     */
    private final GoogleCloudDatacatalogV1BusinessContextResponse businessContext;
    /**
     * Physical location of the entry.
     * 
     */
    private final GoogleCloudDatacatalogV1DataSourceResponse dataSource;
    /**
     * Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type.
     * 
     */
    private final GoogleCloudDatacatalogV1DataSourceConnectionSpecResponse dataSourceConnectionSpec;
    /**
     * Specification that applies to a table resource. Valid only for entries with the `TABLE` type.
     * 
     */
    private final GoogleCloudDatacatalogV1DatabaseTableSpecResponse databaseTableSpec;
    /**
     * Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.
     * 
     */
    private final String description;
    /**
     * Display name of an entry. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum size is 200 bytes when encoded in UTF-8. Default value is an empty string.
     * 
     */
    private final String displayName;
    /**
     * Fully qualified name (FQN) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation and read-only afterwards. Can be used for search and lookup of the entries. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`
     * 
     */
    private final String fullyQualifiedName;
    /**
     * Specification that applies to a Cloud Storage fileset. Valid only for entries with the `FILESET` type.
     * 
     */
    private final GoogleCloudDatacatalogV1GcsFilesetSpecResponse gcsFilesetSpec;
    /**
     * Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
     * 
     */
    private final String integratedSystem;
    /**
     * Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.
     * 
     */
    private final Map<String,String> labels;
    /**
     * The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
     * 
     */
    private final String linkedResource;
    /**
     * The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name.
     * 
     */
    private final String name;
    /**
     * Additional information related to the entry. Private to the current user.
     * 
     */
    private final GoogleCloudDatacatalogV1PersonalDetailsResponse personalDetails;
    /**
     * Specification that applies to a user-defined function or procedure. Valid only for entries with the `ROUTINE` type.
     * 
     */
    private final GoogleCloudDatacatalogV1RoutineSpecResponse routineSpec;
    /**
     * Schema of the entry. An entry might not have any schema attached to it.
     * 
     */
    private final GoogleCloudDatacatalogV1SchemaResponse schema;
    /**
     * Timestamps from the underlying resource, not from the Data Catalog entry. Output only when the entry has a type listed in the `EntryType` enum. For entries with `user_specified_type`, this field is optional and defaults to an empty timestamp.
     * 
     */
    private final GoogleCloudDatacatalogV1SystemTimestampsResponse sourceSystemTimestamps;
    /**
     * The type of the entry. Only used for entries with types listed in the `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other entries created in Data Catalog must use the `user_specified_type`.
     * 
     */
    private final String type;
    /**
     * Resource usage statistics.
     * 
     */
    private final GoogleCloudDatacatalogV1UsageSignalResponse usageSignal;
    /**
     * Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
     * 
     */
    private final String userSpecifiedSystem;
    /**
     * Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
     * 
     */
    private final String userSpecifiedType;

    @OutputCustomType.Constructor({"bigqueryDateShardedSpec","bigqueryTableSpec","businessContext","dataSource","dataSourceConnectionSpec","databaseTableSpec","description","displayName","fullyQualifiedName","gcsFilesetSpec","integratedSystem","labels","linkedResource","name","personalDetails","routineSpec","schema","sourceSystemTimestamps","type","usageSignal","userSpecifiedSystem","userSpecifiedType"})
    private GetEntryResult(
        GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse bigqueryDateShardedSpec,
        GoogleCloudDatacatalogV1BigQueryTableSpecResponse bigqueryTableSpec,
        GoogleCloudDatacatalogV1BusinessContextResponse businessContext,
        GoogleCloudDatacatalogV1DataSourceResponse dataSource,
        GoogleCloudDatacatalogV1DataSourceConnectionSpecResponse dataSourceConnectionSpec,
        GoogleCloudDatacatalogV1DatabaseTableSpecResponse databaseTableSpec,
        String description,
        String displayName,
        String fullyQualifiedName,
        GoogleCloudDatacatalogV1GcsFilesetSpecResponse gcsFilesetSpec,
        String integratedSystem,
        Map<String,String> labels,
        String linkedResource,
        String name,
        GoogleCloudDatacatalogV1PersonalDetailsResponse personalDetails,
        GoogleCloudDatacatalogV1RoutineSpecResponse routineSpec,
        GoogleCloudDatacatalogV1SchemaResponse schema,
        GoogleCloudDatacatalogV1SystemTimestampsResponse sourceSystemTimestamps,
        String type,
        GoogleCloudDatacatalogV1UsageSignalResponse usageSignal,
        String userSpecifiedSystem,
        String userSpecifiedType) {
        this.bigqueryDateShardedSpec = Objects.requireNonNull(bigqueryDateShardedSpec);
        this.bigqueryTableSpec = Objects.requireNonNull(bigqueryTableSpec);
        this.businessContext = Objects.requireNonNull(businessContext);
        this.dataSource = Objects.requireNonNull(dataSource);
        this.dataSourceConnectionSpec = Objects.requireNonNull(dataSourceConnectionSpec);
        this.databaseTableSpec = Objects.requireNonNull(databaseTableSpec);
        this.description = Objects.requireNonNull(description);
        this.displayName = Objects.requireNonNull(displayName);
        this.fullyQualifiedName = Objects.requireNonNull(fullyQualifiedName);
        this.gcsFilesetSpec = Objects.requireNonNull(gcsFilesetSpec);
        this.integratedSystem = Objects.requireNonNull(integratedSystem);
        this.labels = Objects.requireNonNull(labels);
        this.linkedResource = Objects.requireNonNull(linkedResource);
        this.name = Objects.requireNonNull(name);
        this.personalDetails = Objects.requireNonNull(personalDetails);
        this.routineSpec = Objects.requireNonNull(routineSpec);
        this.schema = Objects.requireNonNull(schema);
        this.sourceSystemTimestamps = Objects.requireNonNull(sourceSystemTimestamps);
        this.type = Objects.requireNonNull(type);
        this.usageSignal = Objects.requireNonNull(usageSignal);
        this.userSpecifiedSystem = Objects.requireNonNull(userSpecifiedSystem);
        this.userSpecifiedType = Objects.requireNonNull(userSpecifiedType);
    }

    /**
     * Specification for a group of BigQuery tables with the `[prefix]YYYYMMDD` name pattern. For more information, see [Introduction to partitioned tables] (https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding).
     * 
    */
    public GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse getBigqueryDateShardedSpec() {
        return this.bigqueryDateShardedSpec;
    }
    /**
     * Specification that applies to a BigQuery table. Valid only for entries with the `TABLE` type.
     * 
    */
    public GoogleCloudDatacatalogV1BigQueryTableSpecResponse getBigqueryTableSpec() {
        return this.bigqueryTableSpec;
    }
    /**
     * Business Context of the entry.
     * 
    */
    public GoogleCloudDatacatalogV1BusinessContextResponse getBusinessContext() {
        return this.businessContext;
    }
    /**
     * Physical location of the entry.
     * 
    */
    public GoogleCloudDatacatalogV1DataSourceResponse getDataSource() {
        return this.dataSource;
    }
    /**
     * Specification that applies to a data source connection. Valid only for entries with the `DATA_SOURCE_CONNECTION` type.
     * 
    */
    public GoogleCloudDatacatalogV1DataSourceConnectionSpecResponse getDataSourceConnectionSpec() {
        return this.dataSourceConnectionSpec;
    }
    /**
     * Specification that applies to a table resource. Valid only for entries with the `TABLE` type.
     * 
    */
    public GoogleCloudDatacatalogV1DatabaseTableSpecResponse getDatabaseTableSpec() {
        return this.databaseTableSpec;
    }
    /**
     * Entry description that can consist of several sentences or paragraphs that describe entry contents. The description must not contain Unicode non-characters as well as C0 and C1 control codes except tabs (HT), new lines (LF), carriage returns (CR), and page breaks (FF). The maximum size is 2000 bytes when encoded in UTF-8. Default value is an empty string.
     * 
    */
    public String getDescription() {
        return this.description;
    }
    /**
     * Display name of an entry. The name must contain only Unicode letters, numbers (0-9), underscores (_), dashes (-), spaces ( ), and can't start or end with spaces. The maximum size is 200 bytes when encoded in UTF-8. Default value is an empty string.
     * 
    */
    public String getDisplayName() {
        return this.displayName;
    }
    /**
     * Fully qualified name (FQN) of the resource. Set automatically for entries representing resources from synced systems. Settable only during creation and read-only afterwards. Can be used for search and lookup of the entries. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`
     * 
    */
    public String getFullyQualifiedName() {
        return this.fullyQualifiedName;
    }
    /**
     * Specification that applies to a Cloud Storage fileset. Valid only for entries with the `FILESET` type.
     * 
    */
    public GoogleCloudDatacatalogV1GcsFilesetSpecResponse getGcsFilesetSpec() {
        return this.gcsFilesetSpec;
    }
    /**
     * Indicates the entry's source system that Data Catalog integrates with, such as BigQuery, Pub/Sub, or Dataproc Metastore.
     * 
    */
    public String getIntegratedSystem() {
        return this.integratedSystem;
    }
    /**
     * Cloud labels attached to the entry. In Data Catalog, you can create and modify labels attached only to custom entries. Synced entries have unmodifiable labels that come from the source system.
     * 
    */
    public Map<String,String> getLabels() {
        return this.labels;
    }
    /**
     * The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` Output only when the entry is one of the types in the `EntryType` enum. For entries with a `user_specified_type`, this field is optional and defaults to an empty string. The resource string must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), periods (.), colons (:), slashes (/), dashes (-), and hashes (#). The maximum size is 200 bytes when encoded in UTF-8.
     * 
    */
    public String getLinkedResource() {
        return this.linkedResource;
    }
    /**
     * The resource name of an entry in URL format. Note: The entry itself and its child resources might not be stored in the location specified in its name.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * Additional information related to the entry. Private to the current user.
     * 
    */
    public GoogleCloudDatacatalogV1PersonalDetailsResponse getPersonalDetails() {
        return this.personalDetails;
    }
    /**
     * Specification that applies to a user-defined function or procedure. Valid only for entries with the `ROUTINE` type.
     * 
    */
    public GoogleCloudDatacatalogV1RoutineSpecResponse getRoutineSpec() {
        return this.routineSpec;
    }
    /**
     * Schema of the entry. An entry might not have any schema attached to it.
     * 
    */
    public GoogleCloudDatacatalogV1SchemaResponse getSchema() {
        return this.schema;
    }
    /**
     * Timestamps from the underlying resource, not from the Data Catalog entry. Output only when the entry has a type listed in the `EntryType` enum. For entries with `user_specified_type`, this field is optional and defaults to an empty timestamp.
     * 
    */
    public GoogleCloudDatacatalogV1SystemTimestampsResponse getSourceSystemTimestamps() {
        return this.sourceSystemTimestamps;
    }
    /**
     * The type of the entry. Only used for entries with types listed in the `EntryType` enum. Currently, only `FILESET` enum value is allowed. All other entries created in Data Catalog must use the `user_specified_type`.
     * 
    */
    public String getType() {
        return this.type;
    }
    /**
     * Resource usage statistics.
     * 
    */
    public GoogleCloudDatacatalogV1UsageSignalResponse getUsageSignal() {
        return this.usageSignal;
    }
    /**
     * Indicates the entry's source system that Data Catalog doesn't automatically integrate with. The `user_specified_system` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
     * 
    */
    public String getUserSpecifiedSystem() {
        return this.userSpecifiedSystem;
    }
    /**
     * Custom entry type that doesn't match any of the values allowed for input and listed in the `EntryType` enum. When creating an entry, first check the type values in the enum. If there are no appropriate types for the new entry, provide a custom value, for example, `my_special_type`. The `user_specified_type` string has the following limitations: * Is case insensitive. * Must begin with a letter or underscore. * Can only contain letters, numbers, and underscores. * Must be at least 1 character and at most 64 characters long.
     * 
    */
    public String getUserSpecifiedType() {
        return this.userSpecifiedType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntryResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse bigqueryDateShardedSpec;
        private GoogleCloudDatacatalogV1BigQueryTableSpecResponse bigqueryTableSpec;
        private GoogleCloudDatacatalogV1BusinessContextResponse businessContext;
        private GoogleCloudDatacatalogV1DataSourceResponse dataSource;
        private GoogleCloudDatacatalogV1DataSourceConnectionSpecResponse dataSourceConnectionSpec;
        private GoogleCloudDatacatalogV1DatabaseTableSpecResponse databaseTableSpec;
        private String description;
        private String displayName;
        private String fullyQualifiedName;
        private GoogleCloudDatacatalogV1GcsFilesetSpecResponse gcsFilesetSpec;
        private String integratedSystem;
        private Map<String,String> labels;
        private String linkedResource;
        private String name;
        private GoogleCloudDatacatalogV1PersonalDetailsResponse personalDetails;
        private GoogleCloudDatacatalogV1RoutineSpecResponse routineSpec;
        private GoogleCloudDatacatalogV1SchemaResponse schema;
        private GoogleCloudDatacatalogV1SystemTimestampsResponse sourceSystemTimestamps;
        private String type;
        private GoogleCloudDatacatalogV1UsageSignalResponse usageSignal;
        private String userSpecifiedSystem;
        private String userSpecifiedType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEntryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryDateShardedSpec = defaults.bigqueryDateShardedSpec;
    	      this.bigqueryTableSpec = defaults.bigqueryTableSpec;
    	      this.businessContext = defaults.businessContext;
    	      this.dataSource = defaults.dataSource;
    	      this.dataSourceConnectionSpec = defaults.dataSourceConnectionSpec;
    	      this.databaseTableSpec = defaults.databaseTableSpec;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.fullyQualifiedName = defaults.fullyQualifiedName;
    	      this.gcsFilesetSpec = defaults.gcsFilesetSpec;
    	      this.integratedSystem = defaults.integratedSystem;
    	      this.labels = defaults.labels;
    	      this.linkedResource = defaults.linkedResource;
    	      this.name = defaults.name;
    	      this.personalDetails = defaults.personalDetails;
    	      this.routineSpec = defaults.routineSpec;
    	      this.schema = defaults.schema;
    	      this.sourceSystemTimestamps = defaults.sourceSystemTimestamps;
    	      this.type = defaults.type;
    	      this.usageSignal = defaults.usageSignal;
    	      this.userSpecifiedSystem = defaults.userSpecifiedSystem;
    	      this.userSpecifiedType = defaults.userSpecifiedType;
        }

        public Builder setBigqueryDateShardedSpec(GoogleCloudDatacatalogV1BigQueryDateShardedSpecResponse bigqueryDateShardedSpec) {
            this.bigqueryDateShardedSpec = Objects.requireNonNull(bigqueryDateShardedSpec);
            return this;
        }

        public Builder setBigqueryTableSpec(GoogleCloudDatacatalogV1BigQueryTableSpecResponse bigqueryTableSpec) {
            this.bigqueryTableSpec = Objects.requireNonNull(bigqueryTableSpec);
            return this;
        }

        public Builder setBusinessContext(GoogleCloudDatacatalogV1BusinessContextResponse businessContext) {
            this.businessContext = Objects.requireNonNull(businessContext);
            return this;
        }

        public Builder setDataSource(GoogleCloudDatacatalogV1DataSourceResponse dataSource) {
            this.dataSource = Objects.requireNonNull(dataSource);
            return this;
        }

        public Builder setDataSourceConnectionSpec(GoogleCloudDatacatalogV1DataSourceConnectionSpecResponse dataSourceConnectionSpec) {
            this.dataSourceConnectionSpec = Objects.requireNonNull(dataSourceConnectionSpec);
            return this;
        }

        public Builder setDatabaseTableSpec(GoogleCloudDatacatalogV1DatabaseTableSpecResponse databaseTableSpec) {
            this.databaseTableSpec = Objects.requireNonNull(databaseTableSpec);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setFullyQualifiedName(String fullyQualifiedName) {
            this.fullyQualifiedName = Objects.requireNonNull(fullyQualifiedName);
            return this;
        }

        public Builder setGcsFilesetSpec(GoogleCloudDatacatalogV1GcsFilesetSpecResponse gcsFilesetSpec) {
            this.gcsFilesetSpec = Objects.requireNonNull(gcsFilesetSpec);
            return this;
        }

        public Builder setIntegratedSystem(String integratedSystem) {
            this.integratedSystem = Objects.requireNonNull(integratedSystem);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setLinkedResource(String linkedResource) {
            this.linkedResource = Objects.requireNonNull(linkedResource);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPersonalDetails(GoogleCloudDatacatalogV1PersonalDetailsResponse personalDetails) {
            this.personalDetails = Objects.requireNonNull(personalDetails);
            return this;
        }

        public Builder setRoutineSpec(GoogleCloudDatacatalogV1RoutineSpecResponse routineSpec) {
            this.routineSpec = Objects.requireNonNull(routineSpec);
            return this;
        }

        public Builder setSchema(GoogleCloudDatacatalogV1SchemaResponse schema) {
            this.schema = Objects.requireNonNull(schema);
            return this;
        }

        public Builder setSourceSystemTimestamps(GoogleCloudDatacatalogV1SystemTimestampsResponse sourceSystemTimestamps) {
            this.sourceSystemTimestamps = Objects.requireNonNull(sourceSystemTimestamps);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setUsageSignal(GoogleCloudDatacatalogV1UsageSignalResponse usageSignal) {
            this.usageSignal = Objects.requireNonNull(usageSignal);
            return this;
        }

        public Builder setUserSpecifiedSystem(String userSpecifiedSystem) {
            this.userSpecifiedSystem = Objects.requireNonNull(userSpecifiedSystem);
            return this;
        }

        public Builder setUserSpecifiedType(String userSpecifiedType) {
            this.userSpecifiedType = Objects.requireNonNull(userSpecifiedType);
            return this;
        }
        public GetEntryResult build() {
            return new GetEntryResult(bigqueryDateShardedSpec, bigqueryTableSpec, businessContext, dataSource, dataSourceConnectionSpec, databaseTableSpec, description, displayName, fullyQualifiedName, gcsFilesetSpec, integratedSystem, labels, linkedResource, name, personalDetails, routineSpec, schema, sourceSystemTimestamps, type, usageSignal, userSpecifiedSystem, userSpecifiedType);
        }
    }
}
