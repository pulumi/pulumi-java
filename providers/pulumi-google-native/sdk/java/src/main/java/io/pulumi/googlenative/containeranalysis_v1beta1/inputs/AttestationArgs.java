// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.GenericSignedAttestationArgs;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.PgpSignedAttestationArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Occurrence that represents a single "attestation". The authenticity of an attestation can be verified using the attached signature. If the verifier trusts the public key of the signer, then verifying the signature is sufficient to establish trust. In this circumstance, the authority to which this attestation is attached is primarily useful for look-up (how to find this attestation if you already know the authority and artifact to be verified) and intent (which authority was this attestation intended to sign for).
 * 
 */
public final class AttestationArgs extends io.pulumi.resources.ResourceArgs {

    public static final AttestationArgs Empty = new AttestationArgs();

    @InputImport(name="genericSignedAttestation")
      private final @Nullable Output<GenericSignedAttestationArgs> genericSignedAttestation;

    public Output<GenericSignedAttestationArgs> getGenericSignedAttestation() {
        return this.genericSignedAttestation == null ? Output.empty() : this.genericSignedAttestation;
    }

    /**
     * A PGP signed attestation.
     * 
     */
    @InputImport(name="pgpSignedAttestation")
      private final @Nullable Output<PgpSignedAttestationArgs> pgpSignedAttestation;

    public Output<PgpSignedAttestationArgs> getPgpSignedAttestation() {
        return this.pgpSignedAttestation == null ? Output.empty() : this.pgpSignedAttestation;
    }

    public AttestationArgs(
        @Nullable Output<GenericSignedAttestationArgs> genericSignedAttestation,
        @Nullable Output<PgpSignedAttestationArgs> pgpSignedAttestation) {
        this.genericSignedAttestation = genericSignedAttestation;
        this.pgpSignedAttestation = pgpSignedAttestation;
    }

    private AttestationArgs() {
        this.genericSignedAttestation = Output.empty();
        this.pgpSignedAttestation = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AttestationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<GenericSignedAttestationArgs> genericSignedAttestation;
        private @Nullable Output<PgpSignedAttestationArgs> pgpSignedAttestation;

        public Builder() {
    	      // Empty
        }

        public Builder(AttestationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.genericSignedAttestation = defaults.genericSignedAttestation;
    	      this.pgpSignedAttestation = defaults.pgpSignedAttestation;
        }

        public Builder genericSignedAttestation(@Nullable Output<GenericSignedAttestationArgs> genericSignedAttestation) {
            this.genericSignedAttestation = genericSignedAttestation;
            return this;
        }

        public Builder genericSignedAttestation(@Nullable GenericSignedAttestationArgs genericSignedAttestation) {
            this.genericSignedAttestation = Output.ofNullable(genericSignedAttestation);
            return this;
        }

        public Builder pgpSignedAttestation(@Nullable Output<PgpSignedAttestationArgs> pgpSignedAttestation) {
            this.pgpSignedAttestation = pgpSignedAttestation;
            return this;
        }

        public Builder pgpSignedAttestation(@Nullable PgpSignedAttestationArgs pgpSignedAttestation) {
            this.pgpSignedAttestation = Output.ofNullable(pgpSignedAttestation);
            return this;
        }
        public AttestationArgs build() {
            return new AttestationArgs(genericSignedAttestation, pgpSignedAttestation);
        }
    }
}
