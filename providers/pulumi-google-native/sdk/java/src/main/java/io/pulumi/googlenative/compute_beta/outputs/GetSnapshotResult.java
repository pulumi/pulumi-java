// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_beta.outputs.CustomerEncryptionKeyResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetSnapshotResult {
    private final Boolean autoCreated;
    private final String chainName;
    private final String creationTimestamp;
    private final String description;
    private final String diskSizeGb;
    private final String downloadBytes;
    private final Boolean guestFlush;
    private final String kind;
    private final String labelFingerprint;
    private final Map<String,String> labels;
    private final List<String> licenseCodes;
    private final List<String> licenses;
    private final String locationHint;
    private final String name;
    private final Boolean satisfiesPzs;
    private final String selfLink;
    private final CustomerEncryptionKeyResponse snapshotEncryptionKey;
    private final String sourceDisk;
    private final CustomerEncryptionKeyResponse sourceDiskEncryptionKey;
    private final String sourceDiskId;
    private final String status;
    private final String storageBytes;
    private final String storageBytesStatus;
    private final List<String> storageLocations;
    private final List<String> userLicenses;

    @OutputCustomType.Constructor({"autoCreated","chainName","creationTimestamp","description","diskSizeGb","downloadBytes","guestFlush","kind","labelFingerprint","labels","licenseCodes","licenses","locationHint","name","satisfiesPzs","selfLink","snapshotEncryptionKey","sourceDisk","sourceDiskEncryptionKey","sourceDiskId","status","storageBytes","storageBytesStatus","storageLocations","userLicenses"})
    private GetSnapshotResult(
        Boolean autoCreated,
        String chainName,
        String creationTimestamp,
        String description,
        String diskSizeGb,
        String downloadBytes,
        Boolean guestFlush,
        String kind,
        String labelFingerprint,
        Map<String,String> labels,
        List<String> licenseCodes,
        List<String> licenses,
        String locationHint,
        String name,
        Boolean satisfiesPzs,
        String selfLink,
        CustomerEncryptionKeyResponse snapshotEncryptionKey,
        String sourceDisk,
        CustomerEncryptionKeyResponse sourceDiskEncryptionKey,
        String sourceDiskId,
        String status,
        String storageBytes,
        String storageBytesStatus,
        List<String> storageLocations,
        List<String> userLicenses) {
        this.autoCreated = Objects.requireNonNull(autoCreated);
        this.chainName = Objects.requireNonNull(chainName);
        this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
        this.description = Objects.requireNonNull(description);
        this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
        this.downloadBytes = Objects.requireNonNull(downloadBytes);
        this.guestFlush = Objects.requireNonNull(guestFlush);
        this.kind = Objects.requireNonNull(kind);
        this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
        this.labels = Objects.requireNonNull(labels);
        this.licenseCodes = Objects.requireNonNull(licenseCodes);
        this.licenses = Objects.requireNonNull(licenses);
        this.locationHint = Objects.requireNonNull(locationHint);
        this.name = Objects.requireNonNull(name);
        this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
        this.selfLink = Objects.requireNonNull(selfLink);
        this.snapshotEncryptionKey = Objects.requireNonNull(snapshotEncryptionKey);
        this.sourceDisk = Objects.requireNonNull(sourceDisk);
        this.sourceDiskEncryptionKey = Objects.requireNonNull(sourceDiskEncryptionKey);
        this.sourceDiskId = Objects.requireNonNull(sourceDiskId);
        this.status = Objects.requireNonNull(status);
        this.storageBytes = Objects.requireNonNull(storageBytes);
        this.storageBytesStatus = Objects.requireNonNull(storageBytesStatus);
        this.storageLocations = Objects.requireNonNull(storageLocations);
        this.userLicenses = Objects.requireNonNull(userLicenses);
    }

    public Boolean getAutoCreated() {
        return this.autoCreated;
    }
    public String getChainName() {
        return this.chainName;
    }
    public String getCreationTimestamp() {
        return this.creationTimestamp;
    }
    public String getDescription() {
        return this.description;
    }
    public String getDiskSizeGb() {
        return this.diskSizeGb;
    }
    public String getDownloadBytes() {
        return this.downloadBytes;
    }
    public Boolean getGuestFlush() {
        return this.guestFlush;
    }
    public String getKind() {
        return this.kind;
    }
    public String getLabelFingerprint() {
        return this.labelFingerprint;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public List<String> getLicenseCodes() {
        return this.licenseCodes;
    }
    public List<String> getLicenses() {
        return this.licenses;
    }
    public String getLocationHint() {
        return this.locationHint;
    }
    public String getName() {
        return this.name;
    }
    public Boolean getSatisfiesPzs() {
        return this.satisfiesPzs;
    }
    public String getSelfLink() {
        return this.selfLink;
    }
    public CustomerEncryptionKeyResponse getSnapshotEncryptionKey() {
        return this.snapshotEncryptionKey;
    }
    public String getSourceDisk() {
        return this.sourceDisk;
    }
    public CustomerEncryptionKeyResponse getSourceDiskEncryptionKey() {
        return this.sourceDiskEncryptionKey;
    }
    public String getSourceDiskId() {
        return this.sourceDiskId;
    }
    public String getStatus() {
        return this.status;
    }
    public String getStorageBytes() {
        return this.storageBytes;
    }
    public String getStorageBytesStatus() {
        return this.storageBytesStatus;
    }
    public List<String> getStorageLocations() {
        return this.storageLocations;
    }
    public List<String> getUserLicenses() {
        return this.userLicenses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSnapshotResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean autoCreated;
        private String chainName;
        private String creationTimestamp;
        private String description;
        private String diskSizeGb;
        private String downloadBytes;
        private Boolean guestFlush;
        private String kind;
        private String labelFingerprint;
        private Map<String,String> labels;
        private List<String> licenseCodes;
        private List<String> licenses;
        private String locationHint;
        private String name;
        private Boolean satisfiesPzs;
        private String selfLink;
        private CustomerEncryptionKeyResponse snapshotEncryptionKey;
        private String sourceDisk;
        private CustomerEncryptionKeyResponse sourceDiskEncryptionKey;
        private String sourceDiskId;
        private String status;
        private String storageBytes;
        private String storageBytesStatus;
        private List<String> storageLocations;
        private List<String> userLicenses;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoCreated = defaults.autoCreated;
    	      this.chainName = defaults.chainName;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.description = defaults.description;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.downloadBytes = defaults.downloadBytes;
    	      this.guestFlush = defaults.guestFlush;
    	      this.kind = defaults.kind;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.labels = defaults.labels;
    	      this.licenseCodes = defaults.licenseCodes;
    	      this.licenses = defaults.licenses;
    	      this.locationHint = defaults.locationHint;
    	      this.name = defaults.name;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.selfLink = defaults.selfLink;
    	      this.snapshotEncryptionKey = defaults.snapshotEncryptionKey;
    	      this.sourceDisk = defaults.sourceDisk;
    	      this.sourceDiskEncryptionKey = defaults.sourceDiskEncryptionKey;
    	      this.sourceDiskId = defaults.sourceDiskId;
    	      this.status = defaults.status;
    	      this.storageBytes = defaults.storageBytes;
    	      this.storageBytesStatus = defaults.storageBytesStatus;
    	      this.storageLocations = defaults.storageLocations;
    	      this.userLicenses = defaults.userLicenses;
        }

        public Builder setAutoCreated(Boolean autoCreated) {
            this.autoCreated = Objects.requireNonNull(autoCreated);
            return this;
        }

        public Builder setChainName(String chainName) {
            this.chainName = Objects.requireNonNull(chainName);
            return this;
        }

        public Builder setCreationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDiskSizeGb(String diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }

        public Builder setDownloadBytes(String downloadBytes) {
            this.downloadBytes = Objects.requireNonNull(downloadBytes);
            return this;
        }

        public Builder setGuestFlush(Boolean guestFlush) {
            this.guestFlush = Objects.requireNonNull(guestFlush);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setLabelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setLicenseCodes(List<String> licenseCodes) {
            this.licenseCodes = Objects.requireNonNull(licenseCodes);
            return this;
        }

        public Builder setLicenses(List<String> licenses) {
            this.licenses = Objects.requireNonNull(licenses);
            return this;
        }

        public Builder setLocationHint(String locationHint) {
            this.locationHint = Objects.requireNonNull(locationHint);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSatisfiesPzs(Boolean satisfiesPzs) {
            this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setSnapshotEncryptionKey(CustomerEncryptionKeyResponse snapshotEncryptionKey) {
            this.snapshotEncryptionKey = Objects.requireNonNull(snapshotEncryptionKey);
            return this;
        }

        public Builder setSourceDisk(String sourceDisk) {
            this.sourceDisk = Objects.requireNonNull(sourceDisk);
            return this;
        }

        public Builder setSourceDiskEncryptionKey(CustomerEncryptionKeyResponse sourceDiskEncryptionKey) {
            this.sourceDiskEncryptionKey = Objects.requireNonNull(sourceDiskEncryptionKey);
            return this;
        }

        public Builder setSourceDiskId(String sourceDiskId) {
            this.sourceDiskId = Objects.requireNonNull(sourceDiskId);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setStorageBytes(String storageBytes) {
            this.storageBytes = Objects.requireNonNull(storageBytes);
            return this;
        }

        public Builder setStorageBytesStatus(String storageBytesStatus) {
            this.storageBytesStatus = Objects.requireNonNull(storageBytesStatus);
            return this;
        }

        public Builder setStorageLocations(List<String> storageLocations) {
            this.storageLocations = Objects.requireNonNull(storageLocations);
            return this;
        }

        public Builder setUserLicenses(List<String> userLicenses) {
            this.userLicenses = Objects.requireNonNull(userLicenses);
            return this;
        }

        public GetSnapshotResult build() {
            return new GetSnapshotResult(autoCreated, chainName, creationTimestamp, description, diskSizeGb, downloadBytes, guestFlush, kind, labelFingerprint, labels, licenseCodes, licenses, locationHint, name, satisfiesPzs, selfLink, snapshotEncryptionKey, sourceDisk, sourceDiskEncryptionKey, sourceDiskId, status, storageBytes, storageBytesStatus, storageLocations, userLicenses);
        }
    }
}
