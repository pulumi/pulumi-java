// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.DistributionResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class PackageResponse extends io.pulumi.resources.InvokeArgs {

    public static final PackageResponse Empty = new PackageResponse();

    @InputImport(name="distribution", required=true)
    private final List<DistributionResponse> distribution;

    public List<DistributionResponse> getDistribution() {
        return this.distribution;
    }

    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    public PackageResponse(
        List<DistributionResponse> distribution,
        String name) {
        this.distribution = Objects.requireNonNull(distribution, "expected parameter 'distribution' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private PackageResponse() {
        this.distribution = List.of();
        this.name = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PackageResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<DistributionResponse> distribution;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(PackageResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.distribution = defaults.distribution;
    	      this.name = defaults.name;
        }

        public Builder setDistribution(List<DistributionResponse> distribution) {
            this.distribution = Objects.requireNonNull(distribution);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public PackageResponse build() {
            return new PackageResponse(distribution, name);
        }
    }
}
