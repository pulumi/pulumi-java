// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datamigration_v1beta1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.datamigration_v1beta1.ConnectionProfileArgs;
import io.pulumi.googlenative.datamigration_v1beta1.outputs.CloudSqlConnectionProfileResponse;
import io.pulumi.googlenative.datamigration_v1beta1.outputs.MySqlConnectionProfileResponse;
import io.pulumi.googlenative.datamigration_v1beta1.outputs.StatusResponse;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * Creates a new connection profile in a given project and location.
 * 
 */
@ResourceType(type="google-native:datamigration/v1beta1:ConnectionProfile")
public class ConnectionProfile extends io.pulumi.resources.CustomResource {
    /**
     * A CloudSQL database connection profile.
     * 
     */
    @OutputExport(name="cloudsql", type=CloudSqlConnectionProfileResponse.class, parameters={})
    private Output<CloudSqlConnectionProfileResponse> cloudsql;

    /**
     * @return A CloudSQL database connection profile.
     * 
     */
    public Output<CloudSqlConnectionProfileResponse> getCloudsql() {
        return this.cloudsql;
    }
    /**
     * The timestamp when the resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     * 
     */
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    /**
     * @return The timestamp when the resource was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     * 
     */
    public Output<String> getCreateTime() {
        return this.createTime;
    }
    /**
     * The connection profile display name.
     * 
     */
    @OutputExport(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return The connection profile display name.
     * 
     */
    public Output<String> getDisplayName() {
        return this.displayName;
    }
    /**
     * The error details in case of state FAILED.
     * 
     */
    @OutputExport(name="error", type=StatusResponse.class, parameters={})
    private Output<StatusResponse> error;

    /**
     * @return The error details in case of state FAILED.
     * 
     */
    public Output<StatusResponse> getError() {
        return this.error;
    }
    /**
     * The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     * 
     */
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    /**
     * @return The resource labels for connection profile to use to annotate any related underlying resources such as Compute Engine VMs. An object containing a list of "key": "value" pairs. Example: `{ "name": "wrench", "mass": "1.3kg", "count": "3" }`.
     * 
     */
    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }
    /**
     * A MySQL database connection profile.
     * 
     */
    @OutputExport(name="mysql", type=MySqlConnectionProfileResponse.class, parameters={})
    private Output<MySqlConnectionProfileResponse> mysql;

    /**
     * @return A MySQL database connection profile.
     * 
     */
    public Output<MySqlConnectionProfileResponse> getMysql() {
        return this.mysql;
    }
    /**
     * The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
     * 
     */
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of this connection profile resource in the form of projects/{project}/locations/{location}/connectionProfiles/{connectionProfile}.
     * 
     */
    public Output<String> getName() {
        return this.name;
    }
    /**
     * The database provider.
     * 
     */
    @OutputExport(name="provider", type=String.class, parameters={})
    private Output<String> provider;

    /**
     * @return The database provider.
     * 
     */
    public Output<String> getProvider() {
        return this.provider;
    }
    /**
     * The current connection profile state (e.g. DRAFT, READY, or FAILED).
     * 
     */
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current connection profile state (e.g. DRAFT, READY, or FAILED).
     * 
     */
    public Output<String> getState() {
        return this.state;
    }
    /**
     * The timestamp when the resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     * 
     */
    @OutputExport(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    /**
     * @return The timestamp when the resource was last updated. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z".
     * 
     */
    public Output<String> getUpdateTime() {
        return this.updateTime;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConnectionProfile(String name) {
        this(name, ConnectionProfileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConnectionProfile(String name, ConnectionProfileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConnectionProfile(String name, ConnectionProfileArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:datamigration/v1beta1:ConnectionProfile", name, args == null ? ConnectionProfileArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ConnectionProfile(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:datamigration/v1beta1:ConnectionProfile", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConnectionProfile get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ConnectionProfile(name, id, options);
    }
}
