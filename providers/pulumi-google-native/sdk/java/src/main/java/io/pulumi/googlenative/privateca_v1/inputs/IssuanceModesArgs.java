// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.privateca_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
 * 
 */
public final class IssuanceModesArgs extends io.pulumi.resources.ResourceArgs {

    public static final IssuanceModesArgs Empty = new IssuanceModesArgs();

    /**
     * Optional. When true, allows callers to create Certificates by specifying a CertificateConfig.
     * 
     */
    @InputImport(name="allowConfigBasedIssuance")
      private final @Nullable Output<Boolean> allowConfigBasedIssuance;

    public Output<Boolean> getAllowConfigBasedIssuance() {
        return this.allowConfigBasedIssuance == null ? Output.empty() : this.allowConfigBasedIssuance;
    }

    /**
     * Optional. When true, allows callers to create Certificates by specifying a CSR.
     * 
     */
    @InputImport(name="allowCsrBasedIssuance")
      private final @Nullable Output<Boolean> allowCsrBasedIssuance;

    public Output<Boolean> getAllowCsrBasedIssuance() {
        return this.allowCsrBasedIssuance == null ? Output.empty() : this.allowCsrBasedIssuance;
    }

    public IssuanceModesArgs(
        @Nullable Output<Boolean> allowConfigBasedIssuance,
        @Nullable Output<Boolean> allowCsrBasedIssuance) {
        this.allowConfigBasedIssuance = allowConfigBasedIssuance;
        this.allowCsrBasedIssuance = allowCsrBasedIssuance;
    }

    private IssuanceModesArgs() {
        this.allowConfigBasedIssuance = Output.empty();
        this.allowCsrBasedIssuance = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IssuanceModesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Boolean> allowConfigBasedIssuance;
        private @Nullable Output<Boolean> allowCsrBasedIssuance;

        public Builder() {
    	      // Empty
        }

        public Builder(IssuanceModesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowConfigBasedIssuance = defaults.allowConfigBasedIssuance;
    	      this.allowCsrBasedIssuance = defaults.allowCsrBasedIssuance;
        }

        public Builder allowConfigBasedIssuance(@Nullable Output<Boolean> allowConfigBasedIssuance) {
            this.allowConfigBasedIssuance = allowConfigBasedIssuance;
            return this;
        }

        public Builder allowConfigBasedIssuance(@Nullable Boolean allowConfigBasedIssuance) {
            this.allowConfigBasedIssuance = Output.ofNullable(allowConfigBasedIssuance);
            return this;
        }

        public Builder allowCsrBasedIssuance(@Nullable Output<Boolean> allowCsrBasedIssuance) {
            this.allowCsrBasedIssuance = allowCsrBasedIssuance;
            return this;
        }

        public Builder allowCsrBasedIssuance(@Nullable Boolean allowCsrBasedIssuance) {
            this.allowCsrBasedIssuance = Output.ofNullable(allowCsrBasedIssuance);
            return this;
        }
        public IssuanceModesArgs build() {
            return new IssuanceModesArgs(allowConfigBasedIssuance, allowCsrBasedIssuance);
        }
    }
}
