// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.healthcare_v1beta1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.healthcare_v1beta1.inputs.SchemaConfigResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class GoogleCloudHealthcareV1beta1FhirBigQueryDestinationResponse extends io.pulumi.resources.InvokeArgs {

    public static final GoogleCloudHealthcareV1beta1FhirBigQueryDestinationResponse Empty = new GoogleCloudHealthcareV1beta1FhirBigQueryDestinationResponse();

    @InputImport(name="datasetUri", required=true)
    private final String datasetUri;

    public String getDatasetUri() {
        return this.datasetUri;
    }

    @InputImport(name="force", required=true)
    private final Boolean force;

    public Boolean getForce() {
        return this.force;
    }

    @InputImport(name="schemaConfig", required=true)
    private final SchemaConfigResponse schemaConfig;

    public SchemaConfigResponse getSchemaConfig() {
        return this.schemaConfig;
    }

    @InputImport(name="writeDisposition", required=true)
    private final String writeDisposition;

    public String getWriteDisposition() {
        return this.writeDisposition;
    }

    public GoogleCloudHealthcareV1beta1FhirBigQueryDestinationResponse(
        String datasetUri,
        Boolean force,
        SchemaConfigResponse schemaConfig,
        String writeDisposition) {
        this.datasetUri = Objects.requireNonNull(datasetUri, "expected parameter 'datasetUri' to be non-null");
        this.force = Objects.requireNonNull(force, "expected parameter 'force' to be non-null");
        this.schemaConfig = Objects.requireNonNull(schemaConfig, "expected parameter 'schemaConfig' to be non-null");
        this.writeDisposition = Objects.requireNonNull(writeDisposition, "expected parameter 'writeDisposition' to be non-null");
    }

    private GoogleCloudHealthcareV1beta1FhirBigQueryDestinationResponse() {
        this.datasetUri = null;
        this.force = null;
        this.schemaConfig = null;
        this.writeDisposition = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudHealthcareV1beta1FhirBigQueryDestinationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String datasetUri;
        private Boolean force;
        private SchemaConfigResponse schemaConfig;
        private String writeDisposition;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudHealthcareV1beta1FhirBigQueryDestinationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasetUri = defaults.datasetUri;
    	      this.force = defaults.force;
    	      this.schemaConfig = defaults.schemaConfig;
    	      this.writeDisposition = defaults.writeDisposition;
        }

        public Builder setDatasetUri(String datasetUri) {
            this.datasetUri = Objects.requireNonNull(datasetUri);
            return this;
        }

        public Builder setForce(Boolean force) {
            this.force = Objects.requireNonNull(force);
            return this;
        }

        public Builder setSchemaConfig(SchemaConfigResponse schemaConfig) {
            this.schemaConfig = Objects.requireNonNull(schemaConfig);
            return this;
        }

        public Builder setWriteDisposition(String writeDisposition) {
            this.writeDisposition = Objects.requireNonNull(writeDisposition);
            return this;
        }

        public GoogleCloudHealthcareV1beta1FhirBigQueryDestinationResponse build() {
            return new GoogleCloudHealthcareV1beta1FhirBigQueryDestinationResponse(datasetUri, force, schemaConfig, writeDisposition);
        }
    }
}
