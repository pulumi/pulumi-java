// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.vmmigration_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class AppliedLicenseResponse extends io.pulumi.resources.InvokeArgs {

    public static final AppliedLicenseResponse Empty = new AppliedLicenseResponse();

    @InputImport(name="osLicense", required=true)
    private final String osLicense;

    public String getOsLicense() {
        return this.osLicense;
    }

    @InputImport(name="type", required=true)
    private final String type;

    public String getType() {
        return this.type;
    }

    public AppliedLicenseResponse(
        String osLicense,
        String type) {
        this.osLicense = Objects.requireNonNull(osLicense, "expected parameter 'osLicense' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private AppliedLicenseResponse() {
        this.osLicense = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppliedLicenseResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String osLicense;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(AppliedLicenseResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.osLicense = defaults.osLicense;
    	      this.type = defaults.type;
        }

        public Builder setOsLicense(String osLicense) {
            this.osLicense = Objects.requireNonNull(osLicense);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public AppliedLicenseResponse build() {
            return new AppliedLicenseResponse(osLicense, type);
        }
    }
}
