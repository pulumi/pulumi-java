// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.apigee_v1;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1DatastoreConfigArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatastoreArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatastoreArgs Empty = new DatastoreArgs();

    @InputImport(name="datastoreConfig")
    private final @Nullable Input<GoogleCloudApigeeV1DatastoreConfigArgs> datastoreConfig;

    public Input<GoogleCloudApigeeV1DatastoreConfigArgs> getDatastoreConfig() {
        return this.datastoreConfig == null ? Input.empty() : this.datastoreConfig;
    }

    @InputImport(name="displayName", required=true)
    private final Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName;
    }

    @InputImport(name="organizationId", required=true)
    private final Input<String> organizationId;

    public Input<String> getOrganizationId() {
        return this.organizationId;
    }

    @InputImport(name="targetType")
    private final @Nullable Input<String> targetType;

    public Input<String> getTargetType() {
        return this.targetType == null ? Input.empty() : this.targetType;
    }

    public DatastoreArgs(
        @Nullable Input<GoogleCloudApigeeV1DatastoreConfigArgs> datastoreConfig,
        Input<String> displayName,
        Input<String> organizationId,
        @Nullable Input<String> targetType) {
        this.datastoreConfig = datastoreConfig;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.organizationId = Objects.requireNonNull(organizationId, "expected parameter 'organizationId' to be non-null");
        this.targetType = targetType;
    }

    private DatastoreArgs() {
        this.datastoreConfig = Input.empty();
        this.displayName = Input.empty();
        this.organizationId = Input.empty();
        this.targetType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatastoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GoogleCloudApigeeV1DatastoreConfigArgs> datastoreConfig;
        private Input<String> displayName;
        private Input<String> organizationId;
        private @Nullable Input<String> targetType;

        public Builder() {
    	      // Empty
        }

        public Builder(DatastoreArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datastoreConfig = defaults.datastoreConfig;
    	      this.displayName = defaults.displayName;
    	      this.organizationId = defaults.organizationId;
    	      this.targetType = defaults.targetType;
        }

        public Builder setDatastoreConfig(@Nullable Input<GoogleCloudApigeeV1DatastoreConfigArgs> datastoreConfig) {
            this.datastoreConfig = datastoreConfig;
            return this;
        }

        public Builder setDatastoreConfig(@Nullable GoogleCloudApigeeV1DatastoreConfigArgs datastoreConfig) {
            this.datastoreConfig = Input.ofNullable(datastoreConfig);
            return this;
        }

        public Builder setDisplayName(Input<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Input.of(Objects.requireNonNull(displayName));
            return this;
        }

        public Builder setOrganizationId(Input<String> organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }

        public Builder setOrganizationId(String organizationId) {
            this.organizationId = Input.of(Objects.requireNonNull(organizationId));
            return this;
        }

        public Builder setTargetType(@Nullable Input<String> targetType) {
            this.targetType = targetType;
            return this;
        }

        public Builder setTargetType(@Nullable String targetType) {
            this.targetType = Input.ofNullable(targetType);
            return this;
        }

        public DatastoreArgs build() {
            return new DatastoreArgs(datastoreConfig, displayName, organizationId, targetType);
        }
    }
}
