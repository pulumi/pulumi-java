// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_beta.outputs.InterconnectAttachmentPartnerMetadataResponse;
import io.pulumi.googlenative.compute_beta.outputs.InterconnectAttachmentPrivateInfoResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetInterconnectAttachmentResult {
    private final Boolean adminEnabled;
    private final String bandwidth;
    private final List<String> candidateIpv6Subnets;
    private final List<String> candidateSubnets;
    private final String cloudRouterIpAddress;
    private final String cloudRouterIpv6Address;
    private final String cloudRouterIpv6InterfaceId;
    private final String creationTimestamp;
    private final String customerRouterIpAddress;
    private final String customerRouterIpv6Address;
    private final String customerRouterIpv6InterfaceId;
    private final Integer dataplaneVersion;
    private final String description;
    private final String edgeAvailabilityDomain;
    private final String encryption;
    private final String interconnect;
    private final List<String> ipsecInternalAddresses;
    private final String kind;
    private final String labelFingerprint;
    private final Map<String,String> labels;
    private final Integer mtu;
    private final String name;
    private final String operationalStatus;
    private final String pairingKey;
    private final String partnerAsn;
    private final InterconnectAttachmentPartnerMetadataResponse partnerMetadata;
    private final InterconnectAttachmentPrivateInfoResponse privateInterconnectInfo;
    private final String region;
    private final String router;
    private final Boolean satisfiesPzs;
    private final String selfLink;
    private final String stackType;
    private final String state;
    private final String type;
    private final Integer vlanTag8021q;

    @OutputCustomType.Constructor({"adminEnabled","bandwidth","candidateIpv6Subnets","candidateSubnets","cloudRouterIpAddress","cloudRouterIpv6Address","cloudRouterIpv6InterfaceId","creationTimestamp","customerRouterIpAddress","customerRouterIpv6Address","customerRouterIpv6InterfaceId","dataplaneVersion","description","edgeAvailabilityDomain","encryption","interconnect","ipsecInternalAddresses","kind","labelFingerprint","labels","mtu","name","operationalStatus","pairingKey","partnerAsn","partnerMetadata","privateInterconnectInfo","region","router","satisfiesPzs","selfLink","stackType","state","type","vlanTag8021q"})
    private GetInterconnectAttachmentResult(
        Boolean adminEnabled,
        String bandwidth,
        List<String> candidateIpv6Subnets,
        List<String> candidateSubnets,
        String cloudRouterIpAddress,
        String cloudRouterIpv6Address,
        String cloudRouterIpv6InterfaceId,
        String creationTimestamp,
        String customerRouterIpAddress,
        String customerRouterIpv6Address,
        String customerRouterIpv6InterfaceId,
        Integer dataplaneVersion,
        String description,
        String edgeAvailabilityDomain,
        String encryption,
        String interconnect,
        List<String> ipsecInternalAddresses,
        String kind,
        String labelFingerprint,
        Map<String,String> labels,
        Integer mtu,
        String name,
        String operationalStatus,
        String pairingKey,
        String partnerAsn,
        InterconnectAttachmentPartnerMetadataResponse partnerMetadata,
        InterconnectAttachmentPrivateInfoResponse privateInterconnectInfo,
        String region,
        String router,
        Boolean satisfiesPzs,
        String selfLink,
        String stackType,
        String state,
        String type,
        Integer vlanTag8021q) {
        this.adminEnabled = Objects.requireNonNull(adminEnabled);
        this.bandwidth = Objects.requireNonNull(bandwidth);
        this.candidateIpv6Subnets = Objects.requireNonNull(candidateIpv6Subnets);
        this.candidateSubnets = Objects.requireNonNull(candidateSubnets);
        this.cloudRouterIpAddress = Objects.requireNonNull(cloudRouterIpAddress);
        this.cloudRouterIpv6Address = Objects.requireNonNull(cloudRouterIpv6Address);
        this.cloudRouterIpv6InterfaceId = Objects.requireNonNull(cloudRouterIpv6InterfaceId);
        this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
        this.customerRouterIpAddress = Objects.requireNonNull(customerRouterIpAddress);
        this.customerRouterIpv6Address = Objects.requireNonNull(customerRouterIpv6Address);
        this.customerRouterIpv6InterfaceId = Objects.requireNonNull(customerRouterIpv6InterfaceId);
        this.dataplaneVersion = Objects.requireNonNull(dataplaneVersion);
        this.description = Objects.requireNonNull(description);
        this.edgeAvailabilityDomain = Objects.requireNonNull(edgeAvailabilityDomain);
        this.encryption = Objects.requireNonNull(encryption);
        this.interconnect = Objects.requireNonNull(interconnect);
        this.ipsecInternalAddresses = Objects.requireNonNull(ipsecInternalAddresses);
        this.kind = Objects.requireNonNull(kind);
        this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
        this.labels = Objects.requireNonNull(labels);
        this.mtu = Objects.requireNonNull(mtu);
        this.name = Objects.requireNonNull(name);
        this.operationalStatus = Objects.requireNonNull(operationalStatus);
        this.pairingKey = Objects.requireNonNull(pairingKey);
        this.partnerAsn = Objects.requireNonNull(partnerAsn);
        this.partnerMetadata = Objects.requireNonNull(partnerMetadata);
        this.privateInterconnectInfo = Objects.requireNonNull(privateInterconnectInfo);
        this.region = Objects.requireNonNull(region);
        this.router = Objects.requireNonNull(router);
        this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
        this.selfLink = Objects.requireNonNull(selfLink);
        this.stackType = Objects.requireNonNull(stackType);
        this.state = Objects.requireNonNull(state);
        this.type = Objects.requireNonNull(type);
        this.vlanTag8021q = Objects.requireNonNull(vlanTag8021q);
    }

    public Boolean getAdminEnabled() {
        return this.adminEnabled;
    }
    public String getBandwidth() {
        return this.bandwidth;
    }
    public List<String> getCandidateIpv6Subnets() {
        return this.candidateIpv6Subnets;
    }
    public List<String> getCandidateSubnets() {
        return this.candidateSubnets;
    }
    public String getCloudRouterIpAddress() {
        return this.cloudRouterIpAddress;
    }
    public String getCloudRouterIpv6Address() {
        return this.cloudRouterIpv6Address;
    }
    public String getCloudRouterIpv6InterfaceId() {
        return this.cloudRouterIpv6InterfaceId;
    }
    public String getCreationTimestamp() {
        return this.creationTimestamp;
    }
    public String getCustomerRouterIpAddress() {
        return this.customerRouterIpAddress;
    }
    public String getCustomerRouterIpv6Address() {
        return this.customerRouterIpv6Address;
    }
    public String getCustomerRouterIpv6InterfaceId() {
        return this.customerRouterIpv6InterfaceId;
    }
    public Integer getDataplaneVersion() {
        return this.dataplaneVersion;
    }
    public String getDescription() {
        return this.description;
    }
    public String getEdgeAvailabilityDomain() {
        return this.edgeAvailabilityDomain;
    }
    public String getEncryption() {
        return this.encryption;
    }
    public String getInterconnect() {
        return this.interconnect;
    }
    public List<String> getIpsecInternalAddresses() {
        return this.ipsecInternalAddresses;
    }
    public String getKind() {
        return this.kind;
    }
    public String getLabelFingerprint() {
        return this.labelFingerprint;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public Integer getMtu() {
        return this.mtu;
    }
    public String getName() {
        return this.name;
    }
    public String getOperationalStatus() {
        return this.operationalStatus;
    }
    public String getPairingKey() {
        return this.pairingKey;
    }
    public String getPartnerAsn() {
        return this.partnerAsn;
    }
    public InterconnectAttachmentPartnerMetadataResponse getPartnerMetadata() {
        return this.partnerMetadata;
    }
    public InterconnectAttachmentPrivateInfoResponse getPrivateInterconnectInfo() {
        return this.privateInterconnectInfo;
    }
    public String getRegion() {
        return this.region;
    }
    public String getRouter() {
        return this.router;
    }
    public Boolean getSatisfiesPzs() {
        return this.satisfiesPzs;
    }
    public String getSelfLink() {
        return this.selfLink;
    }
    public String getStackType() {
        return this.stackType;
    }
    public String getState() {
        return this.state;
    }
    public String getType() {
        return this.type;
    }
    public Integer getVlanTag8021q() {
        return this.vlanTag8021q;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInterconnectAttachmentResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean adminEnabled;
        private String bandwidth;
        private List<String> candidateIpv6Subnets;
        private List<String> candidateSubnets;
        private String cloudRouterIpAddress;
        private String cloudRouterIpv6Address;
        private String cloudRouterIpv6InterfaceId;
        private String creationTimestamp;
        private String customerRouterIpAddress;
        private String customerRouterIpv6Address;
        private String customerRouterIpv6InterfaceId;
        private Integer dataplaneVersion;
        private String description;
        private String edgeAvailabilityDomain;
        private String encryption;
        private String interconnect;
        private List<String> ipsecInternalAddresses;
        private String kind;
        private String labelFingerprint;
        private Map<String,String> labels;
        private Integer mtu;
        private String name;
        private String operationalStatus;
        private String pairingKey;
        private String partnerAsn;
        private InterconnectAttachmentPartnerMetadataResponse partnerMetadata;
        private InterconnectAttachmentPrivateInfoResponse privateInterconnectInfo;
        private String region;
        private String router;
        private Boolean satisfiesPzs;
        private String selfLink;
        private String stackType;
        private String state;
        private String type;
        private Integer vlanTag8021q;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInterconnectAttachmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminEnabled = defaults.adminEnabled;
    	      this.bandwidth = defaults.bandwidth;
    	      this.candidateIpv6Subnets = defaults.candidateIpv6Subnets;
    	      this.candidateSubnets = defaults.candidateSubnets;
    	      this.cloudRouterIpAddress = defaults.cloudRouterIpAddress;
    	      this.cloudRouterIpv6Address = defaults.cloudRouterIpv6Address;
    	      this.cloudRouterIpv6InterfaceId = defaults.cloudRouterIpv6InterfaceId;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.customerRouterIpAddress = defaults.customerRouterIpAddress;
    	      this.customerRouterIpv6Address = defaults.customerRouterIpv6Address;
    	      this.customerRouterIpv6InterfaceId = defaults.customerRouterIpv6InterfaceId;
    	      this.dataplaneVersion = defaults.dataplaneVersion;
    	      this.description = defaults.description;
    	      this.edgeAvailabilityDomain = defaults.edgeAvailabilityDomain;
    	      this.encryption = defaults.encryption;
    	      this.interconnect = defaults.interconnect;
    	      this.ipsecInternalAddresses = defaults.ipsecInternalAddresses;
    	      this.kind = defaults.kind;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.labels = defaults.labels;
    	      this.mtu = defaults.mtu;
    	      this.name = defaults.name;
    	      this.operationalStatus = defaults.operationalStatus;
    	      this.pairingKey = defaults.pairingKey;
    	      this.partnerAsn = defaults.partnerAsn;
    	      this.partnerMetadata = defaults.partnerMetadata;
    	      this.privateInterconnectInfo = defaults.privateInterconnectInfo;
    	      this.region = defaults.region;
    	      this.router = defaults.router;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.selfLink = defaults.selfLink;
    	      this.stackType = defaults.stackType;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
    	      this.vlanTag8021q = defaults.vlanTag8021q;
        }

        public Builder setAdminEnabled(Boolean adminEnabled) {
            this.adminEnabled = Objects.requireNonNull(adminEnabled);
            return this;
        }

        public Builder setBandwidth(String bandwidth) {
            this.bandwidth = Objects.requireNonNull(bandwidth);
            return this;
        }

        public Builder setCandidateIpv6Subnets(List<String> candidateIpv6Subnets) {
            this.candidateIpv6Subnets = Objects.requireNonNull(candidateIpv6Subnets);
            return this;
        }

        public Builder setCandidateSubnets(List<String> candidateSubnets) {
            this.candidateSubnets = Objects.requireNonNull(candidateSubnets);
            return this;
        }

        public Builder setCloudRouterIpAddress(String cloudRouterIpAddress) {
            this.cloudRouterIpAddress = Objects.requireNonNull(cloudRouterIpAddress);
            return this;
        }

        public Builder setCloudRouterIpv6Address(String cloudRouterIpv6Address) {
            this.cloudRouterIpv6Address = Objects.requireNonNull(cloudRouterIpv6Address);
            return this;
        }

        public Builder setCloudRouterIpv6InterfaceId(String cloudRouterIpv6InterfaceId) {
            this.cloudRouterIpv6InterfaceId = Objects.requireNonNull(cloudRouterIpv6InterfaceId);
            return this;
        }

        public Builder setCreationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }

        public Builder setCustomerRouterIpAddress(String customerRouterIpAddress) {
            this.customerRouterIpAddress = Objects.requireNonNull(customerRouterIpAddress);
            return this;
        }

        public Builder setCustomerRouterIpv6Address(String customerRouterIpv6Address) {
            this.customerRouterIpv6Address = Objects.requireNonNull(customerRouterIpv6Address);
            return this;
        }

        public Builder setCustomerRouterIpv6InterfaceId(String customerRouterIpv6InterfaceId) {
            this.customerRouterIpv6InterfaceId = Objects.requireNonNull(customerRouterIpv6InterfaceId);
            return this;
        }

        public Builder setDataplaneVersion(Integer dataplaneVersion) {
            this.dataplaneVersion = Objects.requireNonNull(dataplaneVersion);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setEdgeAvailabilityDomain(String edgeAvailabilityDomain) {
            this.edgeAvailabilityDomain = Objects.requireNonNull(edgeAvailabilityDomain);
            return this;
        }

        public Builder setEncryption(String encryption) {
            this.encryption = Objects.requireNonNull(encryption);
            return this;
        }

        public Builder setInterconnect(String interconnect) {
            this.interconnect = Objects.requireNonNull(interconnect);
            return this;
        }

        public Builder setIpsecInternalAddresses(List<String> ipsecInternalAddresses) {
            this.ipsecInternalAddresses = Objects.requireNonNull(ipsecInternalAddresses);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setLabelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setMtu(Integer mtu) {
            this.mtu = Objects.requireNonNull(mtu);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOperationalStatus(String operationalStatus) {
            this.operationalStatus = Objects.requireNonNull(operationalStatus);
            return this;
        }

        public Builder setPairingKey(String pairingKey) {
            this.pairingKey = Objects.requireNonNull(pairingKey);
            return this;
        }

        public Builder setPartnerAsn(String partnerAsn) {
            this.partnerAsn = Objects.requireNonNull(partnerAsn);
            return this;
        }

        public Builder setPartnerMetadata(InterconnectAttachmentPartnerMetadataResponse partnerMetadata) {
            this.partnerMetadata = Objects.requireNonNull(partnerMetadata);
            return this;
        }

        public Builder setPrivateInterconnectInfo(InterconnectAttachmentPrivateInfoResponse privateInterconnectInfo) {
            this.privateInterconnectInfo = Objects.requireNonNull(privateInterconnectInfo);
            return this;
        }

        public Builder setRegion(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }

        public Builder setRouter(String router) {
            this.router = Objects.requireNonNull(router);
            return this;
        }

        public Builder setSatisfiesPzs(Boolean satisfiesPzs) {
            this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setStackType(String stackType) {
            this.stackType = Objects.requireNonNull(stackType);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public Builder setVlanTag8021q(Integer vlanTag8021q) {
            this.vlanTag8021q = Objects.requireNonNull(vlanTag8021q);
            return this;
        }

        public GetInterconnectAttachmentResult build() {
            return new GetInterconnectAttachmentResult(adminEnabled, bandwidth, candidateIpv6Subnets, candidateSubnets, cloudRouterIpAddress, cloudRouterIpv6Address, cloudRouterIpv6InterfaceId, creationTimestamp, customerRouterIpAddress, customerRouterIpv6Address, customerRouterIpv6InterfaceId, dataplaneVersion, description, edgeAvailabilityDomain, encryption, interconnect, ipsecInternalAddresses, kind, labelFingerprint, labels, mtu, name, operationalStatus, pairingKey, partnerAsn, partnerMetadata, privateInterconnectInfo, region, router, satisfiesPzs, selfLink, stackType, state, type, vlanTag8021q);
        }
    }
}
