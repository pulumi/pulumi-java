// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class BqmlIterationResultArgs extends io.pulumi.resources.ResourceArgs {

    public static final BqmlIterationResultArgs Empty = new BqmlIterationResultArgs();

    /**
     * [Output-only, Beta] Time taken to run the training iteration in milliseconds.
     * 
     */
    @Import(name="durationMs")
      private final @Nullable Output<String> durationMs;

    public Output<String> getDurationMs() {
        return this.durationMs == null ? Codegen.empty() : this.durationMs;
    }

    /**
     * [Output-only, Beta] Eval loss computed on the eval data at the end of the iteration. The eval loss is used for early stopping to avoid overfitting. No eval loss if eval_split_method option is specified as no_split or auto_split with input data size less than 500 rows.
     * 
     */
    @Import(name="evalLoss")
      private final @Nullable Output<Double> evalLoss;

    public Output<Double> getEvalLoss() {
        return this.evalLoss == null ? Codegen.empty() : this.evalLoss;
    }

    /**
     * [Output-only, Beta] Index of the ML training iteration, starting from zero for each training run.
     * 
     */
    @Import(name="index")
      private final @Nullable Output<Integer> index;

    public Output<Integer> getIndex() {
        return this.index == null ? Codegen.empty() : this.index;
    }

    /**
     * [Output-only, Beta] Learning rate used for this iteration, it varies for different training iterations if learn_rate_strategy option is not constant.
     * 
     */
    @Import(name="learnRate")
      private final @Nullable Output<Double> learnRate;

    public Output<Double> getLearnRate() {
        return this.learnRate == null ? Codegen.empty() : this.learnRate;
    }

    /**
     * [Output-only, Beta] Training loss computed on the training data at the end of the iteration. The training loss function is defined by model type.
     * 
     */
    @Import(name="trainingLoss")
      private final @Nullable Output<Double> trainingLoss;

    public Output<Double> getTrainingLoss() {
        return this.trainingLoss == null ? Codegen.empty() : this.trainingLoss;
    }

    public BqmlIterationResultArgs(
        @Nullable Output<String> durationMs,
        @Nullable Output<Double> evalLoss,
        @Nullable Output<Integer> index,
        @Nullable Output<Double> learnRate,
        @Nullable Output<Double> trainingLoss) {
        this.durationMs = durationMs;
        this.evalLoss = evalLoss;
        this.index = index;
        this.learnRate = learnRate;
        this.trainingLoss = trainingLoss;
    }

    private BqmlIterationResultArgs() {
        this.durationMs = Codegen.empty();
        this.evalLoss = Codegen.empty();
        this.index = Codegen.empty();
        this.learnRate = Codegen.empty();
        this.trainingLoss = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BqmlIterationResultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> durationMs;
        private @Nullable Output<Double> evalLoss;
        private @Nullable Output<Integer> index;
        private @Nullable Output<Double> learnRate;
        private @Nullable Output<Double> trainingLoss;

        public Builder() {
    	      // Empty
        }

        public Builder(BqmlIterationResultArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.durationMs = defaults.durationMs;
    	      this.evalLoss = defaults.evalLoss;
    	      this.index = defaults.index;
    	      this.learnRate = defaults.learnRate;
    	      this.trainingLoss = defaults.trainingLoss;
        }

        public Builder durationMs(@Nullable Output<String> durationMs) {
            this.durationMs = durationMs;
            return this;
        }
        public Builder durationMs(@Nullable String durationMs) {
            this.durationMs = Codegen.ofNullable(durationMs);
            return this;
        }
        public Builder evalLoss(@Nullable Output<Double> evalLoss) {
            this.evalLoss = evalLoss;
            return this;
        }
        public Builder evalLoss(@Nullable Double evalLoss) {
            this.evalLoss = Codegen.ofNullable(evalLoss);
            return this;
        }
        public Builder index(@Nullable Output<Integer> index) {
            this.index = index;
            return this;
        }
        public Builder index(@Nullable Integer index) {
            this.index = Codegen.ofNullable(index);
            return this;
        }
        public Builder learnRate(@Nullable Output<Double> learnRate) {
            this.learnRate = learnRate;
            return this;
        }
        public Builder learnRate(@Nullable Double learnRate) {
            this.learnRate = Codegen.ofNullable(learnRate);
            return this;
        }
        public Builder trainingLoss(@Nullable Output<Double> trainingLoss) {
            this.trainingLoss = trainingLoss;
            return this;
        }
        public Builder trainingLoss(@Nullable Double trainingLoss) {
            this.trainingLoss = Codegen.ofNullable(trainingLoss);
            return this;
        }        public BqmlIterationResultArgs build() {
            return new BqmlIterationResultArgs(durationMs, evalLoss, index, learnRate, trainingLoss);
        }
    }
}
