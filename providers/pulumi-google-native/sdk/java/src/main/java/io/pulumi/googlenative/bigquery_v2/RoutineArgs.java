// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.bigquery_v2.enums.RoutineDeterminismLevel;
import io.pulumi.googlenative.bigquery_v2.enums.RoutineLanguage;
import io.pulumi.googlenative.bigquery_v2.enums.RoutineRoutineType;
import io.pulumi.googlenative.bigquery_v2.inputs.ArgumentArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.RoutineReferenceArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.StandardSqlDataTypeArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.StandardSqlTableTypeArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RoutineArgs extends io.pulumi.resources.ResourceArgs {

    public static final RoutineArgs Empty = new RoutineArgs();

    @InputImport(name="arguments")
    private final @Nullable Input<List<ArgumentArgs>> arguments;

    public Input<List<ArgumentArgs>> getArguments() {
        return this.arguments == null ? Input.empty() : this.arguments;
    }

    @InputImport(name="datasetId", required=true)
    private final Input<String> datasetId;

    public Input<String> getDatasetId() {
        return this.datasetId;
    }

    @InputImport(name="definitionBody", required=true)
    private final Input<String> definitionBody;

    public Input<String> getDefinitionBody() {
        return this.definitionBody;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="determinismLevel")
    private final @Nullable Input<RoutineDeterminismLevel> determinismLevel;

    public Input<RoutineDeterminismLevel> getDeterminismLevel() {
        return this.determinismLevel == null ? Input.empty() : this.determinismLevel;
    }

    @InputImport(name="importedLibraries")
    private final @Nullable Input<List<String>> importedLibraries;

    public Input<List<String>> getImportedLibraries() {
        return this.importedLibraries == null ? Input.empty() : this.importedLibraries;
    }

    @InputImport(name="language")
    private final @Nullable Input<RoutineLanguage> language;

    public Input<RoutineLanguage> getLanguage() {
        return this.language == null ? Input.empty() : this.language;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="returnTableType")
    private final @Nullable Input<StandardSqlTableTypeArgs> returnTableType;

    public Input<StandardSqlTableTypeArgs> getReturnTableType() {
        return this.returnTableType == null ? Input.empty() : this.returnTableType;
    }

    @InputImport(name="returnType")
    private final @Nullable Input<StandardSqlDataTypeArgs> returnType;

    public Input<StandardSqlDataTypeArgs> getReturnType() {
        return this.returnType == null ? Input.empty() : this.returnType;
    }

    @InputImport(name="routineReference", required=true)
    private final Input<RoutineReferenceArgs> routineReference;

    public Input<RoutineReferenceArgs> getRoutineReference() {
        return this.routineReference;
    }

    @InputImport(name="routineType", required=true)
    private final Input<RoutineRoutineType> routineType;

    public Input<RoutineRoutineType> getRoutineType() {
        return this.routineType;
    }

    @InputImport(name="strictMode")
    private final @Nullable Input<Boolean> strictMode;

    public Input<Boolean> getStrictMode() {
        return this.strictMode == null ? Input.empty() : this.strictMode;
    }

    public RoutineArgs(
        @Nullable Input<List<ArgumentArgs>> arguments,
        Input<String> datasetId,
        Input<String> definitionBody,
        @Nullable Input<String> description,
        @Nullable Input<RoutineDeterminismLevel> determinismLevel,
        @Nullable Input<List<String>> importedLibraries,
        @Nullable Input<RoutineLanguage> language,
        @Nullable Input<String> project,
        @Nullable Input<StandardSqlTableTypeArgs> returnTableType,
        @Nullable Input<StandardSqlDataTypeArgs> returnType,
        Input<RoutineReferenceArgs> routineReference,
        Input<RoutineRoutineType> routineType,
        @Nullable Input<Boolean> strictMode) {
        this.arguments = arguments;
        this.datasetId = Objects.requireNonNull(datasetId, "expected parameter 'datasetId' to be non-null");
        this.definitionBody = Objects.requireNonNull(definitionBody, "expected parameter 'definitionBody' to be non-null");
        this.description = description;
        this.determinismLevel = determinismLevel;
        this.importedLibraries = importedLibraries;
        this.language = language;
        this.project = project;
        this.returnTableType = returnTableType;
        this.returnType = returnType;
        this.routineReference = Objects.requireNonNull(routineReference, "expected parameter 'routineReference' to be non-null");
        this.routineType = Objects.requireNonNull(routineType, "expected parameter 'routineType' to be non-null");
        this.strictMode = strictMode;
    }

    private RoutineArgs() {
        this.arguments = Input.empty();
        this.datasetId = Input.empty();
        this.definitionBody = Input.empty();
        this.description = Input.empty();
        this.determinismLevel = Input.empty();
        this.importedLibraries = Input.empty();
        this.language = Input.empty();
        this.project = Input.empty();
        this.returnTableType = Input.empty();
        this.returnType = Input.empty();
        this.routineReference = Input.empty();
        this.routineType = Input.empty();
        this.strictMode = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RoutineArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<ArgumentArgs>> arguments;
        private Input<String> datasetId;
        private Input<String> definitionBody;
        private @Nullable Input<String> description;
        private @Nullable Input<RoutineDeterminismLevel> determinismLevel;
        private @Nullable Input<List<String>> importedLibraries;
        private @Nullable Input<RoutineLanguage> language;
        private @Nullable Input<String> project;
        private @Nullable Input<StandardSqlTableTypeArgs> returnTableType;
        private @Nullable Input<StandardSqlDataTypeArgs> returnType;
        private Input<RoutineReferenceArgs> routineReference;
        private Input<RoutineRoutineType> routineType;
        private @Nullable Input<Boolean> strictMode;

        public Builder() {
    	      // Empty
        }

        public Builder(RoutineArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.arguments = defaults.arguments;
    	      this.datasetId = defaults.datasetId;
    	      this.definitionBody = defaults.definitionBody;
    	      this.description = defaults.description;
    	      this.determinismLevel = defaults.determinismLevel;
    	      this.importedLibraries = defaults.importedLibraries;
    	      this.language = defaults.language;
    	      this.project = defaults.project;
    	      this.returnTableType = defaults.returnTableType;
    	      this.returnType = defaults.returnType;
    	      this.routineReference = defaults.routineReference;
    	      this.routineType = defaults.routineType;
    	      this.strictMode = defaults.strictMode;
        }

        public Builder setArguments(@Nullable Input<List<ArgumentArgs>> arguments) {
            this.arguments = arguments;
            return this;
        }

        public Builder setArguments(@Nullable List<ArgumentArgs> arguments) {
            this.arguments = Input.ofNullable(arguments);
            return this;
        }

        public Builder setDatasetId(Input<String> datasetId) {
            this.datasetId = Objects.requireNonNull(datasetId);
            return this;
        }

        public Builder setDatasetId(String datasetId) {
            this.datasetId = Input.of(Objects.requireNonNull(datasetId));
            return this;
        }

        public Builder setDefinitionBody(Input<String> definitionBody) {
            this.definitionBody = Objects.requireNonNull(definitionBody);
            return this;
        }

        public Builder setDefinitionBody(String definitionBody) {
            this.definitionBody = Input.of(Objects.requireNonNull(definitionBody));
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDeterminismLevel(@Nullable Input<RoutineDeterminismLevel> determinismLevel) {
            this.determinismLevel = determinismLevel;
            return this;
        }

        public Builder setDeterminismLevel(@Nullable RoutineDeterminismLevel determinismLevel) {
            this.determinismLevel = Input.ofNullable(determinismLevel);
            return this;
        }

        public Builder setImportedLibraries(@Nullable Input<List<String>> importedLibraries) {
            this.importedLibraries = importedLibraries;
            return this;
        }

        public Builder setImportedLibraries(@Nullable List<String> importedLibraries) {
            this.importedLibraries = Input.ofNullable(importedLibraries);
            return this;
        }

        public Builder setLanguage(@Nullable Input<RoutineLanguage> language) {
            this.language = language;
            return this;
        }

        public Builder setLanguage(@Nullable RoutineLanguage language) {
            this.language = Input.ofNullable(language);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setReturnTableType(@Nullable Input<StandardSqlTableTypeArgs> returnTableType) {
            this.returnTableType = returnTableType;
            return this;
        }

        public Builder setReturnTableType(@Nullable StandardSqlTableTypeArgs returnTableType) {
            this.returnTableType = Input.ofNullable(returnTableType);
            return this;
        }

        public Builder setReturnType(@Nullable Input<StandardSqlDataTypeArgs> returnType) {
            this.returnType = returnType;
            return this;
        }

        public Builder setReturnType(@Nullable StandardSqlDataTypeArgs returnType) {
            this.returnType = Input.ofNullable(returnType);
            return this;
        }

        public Builder setRoutineReference(Input<RoutineReferenceArgs> routineReference) {
            this.routineReference = Objects.requireNonNull(routineReference);
            return this;
        }

        public Builder setRoutineReference(RoutineReferenceArgs routineReference) {
            this.routineReference = Input.of(Objects.requireNonNull(routineReference));
            return this;
        }

        public Builder setRoutineType(Input<RoutineRoutineType> routineType) {
            this.routineType = Objects.requireNonNull(routineType);
            return this;
        }

        public Builder setRoutineType(RoutineRoutineType routineType) {
            this.routineType = Input.of(Objects.requireNonNull(routineType));
            return this;
        }

        public Builder setStrictMode(@Nullable Input<Boolean> strictMode) {
            this.strictMode = strictMode;
            return this;
        }

        public Builder setStrictMode(@Nullable Boolean strictMode) {
            this.strictMode = Input.ofNullable(strictMode);
            return this;
        }

        public RoutineArgs build() {
            return new RoutineArgs(arguments, datasetId, definitionBody, description, determinismLevel, importedLibraries, language, project, returnTableType, returnType, routineReference, routineType, strictMode);
        }
    }
}
