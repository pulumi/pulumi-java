// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class BackendServiceConnectionTrackingPolicyResponse {
    private final String connectionPersistenceOnUnhealthyBackends;
    private final Integer idleTimeoutSec;
    private final String trackingMode;

    @OutputCustomType.Constructor({"connectionPersistenceOnUnhealthyBackends","idleTimeoutSec","trackingMode"})
    private BackendServiceConnectionTrackingPolicyResponse(
        String connectionPersistenceOnUnhealthyBackends,
        Integer idleTimeoutSec,
        String trackingMode) {
        this.connectionPersistenceOnUnhealthyBackends = Objects.requireNonNull(connectionPersistenceOnUnhealthyBackends);
        this.idleTimeoutSec = Objects.requireNonNull(idleTimeoutSec);
        this.trackingMode = Objects.requireNonNull(trackingMode);
    }

    public String getConnectionPersistenceOnUnhealthyBackends() {
        return this.connectionPersistenceOnUnhealthyBackends;
    }
    public Integer getIdleTimeoutSec() {
        return this.idleTimeoutSec;
    }
    public String getTrackingMode() {
        return this.trackingMode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BackendServiceConnectionTrackingPolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String connectionPersistenceOnUnhealthyBackends;
        private Integer idleTimeoutSec;
        private String trackingMode;

        public Builder() {
    	      // Empty
        }

        public Builder(BackendServiceConnectionTrackingPolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionPersistenceOnUnhealthyBackends = defaults.connectionPersistenceOnUnhealthyBackends;
    	      this.idleTimeoutSec = defaults.idleTimeoutSec;
    	      this.trackingMode = defaults.trackingMode;
        }

        public Builder setConnectionPersistenceOnUnhealthyBackends(String connectionPersistenceOnUnhealthyBackends) {
            this.connectionPersistenceOnUnhealthyBackends = Objects.requireNonNull(connectionPersistenceOnUnhealthyBackends);
            return this;
        }

        public Builder setIdleTimeoutSec(Integer idleTimeoutSec) {
            this.idleTimeoutSec = Objects.requireNonNull(idleTimeoutSec);
            return this;
        }

        public Builder setTrackingMode(String trackingMode) {
            this.trackingMode = Objects.requireNonNull(trackingMode);
            return this;
        }

        public BackendServiceConnectionTrackingPolicyResponse build() {
            return new BackendServiceConnectionTrackingPolicyResponse(connectionPersistenceOnUnhealthyBackends, idleTimeoutSec, trackingMode);
        }
    }
}
