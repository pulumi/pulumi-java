// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.privateca_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.privateca_v1.enums.CaPoolTier;
import io.pulumi.googlenative.privateca_v1.inputs.IssuancePolicyArgs;
import io.pulumi.googlenative.privateca_v1.inputs.PublishingOptionsArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CaPoolArgs extends io.pulumi.resources.ResourceArgs {

    public static final CaPoolArgs Empty = new CaPoolArgs();

    @Import(name="caPoolId", required=true)
      private final Output<String> caPoolId;

    public Output<String> getCaPoolId() {
        return this.caPoolId;
    }

    /**
     * Optional. The IssuancePolicy to control how Certificates will be issued from this CaPool.
     * 
     */
    @Import(name="issuancePolicy")
      private final @Nullable Output<IssuancePolicyArgs> issuancePolicy;

    public Output<IssuancePolicyArgs> getIssuancePolicy() {
        return this.issuancePolicy == null ? Output.empty() : this.issuancePolicy;
    }

    /**
     * Optional. Labels with user-defined metadata.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels == null ? Output.empty() : this.labels;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * Optional. The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
     * 
     */
    @Import(name="publishingOptions")
      private final @Nullable Output<PublishingOptionsArgs> publishingOptions;

    public Output<PublishingOptionsArgs> getPublishingOptions() {
        return this.publishingOptions == null ? Output.empty() : this.publishingOptions;
    }

    @Import(name="requestId")
      private final @Nullable Output<String> requestId;

    public Output<String> getRequestId() {
        return this.requestId == null ? Output.empty() : this.requestId;
    }

    /**
     * Immutable. The Tier of this CaPool.
     * 
     */
    @Import(name="tier", required=true)
      private final Output<CaPoolTier> tier;

    public Output<CaPoolTier> getTier() {
        return this.tier;
    }

    public CaPoolArgs(
        Output<String> caPoolId,
        @Nullable Output<IssuancePolicyArgs> issuancePolicy,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<String> location,
        @Nullable Output<String> project,
        @Nullable Output<PublishingOptionsArgs> publishingOptions,
        @Nullable Output<String> requestId,
        Output<CaPoolTier> tier) {
        this.caPoolId = Objects.requireNonNull(caPoolId, "expected parameter 'caPoolId' to be non-null");
        this.issuancePolicy = issuancePolicy;
        this.labels = labels;
        this.location = location;
        this.project = project;
        this.publishingOptions = publishingOptions;
        this.requestId = requestId;
        this.tier = Objects.requireNonNull(tier, "expected parameter 'tier' to be non-null");
    }

    private CaPoolArgs() {
        this.caPoolId = Output.empty();
        this.issuancePolicy = Output.empty();
        this.labels = Output.empty();
        this.location = Output.empty();
        this.project = Output.empty();
        this.publishingOptions = Output.empty();
        this.requestId = Output.empty();
        this.tier = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CaPoolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> caPoolId;
        private @Nullable Output<IssuancePolicyArgs> issuancePolicy;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<String> location;
        private @Nullable Output<String> project;
        private @Nullable Output<PublishingOptionsArgs> publishingOptions;
        private @Nullable Output<String> requestId;
        private Output<CaPoolTier> tier;

        public Builder() {
    	      // Empty
        }

        public Builder(CaPoolArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.caPoolId = defaults.caPoolId;
    	      this.issuancePolicy = defaults.issuancePolicy;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.project = defaults.project;
    	      this.publishingOptions = defaults.publishingOptions;
    	      this.requestId = defaults.requestId;
    	      this.tier = defaults.tier;
        }

        public Builder caPoolId(Output<String> caPoolId) {
            this.caPoolId = Objects.requireNonNull(caPoolId);
            return this;
        }
        public Builder caPoolId(String caPoolId) {
            this.caPoolId = Output.of(Objects.requireNonNull(caPoolId));
            return this;
        }
        public Builder issuancePolicy(@Nullable Output<IssuancePolicyArgs> issuancePolicy) {
            this.issuancePolicy = issuancePolicy;
            return this;
        }
        public Builder issuancePolicy(@Nullable IssuancePolicyArgs issuancePolicy) {
            this.issuancePolicy = Output.ofNullable(issuancePolicy);
            return this;
        }
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Output.ofNullable(labels);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }
        public Builder publishingOptions(@Nullable Output<PublishingOptionsArgs> publishingOptions) {
            this.publishingOptions = publishingOptions;
            return this;
        }
        public Builder publishingOptions(@Nullable PublishingOptionsArgs publishingOptions) {
            this.publishingOptions = Output.ofNullable(publishingOptions);
            return this;
        }
        public Builder requestId(@Nullable Output<String> requestId) {
            this.requestId = requestId;
            return this;
        }
        public Builder requestId(@Nullable String requestId) {
            this.requestId = Output.ofNullable(requestId);
            return this;
        }
        public Builder tier(Output<CaPoolTier> tier) {
            this.tier = Objects.requireNonNull(tier);
            return this;
        }
        public Builder tier(CaPoolTier tier) {
            this.tier = Output.of(Objects.requireNonNull(tier));
            return this;
        }        public CaPoolArgs build() {
            return new CaPoolArgs(caPoolId, issuancePolicy, labels, location, project, publishingOptions, requestId, tier);
        }
    }
}
