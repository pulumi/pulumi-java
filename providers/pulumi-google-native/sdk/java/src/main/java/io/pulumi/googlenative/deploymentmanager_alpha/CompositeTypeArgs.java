// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.deploymentmanager_alpha;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.deploymentmanager_alpha.enums.CompositeTypeStatus;
import io.pulumi.googlenative.deploymentmanager_alpha.inputs.CompositeTypeLabelEntryArgs;
import io.pulumi.googlenative.deploymentmanager_alpha.inputs.TemplateContentsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class CompositeTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final CompositeTypeArgs Empty = new CompositeTypeArgs();

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="id")
    private final @Nullable Input<String> id;

    public Input<String> getId() {
        return this.id == null ? Input.empty() : this.id;
    }

    @InputImport(name="labels")
    private final @Nullable Input<List<CompositeTypeLabelEntryArgs>> labels;

    public Input<List<CompositeTypeLabelEntryArgs>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="status")
    private final @Nullable Input<CompositeTypeStatus> status;

    public Input<CompositeTypeStatus> getStatus() {
        return this.status == null ? Input.empty() : this.status;
    }

    @InputImport(name="templateContents")
    private final @Nullable Input<TemplateContentsArgs> templateContents;

    public Input<TemplateContentsArgs> getTemplateContents() {
        return this.templateContents == null ? Input.empty() : this.templateContents;
    }

    public CompositeTypeArgs(
        @Nullable Input<String> description,
        @Nullable Input<String> id,
        @Nullable Input<List<CompositeTypeLabelEntryArgs>> labels,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<CompositeTypeStatus> status,
        @Nullable Input<TemplateContentsArgs> templateContents) {
        this.description = description;
        this.id = id;
        this.labels = labels;
        this.name = name;
        this.project = project;
        this.status = status;
        this.templateContents = templateContents;
    }

    private CompositeTypeArgs() {
        this.description = Input.empty();
        this.id = Input.empty();
        this.labels = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.status = Input.empty();
        this.templateContents = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CompositeTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<String> id;
        private @Nullable Input<List<CompositeTypeLabelEntryArgs>> labels;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<CompositeTypeStatus> status;
        private @Nullable Input<TemplateContentsArgs> templateContents;

        public Builder() {
    	      // Empty
        }

        public Builder(CompositeTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.status = defaults.status;
    	      this.templateContents = defaults.templateContents;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setId(@Nullable Input<String> id) {
            this.id = id;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = Input.ofNullable(id);
            return this;
        }

        public Builder setLabels(@Nullable Input<List<CompositeTypeLabelEntryArgs>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable List<CompositeTypeLabelEntryArgs> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setStatus(@Nullable Input<CompositeTypeStatus> status) {
            this.status = status;
            return this;
        }

        public Builder setStatus(@Nullable CompositeTypeStatus status) {
            this.status = Input.ofNullable(status);
            return this;
        }

        public Builder setTemplateContents(@Nullable Input<TemplateContentsArgs> templateContents) {
            this.templateContents = templateContents;
            return this;
        }

        public Builder setTemplateContents(@Nullable TemplateContentsArgs templateContents) {
            this.templateContents = Input.ofNullable(templateContents);
            return this;
        }

        public CompositeTypeArgs build() {
            return new CompositeTypeArgs(description, id, labels, name, project, status, templateContents);
        }
    }
}
