// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.bigquery_v2.inputs.DatasetAccessEntryArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.RoutineReferenceArgs;
import io.pulumi.googlenative.bigquery_v2.inputs.TableReferenceArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DatasetAccessItemArgs extends io.pulumi.resources.ResourceArgs {

    public static final DatasetAccessItemArgs Empty = new DatasetAccessItemArgs();

    @InputImport(name="dataset")
    private final @Nullable Input<DatasetAccessEntryArgs> dataset;

    public Input<DatasetAccessEntryArgs> getDataset() {
        return this.dataset == null ? Input.empty() : this.dataset;
    }

    @InputImport(name="domain")
    private final @Nullable Input<String> domain;

    public Input<String> getDomain() {
        return this.domain == null ? Input.empty() : this.domain;
    }

    @InputImport(name="groupByEmail")
    private final @Nullable Input<String> groupByEmail;

    public Input<String> getGroupByEmail() {
        return this.groupByEmail == null ? Input.empty() : this.groupByEmail;
    }

    @InputImport(name="iamMember")
    private final @Nullable Input<String> iamMember;

    public Input<String> getIamMember() {
        return this.iamMember == null ? Input.empty() : this.iamMember;
    }

    @InputImport(name="role")
    private final @Nullable Input<String> role;

    public Input<String> getRole() {
        return this.role == null ? Input.empty() : this.role;
    }

    @InputImport(name="routine")
    private final @Nullable Input<RoutineReferenceArgs> routine;

    public Input<RoutineReferenceArgs> getRoutine() {
        return this.routine == null ? Input.empty() : this.routine;
    }

    @InputImport(name="specialGroup")
    private final @Nullable Input<String> specialGroup;

    public Input<String> getSpecialGroup() {
        return this.specialGroup == null ? Input.empty() : this.specialGroup;
    }

    @InputImport(name="userByEmail")
    private final @Nullable Input<String> userByEmail;

    public Input<String> getUserByEmail() {
        return this.userByEmail == null ? Input.empty() : this.userByEmail;
    }

    @InputImport(name="view")
    private final @Nullable Input<TableReferenceArgs> view;

    public Input<TableReferenceArgs> getView() {
        return this.view == null ? Input.empty() : this.view;
    }

    public DatasetAccessItemArgs(
        @Nullable Input<DatasetAccessEntryArgs> dataset,
        @Nullable Input<String> domain,
        @Nullable Input<String> groupByEmail,
        @Nullable Input<String> iamMember,
        @Nullable Input<String> role,
        @Nullable Input<RoutineReferenceArgs> routine,
        @Nullable Input<String> specialGroup,
        @Nullable Input<String> userByEmail,
        @Nullable Input<TableReferenceArgs> view) {
        this.dataset = dataset;
        this.domain = domain;
        this.groupByEmail = groupByEmail;
        this.iamMember = iamMember;
        this.role = role;
        this.routine = routine;
        this.specialGroup = specialGroup;
        this.userByEmail = userByEmail;
        this.view = view;
    }

    private DatasetAccessItemArgs() {
        this.dataset = Input.empty();
        this.domain = Input.empty();
        this.groupByEmail = Input.empty();
        this.iamMember = Input.empty();
        this.role = Input.empty();
        this.routine = Input.empty();
        this.specialGroup = Input.empty();
        this.userByEmail = Input.empty();
        this.view = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatasetAccessItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<DatasetAccessEntryArgs> dataset;
        private @Nullable Input<String> domain;
        private @Nullable Input<String> groupByEmail;
        private @Nullable Input<String> iamMember;
        private @Nullable Input<String> role;
        private @Nullable Input<RoutineReferenceArgs> routine;
        private @Nullable Input<String> specialGroup;
        private @Nullable Input<String> userByEmail;
        private @Nullable Input<TableReferenceArgs> view;

        public Builder() {
    	      // Empty
        }

        public Builder(DatasetAccessItemArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataset = defaults.dataset;
    	      this.domain = defaults.domain;
    	      this.groupByEmail = defaults.groupByEmail;
    	      this.iamMember = defaults.iamMember;
    	      this.role = defaults.role;
    	      this.routine = defaults.routine;
    	      this.specialGroup = defaults.specialGroup;
    	      this.userByEmail = defaults.userByEmail;
    	      this.view = defaults.view;
        }

        public Builder setDataset(@Nullable Input<DatasetAccessEntryArgs> dataset) {
            this.dataset = dataset;
            return this;
        }

        public Builder setDataset(@Nullable DatasetAccessEntryArgs dataset) {
            this.dataset = Input.ofNullable(dataset);
            return this;
        }

        public Builder setDomain(@Nullable Input<String> domain) {
            this.domain = domain;
            return this;
        }

        public Builder setDomain(@Nullable String domain) {
            this.domain = Input.ofNullable(domain);
            return this;
        }

        public Builder setGroupByEmail(@Nullable Input<String> groupByEmail) {
            this.groupByEmail = groupByEmail;
            return this;
        }

        public Builder setGroupByEmail(@Nullable String groupByEmail) {
            this.groupByEmail = Input.ofNullable(groupByEmail);
            return this;
        }

        public Builder setIamMember(@Nullable Input<String> iamMember) {
            this.iamMember = iamMember;
            return this;
        }

        public Builder setIamMember(@Nullable String iamMember) {
            this.iamMember = Input.ofNullable(iamMember);
            return this;
        }

        public Builder setRole(@Nullable Input<String> role) {
            this.role = role;
            return this;
        }

        public Builder setRole(@Nullable String role) {
            this.role = Input.ofNullable(role);
            return this;
        }

        public Builder setRoutine(@Nullable Input<RoutineReferenceArgs> routine) {
            this.routine = routine;
            return this;
        }

        public Builder setRoutine(@Nullable RoutineReferenceArgs routine) {
            this.routine = Input.ofNullable(routine);
            return this;
        }

        public Builder setSpecialGroup(@Nullable Input<String> specialGroup) {
            this.specialGroup = specialGroup;
            return this;
        }

        public Builder setSpecialGroup(@Nullable String specialGroup) {
            this.specialGroup = Input.ofNullable(specialGroup);
            return this;
        }

        public Builder setUserByEmail(@Nullable Input<String> userByEmail) {
            this.userByEmail = userByEmail;
            return this;
        }

        public Builder setUserByEmail(@Nullable String userByEmail) {
            this.userByEmail = Input.ofNullable(userByEmail);
            return this;
        }

        public Builder setView(@Nullable Input<TableReferenceArgs> view) {
            this.view = view;
            return this;
        }

        public Builder setView(@Nullable TableReferenceArgs view) {
            this.view = Input.ofNullable(view);
            return this;
        }

        public DatasetAccessItemArgs build() {
            return new DatasetAccessItemArgs(dataset, domain, groupByEmail, iamMember, role, routine, specialGroup, userByEmail, view);
        }
    }
}
