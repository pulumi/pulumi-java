// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.storagetransfer_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.util.Objects;


public final class DateResponse extends io.pulumi.resources.InvokeArgs {

    public static final DateResponse Empty = new DateResponse();

    @InputImport(name="day", required=true)
    private final Integer day;

    public Integer getDay() {
        return this.day;
    }

    @InputImport(name="month", required=true)
    private final Integer month;

    public Integer getMonth() {
        return this.month;
    }

    @InputImport(name="year", required=true)
    private final Integer year;

    public Integer getYear() {
        return this.year;
    }

    public DateResponse(
        Integer day,
        Integer month,
        Integer year) {
        this.day = Objects.requireNonNull(day, "expected parameter 'day' to be non-null");
        this.month = Objects.requireNonNull(month, "expected parameter 'month' to be non-null");
        this.year = Objects.requireNonNull(year, "expected parameter 'year' to be non-null");
    }

    private DateResponse() {
        this.day = null;
        this.month = null;
        this.year = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DateResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer day;
        private Integer month;
        private Integer year;

        public Builder() {
    	      // Empty
        }

        public Builder(DateResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.day = defaults.day;
    	      this.month = defaults.month;
    	      this.year = defaults.year;
        }

        public Builder setDay(Integer day) {
            this.day = Objects.requireNonNull(day);
            return this;
        }

        public Builder setMonth(Integer month) {
            this.month = Objects.requireNonNull(month);
            return this;
        }

        public Builder setYear(Integer year) {
            this.year = Objects.requireNonNull(year);
            return this;
        }

        public DateResponse build() {
            return new DateResponse(day, month, year);
        }
    }
}
