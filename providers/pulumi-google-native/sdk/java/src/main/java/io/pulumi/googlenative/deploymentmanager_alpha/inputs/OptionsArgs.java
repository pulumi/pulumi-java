// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.deploymentmanager_alpha.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.deploymentmanager_alpha.inputs.AsyncOptionsArgs;
import io.pulumi.googlenative.deploymentmanager_alpha.inputs.InputMappingArgs;
import io.pulumi.googlenative.deploymentmanager_alpha.inputs.ValidationOptionsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Options allows customized resource handling by Deployment Manager.
 * 
 */
public final class OptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final OptionsArgs Empty = new OptionsArgs();

    /**
     * Options regarding how to thread async requests.
     * 
     */
    @InputImport(name="asyncOptions")
    private final @Nullable Input<List<AsyncOptionsArgs>> asyncOptions;

    public Input<List<AsyncOptionsArgs>> getAsyncOptions() {
        return this.asyncOptions == null ? Input.empty() : this.asyncOptions;
    }

    /**
     * The mappings that apply for requests.
     * 
     */
    @InputImport(name="inputMappings")
    private final @Nullable Input<List<InputMappingArgs>> inputMappings;

    public Input<List<InputMappingArgs>> getInputMappings() {
        return this.inputMappings == null ? Input.empty() : this.inputMappings;
    }

    /**
     * The json path to the field in the resource JSON body into which the resource name should be mapped. Leaving this empty indicates that there should be no mapping performed.
     * 
     */
    @InputImport(name="nameProperty")
    private final @Nullable Input<String> nameProperty;

    public Input<String> getNameProperty() {
        return this.nameProperty == null ? Input.empty() : this.nameProperty;
    }

    /**
     * Options for how to validate and process properties on a resource.
     * 
     */
    @InputImport(name="validationOptions")
    private final @Nullable Input<ValidationOptionsArgs> validationOptions;

    public Input<ValidationOptionsArgs> getValidationOptions() {
        return this.validationOptions == null ? Input.empty() : this.validationOptions;
    }

    public OptionsArgs(
        @Nullable Input<List<AsyncOptionsArgs>> asyncOptions,
        @Nullable Input<List<InputMappingArgs>> inputMappings,
        @Nullable Input<String> nameProperty,
        @Nullable Input<ValidationOptionsArgs> validationOptions) {
        this.asyncOptions = asyncOptions;
        this.inputMappings = inputMappings;
        this.nameProperty = nameProperty;
        this.validationOptions = validationOptions;
    }

    private OptionsArgs() {
        this.asyncOptions = Input.empty();
        this.inputMappings = Input.empty();
        this.nameProperty = Input.empty();
        this.validationOptions = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<AsyncOptionsArgs>> asyncOptions;
        private @Nullable Input<List<InputMappingArgs>> inputMappings;
        private @Nullable Input<String> nameProperty;
        private @Nullable Input<ValidationOptionsArgs> validationOptions;

        public Builder() {
    	      // Empty
        }

        public Builder(OptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asyncOptions = defaults.asyncOptions;
    	      this.inputMappings = defaults.inputMappings;
    	      this.nameProperty = defaults.nameProperty;
    	      this.validationOptions = defaults.validationOptions;
        }

        public Builder setAsyncOptions(@Nullable Input<List<AsyncOptionsArgs>> asyncOptions) {
            this.asyncOptions = asyncOptions;
            return this;
        }

        public Builder setAsyncOptions(@Nullable List<AsyncOptionsArgs> asyncOptions) {
            this.asyncOptions = Input.ofNullable(asyncOptions);
            return this;
        }

        public Builder setInputMappings(@Nullable Input<List<InputMappingArgs>> inputMappings) {
            this.inputMappings = inputMappings;
            return this;
        }

        public Builder setInputMappings(@Nullable List<InputMappingArgs> inputMappings) {
            this.inputMappings = Input.ofNullable(inputMappings);
            return this;
        }

        public Builder setNameProperty(@Nullable Input<String> nameProperty) {
            this.nameProperty = nameProperty;
            return this;
        }

        public Builder setNameProperty(@Nullable String nameProperty) {
            this.nameProperty = Input.ofNullable(nameProperty);
            return this;
        }

        public Builder setValidationOptions(@Nullable Input<ValidationOptionsArgs> validationOptions) {
            this.validationOptions = validationOptions;
            return this;
        }

        public Builder setValidationOptions(@Nullable ValidationOptionsArgs validationOptions) {
            this.validationOptions = Input.ofNullable(validationOptions);
            return this;
        }

        public OptionsArgs build() {
            return new OptionsArgs(asyncOptions, inputMappings, nameProperty, validationOptions);
        }
    }
}
