// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.memcache_v1beta2;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.memcache_v1beta2.InstanceArgs;
import io.pulumi.googlenative.memcache_v1beta2.outputs.InstanceMessageResponse;
import io.pulumi.googlenative.memcache_v1beta2.outputs.MemcacheParametersResponse;
import io.pulumi.googlenative.memcache_v1beta2.outputs.NodeConfigResponse;
import io.pulumi.googlenative.memcache_v1beta2.outputs.NodeResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:memcache/v1beta2:Instance")
public class Instance extends io.pulumi.resources.CustomResource {
    @OutputExport(name="authorizedNetwork", type=String.class, parameters={})
    private Output<String> authorizedNetwork;

    public Output<String> getAuthorizedNetwork() {
        return this.authorizedNetwork;
    }
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime;
    }
    @OutputExport(name="discoveryEndpoint", type=String.class, parameters={})
    private Output<String> discoveryEndpoint;

    public Output<String> getDiscoveryEndpoint() {
        return this.discoveryEndpoint;
    }
    @OutputExport(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName;
    }
    @OutputExport(name="instanceMessages", type=List.class, parameters={InstanceMessageResponse.class})
    private Output<List<InstanceMessageResponse>> instanceMessages;

    public Output<List<InstanceMessageResponse>> getInstanceMessages() {
        return this.instanceMessages;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="memcacheFullVersion", type=String.class, parameters={})
    private Output<String> memcacheFullVersion;

    public Output<String> getMemcacheFullVersion() {
        return this.memcacheFullVersion;
    }
    @OutputExport(name="memcacheNodes", type=List.class, parameters={NodeResponse.class})
    private Output<List<NodeResponse>> memcacheNodes;

    public Output<List<NodeResponse>> getMemcacheNodes() {
        return this.memcacheNodes;
    }
    @OutputExport(name="memcacheVersion", type=String.class, parameters={})
    private Output<String> memcacheVersion;

    public Output<String> getMemcacheVersion() {
        return this.memcacheVersion;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="nodeConfig", type=NodeConfigResponse.class, parameters={})
    private Output<NodeConfigResponse> nodeConfig;

    public Output<NodeConfigResponse> getNodeConfig() {
        return this.nodeConfig;
    }
    @OutputExport(name="nodeCount", type=Integer.class, parameters={})
    private Output<Integer> nodeCount;

    public Output<Integer> getNodeCount() {
        return this.nodeCount;
    }
    @OutputExport(name="parameters", type=MemcacheParametersResponse.class, parameters={})
    private Output<MemcacheParametersResponse> parameters;

    public Output<MemcacheParametersResponse> getParameters() {
        return this.parameters;
    }
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> getState() {
        return this.state;
    }
    @OutputExport(name="updateAvailable", type=Boolean.class, parameters={})
    private Output<Boolean> updateAvailable;

    public Output<Boolean> getUpdateAvailable() {
        return this.updateAvailable;
    }
    @OutputExport(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    public Output<String> getUpdateTime() {
        return this.updateTime;
    }
    @OutputExport(name="zones", type=List.class, parameters={String.class})
    private Output<List<String>> zones;

    public Output<List<String>> getZones() {
        return this.zones;
    }

    public Instance(String name, InstanceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:memcache/v1beta2:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Instance(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:memcache/v1beta2:Instance", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Instance get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, options);
    }
}
