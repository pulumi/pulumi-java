// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.monitoring_v1.inputs.AggregationArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RatioPartArgs extends io.pulumi.resources.ResourceArgs {

    public static final RatioPartArgs Empty = new RatioPartArgs();

    @InputImport(name="aggregation")
    private final @Nullable Input<AggregationArgs> aggregation;

    public Input<AggregationArgs> getAggregation() {
        return this.aggregation == null ? Input.empty() : this.aggregation;
    }

    @InputImport(name="filter", required=true)
    private final Input<String> filter;

    public Input<String> getFilter() {
        return this.filter;
    }

    public RatioPartArgs(
        @Nullable Input<AggregationArgs> aggregation,
        Input<String> filter) {
        this.aggregation = aggregation;
        this.filter = Objects.requireNonNull(filter, "expected parameter 'filter' to be non-null");
    }

    private RatioPartArgs() {
        this.aggregation = Input.empty();
        this.filter = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RatioPartArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<AggregationArgs> aggregation;
        private Input<String> filter;

        public Builder() {
    	      // Empty
        }

        public Builder(RatioPartArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregation = defaults.aggregation;
    	      this.filter = defaults.filter;
        }

        public Builder setAggregation(@Nullable Input<AggregationArgs> aggregation) {
            this.aggregation = aggregation;
            return this;
        }

        public Builder setAggregation(@Nullable AggregationArgs aggregation) {
            this.aggregation = Input.ofNullable(aggregation);
            return this;
        }

        public Builder setFilter(Input<String> filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }

        public Builder setFilter(String filter) {
            this.filter = Input.of(Objects.requireNonNull(filter));
            return this;
        }

        public RatioPartArgs build() {
            return new RatioPartArgs(aggregation, filter);
        }
    }
}
