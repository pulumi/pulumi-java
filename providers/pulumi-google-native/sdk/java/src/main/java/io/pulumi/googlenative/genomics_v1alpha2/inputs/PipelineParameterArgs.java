// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.genomics_v1alpha2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.genomics_v1alpha2.inputs.LocalCopyArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PipelineParameterArgs extends io.pulumi.resources.ResourceArgs {

    public static final PipelineParameterArgs Empty = new PipelineParameterArgs();

    @InputImport(name="defaultValue")
    private final @Nullable Input<String> defaultValue;

    public Input<String> getDefaultValue() {
        return this.defaultValue == null ? Input.empty() : this.defaultValue;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="localCopy")
    private final @Nullable Input<LocalCopyArgs> localCopy;

    public Input<LocalCopyArgs> getLocalCopy() {
        return this.localCopy == null ? Input.empty() : this.localCopy;
    }

    @InputImport(name="name", required=true)
    private final Input<String> name;

    public Input<String> getName() {
        return this.name;
    }

    public PipelineParameterArgs(
        @Nullable Input<String> defaultValue,
        @Nullable Input<String> description,
        @Nullable Input<LocalCopyArgs> localCopy,
        Input<String> name) {
        this.defaultValue = defaultValue;
        this.description = description;
        this.localCopy = localCopy;
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
    }

    private PipelineParameterArgs() {
        this.defaultValue = Input.empty();
        this.description = Input.empty();
        this.localCopy = Input.empty();
        this.name = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineParameterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> defaultValue;
        private @Nullable Input<String> description;
        private @Nullable Input<LocalCopyArgs> localCopy;
        private Input<String> name;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineParameterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultValue = defaults.defaultValue;
    	      this.description = defaults.description;
    	      this.localCopy = defaults.localCopy;
    	      this.name = defaults.name;
        }

        public Builder setDefaultValue(@Nullable Input<String> defaultValue) {
            this.defaultValue = defaultValue;
            return this;
        }

        public Builder setDefaultValue(@Nullable String defaultValue) {
            this.defaultValue = Input.ofNullable(defaultValue);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setLocalCopy(@Nullable Input<LocalCopyArgs> localCopy) {
            this.localCopy = localCopy;
            return this;
        }

        public Builder setLocalCopy(@Nullable LocalCopyArgs localCopy) {
            this.localCopy = Input.ofNullable(localCopy);
            return this;
        }

        public Builder setName(Input<String> name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setName(String name) {
            this.name = Input.of(Objects.requireNonNull(name));
            return this;
        }

        public PipelineParameterArgs build() {
            return new PipelineParameterArgs(defaultValue, description, localCopy, name);
        }
    }
}
