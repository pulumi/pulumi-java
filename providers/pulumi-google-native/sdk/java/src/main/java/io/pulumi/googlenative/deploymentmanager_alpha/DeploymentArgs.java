// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.deploymentmanager_alpha;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.deploymentmanager_alpha.inputs.CredentialArgs;
import io.pulumi.googlenative.deploymentmanager_alpha.inputs.DeploymentLabelEntryArgs;
import io.pulumi.googlenative.deploymentmanager_alpha.inputs.TargetConfigurationArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeploymentArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeploymentArgs Empty = new DeploymentArgs();

    @Import(name="createPolicy")
      private final @Nullable Output<String> createPolicy;

    public Output<String> getCreatePolicy() {
        return this.createPolicy == null ? Output.empty() : this.createPolicy;
    }

    /**
     * User provided default credential for the deployment.
     * 
     */
    @Import(name="credential")
      private final @Nullable Output<CredentialArgs> credential;

    public Output<CredentialArgs> getCredential() {
        return this.credential == null ? Output.empty() : this.credential;
    }

    /**
     * An optional user-provided description of the deployment.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> getDescription() {
        return this.description == null ? Output.empty() : this.description;
    }

    @Import(name="id")
      private final @Nullable Output<String> id;

    public Output<String> getId() {
        return this.id == null ? Output.empty() : this.id;
    }

    /**
     * Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<List<DeploymentLabelEntryArgs>> labels;

    public Output<List<DeploymentLabelEntryArgs>> getLabels() {
        return this.labels == null ? Output.empty() : this.labels;
    }

    /**
     * Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    @Import(name="preview")
      private final @Nullable Output<String> preview;

    public Output<String> getPreview() {
        return this.preview == null ? Output.empty() : this.preview;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * [Input Only] The parameters that define your deployment, including the deployment configuration and relevant templates.
     * 
     */
    @Import(name="target")
      private final @Nullable Output<TargetConfigurationArgs> target;

    public Output<TargetConfigurationArgs> getTarget() {
        return this.target == null ? Output.empty() : this.target;
    }

    public DeploymentArgs(
        @Nullable Output<String> createPolicy,
        @Nullable Output<CredentialArgs> credential,
        @Nullable Output<String> description,
        @Nullable Output<String> id,
        @Nullable Output<List<DeploymentLabelEntryArgs>> labels,
        @Nullable Output<String> name,
        @Nullable Output<String> preview,
        @Nullable Output<String> project,
        @Nullable Output<TargetConfigurationArgs> target) {
        this.createPolicy = createPolicy;
        this.credential = credential;
        this.description = description;
        this.id = id;
        this.labels = labels;
        this.name = name;
        this.preview = preview;
        this.project = project;
        this.target = target;
    }

    private DeploymentArgs() {
        this.createPolicy = Output.empty();
        this.credential = Output.empty();
        this.description = Output.empty();
        this.id = Output.empty();
        this.labels = Output.empty();
        this.name = Output.empty();
        this.preview = Output.empty();
        this.project = Output.empty();
        this.target = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> createPolicy;
        private @Nullable Output<CredentialArgs> credential;
        private @Nullable Output<String> description;
        private @Nullable Output<String> id;
        private @Nullable Output<List<DeploymentLabelEntryArgs>> labels;
        private @Nullable Output<String> name;
        private @Nullable Output<String> preview;
        private @Nullable Output<String> project;
        private @Nullable Output<TargetConfigurationArgs> target;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createPolicy = defaults.createPolicy;
    	      this.credential = defaults.credential;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.preview = defaults.preview;
    	      this.project = defaults.project;
    	      this.target = defaults.target;
        }

        public Builder createPolicy(@Nullable Output<String> createPolicy) {
            this.createPolicy = createPolicy;
            return this;
        }
        public Builder createPolicy(@Nullable String createPolicy) {
            this.createPolicy = Output.ofNullable(createPolicy);
            return this;
        }
        public Builder credential(@Nullable Output<CredentialArgs> credential) {
            this.credential = credential;
            return this;
        }
        public Builder credential(@Nullable CredentialArgs credential) {
            this.credential = Output.ofNullable(credential);
            return this;
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Output.ofNullable(description);
            return this;
        }
        public Builder id(@Nullable Output<String> id) {
            this.id = id;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = Output.ofNullable(id);
            return this;
        }
        public Builder labels(@Nullable Output<List<DeploymentLabelEntryArgs>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable List<DeploymentLabelEntryArgs> labels) {
            this.labels = Output.ofNullable(labels);
            return this;
        }
        public Builder labels(DeploymentLabelEntryArgs... labels) {
            return labels(List.of(labels));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }
        public Builder preview(@Nullable Output<String> preview) {
            this.preview = preview;
            return this;
        }
        public Builder preview(@Nullable String preview) {
            this.preview = Output.ofNullable(preview);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }
        public Builder target(@Nullable Output<TargetConfigurationArgs> target) {
            this.target = target;
            return this;
        }
        public Builder target(@Nullable TargetConfigurationArgs target) {
            this.target = Output.ofNullable(target);
            return this;
        }        public DeploymentArgs build() {
            return new DeploymentArgs(createPolicy, credential, description, id, labels, name, preview, project, target);
        }
    }
}
