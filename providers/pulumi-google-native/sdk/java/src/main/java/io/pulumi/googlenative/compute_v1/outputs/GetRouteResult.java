// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_v1.outputs.RouteAsPathResponse;
import io.pulumi.googlenative.compute_v1.outputs.RouteWarningsItemResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetRouteResult {
    private final List<RouteAsPathResponse> asPaths;
    private final String creationTimestamp;
    private final String description;
    private final String destRange;
    private final String kind;
    private final String name;
    private final String network;
    private final String nextHopGateway;
    private final String nextHopIlb;
    private final String nextHopInstance;
    private final String nextHopIp;
    private final String nextHopNetwork;
    private final String nextHopPeering;
    private final String nextHopVpnTunnel;
    private final Integer priority;
    private final String routeType;
    private final String selfLink;
    private final List<String> tags;
    private final List<RouteWarningsItemResponse> warnings;

    @OutputCustomType.Constructor({"asPaths","creationTimestamp","description","destRange","kind","name","network","nextHopGateway","nextHopIlb","nextHopInstance","nextHopIp","nextHopNetwork","nextHopPeering","nextHopVpnTunnel","priority","routeType","selfLink","tags","warnings"})
    private GetRouteResult(
        List<RouteAsPathResponse> asPaths,
        String creationTimestamp,
        String description,
        String destRange,
        String kind,
        String name,
        String network,
        String nextHopGateway,
        String nextHopIlb,
        String nextHopInstance,
        String nextHopIp,
        String nextHopNetwork,
        String nextHopPeering,
        String nextHopVpnTunnel,
        Integer priority,
        String routeType,
        String selfLink,
        List<String> tags,
        List<RouteWarningsItemResponse> warnings) {
        this.asPaths = Objects.requireNonNull(asPaths);
        this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
        this.description = Objects.requireNonNull(description);
        this.destRange = Objects.requireNonNull(destRange);
        this.kind = Objects.requireNonNull(kind);
        this.name = Objects.requireNonNull(name);
        this.network = Objects.requireNonNull(network);
        this.nextHopGateway = Objects.requireNonNull(nextHopGateway);
        this.nextHopIlb = Objects.requireNonNull(nextHopIlb);
        this.nextHopInstance = Objects.requireNonNull(nextHopInstance);
        this.nextHopIp = Objects.requireNonNull(nextHopIp);
        this.nextHopNetwork = Objects.requireNonNull(nextHopNetwork);
        this.nextHopPeering = Objects.requireNonNull(nextHopPeering);
        this.nextHopVpnTunnel = Objects.requireNonNull(nextHopVpnTunnel);
        this.priority = Objects.requireNonNull(priority);
        this.routeType = Objects.requireNonNull(routeType);
        this.selfLink = Objects.requireNonNull(selfLink);
        this.tags = Objects.requireNonNull(tags);
        this.warnings = Objects.requireNonNull(warnings);
    }

    public List<RouteAsPathResponse> getAsPaths() {
        return this.asPaths;
    }
    public String getCreationTimestamp() {
        return this.creationTimestamp;
    }
    public String getDescription() {
        return this.description;
    }
    public String getDestRange() {
        return this.destRange;
    }
    public String getKind() {
        return this.kind;
    }
    public String getName() {
        return this.name;
    }
    public String getNetwork() {
        return this.network;
    }
    public String getNextHopGateway() {
        return this.nextHopGateway;
    }
    public String getNextHopIlb() {
        return this.nextHopIlb;
    }
    public String getNextHopInstance() {
        return this.nextHopInstance;
    }
    public String getNextHopIp() {
        return this.nextHopIp;
    }
    public String getNextHopNetwork() {
        return this.nextHopNetwork;
    }
    public String getNextHopPeering() {
        return this.nextHopPeering;
    }
    public String getNextHopVpnTunnel() {
        return this.nextHopVpnTunnel;
    }
    public Integer getPriority() {
        return this.priority;
    }
    public String getRouteType() {
        return this.routeType;
    }
    public String getSelfLink() {
        return this.selfLink;
    }
    public List<String> getTags() {
        return this.tags;
    }
    public List<RouteWarningsItemResponse> getWarnings() {
        return this.warnings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<RouteAsPathResponse> asPaths;
        private String creationTimestamp;
        private String description;
        private String destRange;
        private String kind;
        private String name;
        private String network;
        private String nextHopGateway;
        private String nextHopIlb;
        private String nextHopInstance;
        private String nextHopIp;
        private String nextHopNetwork;
        private String nextHopPeering;
        private String nextHopVpnTunnel;
        private Integer priority;
        private String routeType;
        private String selfLink;
        private List<String> tags;
        private List<RouteWarningsItemResponse> warnings;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRouteResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asPaths = defaults.asPaths;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.description = defaults.description;
    	      this.destRange = defaults.destRange;
    	      this.kind = defaults.kind;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.nextHopGateway = defaults.nextHopGateway;
    	      this.nextHopIlb = defaults.nextHopIlb;
    	      this.nextHopInstance = defaults.nextHopInstance;
    	      this.nextHopIp = defaults.nextHopIp;
    	      this.nextHopNetwork = defaults.nextHopNetwork;
    	      this.nextHopPeering = defaults.nextHopPeering;
    	      this.nextHopVpnTunnel = defaults.nextHopVpnTunnel;
    	      this.priority = defaults.priority;
    	      this.routeType = defaults.routeType;
    	      this.selfLink = defaults.selfLink;
    	      this.tags = defaults.tags;
    	      this.warnings = defaults.warnings;
        }

        public Builder setAsPaths(List<RouteAsPathResponse> asPaths) {
            this.asPaths = Objects.requireNonNull(asPaths);
            return this;
        }

        public Builder setCreationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDestRange(String destRange) {
            this.destRange = Objects.requireNonNull(destRange);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetwork(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setNextHopGateway(String nextHopGateway) {
            this.nextHopGateway = Objects.requireNonNull(nextHopGateway);
            return this;
        }

        public Builder setNextHopIlb(String nextHopIlb) {
            this.nextHopIlb = Objects.requireNonNull(nextHopIlb);
            return this;
        }

        public Builder setNextHopInstance(String nextHopInstance) {
            this.nextHopInstance = Objects.requireNonNull(nextHopInstance);
            return this;
        }

        public Builder setNextHopIp(String nextHopIp) {
            this.nextHopIp = Objects.requireNonNull(nextHopIp);
            return this;
        }

        public Builder setNextHopNetwork(String nextHopNetwork) {
            this.nextHopNetwork = Objects.requireNonNull(nextHopNetwork);
            return this;
        }

        public Builder setNextHopPeering(String nextHopPeering) {
            this.nextHopPeering = Objects.requireNonNull(nextHopPeering);
            return this;
        }

        public Builder setNextHopVpnTunnel(String nextHopVpnTunnel) {
            this.nextHopVpnTunnel = Objects.requireNonNull(nextHopVpnTunnel);
            return this;
        }

        public Builder setPriority(Integer priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }

        public Builder setRouteType(String routeType) {
            this.routeType = Objects.requireNonNull(routeType);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setTags(List<String> tags) {
            this.tags = Objects.requireNonNull(tags);
            return this;
        }

        public Builder setWarnings(List<RouteWarningsItemResponse> warnings) {
            this.warnings = Objects.requireNonNull(warnings);
            return this;
        }

        public GetRouteResult build() {
            return new GetRouteResult(asPaths, creationTimestamp, description, destRange, kind, name, network, nextHopGateway, nextHopIlb, nextHopInstance, nextHopIp, nextHopNetwork, nextHopPeering, nextHopVpnTunnel, priority, routeType, selfLink, tags, warnings);
        }
    }
}
