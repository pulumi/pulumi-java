// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.storagetransfer_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.storagetransfer_v1.outputs.MetadataOptionsResponse;
import java.lang.Boolean;
import java.util.Objects;

@OutputCustomType
public final class TransferOptionsResponse {
    private final Boolean deleteObjectsFromSourceAfterTransfer;
    private final Boolean deleteObjectsUniqueInSink;
    private final MetadataOptionsResponse metadataOptions;
    private final Boolean overwriteObjectsAlreadyExistingInSink;

    @OutputCustomType.Constructor({"deleteObjectsFromSourceAfterTransfer","deleteObjectsUniqueInSink","metadataOptions","overwriteObjectsAlreadyExistingInSink"})
    private TransferOptionsResponse(
        Boolean deleteObjectsFromSourceAfterTransfer,
        Boolean deleteObjectsUniqueInSink,
        MetadataOptionsResponse metadataOptions,
        Boolean overwriteObjectsAlreadyExistingInSink) {
        this.deleteObjectsFromSourceAfterTransfer = Objects.requireNonNull(deleteObjectsFromSourceAfterTransfer);
        this.deleteObjectsUniqueInSink = Objects.requireNonNull(deleteObjectsUniqueInSink);
        this.metadataOptions = Objects.requireNonNull(metadataOptions);
        this.overwriteObjectsAlreadyExistingInSink = Objects.requireNonNull(overwriteObjectsAlreadyExistingInSink);
    }

    public Boolean getDeleteObjectsFromSourceAfterTransfer() {
        return this.deleteObjectsFromSourceAfterTransfer;
    }
    public Boolean getDeleteObjectsUniqueInSink() {
        return this.deleteObjectsUniqueInSink;
    }
    public MetadataOptionsResponse getMetadataOptions() {
        return this.metadataOptions;
    }
    public Boolean getOverwriteObjectsAlreadyExistingInSink() {
        return this.overwriteObjectsAlreadyExistingInSink;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TransferOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean deleteObjectsFromSourceAfterTransfer;
        private Boolean deleteObjectsUniqueInSink;
        private MetadataOptionsResponse metadataOptions;
        private Boolean overwriteObjectsAlreadyExistingInSink;

        public Builder() {
    	      // Empty
        }

        public Builder(TransferOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deleteObjectsFromSourceAfterTransfer = defaults.deleteObjectsFromSourceAfterTransfer;
    	      this.deleteObjectsUniqueInSink = defaults.deleteObjectsUniqueInSink;
    	      this.metadataOptions = defaults.metadataOptions;
    	      this.overwriteObjectsAlreadyExistingInSink = defaults.overwriteObjectsAlreadyExistingInSink;
        }

        public Builder setDeleteObjectsFromSourceAfterTransfer(Boolean deleteObjectsFromSourceAfterTransfer) {
            this.deleteObjectsFromSourceAfterTransfer = Objects.requireNonNull(deleteObjectsFromSourceAfterTransfer);
            return this;
        }

        public Builder setDeleteObjectsUniqueInSink(Boolean deleteObjectsUniqueInSink) {
            this.deleteObjectsUniqueInSink = Objects.requireNonNull(deleteObjectsUniqueInSink);
            return this;
        }

        public Builder setMetadataOptions(MetadataOptionsResponse metadataOptions) {
            this.metadataOptions = Objects.requireNonNull(metadataOptions);
            return this;
        }

        public Builder setOverwriteObjectsAlreadyExistingInSink(Boolean overwriteObjectsAlreadyExistingInSink) {
            this.overwriteObjectsAlreadyExistingInSink = Objects.requireNonNull(overwriteObjectsAlreadyExistingInSink);
            return this;
        }

        public TransferOptionsResponse build() {
            return new TransferOptionsResponse(deleteObjectsFromSourceAfterTransfer, deleteObjectsUniqueInSink, metadataOptions, overwriteObjectsAlreadyExistingInSink);
        }
    }
}
