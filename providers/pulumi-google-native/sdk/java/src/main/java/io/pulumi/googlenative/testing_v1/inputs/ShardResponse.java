// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.testing_v1.inputs.TestTargetsForShardResponse;
import java.lang.Integer;
import java.util.Objects;


public final class ShardResponse extends io.pulumi.resources.InvokeArgs {

    public static final ShardResponse Empty = new ShardResponse();

    @InputImport(name="numShards", required=true)
    private final Integer numShards;

    public Integer getNumShards() {
        return this.numShards;
    }

    @InputImport(name="shardIndex", required=true)
    private final Integer shardIndex;

    public Integer getShardIndex() {
        return this.shardIndex;
    }

    @InputImport(name="testTargetsForShard", required=true)
    private final TestTargetsForShardResponse testTargetsForShard;

    public TestTargetsForShardResponse getTestTargetsForShard() {
        return this.testTargetsForShard;
    }

    public ShardResponse(
        Integer numShards,
        Integer shardIndex,
        TestTargetsForShardResponse testTargetsForShard) {
        this.numShards = Objects.requireNonNull(numShards, "expected parameter 'numShards' to be non-null");
        this.shardIndex = Objects.requireNonNull(shardIndex, "expected parameter 'shardIndex' to be non-null");
        this.testTargetsForShard = Objects.requireNonNull(testTargetsForShard, "expected parameter 'testTargetsForShard' to be non-null");
    }

    private ShardResponse() {
        this.numShards = null;
        this.shardIndex = null;
        this.testTargetsForShard = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ShardResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer numShards;
        private Integer shardIndex;
        private TestTargetsForShardResponse testTargetsForShard;

        public Builder() {
    	      // Empty
        }

        public Builder(ShardResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.numShards = defaults.numShards;
    	      this.shardIndex = defaults.shardIndex;
    	      this.testTargetsForShard = defaults.testTargetsForShard;
        }

        public Builder setNumShards(Integer numShards) {
            this.numShards = Objects.requireNonNull(numShards);
            return this;
        }

        public Builder setShardIndex(Integer shardIndex) {
            this.shardIndex = Objects.requireNonNull(shardIndex);
            return this;
        }

        public Builder setTestTargetsForShard(TestTargetsForShardResponse testTargetsForShard) {
            this.testTargetsForShard = Objects.requireNonNull(testTargetsForShard);
            return this;
        }

        public ShardResponse build() {
            return new ShardResponse(numShards, shardIndex, testTargetsForShard);
        }
    }
}
