// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.testing_v1.outputs.EnvironmentResponse;
import io.pulumi.googlenative.testing_v1.outputs.ShardResponse;
import io.pulumi.googlenative.testing_v1.outputs.TestDetailsResponse;
import io.pulumi.googlenative.testing_v1.outputs.TestSpecificationResponse;
import io.pulumi.googlenative.testing_v1.outputs.ToolResultsStepResponse;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class TestExecutionResponse {
    private final EnvironmentResponse environment;
    private final String matrixId;
    private final String project;
    private final ShardResponse shard;
    private final String state;
    private final TestDetailsResponse testDetails;
    private final TestSpecificationResponse testSpecification;
    private final String timestamp;
    private final ToolResultsStepResponse toolResultsStep;

    @OutputCustomType.Constructor({"environment","matrixId","project","shard","state","testDetails","testSpecification","timestamp","toolResultsStep"})
    private TestExecutionResponse(
        EnvironmentResponse environment,
        String matrixId,
        String project,
        ShardResponse shard,
        String state,
        TestDetailsResponse testDetails,
        TestSpecificationResponse testSpecification,
        String timestamp,
        ToolResultsStepResponse toolResultsStep) {
        this.environment = Objects.requireNonNull(environment);
        this.matrixId = Objects.requireNonNull(matrixId);
        this.project = Objects.requireNonNull(project);
        this.shard = Objects.requireNonNull(shard);
        this.state = Objects.requireNonNull(state);
        this.testDetails = Objects.requireNonNull(testDetails);
        this.testSpecification = Objects.requireNonNull(testSpecification);
        this.timestamp = Objects.requireNonNull(timestamp);
        this.toolResultsStep = Objects.requireNonNull(toolResultsStep);
    }

    public EnvironmentResponse getEnvironment() {
        return this.environment;
    }
    public String getMatrixId() {
        return this.matrixId;
    }
    public String getProject() {
        return this.project;
    }
    public ShardResponse getShard() {
        return this.shard;
    }
    public String getState() {
        return this.state;
    }
    public TestDetailsResponse getTestDetails() {
        return this.testDetails;
    }
    public TestSpecificationResponse getTestSpecification() {
        return this.testSpecification;
    }
    public String getTimestamp() {
        return this.timestamp;
    }
    public ToolResultsStepResponse getToolResultsStep() {
        return this.toolResultsStep;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TestExecutionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentResponse environment;
        private String matrixId;
        private String project;
        private ShardResponse shard;
        private String state;
        private TestDetailsResponse testDetails;
        private TestSpecificationResponse testSpecification;
        private String timestamp;
        private ToolResultsStepResponse toolResultsStep;

        public Builder() {
    	      // Empty
        }

        public Builder(TestExecutionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environment = defaults.environment;
    	      this.matrixId = defaults.matrixId;
    	      this.project = defaults.project;
    	      this.shard = defaults.shard;
    	      this.state = defaults.state;
    	      this.testDetails = defaults.testDetails;
    	      this.testSpecification = defaults.testSpecification;
    	      this.timestamp = defaults.timestamp;
    	      this.toolResultsStep = defaults.toolResultsStep;
        }

        public Builder setEnvironment(EnvironmentResponse environment) {
            this.environment = Objects.requireNonNull(environment);
            return this;
        }

        public Builder setMatrixId(String matrixId) {
            this.matrixId = Objects.requireNonNull(matrixId);
            return this;
        }

        public Builder setProject(String project) {
            this.project = Objects.requireNonNull(project);
            return this;
        }

        public Builder setShard(ShardResponse shard) {
            this.shard = Objects.requireNonNull(shard);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setTestDetails(TestDetailsResponse testDetails) {
            this.testDetails = Objects.requireNonNull(testDetails);
            return this;
        }

        public Builder setTestSpecification(TestSpecificationResponse testSpecification) {
            this.testSpecification = Objects.requireNonNull(testSpecification);
            return this;
        }

        public Builder setTimestamp(String timestamp) {
            this.timestamp = Objects.requireNonNull(timestamp);
            return this;
        }

        public Builder setToolResultsStep(ToolResultsStepResponse toolResultsStep) {
            this.toolResultsStep = Objects.requireNonNull(toolResultsStep);
            return this;
        }

        public TestExecutionResponse build() {
            return new TestExecutionResponse(environment, matrixId, project, shard, state, testDetails, testSpecification, timestamp, toolResultsStep);
        }
    }
}
