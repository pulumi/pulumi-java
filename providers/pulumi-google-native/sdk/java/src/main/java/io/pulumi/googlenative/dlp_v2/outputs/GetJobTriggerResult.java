// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2ErrorResponse;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2InspectJobConfigResponse;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2TriggerResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetJobTriggerResult {
    private final String createTime;
    private final String description;
    private final String displayName;
    private final List<GooglePrivacyDlpV2ErrorResponse> errors;
    private final GooglePrivacyDlpV2InspectJobConfigResponse inspectJob;
    private final String lastRunTime;
    private final String name;
    private final String status;
    private final List<GooglePrivacyDlpV2TriggerResponse> triggers;
    private final String updateTime;

    @OutputCustomType.Constructor({"createTime","description","displayName","errors","inspectJob","lastRunTime","name","status","triggers","updateTime"})
    private GetJobTriggerResult(
        String createTime,
        String description,
        String displayName,
        List<GooglePrivacyDlpV2ErrorResponse> errors,
        GooglePrivacyDlpV2InspectJobConfigResponse inspectJob,
        String lastRunTime,
        String name,
        String status,
        List<GooglePrivacyDlpV2TriggerResponse> triggers,
        String updateTime) {
        this.createTime = Objects.requireNonNull(createTime);
        this.description = Objects.requireNonNull(description);
        this.displayName = Objects.requireNonNull(displayName);
        this.errors = Objects.requireNonNull(errors);
        this.inspectJob = Objects.requireNonNull(inspectJob);
        this.lastRunTime = Objects.requireNonNull(lastRunTime);
        this.name = Objects.requireNonNull(name);
        this.status = Objects.requireNonNull(status);
        this.triggers = Objects.requireNonNull(triggers);
        this.updateTime = Objects.requireNonNull(updateTime);
    }

    public String getCreateTime() {
        return this.createTime;
    }
    public String getDescription() {
        return this.description;
    }
    public String getDisplayName() {
        return this.displayName;
    }
    public List<GooglePrivacyDlpV2ErrorResponse> getErrors() {
        return this.errors;
    }
    public GooglePrivacyDlpV2InspectJobConfigResponse getInspectJob() {
        return this.inspectJob;
    }
    public String getLastRunTime() {
        return this.lastRunTime;
    }
    public String getName() {
        return this.name;
    }
    public String getStatus() {
        return this.status;
    }
    public List<GooglePrivacyDlpV2TriggerResponse> getTriggers() {
        return this.triggers;
    }
    public String getUpdateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobTriggerResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String description;
        private String displayName;
        private List<GooglePrivacyDlpV2ErrorResponse> errors;
        private GooglePrivacyDlpV2InspectJobConfigResponse inspectJob;
        private String lastRunTime;
        private String name;
        private String status;
        private List<GooglePrivacyDlpV2TriggerResponse> triggers;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetJobTriggerResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.errors = defaults.errors;
    	      this.inspectJob = defaults.inspectJob;
    	      this.lastRunTime = defaults.lastRunTime;
    	      this.name = defaults.name;
    	      this.status = defaults.status;
    	      this.triggers = defaults.triggers;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setErrors(List<GooglePrivacyDlpV2ErrorResponse> errors) {
            this.errors = Objects.requireNonNull(errors);
            return this;
        }

        public Builder setInspectJob(GooglePrivacyDlpV2InspectJobConfigResponse inspectJob) {
            this.inspectJob = Objects.requireNonNull(inspectJob);
            return this;
        }

        public Builder setLastRunTime(String lastRunTime) {
            this.lastRunTime = Objects.requireNonNull(lastRunTime);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setTriggers(List<GooglePrivacyDlpV2TriggerResponse> triggers) {
            this.triggers = Objects.requireNonNull(triggers);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }

        public GetJobTriggerResult build() {
            return new GetJobTriggerResult(createTime, description, displayName, errors, inspectJob, lastRunTime, name, status, triggers, updateTime);
        }
    }
}
