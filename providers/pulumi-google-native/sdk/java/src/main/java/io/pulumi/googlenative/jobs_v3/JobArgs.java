// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.jobs_v3;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.jobs_v3.enums.JobDegreeTypesItem;
import io.pulumi.googlenative.jobs_v3.enums.JobEmploymentTypesItem;
import io.pulumi.googlenative.jobs_v3.enums.JobJobBenefitsItem;
import io.pulumi.googlenative.jobs_v3.enums.JobJobLevel;
import io.pulumi.googlenative.jobs_v3.enums.JobPostingRegion;
import io.pulumi.googlenative.jobs_v3.inputs.ApplicationInfoArgs;
import io.pulumi.googlenative.jobs_v3.inputs.CompensationInfoArgs;
import io.pulumi.googlenative.jobs_v3.inputs.ProcessingOptionsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class JobArgs extends io.pulumi.resources.ResourceArgs {

    public static final JobArgs Empty = new JobArgs();

    @InputImport(name="addresses")
    private final @Nullable Input<List<String>> addresses;

    public Input<List<String>> getAddresses() {
        return this.addresses == null ? Input.empty() : this.addresses;
    }

    @InputImport(name="applicationInfo", required=true)
    private final Input<ApplicationInfoArgs> applicationInfo;

    public Input<ApplicationInfoArgs> getApplicationInfo() {
        return this.applicationInfo;
    }

    @InputImport(name="companyName", required=true)
    private final Input<String> companyName;

    public Input<String> getCompanyName() {
        return this.companyName;
    }

    @InputImport(name="compensationInfo")
    private final @Nullable Input<CompensationInfoArgs> compensationInfo;

    public Input<CompensationInfoArgs> getCompensationInfo() {
        return this.compensationInfo == null ? Input.empty() : this.compensationInfo;
    }

    @InputImport(name="customAttributes")
    private final @Nullable Input<Map<String,String>> customAttributes;

    public Input<Map<String,String>> getCustomAttributes() {
        return this.customAttributes == null ? Input.empty() : this.customAttributes;
    }

    @InputImport(name="degreeTypes")
    private final @Nullable Input<List<JobDegreeTypesItem>> degreeTypes;

    public Input<List<JobDegreeTypesItem>> getDegreeTypes() {
        return this.degreeTypes == null ? Input.empty() : this.degreeTypes;
    }

    @InputImport(name="department")
    private final @Nullable Input<String> department;

    public Input<String> getDepartment() {
        return this.department == null ? Input.empty() : this.department;
    }

    @InputImport(name="description", required=true)
    private final Input<String> description;

    public Input<String> getDescription() {
        return this.description;
    }

    @InputImport(name="employmentTypes")
    private final @Nullable Input<List<JobEmploymentTypesItem>> employmentTypes;

    public Input<List<JobEmploymentTypesItem>> getEmploymentTypes() {
        return this.employmentTypes == null ? Input.empty() : this.employmentTypes;
    }

    @InputImport(name="incentives")
    private final @Nullable Input<String> incentives;

    public Input<String> getIncentives() {
        return this.incentives == null ? Input.empty() : this.incentives;
    }

    @InputImport(name="jobBenefits")
    private final @Nullable Input<List<JobJobBenefitsItem>> jobBenefits;

    public Input<List<JobJobBenefitsItem>> getJobBenefits() {
        return this.jobBenefits == null ? Input.empty() : this.jobBenefits;
    }

    @InputImport(name="jobEndTime")
    private final @Nullable Input<String> jobEndTime;

    public Input<String> getJobEndTime() {
        return this.jobEndTime == null ? Input.empty() : this.jobEndTime;
    }

    @InputImport(name="jobLevel")
    private final @Nullable Input<JobJobLevel> jobLevel;

    public Input<JobJobLevel> getJobLevel() {
        return this.jobLevel == null ? Input.empty() : this.jobLevel;
    }

    @InputImport(name="jobStartTime")
    private final @Nullable Input<String> jobStartTime;

    public Input<String> getJobStartTime() {
        return this.jobStartTime == null ? Input.empty() : this.jobStartTime;
    }

    @InputImport(name="languageCode")
    private final @Nullable Input<String> languageCode;

    public Input<String> getLanguageCode() {
        return this.languageCode == null ? Input.empty() : this.languageCode;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="postingExpireTime")
    private final @Nullable Input<String> postingExpireTime;

    public Input<String> getPostingExpireTime() {
        return this.postingExpireTime == null ? Input.empty() : this.postingExpireTime;
    }

    @InputImport(name="postingPublishTime")
    private final @Nullable Input<String> postingPublishTime;

    public Input<String> getPostingPublishTime() {
        return this.postingPublishTime == null ? Input.empty() : this.postingPublishTime;
    }

    @InputImport(name="postingRegion")
    private final @Nullable Input<JobPostingRegion> postingRegion;

    public Input<JobPostingRegion> getPostingRegion() {
        return this.postingRegion == null ? Input.empty() : this.postingRegion;
    }

    @InputImport(name="processingOptions")
    private final @Nullable Input<ProcessingOptionsArgs> processingOptions;

    public Input<ProcessingOptionsArgs> getProcessingOptions() {
        return this.processingOptions == null ? Input.empty() : this.processingOptions;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="promotionValue")
    private final @Nullable Input<Integer> promotionValue;

    public Input<Integer> getPromotionValue() {
        return this.promotionValue == null ? Input.empty() : this.promotionValue;
    }

    @InputImport(name="qualifications")
    private final @Nullable Input<String> qualifications;

    public Input<String> getQualifications() {
        return this.qualifications == null ? Input.empty() : this.qualifications;
    }

    @InputImport(name="requisitionId", required=true)
    private final Input<String> requisitionId;

    public Input<String> getRequisitionId() {
        return this.requisitionId;
    }

    @InputImport(name="responsibilities")
    private final @Nullable Input<String> responsibilities;

    public Input<String> getResponsibilities() {
        return this.responsibilities == null ? Input.empty() : this.responsibilities;
    }

    @InputImport(name="title", required=true)
    private final Input<String> title;

    public Input<String> getTitle() {
        return this.title;
    }

    public JobArgs(
        @Nullable Input<List<String>> addresses,
        Input<ApplicationInfoArgs> applicationInfo,
        Input<String> companyName,
        @Nullable Input<CompensationInfoArgs> compensationInfo,
        @Nullable Input<Map<String,String>> customAttributes,
        @Nullable Input<List<JobDegreeTypesItem>> degreeTypes,
        @Nullable Input<String> department,
        Input<String> description,
        @Nullable Input<List<JobEmploymentTypesItem>> employmentTypes,
        @Nullable Input<String> incentives,
        @Nullable Input<List<JobJobBenefitsItem>> jobBenefits,
        @Nullable Input<String> jobEndTime,
        @Nullable Input<JobJobLevel> jobLevel,
        @Nullable Input<String> jobStartTime,
        @Nullable Input<String> languageCode,
        @Nullable Input<String> name,
        @Nullable Input<String> postingExpireTime,
        @Nullable Input<String> postingPublishTime,
        @Nullable Input<JobPostingRegion> postingRegion,
        @Nullable Input<ProcessingOptionsArgs> processingOptions,
        @Nullable Input<String> project,
        @Nullable Input<Integer> promotionValue,
        @Nullable Input<String> qualifications,
        Input<String> requisitionId,
        @Nullable Input<String> responsibilities,
        Input<String> title) {
        this.addresses = addresses;
        this.applicationInfo = Objects.requireNonNull(applicationInfo, "expected parameter 'applicationInfo' to be non-null");
        this.companyName = Objects.requireNonNull(companyName, "expected parameter 'companyName' to be non-null");
        this.compensationInfo = compensationInfo;
        this.customAttributes = customAttributes;
        this.degreeTypes = degreeTypes;
        this.department = department;
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
        this.employmentTypes = employmentTypes;
        this.incentives = incentives;
        this.jobBenefits = jobBenefits;
        this.jobEndTime = jobEndTime;
        this.jobLevel = jobLevel;
        this.jobStartTime = jobStartTime;
        this.languageCode = languageCode;
        this.name = name;
        this.postingExpireTime = postingExpireTime;
        this.postingPublishTime = postingPublishTime;
        this.postingRegion = postingRegion;
        this.processingOptions = processingOptions;
        this.project = project;
        this.promotionValue = promotionValue;
        this.qualifications = qualifications;
        this.requisitionId = Objects.requireNonNull(requisitionId, "expected parameter 'requisitionId' to be non-null");
        this.responsibilities = responsibilities;
        this.title = Objects.requireNonNull(title, "expected parameter 'title' to be non-null");
    }

    private JobArgs() {
        this.addresses = Input.empty();
        this.applicationInfo = Input.empty();
        this.companyName = Input.empty();
        this.compensationInfo = Input.empty();
        this.customAttributes = Input.empty();
        this.degreeTypes = Input.empty();
        this.department = Input.empty();
        this.description = Input.empty();
        this.employmentTypes = Input.empty();
        this.incentives = Input.empty();
        this.jobBenefits = Input.empty();
        this.jobEndTime = Input.empty();
        this.jobLevel = Input.empty();
        this.jobStartTime = Input.empty();
        this.languageCode = Input.empty();
        this.name = Input.empty();
        this.postingExpireTime = Input.empty();
        this.postingPublishTime = Input.empty();
        this.postingRegion = Input.empty();
        this.processingOptions = Input.empty();
        this.project = Input.empty();
        this.promotionValue = Input.empty();
        this.qualifications = Input.empty();
        this.requisitionId = Input.empty();
        this.responsibilities = Input.empty();
        this.title = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(JobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> addresses;
        private Input<ApplicationInfoArgs> applicationInfo;
        private Input<String> companyName;
        private @Nullable Input<CompensationInfoArgs> compensationInfo;
        private @Nullable Input<Map<String,String>> customAttributes;
        private @Nullable Input<List<JobDegreeTypesItem>> degreeTypes;
        private @Nullable Input<String> department;
        private Input<String> description;
        private @Nullable Input<List<JobEmploymentTypesItem>> employmentTypes;
        private @Nullable Input<String> incentives;
        private @Nullable Input<List<JobJobBenefitsItem>> jobBenefits;
        private @Nullable Input<String> jobEndTime;
        private @Nullable Input<JobJobLevel> jobLevel;
        private @Nullable Input<String> jobStartTime;
        private @Nullable Input<String> languageCode;
        private @Nullable Input<String> name;
        private @Nullable Input<String> postingExpireTime;
        private @Nullable Input<String> postingPublishTime;
        private @Nullable Input<JobPostingRegion> postingRegion;
        private @Nullable Input<ProcessingOptionsArgs> processingOptions;
        private @Nullable Input<String> project;
        private @Nullable Input<Integer> promotionValue;
        private @Nullable Input<String> qualifications;
        private Input<String> requisitionId;
        private @Nullable Input<String> responsibilities;
        private Input<String> title;

        public Builder() {
    	      // Empty
        }

        public Builder(JobArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addresses = defaults.addresses;
    	      this.applicationInfo = defaults.applicationInfo;
    	      this.companyName = defaults.companyName;
    	      this.compensationInfo = defaults.compensationInfo;
    	      this.customAttributes = defaults.customAttributes;
    	      this.degreeTypes = defaults.degreeTypes;
    	      this.department = defaults.department;
    	      this.description = defaults.description;
    	      this.employmentTypes = defaults.employmentTypes;
    	      this.incentives = defaults.incentives;
    	      this.jobBenefits = defaults.jobBenefits;
    	      this.jobEndTime = defaults.jobEndTime;
    	      this.jobLevel = defaults.jobLevel;
    	      this.jobStartTime = defaults.jobStartTime;
    	      this.languageCode = defaults.languageCode;
    	      this.name = defaults.name;
    	      this.postingExpireTime = defaults.postingExpireTime;
    	      this.postingPublishTime = defaults.postingPublishTime;
    	      this.postingRegion = defaults.postingRegion;
    	      this.processingOptions = defaults.processingOptions;
    	      this.project = defaults.project;
    	      this.promotionValue = defaults.promotionValue;
    	      this.qualifications = defaults.qualifications;
    	      this.requisitionId = defaults.requisitionId;
    	      this.responsibilities = defaults.responsibilities;
    	      this.title = defaults.title;
        }

        public Builder setAddresses(@Nullable Input<List<String>> addresses) {
            this.addresses = addresses;
            return this;
        }

        public Builder setAddresses(@Nullable List<String> addresses) {
            this.addresses = Input.ofNullable(addresses);
            return this;
        }

        public Builder setApplicationInfo(Input<ApplicationInfoArgs> applicationInfo) {
            this.applicationInfo = Objects.requireNonNull(applicationInfo);
            return this;
        }

        public Builder setApplicationInfo(ApplicationInfoArgs applicationInfo) {
            this.applicationInfo = Input.of(Objects.requireNonNull(applicationInfo));
            return this;
        }

        public Builder setCompanyName(Input<String> companyName) {
            this.companyName = Objects.requireNonNull(companyName);
            return this;
        }

        public Builder setCompanyName(String companyName) {
            this.companyName = Input.of(Objects.requireNonNull(companyName));
            return this;
        }

        public Builder setCompensationInfo(@Nullable Input<CompensationInfoArgs> compensationInfo) {
            this.compensationInfo = compensationInfo;
            return this;
        }

        public Builder setCompensationInfo(@Nullable CompensationInfoArgs compensationInfo) {
            this.compensationInfo = Input.ofNullable(compensationInfo);
            return this;
        }

        public Builder setCustomAttributes(@Nullable Input<Map<String,String>> customAttributes) {
            this.customAttributes = customAttributes;
            return this;
        }

        public Builder setCustomAttributes(@Nullable Map<String,String> customAttributes) {
            this.customAttributes = Input.ofNullable(customAttributes);
            return this;
        }

        public Builder setDegreeTypes(@Nullable Input<List<JobDegreeTypesItem>> degreeTypes) {
            this.degreeTypes = degreeTypes;
            return this;
        }

        public Builder setDegreeTypes(@Nullable List<JobDegreeTypesItem> degreeTypes) {
            this.degreeTypes = Input.ofNullable(degreeTypes);
            return this;
        }

        public Builder setDepartment(@Nullable Input<String> department) {
            this.department = department;
            return this;
        }

        public Builder setDepartment(@Nullable String department) {
            this.department = Input.ofNullable(department);
            return this;
        }

        public Builder setDescription(Input<String> description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Input.of(Objects.requireNonNull(description));
            return this;
        }

        public Builder setEmploymentTypes(@Nullable Input<List<JobEmploymentTypesItem>> employmentTypes) {
            this.employmentTypes = employmentTypes;
            return this;
        }

        public Builder setEmploymentTypes(@Nullable List<JobEmploymentTypesItem> employmentTypes) {
            this.employmentTypes = Input.ofNullable(employmentTypes);
            return this;
        }

        public Builder setIncentives(@Nullable Input<String> incentives) {
            this.incentives = incentives;
            return this;
        }

        public Builder setIncentives(@Nullable String incentives) {
            this.incentives = Input.ofNullable(incentives);
            return this;
        }

        public Builder setJobBenefits(@Nullable Input<List<JobJobBenefitsItem>> jobBenefits) {
            this.jobBenefits = jobBenefits;
            return this;
        }

        public Builder setJobBenefits(@Nullable List<JobJobBenefitsItem> jobBenefits) {
            this.jobBenefits = Input.ofNullable(jobBenefits);
            return this;
        }

        public Builder setJobEndTime(@Nullable Input<String> jobEndTime) {
            this.jobEndTime = jobEndTime;
            return this;
        }

        public Builder setJobEndTime(@Nullable String jobEndTime) {
            this.jobEndTime = Input.ofNullable(jobEndTime);
            return this;
        }

        public Builder setJobLevel(@Nullable Input<JobJobLevel> jobLevel) {
            this.jobLevel = jobLevel;
            return this;
        }

        public Builder setJobLevel(@Nullable JobJobLevel jobLevel) {
            this.jobLevel = Input.ofNullable(jobLevel);
            return this;
        }

        public Builder setJobStartTime(@Nullable Input<String> jobStartTime) {
            this.jobStartTime = jobStartTime;
            return this;
        }

        public Builder setJobStartTime(@Nullable String jobStartTime) {
            this.jobStartTime = Input.ofNullable(jobStartTime);
            return this;
        }

        public Builder setLanguageCode(@Nullable Input<String> languageCode) {
            this.languageCode = languageCode;
            return this;
        }

        public Builder setLanguageCode(@Nullable String languageCode) {
            this.languageCode = Input.ofNullable(languageCode);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPostingExpireTime(@Nullable Input<String> postingExpireTime) {
            this.postingExpireTime = postingExpireTime;
            return this;
        }

        public Builder setPostingExpireTime(@Nullable String postingExpireTime) {
            this.postingExpireTime = Input.ofNullable(postingExpireTime);
            return this;
        }

        public Builder setPostingPublishTime(@Nullable Input<String> postingPublishTime) {
            this.postingPublishTime = postingPublishTime;
            return this;
        }

        public Builder setPostingPublishTime(@Nullable String postingPublishTime) {
            this.postingPublishTime = Input.ofNullable(postingPublishTime);
            return this;
        }

        public Builder setPostingRegion(@Nullable Input<JobPostingRegion> postingRegion) {
            this.postingRegion = postingRegion;
            return this;
        }

        public Builder setPostingRegion(@Nullable JobPostingRegion postingRegion) {
            this.postingRegion = Input.ofNullable(postingRegion);
            return this;
        }

        public Builder setProcessingOptions(@Nullable Input<ProcessingOptionsArgs> processingOptions) {
            this.processingOptions = processingOptions;
            return this;
        }

        public Builder setProcessingOptions(@Nullable ProcessingOptionsArgs processingOptions) {
            this.processingOptions = Input.ofNullable(processingOptions);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setPromotionValue(@Nullable Input<Integer> promotionValue) {
            this.promotionValue = promotionValue;
            return this;
        }

        public Builder setPromotionValue(@Nullable Integer promotionValue) {
            this.promotionValue = Input.ofNullable(promotionValue);
            return this;
        }

        public Builder setQualifications(@Nullable Input<String> qualifications) {
            this.qualifications = qualifications;
            return this;
        }

        public Builder setQualifications(@Nullable String qualifications) {
            this.qualifications = Input.ofNullable(qualifications);
            return this;
        }

        public Builder setRequisitionId(Input<String> requisitionId) {
            this.requisitionId = Objects.requireNonNull(requisitionId);
            return this;
        }

        public Builder setRequisitionId(String requisitionId) {
            this.requisitionId = Input.of(Objects.requireNonNull(requisitionId));
            return this;
        }

        public Builder setResponsibilities(@Nullable Input<String> responsibilities) {
            this.responsibilities = responsibilities;
            return this;
        }

        public Builder setResponsibilities(@Nullable String responsibilities) {
            this.responsibilities = Input.ofNullable(responsibilities);
            return this;
        }

        public Builder setTitle(Input<String> title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }

        public Builder setTitle(String title) {
            this.title = Input.of(Objects.requireNonNull(title));
            return this;
        }

        public JobArgs build() {
            return new JobArgs(addresses, applicationInfo, companyName, compensationInfo, customAttributes, degreeTypes, department, description, employmentTypes, incentives, jobBenefits, jobEndTime, jobLevel, jobStartTime, languageCode, name, postingExpireTime, postingPublishTime, postingRegion, processingOptions, project, promotionValue, qualifications, requisitionId, responsibilities, title);
        }
    }
}
