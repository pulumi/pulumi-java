// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CryptoKeyResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2FieldIdResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InfoTypeResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse Empty = new GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse();

    @InputImport(name="commonAlphabet", required=true)
    private final String commonAlphabet;

    public String getCommonAlphabet() {
        return this.commonAlphabet;
    }

    @InputImport(name="context", required=true)
    private final GooglePrivacyDlpV2FieldIdResponse context;

    public GooglePrivacyDlpV2FieldIdResponse getContext() {
        return this.context;
    }

    @InputImport(name="cryptoKey", required=true)
    private final GooglePrivacyDlpV2CryptoKeyResponse cryptoKey;

    public GooglePrivacyDlpV2CryptoKeyResponse getCryptoKey() {
        return this.cryptoKey;
    }

    @InputImport(name="customAlphabet", required=true)
    private final String customAlphabet;

    public String getCustomAlphabet() {
        return this.customAlphabet;
    }

    @InputImport(name="radix", required=true)
    private final Integer radix;

    public Integer getRadix() {
        return this.radix;
    }

    @InputImport(name="surrogateInfoType", required=true)
    private final GooglePrivacyDlpV2InfoTypeResponse surrogateInfoType;

    public GooglePrivacyDlpV2InfoTypeResponse getSurrogateInfoType() {
        return this.surrogateInfoType;
    }

    public GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse(
        String commonAlphabet,
        GooglePrivacyDlpV2FieldIdResponse context,
        GooglePrivacyDlpV2CryptoKeyResponse cryptoKey,
        String customAlphabet,
        Integer radix,
        GooglePrivacyDlpV2InfoTypeResponse surrogateInfoType) {
        this.commonAlphabet = Objects.requireNonNull(commonAlphabet, "expected parameter 'commonAlphabet' to be non-null");
        this.context = Objects.requireNonNull(context, "expected parameter 'context' to be non-null");
        this.cryptoKey = Objects.requireNonNull(cryptoKey, "expected parameter 'cryptoKey' to be non-null");
        this.customAlphabet = Objects.requireNonNull(customAlphabet, "expected parameter 'customAlphabet' to be non-null");
        this.radix = Objects.requireNonNull(radix, "expected parameter 'radix' to be non-null");
        this.surrogateInfoType = Objects.requireNonNull(surrogateInfoType, "expected parameter 'surrogateInfoType' to be non-null");
    }

    private GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse() {
        this.commonAlphabet = null;
        this.context = null;
        this.cryptoKey = null;
        this.customAlphabet = null;
        this.radix = null;
        this.surrogateInfoType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String commonAlphabet;
        private GooglePrivacyDlpV2FieldIdResponse context;
        private GooglePrivacyDlpV2CryptoKeyResponse cryptoKey;
        private String customAlphabet;
        private Integer radix;
        private GooglePrivacyDlpV2InfoTypeResponse surrogateInfoType;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commonAlphabet = defaults.commonAlphabet;
    	      this.context = defaults.context;
    	      this.cryptoKey = defaults.cryptoKey;
    	      this.customAlphabet = defaults.customAlphabet;
    	      this.radix = defaults.radix;
    	      this.surrogateInfoType = defaults.surrogateInfoType;
        }

        public Builder setCommonAlphabet(String commonAlphabet) {
            this.commonAlphabet = Objects.requireNonNull(commonAlphabet);
            return this;
        }

        public Builder setContext(GooglePrivacyDlpV2FieldIdResponse context) {
            this.context = Objects.requireNonNull(context);
            return this;
        }

        public Builder setCryptoKey(GooglePrivacyDlpV2CryptoKeyResponse cryptoKey) {
            this.cryptoKey = Objects.requireNonNull(cryptoKey);
            return this;
        }

        public Builder setCustomAlphabet(String customAlphabet) {
            this.customAlphabet = Objects.requireNonNull(customAlphabet);
            return this;
        }

        public Builder setRadix(Integer radix) {
            this.radix = Objects.requireNonNull(radix);
            return this;
        }

        public Builder setSurrogateInfoType(GooglePrivacyDlpV2InfoTypeResponse surrogateInfoType) {
            this.surrogateInfoType = Objects.requireNonNull(surrogateInfoType);
            return this;
        }

        public GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse build() {
            return new GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse(commonAlphabet, context, cryptoKey, customAlphabet, radix, surrogateInfoType);
        }
    }
}
