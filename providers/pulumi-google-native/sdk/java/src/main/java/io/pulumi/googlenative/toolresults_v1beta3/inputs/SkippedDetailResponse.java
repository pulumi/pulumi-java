// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.toolresults_v1beta3.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.Boolean;
import java.util.Objects;


/**
 * Details for an outcome with a SKIPPED outcome summary.
 * 
 */
public final class SkippedDetailResponse extends io.pulumi.resources.InvokeArgs {

    public static final SkippedDetailResponse Empty = new SkippedDetailResponse();

    /**
     * If the App doesn't support the specific API level.
     * 
     */
    @InputImport(name="incompatibleAppVersion", required=true)
      private final Boolean incompatibleAppVersion;

    public Boolean getIncompatibleAppVersion() {
        return this.incompatibleAppVersion;
    }

    /**
     * If the App doesn't run on the specific architecture, for example, x86.
     * 
     */
    @InputImport(name="incompatibleArchitecture", required=true)
      private final Boolean incompatibleArchitecture;

    public Boolean getIncompatibleArchitecture() {
        return this.incompatibleArchitecture;
    }

    /**
     * If the requested OS version doesn't run on the specific device model.
     * 
     */
    @InputImport(name="incompatibleDevice", required=true)
      private final Boolean incompatibleDevice;

    public Boolean getIncompatibleDevice() {
        return this.incompatibleDevice;
    }

    public SkippedDetailResponse(
        Boolean incompatibleAppVersion,
        Boolean incompatibleArchitecture,
        Boolean incompatibleDevice) {
        this.incompatibleAppVersion = Objects.requireNonNull(incompatibleAppVersion, "expected parameter 'incompatibleAppVersion' to be non-null");
        this.incompatibleArchitecture = Objects.requireNonNull(incompatibleArchitecture, "expected parameter 'incompatibleArchitecture' to be non-null");
        this.incompatibleDevice = Objects.requireNonNull(incompatibleDevice, "expected parameter 'incompatibleDevice' to be non-null");
    }

    private SkippedDetailResponse() {
        this.incompatibleAppVersion = null;
        this.incompatibleArchitecture = null;
        this.incompatibleDevice = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SkippedDetailResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean incompatibleAppVersion;
        private Boolean incompatibleArchitecture;
        private Boolean incompatibleDevice;

        public Builder() {
    	      // Empty
        }

        public Builder(SkippedDetailResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.incompatibleAppVersion = defaults.incompatibleAppVersion;
    	      this.incompatibleArchitecture = defaults.incompatibleArchitecture;
    	      this.incompatibleDevice = defaults.incompatibleDevice;
        }

        public Builder setIncompatibleAppVersion(Boolean incompatibleAppVersion) {
            this.incompatibleAppVersion = Objects.requireNonNull(incompatibleAppVersion);
            return this;
        }

        public Builder setIncompatibleArchitecture(Boolean incompatibleArchitecture) {
            this.incompatibleArchitecture = Objects.requireNonNull(incompatibleArchitecture);
            return this;
        }

        public Builder setIncompatibleDevice(Boolean incompatibleDevice) {
            this.incompatibleDevice = Objects.requireNonNull(incompatibleDevice);
            return this;
        }
        public SkippedDetailResponse build() {
            return new SkippedDetailResponse(incompatibleAppVersion, incompatibleArchitecture, incompatibleDevice);
        }
    }
}
