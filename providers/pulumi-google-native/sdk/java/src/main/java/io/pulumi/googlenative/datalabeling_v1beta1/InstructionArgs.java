// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datalabeling_v1beta1;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.datalabeling_v1beta1.enums.InstructionDataType;
import io.pulumi.googlenative.datalabeling_v1beta1.inputs.GoogleCloudDatalabelingV1beta1PdfInstructionArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstructionArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstructionArgs Empty = new InstructionArgs();

    @InputImport(name="dataType", required=true)
    private final Input<InstructionDataType> dataType;

    public Input<InstructionDataType> getDataType() {
        return this.dataType;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="displayName", required=true)
    private final Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName;
    }

    @InputImport(name="pdfInstruction")
    private final @Nullable Input<GoogleCloudDatalabelingV1beta1PdfInstructionArgs> pdfInstruction;

    public Input<GoogleCloudDatalabelingV1beta1PdfInstructionArgs> getPdfInstruction() {
        return this.pdfInstruction == null ? Input.empty() : this.pdfInstruction;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    public InstructionArgs(
        Input<InstructionDataType> dataType,
        @Nullable Input<String> description,
        Input<String> displayName,
        @Nullable Input<GoogleCloudDatalabelingV1beta1PdfInstructionArgs> pdfInstruction,
        @Nullable Input<String> project) {
        this.dataType = Objects.requireNonNull(dataType, "expected parameter 'dataType' to be non-null");
        this.description = description;
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.pdfInstruction = pdfInstruction;
        this.project = project;
    }

    private InstructionArgs() {
        this.dataType = Input.empty();
        this.description = Input.empty();
        this.displayName = Input.empty();
        this.pdfInstruction = Input.empty();
        this.project = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstructionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<InstructionDataType> dataType;
        private @Nullable Input<String> description;
        private Input<String> displayName;
        private @Nullable Input<GoogleCloudDatalabelingV1beta1PdfInstructionArgs> pdfInstruction;
        private @Nullable Input<String> project;

        public Builder() {
    	      // Empty
        }

        public Builder(InstructionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataType = defaults.dataType;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.pdfInstruction = defaults.pdfInstruction;
    	      this.project = defaults.project;
        }

        public Builder setDataType(Input<InstructionDataType> dataType) {
            this.dataType = Objects.requireNonNull(dataType);
            return this;
        }

        public Builder setDataType(InstructionDataType dataType) {
            this.dataType = Input.of(Objects.requireNonNull(dataType));
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDisplayName(Input<String> displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Input.of(Objects.requireNonNull(displayName));
            return this;
        }

        public Builder setPdfInstruction(@Nullable Input<GoogleCloudDatalabelingV1beta1PdfInstructionArgs> pdfInstruction) {
            this.pdfInstruction = pdfInstruction;
            return this;
        }

        public Builder setPdfInstruction(@Nullable GoogleCloudDatalabelingV1beta1PdfInstructionArgs pdfInstruction) {
            this.pdfInstruction = Input.ofNullable(pdfInstruction);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public InstructionArgs build() {
            return new InstructionArgs(dataType, description, displayName, pdfInstruction, project);
        }
    }
}
