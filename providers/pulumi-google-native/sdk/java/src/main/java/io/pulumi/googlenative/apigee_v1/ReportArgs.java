// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.apigee_v1;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1CustomReportMetricArgs;
import io.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1ReportPropertyArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ReportArgs extends io.pulumi.resources.ResourceArgs {

    public static final ReportArgs Empty = new ReportArgs();

    @InputImport(name="chartType")
    private final @Nullable Input<String> chartType;

    public Input<String> getChartType() {
        return this.chartType == null ? Input.empty() : this.chartType;
    }

    @InputImport(name="comments")
    private final @Nullable Input<List<String>> comments;

    public Input<List<String>> getComments() {
        return this.comments == null ? Input.empty() : this.comments;
    }

    @InputImport(name="dimensions")
    private final @Nullable Input<List<String>> dimensions;

    public Input<List<String>> getDimensions() {
        return this.dimensions == null ? Input.empty() : this.dimensions;
    }

    @InputImport(name="displayName")
    private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    @InputImport(name="filter")
    private final @Nullable Input<String> filter;

    public Input<String> getFilter() {
        return this.filter == null ? Input.empty() : this.filter;
    }

    @InputImport(name="fromTime")
    private final @Nullable Input<String> fromTime;

    public Input<String> getFromTime() {
        return this.fromTime == null ? Input.empty() : this.fromTime;
    }

    @InputImport(name="limit")
    private final @Nullable Input<String> limit;

    public Input<String> getLimit() {
        return this.limit == null ? Input.empty() : this.limit;
    }

    @InputImport(name="metrics", required=true)
    private final Input<List<GoogleCloudApigeeV1CustomReportMetricArgs>> metrics;

    public Input<List<GoogleCloudApigeeV1CustomReportMetricArgs>> getMetrics() {
        return this.metrics;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="offset")
    private final @Nullable Input<String> offset;

    public Input<String> getOffset() {
        return this.offset == null ? Input.empty() : this.offset;
    }

    @InputImport(name="organizationId", required=true)
    private final Input<String> organizationId;

    public Input<String> getOrganizationId() {
        return this.organizationId;
    }

    @InputImport(name="properties")
    private final @Nullable Input<List<GoogleCloudApigeeV1ReportPropertyArgs>> properties;

    public Input<List<GoogleCloudApigeeV1ReportPropertyArgs>> getProperties() {
        return this.properties == null ? Input.empty() : this.properties;
    }

    @InputImport(name="sortByCols")
    private final @Nullable Input<List<String>> sortByCols;

    public Input<List<String>> getSortByCols() {
        return this.sortByCols == null ? Input.empty() : this.sortByCols;
    }

    @InputImport(name="sortOrder")
    private final @Nullable Input<String> sortOrder;

    public Input<String> getSortOrder() {
        return this.sortOrder == null ? Input.empty() : this.sortOrder;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<String>> tags;

    public Input<List<String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="timeUnit")
    private final @Nullable Input<String> timeUnit;

    public Input<String> getTimeUnit() {
        return this.timeUnit == null ? Input.empty() : this.timeUnit;
    }

    @InputImport(name="toTime")
    private final @Nullable Input<String> toTime;

    public Input<String> getToTime() {
        return this.toTime == null ? Input.empty() : this.toTime;
    }

    @InputImport(name="topk")
    private final @Nullable Input<String> topk;

    public Input<String> getTopk() {
        return this.topk == null ? Input.empty() : this.topk;
    }

    public ReportArgs(
        @Nullable Input<String> chartType,
        @Nullable Input<List<String>> comments,
        @Nullable Input<List<String>> dimensions,
        @Nullable Input<String> displayName,
        @Nullable Input<String> filter,
        @Nullable Input<String> fromTime,
        @Nullable Input<String> limit,
        Input<List<GoogleCloudApigeeV1CustomReportMetricArgs>> metrics,
        @Nullable Input<String> name,
        @Nullable Input<String> offset,
        Input<String> organizationId,
        @Nullable Input<List<GoogleCloudApigeeV1ReportPropertyArgs>> properties,
        @Nullable Input<List<String>> sortByCols,
        @Nullable Input<String> sortOrder,
        @Nullable Input<List<String>> tags,
        @Nullable Input<String> timeUnit,
        @Nullable Input<String> toTime,
        @Nullable Input<String> topk) {
        this.chartType = chartType;
        this.comments = comments;
        this.dimensions = dimensions;
        this.displayName = displayName;
        this.filter = filter;
        this.fromTime = fromTime;
        this.limit = limit;
        this.metrics = Objects.requireNonNull(metrics, "expected parameter 'metrics' to be non-null");
        this.name = name;
        this.offset = offset;
        this.organizationId = Objects.requireNonNull(organizationId, "expected parameter 'organizationId' to be non-null");
        this.properties = properties;
        this.sortByCols = sortByCols;
        this.sortOrder = sortOrder;
        this.tags = tags;
        this.timeUnit = timeUnit;
        this.toTime = toTime;
        this.topk = topk;
    }

    private ReportArgs() {
        this.chartType = Input.empty();
        this.comments = Input.empty();
        this.dimensions = Input.empty();
        this.displayName = Input.empty();
        this.filter = Input.empty();
        this.fromTime = Input.empty();
        this.limit = Input.empty();
        this.metrics = Input.empty();
        this.name = Input.empty();
        this.offset = Input.empty();
        this.organizationId = Input.empty();
        this.properties = Input.empty();
        this.sortByCols = Input.empty();
        this.sortOrder = Input.empty();
        this.tags = Input.empty();
        this.timeUnit = Input.empty();
        this.toTime = Input.empty();
        this.topk = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReportArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> chartType;
        private @Nullable Input<List<String>> comments;
        private @Nullable Input<List<String>> dimensions;
        private @Nullable Input<String> displayName;
        private @Nullable Input<String> filter;
        private @Nullable Input<String> fromTime;
        private @Nullable Input<String> limit;
        private Input<List<GoogleCloudApigeeV1CustomReportMetricArgs>> metrics;
        private @Nullable Input<String> name;
        private @Nullable Input<String> offset;
        private Input<String> organizationId;
        private @Nullable Input<List<GoogleCloudApigeeV1ReportPropertyArgs>> properties;
        private @Nullable Input<List<String>> sortByCols;
        private @Nullable Input<String> sortOrder;
        private @Nullable Input<List<String>> tags;
        private @Nullable Input<String> timeUnit;
        private @Nullable Input<String> toTime;
        private @Nullable Input<String> topk;

        public Builder() {
    	      // Empty
        }

        public Builder(ReportArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.chartType = defaults.chartType;
    	      this.comments = defaults.comments;
    	      this.dimensions = defaults.dimensions;
    	      this.displayName = defaults.displayName;
    	      this.filter = defaults.filter;
    	      this.fromTime = defaults.fromTime;
    	      this.limit = defaults.limit;
    	      this.metrics = defaults.metrics;
    	      this.name = defaults.name;
    	      this.offset = defaults.offset;
    	      this.organizationId = defaults.organizationId;
    	      this.properties = defaults.properties;
    	      this.sortByCols = defaults.sortByCols;
    	      this.sortOrder = defaults.sortOrder;
    	      this.tags = defaults.tags;
    	      this.timeUnit = defaults.timeUnit;
    	      this.toTime = defaults.toTime;
    	      this.topk = defaults.topk;
        }

        public Builder setChartType(@Nullable Input<String> chartType) {
            this.chartType = chartType;
            return this;
        }

        public Builder setChartType(@Nullable String chartType) {
            this.chartType = Input.ofNullable(chartType);
            return this;
        }

        public Builder setComments(@Nullable Input<List<String>> comments) {
            this.comments = comments;
            return this;
        }

        public Builder setComments(@Nullable List<String> comments) {
            this.comments = Input.ofNullable(comments);
            return this;
        }

        public Builder setDimensions(@Nullable Input<List<String>> dimensions) {
            this.dimensions = dimensions;
            return this;
        }

        public Builder setDimensions(@Nullable List<String> dimensions) {
            this.dimensions = Input.ofNullable(dimensions);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setFilter(@Nullable Input<String> filter) {
            this.filter = filter;
            return this;
        }

        public Builder setFilter(@Nullable String filter) {
            this.filter = Input.ofNullable(filter);
            return this;
        }

        public Builder setFromTime(@Nullable Input<String> fromTime) {
            this.fromTime = fromTime;
            return this;
        }

        public Builder setFromTime(@Nullable String fromTime) {
            this.fromTime = Input.ofNullable(fromTime);
            return this;
        }

        public Builder setLimit(@Nullable Input<String> limit) {
            this.limit = limit;
            return this;
        }

        public Builder setLimit(@Nullable String limit) {
            this.limit = Input.ofNullable(limit);
            return this;
        }

        public Builder setMetrics(Input<List<GoogleCloudApigeeV1CustomReportMetricArgs>> metrics) {
            this.metrics = Objects.requireNonNull(metrics);
            return this;
        }

        public Builder setMetrics(List<GoogleCloudApigeeV1CustomReportMetricArgs> metrics) {
            this.metrics = Input.of(Objects.requireNonNull(metrics));
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOffset(@Nullable Input<String> offset) {
            this.offset = offset;
            return this;
        }

        public Builder setOffset(@Nullable String offset) {
            this.offset = Input.ofNullable(offset);
            return this;
        }

        public Builder setOrganizationId(Input<String> organizationId) {
            this.organizationId = Objects.requireNonNull(organizationId);
            return this;
        }

        public Builder setOrganizationId(String organizationId) {
            this.organizationId = Input.of(Objects.requireNonNull(organizationId));
            return this;
        }

        public Builder setProperties(@Nullable Input<List<GoogleCloudApigeeV1ReportPropertyArgs>> properties) {
            this.properties = properties;
            return this;
        }

        public Builder setProperties(@Nullable List<GoogleCloudApigeeV1ReportPropertyArgs> properties) {
            this.properties = Input.ofNullable(properties);
            return this;
        }

        public Builder setSortByCols(@Nullable Input<List<String>> sortByCols) {
            this.sortByCols = sortByCols;
            return this;
        }

        public Builder setSortByCols(@Nullable List<String> sortByCols) {
            this.sortByCols = Input.ofNullable(sortByCols);
            return this;
        }

        public Builder setSortOrder(@Nullable Input<String> sortOrder) {
            this.sortOrder = sortOrder;
            return this;
        }

        public Builder setSortOrder(@Nullable String sortOrder) {
            this.sortOrder = Input.ofNullable(sortOrder);
            return this;
        }

        public Builder setTags(@Nullable Input<List<String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTimeUnit(@Nullable Input<String> timeUnit) {
            this.timeUnit = timeUnit;
            return this;
        }

        public Builder setTimeUnit(@Nullable String timeUnit) {
            this.timeUnit = Input.ofNullable(timeUnit);
            return this;
        }

        public Builder setToTime(@Nullable Input<String> toTime) {
            this.toTime = toTime;
            return this;
        }

        public Builder setToTime(@Nullable String toTime) {
            this.toTime = Input.ofNullable(toTime);
            return this;
        }

        public Builder setTopk(@Nullable Input<String> topk) {
            this.topk = topk;
            return this;
        }

        public Builder setTopk(@Nullable String topk) {
            this.topk = Input.ofNullable(topk);
            return this;
        }

        public ReportArgs build() {
            return new ReportArgs(chartType, comments, dimensions, displayName, filter, fromTime, limit, metrics, name, offset, organizationId, properties, sortByCols, sortOrder, tags, timeUnit, toTime, topk);
        }
    }
}
