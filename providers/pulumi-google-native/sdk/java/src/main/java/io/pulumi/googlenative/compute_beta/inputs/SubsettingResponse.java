// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class SubsettingResponse extends io.pulumi.resources.InvokeArgs {

    public static final SubsettingResponse Empty = new SubsettingResponse();

    @InputImport(name="policy", required=true)
    private final String policy;

    public String getPolicy() {
        return this.policy;
    }

    @InputImport(name="subsetSize", required=true)
    private final Integer subsetSize;

    public Integer getSubsetSize() {
        return this.subsetSize;
    }

    public SubsettingResponse(
        String policy,
        Integer subsetSize) {
        this.policy = Objects.requireNonNull(policy, "expected parameter 'policy' to be non-null");
        this.subsetSize = Objects.requireNonNull(subsetSize, "expected parameter 'subsetSize' to be non-null");
    }

    private SubsettingResponse() {
        this.policy = null;
        this.subsetSize = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubsettingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String policy;
        private Integer subsetSize;

        public Builder() {
    	      // Empty
        }

        public Builder(SubsettingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.policy = defaults.policy;
    	      this.subsetSize = defaults.subsetSize;
        }

        public Builder setPolicy(String policy) {
            this.policy = Objects.requireNonNull(policy);
            return this;
        }

        public Builder setSubsetSize(Integer subsetSize) {
            this.subsetSize = Objects.requireNonNull(subsetSize);
            return this;
        }

        public SubsettingResponse build() {
            return new SubsettingResponse(policy, subsetSize);
        }
    }
}
