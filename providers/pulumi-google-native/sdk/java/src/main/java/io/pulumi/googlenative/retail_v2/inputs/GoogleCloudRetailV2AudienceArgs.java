// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.retail_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An intended audience of the Product for whom it's sold.
 * 
 */
public final class GoogleCloudRetailV2AudienceArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudRetailV2AudienceArgs Empty = new GoogleCloudRetailV2AudienceArgs();

    /**
     * The age groups of the audience. Strongly encouraged to use the standard values: "newborn" (up to 3 months old), "infant" (3–12 months old), "toddler" (1–5 years old), "kids" (5–13 years old), "adult" (typically teens or older). At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [age_group](https://support.google.com/merchants/answer/6324463). Schema.org property [Product.audience.suggestedMinAge](https://schema.org/suggestedMinAge) and [Product.audience.suggestedMaxAge](https://schema.org/suggestedMaxAge).
     * 
     */
    @InputImport(name="ageGroups")
      private final @Nullable Input<List<String>> ageGroups;

    public Input<List<String>> getAgeGroups() {
        return this.ageGroups == null ? Input.empty() : this.ageGroups;
    }

    /**
     * The genders of the audience. Strongly encouraged to use the standard values: "male", "female", "unisex". At most 5 values are allowed. Each value must be a UTF-8 encoded string with a length limit of 128 characters. Otherwise, an INVALID_ARGUMENT error is returned. Google Merchant Center property [gender](https://support.google.com/merchants/answer/6324479). Schema.org property [Product.audience.suggestedGender](https://schema.org/suggestedGender).
     * 
     */
    @InputImport(name="genders")
      private final @Nullable Input<List<String>> genders;

    public Input<List<String>> getGenders() {
        return this.genders == null ? Input.empty() : this.genders;
    }

    public GoogleCloudRetailV2AudienceArgs(
        @Nullable Input<List<String>> ageGroups,
        @Nullable Input<List<String>> genders) {
        this.ageGroups = ageGroups;
        this.genders = genders;
    }

    private GoogleCloudRetailV2AudienceArgs() {
        this.ageGroups = Input.empty();
        this.genders = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudRetailV2AudienceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> ageGroups;
        private @Nullable Input<List<String>> genders;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudRetailV2AudienceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ageGroups = defaults.ageGroups;
    	      this.genders = defaults.genders;
        }

        public Builder setAgeGroups(@Nullable Input<List<String>> ageGroups) {
            this.ageGroups = ageGroups;
            return this;
        }

        public Builder setAgeGroups(@Nullable List<String> ageGroups) {
            this.ageGroups = Input.ofNullable(ageGroups);
            return this;
        }

        public Builder setGenders(@Nullable Input<List<String>> genders) {
            this.genders = genders;
            return this;
        }

        public Builder setGenders(@Nullable List<String> genders) {
            this.genders = Input.ofNullable(genders);
            return this;
        }
        public GoogleCloudRetailV2AudienceArgs build() {
            return new GoogleCloudRetailV2AudienceArgs(ageGroups, genders);
        }
    }
}
