// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudscheduler_v1beta1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.cloudscheduler_v1beta1.outputs.AppEngineHttpTargetResponse;
import io.pulumi.googlenative.cloudscheduler_v1beta1.outputs.HttpTargetResponse;
import io.pulumi.googlenative.cloudscheduler_v1beta1.outputs.PubsubTargetResponse;
import io.pulumi.googlenative.cloudscheduler_v1beta1.outputs.RetryConfigResponse;
import io.pulumi.googlenative.cloudscheduler_v1beta1.outputs.StatusResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class GetJobResult {
    private final AppEngineHttpTargetResponse appEngineHttpTarget;
    private final String attemptDeadline;
    private final String description;
    private final HttpTargetResponse httpTarget;
    private final String lastAttemptTime;
    private final Boolean legacyAppEngineCron;
    private final String name;
    private final PubsubTargetResponse pubsubTarget;
    private final RetryConfigResponse retryConfig;
    private final String schedule;
    private final String scheduleTime;
    private final String state;
    private final StatusResponse status;
    private final String timeZone;
    private final String userUpdateTime;

    @OutputCustomType.Constructor({"appEngineHttpTarget","attemptDeadline","description","httpTarget","lastAttemptTime","legacyAppEngineCron","name","pubsubTarget","retryConfig","schedule","scheduleTime","state","status","timeZone","userUpdateTime"})
    private GetJobResult(
        AppEngineHttpTargetResponse appEngineHttpTarget,
        String attemptDeadline,
        String description,
        HttpTargetResponse httpTarget,
        String lastAttemptTime,
        Boolean legacyAppEngineCron,
        String name,
        PubsubTargetResponse pubsubTarget,
        RetryConfigResponse retryConfig,
        String schedule,
        String scheduleTime,
        String state,
        StatusResponse status,
        String timeZone,
        String userUpdateTime) {
        this.appEngineHttpTarget = Objects.requireNonNull(appEngineHttpTarget);
        this.attemptDeadline = Objects.requireNonNull(attemptDeadline);
        this.description = Objects.requireNonNull(description);
        this.httpTarget = Objects.requireNonNull(httpTarget);
        this.lastAttemptTime = Objects.requireNonNull(lastAttemptTime);
        this.legacyAppEngineCron = Objects.requireNonNull(legacyAppEngineCron);
        this.name = Objects.requireNonNull(name);
        this.pubsubTarget = Objects.requireNonNull(pubsubTarget);
        this.retryConfig = Objects.requireNonNull(retryConfig);
        this.schedule = Objects.requireNonNull(schedule);
        this.scheduleTime = Objects.requireNonNull(scheduleTime);
        this.state = Objects.requireNonNull(state);
        this.status = Objects.requireNonNull(status);
        this.timeZone = Objects.requireNonNull(timeZone);
        this.userUpdateTime = Objects.requireNonNull(userUpdateTime);
    }

    public AppEngineHttpTargetResponse getAppEngineHttpTarget() {
        return this.appEngineHttpTarget;
    }
    public String getAttemptDeadline() {
        return this.attemptDeadline;
    }
    public String getDescription() {
        return this.description;
    }
    public HttpTargetResponse getHttpTarget() {
        return this.httpTarget;
    }
    public String getLastAttemptTime() {
        return this.lastAttemptTime;
    }
    public Boolean getLegacyAppEngineCron() {
        return this.legacyAppEngineCron;
    }
    public String getName() {
        return this.name;
    }
    public PubsubTargetResponse getPubsubTarget() {
        return this.pubsubTarget;
    }
    public RetryConfigResponse getRetryConfig() {
        return this.retryConfig;
    }
    public String getSchedule() {
        return this.schedule;
    }
    public String getScheduleTime() {
        return this.scheduleTime;
    }
    public String getState() {
        return this.state;
    }
    public StatusResponse getStatus() {
        return this.status;
    }
    public String getTimeZone() {
        return this.timeZone;
    }
    public String getUserUpdateTime() {
        return this.userUpdateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppEngineHttpTargetResponse appEngineHttpTarget;
        private String attemptDeadline;
        private String description;
        private HttpTargetResponse httpTarget;
        private String lastAttemptTime;
        private Boolean legacyAppEngineCron;
        private String name;
        private PubsubTargetResponse pubsubTarget;
        private RetryConfigResponse retryConfig;
        private String schedule;
        private String scheduleTime;
        private String state;
        private StatusResponse status;
        private String timeZone;
        private String userUpdateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetJobResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appEngineHttpTarget = defaults.appEngineHttpTarget;
    	      this.attemptDeadline = defaults.attemptDeadline;
    	      this.description = defaults.description;
    	      this.httpTarget = defaults.httpTarget;
    	      this.lastAttemptTime = defaults.lastAttemptTime;
    	      this.legacyAppEngineCron = defaults.legacyAppEngineCron;
    	      this.name = defaults.name;
    	      this.pubsubTarget = defaults.pubsubTarget;
    	      this.retryConfig = defaults.retryConfig;
    	      this.schedule = defaults.schedule;
    	      this.scheduleTime = defaults.scheduleTime;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.timeZone = defaults.timeZone;
    	      this.userUpdateTime = defaults.userUpdateTime;
        }

        public Builder setAppEngineHttpTarget(AppEngineHttpTargetResponse appEngineHttpTarget) {
            this.appEngineHttpTarget = Objects.requireNonNull(appEngineHttpTarget);
            return this;
        }

        public Builder setAttemptDeadline(String attemptDeadline) {
            this.attemptDeadline = Objects.requireNonNull(attemptDeadline);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setHttpTarget(HttpTargetResponse httpTarget) {
            this.httpTarget = Objects.requireNonNull(httpTarget);
            return this;
        }

        public Builder setLastAttemptTime(String lastAttemptTime) {
            this.lastAttemptTime = Objects.requireNonNull(lastAttemptTime);
            return this;
        }

        public Builder setLegacyAppEngineCron(Boolean legacyAppEngineCron) {
            this.legacyAppEngineCron = Objects.requireNonNull(legacyAppEngineCron);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPubsubTarget(PubsubTargetResponse pubsubTarget) {
            this.pubsubTarget = Objects.requireNonNull(pubsubTarget);
            return this;
        }

        public Builder setRetryConfig(RetryConfigResponse retryConfig) {
            this.retryConfig = Objects.requireNonNull(retryConfig);
            return this;
        }

        public Builder setSchedule(String schedule) {
            this.schedule = Objects.requireNonNull(schedule);
            return this;
        }

        public Builder setScheduleTime(String scheduleTime) {
            this.scheduleTime = Objects.requireNonNull(scheduleTime);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setStatus(StatusResponse status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setTimeZone(String timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }

        public Builder setUserUpdateTime(String userUpdateTime) {
            this.userUpdateTime = Objects.requireNonNull(userUpdateTime);
            return this;
        }

        public GetJobResult build() {
            return new GetJobResult(appEngineHttpTarget, attemptDeadline, description, httpTarget, lastAttemptTime, legacyAppEngineCron, name, pubsubTarget, retryConfig, schedule, scheduleTime, state, status, timeZone, userUpdateTime);
        }
    }
}
