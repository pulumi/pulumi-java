// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.appengine_v1beta.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.appengine_v1beta.outputs.CpuUtilizationResponse;
import io.pulumi.googlenative.appengine_v1beta.outputs.CustomMetricResponse;
import io.pulumi.googlenative.appengine_v1beta.outputs.DiskUtilizationResponse;
import io.pulumi.googlenative.appengine_v1beta.outputs.NetworkUtilizationResponse;
import io.pulumi.googlenative.appengine_v1beta.outputs.RequestUtilizationResponse;
import io.pulumi.googlenative.appengine_v1beta.outputs.StandardSchedulerSettingsResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class AutomaticScalingResponse {
    private final String coolDownPeriod;
    private final CpuUtilizationResponse cpuUtilization;
    private final List<CustomMetricResponse> customMetrics;
    private final DiskUtilizationResponse diskUtilization;
    private final Integer maxConcurrentRequests;
    private final Integer maxIdleInstances;
    private final String maxPendingLatency;
    private final Integer maxTotalInstances;
    private final Integer minIdleInstances;
    private final String minPendingLatency;
    private final Integer minTotalInstances;
    private final NetworkUtilizationResponse networkUtilization;
    private final RequestUtilizationResponse requestUtilization;
    private final StandardSchedulerSettingsResponse standardSchedulerSettings;

    @OutputCustomType.Constructor({"coolDownPeriod","cpuUtilization","customMetrics","diskUtilization","maxConcurrentRequests","maxIdleInstances","maxPendingLatency","maxTotalInstances","minIdleInstances","minPendingLatency","minTotalInstances","networkUtilization","requestUtilization","standardSchedulerSettings"})
    private AutomaticScalingResponse(
        String coolDownPeriod,
        CpuUtilizationResponse cpuUtilization,
        List<CustomMetricResponse> customMetrics,
        DiskUtilizationResponse diskUtilization,
        Integer maxConcurrentRequests,
        Integer maxIdleInstances,
        String maxPendingLatency,
        Integer maxTotalInstances,
        Integer minIdleInstances,
        String minPendingLatency,
        Integer minTotalInstances,
        NetworkUtilizationResponse networkUtilization,
        RequestUtilizationResponse requestUtilization,
        StandardSchedulerSettingsResponse standardSchedulerSettings) {
        this.coolDownPeriod = Objects.requireNonNull(coolDownPeriod);
        this.cpuUtilization = Objects.requireNonNull(cpuUtilization);
        this.customMetrics = Objects.requireNonNull(customMetrics);
        this.diskUtilization = Objects.requireNonNull(diskUtilization);
        this.maxConcurrentRequests = Objects.requireNonNull(maxConcurrentRequests);
        this.maxIdleInstances = Objects.requireNonNull(maxIdleInstances);
        this.maxPendingLatency = Objects.requireNonNull(maxPendingLatency);
        this.maxTotalInstances = Objects.requireNonNull(maxTotalInstances);
        this.minIdleInstances = Objects.requireNonNull(minIdleInstances);
        this.minPendingLatency = Objects.requireNonNull(minPendingLatency);
        this.minTotalInstances = Objects.requireNonNull(minTotalInstances);
        this.networkUtilization = Objects.requireNonNull(networkUtilization);
        this.requestUtilization = Objects.requireNonNull(requestUtilization);
        this.standardSchedulerSettings = Objects.requireNonNull(standardSchedulerSettings);
    }

    public String getCoolDownPeriod() {
        return this.coolDownPeriod;
    }
    public CpuUtilizationResponse getCpuUtilization() {
        return this.cpuUtilization;
    }
    public List<CustomMetricResponse> getCustomMetrics() {
        return this.customMetrics;
    }
    public DiskUtilizationResponse getDiskUtilization() {
        return this.diskUtilization;
    }
    public Integer getMaxConcurrentRequests() {
        return this.maxConcurrentRequests;
    }
    public Integer getMaxIdleInstances() {
        return this.maxIdleInstances;
    }
    public String getMaxPendingLatency() {
        return this.maxPendingLatency;
    }
    public Integer getMaxTotalInstances() {
        return this.maxTotalInstances;
    }
    public Integer getMinIdleInstances() {
        return this.minIdleInstances;
    }
    public String getMinPendingLatency() {
        return this.minPendingLatency;
    }
    public Integer getMinTotalInstances() {
        return this.minTotalInstances;
    }
    public NetworkUtilizationResponse getNetworkUtilization() {
        return this.networkUtilization;
    }
    public RequestUtilizationResponse getRequestUtilization() {
        return this.requestUtilization;
    }
    public StandardSchedulerSettingsResponse getStandardSchedulerSettings() {
        return this.standardSchedulerSettings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AutomaticScalingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String coolDownPeriod;
        private CpuUtilizationResponse cpuUtilization;
        private List<CustomMetricResponse> customMetrics;
        private DiskUtilizationResponse diskUtilization;
        private Integer maxConcurrentRequests;
        private Integer maxIdleInstances;
        private String maxPendingLatency;
        private Integer maxTotalInstances;
        private Integer minIdleInstances;
        private String minPendingLatency;
        private Integer minTotalInstances;
        private NetworkUtilizationResponse networkUtilization;
        private RequestUtilizationResponse requestUtilization;
        private StandardSchedulerSettingsResponse standardSchedulerSettings;

        public Builder() {
    	      // Empty
        }

        public Builder(AutomaticScalingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.coolDownPeriod = defaults.coolDownPeriod;
    	      this.cpuUtilization = defaults.cpuUtilization;
    	      this.customMetrics = defaults.customMetrics;
    	      this.diskUtilization = defaults.diskUtilization;
    	      this.maxConcurrentRequests = defaults.maxConcurrentRequests;
    	      this.maxIdleInstances = defaults.maxIdleInstances;
    	      this.maxPendingLatency = defaults.maxPendingLatency;
    	      this.maxTotalInstances = defaults.maxTotalInstances;
    	      this.minIdleInstances = defaults.minIdleInstances;
    	      this.minPendingLatency = defaults.minPendingLatency;
    	      this.minTotalInstances = defaults.minTotalInstances;
    	      this.networkUtilization = defaults.networkUtilization;
    	      this.requestUtilization = defaults.requestUtilization;
    	      this.standardSchedulerSettings = defaults.standardSchedulerSettings;
        }

        public Builder setCoolDownPeriod(String coolDownPeriod) {
            this.coolDownPeriod = Objects.requireNonNull(coolDownPeriod);
            return this;
        }

        public Builder setCpuUtilization(CpuUtilizationResponse cpuUtilization) {
            this.cpuUtilization = Objects.requireNonNull(cpuUtilization);
            return this;
        }

        public Builder setCustomMetrics(List<CustomMetricResponse> customMetrics) {
            this.customMetrics = Objects.requireNonNull(customMetrics);
            return this;
        }

        public Builder setDiskUtilization(DiskUtilizationResponse diskUtilization) {
            this.diskUtilization = Objects.requireNonNull(diskUtilization);
            return this;
        }

        public Builder setMaxConcurrentRequests(Integer maxConcurrentRequests) {
            this.maxConcurrentRequests = Objects.requireNonNull(maxConcurrentRequests);
            return this;
        }

        public Builder setMaxIdleInstances(Integer maxIdleInstances) {
            this.maxIdleInstances = Objects.requireNonNull(maxIdleInstances);
            return this;
        }

        public Builder setMaxPendingLatency(String maxPendingLatency) {
            this.maxPendingLatency = Objects.requireNonNull(maxPendingLatency);
            return this;
        }

        public Builder setMaxTotalInstances(Integer maxTotalInstances) {
            this.maxTotalInstances = Objects.requireNonNull(maxTotalInstances);
            return this;
        }

        public Builder setMinIdleInstances(Integer minIdleInstances) {
            this.minIdleInstances = Objects.requireNonNull(minIdleInstances);
            return this;
        }

        public Builder setMinPendingLatency(String minPendingLatency) {
            this.minPendingLatency = Objects.requireNonNull(minPendingLatency);
            return this;
        }

        public Builder setMinTotalInstances(Integer minTotalInstances) {
            this.minTotalInstances = Objects.requireNonNull(minTotalInstances);
            return this;
        }

        public Builder setNetworkUtilization(NetworkUtilizationResponse networkUtilization) {
            this.networkUtilization = Objects.requireNonNull(networkUtilization);
            return this;
        }

        public Builder setRequestUtilization(RequestUtilizationResponse requestUtilization) {
            this.requestUtilization = Objects.requireNonNull(requestUtilization);
            return this;
        }

        public Builder setStandardSchedulerSettings(StandardSchedulerSettingsResponse standardSchedulerSettings) {
            this.standardSchedulerSettings = Objects.requireNonNull(standardSchedulerSettings);
            return this;
        }

        public AutomaticScalingResponse build() {
            return new AutomaticScalingResponse(coolDownPeriod, cpuUtilization, customMetrics, diskUtilization, maxConcurrentRequests, maxIdleInstances, maxPendingLatency, maxTotalInstances, minIdleInstances, minPendingLatency, minTotalInstances, networkUtilization, requestUtilization, standardSchedulerSettings);
        }
    }
}
