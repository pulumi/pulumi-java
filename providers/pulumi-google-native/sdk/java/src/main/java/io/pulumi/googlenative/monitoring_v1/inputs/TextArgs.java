// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.monitoring_v1.enums.TextFormat;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A widget that displays textual content.
 * 
 */
public final class TextArgs extends io.pulumi.resources.ResourceArgs {

    public static final TextArgs Empty = new TextArgs();

    /**
     * The text content to be displayed.
     * 
     */
    @InputImport(name="content")
      private final @Nullable Input<String> content;

    public Input<String> getContent() {
        return this.content == null ? Input.empty() : this.content;
    }

    /**
     * How the text content is formatted.
     * 
     */
    @InputImport(name="format")
      private final @Nullable Input<TextFormat> format;

    public Input<TextFormat> getFormat() {
        return this.format == null ? Input.empty() : this.format;
    }

    public TextArgs(
        @Nullable Input<String> content,
        @Nullable Input<TextFormat> format) {
        this.content = content;
        this.format = format;
    }

    private TextArgs() {
        this.content = Input.empty();
        this.format = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> content;
        private @Nullable Input<TextFormat> format;

        public Builder() {
    	      // Empty
        }

        public Builder(TextArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.content = defaults.content;
    	      this.format = defaults.format;
        }

        public Builder setContent(@Nullable Input<String> content) {
            this.content = content;
            return this;
        }

        public Builder setContent(@Nullable String content) {
            this.content = Input.ofNullable(content);
            return this;
        }

        public Builder setFormat(@Nullable Input<TextFormat> format) {
            this.format = format;
            return this;
        }

        public Builder setFormat(@Nullable TextFormat format) {
            this.format = Input.ofNullable(format);
            return this;
        }
        public TextArgs build() {
            return new TextArgs(content, format);
        }
    }
}
