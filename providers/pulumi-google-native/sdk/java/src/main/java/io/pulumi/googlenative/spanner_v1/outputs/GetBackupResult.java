// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.spanner_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.spanner_v1.outputs.EncryptionInfoResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetBackupResult {
    private final String createTime;
    private final String database;
    private final String databaseDialect;
    private final EncryptionInfoResponse encryptionInfo;
    private final String expireTime;
    private final String name;
    private final List<String> referencingDatabases;
    private final String sizeBytes;
    private final String state;
    private final String versionTime;

    @OutputCustomType.Constructor({"createTime","database","databaseDialect","encryptionInfo","expireTime","name","referencingDatabases","sizeBytes","state","versionTime"})
    private GetBackupResult(
        String createTime,
        String database,
        String databaseDialect,
        EncryptionInfoResponse encryptionInfo,
        String expireTime,
        String name,
        List<String> referencingDatabases,
        String sizeBytes,
        String state,
        String versionTime) {
        this.createTime = Objects.requireNonNull(createTime);
        this.database = Objects.requireNonNull(database);
        this.databaseDialect = Objects.requireNonNull(databaseDialect);
        this.encryptionInfo = Objects.requireNonNull(encryptionInfo);
        this.expireTime = Objects.requireNonNull(expireTime);
        this.name = Objects.requireNonNull(name);
        this.referencingDatabases = Objects.requireNonNull(referencingDatabases);
        this.sizeBytes = Objects.requireNonNull(sizeBytes);
        this.state = Objects.requireNonNull(state);
        this.versionTime = Objects.requireNonNull(versionTime);
    }

    public String getCreateTime() {
        return this.createTime;
    }
    public String getDatabase() {
        return this.database;
    }
    public String getDatabaseDialect() {
        return this.databaseDialect;
    }
    public EncryptionInfoResponse getEncryptionInfo() {
        return this.encryptionInfo;
    }
    public String getExpireTime() {
        return this.expireTime;
    }
    public String getName() {
        return this.name;
    }
    public List<String> getReferencingDatabases() {
        return this.referencingDatabases;
    }
    public String getSizeBytes() {
        return this.sizeBytes;
    }
    public String getState() {
        return this.state;
    }
    public String getVersionTime() {
        return this.versionTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String createTime;
        private String database;
        private String databaseDialect;
        private EncryptionInfoResponse encryptionInfo;
        private String expireTime;
        private String name;
        private List<String> referencingDatabases;
        private String sizeBytes;
        private String state;
        private String versionTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBackupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createTime = defaults.createTime;
    	      this.database = defaults.database;
    	      this.databaseDialect = defaults.databaseDialect;
    	      this.encryptionInfo = defaults.encryptionInfo;
    	      this.expireTime = defaults.expireTime;
    	      this.name = defaults.name;
    	      this.referencingDatabases = defaults.referencingDatabases;
    	      this.sizeBytes = defaults.sizeBytes;
    	      this.state = defaults.state;
    	      this.versionTime = defaults.versionTime;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setDatabase(String database) {
            this.database = Objects.requireNonNull(database);
            return this;
        }

        public Builder setDatabaseDialect(String databaseDialect) {
            this.databaseDialect = Objects.requireNonNull(databaseDialect);
            return this;
        }

        public Builder setEncryptionInfo(EncryptionInfoResponse encryptionInfo) {
            this.encryptionInfo = Objects.requireNonNull(encryptionInfo);
            return this;
        }

        public Builder setExpireTime(String expireTime) {
            this.expireTime = Objects.requireNonNull(expireTime);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setReferencingDatabases(List<String> referencingDatabases) {
            this.referencingDatabases = Objects.requireNonNull(referencingDatabases);
            return this;
        }

        public Builder setSizeBytes(String sizeBytes) {
            this.sizeBytes = Objects.requireNonNull(sizeBytes);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setVersionTime(String versionTime) {
            this.versionTime = Objects.requireNonNull(versionTime);
            return this;
        }

        public GetBackupResult build() {
            return new GetBackupResult(createTime, database, databaseDialect, encryptionInfo, expireTime, name, referencingDatabases, sizeBytes, state, versionTime);
        }
    }
}
