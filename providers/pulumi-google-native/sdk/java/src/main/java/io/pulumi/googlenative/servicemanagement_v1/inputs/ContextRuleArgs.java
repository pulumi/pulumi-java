// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A context rule provides information about the context for an individual API element.
 * 
 */
public final class ContextRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContextRuleArgs Empty = new ContextRuleArgs();

    /**
     * A list of full type names or extension IDs of extensions allowed in grpc side channel from client to backend.
     * 
     */
    @Import(name="allowedRequestExtensions")
      private final @Nullable Output<List<String>> allowedRequestExtensions;

    public Output<List<String>> allowedRequestExtensions() {
        return this.allowedRequestExtensions == null ? Codegen.empty() : this.allowedRequestExtensions;
    }

    /**
     * A list of full type names or extension IDs of extensions allowed in grpc side channel from backend to client.
     * 
     */
    @Import(name="allowedResponseExtensions")
      private final @Nullable Output<List<String>> allowedResponseExtensions;

    public Output<List<String>> allowedResponseExtensions() {
        return this.allowedResponseExtensions == null ? Codegen.empty() : this.allowedResponseExtensions;
    }

    /**
     * A list of full type names of provided contexts.
     * 
     */
    @Import(name="provided")
      private final @Nullable Output<List<String>> provided;

    public Output<List<String>> provided() {
        return this.provided == null ? Codegen.empty() : this.provided;
    }

    /**
     * A list of full type names of requested contexts.
     * 
     */
    @Import(name="requested")
      private final @Nullable Output<List<String>> requested;

    public Output<List<String>> requested() {
        return this.requested == null ? Codegen.empty() : this.requested;
    }

    /**
     * Selects the methods to which this rule applies. Refer to selector for syntax details.
     * 
     */
    @Import(name="selector")
      private final @Nullable Output<String> selector;

    public Output<String> selector() {
        return this.selector == null ? Codegen.empty() : this.selector;
    }

    public ContextRuleArgs(
        @Nullable Output<List<String>> allowedRequestExtensions,
        @Nullable Output<List<String>> allowedResponseExtensions,
        @Nullable Output<List<String>> provided,
        @Nullable Output<List<String>> requested,
        @Nullable Output<String> selector) {
        this.allowedRequestExtensions = allowedRequestExtensions;
        this.allowedResponseExtensions = allowedResponseExtensions;
        this.provided = provided;
        this.requested = requested;
        this.selector = selector;
    }

    private ContextRuleArgs() {
        this.allowedRequestExtensions = Codegen.empty();
        this.allowedResponseExtensions = Codegen.empty();
        this.provided = Codegen.empty();
        this.requested = Codegen.empty();
        this.selector = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContextRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> allowedRequestExtensions;
        private @Nullable Output<List<String>> allowedResponseExtensions;
        private @Nullable Output<List<String>> provided;
        private @Nullable Output<List<String>> requested;
        private @Nullable Output<String> selector;

        public Builder() {
    	      // Empty
        }

        public Builder(ContextRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedRequestExtensions = defaults.allowedRequestExtensions;
    	      this.allowedResponseExtensions = defaults.allowedResponseExtensions;
    	      this.provided = defaults.provided;
    	      this.requested = defaults.requested;
    	      this.selector = defaults.selector;
        }

        public Builder allowedRequestExtensions(@Nullable Output<List<String>> allowedRequestExtensions) {
            this.allowedRequestExtensions = allowedRequestExtensions;
            return this;
        }
        public Builder allowedRequestExtensions(@Nullable List<String> allowedRequestExtensions) {
            this.allowedRequestExtensions = Codegen.ofNullable(allowedRequestExtensions);
            return this;
        }
        public Builder allowedRequestExtensions(String... allowedRequestExtensions) {
            return allowedRequestExtensions(List.of(allowedRequestExtensions));
        }
        public Builder allowedResponseExtensions(@Nullable Output<List<String>> allowedResponseExtensions) {
            this.allowedResponseExtensions = allowedResponseExtensions;
            return this;
        }
        public Builder allowedResponseExtensions(@Nullable List<String> allowedResponseExtensions) {
            this.allowedResponseExtensions = Codegen.ofNullable(allowedResponseExtensions);
            return this;
        }
        public Builder allowedResponseExtensions(String... allowedResponseExtensions) {
            return allowedResponseExtensions(List.of(allowedResponseExtensions));
        }
        public Builder provided(@Nullable Output<List<String>> provided) {
            this.provided = provided;
            return this;
        }
        public Builder provided(@Nullable List<String> provided) {
            this.provided = Codegen.ofNullable(provided);
            return this;
        }
        public Builder provided(String... provided) {
            return provided(List.of(provided));
        }
        public Builder requested(@Nullable Output<List<String>> requested) {
            this.requested = requested;
            return this;
        }
        public Builder requested(@Nullable List<String> requested) {
            this.requested = Codegen.ofNullable(requested);
            return this;
        }
        public Builder requested(String... requested) {
            return requested(List.of(requested));
        }
        public Builder selector(@Nullable Output<String> selector) {
            this.selector = selector;
            return this;
        }
        public Builder selector(@Nullable String selector) {
            this.selector = Codegen.ofNullable(selector);
            return this;
        }        public ContextRuleArgs build() {
            return new ContextRuleArgs(allowedRequestExtensions, allowedResponseExtensions, provided, requested, selector);
        }
    }
}
