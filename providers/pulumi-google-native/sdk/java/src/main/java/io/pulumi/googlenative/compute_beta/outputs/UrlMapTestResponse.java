// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_beta.outputs.UrlMapTestHeaderResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class UrlMapTestResponse {
    private final String description;
    private final String expectedOutputUrl;
    private final Integer expectedRedirectResponseCode;
    private final List<UrlMapTestHeaderResponse> headers;
    private final String host;
    private final String path;
    private final String service;

    @OutputCustomType.Constructor({"description","expectedOutputUrl","expectedRedirectResponseCode","headers","host","path","service"})
    private UrlMapTestResponse(
        String description,
        String expectedOutputUrl,
        Integer expectedRedirectResponseCode,
        List<UrlMapTestHeaderResponse> headers,
        String host,
        String path,
        String service) {
        this.description = Objects.requireNonNull(description);
        this.expectedOutputUrl = Objects.requireNonNull(expectedOutputUrl);
        this.expectedRedirectResponseCode = Objects.requireNonNull(expectedRedirectResponseCode);
        this.headers = Objects.requireNonNull(headers);
        this.host = Objects.requireNonNull(host);
        this.path = Objects.requireNonNull(path);
        this.service = Objects.requireNonNull(service);
    }

    public String getDescription() {
        return this.description;
    }
    public String getExpectedOutputUrl() {
        return this.expectedOutputUrl;
    }
    public Integer getExpectedRedirectResponseCode() {
        return this.expectedRedirectResponseCode;
    }
    public List<UrlMapTestHeaderResponse> getHeaders() {
        return this.headers;
    }
    public String getHost() {
        return this.host;
    }
    public String getPath() {
        return this.path;
    }
    public String getService() {
        return this.service;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UrlMapTestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String description;
        private String expectedOutputUrl;
        private Integer expectedRedirectResponseCode;
        private List<UrlMapTestHeaderResponse> headers;
        private String host;
        private String path;
        private String service;

        public Builder() {
    	      // Empty
        }

        public Builder(UrlMapTestResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.expectedOutputUrl = defaults.expectedOutputUrl;
    	      this.expectedRedirectResponseCode = defaults.expectedRedirectResponseCode;
    	      this.headers = defaults.headers;
    	      this.host = defaults.host;
    	      this.path = defaults.path;
    	      this.service = defaults.service;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setExpectedOutputUrl(String expectedOutputUrl) {
            this.expectedOutputUrl = Objects.requireNonNull(expectedOutputUrl);
            return this;
        }

        public Builder setExpectedRedirectResponseCode(Integer expectedRedirectResponseCode) {
            this.expectedRedirectResponseCode = Objects.requireNonNull(expectedRedirectResponseCode);
            return this;
        }

        public Builder setHeaders(List<UrlMapTestHeaderResponse> headers) {
            this.headers = Objects.requireNonNull(headers);
            return this;
        }

        public Builder setHost(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }

        public Builder setPath(String path) {
            this.path = Objects.requireNonNull(path);
            return this;
        }

        public Builder setService(String service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }

        public UrlMapTestResponse build() {
            return new UrlMapTestResponse(description, expectedOutputUrl, expectedRedirectResponseCode, headers, host, path, service);
        }
    }
}
