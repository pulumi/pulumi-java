// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datafusion_v1beta1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.datafusion_v1beta1.InstanceArgs;
import io.pulumi.googlenative.datafusion_v1beta1.outputs.AcceleratorResponse;
import io.pulumi.googlenative.datafusion_v1beta1.outputs.CryptoKeyConfigResponse;
import io.pulumi.googlenative.datafusion_v1beta1.outputs.NetworkConfigResponse;
import io.pulumi.googlenative.datafusion_v1beta1.outputs.VersionResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:datafusion/v1beta1:Instance")
public class Instance extends io.pulumi.resources.CustomResource {
    @OutputExport(name="accelerators", type=List.class, parameters={AcceleratorResponse.class})
    private Output<List<AcceleratorResponse>> accelerators;

    public Output<List<AcceleratorResponse>> getAccelerators() {
        return this.accelerators;
    }
    @OutputExport(name="apiEndpoint", type=String.class, parameters={})
    private Output<String> apiEndpoint;

    public Output<String> getApiEndpoint() {
        return this.apiEndpoint;
    }
    @OutputExport(name="availableVersion", type=List.class, parameters={VersionResponse.class})
    private Output<List<VersionResponse>> availableVersion;

    public Output<List<VersionResponse>> getAvailableVersion() {
        return this.availableVersion;
    }
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime;
    }
    @OutputExport(name="cryptoKeyConfig", type=CryptoKeyConfigResponse.class, parameters={})
    private Output<CryptoKeyConfigResponse> cryptoKeyConfig;

    public Output<CryptoKeyConfigResponse> getCryptoKeyConfig() {
        return this.cryptoKeyConfig;
    }
    @OutputExport(name="dataprocServiceAccount", type=String.class, parameters={})
    private Output<String> dataprocServiceAccount;

    public Output<String> getDataprocServiceAccount() {
        return this.dataprocServiceAccount;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output<String> description;

    public Output<String> getDescription() {
        return this.description;
    }
    @OutputExport(name="disabledReason", type=List.class, parameters={String.class})
    private Output<List<String>> disabledReason;

    public Output<List<String>> getDisabledReason() {
        return this.disabledReason;
    }
    @OutputExport(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    public Output<String> getDisplayName() {
        return this.displayName;
    }
    @OutputExport(name="enableRbac", type=Boolean.class, parameters={})
    private Output<Boolean> enableRbac;

    public Output<Boolean> getEnableRbac() {
        return this.enableRbac;
    }
    @OutputExport(name="enableStackdriverLogging", type=Boolean.class, parameters={})
    private Output<Boolean> enableStackdriverLogging;

    public Output<Boolean> getEnableStackdriverLogging() {
        return this.enableStackdriverLogging;
    }
    @OutputExport(name="enableStackdriverMonitoring", type=Boolean.class, parameters={})
    private Output<Boolean> enableStackdriverMonitoring;

    public Output<Boolean> getEnableStackdriverMonitoring() {
        return this.enableStackdriverMonitoring;
    }
    @OutputExport(name="gcsBucket", type=String.class, parameters={})
    private Output<String> gcsBucket;

    public Output<String> getGcsBucket() {
        return this.gcsBucket;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="networkConfig", type=NetworkConfigResponse.class, parameters={})
    private Output<NetworkConfigResponse> networkConfig;

    public Output<NetworkConfigResponse> getNetworkConfig() {
        return this.networkConfig;
    }
    @OutputExport(name="options", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> options;

    public Output<Map<String,String>> getOptions() {
        return this.options;
    }
    @OutputExport(name="p4ServiceAccount", type=String.class, parameters={})
    private Output<String> p4ServiceAccount;

    public Output<String> getP4ServiceAccount() {
        return this.p4ServiceAccount;
    }
    @OutputExport(name="privateInstance", type=Boolean.class, parameters={})
    private Output<Boolean> privateInstance;

    public Output<Boolean> getPrivateInstance() {
        return this.privateInstance;
    }
    @OutputExport(name="serviceEndpoint", type=String.class, parameters={})
    private Output<String> serviceEndpoint;

    public Output<String> getServiceEndpoint() {
        return this.serviceEndpoint;
    }
    @OutputExport(name="state", type=String.class, parameters={})
    private Output<String> state;

    public Output<String> getState() {
        return this.state;
    }
    @OutputExport(name="stateMessage", type=String.class, parameters={})
    private Output<String> stateMessage;

    public Output<String> getStateMessage() {
        return this.stateMessage;
    }
    @OutputExport(name="tenantProjectId", type=String.class, parameters={})
    private Output<String> tenantProjectId;

    public Output<String> getTenantProjectId() {
        return this.tenantProjectId;
    }
    @OutputExport(name="type", type=String.class, parameters={})
    private Output<String> type;

    public Output<String> getType() {
        return this.type;
    }
    @OutputExport(name="updateTime", type=String.class, parameters={})
    private Output<String> updateTime;

    public Output<String> getUpdateTime() {
        return this.updateTime;
    }
    @OutputExport(name="version", type=String.class, parameters={})
    private Output<String> version;

    public Output<String> getVersion() {
        return this.version;
    }
    @OutputExport(name="zone", type=String.class, parameters={})
    private Output<String> zone;

    public Output<String> getZone() {
        return this.zone;
    }

    public Instance(String name, InstanceArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:datafusion/v1beta1:Instance", name, args == null ? InstanceArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Instance(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:datafusion/v1beta1:Instance", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Instance get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Instance(name, id, options);
    }
}
