// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.appengine_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class ZipInfoResponse extends io.pulumi.resources.InvokeArgs {

    public static final ZipInfoResponse Empty = new ZipInfoResponse();

    @InputImport(name="filesCount", required=true)
    private final Integer filesCount;

    public Integer getFilesCount() {
        return this.filesCount;
    }

    @InputImport(name="sourceUrl", required=true)
    private final String sourceUrl;

    public String getSourceUrl() {
        return this.sourceUrl;
    }

    public ZipInfoResponse(
        Integer filesCount,
        String sourceUrl) {
        this.filesCount = Objects.requireNonNull(filesCount, "expected parameter 'filesCount' to be non-null");
        this.sourceUrl = Objects.requireNonNull(sourceUrl, "expected parameter 'sourceUrl' to be non-null");
    }

    private ZipInfoResponse() {
        this.filesCount = null;
        this.sourceUrl = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ZipInfoResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer filesCount;
        private String sourceUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(ZipInfoResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filesCount = defaults.filesCount;
    	      this.sourceUrl = defaults.sourceUrl;
        }

        public Builder setFilesCount(Integer filesCount) {
            this.filesCount = Objects.requireNonNull(filesCount);
            return this;
        }

        public Builder setSourceUrl(String sourceUrl) {
            this.sourceUrl = Objects.requireNonNull(sourceUrl);
            return this;
        }

        public ZipInfoResponse build() {
            return new ZipInfoResponse(filesCount, sourceUrl);
        }
    }
}
