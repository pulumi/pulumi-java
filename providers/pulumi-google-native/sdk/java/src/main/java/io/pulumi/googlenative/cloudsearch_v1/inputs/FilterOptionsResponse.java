// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudsearch_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.cloudsearch_v1.inputs.FilterResponse;
import java.lang.String;
import java.util.Objects;


public final class FilterOptionsResponse extends io.pulumi.resources.InvokeArgs {

    public static final FilterOptionsResponse Empty = new FilterOptionsResponse();

    @InputImport(name="filter", required=true)
    private final FilterResponse filter;

    public FilterResponse getFilter() {
        return this.filter;
    }

    @InputImport(name="objectType", required=true)
    private final String objectType;

    public String getObjectType() {
        return this.objectType;
    }

    public FilterOptionsResponse(
        FilterResponse filter,
        String objectType) {
        this.filter = Objects.requireNonNull(filter, "expected parameter 'filter' to be non-null");
        this.objectType = Objects.requireNonNull(objectType, "expected parameter 'objectType' to be non-null");
    }

    private FilterOptionsResponse() {
        this.filter = null;
        this.objectType = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FilterOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FilterResponse filter;
        private String objectType;

        public Builder() {
    	      // Empty
        }

        public Builder(FilterOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filter = defaults.filter;
    	      this.objectType = defaults.objectType;
        }

        public Builder setFilter(FilterResponse filter) {
            this.filter = Objects.requireNonNull(filter);
            return this;
        }

        public Builder setObjectType(String objectType) {
            this.objectType = Objects.requireNonNull(objectType);
            return this;
        }

        public FilterOptionsResponse build() {
            return new FilterOptionsResponse(filter, objectType);
        }
    }
}
