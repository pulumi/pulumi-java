// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class ImageRawDiskResponse extends io.pulumi.resources.InvokeArgs {

    public static final ImageRawDiskResponse Empty = new ImageRawDiskResponse();

    @InputImport(name="containerType", required=true)
    private final String containerType;

    public String getContainerType() {
        return this.containerType;
    }

    @InputImport(name="source", required=true)
    private final String source;

    public String getSource() {
        return this.source;
    }

    public ImageRawDiskResponse(
        String containerType,
        String source) {
        this.containerType = Objects.requireNonNull(containerType, "expected parameter 'containerType' to be non-null");
        this.source = Objects.requireNonNull(source, "expected parameter 'source' to be non-null");
    }

    private ImageRawDiskResponse() {
        this.containerType = null;
        this.source = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageRawDiskResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String containerType;
        private String source;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageRawDiskResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.containerType = defaults.containerType;
    	      this.source = defaults.source;
        }

        public Builder setContainerType(String containerType) {
            this.containerType = Objects.requireNonNull(containerType);
            return this;
        }

        public Builder setSource(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }

        public ImageRawDiskResponse build() {
            return new ImageRawDiskResponse(containerType, source);
        }
    }
}
