// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datastream_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.datastream_v1.outputs.BackfillAllStrategyResponse;
import io.pulumi.googlenative.datastream_v1.outputs.BackfillNoneStrategyResponse;
import io.pulumi.googlenative.datastream_v1.outputs.DestinationConfigResponse;
import io.pulumi.googlenative.datastream_v1.outputs.ErrorResponse;
import io.pulumi.googlenative.datastream_v1.outputs.SourceConfigResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetStreamResult {
    private final BackfillAllStrategyResponse backfillAll;
    private final BackfillNoneStrategyResponse backfillNone;
    private final String createTime;
    private final String customerManagedEncryptionKey;
    private final DestinationConfigResponse destinationConfig;
    private final String displayName;
    private final List<ErrorResponse> errors;
    private final Map<String,String> labels;
    private final String name;
    private final SourceConfigResponse sourceConfig;
    private final String state;
    private final String updateTime;

    @OutputCustomType.Constructor({"backfillAll","backfillNone","createTime","customerManagedEncryptionKey","destinationConfig","displayName","errors","labels","name","sourceConfig","state","updateTime"})
    private GetStreamResult(
        BackfillAllStrategyResponse backfillAll,
        BackfillNoneStrategyResponse backfillNone,
        String createTime,
        String customerManagedEncryptionKey,
        DestinationConfigResponse destinationConfig,
        String displayName,
        List<ErrorResponse> errors,
        Map<String,String> labels,
        String name,
        SourceConfigResponse sourceConfig,
        String state,
        String updateTime) {
        this.backfillAll = Objects.requireNonNull(backfillAll);
        this.backfillNone = Objects.requireNonNull(backfillNone);
        this.createTime = Objects.requireNonNull(createTime);
        this.customerManagedEncryptionKey = Objects.requireNonNull(customerManagedEncryptionKey);
        this.destinationConfig = Objects.requireNonNull(destinationConfig);
        this.displayName = Objects.requireNonNull(displayName);
        this.errors = Objects.requireNonNull(errors);
        this.labels = Objects.requireNonNull(labels);
        this.name = Objects.requireNonNull(name);
        this.sourceConfig = Objects.requireNonNull(sourceConfig);
        this.state = Objects.requireNonNull(state);
        this.updateTime = Objects.requireNonNull(updateTime);
    }

    public BackfillAllStrategyResponse getBackfillAll() {
        return this.backfillAll;
    }
    public BackfillNoneStrategyResponse getBackfillNone() {
        return this.backfillNone;
    }
    public String getCreateTime() {
        return this.createTime;
    }
    public String getCustomerManagedEncryptionKey() {
        return this.customerManagedEncryptionKey;
    }
    public DestinationConfigResponse getDestinationConfig() {
        return this.destinationConfig;
    }
    public String getDisplayName() {
        return this.displayName;
    }
    public List<ErrorResponse> getErrors() {
        return this.errors;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public String getName() {
        return this.name;
    }
    public SourceConfigResponse getSourceConfig() {
        return this.sourceConfig;
    }
    public String getState() {
        return this.state;
    }
    public String getUpdateTime() {
        return this.updateTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackfillAllStrategyResponse backfillAll;
        private BackfillNoneStrategyResponse backfillNone;
        private String createTime;
        private String customerManagedEncryptionKey;
        private DestinationConfigResponse destinationConfig;
        private String displayName;
        private List<ErrorResponse> errors;
        private Map<String,String> labels;
        private String name;
        private SourceConfigResponse sourceConfig;
        private String state;
        private String updateTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetStreamResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backfillAll = defaults.backfillAll;
    	      this.backfillNone = defaults.backfillNone;
    	      this.createTime = defaults.createTime;
    	      this.customerManagedEncryptionKey = defaults.customerManagedEncryptionKey;
    	      this.destinationConfig = defaults.destinationConfig;
    	      this.displayName = defaults.displayName;
    	      this.errors = defaults.errors;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.sourceConfig = defaults.sourceConfig;
    	      this.state = defaults.state;
    	      this.updateTime = defaults.updateTime;
        }

        public Builder setBackfillAll(BackfillAllStrategyResponse backfillAll) {
            this.backfillAll = Objects.requireNonNull(backfillAll);
            return this;
        }

        public Builder setBackfillNone(BackfillNoneStrategyResponse backfillNone) {
            this.backfillNone = Objects.requireNonNull(backfillNone);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setCustomerManagedEncryptionKey(String customerManagedEncryptionKey) {
            this.customerManagedEncryptionKey = Objects.requireNonNull(customerManagedEncryptionKey);
            return this;
        }

        public Builder setDestinationConfig(DestinationConfigResponse destinationConfig) {
            this.destinationConfig = Objects.requireNonNull(destinationConfig);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setErrors(List<ErrorResponse> errors) {
            this.errors = Objects.requireNonNull(errors);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setSourceConfig(SourceConfigResponse sourceConfig) {
            this.sourceConfig = Objects.requireNonNull(sourceConfig);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setUpdateTime(String updateTime) {
            this.updateTime = Objects.requireNonNull(updateTime);
            return this;
        }

        public GetStreamResult build() {
            return new GetStreamResult(backfillAll, backfillNone, createTime, customerManagedEncryptionKey, destinationConfig, displayName, errors, labels, name, sourceConfig, state, updateTime);
        }
    }
}
