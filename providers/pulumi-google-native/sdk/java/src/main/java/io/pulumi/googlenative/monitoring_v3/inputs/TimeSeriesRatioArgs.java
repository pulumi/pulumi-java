// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v3.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * A TimeSeriesRatio specifies two TimeSeries to use for computing the good_service / total_service ratio. The specified TimeSeries must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE. The TimeSeriesRatio must specify exactly two of good, bad, and total, and the relationship good_service + bad_service = total_service will be assumed.
 * 
 */
public final class TimeSeriesRatioArgs extends io.pulumi.resources.ResourceArgs {

    public static final TimeSeriesRatioArgs Empty = new TimeSeriesRatioArgs();

    /**
     * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying bad service, either demanded service that was not provided or demanded service that was of inadequate quality. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
     * 
     */
    @Import(name="badServiceFilter")
      private final @Nullable Output<String> badServiceFilter;

    public Output<String> getBadServiceFilter() {
        return this.badServiceFilter == null ? Output.empty() : this.badServiceFilter;
    }

    /**
     * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying good service provided. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
     * 
     */
    @Import(name="goodServiceFilter")
      private final @Nullable Output<String> goodServiceFilter;

    public Output<String> getGoodServiceFilter() {
        return this.goodServiceFilter == null ? Output.empty() : this.goodServiceFilter;
    }

    /**
     * A monitoring filter (https://cloud.google.com/monitoring/api/v3/filters) specifying a TimeSeries quantifying total demanded service. Must have ValueType = DOUBLE or ValueType = INT64 and must have MetricKind = DELTA or MetricKind = CUMULATIVE.
     * 
     */
    @Import(name="totalServiceFilter")
      private final @Nullable Output<String> totalServiceFilter;

    public Output<String> getTotalServiceFilter() {
        return this.totalServiceFilter == null ? Output.empty() : this.totalServiceFilter;
    }

    public TimeSeriesRatioArgs(
        @Nullable Output<String> badServiceFilter,
        @Nullable Output<String> goodServiceFilter,
        @Nullable Output<String> totalServiceFilter) {
        this.badServiceFilter = badServiceFilter;
        this.goodServiceFilter = goodServiceFilter;
        this.totalServiceFilter = totalServiceFilter;
    }

    private TimeSeriesRatioArgs() {
        this.badServiceFilter = Output.empty();
        this.goodServiceFilter = Output.empty();
        this.totalServiceFilter = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TimeSeriesRatioArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> badServiceFilter;
        private @Nullable Output<String> goodServiceFilter;
        private @Nullable Output<String> totalServiceFilter;

        public Builder() {
    	      // Empty
        }

        public Builder(TimeSeriesRatioArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.badServiceFilter = defaults.badServiceFilter;
    	      this.goodServiceFilter = defaults.goodServiceFilter;
    	      this.totalServiceFilter = defaults.totalServiceFilter;
        }

        public Builder badServiceFilter(@Nullable Output<String> badServiceFilter) {
            this.badServiceFilter = badServiceFilter;
            return this;
        }
        public Builder badServiceFilter(@Nullable String badServiceFilter) {
            this.badServiceFilter = Output.ofNullable(badServiceFilter);
            return this;
        }
        public Builder goodServiceFilter(@Nullable Output<String> goodServiceFilter) {
            this.goodServiceFilter = goodServiceFilter;
            return this;
        }
        public Builder goodServiceFilter(@Nullable String goodServiceFilter) {
            this.goodServiceFilter = Output.ofNullable(goodServiceFilter);
            return this;
        }
        public Builder totalServiceFilter(@Nullable Output<String> totalServiceFilter) {
            this.totalServiceFilter = totalServiceFilter;
            return this;
        }
        public Builder totalServiceFilter(@Nullable String totalServiceFilter) {
            this.totalServiceFilter = Output.ofNullable(totalServiceFilter);
            return this;
        }        public TimeSeriesRatioArgs build() {
            return new TimeSeriesRatioArgs(badServiceFilter, goodServiceFilter, totalServiceFilter);
        }
    }
}
