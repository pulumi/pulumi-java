// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RouterNatRuleActionArgs extends io.pulumi.resources.ResourceArgs {

    public static final RouterNatRuleActionArgs Empty = new RouterNatRuleActionArgs();

    /**
     * A list of URLs of the IP resources used for this NAT rule. These IP addresses must be valid static external IP addresses assigned to the project. This field is used for public NAT.
     * 
     */
    @Import(name="sourceNatActiveIps")
      private final @Nullable Output<List<String>> sourceNatActiveIps;

    public Output<List<String>> getSourceNatActiveIps() {
        return this.sourceNatActiveIps == null ? Output.empty() : this.sourceNatActiveIps;
    }

    /**
     * A list of URLs of the subnetworks used as source ranges for this NAT Rule. These subnetworks must have purpose set to PRIVATE_NAT. This field is used for private NAT.
     * 
     */
    @Import(name="sourceNatActiveRanges")
      private final @Nullable Output<List<String>> sourceNatActiveRanges;

    public Output<List<String>> getSourceNatActiveRanges() {
        return this.sourceNatActiveRanges == null ? Output.empty() : this.sourceNatActiveRanges;
    }

    /**
     * A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to the NAT. These IPs should be used for updating/patching a NAT rule only. This field is used for public NAT.
     * 
     */
    @Import(name="sourceNatDrainIps")
      private final @Nullable Output<List<String>> sourceNatDrainIps;

    public Output<List<String>> getSourceNatDrainIps() {
        return this.sourceNatDrainIps == null ? Output.empty() : this.sourceNatDrainIps;
    }

    /**
     * A list of URLs of subnetworks representing source ranges to be drained. This is only supported on patch/update, and these subnetworks must have previously been used as active ranges in this NAT Rule. This field is used for private NAT.
     * 
     */
    @Import(name="sourceNatDrainRanges")
      private final @Nullable Output<List<String>> sourceNatDrainRanges;

    public Output<List<String>> getSourceNatDrainRanges() {
        return this.sourceNatDrainRanges == null ? Output.empty() : this.sourceNatDrainRanges;
    }

    public RouterNatRuleActionArgs(
        @Nullable Output<List<String>> sourceNatActiveIps,
        @Nullable Output<List<String>> sourceNatActiveRanges,
        @Nullable Output<List<String>> sourceNatDrainIps,
        @Nullable Output<List<String>> sourceNatDrainRanges) {
        this.sourceNatActiveIps = sourceNatActiveIps;
        this.sourceNatActiveRanges = sourceNatActiveRanges;
        this.sourceNatDrainIps = sourceNatDrainIps;
        this.sourceNatDrainRanges = sourceNatDrainRanges;
    }

    private RouterNatRuleActionArgs() {
        this.sourceNatActiveIps = Output.empty();
        this.sourceNatActiveRanges = Output.empty();
        this.sourceNatDrainIps = Output.empty();
        this.sourceNatDrainRanges = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouterNatRuleActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> sourceNatActiveIps;
        private @Nullable Output<List<String>> sourceNatActiveRanges;
        private @Nullable Output<List<String>> sourceNatDrainIps;
        private @Nullable Output<List<String>> sourceNatDrainRanges;

        public Builder() {
    	      // Empty
        }

        public Builder(RouterNatRuleActionArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceNatActiveIps = defaults.sourceNatActiveIps;
    	      this.sourceNatActiveRanges = defaults.sourceNatActiveRanges;
    	      this.sourceNatDrainIps = defaults.sourceNatDrainIps;
    	      this.sourceNatDrainRanges = defaults.sourceNatDrainRanges;
        }

        public Builder sourceNatActiveIps(@Nullable Output<List<String>> sourceNatActiveIps) {
            this.sourceNatActiveIps = sourceNatActiveIps;
            return this;
        }
        public Builder sourceNatActiveIps(@Nullable List<String> sourceNatActiveIps) {
            this.sourceNatActiveIps = Output.ofNullable(sourceNatActiveIps);
            return this;
        }
        public Builder sourceNatActiveIps(String... sourceNatActiveIps) {
            return sourceNatActiveIps(List.of(sourceNatActiveIps));
        }
        public Builder sourceNatActiveRanges(@Nullable Output<List<String>> sourceNatActiveRanges) {
            this.sourceNatActiveRanges = sourceNatActiveRanges;
            return this;
        }
        public Builder sourceNatActiveRanges(@Nullable List<String> sourceNatActiveRanges) {
            this.sourceNatActiveRanges = Output.ofNullable(sourceNatActiveRanges);
            return this;
        }
        public Builder sourceNatActiveRanges(String... sourceNatActiveRanges) {
            return sourceNatActiveRanges(List.of(sourceNatActiveRanges));
        }
        public Builder sourceNatDrainIps(@Nullable Output<List<String>> sourceNatDrainIps) {
            this.sourceNatDrainIps = sourceNatDrainIps;
            return this;
        }
        public Builder sourceNatDrainIps(@Nullable List<String> sourceNatDrainIps) {
            this.sourceNatDrainIps = Output.ofNullable(sourceNatDrainIps);
            return this;
        }
        public Builder sourceNatDrainIps(String... sourceNatDrainIps) {
            return sourceNatDrainIps(List.of(sourceNatDrainIps));
        }
        public Builder sourceNatDrainRanges(@Nullable Output<List<String>> sourceNatDrainRanges) {
            this.sourceNatDrainRanges = sourceNatDrainRanges;
            return this;
        }
        public Builder sourceNatDrainRanges(@Nullable List<String> sourceNatDrainRanges) {
            this.sourceNatDrainRanges = Output.ofNullable(sourceNatDrainRanges);
            return this;
        }
        public Builder sourceNatDrainRanges(String... sourceNatDrainRanges) {
            return sourceNatDrainRanges(List.of(sourceNatDrainRanges));
        }        public RouterNatRuleActionArgs build() {
            return new RouterNatRuleActionArgs(sourceNatActiveIps, sourceNatActiveRanges, sourceNatDrainIps, sourceNatDrainRanges);
        }
    }
}
