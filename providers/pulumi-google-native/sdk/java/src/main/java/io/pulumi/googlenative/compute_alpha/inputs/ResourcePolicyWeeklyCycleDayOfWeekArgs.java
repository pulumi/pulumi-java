// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.compute_alpha.enums.ResourcePolicyWeeklyCycleDayOfWeekDay;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ResourcePolicyWeeklyCycleDayOfWeekArgs extends io.pulumi.resources.ResourceArgs {

    public static final ResourcePolicyWeeklyCycleDayOfWeekArgs Empty = new ResourcePolicyWeeklyCycleDayOfWeekArgs();

    /**
     * Defines a schedule that runs on specific days of the week. Specify one or more days. The following options are available: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY.
     * 
     */
    @InputImport(name="day")
      private final @Nullable Input<ResourcePolicyWeeklyCycleDayOfWeekDay> day;

    public Input<ResourcePolicyWeeklyCycleDayOfWeekDay> getDay() {
        return this.day == null ? Input.empty() : this.day;
    }

    /**
     * Time within the window to start the operations. It must be in format "HH:MM", where HH : [00-23] and MM : [00-00] GMT.
     * 
     */
    @InputImport(name="startTime")
      private final @Nullable Input<String> startTime;

    public Input<String> getStartTime() {
        return this.startTime == null ? Input.empty() : this.startTime;
    }

    public ResourcePolicyWeeklyCycleDayOfWeekArgs(
        @Nullable Input<ResourcePolicyWeeklyCycleDayOfWeekDay> day,
        @Nullable Input<String> startTime) {
        this.day = day;
        this.startTime = startTime;
    }

    private ResourcePolicyWeeklyCycleDayOfWeekArgs() {
        this.day = Input.empty();
        this.startTime = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ResourcePolicyWeeklyCycleDayOfWeekArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ResourcePolicyWeeklyCycleDayOfWeekDay> day;
        private @Nullable Input<String> startTime;

        public Builder() {
    	      // Empty
        }

        public Builder(ResourcePolicyWeeklyCycleDayOfWeekArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.day = defaults.day;
    	      this.startTime = defaults.startTime;
        }

        public Builder setDay(@Nullable Input<ResourcePolicyWeeklyCycleDayOfWeekDay> day) {
            this.day = day;
            return this;
        }

        public Builder setDay(@Nullable ResourcePolicyWeeklyCycleDayOfWeekDay day) {
            this.day = Input.ofNullable(day);
            return this;
        }

        public Builder setStartTime(@Nullable Input<String> startTime) {
            this.startTime = startTime;
            return this;
        }

        public Builder setStartTime(@Nullable String startTime) {
            this.startTime = Input.ofNullable(startTime);
            return this;
        }
        public ResourcePolicyWeeklyCycleDayOfWeekArgs build() {
            return new ResourcePolicyWeeklyCycleDayOfWeekArgs(day, startTime);
        }
    }
}
