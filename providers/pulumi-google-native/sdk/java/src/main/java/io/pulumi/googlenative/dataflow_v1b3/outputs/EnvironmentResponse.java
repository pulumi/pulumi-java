// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dataflow_v1b3.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.dataflow_v1b3.outputs.DebugOptionsResponse;
import io.pulumi.googlenative.dataflow_v1b3.outputs.WorkerPoolResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class EnvironmentResponse {
    private final String clusterManagerApiService;
    private final String dataset;
    private final DebugOptionsResponse debugOptions;
    private final List<String> experiments;
    private final String flexResourceSchedulingGoal;
    private final Map<String,String> internalExperiments;
    private final Map<String,String> sdkPipelineOptions;
    private final String serviceAccountEmail;
    private final String serviceKmsKeyName;
    private final List<String> serviceOptions;
    private final String shuffleMode;
    private final String tempStoragePrefix;
    private final Map<String,String> userAgent;
    private final Map<String,String> version;
    private final List<WorkerPoolResponse> workerPools;
    private final String workerRegion;
    private final String workerZone;

    @OutputCustomType.Constructor({"clusterManagerApiService","dataset","debugOptions","experiments","flexResourceSchedulingGoal","internalExperiments","sdkPipelineOptions","serviceAccountEmail","serviceKmsKeyName","serviceOptions","shuffleMode","tempStoragePrefix","userAgent","version","workerPools","workerRegion","workerZone"})
    private EnvironmentResponse(
        String clusterManagerApiService,
        String dataset,
        DebugOptionsResponse debugOptions,
        List<String> experiments,
        String flexResourceSchedulingGoal,
        Map<String,String> internalExperiments,
        Map<String,String> sdkPipelineOptions,
        String serviceAccountEmail,
        String serviceKmsKeyName,
        List<String> serviceOptions,
        String shuffleMode,
        String tempStoragePrefix,
        Map<String,String> userAgent,
        Map<String,String> version,
        List<WorkerPoolResponse> workerPools,
        String workerRegion,
        String workerZone) {
        this.clusterManagerApiService = Objects.requireNonNull(clusterManagerApiService);
        this.dataset = Objects.requireNonNull(dataset);
        this.debugOptions = Objects.requireNonNull(debugOptions);
        this.experiments = Objects.requireNonNull(experiments);
        this.flexResourceSchedulingGoal = Objects.requireNonNull(flexResourceSchedulingGoal);
        this.internalExperiments = Objects.requireNonNull(internalExperiments);
        this.sdkPipelineOptions = Objects.requireNonNull(sdkPipelineOptions);
        this.serviceAccountEmail = Objects.requireNonNull(serviceAccountEmail);
        this.serviceKmsKeyName = Objects.requireNonNull(serviceKmsKeyName);
        this.serviceOptions = Objects.requireNonNull(serviceOptions);
        this.shuffleMode = Objects.requireNonNull(shuffleMode);
        this.tempStoragePrefix = Objects.requireNonNull(tempStoragePrefix);
        this.userAgent = Objects.requireNonNull(userAgent);
        this.version = Objects.requireNonNull(version);
        this.workerPools = Objects.requireNonNull(workerPools);
        this.workerRegion = Objects.requireNonNull(workerRegion);
        this.workerZone = Objects.requireNonNull(workerZone);
    }

    public String getClusterManagerApiService() {
        return this.clusterManagerApiService;
    }
    public String getDataset() {
        return this.dataset;
    }
    public DebugOptionsResponse getDebugOptions() {
        return this.debugOptions;
    }
    public List<String> getExperiments() {
        return this.experiments;
    }
    public String getFlexResourceSchedulingGoal() {
        return this.flexResourceSchedulingGoal;
    }
    public Map<String,String> getInternalExperiments() {
        return this.internalExperiments;
    }
    public Map<String,String> getSdkPipelineOptions() {
        return this.sdkPipelineOptions;
    }
    public String getServiceAccountEmail() {
        return this.serviceAccountEmail;
    }
    public String getServiceKmsKeyName() {
        return this.serviceKmsKeyName;
    }
    public List<String> getServiceOptions() {
        return this.serviceOptions;
    }
    public String getShuffleMode() {
        return this.shuffleMode;
    }
    public String getTempStoragePrefix() {
        return this.tempStoragePrefix;
    }
    public Map<String,String> getUserAgent() {
        return this.userAgent;
    }
    public Map<String,String> getVersion() {
        return this.version;
    }
    public List<WorkerPoolResponse> getWorkerPools() {
        return this.workerPools;
    }
    public String getWorkerRegion() {
        return this.workerRegion;
    }
    public String getWorkerZone() {
        return this.workerZone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnvironmentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String clusterManagerApiService;
        private String dataset;
        private DebugOptionsResponse debugOptions;
        private List<String> experiments;
        private String flexResourceSchedulingGoal;
        private Map<String,String> internalExperiments;
        private Map<String,String> sdkPipelineOptions;
        private String serviceAccountEmail;
        private String serviceKmsKeyName;
        private List<String> serviceOptions;
        private String shuffleMode;
        private String tempStoragePrefix;
        private Map<String,String> userAgent;
        private Map<String,String> version;
        private List<WorkerPoolResponse> workerPools;
        private String workerRegion;
        private String workerZone;

        public Builder() {
    	      // Empty
        }

        public Builder(EnvironmentResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterManagerApiService = defaults.clusterManagerApiService;
    	      this.dataset = defaults.dataset;
    	      this.debugOptions = defaults.debugOptions;
    	      this.experiments = defaults.experiments;
    	      this.flexResourceSchedulingGoal = defaults.flexResourceSchedulingGoal;
    	      this.internalExperiments = defaults.internalExperiments;
    	      this.sdkPipelineOptions = defaults.sdkPipelineOptions;
    	      this.serviceAccountEmail = defaults.serviceAccountEmail;
    	      this.serviceKmsKeyName = defaults.serviceKmsKeyName;
    	      this.serviceOptions = defaults.serviceOptions;
    	      this.shuffleMode = defaults.shuffleMode;
    	      this.tempStoragePrefix = defaults.tempStoragePrefix;
    	      this.userAgent = defaults.userAgent;
    	      this.version = defaults.version;
    	      this.workerPools = defaults.workerPools;
    	      this.workerRegion = defaults.workerRegion;
    	      this.workerZone = defaults.workerZone;
        }

        public Builder setClusterManagerApiService(String clusterManagerApiService) {
            this.clusterManagerApiService = Objects.requireNonNull(clusterManagerApiService);
            return this;
        }

        public Builder setDataset(String dataset) {
            this.dataset = Objects.requireNonNull(dataset);
            return this;
        }

        public Builder setDebugOptions(DebugOptionsResponse debugOptions) {
            this.debugOptions = Objects.requireNonNull(debugOptions);
            return this;
        }

        public Builder setExperiments(List<String> experiments) {
            this.experiments = Objects.requireNonNull(experiments);
            return this;
        }

        public Builder setFlexResourceSchedulingGoal(String flexResourceSchedulingGoal) {
            this.flexResourceSchedulingGoal = Objects.requireNonNull(flexResourceSchedulingGoal);
            return this;
        }

        public Builder setInternalExperiments(Map<String,String> internalExperiments) {
            this.internalExperiments = Objects.requireNonNull(internalExperiments);
            return this;
        }

        public Builder setSdkPipelineOptions(Map<String,String> sdkPipelineOptions) {
            this.sdkPipelineOptions = Objects.requireNonNull(sdkPipelineOptions);
            return this;
        }

        public Builder setServiceAccountEmail(String serviceAccountEmail) {
            this.serviceAccountEmail = Objects.requireNonNull(serviceAccountEmail);
            return this;
        }

        public Builder setServiceKmsKeyName(String serviceKmsKeyName) {
            this.serviceKmsKeyName = Objects.requireNonNull(serviceKmsKeyName);
            return this;
        }

        public Builder setServiceOptions(List<String> serviceOptions) {
            this.serviceOptions = Objects.requireNonNull(serviceOptions);
            return this;
        }

        public Builder setShuffleMode(String shuffleMode) {
            this.shuffleMode = Objects.requireNonNull(shuffleMode);
            return this;
        }

        public Builder setTempStoragePrefix(String tempStoragePrefix) {
            this.tempStoragePrefix = Objects.requireNonNull(tempStoragePrefix);
            return this;
        }

        public Builder setUserAgent(Map<String,String> userAgent) {
            this.userAgent = Objects.requireNonNull(userAgent);
            return this;
        }

        public Builder setVersion(Map<String,String> version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public Builder setWorkerPools(List<WorkerPoolResponse> workerPools) {
            this.workerPools = Objects.requireNonNull(workerPools);
            return this;
        }

        public Builder setWorkerRegion(String workerRegion) {
            this.workerRegion = Objects.requireNonNull(workerRegion);
            return this;
        }

        public Builder setWorkerZone(String workerZone) {
            this.workerZone = Objects.requireNonNull(workerZone);
            return this;
        }

        public EnvironmentResponse build() {
            return new EnvironmentResponse(clusterManagerApiService, dataset, debugOptions, experiments, flexResourceSchedulingGoal, internalExperiments, sdkPipelineOptions, serviceAccountEmail, serviceKmsKeyName, serviceOptions, shuffleMode, tempStoragePrefix, userAgent, version, workerPools, workerRegion, workerZone);
        }
    }
}
