// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.memcache_v1beta2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.memcache_v1beta2.outputs.MemcacheParametersResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class NodeResponse {
    private final String host;
    private final String nodeId;
    private final MemcacheParametersResponse parameters;
    private final Integer port;
    private final String state;
    private final Boolean updateAvailable;
    private final String zone;

    @OutputCustomType.Constructor({"host","nodeId","parameters","port","state","updateAvailable","zone"})
    private NodeResponse(
        String host,
        String nodeId,
        MemcacheParametersResponse parameters,
        Integer port,
        String state,
        Boolean updateAvailable,
        String zone) {
        this.host = Objects.requireNonNull(host);
        this.nodeId = Objects.requireNonNull(nodeId);
        this.parameters = Objects.requireNonNull(parameters);
        this.port = Objects.requireNonNull(port);
        this.state = Objects.requireNonNull(state);
        this.updateAvailable = Objects.requireNonNull(updateAvailable);
        this.zone = Objects.requireNonNull(zone);
    }

    public String getHost() {
        return this.host;
    }
    public String getNodeId() {
        return this.nodeId;
    }
    public MemcacheParametersResponse getParameters() {
        return this.parameters;
    }
    public Integer getPort() {
        return this.port;
    }
    public String getState() {
        return this.state;
    }
    public Boolean getUpdateAvailable() {
        return this.updateAvailable;
    }
    public String getZone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodeResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String host;
        private String nodeId;
        private MemcacheParametersResponse parameters;
        private Integer port;
        private String state;
        private Boolean updateAvailable;
        private String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(NodeResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.host = defaults.host;
    	      this.nodeId = defaults.nodeId;
    	      this.parameters = defaults.parameters;
    	      this.port = defaults.port;
    	      this.state = defaults.state;
    	      this.updateAvailable = defaults.updateAvailable;
    	      this.zone = defaults.zone;
        }

        public Builder setHost(String host) {
            this.host = Objects.requireNonNull(host);
            return this;
        }

        public Builder setNodeId(String nodeId) {
            this.nodeId = Objects.requireNonNull(nodeId);
            return this;
        }

        public Builder setParameters(MemcacheParametersResponse parameters) {
            this.parameters = Objects.requireNonNull(parameters);
            return this;
        }

        public Builder setPort(Integer port) {
            this.port = Objects.requireNonNull(port);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setUpdateAvailable(Boolean updateAvailable) {
            this.updateAvailable = Objects.requireNonNull(updateAvailable);
            return this;
        }

        public Builder setZone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }

        public NodeResponse build() {
            return new NodeResponse(host, nodeId, parameters, port, state, updateAvailable, zone);
        }
    }
}
