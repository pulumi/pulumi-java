// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.compute_alpha.inputs.RouterBgpArgs;
import io.pulumi.googlenative.compute_alpha.inputs.RouterBgpPeerArgs;
import io.pulumi.googlenative.compute_alpha.inputs.RouterInterfaceArgs;
import io.pulumi.googlenative.compute_alpha.inputs.RouterMd5AuthenticationKeyArgs;
import io.pulumi.googlenative.compute_alpha.inputs.RouterNatArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RouterArgs extends io.pulumi.resources.ResourceArgs {

    public static final RouterArgs Empty = new RouterArgs();

    /**
     * BGP information specific to this router.
     * 
     */
    @Import(name="bgp")
      private final @Nullable Output<RouterBgpArgs> bgp;

    public Output<RouterBgpArgs> bgp() {
        return this.bgp == null ? Codegen.empty() : this.bgp;
    }

    /**
     * BGP information that must be configured into the routing stack to establish BGP peering. This information must specify the peer ASN and either the interface name, IP address, or peer IP address. Please refer to RFC4273.
     * 
     */
    @Import(name="bgpPeers")
      private final @Nullable Output<List<RouterBgpPeerArgs>> bgpPeers;

    public Output<List<RouterBgpPeerArgs>> bgpPeers() {
        return this.bgpPeers == null ? Codegen.empty() : this.bgpPeers;
    }

    /**
     * An optional description of this resource. Provide this property when you create the resource.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Indicates if a router is dedicated for use with encrypted VLAN attachments (interconnectAttachments). Not currently available publicly.
     * 
     */
    @Import(name="encryptedInterconnectRouter")
      private final @Nullable Output<Boolean> encryptedInterconnectRouter;

    public Output<Boolean> encryptedInterconnectRouter() {
        return this.encryptedInterconnectRouter == null ? Codegen.empty() : this.encryptedInterconnectRouter;
    }

    /**
     * Router interfaces. Each interface requires either one linked resource, (for example, linkedVpnTunnel), or IP address and IP address range (for example, ipRange), or both.
     * 
     */
    @Import(name="interfaces")
      private final @Nullable Output<List<RouterInterfaceArgs>> interfaces;

    public Output<List<RouterInterfaceArgs>> interfaces() {
        return this.interfaces == null ? Codegen.empty() : this.interfaces;
    }

    /**
     * Keys used for MD5 authentication.
     * 
     */
    @Import(name="md5AuthenticationKeys")
      private final @Nullable Output<List<RouterMd5AuthenticationKeyArgs>> md5AuthenticationKeys;

    public Output<List<RouterMd5AuthenticationKeyArgs>> md5AuthenticationKeys() {
        return this.md5AuthenticationKeys == null ? Codegen.empty() : this.md5AuthenticationKeys;
    }

    /**
     * Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    /**
     * A list of NAT services created in this router.
     * 
     */
    @Import(name="nats")
      private final @Nullable Output<List<RouterNatArgs>> nats;

    public Output<List<RouterNatArgs>> nats() {
        return this.nats == null ? Codegen.empty() : this.nats;
    }

    /**
     * URI of the network to which this router belongs.
     * 
     */
    @Import(name="network")
      private final @Nullable Output<String> network;

    public Output<String> network() {
        return this.network == null ? Codegen.empty() : this.network;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    @Import(name="region", required=true)
      private final Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    @Import(name="requestId")
      private final @Nullable Output<String> requestId;

    public Output<String> requestId() {
        return this.requestId == null ? Codegen.empty() : this.requestId;
    }

    public RouterArgs(
        @Nullable Output<RouterBgpArgs> bgp,
        @Nullable Output<List<RouterBgpPeerArgs>> bgpPeers,
        @Nullable Output<String> description,
        @Nullable Output<Boolean> encryptedInterconnectRouter,
        @Nullable Output<List<RouterInterfaceArgs>> interfaces,
        @Nullable Output<List<RouterMd5AuthenticationKeyArgs>> md5AuthenticationKeys,
        @Nullable Output<String> name,
        @Nullable Output<List<RouterNatArgs>> nats,
        @Nullable Output<String> network,
        @Nullable Output<String> project,
        Output<String> region,
        @Nullable Output<String> requestId) {
        this.bgp = bgp;
        this.bgpPeers = bgpPeers;
        this.description = description;
        this.encryptedInterconnectRouter = encryptedInterconnectRouter;
        this.interfaces = interfaces;
        this.md5AuthenticationKeys = md5AuthenticationKeys;
        this.name = name;
        this.nats = nats;
        this.network = network;
        this.project = project;
        this.region = Objects.requireNonNull(region, "expected parameter 'region' to be non-null");
        this.requestId = requestId;
    }

    private RouterArgs() {
        this.bgp = Codegen.empty();
        this.bgpPeers = Codegen.empty();
        this.description = Codegen.empty();
        this.encryptedInterconnectRouter = Codegen.empty();
        this.interfaces = Codegen.empty();
        this.md5AuthenticationKeys = Codegen.empty();
        this.name = Codegen.empty();
        this.nats = Codegen.empty();
        this.network = Codegen.empty();
        this.project = Codegen.empty();
        this.region = Codegen.empty();
        this.requestId = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<RouterBgpArgs> bgp;
        private @Nullable Output<List<RouterBgpPeerArgs>> bgpPeers;
        private @Nullable Output<String> description;
        private @Nullable Output<Boolean> encryptedInterconnectRouter;
        private @Nullable Output<List<RouterInterfaceArgs>> interfaces;
        private @Nullable Output<List<RouterMd5AuthenticationKeyArgs>> md5AuthenticationKeys;
        private @Nullable Output<String> name;
        private @Nullable Output<List<RouterNatArgs>> nats;
        private @Nullable Output<String> network;
        private @Nullable Output<String> project;
        private Output<String> region;
        private @Nullable Output<String> requestId;

        public Builder() {
    	      // Empty
        }

        public Builder(RouterArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bgp = defaults.bgp;
    	      this.bgpPeers = defaults.bgpPeers;
    	      this.description = defaults.description;
    	      this.encryptedInterconnectRouter = defaults.encryptedInterconnectRouter;
    	      this.interfaces = defaults.interfaces;
    	      this.md5AuthenticationKeys = defaults.md5AuthenticationKeys;
    	      this.name = defaults.name;
    	      this.nats = defaults.nats;
    	      this.network = defaults.network;
    	      this.project = defaults.project;
    	      this.region = defaults.region;
    	      this.requestId = defaults.requestId;
        }

        public Builder bgp(@Nullable Output<RouterBgpArgs> bgp) {
            this.bgp = bgp;
            return this;
        }
        public Builder bgp(@Nullable RouterBgpArgs bgp) {
            this.bgp = Codegen.ofNullable(bgp);
            return this;
        }
        public Builder bgpPeers(@Nullable Output<List<RouterBgpPeerArgs>> bgpPeers) {
            this.bgpPeers = bgpPeers;
            return this;
        }
        public Builder bgpPeers(@Nullable List<RouterBgpPeerArgs> bgpPeers) {
            this.bgpPeers = Codegen.ofNullable(bgpPeers);
            return this;
        }
        public Builder bgpPeers(RouterBgpPeerArgs... bgpPeers) {
            return bgpPeers(List.of(bgpPeers));
        }
        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder encryptedInterconnectRouter(@Nullable Output<Boolean> encryptedInterconnectRouter) {
            this.encryptedInterconnectRouter = encryptedInterconnectRouter;
            return this;
        }
        public Builder encryptedInterconnectRouter(@Nullable Boolean encryptedInterconnectRouter) {
            this.encryptedInterconnectRouter = Codegen.ofNullable(encryptedInterconnectRouter);
            return this;
        }
        public Builder interfaces(@Nullable Output<List<RouterInterfaceArgs>> interfaces) {
            this.interfaces = interfaces;
            return this;
        }
        public Builder interfaces(@Nullable List<RouterInterfaceArgs> interfaces) {
            this.interfaces = Codegen.ofNullable(interfaces);
            return this;
        }
        public Builder interfaces(RouterInterfaceArgs... interfaces) {
            return interfaces(List.of(interfaces));
        }
        public Builder md5AuthenticationKeys(@Nullable Output<List<RouterMd5AuthenticationKeyArgs>> md5AuthenticationKeys) {
            this.md5AuthenticationKeys = md5AuthenticationKeys;
            return this;
        }
        public Builder md5AuthenticationKeys(@Nullable List<RouterMd5AuthenticationKeyArgs> md5AuthenticationKeys) {
            this.md5AuthenticationKeys = Codegen.ofNullable(md5AuthenticationKeys);
            return this;
        }
        public Builder md5AuthenticationKeys(RouterMd5AuthenticationKeyArgs... md5AuthenticationKeys) {
            return md5AuthenticationKeys(List.of(md5AuthenticationKeys));
        }
        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder nats(@Nullable Output<List<RouterNatArgs>> nats) {
            this.nats = nats;
            return this;
        }
        public Builder nats(@Nullable List<RouterNatArgs> nats) {
            this.nats = Codegen.ofNullable(nats);
            return this;
        }
        public Builder nats(RouterNatArgs... nats) {
            return nats(List.of(nats));
        }
        public Builder network(@Nullable Output<String> network) {
            this.network = network;
            return this;
        }
        public Builder network(@Nullable String network) {
            this.network = Codegen.ofNullable(network);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder region(Output<String> region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public Builder region(String region) {
            this.region = Output.of(Objects.requireNonNull(region));
            return this;
        }
        public Builder requestId(@Nullable Output<String> requestId) {
            this.requestId = requestId;
            return this;
        }
        public Builder requestId(@Nullable String requestId) {
            this.requestId = Codegen.ofNullable(requestId);
            return this;
        }        public RouterArgs build() {
            return new RouterArgs(bgp, bgpPeers, description, encryptedInterconnectRouter, interfaces, md5AuthenticationKeys, name, nats, network, project, region, requestId);
        }
    }
}
