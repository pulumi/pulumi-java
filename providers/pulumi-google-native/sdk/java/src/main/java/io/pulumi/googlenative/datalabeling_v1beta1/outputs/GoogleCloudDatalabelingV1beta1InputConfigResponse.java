// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datalabeling_v1beta1.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.googlenative.datalabeling_v1beta1.outputs.GoogleCloudDatalabelingV1beta1BigQuerySourceResponse;
import io.pulumi.googlenative.datalabeling_v1beta1.outputs.GoogleCloudDatalabelingV1beta1ClassificationMetadataResponse;
import io.pulumi.googlenative.datalabeling_v1beta1.outputs.GoogleCloudDatalabelingV1beta1GcsSourceResponse;
import io.pulumi.googlenative.datalabeling_v1beta1.outputs.GoogleCloudDatalabelingV1beta1TextMetadataResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GoogleCloudDatalabelingV1beta1InputConfigResponse {
    /**
     * Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob.
     * 
     */
    private final String annotationType;
    /**
     * Source located in BigQuery. You must specify this field if you are using this InputConfig in an EvaluationJob.
     * 
     */
    private final GoogleCloudDatalabelingV1beta1BigQuerySourceResponse bigquerySource;
    /**
     * Optional. Metadata about annotations for the input. You must specify this field if you are using this InputConfig in an EvaluationJob for a model version that performs classification.
     * 
     */
    private final GoogleCloudDatalabelingV1beta1ClassificationMetadataResponse classificationMetadata;
    /**
     * Data type must be specifed when user tries to import data.
     * 
     */
    private final String dataType;
    /**
     * Source located in Cloud Storage.
     * 
     */
    private final GoogleCloudDatalabelingV1beta1GcsSourceResponse gcsSource;
    /**
     * Required for text import, as language code must be specified.
     * 
     */
    private final GoogleCloudDatalabelingV1beta1TextMetadataResponse textMetadata;

    @CustomType.Constructor
    private GoogleCloudDatalabelingV1beta1InputConfigResponse(
        @CustomType.Parameter("annotationType") String annotationType,
        @CustomType.Parameter("bigquerySource") GoogleCloudDatalabelingV1beta1BigQuerySourceResponse bigquerySource,
        @CustomType.Parameter("classificationMetadata") GoogleCloudDatalabelingV1beta1ClassificationMetadataResponse classificationMetadata,
        @CustomType.Parameter("dataType") String dataType,
        @CustomType.Parameter("gcsSource") GoogleCloudDatalabelingV1beta1GcsSourceResponse gcsSource,
        @CustomType.Parameter("textMetadata") GoogleCloudDatalabelingV1beta1TextMetadataResponse textMetadata) {
        this.annotationType = annotationType;
        this.bigquerySource = bigquerySource;
        this.classificationMetadata = classificationMetadata;
        this.dataType = dataType;
        this.gcsSource = gcsSource;
        this.textMetadata = textMetadata;
    }

    /**
     * Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob.
     * 
    */
    public String getAnnotationType() {
        return this.annotationType;
    }
    /**
     * Source located in BigQuery. You must specify this field if you are using this InputConfig in an EvaluationJob.
     * 
    */
    public GoogleCloudDatalabelingV1beta1BigQuerySourceResponse getBigquerySource() {
        return this.bigquerySource;
    }
    /**
     * Optional. Metadata about annotations for the input. You must specify this field if you are using this InputConfig in an EvaluationJob for a model version that performs classification.
     * 
    */
    public GoogleCloudDatalabelingV1beta1ClassificationMetadataResponse getClassificationMetadata() {
        return this.classificationMetadata;
    }
    /**
     * Data type must be specifed when user tries to import data.
     * 
    */
    public String getDataType() {
        return this.dataType;
    }
    /**
     * Source located in Cloud Storage.
     * 
    */
    public GoogleCloudDatalabelingV1beta1GcsSourceResponse getGcsSource() {
        return this.gcsSource;
    }
    /**
     * Required for text import, as language code must be specified.
     * 
    */
    public GoogleCloudDatalabelingV1beta1TextMetadataResponse getTextMetadata() {
        return this.textMetadata;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudDatalabelingV1beta1InputConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String annotationType;
        private GoogleCloudDatalabelingV1beta1BigQuerySourceResponse bigquerySource;
        private GoogleCloudDatalabelingV1beta1ClassificationMetadataResponse classificationMetadata;
        private String dataType;
        private GoogleCloudDatalabelingV1beta1GcsSourceResponse gcsSource;
        private GoogleCloudDatalabelingV1beta1TextMetadataResponse textMetadata;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudDatalabelingV1beta1InputConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotationType = defaults.annotationType;
    	      this.bigquerySource = defaults.bigquerySource;
    	      this.classificationMetadata = defaults.classificationMetadata;
    	      this.dataType = defaults.dataType;
    	      this.gcsSource = defaults.gcsSource;
    	      this.textMetadata = defaults.textMetadata;
        }

        public Builder annotationType(String annotationType) {
            this.annotationType = Objects.requireNonNull(annotationType);
            return this;
        }
        public Builder bigquerySource(GoogleCloudDatalabelingV1beta1BigQuerySourceResponse bigquerySource) {
            this.bigquerySource = Objects.requireNonNull(bigquerySource);
            return this;
        }
        public Builder classificationMetadata(GoogleCloudDatalabelingV1beta1ClassificationMetadataResponse classificationMetadata) {
            this.classificationMetadata = Objects.requireNonNull(classificationMetadata);
            return this;
        }
        public Builder dataType(String dataType) {
            this.dataType = Objects.requireNonNull(dataType);
            return this;
        }
        public Builder gcsSource(GoogleCloudDatalabelingV1beta1GcsSourceResponse gcsSource) {
            this.gcsSource = Objects.requireNonNull(gcsSource);
            return this;
        }
        public Builder textMetadata(GoogleCloudDatalabelingV1beta1TextMetadataResponse textMetadata) {
            this.textMetadata = Objects.requireNonNull(textMetadata);
            return this;
        }        public GoogleCloudDatalabelingV1beta1InputConfigResponse build() {
            return new GoogleCloudDatalabelingV1beta1InputConfigResponse(annotationType, bigquerySource, classificationMetadata, dataType, gcsSource, textMetadata);
        }
    }
}
