// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.monitoring_v1.enums.ThresholdColor;
import io.pulumi.googlenative.monitoring_v1.enums.ThresholdDirection;
import io.pulumi.googlenative.monitoring_v1.enums.ThresholdTargetAxis;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ThresholdArgs extends io.pulumi.resources.ResourceArgs {

    public static final ThresholdArgs Empty = new ThresholdArgs();

    @InputImport(name="color")
    private final @Nullable Input<ThresholdColor> color;

    public Input<ThresholdColor> getColor() {
        return this.color == null ? Input.empty() : this.color;
    }

    @InputImport(name="direction")
    private final @Nullable Input<ThresholdDirection> direction;

    public Input<ThresholdDirection> getDirection() {
        return this.direction == null ? Input.empty() : this.direction;
    }

    @InputImport(name="label")
    private final @Nullable Input<String> label;

    public Input<String> getLabel() {
        return this.label == null ? Input.empty() : this.label;
    }

    @InputImport(name="targetAxis")
    private final @Nullable Input<ThresholdTargetAxis> targetAxis;

    public Input<ThresholdTargetAxis> getTargetAxis() {
        return this.targetAxis == null ? Input.empty() : this.targetAxis;
    }

    @InputImport(name="value")
    private final @Nullable Input<Double> value;

    public Input<Double> getValue() {
        return this.value == null ? Input.empty() : this.value;
    }

    public ThresholdArgs(
        @Nullable Input<ThresholdColor> color,
        @Nullable Input<ThresholdDirection> direction,
        @Nullable Input<String> label,
        @Nullable Input<ThresholdTargetAxis> targetAxis,
        @Nullable Input<Double> value) {
        this.color = color;
        this.direction = direction;
        this.label = label;
        this.targetAxis = targetAxis;
        this.value = value;
    }

    private ThresholdArgs() {
        this.color = Input.empty();
        this.direction = Input.empty();
        this.label = Input.empty();
        this.targetAxis = Input.empty();
        this.value = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ThresholdArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<ThresholdColor> color;
        private @Nullable Input<ThresholdDirection> direction;
        private @Nullable Input<String> label;
        private @Nullable Input<ThresholdTargetAxis> targetAxis;
        private @Nullable Input<Double> value;

        public Builder() {
    	      // Empty
        }

        public Builder(ThresholdArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.color = defaults.color;
    	      this.direction = defaults.direction;
    	      this.label = defaults.label;
    	      this.targetAxis = defaults.targetAxis;
    	      this.value = defaults.value;
        }

        public Builder setColor(@Nullable Input<ThresholdColor> color) {
            this.color = color;
            return this;
        }

        public Builder setColor(@Nullable ThresholdColor color) {
            this.color = Input.ofNullable(color);
            return this;
        }

        public Builder setDirection(@Nullable Input<ThresholdDirection> direction) {
            this.direction = direction;
            return this;
        }

        public Builder setDirection(@Nullable ThresholdDirection direction) {
            this.direction = Input.ofNullable(direction);
            return this;
        }

        public Builder setLabel(@Nullable Input<String> label) {
            this.label = label;
            return this;
        }

        public Builder setLabel(@Nullable String label) {
            this.label = Input.ofNullable(label);
            return this;
        }

        public Builder setTargetAxis(@Nullable Input<ThresholdTargetAxis> targetAxis) {
            this.targetAxis = targetAxis;
            return this;
        }

        public Builder setTargetAxis(@Nullable ThresholdTargetAxis targetAxis) {
            this.targetAxis = Input.ofNullable(targetAxis);
            return this;
        }

        public Builder setValue(@Nullable Input<Double> value) {
            this.value = value;
            return this;
        }

        public Builder setValue(@Nullable Double value) {
            this.value = Input.ofNullable(value);
            return this;
        }

        public ThresholdArgs build() {
            return new ThresholdArgs(color, direction, label, targetAxis, value);
        }
    }
}
