// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2ActionResponse;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2InspectConfigResponse;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2StorageConfigResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GooglePrivacyDlpV2InspectJobConfigResponse {
    /**
     * Actions to execute at the completion of the job.
     * 
     */
    private final List<GooglePrivacyDlpV2ActionResponse> actions;
    /**
     * How and what to scan for.
     * 
     */
    private final GooglePrivacyDlpV2InspectConfigResponse inspectConfig;
    /**
     * If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
     * 
     */
    private final String inspectTemplateName;
    /**
     * The data to scan.
     * 
     */
    private final GooglePrivacyDlpV2StorageConfigResponse storageConfig;

    @OutputCustomType.Constructor({"actions","inspectConfig","inspectTemplateName","storageConfig"})
    private GooglePrivacyDlpV2InspectJobConfigResponse(
        List<GooglePrivacyDlpV2ActionResponse> actions,
        GooglePrivacyDlpV2InspectConfigResponse inspectConfig,
        String inspectTemplateName,
        GooglePrivacyDlpV2StorageConfigResponse storageConfig) {
        this.actions = Objects.requireNonNull(actions);
        this.inspectConfig = Objects.requireNonNull(inspectConfig);
        this.inspectTemplateName = Objects.requireNonNull(inspectTemplateName);
        this.storageConfig = Objects.requireNonNull(storageConfig);
    }

    /**
     * Actions to execute at the completion of the job.
     * 
     */
    public List<GooglePrivacyDlpV2ActionResponse> getActions() {
        return this.actions;
    }
    /**
     * How and what to scan for.
     * 
     */
    public GooglePrivacyDlpV2InspectConfigResponse getInspectConfig() {
        return this.inspectConfig;
    }
    /**
     * If provided, will be used as the default for all values in InspectConfig. `inspect_config` will be merged into the values persisted as part of the template.
     * 
     */
    public String getInspectTemplateName() {
        return this.inspectTemplateName;
    }
    /**
     * The data to scan.
     * 
     */
    public GooglePrivacyDlpV2StorageConfigResponse getStorageConfig() {
        return this.storageConfig;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2InspectJobConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GooglePrivacyDlpV2ActionResponse> actions;
        private GooglePrivacyDlpV2InspectConfigResponse inspectConfig;
        private String inspectTemplateName;
        private GooglePrivacyDlpV2StorageConfigResponse storageConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2InspectJobConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actions = defaults.actions;
    	      this.inspectConfig = defaults.inspectConfig;
    	      this.inspectTemplateName = defaults.inspectTemplateName;
    	      this.storageConfig = defaults.storageConfig;
        }

        public Builder setActions(List<GooglePrivacyDlpV2ActionResponse> actions) {
            this.actions = Objects.requireNonNull(actions);
            return this;
        }

        public Builder setInspectConfig(GooglePrivacyDlpV2InspectConfigResponse inspectConfig) {
            this.inspectConfig = Objects.requireNonNull(inspectConfig);
            return this;
        }

        public Builder setInspectTemplateName(String inspectTemplateName) {
            this.inspectTemplateName = Objects.requireNonNull(inspectTemplateName);
            return this;
        }

        public Builder setStorageConfig(GooglePrivacyDlpV2StorageConfigResponse storageConfig) {
            this.storageConfig = Objects.requireNonNull(storageConfig);
            return this;
        }
        public GooglePrivacyDlpV2InspectJobConfigResponse build() {
            return new GooglePrivacyDlpV2InspectJobConfigResponse(actions, inspectConfig, inspectTemplateName, storageConfig);
        }
    }
}
