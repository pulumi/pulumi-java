// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.file_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.file_v1.enums.InstanceTier;
import io.pulumi.googlenative.file_v1.inputs.FileShareConfigArgs;
import io.pulumi.googlenative.file_v1.inputs.NetworkConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    /**
     * The description of the instance (2048 characters or less).
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * Server-specified ETag for the instance resource to prevent simultaneous updates from overwriting each other.
     * 
     */
    @Import(name="etag")
      private final @Nullable Output<String> etag;

    public Output<String> etag() {
        return this.etag == null ? Codegen.empty() : this.etag;
    }

    /**
     * File system shares on the instance. For this version, only a single file share is supported.
     * 
     */
    @Import(name="fileShares")
      private final @Nullable Output<List<FileShareConfigArgs>> fileShares;

    public Output<List<FileShareConfigArgs>> fileShares() {
        return this.fileShares == null ? Codegen.empty() : this.fileShares;
    }

    @Import(name="instanceId", required=true)
      private final Output<String> instanceId;

    public Output<String> instanceId() {
        return this.instanceId;
    }

    /**
     * KMS key name used for data encryption.
     * 
     */
    @Import(name="kmsKeyName")
      private final @Nullable Output<String> kmsKeyName;

    public Output<String> kmsKeyName() {
        return this.kmsKeyName == null ? Codegen.empty() : this.kmsKeyName;
    }

    /**
     * Resource labels to represent user provided metadata.
     * 
     */
    @Import(name="labels")
      private final @Nullable Output<Map<String,String>> labels;

    public Output<Map<String,String>> labels() {
        return this.labels == null ? Codegen.empty() : this.labels;
    }

    @Import(name="location")
      private final @Nullable Output<String> location;

    public Output<String> location() {
        return this.location == null ? Codegen.empty() : this.location;
    }

    /**
     * VPC networks to which the instance is connected. For this version, only a single network is supported.
     * 
     */
    @Import(name="networks")
      private final @Nullable Output<List<NetworkConfigArgs>> networks;

    public Output<List<NetworkConfigArgs>> networks() {
        return this.networks == null ? Codegen.empty() : this.networks;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * The service tier of the instance.
     * 
     */
    @Import(name="tier")
      private final @Nullable Output<InstanceTier> tier;

    public Output<InstanceTier> tier() {
        return this.tier == null ? Codegen.empty() : this.tier;
    }

    public InstanceArgs(
        @Nullable Output<String> description,
        @Nullable Output<String> etag,
        @Nullable Output<List<FileShareConfigArgs>> fileShares,
        Output<String> instanceId,
        @Nullable Output<String> kmsKeyName,
        @Nullable Output<Map<String,String>> labels,
        @Nullable Output<String> location,
        @Nullable Output<List<NetworkConfigArgs>> networks,
        @Nullable Output<String> project,
        @Nullable Output<InstanceTier> tier) {
        this.description = description;
        this.etag = etag;
        this.fileShares = fileShares;
        this.instanceId = Objects.requireNonNull(instanceId, "expected parameter 'instanceId' to be non-null");
        this.kmsKeyName = kmsKeyName;
        this.labels = labels;
        this.location = location;
        this.networks = networks;
        this.project = project;
        this.tier = tier;
    }

    private InstanceArgs() {
        this.description = Codegen.empty();
        this.etag = Codegen.empty();
        this.fileShares = Codegen.empty();
        this.instanceId = Codegen.empty();
        this.kmsKeyName = Codegen.empty();
        this.labels = Codegen.empty();
        this.location = Codegen.empty();
        this.networks = Codegen.empty();
        this.project = Codegen.empty();
        this.tier = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> etag;
        private @Nullable Output<List<FileShareConfigArgs>> fileShares;
        private Output<String> instanceId;
        private @Nullable Output<String> kmsKeyName;
        private @Nullable Output<Map<String,String>> labels;
        private @Nullable Output<String> location;
        private @Nullable Output<List<NetworkConfigArgs>> networks;
        private @Nullable Output<String> project;
        private @Nullable Output<InstanceTier> tier;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.fileShares = defaults.fileShares;
    	      this.instanceId = defaults.instanceId;
    	      this.kmsKeyName = defaults.kmsKeyName;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.networks = defaults.networks;
    	      this.project = defaults.project;
    	      this.tier = defaults.tier;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder etag(@Nullable Output<String> etag) {
            this.etag = etag;
            return this;
        }
        public Builder etag(@Nullable String etag) {
            this.etag = Codegen.ofNullable(etag);
            return this;
        }
        public Builder fileShares(@Nullable Output<List<FileShareConfigArgs>> fileShares) {
            this.fileShares = fileShares;
            return this;
        }
        public Builder fileShares(@Nullable List<FileShareConfigArgs> fileShares) {
            this.fileShares = Codegen.ofNullable(fileShares);
            return this;
        }
        public Builder fileShares(FileShareConfigArgs... fileShares) {
            return fileShares(List.of(fileShares));
        }
        public Builder instanceId(Output<String> instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        public Builder instanceId(String instanceId) {
            this.instanceId = Output.of(Objects.requireNonNull(instanceId));
            return this;
        }
        public Builder kmsKeyName(@Nullable Output<String> kmsKeyName) {
            this.kmsKeyName = kmsKeyName;
            return this;
        }
        public Builder kmsKeyName(@Nullable String kmsKeyName) {
            this.kmsKeyName = Codegen.ofNullable(kmsKeyName);
            return this;
        }
        public Builder labels(@Nullable Output<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Codegen.ofNullable(labels);
            return this;
        }
        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = Codegen.ofNullable(location);
            return this;
        }
        public Builder networks(@Nullable Output<List<NetworkConfigArgs>> networks) {
            this.networks = networks;
            return this;
        }
        public Builder networks(@Nullable List<NetworkConfigArgs> networks) {
            this.networks = Codegen.ofNullable(networks);
            return this;
        }
        public Builder networks(NetworkConfigArgs... networks) {
            return networks(List.of(networks));
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder tier(@Nullable Output<InstanceTier> tier) {
            this.tier = tier;
            return this;
        }
        public Builder tier(@Nullable InstanceTier tier) {
            this.tier = Codegen.ofNullable(tier);
            return this;
        }        public InstanceArgs build() {
            return new InstanceArgs(description, etag, fileShares, instanceId, kmsKeyName, labels, location, networks, project, tier);
        }
    }
}
