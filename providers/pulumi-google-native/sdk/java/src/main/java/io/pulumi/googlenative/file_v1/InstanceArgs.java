// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.file_v1;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.file_v1.enums.InstanceTier;
import io.pulumi.googlenative.file_v1.inputs.FileShareConfigArgs;
import io.pulumi.googlenative.file_v1.inputs.NetworkConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InstanceArgs extends io.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    /**
     * The description of the instance (2048 characters or less).
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Server-specified ETag for the instance resource to prevent simultaneous updates from overwriting each other.
     * 
     */
    @InputImport(name="etag")
      private final @Nullable Input<String> etag;

    public Input<String> getEtag() {
        return this.etag == null ? Input.empty() : this.etag;
    }

    /**
     * File system shares on the instance. For this version, only a single file share is supported.
     * 
     */
    @InputImport(name="fileShares")
      private final @Nullable Input<List<FileShareConfigArgs>> fileShares;

    public Input<List<FileShareConfigArgs>> getFileShares() {
        return this.fileShares == null ? Input.empty() : this.fileShares;
    }

    @InputImport(name="instanceId", required=true)
      private final Input<String> instanceId;

    public Input<String> getInstanceId() {
        return this.instanceId;
    }

    /**
     * KMS key name used for data encryption.
     * 
     */
    @InputImport(name="kmsKeyName")
      private final @Nullable Input<String> kmsKeyName;

    public Input<String> getKmsKeyName() {
        return this.kmsKeyName == null ? Input.empty() : this.kmsKeyName;
    }

    /**
     * Resource labels to represent user provided metadata.
     * 
     */
    @InputImport(name="labels")
      private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="location")
      private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    /**
     * VPC networks to which the instance is connected. For this version, only a single network is supported.
     * 
     */
    @InputImport(name="networks")
      private final @Nullable Input<List<NetworkConfigArgs>> networks;

    public Input<List<NetworkConfigArgs>> getNetworks() {
        return this.networks == null ? Input.empty() : this.networks;
    }

    @InputImport(name="project")
      private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * The service tier of the instance.
     * 
     */
    @InputImport(name="tier")
      private final @Nullable Input<InstanceTier> tier;

    public Input<InstanceTier> getTier() {
        return this.tier == null ? Input.empty() : this.tier;
    }

    public InstanceArgs(
        @Nullable Input<String> description,
        @Nullable Input<String> etag,
        @Nullable Input<List<FileShareConfigArgs>> fileShares,
        Input<String> instanceId,
        @Nullable Input<String> kmsKeyName,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> location,
        @Nullable Input<List<NetworkConfigArgs>> networks,
        @Nullable Input<String> project,
        @Nullable Input<InstanceTier> tier) {
        this.description = description;
        this.etag = etag;
        this.fileShares = fileShares;
        this.instanceId = Objects.requireNonNull(instanceId, "expected parameter 'instanceId' to be non-null");
        this.kmsKeyName = kmsKeyName;
        this.labels = labels;
        this.location = location;
        this.networks = networks;
        this.project = project;
        this.tier = tier;
    }

    private InstanceArgs() {
        this.description = Input.empty();
        this.etag = Input.empty();
        this.fileShares = Input.empty();
        this.instanceId = Input.empty();
        this.kmsKeyName = Input.empty();
        this.labels = Input.empty();
        this.location = Input.empty();
        this.networks = Input.empty();
        this.project = Input.empty();
        this.tier = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<String> etag;
        private @Nullable Input<List<FileShareConfigArgs>> fileShares;
        private Input<String> instanceId;
        private @Nullable Input<String> kmsKeyName;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> location;
        private @Nullable Input<List<NetworkConfigArgs>> networks;
        private @Nullable Input<String> project;
        private @Nullable Input<InstanceTier> tier;

        public Builder() {
    	      // Empty
        }

        public Builder(InstanceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.etag = defaults.etag;
    	      this.fileShares = defaults.fileShares;
    	      this.instanceId = defaults.instanceId;
    	      this.kmsKeyName = defaults.kmsKeyName;
    	      this.labels = defaults.labels;
    	      this.location = defaults.location;
    	      this.networks = defaults.networks;
    	      this.project = defaults.project;
    	      this.tier = defaults.tier;
        }

        public Builder description(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder etag(@Nullable Input<String> etag) {
            this.etag = etag;
            return this;
        }

        public Builder etag(@Nullable String etag) {
            this.etag = Input.ofNullable(etag);
            return this;
        }

        public Builder fileShares(@Nullable Input<List<FileShareConfigArgs>> fileShares) {
            this.fileShares = fileShares;
            return this;
        }

        public Builder fileShares(@Nullable List<FileShareConfigArgs> fileShares) {
            this.fileShares = Input.ofNullable(fileShares);
            return this;
        }

        public Builder instanceId(Input<String> instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }

        public Builder instanceId(String instanceId) {
            this.instanceId = Input.of(Objects.requireNonNull(instanceId));
            return this;
        }

        public Builder kmsKeyName(@Nullable Input<String> kmsKeyName) {
            this.kmsKeyName = kmsKeyName;
            return this;
        }

        public Builder kmsKeyName(@Nullable String kmsKeyName) {
            this.kmsKeyName = Input.ofNullable(kmsKeyName);
            return this;
        }

        public Builder labels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder location(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder networks(@Nullable Input<List<NetworkConfigArgs>> networks) {
            this.networks = networks;
            return this;
        }

        public Builder networks(@Nullable List<NetworkConfigArgs> networks) {
            this.networks = Input.ofNullable(networks);
            return this;
        }

        public Builder project(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder tier(@Nullable Input<InstanceTier> tier) {
            this.tier = tier;
            return this;
        }

        public Builder tier(@Nullable InstanceTier tier) {
            this.tier = Input.ofNullable(tier);
            return this;
        }
        public InstanceArgs build() {
            return new InstanceArgs(description, etag, fileShares, instanceId, kmsKeyName, labels, location, networks, project, tier);
        }
    }
}
