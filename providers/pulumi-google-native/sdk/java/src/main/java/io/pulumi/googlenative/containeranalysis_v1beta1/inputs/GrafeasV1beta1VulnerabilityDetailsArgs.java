// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.containeranalysis_v1beta1.enums.GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.PackageIssueArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Details of a vulnerability Occurrence.
 * 
 */
public final class GrafeasV1beta1VulnerabilityDetailsArgs extends io.pulumi.resources.ResourceArgs {

    public static final GrafeasV1beta1VulnerabilityDetailsArgs Empty = new GrafeasV1beta1VulnerabilityDetailsArgs();

    /**
     * The distro assigned severity for this vulnerability when it is available, and note provider assigned severity when distro has not yet assigned a severity for this vulnerability. When there are multiple PackageIssues for this vulnerability, they can have different effective severities because some might be provided by the distro while others are provided by the language ecosystem for a language pack. For this reason, it is advised to use the effective severity on the PackageIssue level. In the case where multiple PackageIssues have differing effective severities, this field should be the highest severity for any of the PackageIssues.
     * 
     */
    @InputImport(name="effectiveSeverity")
      private final @Nullable Input<GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity> effectiveSeverity;

    public Input<GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity> getEffectiveSeverity() {
        return this.effectiveSeverity == null ? Input.empty() : this.effectiveSeverity;
    }

    /**
     * The set of affected locations and their fixes (if available) within the associated resource.
     * 
     */
    @InputImport(name="packageIssue", required=true)
      private final Input<List<PackageIssueArgs>> packageIssue;

    public Input<List<PackageIssueArgs>> getPackageIssue() {
        return this.packageIssue;
    }

    /**
     * The type of package; whether native or non native(ruby gems, node.js packages etc)
     * 
     */
    @InputImport(name="type")
      private final @Nullable Input<String> type;

    public Input<String> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    public GrafeasV1beta1VulnerabilityDetailsArgs(
        @Nullable Input<GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity> effectiveSeverity,
        Input<List<PackageIssueArgs>> packageIssue,
        @Nullable Input<String> type) {
        this.effectiveSeverity = effectiveSeverity;
        this.packageIssue = Objects.requireNonNull(packageIssue, "expected parameter 'packageIssue' to be non-null");
        this.type = type;
    }

    private GrafeasV1beta1VulnerabilityDetailsArgs() {
        this.effectiveSeverity = Input.empty();
        this.packageIssue = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GrafeasV1beta1VulnerabilityDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity> effectiveSeverity;
        private Input<List<PackageIssueArgs>> packageIssue;
        private @Nullable Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(GrafeasV1beta1VulnerabilityDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.effectiveSeverity = defaults.effectiveSeverity;
    	      this.packageIssue = defaults.packageIssue;
    	      this.type = defaults.type;
        }

        public Builder effectiveSeverity(@Nullable Input<GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity> effectiveSeverity) {
            this.effectiveSeverity = effectiveSeverity;
            return this;
        }

        public Builder effectiveSeverity(@Nullable GrafeasV1beta1VulnerabilityDetailsEffectiveSeverity effectiveSeverity) {
            this.effectiveSeverity = Input.ofNullable(effectiveSeverity);
            return this;
        }

        public Builder packageIssue(Input<List<PackageIssueArgs>> packageIssue) {
            this.packageIssue = Objects.requireNonNull(packageIssue);
            return this;
        }

        public Builder packageIssue(List<PackageIssueArgs> packageIssue) {
            this.packageIssue = Input.of(Objects.requireNonNull(packageIssue));
            return this;
        }

        public Builder type(@Nullable Input<String> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable String type) {
            this.type = Input.ofNullable(type);
            return this;
        }
        public GrafeasV1beta1VulnerabilityDetailsArgs build() {
            return new GrafeasV1beta1VulnerabilityDetailsArgs(effectiveSeverity, packageIssue, type);
        }
    }
}
