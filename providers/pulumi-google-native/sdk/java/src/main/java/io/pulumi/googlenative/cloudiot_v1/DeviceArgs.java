// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudiot_v1;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.cloudiot_v1.enums.DeviceLogLevel;
import io.pulumi.googlenative.cloudiot_v1.inputs.DeviceConfigArgs;
import io.pulumi.googlenative.cloudiot_v1.inputs.DeviceCredentialArgs;
import io.pulumi.googlenative.cloudiot_v1.inputs.GatewayConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DeviceArgs extends io.pulumi.resources.ResourceArgs {

    public static final DeviceArgs Empty = new DeviceArgs();

    @InputImport(name="blocked")
    private final @Nullable Input<Boolean> blocked;

    public Input<Boolean> getBlocked() {
        return this.blocked == null ? Input.empty() : this.blocked;
    }

    @InputImport(name="config")
    private final @Nullable Input<DeviceConfigArgs> config;

    public Input<DeviceConfigArgs> getConfig() {
        return this.config == null ? Input.empty() : this.config;
    }

    @InputImport(name="credentials")
    private final @Nullable Input<List<DeviceCredentialArgs>> credentials;

    public Input<List<DeviceCredentialArgs>> getCredentials() {
        return this.credentials == null ? Input.empty() : this.credentials;
    }

    @InputImport(name="gatewayConfig")
    private final @Nullable Input<GatewayConfigArgs> gatewayConfig;

    public Input<GatewayConfigArgs> getGatewayConfig() {
        return this.gatewayConfig == null ? Input.empty() : this.gatewayConfig;
    }

    @InputImport(name="id")
    private final @Nullable Input<String> id;

    public Input<String> getId() {
        return this.id == null ? Input.empty() : this.id;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="logLevel")
    private final @Nullable Input<DeviceLogLevel> logLevel;

    public Input<DeviceLogLevel> getLogLevel() {
        return this.logLevel == null ? Input.empty() : this.logLevel;
    }

    @InputImport(name="metadata")
    private final @Nullable Input<Map<String,String>> metadata;

    public Input<Map<String,String>> getMetadata() {
        return this.metadata == null ? Input.empty() : this.metadata;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="registryId", required=true)
    private final Input<String> registryId;

    public Input<String> getRegistryId() {
        return this.registryId;
    }

    public DeviceArgs(
        @Nullable Input<Boolean> blocked,
        @Nullable Input<DeviceConfigArgs> config,
        @Nullable Input<List<DeviceCredentialArgs>> credentials,
        @Nullable Input<GatewayConfigArgs> gatewayConfig,
        @Nullable Input<String> id,
        @Nullable Input<String> location,
        @Nullable Input<DeviceLogLevel> logLevel,
        @Nullable Input<Map<String,String>> metadata,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        Input<String> registryId) {
        this.blocked = blocked;
        this.config = config;
        this.credentials = credentials;
        this.gatewayConfig = gatewayConfig;
        this.id = id;
        this.location = location;
        this.logLevel = logLevel;
        this.metadata = metadata;
        this.name = name;
        this.project = project;
        this.registryId = Objects.requireNonNull(registryId, "expected parameter 'registryId' to be non-null");
    }

    private DeviceArgs() {
        this.blocked = Input.empty();
        this.config = Input.empty();
        this.credentials = Input.empty();
        this.gatewayConfig = Input.empty();
        this.id = Input.empty();
        this.location = Input.empty();
        this.logLevel = Input.empty();
        this.metadata = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.registryId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> blocked;
        private @Nullable Input<DeviceConfigArgs> config;
        private @Nullable Input<List<DeviceCredentialArgs>> credentials;
        private @Nullable Input<GatewayConfigArgs> gatewayConfig;
        private @Nullable Input<String> id;
        private @Nullable Input<String> location;
        private @Nullable Input<DeviceLogLevel> logLevel;
        private @Nullable Input<Map<String,String>> metadata;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private Input<String> registryId;

        public Builder() {
    	      // Empty
        }

        public Builder(DeviceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blocked = defaults.blocked;
    	      this.config = defaults.config;
    	      this.credentials = defaults.credentials;
    	      this.gatewayConfig = defaults.gatewayConfig;
    	      this.id = defaults.id;
    	      this.location = defaults.location;
    	      this.logLevel = defaults.logLevel;
    	      this.metadata = defaults.metadata;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.registryId = defaults.registryId;
        }

        public Builder setBlocked(@Nullable Input<Boolean> blocked) {
            this.blocked = blocked;
            return this;
        }

        public Builder setBlocked(@Nullable Boolean blocked) {
            this.blocked = Input.ofNullable(blocked);
            return this;
        }

        public Builder setConfig(@Nullable Input<DeviceConfigArgs> config) {
            this.config = config;
            return this;
        }

        public Builder setConfig(@Nullable DeviceConfigArgs config) {
            this.config = Input.ofNullable(config);
            return this;
        }

        public Builder setCredentials(@Nullable Input<List<DeviceCredentialArgs>> credentials) {
            this.credentials = credentials;
            return this;
        }

        public Builder setCredentials(@Nullable List<DeviceCredentialArgs> credentials) {
            this.credentials = Input.ofNullable(credentials);
            return this;
        }

        public Builder setGatewayConfig(@Nullable Input<GatewayConfigArgs> gatewayConfig) {
            this.gatewayConfig = gatewayConfig;
            return this;
        }

        public Builder setGatewayConfig(@Nullable GatewayConfigArgs gatewayConfig) {
            this.gatewayConfig = Input.ofNullable(gatewayConfig);
            return this;
        }

        public Builder setId(@Nullable Input<String> id) {
            this.id = id;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = Input.ofNullable(id);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setLogLevel(@Nullable Input<DeviceLogLevel> logLevel) {
            this.logLevel = logLevel;
            return this;
        }

        public Builder setLogLevel(@Nullable DeviceLogLevel logLevel) {
            this.logLevel = Input.ofNullable(logLevel);
            return this;
        }

        public Builder setMetadata(@Nullable Input<Map<String,String>> metadata) {
            this.metadata = metadata;
            return this;
        }

        public Builder setMetadata(@Nullable Map<String,String> metadata) {
            this.metadata = Input.ofNullable(metadata);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRegistryId(Input<String> registryId) {
            this.registryId = Objects.requireNonNull(registryId);
            return this;
        }

        public Builder setRegistryId(String registryId) {
            this.registryId = Input.of(Objects.requireNonNull(registryId));
            return this;
        }

        public DeviceArgs build() {
            return new DeviceArgs(blocked, config, credentials, gatewayConfig, id, location, logLevel, metadata, name, project, registryId);
        }
    }
}
