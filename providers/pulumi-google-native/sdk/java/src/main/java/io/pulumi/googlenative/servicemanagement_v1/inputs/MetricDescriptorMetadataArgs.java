// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Additional annotations that can be used to guide the usage of a metric.
 * 
 */
public final class MetricDescriptorMetadataArgs extends io.pulumi.resources.ResourceArgs {

    public static final MetricDescriptorMetadataArgs Empty = new MetricDescriptorMetadataArgs();

    /**
     * The delay of data points caused by ingestion. Data points older than this age are guaranteed to be ingested and available to be read, excluding data loss due to errors.
     * 
     */
    @Import(name="ingestDelay")
      private final @Nullable Output<String> ingestDelay;

    public Output<String> ingestDelay() {
        return this.ingestDelay == null ? Codegen.empty() : this.ingestDelay;
    }

    /**
     * The sampling period of metric data points. For metrics which are written periodically, consecutive data points are stored at this time interval, excluding data loss due to errors. Metrics with a higher granularity have a smaller sampling period.
     * 
     */
    @Import(name="samplePeriod")
      private final @Nullable Output<String> samplePeriod;

    public Output<String> samplePeriod() {
        return this.samplePeriod == null ? Codegen.empty() : this.samplePeriod;
    }

    public MetricDescriptorMetadataArgs(
        @Nullable Output<String> ingestDelay,
        @Nullable Output<String> samplePeriod) {
        this.ingestDelay = ingestDelay;
        this.samplePeriod = samplePeriod;
    }

    private MetricDescriptorMetadataArgs() {
        this.ingestDelay = Codegen.empty();
        this.samplePeriod = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MetricDescriptorMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> ingestDelay;
        private @Nullable Output<String> samplePeriod;

        public Builder() {
    	      // Empty
        }

        public Builder(MetricDescriptorMetadataArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ingestDelay = defaults.ingestDelay;
    	      this.samplePeriod = defaults.samplePeriod;
        }

        public Builder ingestDelay(@Nullable Output<String> ingestDelay) {
            this.ingestDelay = ingestDelay;
            return this;
        }
        public Builder ingestDelay(@Nullable String ingestDelay) {
            this.ingestDelay = Codegen.ofNullable(ingestDelay);
            return this;
        }
        public Builder samplePeriod(@Nullable Output<String> samplePeriod) {
            this.samplePeriod = samplePeriod;
            return this;
        }
        public Builder samplePeriod(@Nullable String samplePeriod) {
            this.samplePeriod = Codegen.ofNullable(samplePeriod);
            return this;
        }        public MetricDescriptorMetadataArgs build() {
            return new MetricDescriptorMetadataArgs(ingestDelay, samplePeriod);
        }
    }
}
