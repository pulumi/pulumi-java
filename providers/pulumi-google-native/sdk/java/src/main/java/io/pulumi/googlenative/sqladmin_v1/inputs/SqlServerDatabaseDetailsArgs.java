// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.sqladmin_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Represents a Sql Server database on the Cloud SQL instance.
 * 
 */
public final class SqlServerDatabaseDetailsArgs extends io.pulumi.resources.ResourceArgs {

    public static final SqlServerDatabaseDetailsArgs Empty = new SqlServerDatabaseDetailsArgs();

    /**
     * The version of SQL Server with which the database is to be made compatible
     * 
     */
    @Import(name="compatibilityLevel")
      private final @Nullable Output<Integer> compatibilityLevel;

    public Output<Integer> getCompatibilityLevel() {
        return this.compatibilityLevel == null ? Output.empty() : this.compatibilityLevel;
    }

    /**
     * The recovery model of a SQL Server database
     * 
     */
    @Import(name="recoveryModel")
      private final @Nullable Output<String> recoveryModel;

    public Output<String> getRecoveryModel() {
        return this.recoveryModel == null ? Output.empty() : this.recoveryModel;
    }

    public SqlServerDatabaseDetailsArgs(
        @Nullable Output<Integer> compatibilityLevel,
        @Nullable Output<String> recoveryModel) {
        this.compatibilityLevel = compatibilityLevel;
        this.recoveryModel = recoveryModel;
    }

    private SqlServerDatabaseDetailsArgs() {
        this.compatibilityLevel = Output.empty();
        this.recoveryModel = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SqlServerDatabaseDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> compatibilityLevel;
        private @Nullable Output<String> recoveryModel;

        public Builder() {
    	      // Empty
        }

        public Builder(SqlServerDatabaseDetailsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compatibilityLevel = defaults.compatibilityLevel;
    	      this.recoveryModel = defaults.recoveryModel;
        }

        public Builder compatibilityLevel(@Nullable Output<Integer> compatibilityLevel) {
            this.compatibilityLevel = compatibilityLevel;
            return this;
        }

        public Builder compatibilityLevel(@Nullable Integer compatibilityLevel) {
            this.compatibilityLevel = Output.ofNullable(compatibilityLevel);
            return this;
        }

        public Builder recoveryModel(@Nullable Output<String> recoveryModel) {
            this.recoveryModel = recoveryModel;
            return this;
        }

        public Builder recoveryModel(@Nullable String recoveryModel) {
            this.recoveryModel = Output.ofNullable(recoveryModel);
            return this;
        }
        public SqlServerDatabaseDetailsArgs build() {
            return new SqlServerDatabaseDetailsArgs(compatibilityLevel, recoveryModel);
        }
    }
}
