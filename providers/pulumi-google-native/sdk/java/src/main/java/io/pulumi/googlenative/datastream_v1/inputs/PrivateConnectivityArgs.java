// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datastream_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;


/**
 * Private Connectivity
 * 
 */
public final class PrivateConnectivityArgs extends io.pulumi.resources.ResourceArgs {

    public static final PrivateConnectivityArgs Empty = new PrivateConnectivityArgs();

    /**
     * A reference to a private connection resource. Format: `projects/{project}/locations/{location}/privateConnections/{name}`
     * 
     */
    @Import(name="privateConnection", required=true)
      private final Output<String> privateConnection;

    public Output<String> getPrivateConnection() {
        return this.privateConnection;
    }

    public PrivateConnectivityArgs(Output<String> privateConnection) {
        this.privateConnection = Objects.requireNonNull(privateConnection, "expected parameter 'privateConnection' to be non-null");
    }

    private PrivateConnectivityArgs() {
        this.privateConnection = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivateConnectivityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Output<String> privateConnection;

        public Builder() {
    	      // Empty
        }

        public Builder(PrivateConnectivityArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.privateConnection = defaults.privateConnection;
        }

        public Builder privateConnection(Output<String> privateConnection) {
            this.privateConnection = Objects.requireNonNull(privateConnection);
            return this;
        }
        public Builder privateConnection(String privateConnection) {
            this.privateConnection = Output.of(Objects.requireNonNull(privateConnection));
            return this;
        }        public PrivateConnectivityArgs build() {
            return new PrivateConnectivityArgs(privateConnection);
        }
    }
}
