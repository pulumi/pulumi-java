// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.testing_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTestMatrixArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetTestMatrixArgs Empty = new GetTestMatrixArgs();

    @InputImport(name="project")
      private final @Nullable String project;

    public Optional<String> getProject() {
        return this.project == null ? Optional.empty() : Optional.ofNullable(this.project);
    }

    @InputImport(name="testMatrixId", required=true)
      private final String testMatrixId;

    public String getTestMatrixId() {
        return this.testMatrixId;
    }

    public GetTestMatrixArgs(
        @Nullable String project,
        String testMatrixId) {
        this.project = project;
        this.testMatrixId = Objects.requireNonNull(testMatrixId, "expected parameter 'testMatrixId' to be non-null");
    }

    private GetTestMatrixArgs() {
        this.project = null;
        this.testMatrixId = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTestMatrixArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String project;
        private String testMatrixId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTestMatrixArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.project = defaults.project;
    	      this.testMatrixId = defaults.testMatrixId;
        }

        public Builder project(@Nullable String project) {
            this.project = project;
            return this;
        }

        public Builder testMatrixId(String testMatrixId) {
            this.testMatrixId = Objects.requireNonNull(testMatrixId);
            return this;
        }
        public GetTestMatrixArgs build() {
            return new GetTestMatrixArgs(project, testMatrixId);
        }
    }
}
