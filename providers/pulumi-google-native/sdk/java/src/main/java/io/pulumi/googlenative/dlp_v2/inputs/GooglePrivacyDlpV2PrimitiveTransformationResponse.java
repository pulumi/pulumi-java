// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2BucketingConfigResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CharacterMaskConfigResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CryptoDeterministicConfigResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CryptoHashConfigResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2DateShiftConfigResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2FixedSizeBucketingConfigResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2RedactConfigResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ReplaceDictionaryConfigResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ReplaceValueConfigResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2TimePartConfigResponse;
import java.util.Objects;


/**
 * A rule for transforming a value.
 * 
 */
public final class GooglePrivacyDlpV2PrimitiveTransformationResponse extends io.pulumi.resources.InvokeArgs {

    public static final GooglePrivacyDlpV2PrimitiveTransformationResponse Empty = new GooglePrivacyDlpV2PrimitiveTransformationResponse();

    /**
     * Bucketing
     * 
     */
    @Import(name="bucketingConfig", required=true)
      private final GooglePrivacyDlpV2BucketingConfigResponse bucketingConfig;

    public GooglePrivacyDlpV2BucketingConfigResponse bucketingConfig() {
        return this.bucketingConfig;
    }

    /**
     * Mask
     * 
     */
    @Import(name="characterMaskConfig", required=true)
      private final GooglePrivacyDlpV2CharacterMaskConfigResponse characterMaskConfig;

    public GooglePrivacyDlpV2CharacterMaskConfigResponse characterMaskConfig() {
        return this.characterMaskConfig;
    }

    /**
     * Deterministic Crypto
     * 
     */
    @Import(name="cryptoDeterministicConfig", required=true)
      private final GooglePrivacyDlpV2CryptoDeterministicConfigResponse cryptoDeterministicConfig;

    public GooglePrivacyDlpV2CryptoDeterministicConfigResponse cryptoDeterministicConfig() {
        return this.cryptoDeterministicConfig;
    }

    /**
     * Crypto
     * 
     */
    @Import(name="cryptoHashConfig", required=true)
      private final GooglePrivacyDlpV2CryptoHashConfigResponse cryptoHashConfig;

    public GooglePrivacyDlpV2CryptoHashConfigResponse cryptoHashConfig() {
        return this.cryptoHashConfig;
    }

    /**
     * Ffx-Fpe
     * 
     */
    @Import(name="cryptoReplaceFfxFpeConfig", required=true)
      private final GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse cryptoReplaceFfxFpeConfig;

    public GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse cryptoReplaceFfxFpeConfig() {
        return this.cryptoReplaceFfxFpeConfig;
    }

    /**
     * Date Shift
     * 
     */
    @Import(name="dateShiftConfig", required=true)
      private final GooglePrivacyDlpV2DateShiftConfigResponse dateShiftConfig;

    public GooglePrivacyDlpV2DateShiftConfigResponse dateShiftConfig() {
        return this.dateShiftConfig;
    }

    /**
     * Fixed size bucketing
     * 
     */
    @Import(name="fixedSizeBucketingConfig", required=true)
      private final GooglePrivacyDlpV2FixedSizeBucketingConfigResponse fixedSizeBucketingConfig;

    public GooglePrivacyDlpV2FixedSizeBucketingConfigResponse fixedSizeBucketingConfig() {
        return this.fixedSizeBucketingConfig;
    }

    /**
     * Redact
     * 
     */
    @Import(name="redactConfig", required=true)
      private final GooglePrivacyDlpV2RedactConfigResponse redactConfig;

    public GooglePrivacyDlpV2RedactConfigResponse redactConfig() {
        return this.redactConfig;
    }

    /**
     * Replace with a specified value.
     * 
     */
    @Import(name="replaceConfig", required=true)
      private final GooglePrivacyDlpV2ReplaceValueConfigResponse replaceConfig;

    public GooglePrivacyDlpV2ReplaceValueConfigResponse replaceConfig() {
        return this.replaceConfig;
    }

    /**
     * Replace with a value randomly drawn (with replacement) from a dictionary.
     * 
     */
    @Import(name="replaceDictionaryConfig", required=true)
      private final GooglePrivacyDlpV2ReplaceDictionaryConfigResponse replaceDictionaryConfig;

    public GooglePrivacyDlpV2ReplaceDictionaryConfigResponse replaceDictionaryConfig() {
        return this.replaceDictionaryConfig;
    }

    /**
     * Replace with infotype
     * 
     */
    @Import(name="replaceWithInfoTypeConfig", required=true)
      private final GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse replaceWithInfoTypeConfig;

    public GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse replaceWithInfoTypeConfig() {
        return this.replaceWithInfoTypeConfig;
    }

    /**
     * Time extraction
     * 
     */
    @Import(name="timePartConfig", required=true)
      private final GooglePrivacyDlpV2TimePartConfigResponse timePartConfig;

    public GooglePrivacyDlpV2TimePartConfigResponse timePartConfig() {
        return this.timePartConfig;
    }

    public GooglePrivacyDlpV2PrimitiveTransformationResponse(
        GooglePrivacyDlpV2BucketingConfigResponse bucketingConfig,
        GooglePrivacyDlpV2CharacterMaskConfigResponse characterMaskConfig,
        GooglePrivacyDlpV2CryptoDeterministicConfigResponse cryptoDeterministicConfig,
        GooglePrivacyDlpV2CryptoHashConfigResponse cryptoHashConfig,
        GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse cryptoReplaceFfxFpeConfig,
        GooglePrivacyDlpV2DateShiftConfigResponse dateShiftConfig,
        GooglePrivacyDlpV2FixedSizeBucketingConfigResponse fixedSizeBucketingConfig,
        GooglePrivacyDlpV2RedactConfigResponse redactConfig,
        GooglePrivacyDlpV2ReplaceValueConfigResponse replaceConfig,
        GooglePrivacyDlpV2ReplaceDictionaryConfigResponse replaceDictionaryConfig,
        GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse replaceWithInfoTypeConfig,
        GooglePrivacyDlpV2TimePartConfigResponse timePartConfig) {
        this.bucketingConfig = Objects.requireNonNull(bucketingConfig, "expected parameter 'bucketingConfig' to be non-null");
        this.characterMaskConfig = Objects.requireNonNull(characterMaskConfig, "expected parameter 'characterMaskConfig' to be non-null");
        this.cryptoDeterministicConfig = Objects.requireNonNull(cryptoDeterministicConfig, "expected parameter 'cryptoDeterministicConfig' to be non-null");
        this.cryptoHashConfig = Objects.requireNonNull(cryptoHashConfig, "expected parameter 'cryptoHashConfig' to be non-null");
        this.cryptoReplaceFfxFpeConfig = Objects.requireNonNull(cryptoReplaceFfxFpeConfig, "expected parameter 'cryptoReplaceFfxFpeConfig' to be non-null");
        this.dateShiftConfig = Objects.requireNonNull(dateShiftConfig, "expected parameter 'dateShiftConfig' to be non-null");
        this.fixedSizeBucketingConfig = Objects.requireNonNull(fixedSizeBucketingConfig, "expected parameter 'fixedSizeBucketingConfig' to be non-null");
        this.redactConfig = Objects.requireNonNull(redactConfig, "expected parameter 'redactConfig' to be non-null");
        this.replaceConfig = Objects.requireNonNull(replaceConfig, "expected parameter 'replaceConfig' to be non-null");
        this.replaceDictionaryConfig = Objects.requireNonNull(replaceDictionaryConfig, "expected parameter 'replaceDictionaryConfig' to be non-null");
        this.replaceWithInfoTypeConfig = Objects.requireNonNull(replaceWithInfoTypeConfig, "expected parameter 'replaceWithInfoTypeConfig' to be non-null");
        this.timePartConfig = Objects.requireNonNull(timePartConfig, "expected parameter 'timePartConfig' to be non-null");
    }

    private GooglePrivacyDlpV2PrimitiveTransformationResponse() {
        this.bucketingConfig = null;
        this.characterMaskConfig = null;
        this.cryptoDeterministicConfig = null;
        this.cryptoHashConfig = null;
        this.cryptoReplaceFfxFpeConfig = null;
        this.dateShiftConfig = null;
        this.fixedSizeBucketingConfig = null;
        this.redactConfig = null;
        this.replaceConfig = null;
        this.replaceDictionaryConfig = null;
        this.replaceWithInfoTypeConfig = null;
        this.timePartConfig = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2PrimitiveTransformationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2BucketingConfigResponse bucketingConfig;
        private GooglePrivacyDlpV2CharacterMaskConfigResponse characterMaskConfig;
        private GooglePrivacyDlpV2CryptoDeterministicConfigResponse cryptoDeterministicConfig;
        private GooglePrivacyDlpV2CryptoHashConfigResponse cryptoHashConfig;
        private GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse cryptoReplaceFfxFpeConfig;
        private GooglePrivacyDlpV2DateShiftConfigResponse dateShiftConfig;
        private GooglePrivacyDlpV2FixedSizeBucketingConfigResponse fixedSizeBucketingConfig;
        private GooglePrivacyDlpV2RedactConfigResponse redactConfig;
        private GooglePrivacyDlpV2ReplaceValueConfigResponse replaceConfig;
        private GooglePrivacyDlpV2ReplaceDictionaryConfigResponse replaceDictionaryConfig;
        private GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse replaceWithInfoTypeConfig;
        private GooglePrivacyDlpV2TimePartConfigResponse timePartConfig;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2PrimitiveTransformationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketingConfig = defaults.bucketingConfig;
    	      this.characterMaskConfig = defaults.characterMaskConfig;
    	      this.cryptoDeterministicConfig = defaults.cryptoDeterministicConfig;
    	      this.cryptoHashConfig = defaults.cryptoHashConfig;
    	      this.cryptoReplaceFfxFpeConfig = defaults.cryptoReplaceFfxFpeConfig;
    	      this.dateShiftConfig = defaults.dateShiftConfig;
    	      this.fixedSizeBucketingConfig = defaults.fixedSizeBucketingConfig;
    	      this.redactConfig = defaults.redactConfig;
    	      this.replaceConfig = defaults.replaceConfig;
    	      this.replaceDictionaryConfig = defaults.replaceDictionaryConfig;
    	      this.replaceWithInfoTypeConfig = defaults.replaceWithInfoTypeConfig;
    	      this.timePartConfig = defaults.timePartConfig;
        }

        public Builder bucketingConfig(GooglePrivacyDlpV2BucketingConfigResponse bucketingConfig) {
            this.bucketingConfig = Objects.requireNonNull(bucketingConfig);
            return this;
        }
        public Builder characterMaskConfig(GooglePrivacyDlpV2CharacterMaskConfigResponse characterMaskConfig) {
            this.characterMaskConfig = Objects.requireNonNull(characterMaskConfig);
            return this;
        }
        public Builder cryptoDeterministicConfig(GooglePrivacyDlpV2CryptoDeterministicConfigResponse cryptoDeterministicConfig) {
            this.cryptoDeterministicConfig = Objects.requireNonNull(cryptoDeterministicConfig);
            return this;
        }
        public Builder cryptoHashConfig(GooglePrivacyDlpV2CryptoHashConfigResponse cryptoHashConfig) {
            this.cryptoHashConfig = Objects.requireNonNull(cryptoHashConfig);
            return this;
        }
        public Builder cryptoReplaceFfxFpeConfig(GooglePrivacyDlpV2CryptoReplaceFfxFpeConfigResponse cryptoReplaceFfxFpeConfig) {
            this.cryptoReplaceFfxFpeConfig = Objects.requireNonNull(cryptoReplaceFfxFpeConfig);
            return this;
        }
        public Builder dateShiftConfig(GooglePrivacyDlpV2DateShiftConfigResponse dateShiftConfig) {
            this.dateShiftConfig = Objects.requireNonNull(dateShiftConfig);
            return this;
        }
        public Builder fixedSizeBucketingConfig(GooglePrivacyDlpV2FixedSizeBucketingConfigResponse fixedSizeBucketingConfig) {
            this.fixedSizeBucketingConfig = Objects.requireNonNull(fixedSizeBucketingConfig);
            return this;
        }
        public Builder redactConfig(GooglePrivacyDlpV2RedactConfigResponse redactConfig) {
            this.redactConfig = Objects.requireNonNull(redactConfig);
            return this;
        }
        public Builder replaceConfig(GooglePrivacyDlpV2ReplaceValueConfigResponse replaceConfig) {
            this.replaceConfig = Objects.requireNonNull(replaceConfig);
            return this;
        }
        public Builder replaceDictionaryConfig(GooglePrivacyDlpV2ReplaceDictionaryConfigResponse replaceDictionaryConfig) {
            this.replaceDictionaryConfig = Objects.requireNonNull(replaceDictionaryConfig);
            return this;
        }
        public Builder replaceWithInfoTypeConfig(GooglePrivacyDlpV2ReplaceWithInfoTypeConfigResponse replaceWithInfoTypeConfig) {
            this.replaceWithInfoTypeConfig = Objects.requireNonNull(replaceWithInfoTypeConfig);
            return this;
        }
        public Builder timePartConfig(GooglePrivacyDlpV2TimePartConfigResponse timePartConfig) {
            this.timePartConfig = Objects.requireNonNull(timePartConfig);
            return this;
        }        public GooglePrivacyDlpV2PrimitiveTransformationResponse build() {
            return new GooglePrivacyDlpV2PrimitiveTransformationResponse(bucketingConfig, characterMaskConfig, cryptoDeterministicConfig, cryptoHashConfig, cryptoReplaceFfxFpeConfig, dateShiftConfig, fixedSizeBucketingConfig, redactConfig, replaceConfig, replaceDictionaryConfig, replaceWithInfoTypeConfig, timePartConfig);
        }
    }
}
