// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.containeranalysis_v1alpha1.enums.VulnerabilityTypeSeverity;
import io.pulumi.googlenative.containeranalysis_v1alpha1.inputs.DetailArgs;
import java.lang.Double;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * VulnerabilityType provides metadata about a security vulnerability.
 * 
 */
public final class VulnerabilityTypeArgs extends io.pulumi.resources.ResourceArgs {

    public static final VulnerabilityTypeArgs Empty = new VulnerabilityTypeArgs();

    /**
     * The CVSS score for this Vulnerability.
     * 
     */
    @InputImport(name="cvssScore")
      private final @Nullable Input<Double> cvssScore;

    public Input<Double> getCvssScore() {
        return this.cvssScore == null ? Input.empty() : this.cvssScore;
    }

    /**
     * All information about the package to specifically identify this vulnerability. One entry per (version range and cpe_uri) the package vulnerability has manifested in.
     * 
     */
    @InputImport(name="details")
      private final @Nullable Input<List<DetailArgs>> details;

    public Input<List<DetailArgs>> getDetails() {
        return this.details == null ? Input.empty() : this.details;
    }

    /**
     * Note provider assigned impact of the vulnerability
     * 
     */
    @InputImport(name="severity")
      private final @Nullable Input<VulnerabilityTypeSeverity> severity;

    public Input<VulnerabilityTypeSeverity> getSeverity() {
        return this.severity == null ? Input.empty() : this.severity;
    }

    public VulnerabilityTypeArgs(
        @Nullable Input<Double> cvssScore,
        @Nullable Input<List<DetailArgs>> details,
        @Nullable Input<VulnerabilityTypeSeverity> severity) {
        this.cvssScore = cvssScore;
        this.details = details;
        this.severity = severity;
    }

    private VulnerabilityTypeArgs() {
        this.cvssScore = Input.empty();
        this.details = Input.empty();
        this.severity = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VulnerabilityTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Double> cvssScore;
        private @Nullable Input<List<DetailArgs>> details;
        private @Nullable Input<VulnerabilityTypeSeverity> severity;

        public Builder() {
    	      // Empty
        }

        public Builder(VulnerabilityTypeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cvssScore = defaults.cvssScore;
    	      this.details = defaults.details;
    	      this.severity = defaults.severity;
        }

        public Builder setCvssScore(@Nullable Input<Double> cvssScore) {
            this.cvssScore = cvssScore;
            return this;
        }

        public Builder setCvssScore(@Nullable Double cvssScore) {
            this.cvssScore = Input.ofNullable(cvssScore);
            return this;
        }

        public Builder setDetails(@Nullable Input<List<DetailArgs>> details) {
            this.details = details;
            return this;
        }

        public Builder setDetails(@Nullable List<DetailArgs> details) {
            this.details = Input.ofNullable(details);
            return this;
        }

        public Builder setSeverity(@Nullable Input<VulnerabilityTypeSeverity> severity) {
            this.severity = severity;
            return this;
        }

        public Builder setSeverity(@Nullable VulnerabilityTypeSeverity severity) {
            this.severity = Input.ofNullable(severity);
            return this;
        }
        public VulnerabilityTypeArgs build() {
            return new VulnerabilityTypeArgs(cvssScore, details, severity);
        }
    }
}
