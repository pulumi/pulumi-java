// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudtasks_v2beta2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.cloudtasks_v2beta2.outputs.AppEngineRoutingResponse;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class AppEngineHttpRequestResponse {
    private final AppEngineRoutingResponse appEngineRouting;
    private final Map<String,String> headers;
    private final String httpMethod;
    private final String payload;
    private final String relativeUrl;

    @OutputCustomType.Constructor({"appEngineRouting","headers","httpMethod","payload","relativeUrl"})
    private AppEngineHttpRequestResponse(
        AppEngineRoutingResponse appEngineRouting,
        Map<String,String> headers,
        String httpMethod,
        String payload,
        String relativeUrl) {
        this.appEngineRouting = Objects.requireNonNull(appEngineRouting);
        this.headers = Objects.requireNonNull(headers);
        this.httpMethod = Objects.requireNonNull(httpMethod);
        this.payload = Objects.requireNonNull(payload);
        this.relativeUrl = Objects.requireNonNull(relativeUrl);
    }

    public AppEngineRoutingResponse getAppEngineRouting() {
        return this.appEngineRouting;
    }
    public Map<String,String> getHeaders() {
        return this.headers;
    }
    public String getHttpMethod() {
        return this.httpMethod;
    }
    public String getPayload() {
        return this.payload;
    }
    public String getRelativeUrl() {
        return this.relativeUrl;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AppEngineHttpRequestResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppEngineRoutingResponse appEngineRouting;
        private Map<String,String> headers;
        private String httpMethod;
        private String payload;
        private String relativeUrl;

        public Builder() {
    	      // Empty
        }

        public Builder(AppEngineHttpRequestResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appEngineRouting = defaults.appEngineRouting;
    	      this.headers = defaults.headers;
    	      this.httpMethod = defaults.httpMethod;
    	      this.payload = defaults.payload;
    	      this.relativeUrl = defaults.relativeUrl;
        }

        public Builder setAppEngineRouting(AppEngineRoutingResponse appEngineRouting) {
            this.appEngineRouting = Objects.requireNonNull(appEngineRouting);
            return this;
        }

        public Builder setHeaders(Map<String,String> headers) {
            this.headers = Objects.requireNonNull(headers);
            return this;
        }

        public Builder setHttpMethod(String httpMethod) {
            this.httpMethod = Objects.requireNonNull(httpMethod);
            return this;
        }

        public Builder setPayload(String payload) {
            this.payload = Objects.requireNonNull(payload);
            return this;
        }

        public Builder setRelativeUrl(String relativeUrl) {
            this.relativeUrl = Objects.requireNonNull(relativeUrl);
            return this;
        }

        public AppEngineHttpRequestResponse build() {
            return new AppEngineHttpRequestResponse(appEngineRouting, headers, httpMethod, payload, relativeUrl);
        }
    }
}
