// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.apigee_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.apigee_v1.inputs.GoogleCloudApigeeV1TlsInfoCommonNameArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * TLS configuration information for virtual hosts and TargetServers.
 * 
 */
public final class GoogleCloudApigeeV1TlsInfoArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudApigeeV1TlsInfoArgs Empty = new GoogleCloudApigeeV1TlsInfoArgs();

    /**
     * The SSL/TLS cipher suites to be used. Must be one of the cipher suite names listed in: http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#ciphersuites
     * 
     */
    @InputImport(name="ciphers")
      private final @Nullable Input<List<String>> ciphers;

    public Input<List<String>> getCiphers() {
        return this.ciphers == null ? Input.empty() : this.ciphers;
    }

    /**
     * Optional. Enables two-way TLS.
     * 
     */
    @InputImport(name="clientAuthEnabled")
      private final @Nullable Input<Boolean> clientAuthEnabled;

    public Input<Boolean> getClientAuthEnabled() {
        return this.clientAuthEnabled == null ? Input.empty() : this.clientAuthEnabled;
    }

    /**
     * The TLS Common Name of the certificate.
     * 
     */
    @InputImport(name="commonName")
      private final @Nullable Input<GoogleCloudApigeeV1TlsInfoCommonNameArgs> commonName;

    public Input<GoogleCloudApigeeV1TlsInfoCommonNameArgs> getCommonName() {
        return this.commonName == null ? Input.empty() : this.commonName;
    }

    /**
     * Enables TLS. If false, neither one-way nor two-way TLS will be enabled.
     * 
     */
    @InputImport(name="enabled", required=true)
      private final Input<Boolean> enabled;

    public Input<Boolean> getEnabled() {
        return this.enabled;
    }

    /**
     * If true, Edge ignores TLS certificate errors. Valid when configuring TLS for target servers and target endpoints, and when configuring virtual hosts that use 2-way TLS. When used with a target endpoint/target server, if the backend system uses SNI and returns a cert with a subject Distinguished Name (DN) that does not match the hostname, there is no way to ignore the error and the connection fails.
     * 
     */
    @InputImport(name="ignoreValidationErrors")
      private final @Nullable Input<Boolean> ignoreValidationErrors;

    public Input<Boolean> getIgnoreValidationErrors() {
        return this.ignoreValidationErrors == null ? Input.empty() : this.ignoreValidationErrors;
    }

    /**
     * Required if `client_auth_enabled` is true. The resource ID for the alias containing the private key and cert.
     * 
     */
    @InputImport(name="keyAlias")
      private final @Nullable Input<String> keyAlias;

    public Input<String> getKeyAlias() {
        return this.keyAlias == null ? Input.empty() : this.keyAlias;
    }

    /**
     * Required if `client_auth_enabled` is true. The resource ID of the keystore.
     * 
     */
    @InputImport(name="keyStore")
      private final @Nullable Input<String> keyStore;

    public Input<String> getKeyStore() {
        return this.keyStore == null ? Input.empty() : this.keyStore;
    }

    /**
     * The TLS versioins to be used.
     * 
     */
    @InputImport(name="protocols")
      private final @Nullable Input<List<String>> protocols;

    public Input<List<String>> getProtocols() {
        return this.protocols == null ? Input.empty() : this.protocols;
    }

    /**
     * The resource ID of the truststore.
     * 
     */
    @InputImport(name="trustStore")
      private final @Nullable Input<String> trustStore;

    public Input<String> getTrustStore() {
        return this.trustStore == null ? Input.empty() : this.trustStore;
    }

    public GoogleCloudApigeeV1TlsInfoArgs(
        @Nullable Input<List<String>> ciphers,
        @Nullable Input<Boolean> clientAuthEnabled,
        @Nullable Input<GoogleCloudApigeeV1TlsInfoCommonNameArgs> commonName,
        Input<Boolean> enabled,
        @Nullable Input<Boolean> ignoreValidationErrors,
        @Nullable Input<String> keyAlias,
        @Nullable Input<String> keyStore,
        @Nullable Input<List<String>> protocols,
        @Nullable Input<String> trustStore) {
        this.ciphers = ciphers;
        this.clientAuthEnabled = clientAuthEnabled;
        this.commonName = commonName;
        this.enabled = Objects.requireNonNull(enabled, "expected parameter 'enabled' to be non-null");
        this.ignoreValidationErrors = ignoreValidationErrors;
        this.keyAlias = keyAlias;
        this.keyStore = keyStore;
        this.protocols = protocols;
        this.trustStore = trustStore;
    }

    private GoogleCloudApigeeV1TlsInfoArgs() {
        this.ciphers = Input.empty();
        this.clientAuthEnabled = Input.empty();
        this.commonName = Input.empty();
        this.enabled = Input.empty();
        this.ignoreValidationErrors = Input.empty();
        this.keyAlias = Input.empty();
        this.keyStore = Input.empty();
        this.protocols = Input.empty();
        this.trustStore = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudApigeeV1TlsInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<String>> ciphers;
        private @Nullable Input<Boolean> clientAuthEnabled;
        private @Nullable Input<GoogleCloudApigeeV1TlsInfoCommonNameArgs> commonName;
        private Input<Boolean> enabled;
        private @Nullable Input<Boolean> ignoreValidationErrors;
        private @Nullable Input<String> keyAlias;
        private @Nullable Input<String> keyStore;
        private @Nullable Input<List<String>> protocols;
        private @Nullable Input<String> trustStore;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudApigeeV1TlsInfoArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ciphers = defaults.ciphers;
    	      this.clientAuthEnabled = defaults.clientAuthEnabled;
    	      this.commonName = defaults.commonName;
    	      this.enabled = defaults.enabled;
    	      this.ignoreValidationErrors = defaults.ignoreValidationErrors;
    	      this.keyAlias = defaults.keyAlias;
    	      this.keyStore = defaults.keyStore;
    	      this.protocols = defaults.protocols;
    	      this.trustStore = defaults.trustStore;
        }

        public Builder ciphers(@Nullable Input<List<String>> ciphers) {
            this.ciphers = ciphers;
            return this;
        }

        public Builder ciphers(@Nullable List<String> ciphers) {
            this.ciphers = Input.ofNullable(ciphers);
            return this;
        }

        public Builder clientAuthEnabled(@Nullable Input<Boolean> clientAuthEnabled) {
            this.clientAuthEnabled = clientAuthEnabled;
            return this;
        }

        public Builder clientAuthEnabled(@Nullable Boolean clientAuthEnabled) {
            this.clientAuthEnabled = Input.ofNullable(clientAuthEnabled);
            return this;
        }

        public Builder commonName(@Nullable Input<GoogleCloudApigeeV1TlsInfoCommonNameArgs> commonName) {
            this.commonName = commonName;
            return this;
        }

        public Builder commonName(@Nullable GoogleCloudApigeeV1TlsInfoCommonNameArgs commonName) {
            this.commonName = Input.ofNullable(commonName);
            return this;
        }

        public Builder enabled(Input<Boolean> enabled) {
            this.enabled = Objects.requireNonNull(enabled);
            return this;
        }

        public Builder enabled(Boolean enabled) {
            this.enabled = Input.of(Objects.requireNonNull(enabled));
            return this;
        }

        public Builder ignoreValidationErrors(@Nullable Input<Boolean> ignoreValidationErrors) {
            this.ignoreValidationErrors = ignoreValidationErrors;
            return this;
        }

        public Builder ignoreValidationErrors(@Nullable Boolean ignoreValidationErrors) {
            this.ignoreValidationErrors = Input.ofNullable(ignoreValidationErrors);
            return this;
        }

        public Builder keyAlias(@Nullable Input<String> keyAlias) {
            this.keyAlias = keyAlias;
            return this;
        }

        public Builder keyAlias(@Nullable String keyAlias) {
            this.keyAlias = Input.ofNullable(keyAlias);
            return this;
        }

        public Builder keyStore(@Nullable Input<String> keyStore) {
            this.keyStore = keyStore;
            return this;
        }

        public Builder keyStore(@Nullable String keyStore) {
            this.keyStore = Input.ofNullable(keyStore);
            return this;
        }

        public Builder protocols(@Nullable Input<List<String>> protocols) {
            this.protocols = protocols;
            return this;
        }

        public Builder protocols(@Nullable List<String> protocols) {
            this.protocols = Input.ofNullable(protocols);
            return this;
        }

        public Builder trustStore(@Nullable Input<String> trustStore) {
            this.trustStore = trustStore;
            return this;
        }

        public Builder trustStore(@Nullable String trustStore) {
            this.trustStore = Input.ofNullable(trustStore);
            return this;
        }
        public GoogleCloudApigeeV1TlsInfoArgs build() {
            return new GoogleCloudApigeeV1TlsInfoArgs(ciphers, clientAuthEnabled, commonName, enabled, ignoreValidationErrors, keyAlias, keyStore, protocols, trustStore);
        }
    }
}
