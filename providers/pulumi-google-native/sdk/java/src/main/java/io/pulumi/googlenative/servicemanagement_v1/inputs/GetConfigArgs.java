// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConfigArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetConfigArgs Empty = new GetConfigArgs();

    @Import(name="configId", required=true)
      private final String configId;

    public String getConfigId() {
        return this.configId;
    }

    @Import(name="serviceName", required=true)
      private final String serviceName;

    public String getServiceName() {
        return this.serviceName;
    }

    @Import(name="view")
      private final @Nullable String view;

    public Optional<String> getView() {
        return this.view == null ? Optional.empty() : Optional.ofNullable(this.view);
    }

    public GetConfigArgs(
        String configId,
        String serviceName,
        @Nullable String view) {
        this.configId = Objects.requireNonNull(configId, "expected parameter 'configId' to be non-null");
        this.serviceName = Objects.requireNonNull(serviceName, "expected parameter 'serviceName' to be non-null");
        this.view = view;
    }

    private GetConfigArgs() {
        this.configId = null;
        this.serviceName = null;
        this.view = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String configId;
        private String serviceName;
        private @Nullable String view;

        public Builder() {
    	      // Empty
        }

        public Builder(GetConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.configId = defaults.configId;
    	      this.serviceName = defaults.serviceName;
    	      this.view = defaults.view;
        }

        public Builder configId(String configId) {
            this.configId = Objects.requireNonNull(configId);
            return this;
        }

        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }

        public Builder view(@Nullable String view) {
            this.view = view;
            return this;
        }
        public GetConfigArgs build() {
            return new GetConfigArgs(configId, serviceName, view);
        }
    }
}
