// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.firebaserules_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ReleaseArgs extends io.pulumi.resources.ResourceArgs {

    public static final ReleaseArgs Empty = new ReleaseArgs();

    /**
     * Format: `projects/{project_id}/releases/{release_id}`
     * 
     */
    @Import(name="name")
      private final @Nullable Output<String> name;

    public Output<String> name() {
        return this.name == null ? Codegen.empty() : this.name;
    }

    @Import(name="project")
      private final @Nullable Output<String> project;

    public Output<String> project() {
        return this.project == null ? Codegen.empty() : this.project;
    }

    /**
     * Name of the `Ruleset` referred to by this `Release`. The `Ruleset` must exist the `Release` to be created.
     * 
     */
    @Import(name="rulesetName")
      private final @Nullable Output<String> rulesetName;

    public Output<String> rulesetName() {
        return this.rulesetName == null ? Codegen.empty() : this.rulesetName;
    }

    public ReleaseArgs(
        @Nullable Output<String> name,
        @Nullable Output<String> project,
        @Nullable Output<String> rulesetName) {
        this.name = name;
        this.project = project;
        this.rulesetName = rulesetName;
    }

    private ReleaseArgs() {
        this.name = Codegen.empty();
        this.project = Codegen.empty();
        this.rulesetName = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReleaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> name;
        private @Nullable Output<String> project;
        private @Nullable Output<String> rulesetName;

        public Builder() {
    	      // Empty
        }

        public Builder(ReleaseArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.rulesetName = defaults.rulesetName;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = Codegen.ofNullable(name);
            return this;
        }
        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }
        public Builder project(@Nullable String project) {
            this.project = Codegen.ofNullable(project);
            return this;
        }
        public Builder rulesetName(@Nullable Output<String> rulesetName) {
            this.rulesetName = rulesetName;
            return this;
        }
        public Builder rulesetName(@Nullable String rulesetName) {
            this.rulesetName = Codegen.ofNullable(rulesetName);
            return this;
        }        public ReleaseArgs build() {
            return new ReleaseArgs(name, project, rulesetName);
        }
    }
}
