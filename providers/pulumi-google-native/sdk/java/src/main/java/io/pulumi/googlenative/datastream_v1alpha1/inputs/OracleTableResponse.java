// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datastream_v1alpha1.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.datastream_v1alpha1.inputs.OracleColumnResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Oracle table.
 * 
 */
public final class OracleTableResponse extends io.pulumi.resources.InvokeArgs {

    public static final OracleTableResponse Empty = new OracleTableResponse();

    /**
     * Oracle columns in the schema. When unspecified as part of inclue/exclude lists, includes/excludes everything.
     * 
     */
    @InputImport(name="oracleColumns", required=true)
      private final List<OracleColumnResponse> oracleColumns;

    public List<OracleColumnResponse> getOracleColumns() {
        return this.oracleColumns;
    }

    /**
     * Table name.
     * 
     */
    @InputImport(name="tableName", required=true)
      private final String tableName;

    public String getTableName() {
        return this.tableName;
    }

    public OracleTableResponse(
        List<OracleColumnResponse> oracleColumns,
        String tableName) {
        this.oracleColumns = Objects.requireNonNull(oracleColumns, "expected parameter 'oracleColumns' to be non-null");
        this.tableName = Objects.requireNonNull(tableName, "expected parameter 'tableName' to be non-null");
    }

    private OracleTableResponse() {
        this.oracleColumns = List.of();
        this.tableName = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OracleTableResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<OracleColumnResponse> oracleColumns;
        private String tableName;

        public Builder() {
    	      // Empty
        }

        public Builder(OracleTableResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.oracleColumns = defaults.oracleColumns;
    	      this.tableName = defaults.tableName;
        }

        public Builder setOracleColumns(List<OracleColumnResponse> oracleColumns) {
            this.oracleColumns = Objects.requireNonNull(oracleColumns);
            return this;
        }

        public Builder setTableName(String tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }
        public OracleTableResponse build() {
            return new OracleTableResponse(oracleColumns, tableName);
        }
    }
}
