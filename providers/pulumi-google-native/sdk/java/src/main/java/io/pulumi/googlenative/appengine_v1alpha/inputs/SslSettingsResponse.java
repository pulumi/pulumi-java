// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.appengine_v1alpha.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class SslSettingsResponse extends io.pulumi.resources.InvokeArgs {

    public static final SslSettingsResponse Empty = new SslSettingsResponse();

    @InputImport(name="certificateId", required=true)
    private final String certificateId;

    public String getCertificateId() {
        return this.certificateId;
    }

    @InputImport(name="isManagedCertificate", required=true)
    private final Boolean isManagedCertificate;

    public Boolean getIsManagedCertificate() {
        return this.isManagedCertificate;
    }

    public SslSettingsResponse(
        String certificateId,
        Boolean isManagedCertificate) {
        this.certificateId = Objects.requireNonNull(certificateId, "expected parameter 'certificateId' to be non-null");
        this.isManagedCertificate = Objects.requireNonNull(isManagedCertificate, "expected parameter 'isManagedCertificate' to be non-null");
    }

    private SslSettingsResponse() {
        this.certificateId = null;
        this.isManagedCertificate = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SslSettingsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String certificateId;
        private Boolean isManagedCertificate;

        public Builder() {
    	      // Empty
        }

        public Builder(SslSettingsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateId = defaults.certificateId;
    	      this.isManagedCertificate = defaults.isManagedCertificate;
        }

        public Builder setCertificateId(String certificateId) {
            this.certificateId = Objects.requireNonNull(certificateId);
            return this;
        }

        public Builder setIsManagedCertificate(Boolean isManagedCertificate) {
            this.isManagedCertificate = Objects.requireNonNull(isManagedCertificate);
            return this;
        }

        public SslSettingsResponse build() {
            return new SslSettingsResponse(certificateId, isManagedCertificate);
        }
    }
}
