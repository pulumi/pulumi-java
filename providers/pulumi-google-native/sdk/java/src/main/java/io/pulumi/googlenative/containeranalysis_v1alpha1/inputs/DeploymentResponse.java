// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1alpha1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class DeploymentResponse extends io.pulumi.resources.InvokeArgs {

    public static final DeploymentResponse Empty = new DeploymentResponse();

    @InputImport(name="address", required=true)
    private final String address;

    public String getAddress() {
        return this.address;
    }

    @InputImport(name="config", required=true)
    private final String config;

    public String getConfig() {
        return this.config;
    }

    @InputImport(name="deployTime", required=true)
    private final String deployTime;

    public String getDeployTime() {
        return this.deployTime;
    }

    @InputImport(name="platform", required=true)
    private final String platform;

    public String getPlatform() {
        return this.platform;
    }

    @InputImport(name="resourceUri", required=true)
    private final List<String> resourceUri;

    public List<String> getResourceUri() {
        return this.resourceUri;
    }

    @InputImport(name="undeployTime", required=true)
    private final String undeployTime;

    public String getUndeployTime() {
        return this.undeployTime;
    }

    @InputImport(name="userEmail", required=true)
    private final String userEmail;

    public String getUserEmail() {
        return this.userEmail;
    }

    public DeploymentResponse(
        String address,
        String config,
        String deployTime,
        String platform,
        List<String> resourceUri,
        String undeployTime,
        String userEmail) {
        this.address = Objects.requireNonNull(address, "expected parameter 'address' to be non-null");
        this.config = Objects.requireNonNull(config, "expected parameter 'config' to be non-null");
        this.deployTime = Objects.requireNonNull(deployTime, "expected parameter 'deployTime' to be non-null");
        this.platform = Objects.requireNonNull(platform, "expected parameter 'platform' to be non-null");
        this.resourceUri = Objects.requireNonNull(resourceUri, "expected parameter 'resourceUri' to be non-null");
        this.undeployTime = Objects.requireNonNull(undeployTime, "expected parameter 'undeployTime' to be non-null");
        this.userEmail = Objects.requireNonNull(userEmail, "expected parameter 'userEmail' to be non-null");
    }

    private DeploymentResponse() {
        this.address = null;
        this.config = null;
        this.deployTime = null;
        this.platform = null;
        this.resourceUri = List.of();
        this.undeployTime = null;
        this.userEmail = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String address;
        private String config;
        private String deployTime;
        private String platform;
        private List<String> resourceUri;
        private String undeployTime;
        private String userEmail;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.address = defaults.address;
    	      this.config = defaults.config;
    	      this.deployTime = defaults.deployTime;
    	      this.platform = defaults.platform;
    	      this.resourceUri = defaults.resourceUri;
    	      this.undeployTime = defaults.undeployTime;
    	      this.userEmail = defaults.userEmail;
        }

        public Builder setAddress(String address) {
            this.address = Objects.requireNonNull(address);
            return this;
        }

        public Builder setConfig(String config) {
            this.config = Objects.requireNonNull(config);
            return this;
        }

        public Builder setDeployTime(String deployTime) {
            this.deployTime = Objects.requireNonNull(deployTime);
            return this;
        }

        public Builder setPlatform(String platform) {
            this.platform = Objects.requireNonNull(platform);
            return this;
        }

        public Builder setResourceUri(List<String> resourceUri) {
            this.resourceUri = Objects.requireNonNull(resourceUri);
            return this;
        }

        public Builder setUndeployTime(String undeployTime) {
            this.undeployTime = Objects.requireNonNull(undeployTime);
            return this;
        }

        public Builder setUserEmail(String userEmail) {
            this.userEmail = Objects.requireNonNull(userEmail);
            return this;
        }

        public DeploymentResponse build() {
            return new DeploymentResponse(address, config, deployTime, platform, resourceUri, undeployTime, userEmail);
        }
    }
}
