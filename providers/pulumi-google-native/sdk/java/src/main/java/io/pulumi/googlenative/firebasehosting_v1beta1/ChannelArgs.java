// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.firebasehosting_v1beta1;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ChannelArgs extends io.pulumi.resources.ResourceArgs {

    public static final ChannelArgs Empty = new ChannelArgs();

    @InputImport(name="channelId", required=true)
    private final Input<String> channelId;

    public Input<String> getChannelId() {
        return this.channelId;
    }

    @InputImport(name="expireTime")
    private final @Nullable Input<String> expireTime;

    public Input<String> getExpireTime() {
        return this.expireTime == null ? Input.empty() : this.expireTime;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="retainedReleaseCount")
    private final @Nullable Input<Integer> retainedReleaseCount;

    public Input<Integer> getRetainedReleaseCount() {
        return this.retainedReleaseCount == null ? Input.empty() : this.retainedReleaseCount;
    }

    @InputImport(name="siteId", required=true)
    private final Input<String> siteId;

    public Input<String> getSiteId() {
        return this.siteId;
    }

    @InputImport(name="ttl")
    private final @Nullable Input<String> ttl;

    public Input<String> getTtl() {
        return this.ttl == null ? Input.empty() : this.ttl;
    }

    public ChannelArgs(
        Input<String> channelId,
        @Nullable Input<String> expireTime,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<String> name,
        @Nullable Input<String> project,
        @Nullable Input<Integer> retainedReleaseCount,
        Input<String> siteId,
        @Nullable Input<String> ttl) {
        this.channelId = Objects.requireNonNull(channelId, "expected parameter 'channelId' to be non-null");
        this.expireTime = expireTime;
        this.labels = labels;
        this.name = name;
        this.project = project;
        this.retainedReleaseCount = retainedReleaseCount;
        this.siteId = Objects.requireNonNull(siteId, "expected parameter 'siteId' to be non-null");
        this.ttl = ttl;
    }

    private ChannelArgs() {
        this.channelId = Input.empty();
        this.expireTime = Input.empty();
        this.labels = Input.empty();
        this.name = Input.empty();
        this.project = Input.empty();
        this.retainedReleaseCount = Input.empty();
        this.siteId = Input.empty();
        this.ttl = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<String> channelId;
        private @Nullable Input<String> expireTime;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<String> name;
        private @Nullable Input<String> project;
        private @Nullable Input<Integer> retainedReleaseCount;
        private Input<String> siteId;
        private @Nullable Input<String> ttl;

        public Builder() {
    	      // Empty
        }

        public Builder(ChannelArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channelId = defaults.channelId;
    	      this.expireTime = defaults.expireTime;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.retainedReleaseCount = defaults.retainedReleaseCount;
    	      this.siteId = defaults.siteId;
    	      this.ttl = defaults.ttl;
        }

        public Builder setChannelId(Input<String> channelId) {
            this.channelId = Objects.requireNonNull(channelId);
            return this;
        }

        public Builder setChannelId(String channelId) {
            this.channelId = Input.of(Objects.requireNonNull(channelId));
            return this;
        }

        public Builder setExpireTime(@Nullable Input<String> expireTime) {
            this.expireTime = expireTime;
            return this;
        }

        public Builder setExpireTime(@Nullable String expireTime) {
            this.expireTime = Input.ofNullable(expireTime);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRetainedReleaseCount(@Nullable Input<Integer> retainedReleaseCount) {
            this.retainedReleaseCount = retainedReleaseCount;
            return this;
        }

        public Builder setRetainedReleaseCount(@Nullable Integer retainedReleaseCount) {
            this.retainedReleaseCount = Input.ofNullable(retainedReleaseCount);
            return this;
        }

        public Builder setSiteId(Input<String> siteId) {
            this.siteId = Objects.requireNonNull(siteId);
            return this;
        }

        public Builder setSiteId(String siteId) {
            this.siteId = Input.of(Objects.requireNonNull(siteId));
            return this;
        }

        public Builder setTtl(@Nullable Input<String> ttl) {
            this.ttl = ttl;
            return this;
        }

        public Builder setTtl(@Nullable String ttl) {
            this.ttl = Input.ofNullable(ttl);
            return this;
        }

        public ChannelArgs build() {
            return new ChannelArgs(channelId, expireTime, labels, name, project, retainedReleaseCount, siteId, ttl);
        }
    }
}
