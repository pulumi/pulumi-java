// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.compute_alpha.enums.TlsValidationContextValidationSource;
import io.pulumi.googlenative.compute_alpha.inputs.SdsConfigArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * [Deprecated] Defines the mechanism to obtain the Certificate Authority certificate to validate the client/server certificate. validate the client/server certificate.
 * 
 */
public final class TlsValidationContextArgs extends io.pulumi.resources.ResourceArgs {

    public static final TlsValidationContextArgs Empty = new TlsValidationContextArgs();

    /**
     * The path to the file holding the CA certificate to validate the client or server certificate.
     * 
     */
    @InputImport(name="certificatePath")
    private final @Nullable Input<String> certificatePath;

    public Input<String> getCertificatePath() {
        return this.certificatePath == null ? Input.empty() : this.certificatePath;
    }

    /**
     * Specifies the config to retrieve certificates through SDS. This field is applicable only if tlsCertificateSource is set to USE_SDS.
     * 
     */
    @InputImport(name="sdsConfig")
    private final @Nullable Input<SdsConfigArgs> sdsConfig;

    public Input<SdsConfigArgs> getSdsConfig() {
        return this.sdsConfig == null ? Input.empty() : this.sdsConfig;
    }

    /**
     * Defines how TLS certificates are obtained.
     * 
     */
    @InputImport(name="validationSource")
    private final @Nullable Input<TlsValidationContextValidationSource> validationSource;

    public Input<TlsValidationContextValidationSource> getValidationSource() {
        return this.validationSource == null ? Input.empty() : this.validationSource;
    }

    public TlsValidationContextArgs(
        @Nullable Input<String> certificatePath,
        @Nullable Input<SdsConfigArgs> sdsConfig,
        @Nullable Input<TlsValidationContextValidationSource> validationSource) {
        this.certificatePath = certificatePath;
        this.sdsConfig = sdsConfig;
        this.validationSource = validationSource;
    }

    private TlsValidationContextArgs() {
        this.certificatePath = Input.empty();
        this.sdsConfig = Input.empty();
        this.validationSource = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TlsValidationContextArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> certificatePath;
        private @Nullable Input<SdsConfigArgs> sdsConfig;
        private @Nullable Input<TlsValidationContextValidationSource> validationSource;

        public Builder() {
    	      // Empty
        }

        public Builder(TlsValidationContextArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificatePath = defaults.certificatePath;
    	      this.sdsConfig = defaults.sdsConfig;
    	      this.validationSource = defaults.validationSource;
        }

        public Builder setCertificatePath(@Nullable Input<String> certificatePath) {
            this.certificatePath = certificatePath;
            return this;
        }

        public Builder setCertificatePath(@Nullable String certificatePath) {
            this.certificatePath = Input.ofNullable(certificatePath);
            return this;
        }

        public Builder setSdsConfig(@Nullable Input<SdsConfigArgs> sdsConfig) {
            this.sdsConfig = sdsConfig;
            return this;
        }

        public Builder setSdsConfig(@Nullable SdsConfigArgs sdsConfig) {
            this.sdsConfig = Input.ofNullable(sdsConfig);
            return this;
        }

        public Builder setValidationSource(@Nullable Input<TlsValidationContextValidationSource> validationSource) {
            this.validationSource = validationSource;
            return this;
        }

        public Builder setValidationSource(@Nullable TlsValidationContextValidationSource validationSource) {
            this.validationSource = Input.ofNullable(validationSource);
            return this;
        }

        public TlsValidationContextArgs build() {
            return new TlsValidationContextArgs(certificatePath, sdsConfig, validationSource);
        }
    }
}
