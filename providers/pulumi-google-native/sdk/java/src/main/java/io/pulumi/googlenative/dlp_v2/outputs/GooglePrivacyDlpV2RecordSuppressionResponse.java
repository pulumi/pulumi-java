// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2RecordConditionResponse;
import java.util.Objects;

@OutputCustomType
public final class GooglePrivacyDlpV2RecordSuppressionResponse {
    /**
     * A condition that when it evaluates to true will result in the record being evaluated to be suppressed from the transformed content.
     * 
     */
    private final GooglePrivacyDlpV2RecordConditionResponse condition;

    @OutputCustomType.Constructor({"condition"})
    private GooglePrivacyDlpV2RecordSuppressionResponse(GooglePrivacyDlpV2RecordConditionResponse condition) {
        this.condition = Objects.requireNonNull(condition);
    }

    /**
     * A condition that when it evaluates to true will result in the record being evaluated to be suppressed from the transformed content.
     * 
     */
    public GooglePrivacyDlpV2RecordConditionResponse getCondition() {
        return this.condition;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2RecordSuppressionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2RecordConditionResponse condition;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2RecordSuppressionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.condition = defaults.condition;
        }

        public Builder setCondition(GooglePrivacyDlpV2RecordConditionResponse condition) {
            this.condition = Objects.requireNonNull(condition);
            return this;
        }

        public GooglePrivacyDlpV2RecordSuppressionResponse build() {
            return new GooglePrivacyDlpV2RecordSuppressionResponse(condition);
        }
    }
}
