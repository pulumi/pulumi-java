// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2InspectConfigArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class InspectTemplateArgs extends io.pulumi.resources.ResourceArgs {

    public static final InspectTemplateArgs Empty = new InspectTemplateArgs();

    /**
     * Short description (max 256 chars).
     * 
     */
    @InputImport(name="description")
      private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    /**
     * Display name (max 256 chars).
     * 
     */
    @InputImport(name="displayName")
      private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    /**
     * The core content of the template. Configuration of the scanning process.
     * 
     */
    @InputImport(name="inspectConfig")
      private final @Nullable Input<GooglePrivacyDlpV2InspectConfigArgs> inspectConfig;

    public Input<GooglePrivacyDlpV2InspectConfigArgs> getInspectConfig() {
        return this.inspectConfig == null ? Input.empty() : this.inspectConfig;
    }

    @InputImport(name="location")
      private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="project")
      private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    /**
     * The template id can contain uppercase and lowercase letters, numbers, and hyphens; that is, it must match the regular expression: `[a-zA-Z\d-_]+`. The maximum length is 100 characters. Can be empty to allow the system to generate one.
     * 
     */
    @InputImport(name="templateId")
      private final @Nullable Input<String> templateId;

    public Input<String> getTemplateId() {
        return this.templateId == null ? Input.empty() : this.templateId;
    }

    public InspectTemplateArgs(
        @Nullable Input<String> description,
        @Nullable Input<String> displayName,
        @Nullable Input<GooglePrivacyDlpV2InspectConfigArgs> inspectConfig,
        @Nullable Input<String> location,
        @Nullable Input<String> project,
        @Nullable Input<String> templateId) {
        this.description = description;
        this.displayName = displayName;
        this.inspectConfig = inspectConfig;
        this.location = location;
        this.project = project;
        this.templateId = templateId;
    }

    private InspectTemplateArgs() {
        this.description = Input.empty();
        this.displayName = Input.empty();
        this.inspectConfig = Input.empty();
        this.location = Input.empty();
        this.project = Input.empty();
        this.templateId = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InspectTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<String> displayName;
        private @Nullable Input<GooglePrivacyDlpV2InspectConfigArgs> inspectConfig;
        private @Nullable Input<String> location;
        private @Nullable Input<String> project;
        private @Nullable Input<String> templateId;

        public Builder() {
    	      // Empty
        }

        public Builder(InspectTemplateArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.inspectConfig = defaults.inspectConfig;
    	      this.location = defaults.location;
    	      this.project = defaults.project;
    	      this.templateId = defaults.templateId;
        }

        public Builder description(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder description(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder displayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder displayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder inspectConfig(@Nullable Input<GooglePrivacyDlpV2InspectConfigArgs> inspectConfig) {
            this.inspectConfig = inspectConfig;
            return this;
        }

        public Builder inspectConfig(@Nullable GooglePrivacyDlpV2InspectConfigArgs inspectConfig) {
            this.inspectConfig = Input.ofNullable(inspectConfig);
            return this;
        }

        public Builder location(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder project(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder templateId(@Nullable Input<String> templateId) {
            this.templateId = templateId;
            return this;
        }

        public Builder templateId(@Nullable String templateId) {
            this.templateId = Input.ofNullable(templateId);
            return this;
        }
        public InspectTemplateArgs build() {
            return new InspectTemplateArgs(description, displayName, inspectConfig, location, project, templateId);
        }
    }
}
