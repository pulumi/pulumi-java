// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v3.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetMetricDescriptorArgs extends io.pulumi.resources.InvokeArgs {

    public static final GetMetricDescriptorArgs Empty = new GetMetricDescriptorArgs();

    @InputImport(name="metricDescriptorId", required=true)
      private final String metricDescriptorId;

    public String getMetricDescriptorId() {
        return this.metricDescriptorId;
    }

    @InputImport(name="project")
      private final @Nullable String project;

    public Optional<String> getProject() {
        return this.project == null ? Optional.empty() : Optional.ofNullable(this.project);
    }

    public GetMetricDescriptorArgs(
        String metricDescriptorId,
        @Nullable String project) {
        this.metricDescriptorId = Objects.requireNonNull(metricDescriptorId, "expected parameter 'metricDescriptorId' to be non-null");
        this.project = project;
    }

    private GetMetricDescriptorArgs() {
        this.metricDescriptorId = null;
        this.project = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMetricDescriptorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String metricDescriptorId;
        private @Nullable String project;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMetricDescriptorArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.metricDescriptorId = defaults.metricDescriptorId;
    	      this.project = defaults.project;
        }

        public Builder setMetricDescriptorId(String metricDescriptorId) {
            this.metricDescriptorId = Objects.requireNonNull(metricDescriptorId);
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = project;
            return this;
        }
        public GetMetricDescriptorArgs build() {
            return new GetMetricDescriptorArgs(metricDescriptorId, project);
        }
    }
}
