// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.ml_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * All parameters related to scheduling of training jobs.
 * 
 */
public final class GoogleCloudMlV1__SchedulingArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudMlV1__SchedulingArgs Empty = new GoogleCloudMlV1__SchedulingArgs();

    /**
     * Optional. The maximum job running time, expressed in seconds. The field can contain up to nine fractional digits, terminated by `s`. If not specified, this field defaults to `604800s` (seven days). If the training job is still running after this duration, AI Platform Training cancels it. The duration is measured from when the job enters the `RUNNING` state; therefore it does not overlap with the duration limited by Scheduling.max_wait_time. For example, if you want to ensure your job runs for no more than 2 hours, set this field to `7200s` (2 hours * 60 minutes / hour * 60 seconds / minute). If you submit your training job using the `gcloud` tool, you can [specify this field in a `config.yaml` file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters). For example: ``` yaml trainingInput: scheduling: maxRunningTime: 7200s  ```
     * 
     */
    @Import(name="maxRunningTime")
      private final @Nullable Output<String> maxRunningTime;

    public Output<String> getMaxRunningTime() {
        return this.maxRunningTime == null ? Codegen.empty() : this.maxRunningTime;
    }

    /**
     * Optional. The maximum job wait time, expressed in seconds. The field can contain up to nine fractional digits, terminated by `s`. If not specified, there is no limit to the wait time. The minimum for this field is `1800s` (30 minutes). If the training job has not entered the `RUNNING` state after this duration, AI Platform Training cancels it. After the job begins running, it can no longer be cancelled due to the maximum wait time. Therefore the duration limited by this field does not overlap with the duration limited by Scheduling.max_running_time. For example, if the job temporarily stops running and retries due to a [VM restart](/ai-platform/training/docs/overview#restarts), this cannot lead to a maximum wait time cancellation. However, independently of this constraint, AI Platform Training might stop a job if there are too many retries due to exhausted resources in a region. The following example describes how you might use this field: To cancel your job if it doesn't start running within 1 hour, set this field to `3600s` (1 hour * 60 minutes / hour * 60 seconds / minute). If the job is still in the `QUEUED` or `PREPARING` state after an hour of waiting, AI Platform Training cancels the job. If you submit your training job using the `gcloud` tool, you can [specify this field in a `config.yaml` file](/ai-platform/training/docs/training-jobs#formatting_your_configuration_parameters). For example: ``` yaml trainingInput: scheduling: maxWaitTime: 3600s  ```
     * 
     */
    @Import(name="maxWaitTime")
      private final @Nullable Output<String> maxWaitTime;

    public Output<String> getMaxWaitTime() {
        return this.maxWaitTime == null ? Codegen.empty() : this.maxWaitTime;
    }

    /**
     * Optional. Job scheduling will be based on this priority, which in the range [0, 1000]. The bigger the number, the higher the priority. Default to 0 if not set. If there are multiple jobs requesting same type of accelerators, the high priority job will be scheduled prior to ones with low priority.
     * 
     */
    @Import(name="priority")
      private final @Nullable Output<Integer> priority;

    public Output<Integer> getPriority() {
        return this.priority == null ? Codegen.empty() : this.priority;
    }

    public GoogleCloudMlV1__SchedulingArgs(
        @Nullable Output<String> maxRunningTime,
        @Nullable Output<String> maxWaitTime,
        @Nullable Output<Integer> priority) {
        this.maxRunningTime = maxRunningTime;
        this.maxWaitTime = maxWaitTime;
        this.priority = priority;
    }

    private GoogleCloudMlV1__SchedulingArgs() {
        this.maxRunningTime = Codegen.empty();
        this.maxWaitTime = Codegen.empty();
        this.priority = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudMlV1__SchedulingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> maxRunningTime;
        private @Nullable Output<String> maxWaitTime;
        private @Nullable Output<Integer> priority;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudMlV1__SchedulingArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.maxRunningTime = defaults.maxRunningTime;
    	      this.maxWaitTime = defaults.maxWaitTime;
    	      this.priority = defaults.priority;
        }

        public Builder maxRunningTime(@Nullable Output<String> maxRunningTime) {
            this.maxRunningTime = maxRunningTime;
            return this;
        }
        public Builder maxRunningTime(@Nullable String maxRunningTime) {
            this.maxRunningTime = Codegen.ofNullable(maxRunningTime);
            return this;
        }
        public Builder maxWaitTime(@Nullable Output<String> maxWaitTime) {
            this.maxWaitTime = maxWaitTime;
            return this;
        }
        public Builder maxWaitTime(@Nullable String maxWaitTime) {
            this.maxWaitTime = Codegen.ofNullable(maxWaitTime);
            return this;
        }
        public Builder priority(@Nullable Output<Integer> priority) {
            this.priority = priority;
            return this;
        }
        public Builder priority(@Nullable Integer priority) {
            this.priority = Codegen.ofNullable(priority);
            return this;
        }        public GoogleCloudMlV1__SchedulingArgs build() {
            return new GoogleCloudMlV1__SchedulingArgs(maxRunningTime, maxWaitTime, priority);
        }
    }
}
