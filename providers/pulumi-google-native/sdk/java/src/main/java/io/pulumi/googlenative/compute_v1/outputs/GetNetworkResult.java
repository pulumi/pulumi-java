// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_v1.outputs.NetworkPeeringResponse;
import io.pulumi.googlenative.compute_v1.outputs.NetworkRoutingConfigResponse;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetNetworkResult {
    private final Boolean autoCreateSubnetworks;
    private final String creationTimestamp;
    private final String description;
    private final String gatewayIPv4;
    private final String kind;
    private final Integer mtu;
    private final String name;
    private final List<NetworkPeeringResponse> peerings;
    private final NetworkRoutingConfigResponse routingConfig;
    private final String selfLink;
    private final List<String> subnetworks;

    @OutputCustomType.Constructor({"autoCreateSubnetworks","creationTimestamp","description","gatewayIPv4","kind","mtu","name","peerings","routingConfig","selfLink","subnetworks"})
    private GetNetworkResult(
        Boolean autoCreateSubnetworks,
        String creationTimestamp,
        String description,
        String gatewayIPv4,
        String kind,
        Integer mtu,
        String name,
        List<NetworkPeeringResponse> peerings,
        NetworkRoutingConfigResponse routingConfig,
        String selfLink,
        List<String> subnetworks) {
        this.autoCreateSubnetworks = Objects.requireNonNull(autoCreateSubnetworks);
        this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
        this.description = Objects.requireNonNull(description);
        this.gatewayIPv4 = Objects.requireNonNull(gatewayIPv4);
        this.kind = Objects.requireNonNull(kind);
        this.mtu = Objects.requireNonNull(mtu);
        this.name = Objects.requireNonNull(name);
        this.peerings = Objects.requireNonNull(peerings);
        this.routingConfig = Objects.requireNonNull(routingConfig);
        this.selfLink = Objects.requireNonNull(selfLink);
        this.subnetworks = Objects.requireNonNull(subnetworks);
    }

    public Boolean getAutoCreateSubnetworks() {
        return this.autoCreateSubnetworks;
    }
    public String getCreationTimestamp() {
        return this.creationTimestamp;
    }
    public String getDescription() {
        return this.description;
    }
    public String getGatewayIPv4() {
        return this.gatewayIPv4;
    }
    public String getKind() {
        return this.kind;
    }
    public Integer getMtu() {
        return this.mtu;
    }
    public String getName() {
        return this.name;
    }
    public List<NetworkPeeringResponse> getPeerings() {
        return this.peerings;
    }
    public NetworkRoutingConfigResponse getRoutingConfig() {
        return this.routingConfig;
    }
    public String getSelfLink() {
        return this.selfLink;
    }
    public List<String> getSubnetworks() {
        return this.subnetworks;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean autoCreateSubnetworks;
        private String creationTimestamp;
        private String description;
        private String gatewayIPv4;
        private String kind;
        private Integer mtu;
        private String name;
        private List<NetworkPeeringResponse> peerings;
        private NetworkRoutingConfigResponse routingConfig;
        private String selfLink;
        private List<String> subnetworks;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNetworkResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoCreateSubnetworks = defaults.autoCreateSubnetworks;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.description = defaults.description;
    	      this.gatewayIPv4 = defaults.gatewayIPv4;
    	      this.kind = defaults.kind;
    	      this.mtu = defaults.mtu;
    	      this.name = defaults.name;
    	      this.peerings = defaults.peerings;
    	      this.routingConfig = defaults.routingConfig;
    	      this.selfLink = defaults.selfLink;
    	      this.subnetworks = defaults.subnetworks;
        }

        public Builder setAutoCreateSubnetworks(Boolean autoCreateSubnetworks) {
            this.autoCreateSubnetworks = Objects.requireNonNull(autoCreateSubnetworks);
            return this;
        }

        public Builder setCreationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setGatewayIPv4(String gatewayIPv4) {
            this.gatewayIPv4 = Objects.requireNonNull(gatewayIPv4);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setMtu(Integer mtu) {
            this.mtu = Objects.requireNonNull(mtu);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPeerings(List<NetworkPeeringResponse> peerings) {
            this.peerings = Objects.requireNonNull(peerings);
            return this;
        }

        public Builder setRoutingConfig(NetworkRoutingConfigResponse routingConfig) {
            this.routingConfig = Objects.requireNonNull(routingConfig);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setSubnetworks(List<String> subnetworks) {
            this.subnetworks = Objects.requireNonNull(subnetworks);
            return this;
        }

        public GetNetworkResult build() {
            return new GetNetworkResult(autoCreateSubnetworks, creationTimestamp, description, gatewayIPv4, kind, mtu, name, peerings, routingConfig, selfLink, subnetworks);
        }
    }
}
