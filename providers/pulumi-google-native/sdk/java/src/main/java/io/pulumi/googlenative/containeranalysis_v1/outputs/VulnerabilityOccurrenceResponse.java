// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.containeranalysis_v1.outputs.CVSSResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.PackageIssueResponse;
import io.pulumi.googlenative.containeranalysis_v1.outputs.RelatedUrlResponse;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class VulnerabilityOccurrenceResponse {
    private final Double cvssScore;
    private final CVSSResponse cvssv3;
    private final String effectiveSeverity;
    private final Boolean fixAvailable;
    private final String longDescription;
    private final List<PackageIssueResponse> packageIssue;
    private final List<RelatedUrlResponse> relatedUrls;
    private final String severity;
    private final String shortDescription;
    private final String type;

    @OutputCustomType.Constructor({"cvssScore","cvssv3","effectiveSeverity","fixAvailable","longDescription","packageIssue","relatedUrls","severity","shortDescription","type"})
    private VulnerabilityOccurrenceResponse(
        Double cvssScore,
        CVSSResponse cvssv3,
        String effectiveSeverity,
        Boolean fixAvailable,
        String longDescription,
        List<PackageIssueResponse> packageIssue,
        List<RelatedUrlResponse> relatedUrls,
        String severity,
        String shortDescription,
        String type) {
        this.cvssScore = Objects.requireNonNull(cvssScore);
        this.cvssv3 = Objects.requireNonNull(cvssv3);
        this.effectiveSeverity = Objects.requireNonNull(effectiveSeverity);
        this.fixAvailable = Objects.requireNonNull(fixAvailable);
        this.longDescription = Objects.requireNonNull(longDescription);
        this.packageIssue = Objects.requireNonNull(packageIssue);
        this.relatedUrls = Objects.requireNonNull(relatedUrls);
        this.severity = Objects.requireNonNull(severity);
        this.shortDescription = Objects.requireNonNull(shortDescription);
        this.type = Objects.requireNonNull(type);
    }

    public Double getCvssScore() {
        return this.cvssScore;
    }
    public CVSSResponse getCvssv3() {
        return this.cvssv3;
    }
    public String getEffectiveSeverity() {
        return this.effectiveSeverity;
    }
    public Boolean getFixAvailable() {
        return this.fixAvailable;
    }
    public String getLongDescription() {
        return this.longDescription;
    }
    public List<PackageIssueResponse> getPackageIssue() {
        return this.packageIssue;
    }
    public List<RelatedUrlResponse> getRelatedUrls() {
        return this.relatedUrls;
    }
    public String getSeverity() {
        return this.severity;
    }
    public String getShortDescription() {
        return this.shortDescription;
    }
    public String getType() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VulnerabilityOccurrenceResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Double cvssScore;
        private CVSSResponse cvssv3;
        private String effectiveSeverity;
        private Boolean fixAvailable;
        private String longDescription;
        private List<PackageIssueResponse> packageIssue;
        private List<RelatedUrlResponse> relatedUrls;
        private String severity;
        private String shortDescription;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(VulnerabilityOccurrenceResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cvssScore = defaults.cvssScore;
    	      this.cvssv3 = defaults.cvssv3;
    	      this.effectiveSeverity = defaults.effectiveSeverity;
    	      this.fixAvailable = defaults.fixAvailable;
    	      this.longDescription = defaults.longDescription;
    	      this.packageIssue = defaults.packageIssue;
    	      this.relatedUrls = defaults.relatedUrls;
    	      this.severity = defaults.severity;
    	      this.shortDescription = defaults.shortDescription;
    	      this.type = defaults.type;
        }

        public Builder setCvssScore(Double cvssScore) {
            this.cvssScore = Objects.requireNonNull(cvssScore);
            return this;
        }

        public Builder setCvssv3(CVSSResponse cvssv3) {
            this.cvssv3 = Objects.requireNonNull(cvssv3);
            return this;
        }

        public Builder setEffectiveSeverity(String effectiveSeverity) {
            this.effectiveSeverity = Objects.requireNonNull(effectiveSeverity);
            return this;
        }

        public Builder setFixAvailable(Boolean fixAvailable) {
            this.fixAvailable = Objects.requireNonNull(fixAvailable);
            return this;
        }

        public Builder setLongDescription(String longDescription) {
            this.longDescription = Objects.requireNonNull(longDescription);
            return this;
        }

        public Builder setPackageIssue(List<PackageIssueResponse> packageIssue) {
            this.packageIssue = Objects.requireNonNull(packageIssue);
            return this;
        }

        public Builder setRelatedUrls(List<RelatedUrlResponse> relatedUrls) {
            this.relatedUrls = Objects.requireNonNull(relatedUrls);
            return this;
        }

        public Builder setSeverity(String severity) {
            this.severity = Objects.requireNonNull(severity);
            return this;
        }

        public Builder setShortDescription(String shortDescription) {
            this.shortDescription = Objects.requireNonNull(shortDescription);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public VulnerabilityOccurrenceResponse build() {
            return new VulnerabilityOccurrenceResponse(cvssScore, cvssv3, effectiveSeverity, fixAvailable, longDescription, packageIssue, relatedUrls, severity, shortDescription, type);
        }
    }
}
