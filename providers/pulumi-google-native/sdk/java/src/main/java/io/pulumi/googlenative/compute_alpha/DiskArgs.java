// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.compute_alpha.enums.DiskArchitecture;
import io.pulumi.googlenative.compute_alpha.inputs.CustomerEncryptionKeyArgs;
import io.pulumi.googlenative.compute_alpha.inputs.GuestOsFeatureArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class DiskArgs extends io.pulumi.resources.ResourceArgs {

    public static final DiskArgs Empty = new DiskArgs();

    @InputImport(name="architecture")
    private final @Nullable Input<DiskArchitecture> architecture;

    public Input<DiskArchitecture> getArchitecture() {
        return this.architecture == null ? Input.empty() : this.architecture;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="diskEncryptionKey")
    private final @Nullable Input<CustomerEncryptionKeyArgs> diskEncryptionKey;

    public Input<CustomerEncryptionKeyArgs> getDiskEncryptionKey() {
        return this.diskEncryptionKey == null ? Input.empty() : this.diskEncryptionKey;
    }

    @InputImport(name="eraseWindowsVssSignature")
    private final @Nullable Input<Boolean> eraseWindowsVssSignature;

    public Input<Boolean> getEraseWindowsVssSignature() {
        return this.eraseWindowsVssSignature == null ? Input.empty() : this.eraseWindowsVssSignature;
    }

    @InputImport(name="guestOsFeatures")
    private final @Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures;

    public Input<List<GuestOsFeatureArgs>> getGuestOsFeatures() {
        return this.guestOsFeatures == null ? Input.empty() : this.guestOsFeatures;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="licenseCodes")
    private final @Nullable Input<List<String>> licenseCodes;

    public Input<List<String>> getLicenseCodes() {
        return this.licenseCodes == null ? Input.empty() : this.licenseCodes;
    }

    @InputImport(name="licenses")
    private final @Nullable Input<List<String>> licenses;

    public Input<List<String>> getLicenses() {
        return this.licenses == null ? Input.empty() : this.licenses;
    }

    @InputImport(name="locationHint")
    private final @Nullable Input<String> locationHint;

    public Input<String> getLocationHint() {
        return this.locationHint == null ? Input.empty() : this.locationHint;
    }

    @InputImport(name="multiWriter")
    private final @Nullable Input<Boolean> multiWriter;

    public Input<Boolean> getMultiWriter() {
        return this.multiWriter == null ? Input.empty() : this.multiWriter;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="options")
    private final @Nullable Input<String> options;

    public Input<String> getOptions() {
        return this.options == null ? Input.empty() : this.options;
    }

    @InputImport(name="physicalBlockSizeBytes")
    private final @Nullable Input<String> physicalBlockSizeBytes;

    public Input<String> getPhysicalBlockSizeBytes() {
        return this.physicalBlockSizeBytes == null ? Input.empty() : this.physicalBlockSizeBytes;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="provisionedIops")
    private final @Nullable Input<String> provisionedIops;

    public Input<String> getProvisionedIops() {
        return this.provisionedIops == null ? Input.empty() : this.provisionedIops;
    }

    @InputImport(name="replicaZones")
    private final @Nullable Input<List<String>> replicaZones;

    public Input<List<String>> getReplicaZones() {
        return this.replicaZones == null ? Input.empty() : this.replicaZones;
    }

    @InputImport(name="requestId")
    private final @Nullable Input<String> requestId;

    public Input<String> getRequestId() {
        return this.requestId == null ? Input.empty() : this.requestId;
    }

    @InputImport(name="resourcePolicies")
    private final @Nullable Input<List<String>> resourcePolicies;

    public Input<List<String>> getResourcePolicies() {
        return this.resourcePolicies == null ? Input.empty() : this.resourcePolicies;
    }

    @InputImport(name="sizeGb")
    private final @Nullable Input<String> sizeGb;

    public Input<String> getSizeGb() {
        return this.sizeGb == null ? Input.empty() : this.sizeGb;
    }

    @InputImport(name="sourceDisk")
    private final @Nullable Input<String> sourceDisk;

    public Input<String> getSourceDisk() {
        return this.sourceDisk == null ? Input.empty() : this.sourceDisk;
    }

    @InputImport(name="sourceImage")
    private final @Nullable Input<String> sourceImage;

    public Input<String> getSourceImage() {
        return this.sourceImage == null ? Input.empty() : this.sourceImage;
    }

    @InputImport(name="sourceImageEncryptionKey")
    private final @Nullable Input<CustomerEncryptionKeyArgs> sourceImageEncryptionKey;

    public Input<CustomerEncryptionKeyArgs> getSourceImageEncryptionKey() {
        return this.sourceImageEncryptionKey == null ? Input.empty() : this.sourceImageEncryptionKey;
    }

    @InputImport(name="sourceInstantSnapshot")
    private final @Nullable Input<String> sourceInstantSnapshot;

    public Input<String> getSourceInstantSnapshot() {
        return this.sourceInstantSnapshot == null ? Input.empty() : this.sourceInstantSnapshot;
    }

    @InputImport(name="sourceSnapshot")
    private final @Nullable Input<String> sourceSnapshot;

    public Input<String> getSourceSnapshot() {
        return this.sourceSnapshot == null ? Input.empty() : this.sourceSnapshot;
    }

    @InputImport(name="sourceSnapshotEncryptionKey")
    private final @Nullable Input<CustomerEncryptionKeyArgs> sourceSnapshotEncryptionKey;

    public Input<CustomerEncryptionKeyArgs> getSourceSnapshotEncryptionKey() {
        return this.sourceSnapshotEncryptionKey == null ? Input.empty() : this.sourceSnapshotEncryptionKey;
    }

    @InputImport(name="sourceStorageObject")
    private final @Nullable Input<String> sourceStorageObject;

    public Input<String> getSourceStorageObject() {
        return this.sourceStorageObject == null ? Input.empty() : this.sourceStorageObject;
    }

    @InputImport(name="type")
    private final @Nullable Input<String> type;

    public Input<String> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    @InputImport(name="userLicenses")
    private final @Nullable Input<List<String>> userLicenses;

    public Input<List<String>> getUserLicenses() {
        return this.userLicenses == null ? Input.empty() : this.userLicenses;
    }

    @InputImport(name="zone")
    private final @Nullable Input<String> zone;

    public Input<String> getZone() {
        return this.zone == null ? Input.empty() : this.zone;
    }

    public DiskArgs(
        @Nullable Input<DiskArchitecture> architecture,
        @Nullable Input<String> description,
        @Nullable Input<CustomerEncryptionKeyArgs> diskEncryptionKey,
        @Nullable Input<Boolean> eraseWindowsVssSignature,
        @Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<List<String>> licenseCodes,
        @Nullable Input<List<String>> licenses,
        @Nullable Input<String> locationHint,
        @Nullable Input<Boolean> multiWriter,
        @Nullable Input<String> name,
        @Nullable Input<String> options,
        @Nullable Input<String> physicalBlockSizeBytes,
        @Nullable Input<String> project,
        @Nullable Input<String> provisionedIops,
        @Nullable Input<List<String>> replicaZones,
        @Nullable Input<String> requestId,
        @Nullable Input<List<String>> resourcePolicies,
        @Nullable Input<String> sizeGb,
        @Nullable Input<String> sourceDisk,
        @Nullable Input<String> sourceImage,
        @Nullable Input<CustomerEncryptionKeyArgs> sourceImageEncryptionKey,
        @Nullable Input<String> sourceInstantSnapshot,
        @Nullable Input<String> sourceSnapshot,
        @Nullable Input<CustomerEncryptionKeyArgs> sourceSnapshotEncryptionKey,
        @Nullable Input<String> sourceStorageObject,
        @Nullable Input<String> type,
        @Nullable Input<List<String>> userLicenses,
        @Nullable Input<String> zone) {
        this.architecture = architecture;
        this.description = description;
        this.diskEncryptionKey = diskEncryptionKey;
        this.eraseWindowsVssSignature = eraseWindowsVssSignature;
        this.guestOsFeatures = guestOsFeatures;
        this.labels = labels;
        this.licenseCodes = licenseCodes;
        this.licenses = licenses;
        this.locationHint = locationHint;
        this.multiWriter = multiWriter;
        this.name = name;
        this.options = options;
        this.physicalBlockSizeBytes = physicalBlockSizeBytes;
        this.project = project;
        this.provisionedIops = provisionedIops;
        this.replicaZones = replicaZones;
        this.requestId = requestId;
        this.resourcePolicies = resourcePolicies;
        this.sizeGb = sizeGb;
        this.sourceDisk = sourceDisk;
        this.sourceImage = sourceImage;
        this.sourceImageEncryptionKey = sourceImageEncryptionKey;
        this.sourceInstantSnapshot = sourceInstantSnapshot;
        this.sourceSnapshot = sourceSnapshot;
        this.sourceSnapshotEncryptionKey = sourceSnapshotEncryptionKey;
        this.sourceStorageObject = sourceStorageObject;
        this.type = type;
        this.userLicenses = userLicenses;
        this.zone = zone;
    }

    private DiskArgs() {
        this.architecture = Input.empty();
        this.description = Input.empty();
        this.diskEncryptionKey = Input.empty();
        this.eraseWindowsVssSignature = Input.empty();
        this.guestOsFeatures = Input.empty();
        this.labels = Input.empty();
        this.licenseCodes = Input.empty();
        this.licenses = Input.empty();
        this.locationHint = Input.empty();
        this.multiWriter = Input.empty();
        this.name = Input.empty();
        this.options = Input.empty();
        this.physicalBlockSizeBytes = Input.empty();
        this.project = Input.empty();
        this.provisionedIops = Input.empty();
        this.replicaZones = Input.empty();
        this.requestId = Input.empty();
        this.resourcePolicies = Input.empty();
        this.sizeGb = Input.empty();
        this.sourceDisk = Input.empty();
        this.sourceImage = Input.empty();
        this.sourceImageEncryptionKey = Input.empty();
        this.sourceInstantSnapshot = Input.empty();
        this.sourceSnapshot = Input.empty();
        this.sourceSnapshotEncryptionKey = Input.empty();
        this.sourceStorageObject = Input.empty();
        this.type = Input.empty();
        this.userLicenses = Input.empty();
        this.zone = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DiskArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<DiskArchitecture> architecture;
        private @Nullable Input<String> description;
        private @Nullable Input<CustomerEncryptionKeyArgs> diskEncryptionKey;
        private @Nullable Input<Boolean> eraseWindowsVssSignature;
        private @Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<List<String>> licenseCodes;
        private @Nullable Input<List<String>> licenses;
        private @Nullable Input<String> locationHint;
        private @Nullable Input<Boolean> multiWriter;
        private @Nullable Input<String> name;
        private @Nullable Input<String> options;
        private @Nullable Input<String> physicalBlockSizeBytes;
        private @Nullable Input<String> project;
        private @Nullable Input<String> provisionedIops;
        private @Nullable Input<List<String>> replicaZones;
        private @Nullable Input<String> requestId;
        private @Nullable Input<List<String>> resourcePolicies;
        private @Nullable Input<String> sizeGb;
        private @Nullable Input<String> sourceDisk;
        private @Nullable Input<String> sourceImage;
        private @Nullable Input<CustomerEncryptionKeyArgs> sourceImageEncryptionKey;
        private @Nullable Input<String> sourceInstantSnapshot;
        private @Nullable Input<String> sourceSnapshot;
        private @Nullable Input<CustomerEncryptionKeyArgs> sourceSnapshotEncryptionKey;
        private @Nullable Input<String> sourceStorageObject;
        private @Nullable Input<String> type;
        private @Nullable Input<List<String>> userLicenses;
        private @Nullable Input<String> zone;

        public Builder() {
    	      // Empty
        }

        public Builder(DiskArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.description = defaults.description;
    	      this.diskEncryptionKey = defaults.diskEncryptionKey;
    	      this.eraseWindowsVssSignature = defaults.eraseWindowsVssSignature;
    	      this.guestOsFeatures = defaults.guestOsFeatures;
    	      this.labels = defaults.labels;
    	      this.licenseCodes = defaults.licenseCodes;
    	      this.licenses = defaults.licenses;
    	      this.locationHint = defaults.locationHint;
    	      this.multiWriter = defaults.multiWriter;
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.physicalBlockSizeBytes = defaults.physicalBlockSizeBytes;
    	      this.project = defaults.project;
    	      this.provisionedIops = defaults.provisionedIops;
    	      this.replicaZones = defaults.replicaZones;
    	      this.requestId = defaults.requestId;
    	      this.resourcePolicies = defaults.resourcePolicies;
    	      this.sizeGb = defaults.sizeGb;
    	      this.sourceDisk = defaults.sourceDisk;
    	      this.sourceImage = defaults.sourceImage;
    	      this.sourceImageEncryptionKey = defaults.sourceImageEncryptionKey;
    	      this.sourceInstantSnapshot = defaults.sourceInstantSnapshot;
    	      this.sourceSnapshot = defaults.sourceSnapshot;
    	      this.sourceSnapshotEncryptionKey = defaults.sourceSnapshotEncryptionKey;
    	      this.sourceStorageObject = defaults.sourceStorageObject;
    	      this.type = defaults.type;
    	      this.userLicenses = defaults.userLicenses;
    	      this.zone = defaults.zone;
        }

        public Builder setArchitecture(@Nullable Input<DiskArchitecture> architecture) {
            this.architecture = architecture;
            return this;
        }

        public Builder setArchitecture(@Nullable DiskArchitecture architecture) {
            this.architecture = Input.ofNullable(architecture);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDiskEncryptionKey(@Nullable Input<CustomerEncryptionKeyArgs> diskEncryptionKey) {
            this.diskEncryptionKey = diskEncryptionKey;
            return this;
        }

        public Builder setDiskEncryptionKey(@Nullable CustomerEncryptionKeyArgs diskEncryptionKey) {
            this.diskEncryptionKey = Input.ofNullable(diskEncryptionKey);
            return this;
        }

        public Builder setEraseWindowsVssSignature(@Nullable Input<Boolean> eraseWindowsVssSignature) {
            this.eraseWindowsVssSignature = eraseWindowsVssSignature;
            return this;
        }

        public Builder setEraseWindowsVssSignature(@Nullable Boolean eraseWindowsVssSignature) {
            this.eraseWindowsVssSignature = Input.ofNullable(eraseWindowsVssSignature);
            return this;
        }

        public Builder setGuestOsFeatures(@Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures) {
            this.guestOsFeatures = guestOsFeatures;
            return this;
        }

        public Builder setGuestOsFeatures(@Nullable List<GuestOsFeatureArgs> guestOsFeatures) {
            this.guestOsFeatures = Input.ofNullable(guestOsFeatures);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setLicenseCodes(@Nullable Input<List<String>> licenseCodes) {
            this.licenseCodes = licenseCodes;
            return this;
        }

        public Builder setLicenseCodes(@Nullable List<String> licenseCodes) {
            this.licenseCodes = Input.ofNullable(licenseCodes);
            return this;
        }

        public Builder setLicenses(@Nullable Input<List<String>> licenses) {
            this.licenses = licenses;
            return this;
        }

        public Builder setLicenses(@Nullable List<String> licenses) {
            this.licenses = Input.ofNullable(licenses);
            return this;
        }

        public Builder setLocationHint(@Nullable Input<String> locationHint) {
            this.locationHint = locationHint;
            return this;
        }

        public Builder setLocationHint(@Nullable String locationHint) {
            this.locationHint = Input.ofNullable(locationHint);
            return this;
        }

        public Builder setMultiWriter(@Nullable Input<Boolean> multiWriter) {
            this.multiWriter = multiWriter;
            return this;
        }

        public Builder setMultiWriter(@Nullable Boolean multiWriter) {
            this.multiWriter = Input.ofNullable(multiWriter);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOptions(@Nullable Input<String> options) {
            this.options = options;
            return this;
        }

        public Builder setOptions(@Nullable String options) {
            this.options = Input.ofNullable(options);
            return this;
        }

        public Builder setPhysicalBlockSizeBytes(@Nullable Input<String> physicalBlockSizeBytes) {
            this.physicalBlockSizeBytes = physicalBlockSizeBytes;
            return this;
        }

        public Builder setPhysicalBlockSizeBytes(@Nullable String physicalBlockSizeBytes) {
            this.physicalBlockSizeBytes = Input.ofNullable(physicalBlockSizeBytes);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setProvisionedIops(@Nullable Input<String> provisionedIops) {
            this.provisionedIops = provisionedIops;
            return this;
        }

        public Builder setProvisionedIops(@Nullable String provisionedIops) {
            this.provisionedIops = Input.ofNullable(provisionedIops);
            return this;
        }

        public Builder setReplicaZones(@Nullable Input<List<String>> replicaZones) {
            this.replicaZones = replicaZones;
            return this;
        }

        public Builder setReplicaZones(@Nullable List<String> replicaZones) {
            this.replicaZones = Input.ofNullable(replicaZones);
            return this;
        }

        public Builder setRequestId(@Nullable Input<String> requestId) {
            this.requestId = requestId;
            return this;
        }

        public Builder setRequestId(@Nullable String requestId) {
            this.requestId = Input.ofNullable(requestId);
            return this;
        }

        public Builder setResourcePolicies(@Nullable Input<List<String>> resourcePolicies) {
            this.resourcePolicies = resourcePolicies;
            return this;
        }

        public Builder setResourcePolicies(@Nullable List<String> resourcePolicies) {
            this.resourcePolicies = Input.ofNullable(resourcePolicies);
            return this;
        }

        public Builder setSizeGb(@Nullable Input<String> sizeGb) {
            this.sizeGb = sizeGb;
            return this;
        }

        public Builder setSizeGb(@Nullable String sizeGb) {
            this.sizeGb = Input.ofNullable(sizeGb);
            return this;
        }

        public Builder setSourceDisk(@Nullable Input<String> sourceDisk) {
            this.sourceDisk = sourceDisk;
            return this;
        }

        public Builder setSourceDisk(@Nullable String sourceDisk) {
            this.sourceDisk = Input.ofNullable(sourceDisk);
            return this;
        }

        public Builder setSourceImage(@Nullable Input<String> sourceImage) {
            this.sourceImage = sourceImage;
            return this;
        }

        public Builder setSourceImage(@Nullable String sourceImage) {
            this.sourceImage = Input.ofNullable(sourceImage);
            return this;
        }

        public Builder setSourceImageEncryptionKey(@Nullable Input<CustomerEncryptionKeyArgs> sourceImageEncryptionKey) {
            this.sourceImageEncryptionKey = sourceImageEncryptionKey;
            return this;
        }

        public Builder setSourceImageEncryptionKey(@Nullable CustomerEncryptionKeyArgs sourceImageEncryptionKey) {
            this.sourceImageEncryptionKey = Input.ofNullable(sourceImageEncryptionKey);
            return this;
        }

        public Builder setSourceInstantSnapshot(@Nullable Input<String> sourceInstantSnapshot) {
            this.sourceInstantSnapshot = sourceInstantSnapshot;
            return this;
        }

        public Builder setSourceInstantSnapshot(@Nullable String sourceInstantSnapshot) {
            this.sourceInstantSnapshot = Input.ofNullable(sourceInstantSnapshot);
            return this;
        }

        public Builder setSourceSnapshot(@Nullable Input<String> sourceSnapshot) {
            this.sourceSnapshot = sourceSnapshot;
            return this;
        }

        public Builder setSourceSnapshot(@Nullable String sourceSnapshot) {
            this.sourceSnapshot = Input.ofNullable(sourceSnapshot);
            return this;
        }

        public Builder setSourceSnapshotEncryptionKey(@Nullable Input<CustomerEncryptionKeyArgs> sourceSnapshotEncryptionKey) {
            this.sourceSnapshotEncryptionKey = sourceSnapshotEncryptionKey;
            return this;
        }

        public Builder setSourceSnapshotEncryptionKey(@Nullable CustomerEncryptionKeyArgs sourceSnapshotEncryptionKey) {
            this.sourceSnapshotEncryptionKey = Input.ofNullable(sourceSnapshotEncryptionKey);
            return this;
        }

        public Builder setSourceStorageObject(@Nullable Input<String> sourceStorageObject) {
            this.sourceStorageObject = sourceStorageObject;
            return this;
        }

        public Builder setSourceStorageObject(@Nullable String sourceStorageObject) {
            this.sourceStorageObject = Input.ofNullable(sourceStorageObject);
            return this;
        }

        public Builder setType(@Nullable Input<String> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable String type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public Builder setUserLicenses(@Nullable Input<List<String>> userLicenses) {
            this.userLicenses = userLicenses;
            return this;
        }

        public Builder setUserLicenses(@Nullable List<String> userLicenses) {
            this.userLicenses = Input.ofNullable(userLicenses);
            return this;
        }

        public Builder setZone(@Nullable Input<String> zone) {
            this.zone = zone;
            return this;
        }

        public Builder setZone(@Nullable String zone) {
            this.zone = Input.ofNullable(zone);
            return this;
        }

        public DiskArgs build() {
            return new DiskArgs(architecture, description, diskEncryptionKey, eraseWindowsVssSignature, guestOsFeatures, labels, licenseCodes, licenses, locationHint, multiWriter, name, options, physicalBlockSizeBytes, project, provisionedIops, replicaZones, requestId, resourcePolicies, sizeGb, sourceDisk, sourceImage, sourceImageEncryptionKey, sourceInstantSnapshot, sourceSnapshot, sourceSnapshotEncryptionKey, sourceStorageObject, type, userLicenses, zone);
        }
    }
}
