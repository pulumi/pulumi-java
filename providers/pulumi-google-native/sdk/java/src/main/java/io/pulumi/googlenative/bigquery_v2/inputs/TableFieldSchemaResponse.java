// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.bigquery_v2.inputs.TableFieldSchemaCategoriesResponse;
import io.pulumi.googlenative.bigquery_v2.inputs.TableFieldSchemaPolicyTagsResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class TableFieldSchemaResponse extends io.pulumi.resources.InvokeArgs {

    public static final TableFieldSchemaResponse Empty = new TableFieldSchemaResponse();

    @InputImport(name="categories", required=true)
    private final TableFieldSchemaCategoriesResponse categories;

    public TableFieldSchemaCategoriesResponse getCategories() {
        return this.categories;
    }

    @InputImport(name="collationSpec", required=true)
    private final String collationSpec;

    public String getCollationSpec() {
        return this.collationSpec;
    }

    @InputImport(name="description", required=true)
    private final String description;

    public String getDescription() {
        return this.description;
    }

    @InputImport(name="fields", required=true)
    private final List<TableFieldSchemaResponse> fields;

    public List<TableFieldSchemaResponse> getFields() {
        return this.fields;
    }

    @InputImport(name="maxLength", required=true)
    private final String maxLength;

    public String getMaxLength() {
        return this.maxLength;
    }

    @InputImport(name="mode", required=true)
    private final String mode;

    public String getMode() {
        return this.mode;
    }

    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    @InputImport(name="policyTags", required=true)
    private final TableFieldSchemaPolicyTagsResponse policyTags;

    public TableFieldSchemaPolicyTagsResponse getPolicyTags() {
        return this.policyTags;
    }

    @InputImport(name="precision", required=true)
    private final String precision;

    public String getPrecision() {
        return this.precision;
    }

    @InputImport(name="scale", required=true)
    private final String scale;

    public String getScale() {
        return this.scale;
    }

    @InputImport(name="type", required=true)
    private final String type;

    public String getType() {
        return this.type;
    }

    public TableFieldSchemaResponse(
        TableFieldSchemaCategoriesResponse categories,
        String collationSpec,
        String description,
        List<TableFieldSchemaResponse> fields,
        String maxLength,
        String mode,
        String name,
        TableFieldSchemaPolicyTagsResponse policyTags,
        String precision,
        String scale,
        String type) {
        this.categories = Objects.requireNonNull(categories, "expected parameter 'categories' to be non-null");
        this.collationSpec = Objects.requireNonNull(collationSpec, "expected parameter 'collationSpec' to be non-null");
        this.description = Objects.requireNonNull(description, "expected parameter 'description' to be non-null");
        this.fields = Objects.requireNonNull(fields, "expected parameter 'fields' to be non-null");
        this.maxLength = Objects.requireNonNull(maxLength, "expected parameter 'maxLength' to be non-null");
        this.mode = Objects.requireNonNull(mode, "expected parameter 'mode' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.policyTags = Objects.requireNonNull(policyTags, "expected parameter 'policyTags' to be non-null");
        this.precision = Objects.requireNonNull(precision, "expected parameter 'precision' to be non-null");
        this.scale = Objects.requireNonNull(scale, "expected parameter 'scale' to be non-null");
        this.type = Objects.requireNonNull(type, "expected parameter 'type' to be non-null");
    }

    private TableFieldSchemaResponse() {
        this.categories = null;
        this.collationSpec = null;
        this.description = null;
        this.fields = List.of();
        this.maxLength = null;
        this.mode = null;
        this.name = null;
        this.policyTags = null;
        this.precision = null;
        this.scale = null;
        this.type = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TableFieldSchemaResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableFieldSchemaCategoriesResponse categories;
        private String collationSpec;
        private String description;
        private List<TableFieldSchemaResponse> fields;
        private String maxLength;
        private String mode;
        private String name;
        private TableFieldSchemaPolicyTagsResponse policyTags;
        private String precision;
        private String scale;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(TableFieldSchemaResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categories = defaults.categories;
    	      this.collationSpec = defaults.collationSpec;
    	      this.description = defaults.description;
    	      this.fields = defaults.fields;
    	      this.maxLength = defaults.maxLength;
    	      this.mode = defaults.mode;
    	      this.name = defaults.name;
    	      this.policyTags = defaults.policyTags;
    	      this.precision = defaults.precision;
    	      this.scale = defaults.scale;
    	      this.type = defaults.type;
        }

        public Builder setCategories(TableFieldSchemaCategoriesResponse categories) {
            this.categories = Objects.requireNonNull(categories);
            return this;
        }

        public Builder setCollationSpec(String collationSpec) {
            this.collationSpec = Objects.requireNonNull(collationSpec);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setFields(List<TableFieldSchemaResponse> fields) {
            this.fields = Objects.requireNonNull(fields);
            return this;
        }

        public Builder setMaxLength(String maxLength) {
            this.maxLength = Objects.requireNonNull(maxLength);
            return this;
        }

        public Builder setMode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPolicyTags(TableFieldSchemaPolicyTagsResponse policyTags) {
            this.policyTags = Objects.requireNonNull(policyTags);
            return this;
        }

        public Builder setPrecision(String precision) {
            this.precision = Objects.requireNonNull(precision);
            return this;
        }

        public Builder setScale(String scale) {
            this.scale = Objects.requireNonNull(scale);
            return this;
        }

        public Builder setType(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }

        public TableFieldSchemaResponse build() {
            return new TableFieldSchemaResponse(categories, collationSpec, description, fields, maxLength, mode, name, policyTags, precision, scale, type);
        }
    }
}
