// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigquery_v2.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.bigquery_v2.inputs.BigtableColumnFamilyResponse;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;


public final class BigtableOptionsResponse extends io.pulumi.resources.InvokeArgs {

    public static final BigtableOptionsResponse Empty = new BigtableOptionsResponse();

    @InputImport(name="columnFamilies", required=true)
    private final List<BigtableColumnFamilyResponse> columnFamilies;

    public List<BigtableColumnFamilyResponse> getColumnFamilies() {
        return this.columnFamilies;
    }

    @InputImport(name="ignoreUnspecifiedColumnFamilies", required=true)
    private final Boolean ignoreUnspecifiedColumnFamilies;

    public Boolean getIgnoreUnspecifiedColumnFamilies() {
        return this.ignoreUnspecifiedColumnFamilies;
    }

    @InputImport(name="readRowkeyAsString", required=true)
    private final Boolean readRowkeyAsString;

    public Boolean getReadRowkeyAsString() {
        return this.readRowkeyAsString;
    }

    public BigtableOptionsResponse(
        List<BigtableColumnFamilyResponse> columnFamilies,
        Boolean ignoreUnspecifiedColumnFamilies,
        Boolean readRowkeyAsString) {
        this.columnFamilies = Objects.requireNonNull(columnFamilies, "expected parameter 'columnFamilies' to be non-null");
        this.ignoreUnspecifiedColumnFamilies = Objects.requireNonNull(ignoreUnspecifiedColumnFamilies, "expected parameter 'ignoreUnspecifiedColumnFamilies' to be non-null");
        this.readRowkeyAsString = Objects.requireNonNull(readRowkeyAsString, "expected parameter 'readRowkeyAsString' to be non-null");
    }

    private BigtableOptionsResponse() {
        this.columnFamilies = List.of();
        this.ignoreUnspecifiedColumnFamilies = null;
        this.readRowkeyAsString = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BigtableOptionsResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<BigtableColumnFamilyResponse> columnFamilies;
        private Boolean ignoreUnspecifiedColumnFamilies;
        private Boolean readRowkeyAsString;

        public Builder() {
    	      // Empty
        }

        public Builder(BigtableOptionsResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnFamilies = defaults.columnFamilies;
    	      this.ignoreUnspecifiedColumnFamilies = defaults.ignoreUnspecifiedColumnFamilies;
    	      this.readRowkeyAsString = defaults.readRowkeyAsString;
        }

        public Builder setColumnFamilies(List<BigtableColumnFamilyResponse> columnFamilies) {
            this.columnFamilies = Objects.requireNonNull(columnFamilies);
            return this;
        }

        public Builder setIgnoreUnspecifiedColumnFamilies(Boolean ignoreUnspecifiedColumnFamilies) {
            this.ignoreUnspecifiedColumnFamilies = Objects.requireNonNull(ignoreUnspecifiedColumnFamilies);
            return this;
        }

        public Builder setReadRowkeyAsString(Boolean readRowkeyAsString) {
            this.readRowkeyAsString = Objects.requireNonNull(readRowkeyAsString);
            return this;
        }

        public BigtableOptionsResponse build() {
            return new BigtableOptionsResponse(columnFamilies, ignoreUnspecifiedColumnFamilies, readRowkeyAsString);
        }
    }
}
