// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.servicemanagement_v1.inputs.OptionResponse;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Enum value definition.
 * 
 */
public final class EnumValueResponse extends io.pulumi.resources.InvokeArgs {

    public static final EnumValueResponse Empty = new EnumValueResponse();

    /**
     * Enum value name.
     * 
     */
    @InputImport(name="name", required=true)
      private final String name;

    public String getName() {
        return this.name;
    }

    /**
     * Enum value number.
     * 
     */
    @InputImport(name="number", required=true)
      private final Integer number;

    public Integer getNumber() {
        return this.number;
    }

    /**
     * Protocol buffer options.
     * 
     */
    @InputImport(name="options", required=true)
      private final List<OptionResponse> options;

    public List<OptionResponse> getOptions() {
        return this.options;
    }

    public EnumValueResponse(
        String name,
        Integer number,
        List<OptionResponse> options) {
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.number = Objects.requireNonNull(number, "expected parameter 'number' to be non-null");
        this.options = Objects.requireNonNull(options, "expected parameter 'options' to be non-null");
    }

    private EnumValueResponse() {
        this.name = null;
        this.number = null;
        this.options = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EnumValueResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String name;
        private Integer number;
        private List<OptionResponse> options;

        public Builder() {
    	      // Empty
        }

        public Builder(EnumValueResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.number = defaults.number;
    	      this.options = defaults.options;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder number(Integer number) {
            this.number = Objects.requireNonNull(number);
            return this;
        }

        public Builder options(List<OptionResponse> options) {
            this.options = Objects.requireNonNull(options);
            return this;
        }
        public EnumValueResponse build() {
            return new EnumValueResponse(name, number, options);
        }
    }
}
