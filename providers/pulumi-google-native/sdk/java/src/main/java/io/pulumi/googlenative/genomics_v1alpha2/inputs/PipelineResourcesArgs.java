// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.genomics_v1alpha2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.genomics_v1alpha2.inputs.DiskArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class PipelineResourcesArgs extends io.pulumi.resources.ResourceArgs {

    public static final PipelineResourcesArgs Empty = new PipelineResourcesArgs();

    @InputImport(name="acceleratorCount")
    private final @Nullable Input<String> acceleratorCount;

    public Input<String> getAcceleratorCount() {
        return this.acceleratorCount == null ? Input.empty() : this.acceleratorCount;
    }

    @InputImport(name="acceleratorType")
    private final @Nullable Input<String> acceleratorType;

    public Input<String> getAcceleratorType() {
        return this.acceleratorType == null ? Input.empty() : this.acceleratorType;
    }

    @InputImport(name="bootDiskSizeGb")
    private final @Nullable Input<Integer> bootDiskSizeGb;

    public Input<Integer> getBootDiskSizeGb() {
        return this.bootDiskSizeGb == null ? Input.empty() : this.bootDiskSizeGb;
    }

    @InputImport(name="disks")
    private final @Nullable Input<List<DiskArgs>> disks;

    public Input<List<DiskArgs>> getDisks() {
        return this.disks == null ? Input.empty() : this.disks;
    }

    @InputImport(name="minimumCpuCores")
    private final @Nullable Input<Integer> minimumCpuCores;

    public Input<Integer> getMinimumCpuCores() {
        return this.minimumCpuCores == null ? Input.empty() : this.minimumCpuCores;
    }

    @InputImport(name="minimumRamGb")
    private final @Nullable Input<Double> minimumRamGb;

    public Input<Double> getMinimumRamGb() {
        return this.minimumRamGb == null ? Input.empty() : this.minimumRamGb;
    }

    @InputImport(name="noAddress")
    private final @Nullable Input<Boolean> noAddress;

    public Input<Boolean> getNoAddress() {
        return this.noAddress == null ? Input.empty() : this.noAddress;
    }

    @InputImport(name="preemptible")
    private final @Nullable Input<Boolean> preemptible;

    public Input<Boolean> getPreemptible() {
        return this.preemptible == null ? Input.empty() : this.preemptible;
    }

    @InputImport(name="zones")
    private final @Nullable Input<List<String>> zones;

    public Input<List<String>> getZones() {
        return this.zones == null ? Input.empty() : this.zones;
    }

    public PipelineResourcesArgs(
        @Nullable Input<String> acceleratorCount,
        @Nullable Input<String> acceleratorType,
        @Nullable Input<Integer> bootDiskSizeGb,
        @Nullable Input<List<DiskArgs>> disks,
        @Nullable Input<Integer> minimumCpuCores,
        @Nullable Input<Double> minimumRamGb,
        @Nullable Input<Boolean> noAddress,
        @Nullable Input<Boolean> preemptible,
        @Nullable Input<List<String>> zones) {
        this.acceleratorCount = acceleratorCount;
        this.acceleratorType = acceleratorType;
        this.bootDiskSizeGb = bootDiskSizeGb;
        this.disks = disks;
        this.minimumCpuCores = minimumCpuCores;
        this.minimumRamGb = minimumRamGb;
        this.noAddress = noAddress;
        this.preemptible = preemptible;
        this.zones = zones;
    }

    private PipelineResourcesArgs() {
        this.acceleratorCount = Input.empty();
        this.acceleratorType = Input.empty();
        this.bootDiskSizeGb = Input.empty();
        this.disks = Input.empty();
        this.minimumCpuCores = Input.empty();
        this.minimumRamGb = Input.empty();
        this.noAddress = Input.empty();
        this.preemptible = Input.empty();
        this.zones = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PipelineResourcesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> acceleratorCount;
        private @Nullable Input<String> acceleratorType;
        private @Nullable Input<Integer> bootDiskSizeGb;
        private @Nullable Input<List<DiskArgs>> disks;
        private @Nullable Input<Integer> minimumCpuCores;
        private @Nullable Input<Double> minimumRamGb;
        private @Nullable Input<Boolean> noAddress;
        private @Nullable Input<Boolean> preemptible;
        private @Nullable Input<List<String>> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(PipelineResourcesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.acceleratorCount = defaults.acceleratorCount;
    	      this.acceleratorType = defaults.acceleratorType;
    	      this.bootDiskSizeGb = defaults.bootDiskSizeGb;
    	      this.disks = defaults.disks;
    	      this.minimumCpuCores = defaults.minimumCpuCores;
    	      this.minimumRamGb = defaults.minimumRamGb;
    	      this.noAddress = defaults.noAddress;
    	      this.preemptible = defaults.preemptible;
    	      this.zones = defaults.zones;
        }

        public Builder setAcceleratorCount(@Nullable Input<String> acceleratorCount) {
            this.acceleratorCount = acceleratorCount;
            return this;
        }

        public Builder setAcceleratorCount(@Nullable String acceleratorCount) {
            this.acceleratorCount = Input.ofNullable(acceleratorCount);
            return this;
        }

        public Builder setAcceleratorType(@Nullable Input<String> acceleratorType) {
            this.acceleratorType = acceleratorType;
            return this;
        }

        public Builder setAcceleratorType(@Nullable String acceleratorType) {
            this.acceleratorType = Input.ofNullable(acceleratorType);
            return this;
        }

        public Builder setBootDiskSizeGb(@Nullable Input<Integer> bootDiskSizeGb) {
            this.bootDiskSizeGb = bootDiskSizeGb;
            return this;
        }

        public Builder setBootDiskSizeGb(@Nullable Integer bootDiskSizeGb) {
            this.bootDiskSizeGb = Input.ofNullable(bootDiskSizeGb);
            return this;
        }

        public Builder setDisks(@Nullable Input<List<DiskArgs>> disks) {
            this.disks = disks;
            return this;
        }

        public Builder setDisks(@Nullable List<DiskArgs> disks) {
            this.disks = Input.ofNullable(disks);
            return this;
        }

        public Builder setMinimumCpuCores(@Nullable Input<Integer> minimumCpuCores) {
            this.minimumCpuCores = minimumCpuCores;
            return this;
        }

        public Builder setMinimumCpuCores(@Nullable Integer minimumCpuCores) {
            this.minimumCpuCores = Input.ofNullable(minimumCpuCores);
            return this;
        }

        public Builder setMinimumRamGb(@Nullable Input<Double> minimumRamGb) {
            this.minimumRamGb = minimumRamGb;
            return this;
        }

        public Builder setMinimumRamGb(@Nullable Double minimumRamGb) {
            this.minimumRamGb = Input.ofNullable(minimumRamGb);
            return this;
        }

        public Builder setNoAddress(@Nullable Input<Boolean> noAddress) {
            this.noAddress = noAddress;
            return this;
        }

        public Builder setNoAddress(@Nullable Boolean noAddress) {
            this.noAddress = Input.ofNullable(noAddress);
            return this;
        }

        public Builder setPreemptible(@Nullable Input<Boolean> preemptible) {
            this.preemptible = preemptible;
            return this;
        }

        public Builder setPreemptible(@Nullable Boolean preemptible) {
            this.preemptible = Input.ofNullable(preemptible);
            return this;
        }

        public Builder setZones(@Nullable Input<List<String>> zones) {
            this.zones = zones;
            return this;
        }

        public Builder setZones(@Nullable List<String> zones) {
            this.zones = Input.ofNullable(zones);
            return this;
        }

        public PipelineResourcesArgs build() {
            return new PipelineResourcesArgs(acceleratorCount, acceleratorType, bootDiskSizeGb, disks, minimumCpuCores, minimumRamGb, noAddress, preemptible, zones);
        }
    }
}
