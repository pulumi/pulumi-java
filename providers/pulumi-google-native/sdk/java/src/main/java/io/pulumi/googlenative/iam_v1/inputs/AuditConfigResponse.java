// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.iam_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.iam_v1.inputs.AuditLogConfigResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class AuditConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final AuditConfigResponse Empty = new AuditConfigResponse();

    @InputImport(name="auditLogConfigs", required=true)
    private final List<AuditLogConfigResponse> auditLogConfigs;

    public List<AuditLogConfigResponse> getAuditLogConfigs() {
        return this.auditLogConfigs;
    }

    @InputImport(name="service", required=true)
    private final String service;

    public String getService() {
        return this.service;
    }

    public AuditConfigResponse(
        List<AuditLogConfigResponse> auditLogConfigs,
        String service) {
        this.auditLogConfigs = Objects.requireNonNull(auditLogConfigs, "expected parameter 'auditLogConfigs' to be non-null");
        this.service = Objects.requireNonNull(service, "expected parameter 'service' to be non-null");
    }

    private AuditConfigResponse() {
        this.auditLogConfigs = List.of();
        this.service = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuditConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<AuditLogConfigResponse> auditLogConfigs;
        private String service;

        public Builder() {
    	      // Empty
        }

        public Builder(AuditConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditLogConfigs = defaults.auditLogConfigs;
    	      this.service = defaults.service;
        }

        public Builder setAuditLogConfigs(List<AuditLogConfigResponse> auditLogConfigs) {
            this.auditLogConfigs = Objects.requireNonNull(auditLogConfigs);
            return this;
        }

        public Builder setService(String service) {
            this.service = Objects.requireNonNull(service);
            return this;
        }

        public AuditConfigResponse build() {
            return new AuditConfigResponse(auditLogConfigs, service);
        }
    }
}
