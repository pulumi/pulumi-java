// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.compute_beta.enums.AttachedDiskInitializeParamsOnUpdateAction;
import io.pulumi.googlenative.compute_beta.inputs.CustomerEncryptionKeyArgs;
import io.pulumi.googlenative.compute_beta.inputs.GuestOsFeatureArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class AttachedDiskInitializeParamsArgs extends io.pulumi.resources.ResourceArgs {

    public static final AttachedDiskInitializeParamsArgs Empty = new AttachedDiskInitializeParamsArgs();

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="diskName")
    private final @Nullable Input<String> diskName;

    public Input<String> getDiskName() {
        return this.diskName == null ? Input.empty() : this.diskName;
    }

    @InputImport(name="diskSizeGb")
    private final @Nullable Input<String> diskSizeGb;

    public Input<String> getDiskSizeGb() {
        return this.diskSizeGb == null ? Input.empty() : this.diskSizeGb;
    }

    @InputImport(name="diskType")
    private final @Nullable Input<String> diskType;

    public Input<String> getDiskType() {
        return this.diskType == null ? Input.empty() : this.diskType;
    }

    @InputImport(name="guestOsFeatures")
    private final @Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures;

    public Input<List<GuestOsFeatureArgs>> getGuestOsFeatures() {
        return this.guestOsFeatures == null ? Input.empty() : this.guestOsFeatures;
    }

    @InputImport(name="labels")
    private final @Nullable Input<Map<String,String>> labels;

    public Input<Map<String,String>> getLabels() {
        return this.labels == null ? Input.empty() : this.labels;
    }

    @InputImport(name="licenses")
    private final @Nullable Input<List<String>> licenses;

    public Input<List<String>> getLicenses() {
        return this.licenses == null ? Input.empty() : this.licenses;
    }

    @InputImport(name="multiWriter")
    private final @Nullable Input<Boolean> multiWriter;

    public Input<Boolean> getMultiWriter() {
        return this.multiWriter == null ? Input.empty() : this.multiWriter;
    }

    @InputImport(name="onUpdateAction")
    private final @Nullable Input<AttachedDiskInitializeParamsOnUpdateAction> onUpdateAction;

    public Input<AttachedDiskInitializeParamsOnUpdateAction> getOnUpdateAction() {
        return this.onUpdateAction == null ? Input.empty() : this.onUpdateAction;
    }

    @InputImport(name="provisionedIops")
    private final @Nullable Input<String> provisionedIops;

    public Input<String> getProvisionedIops() {
        return this.provisionedIops == null ? Input.empty() : this.provisionedIops;
    }

    @InputImport(name="resourcePolicies")
    private final @Nullable Input<List<String>> resourcePolicies;

    public Input<List<String>> getResourcePolicies() {
        return this.resourcePolicies == null ? Input.empty() : this.resourcePolicies;
    }

    @InputImport(name="sourceImage")
    private final @Nullable Input<String> sourceImage;

    public Input<String> getSourceImage() {
        return this.sourceImage == null ? Input.empty() : this.sourceImage;
    }

    @InputImport(name="sourceImageEncryptionKey")
    private final @Nullable Input<CustomerEncryptionKeyArgs> sourceImageEncryptionKey;

    public Input<CustomerEncryptionKeyArgs> getSourceImageEncryptionKey() {
        return this.sourceImageEncryptionKey == null ? Input.empty() : this.sourceImageEncryptionKey;
    }

    @InputImport(name="sourceSnapshot")
    private final @Nullable Input<String> sourceSnapshot;

    public Input<String> getSourceSnapshot() {
        return this.sourceSnapshot == null ? Input.empty() : this.sourceSnapshot;
    }

    @InputImport(name="sourceSnapshotEncryptionKey")
    private final @Nullable Input<CustomerEncryptionKeyArgs> sourceSnapshotEncryptionKey;

    public Input<CustomerEncryptionKeyArgs> getSourceSnapshotEncryptionKey() {
        return this.sourceSnapshotEncryptionKey == null ? Input.empty() : this.sourceSnapshotEncryptionKey;
    }

    public AttachedDiskInitializeParamsArgs(
        @Nullable Input<String> description,
        @Nullable Input<String> diskName,
        @Nullable Input<String> diskSizeGb,
        @Nullable Input<String> diskType,
        @Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures,
        @Nullable Input<Map<String,String>> labels,
        @Nullable Input<List<String>> licenses,
        @Nullable Input<Boolean> multiWriter,
        @Nullable Input<AttachedDiskInitializeParamsOnUpdateAction> onUpdateAction,
        @Nullable Input<String> provisionedIops,
        @Nullable Input<List<String>> resourcePolicies,
        @Nullable Input<String> sourceImage,
        @Nullable Input<CustomerEncryptionKeyArgs> sourceImageEncryptionKey,
        @Nullable Input<String> sourceSnapshot,
        @Nullable Input<CustomerEncryptionKeyArgs> sourceSnapshotEncryptionKey) {
        this.description = description;
        this.diskName = diskName;
        this.diskSizeGb = diskSizeGb;
        this.diskType = diskType;
        this.guestOsFeatures = guestOsFeatures;
        this.labels = labels;
        this.licenses = licenses;
        this.multiWriter = multiWriter;
        this.onUpdateAction = onUpdateAction;
        this.provisionedIops = provisionedIops;
        this.resourcePolicies = resourcePolicies;
        this.sourceImage = sourceImage;
        this.sourceImageEncryptionKey = sourceImageEncryptionKey;
        this.sourceSnapshot = sourceSnapshot;
        this.sourceSnapshotEncryptionKey = sourceSnapshotEncryptionKey;
    }

    private AttachedDiskInitializeParamsArgs() {
        this.description = Input.empty();
        this.diskName = Input.empty();
        this.diskSizeGb = Input.empty();
        this.diskType = Input.empty();
        this.guestOsFeatures = Input.empty();
        this.labels = Input.empty();
        this.licenses = Input.empty();
        this.multiWriter = Input.empty();
        this.onUpdateAction = Input.empty();
        this.provisionedIops = Input.empty();
        this.resourcePolicies = Input.empty();
        this.sourceImage = Input.empty();
        this.sourceImageEncryptionKey = Input.empty();
        this.sourceSnapshot = Input.empty();
        this.sourceSnapshotEncryptionKey = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AttachedDiskInitializeParamsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> description;
        private @Nullable Input<String> diskName;
        private @Nullable Input<String> diskSizeGb;
        private @Nullable Input<String> diskType;
        private @Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures;
        private @Nullable Input<Map<String,String>> labels;
        private @Nullable Input<List<String>> licenses;
        private @Nullable Input<Boolean> multiWriter;
        private @Nullable Input<AttachedDiskInitializeParamsOnUpdateAction> onUpdateAction;
        private @Nullable Input<String> provisionedIops;
        private @Nullable Input<List<String>> resourcePolicies;
        private @Nullable Input<String> sourceImage;
        private @Nullable Input<CustomerEncryptionKeyArgs> sourceImageEncryptionKey;
        private @Nullable Input<String> sourceSnapshot;
        private @Nullable Input<CustomerEncryptionKeyArgs> sourceSnapshotEncryptionKey;

        public Builder() {
    	      // Empty
        }

        public Builder(AttachedDiskInitializeParamsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.diskName = defaults.diskName;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.diskType = defaults.diskType;
    	      this.guestOsFeatures = defaults.guestOsFeatures;
    	      this.labels = defaults.labels;
    	      this.licenses = defaults.licenses;
    	      this.multiWriter = defaults.multiWriter;
    	      this.onUpdateAction = defaults.onUpdateAction;
    	      this.provisionedIops = defaults.provisionedIops;
    	      this.resourcePolicies = defaults.resourcePolicies;
    	      this.sourceImage = defaults.sourceImage;
    	      this.sourceImageEncryptionKey = defaults.sourceImageEncryptionKey;
    	      this.sourceSnapshot = defaults.sourceSnapshot;
    	      this.sourceSnapshotEncryptionKey = defaults.sourceSnapshotEncryptionKey;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDiskName(@Nullable Input<String> diskName) {
            this.diskName = diskName;
            return this;
        }

        public Builder setDiskName(@Nullable String diskName) {
            this.diskName = Input.ofNullable(diskName);
            return this;
        }

        public Builder setDiskSizeGb(@Nullable Input<String> diskSizeGb) {
            this.diskSizeGb = diskSizeGb;
            return this;
        }

        public Builder setDiskSizeGb(@Nullable String diskSizeGb) {
            this.diskSizeGb = Input.ofNullable(diskSizeGb);
            return this;
        }

        public Builder setDiskType(@Nullable Input<String> diskType) {
            this.diskType = diskType;
            return this;
        }

        public Builder setDiskType(@Nullable String diskType) {
            this.diskType = Input.ofNullable(diskType);
            return this;
        }

        public Builder setGuestOsFeatures(@Nullable Input<List<GuestOsFeatureArgs>> guestOsFeatures) {
            this.guestOsFeatures = guestOsFeatures;
            return this;
        }

        public Builder setGuestOsFeatures(@Nullable List<GuestOsFeatureArgs> guestOsFeatures) {
            this.guestOsFeatures = Input.ofNullable(guestOsFeatures);
            return this;
        }

        public Builder setLabels(@Nullable Input<Map<String,String>> labels) {
            this.labels = labels;
            return this;
        }

        public Builder setLabels(@Nullable Map<String,String> labels) {
            this.labels = Input.ofNullable(labels);
            return this;
        }

        public Builder setLicenses(@Nullable Input<List<String>> licenses) {
            this.licenses = licenses;
            return this;
        }

        public Builder setLicenses(@Nullable List<String> licenses) {
            this.licenses = Input.ofNullable(licenses);
            return this;
        }

        public Builder setMultiWriter(@Nullable Input<Boolean> multiWriter) {
            this.multiWriter = multiWriter;
            return this;
        }

        public Builder setMultiWriter(@Nullable Boolean multiWriter) {
            this.multiWriter = Input.ofNullable(multiWriter);
            return this;
        }

        public Builder setOnUpdateAction(@Nullable Input<AttachedDiskInitializeParamsOnUpdateAction> onUpdateAction) {
            this.onUpdateAction = onUpdateAction;
            return this;
        }

        public Builder setOnUpdateAction(@Nullable AttachedDiskInitializeParamsOnUpdateAction onUpdateAction) {
            this.onUpdateAction = Input.ofNullable(onUpdateAction);
            return this;
        }

        public Builder setProvisionedIops(@Nullable Input<String> provisionedIops) {
            this.provisionedIops = provisionedIops;
            return this;
        }

        public Builder setProvisionedIops(@Nullable String provisionedIops) {
            this.provisionedIops = Input.ofNullable(provisionedIops);
            return this;
        }

        public Builder setResourcePolicies(@Nullable Input<List<String>> resourcePolicies) {
            this.resourcePolicies = resourcePolicies;
            return this;
        }

        public Builder setResourcePolicies(@Nullable List<String> resourcePolicies) {
            this.resourcePolicies = Input.ofNullable(resourcePolicies);
            return this;
        }

        public Builder setSourceImage(@Nullable Input<String> sourceImage) {
            this.sourceImage = sourceImage;
            return this;
        }

        public Builder setSourceImage(@Nullable String sourceImage) {
            this.sourceImage = Input.ofNullable(sourceImage);
            return this;
        }

        public Builder setSourceImageEncryptionKey(@Nullable Input<CustomerEncryptionKeyArgs> sourceImageEncryptionKey) {
            this.sourceImageEncryptionKey = sourceImageEncryptionKey;
            return this;
        }

        public Builder setSourceImageEncryptionKey(@Nullable CustomerEncryptionKeyArgs sourceImageEncryptionKey) {
            this.sourceImageEncryptionKey = Input.ofNullable(sourceImageEncryptionKey);
            return this;
        }

        public Builder setSourceSnapshot(@Nullable Input<String> sourceSnapshot) {
            this.sourceSnapshot = sourceSnapshot;
            return this;
        }

        public Builder setSourceSnapshot(@Nullable String sourceSnapshot) {
            this.sourceSnapshot = Input.ofNullable(sourceSnapshot);
            return this;
        }

        public Builder setSourceSnapshotEncryptionKey(@Nullable Input<CustomerEncryptionKeyArgs> sourceSnapshotEncryptionKey) {
            this.sourceSnapshotEncryptionKey = sourceSnapshotEncryptionKey;
            return this;
        }

        public Builder setSourceSnapshotEncryptionKey(@Nullable CustomerEncryptionKeyArgs sourceSnapshotEncryptionKey) {
            this.sourceSnapshotEncryptionKey = Input.ofNullable(sourceSnapshotEncryptionKey);
            return this;
        }

        public AttachedDiskInitializeParamsArgs build() {
            return new AttachedDiskInitializeParamsArgs(description, diskName, diskSizeGb, diskType, guestOsFeatures, labels, licenses, multiWriter, onUpdateAction, provisionedIops, resourcePolicies, sourceImage, sourceImageEncryptionKey, sourceSnapshot, sourceSnapshotEncryptionKey);
        }
    }
}
