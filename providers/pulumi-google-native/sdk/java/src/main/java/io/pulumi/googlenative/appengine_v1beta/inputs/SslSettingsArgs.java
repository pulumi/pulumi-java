// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.appengine_v1beta.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.appengine_v1beta.enums.SslSettingsSslManagementType;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class SslSettingsArgs extends io.pulumi.resources.ResourceArgs {

    public static final SslSettingsArgs Empty = new SslSettingsArgs();

    @InputImport(name="certificateId")
    private final @Nullable Input<String> certificateId;

    public Input<String> getCertificateId() {
        return this.certificateId == null ? Input.empty() : this.certificateId;
    }

    @InputImport(name="sslManagementType")
    private final @Nullable Input<SslSettingsSslManagementType> sslManagementType;

    public Input<SslSettingsSslManagementType> getSslManagementType() {
        return this.sslManagementType == null ? Input.empty() : this.sslManagementType;
    }

    public SslSettingsArgs(
        @Nullable Input<String> certificateId,
        @Nullable Input<SslSettingsSslManagementType> sslManagementType) {
        this.certificateId = certificateId;
        this.sslManagementType = sslManagementType;
    }

    private SslSettingsArgs() {
        this.certificateId = Input.empty();
        this.sslManagementType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SslSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> certificateId;
        private @Nullable Input<SslSettingsSslManagementType> sslManagementType;

        public Builder() {
    	      // Empty
        }

        public Builder(SslSettingsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateId = defaults.certificateId;
    	      this.sslManagementType = defaults.sslManagementType;
        }

        public Builder setCertificateId(@Nullable Input<String> certificateId) {
            this.certificateId = certificateId;
            return this;
        }

        public Builder setCertificateId(@Nullable String certificateId) {
            this.certificateId = Input.ofNullable(certificateId);
            return this;
        }

        public Builder setSslManagementType(@Nullable Input<SslSettingsSslManagementType> sslManagementType) {
            this.sslManagementType = sslManagementType;
            return this;
        }

        public Builder setSslManagementType(@Nullable SslSettingsSslManagementType sslManagementType) {
            this.sslManagementType = Input.ofNullable(sslManagementType);
            return this;
        }

        public SslSettingsArgs build() {
            return new SslSettingsArgs(certificateId, sslManagementType);
        }
    }
}
