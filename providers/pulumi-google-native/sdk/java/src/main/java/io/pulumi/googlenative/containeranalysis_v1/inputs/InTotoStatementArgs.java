// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.containeranalysis_v1.inputs.InTotoProvenanceArgs;
import io.pulumi.googlenative.containeranalysis_v1.inputs.SlsaProvenanceArgs;
import io.pulumi.googlenative.containeranalysis_v1.inputs.SubjectArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Spec defined at https://github.com/in-toto/attestation/tree/main/spec#statement The serialized InTotoStatement will be stored as Envelope.payload. Envelope.payloadType is always "application/vnd.in-toto+json".
 * 
 */
public final class InTotoStatementArgs extends io.pulumi.resources.ResourceArgs {

    public static final InTotoStatementArgs Empty = new InTotoStatementArgs();

    /**
     * "https://slsa.dev/provenance/v0.1" for SlsaProvenance.
     * 
     */
    @InputImport(name="predicateType")
      private final @Nullable Input<String> predicateType;

    public Input<String> getPredicateType() {
        return this.predicateType == null ? Input.empty() : this.predicateType;
    }

    @InputImport(name="provenance")
      private final @Nullable Input<InTotoProvenanceArgs> provenance;

    public Input<InTotoProvenanceArgs> getProvenance() {
        return this.provenance == null ? Input.empty() : this.provenance;
    }

    @InputImport(name="slsaProvenance")
      private final @Nullable Input<SlsaProvenanceArgs> slsaProvenance;

    public Input<SlsaProvenanceArgs> getSlsaProvenance() {
        return this.slsaProvenance == null ? Input.empty() : this.slsaProvenance;
    }

    @InputImport(name="subject")
      private final @Nullable Input<List<SubjectArgs>> subject;

    public Input<List<SubjectArgs>> getSubject() {
        return this.subject == null ? Input.empty() : this.subject;
    }

    /**
     * Always "https://in-toto.io/Statement/v0.1".
     * 
     */
    @InputImport(name="type")
      private final @Nullable Input<String> type;

    public Input<String> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    public InTotoStatementArgs(
        @Nullable Input<String> predicateType,
        @Nullable Input<InTotoProvenanceArgs> provenance,
        @Nullable Input<SlsaProvenanceArgs> slsaProvenance,
        @Nullable Input<List<SubjectArgs>> subject,
        @Nullable Input<String> type) {
        this.predicateType = predicateType;
        this.provenance = provenance;
        this.slsaProvenance = slsaProvenance;
        this.subject = subject;
        this.type = type;
    }

    private InTotoStatementArgs() {
        this.predicateType = Input.empty();
        this.provenance = Input.empty();
        this.slsaProvenance = Input.empty();
        this.subject = Input.empty();
        this.type = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InTotoStatementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> predicateType;
        private @Nullable Input<InTotoProvenanceArgs> provenance;
        private @Nullable Input<SlsaProvenanceArgs> slsaProvenance;
        private @Nullable Input<List<SubjectArgs>> subject;
        private @Nullable Input<String> type;

        public Builder() {
    	      // Empty
        }

        public Builder(InTotoStatementArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.predicateType = defaults.predicateType;
    	      this.provenance = defaults.provenance;
    	      this.slsaProvenance = defaults.slsaProvenance;
    	      this.subject = defaults.subject;
    	      this.type = defaults.type;
        }

        public Builder predicateType(@Nullable Input<String> predicateType) {
            this.predicateType = predicateType;
            return this;
        }

        public Builder predicateType(@Nullable String predicateType) {
            this.predicateType = Input.ofNullable(predicateType);
            return this;
        }

        public Builder provenance(@Nullable Input<InTotoProvenanceArgs> provenance) {
            this.provenance = provenance;
            return this;
        }

        public Builder provenance(@Nullable InTotoProvenanceArgs provenance) {
            this.provenance = Input.ofNullable(provenance);
            return this;
        }

        public Builder slsaProvenance(@Nullable Input<SlsaProvenanceArgs> slsaProvenance) {
            this.slsaProvenance = slsaProvenance;
            return this;
        }

        public Builder slsaProvenance(@Nullable SlsaProvenanceArgs slsaProvenance) {
            this.slsaProvenance = Input.ofNullable(slsaProvenance);
            return this;
        }

        public Builder subject(@Nullable Input<List<SubjectArgs>> subject) {
            this.subject = subject;
            return this;
        }

        public Builder subject(@Nullable List<SubjectArgs> subject) {
            this.subject = Input.ofNullable(subject);
            return this;
        }

        public Builder type(@Nullable Input<String> type) {
            this.type = type;
            return this;
        }

        public Builder type(@Nullable String type) {
            this.type = Input.ofNullable(type);
            return this;
        }
        public InTotoStatementArgs build() {
            return new InTotoStatementArgs(predicateType, provenance, slsaProvenance, subject, type);
        }
    }
}
