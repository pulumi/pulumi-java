// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.servicemanagement_v1.enums.ApiSyntax;
import io.pulumi.googlenative.servicemanagement_v1.inputs.MethodArgs;
import io.pulumi.googlenative.servicemanagement_v1.inputs.MixinArgs;
import io.pulumi.googlenative.servicemanagement_v1.inputs.OptionArgs;
import io.pulumi.googlenative.servicemanagement_v1.inputs.SourceContextArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ApiArgs extends io.pulumi.resources.ResourceArgs {

    public static final ApiArgs Empty = new ApiArgs();

    @InputImport(name="methods")
    private final @Nullable Input<List<MethodArgs>> methods;

    public Input<List<MethodArgs>> getMethods() {
        return this.methods == null ? Input.empty() : this.methods;
    }

    @InputImport(name="mixins")
    private final @Nullable Input<List<MixinArgs>> mixins;

    public Input<List<MixinArgs>> getMixins() {
        return this.mixins == null ? Input.empty() : this.mixins;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="options")
    private final @Nullable Input<List<OptionArgs>> options;

    public Input<List<OptionArgs>> getOptions() {
        return this.options == null ? Input.empty() : this.options;
    }

    @InputImport(name="sourceContext")
    private final @Nullable Input<SourceContextArgs> sourceContext;

    public Input<SourceContextArgs> getSourceContext() {
        return this.sourceContext == null ? Input.empty() : this.sourceContext;
    }

    @InputImport(name="syntax")
    private final @Nullable Input<ApiSyntax> syntax;

    public Input<ApiSyntax> getSyntax() {
        return this.syntax == null ? Input.empty() : this.syntax;
    }

    @InputImport(name="version")
    private final @Nullable Input<String> version;

    public Input<String> getVersion() {
        return this.version == null ? Input.empty() : this.version;
    }

    public ApiArgs(
        @Nullable Input<List<MethodArgs>> methods,
        @Nullable Input<List<MixinArgs>> mixins,
        @Nullable Input<String> name,
        @Nullable Input<List<OptionArgs>> options,
        @Nullable Input<SourceContextArgs> sourceContext,
        @Nullable Input<ApiSyntax> syntax,
        @Nullable Input<String> version) {
        this.methods = methods;
        this.mixins = mixins;
        this.name = name;
        this.options = options;
        this.sourceContext = sourceContext;
        this.syntax = syntax;
        this.version = version;
    }

    private ApiArgs() {
        this.methods = Input.empty();
        this.mixins = Input.empty();
        this.name = Input.empty();
        this.options = Input.empty();
        this.sourceContext = Input.empty();
        this.syntax = Input.empty();
        this.version = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ApiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<MethodArgs>> methods;
        private @Nullable Input<List<MixinArgs>> mixins;
        private @Nullable Input<String> name;
        private @Nullable Input<List<OptionArgs>> options;
        private @Nullable Input<SourceContextArgs> sourceContext;
        private @Nullable Input<ApiSyntax> syntax;
        private @Nullable Input<String> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ApiArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.methods = defaults.methods;
    	      this.mixins = defaults.mixins;
    	      this.name = defaults.name;
    	      this.options = defaults.options;
    	      this.sourceContext = defaults.sourceContext;
    	      this.syntax = defaults.syntax;
    	      this.version = defaults.version;
        }

        public Builder setMethods(@Nullable Input<List<MethodArgs>> methods) {
            this.methods = methods;
            return this;
        }

        public Builder setMethods(@Nullable List<MethodArgs> methods) {
            this.methods = Input.ofNullable(methods);
            return this;
        }

        public Builder setMixins(@Nullable Input<List<MixinArgs>> mixins) {
            this.mixins = mixins;
            return this;
        }

        public Builder setMixins(@Nullable List<MixinArgs> mixins) {
            this.mixins = Input.ofNullable(mixins);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setOptions(@Nullable Input<List<OptionArgs>> options) {
            this.options = options;
            return this;
        }

        public Builder setOptions(@Nullable List<OptionArgs> options) {
            this.options = Input.ofNullable(options);
            return this;
        }

        public Builder setSourceContext(@Nullable Input<SourceContextArgs> sourceContext) {
            this.sourceContext = sourceContext;
            return this;
        }

        public Builder setSourceContext(@Nullable SourceContextArgs sourceContext) {
            this.sourceContext = Input.ofNullable(sourceContext);
            return this;
        }

        public Builder setSyntax(@Nullable Input<ApiSyntax> syntax) {
            this.syntax = syntax;
            return this;
        }

        public Builder setSyntax(@Nullable ApiSyntax syntax) {
            this.syntax = Input.ofNullable(syntax);
            return this;
        }

        public Builder setVersion(@Nullable Input<String> version) {
            this.version = version;
            return this;
        }

        public Builder setVersion(@Nullable String version) {
            this.version = Input.ofNullable(version);
            return this;
        }

        public ApiArgs build() {
            return new ApiArgs(methods, mixins, name, options, sourceContext, syntax, version);
        }
    }
}
