// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.file_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.file_v1.enums.NetworkConfigConnectMode;
import io.pulumi.googlenative.file_v1.enums.NetworkConfigModesItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NetworkConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final NetworkConfigArgs Empty = new NetworkConfigArgs();

    @InputImport(name="connectMode")
    private final @Nullable Input<NetworkConfigConnectMode> connectMode;

    public Input<NetworkConfigConnectMode> getConnectMode() {
        return this.connectMode == null ? Input.empty() : this.connectMode;
    }

    @InputImport(name="modes")
    private final @Nullable Input<List<NetworkConfigModesItem>> modes;

    public Input<List<NetworkConfigModesItem>> getModes() {
        return this.modes == null ? Input.empty() : this.modes;
    }

    @InputImport(name="network")
    private final @Nullable Input<String> network;

    public Input<String> getNetwork() {
        return this.network == null ? Input.empty() : this.network;
    }

    @InputImport(name="reservedIpRange")
    private final @Nullable Input<String> reservedIpRange;

    public Input<String> getReservedIpRange() {
        return this.reservedIpRange == null ? Input.empty() : this.reservedIpRange;
    }

    public NetworkConfigArgs(
        @Nullable Input<NetworkConfigConnectMode> connectMode,
        @Nullable Input<List<NetworkConfigModesItem>> modes,
        @Nullable Input<String> network,
        @Nullable Input<String> reservedIpRange) {
        this.connectMode = connectMode;
        this.modes = modes;
        this.network = network;
        this.reservedIpRange = reservedIpRange;
    }

    private NetworkConfigArgs() {
        this.connectMode = Input.empty();
        this.modes = Input.empty();
        this.network = Input.empty();
        this.reservedIpRange = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NetworkConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<NetworkConfigConnectMode> connectMode;
        private @Nullable Input<List<NetworkConfigModesItem>> modes;
        private @Nullable Input<String> network;
        private @Nullable Input<String> reservedIpRange;

        public Builder() {
    	      // Empty
        }

        public Builder(NetworkConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectMode = defaults.connectMode;
    	      this.modes = defaults.modes;
    	      this.network = defaults.network;
    	      this.reservedIpRange = defaults.reservedIpRange;
        }

        public Builder setConnectMode(@Nullable Input<NetworkConfigConnectMode> connectMode) {
            this.connectMode = connectMode;
            return this;
        }

        public Builder setConnectMode(@Nullable NetworkConfigConnectMode connectMode) {
            this.connectMode = Input.ofNullable(connectMode);
            return this;
        }

        public Builder setModes(@Nullable Input<List<NetworkConfigModesItem>> modes) {
            this.modes = modes;
            return this;
        }

        public Builder setModes(@Nullable List<NetworkConfigModesItem> modes) {
            this.modes = Input.ofNullable(modes);
            return this;
        }

        public Builder setNetwork(@Nullable Input<String> network) {
            this.network = network;
            return this;
        }

        public Builder setNetwork(@Nullable String network) {
            this.network = Input.ofNullable(network);
            return this;
        }

        public Builder setReservedIpRange(@Nullable Input<String> reservedIpRange) {
            this.reservedIpRange = reservedIpRange;
            return this;
        }

        public Builder setReservedIpRange(@Nullable String reservedIpRange) {
            this.reservedIpRange = Input.ofNullable(reservedIpRange);
            return this;
        }

        public NetworkConfigArgs build() {
            return new NetworkConfigArgs(connectMode, modes, network, reservedIpRange);
        }
    }
}
