// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.healthcare_v1beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.healthcare_v1beta1.enums.GoogleCloudHealthcareV1beta1FhirBigQueryDestinationWriteDisposition;
import io.pulumi.googlenative.healthcare_v1beta1.inputs.SchemaConfigArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The configuration for exporting to BigQuery.
 * 
 */
public final class GoogleCloudHealthcareV1beta1FhirBigQueryDestinationArgs extends io.pulumi.resources.ResourceArgs {

    public static final GoogleCloudHealthcareV1beta1FhirBigQueryDestinationArgs Empty = new GoogleCloudHealthcareV1beta1FhirBigQueryDestinationArgs();

    /**
     * BigQuery URI to an existing dataset, up to 2000 characters long, in the format `bq://projectId.bqDatasetId`.
     * 
     */
    @Import(name="datasetUri")
      private final @Nullable Output<String> datasetUri;

    public Output<String> getDatasetUri() {
        return this.datasetUri == null ? Codegen.empty() : this.datasetUri;
    }

    /**
     * Use `write_disposition` instead. If `write_disposition` is specified, this parameter is ignored. force=false is equivalent to write_disposition=WRITE_EMPTY and force=true is equivalent to write_disposition=WRITE_TRUNCATE.
     * 
     */
    @Import(name="force")
      private final @Nullable Output<Boolean> force;

    public Output<Boolean> getForce() {
        return this.force == null ? Codegen.empty() : this.force;
    }

    /**
     * The configuration for the exported BigQuery schema.
     * 
     */
    @Import(name="schemaConfig")
      private final @Nullable Output<SchemaConfigArgs> schemaConfig;

    public Output<SchemaConfigArgs> getSchemaConfig() {
        return this.schemaConfig == null ? Codegen.empty() : this.schemaConfig;
    }

    /**
     * Determines if existing data in the destination dataset is overwritten, appended to, or not written if the tables contain data. If a write_disposition is specified, the `force` parameter is ignored.
     * 
     */
    @Import(name="writeDisposition")
      private final @Nullable Output<GoogleCloudHealthcareV1beta1FhirBigQueryDestinationWriteDisposition> writeDisposition;

    public Output<GoogleCloudHealthcareV1beta1FhirBigQueryDestinationWriteDisposition> getWriteDisposition() {
        return this.writeDisposition == null ? Codegen.empty() : this.writeDisposition;
    }

    public GoogleCloudHealthcareV1beta1FhirBigQueryDestinationArgs(
        @Nullable Output<String> datasetUri,
        @Nullable Output<Boolean> force,
        @Nullable Output<SchemaConfigArgs> schemaConfig,
        @Nullable Output<GoogleCloudHealthcareV1beta1FhirBigQueryDestinationWriteDisposition> writeDisposition) {
        this.datasetUri = datasetUri;
        this.force = force;
        this.schemaConfig = schemaConfig;
        this.writeDisposition = writeDisposition;
    }

    private GoogleCloudHealthcareV1beta1FhirBigQueryDestinationArgs() {
        this.datasetUri = Codegen.empty();
        this.force = Codegen.empty();
        this.schemaConfig = Codegen.empty();
        this.writeDisposition = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GoogleCloudHealthcareV1beta1FhirBigQueryDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> datasetUri;
        private @Nullable Output<Boolean> force;
        private @Nullable Output<SchemaConfigArgs> schemaConfig;
        private @Nullable Output<GoogleCloudHealthcareV1beta1FhirBigQueryDestinationWriteDisposition> writeDisposition;

        public Builder() {
    	      // Empty
        }

        public Builder(GoogleCloudHealthcareV1beta1FhirBigQueryDestinationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datasetUri = defaults.datasetUri;
    	      this.force = defaults.force;
    	      this.schemaConfig = defaults.schemaConfig;
    	      this.writeDisposition = defaults.writeDisposition;
        }

        public Builder datasetUri(@Nullable Output<String> datasetUri) {
            this.datasetUri = datasetUri;
            return this;
        }
        public Builder datasetUri(@Nullable String datasetUri) {
            this.datasetUri = Codegen.ofNullable(datasetUri);
            return this;
        }
        public Builder force(@Nullable Output<Boolean> force) {
            this.force = force;
            return this;
        }
        public Builder force(@Nullable Boolean force) {
            this.force = Codegen.ofNullable(force);
            return this;
        }
        public Builder schemaConfig(@Nullable Output<SchemaConfigArgs> schemaConfig) {
            this.schemaConfig = schemaConfig;
            return this;
        }
        public Builder schemaConfig(@Nullable SchemaConfigArgs schemaConfig) {
            this.schemaConfig = Codegen.ofNullable(schemaConfig);
            return this;
        }
        public Builder writeDisposition(@Nullable Output<GoogleCloudHealthcareV1beta1FhirBigQueryDestinationWriteDisposition> writeDisposition) {
            this.writeDisposition = writeDisposition;
            return this;
        }
        public Builder writeDisposition(@Nullable GoogleCloudHealthcareV1beta1FhirBigQueryDestinationWriteDisposition writeDisposition) {
            this.writeDisposition = Codegen.ofNullable(writeDisposition);
            return this;
        }        public GoogleCloudHealthcareV1beta1FhirBigQueryDestinationArgs build() {
            return new GoogleCloudHealthcareV1beta1FhirBigQueryDestinationArgs(datasetUri, force, schemaConfig, writeDisposition);
        }
    }
}
