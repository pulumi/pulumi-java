// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1beta1.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.googlenative.containeranalysis_v1beta1.outputs.VersionResponse;
import io.pulumi.googlenative.containeranalysis_v1beta1.outputs.VulnerabilityLocationResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DetailResponse {
    /**
     * The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.
     * 
     */
    private final String cpeUri;
    /**
     * A vendor-specific description of this note.
     * 
     */
    private final String description;
    /**
     * The fix for this specific package version.
     * 
     */
    private final VulnerabilityLocationResponse fixedLocation;
    /**
     * Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.
     * 
     */
    private final Boolean isObsolete;
    /**
     * The max version of the package in which the vulnerability exists.
     * 
     */
    private final VersionResponse maxAffectedVersion;
    /**
     * The min version of the package in which the vulnerability exists.
     * 
     */
    private final VersionResponse minAffectedVersion;
    /**
     * The name of the package where the vulnerability was found.
     * 
     */
    private final String $package;
    /**
     * The type of package; whether native or non native(ruby gems, node.js packages etc).
     * 
     */
    private final String packageType;
    /**
     * The severity (eg: distro assigned severity) for this vulnerability.
     * 
     */
    private final String severityName;
    /**
     * The source from which the information in this Detail was obtained.
     * 
     */
    private final String source;
    /**
     * The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
     * 
     */
    private final String sourceUpdateTime;
    /**
     * The name of the vendor of the product.
     * 
     */
    private final String vendor;

    @CustomType.Constructor
    private DetailResponse(
        @CustomType.Parameter("cpeUri") String cpeUri,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("fixedLocation") VulnerabilityLocationResponse fixedLocation,
        @CustomType.Parameter("isObsolete") Boolean isObsolete,
        @CustomType.Parameter("maxAffectedVersion") VersionResponse maxAffectedVersion,
        @CustomType.Parameter("minAffectedVersion") VersionResponse minAffectedVersion,
        @CustomType.Parameter("package") String $package,
        @CustomType.Parameter("packageType") String packageType,
        @CustomType.Parameter("severityName") String severityName,
        @CustomType.Parameter("source") String source,
        @CustomType.Parameter("sourceUpdateTime") String sourceUpdateTime,
        @CustomType.Parameter("vendor") String vendor) {
        this.cpeUri = cpeUri;
        this.description = description;
        this.fixedLocation = fixedLocation;
        this.isObsolete = isObsolete;
        this.maxAffectedVersion = maxAffectedVersion;
        this.minAffectedVersion = minAffectedVersion;
        this.$package = $package;
        this.packageType = packageType;
        this.severityName = severityName;
        this.source = source;
        this.sourceUpdateTime = sourceUpdateTime;
        this.vendor = vendor;
    }

    /**
     * The CPE URI in [cpe format](https://cpe.mitre.org/specification/) in which the vulnerability manifests. Examples include distro or storage location for vulnerable jar.
     * 
    */
    public String getCpeUri() {
        return this.cpeUri;
    }
    /**
     * A vendor-specific description of this note.
     * 
    */
    public String getDescription() {
        return this.description;
    }
    /**
     * The fix for this specific package version.
     * 
    */
    public VulnerabilityLocationResponse getFixedLocation() {
        return this.fixedLocation;
    }
    /**
     * Whether this detail is obsolete. Occurrences are expected not to point to obsolete details.
     * 
    */
    public Boolean getIsObsolete() {
        return this.isObsolete;
    }
    /**
     * The max version of the package in which the vulnerability exists.
     * 
    */
    public VersionResponse getMaxAffectedVersion() {
        return this.maxAffectedVersion;
    }
    /**
     * The min version of the package in which the vulnerability exists.
     * 
    */
    public VersionResponse getMinAffectedVersion() {
        return this.minAffectedVersion;
    }
    /**
     * The name of the package where the vulnerability was found.
     * 
    */
    public String get$package() {
        return this.$package;
    }
    /**
     * The type of package; whether native or non native(ruby gems, node.js packages etc).
     * 
    */
    public String getPackageType() {
        return this.packageType;
    }
    /**
     * The severity (eg: distro assigned severity) for this vulnerability.
     * 
    */
    public String getSeverityName() {
        return this.severityName;
    }
    /**
     * The source from which the information in this Detail was obtained.
     * 
    */
    public String getSource() {
        return this.source;
    }
    /**
     * The time this information was last changed at the source. This is an upstream timestamp from the underlying information source - e.g. Ubuntu security tracker.
     * 
    */
    public String getSourceUpdateTime() {
        return this.sourceUpdateTime;
    }
    /**
     * The name of the vendor of the product.
     * 
    */
    public String getVendor() {
        return this.vendor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DetailResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cpeUri;
        private String description;
        private VulnerabilityLocationResponse fixedLocation;
        private Boolean isObsolete;
        private VersionResponse maxAffectedVersion;
        private VersionResponse minAffectedVersion;
        private String $package;
        private String packageType;
        private String severityName;
        private String source;
        private String sourceUpdateTime;
        private String vendor;

        public Builder() {
    	      // Empty
        }

        public Builder(DetailResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cpeUri = defaults.cpeUri;
    	      this.description = defaults.description;
    	      this.fixedLocation = defaults.fixedLocation;
    	      this.isObsolete = defaults.isObsolete;
    	      this.maxAffectedVersion = defaults.maxAffectedVersion;
    	      this.minAffectedVersion = defaults.minAffectedVersion;
    	      this.$package = defaults.$package;
    	      this.packageType = defaults.packageType;
    	      this.severityName = defaults.severityName;
    	      this.source = defaults.source;
    	      this.sourceUpdateTime = defaults.sourceUpdateTime;
    	      this.vendor = defaults.vendor;
        }

        public Builder cpeUri(String cpeUri) {
            this.cpeUri = Objects.requireNonNull(cpeUri);
            return this;
        }

        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder fixedLocation(VulnerabilityLocationResponse fixedLocation) {
            this.fixedLocation = Objects.requireNonNull(fixedLocation);
            return this;
        }

        public Builder isObsolete(Boolean isObsolete) {
            this.isObsolete = Objects.requireNonNull(isObsolete);
            return this;
        }

        public Builder maxAffectedVersion(VersionResponse maxAffectedVersion) {
            this.maxAffectedVersion = Objects.requireNonNull(maxAffectedVersion);
            return this;
        }

        public Builder minAffectedVersion(VersionResponse minAffectedVersion) {
            this.minAffectedVersion = Objects.requireNonNull(minAffectedVersion);
            return this;
        }

        public Builder $package(String $package) {
            this.$package = Objects.requireNonNull($package);
            return this;
        }

        public Builder packageType(String packageType) {
            this.packageType = Objects.requireNonNull(packageType);
            return this;
        }

        public Builder severityName(String severityName) {
            this.severityName = Objects.requireNonNull(severityName);
            return this;
        }

        public Builder source(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }

        public Builder sourceUpdateTime(String sourceUpdateTime) {
            this.sourceUpdateTime = Objects.requireNonNull(sourceUpdateTime);
            return this;
        }

        public Builder vendor(String vendor) {
            this.vendor = Objects.requireNonNull(vendor);
            return this;
        }
        public DetailResponse build() {
            return new DetailResponse(cpeUri, description, fixedLocation, isObsolete, maxAffectedVersion, minAffectedVersion, $package, packageType, severityName, source, sourceUpdateTime, vendor);
        }
    }
}
