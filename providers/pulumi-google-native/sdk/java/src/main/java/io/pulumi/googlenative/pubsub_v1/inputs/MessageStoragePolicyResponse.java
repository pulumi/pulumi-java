// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.pubsub_v1.inputs;

import io.pulumi.core.annotations.InputImport;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * A policy constraining the storage of messages published to the topic.
 * 
 */
public final class MessageStoragePolicyResponse extends io.pulumi.resources.InvokeArgs {

    public static final MessageStoragePolicyResponse Empty = new MessageStoragePolicyResponse();

    /**
     * A list of IDs of GCP regions where messages that are published to the topic may be persisted in storage. Messages published by publishers running in non-allowed GCP regions (or running outside of GCP altogether) will be routed for storage in one of the allowed regions. An empty list means that no regions are allowed, and is not a valid configuration.
     * 
     */
    @InputImport(name="allowedPersistenceRegions", required=true)
    private final List<String> allowedPersistenceRegions;

    public List<String> getAllowedPersistenceRegions() {
        return this.allowedPersistenceRegions;
    }

    public MessageStoragePolicyResponse(List<String> allowedPersistenceRegions) {
        this.allowedPersistenceRegions = Objects.requireNonNull(allowedPersistenceRegions, "expected parameter 'allowedPersistenceRegions' to be non-null");
    }

    private MessageStoragePolicyResponse() {
        this.allowedPersistenceRegions = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MessageStoragePolicyResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> allowedPersistenceRegions;

        public Builder() {
    	      // Empty
        }

        public Builder(MessageStoragePolicyResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedPersistenceRegions = defaults.allowedPersistenceRegions;
        }

        public Builder setAllowedPersistenceRegions(List<String> allowedPersistenceRegions) {
            this.allowedPersistenceRegions = Objects.requireNonNull(allowedPersistenceRegions);
            return this;
        }

        public MessageStoragePolicyResponse build() {
            return new MessageStoragePolicyResponse(allowedPersistenceRegions);
        }
    }
}
