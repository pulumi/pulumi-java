// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudbuild_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class RepoSourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final RepoSourceArgs Empty = new RepoSourceArgs();

    @InputImport(name="branchName")
    private final @Nullable Input<String> branchName;

    public Input<String> getBranchName() {
        return this.branchName == null ? Input.empty() : this.branchName;
    }

    @InputImport(name="commitSha")
    private final @Nullable Input<String> commitSha;

    public Input<String> getCommitSha() {
        return this.commitSha == null ? Input.empty() : this.commitSha;
    }

    @InputImport(name="dir")
    private final @Nullable Input<String> dir;

    public Input<String> getDir() {
        return this.dir == null ? Input.empty() : this.dir;
    }

    @InputImport(name="invertRegex")
    private final @Nullable Input<Boolean> invertRegex;

    public Input<Boolean> getInvertRegex() {
        return this.invertRegex == null ? Input.empty() : this.invertRegex;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="repoName")
    private final @Nullable Input<String> repoName;

    public Input<String> getRepoName() {
        return this.repoName == null ? Input.empty() : this.repoName;
    }

    @InputImport(name="substitutions")
    private final @Nullable Input<Map<String,String>> substitutions;

    public Input<Map<String,String>> getSubstitutions() {
        return this.substitutions == null ? Input.empty() : this.substitutions;
    }

    @InputImport(name="tagName")
    private final @Nullable Input<String> tagName;

    public Input<String> getTagName() {
        return this.tagName == null ? Input.empty() : this.tagName;
    }

    public RepoSourceArgs(
        @Nullable Input<String> branchName,
        @Nullable Input<String> commitSha,
        @Nullable Input<String> dir,
        @Nullable Input<Boolean> invertRegex,
        @Nullable Input<String> project,
        @Nullable Input<String> repoName,
        @Nullable Input<Map<String,String>> substitutions,
        @Nullable Input<String> tagName) {
        this.branchName = branchName;
        this.commitSha = commitSha;
        this.dir = dir;
        this.invertRegex = invertRegex;
        this.project = project;
        this.repoName = repoName;
        this.substitutions = substitutions;
        this.tagName = tagName;
    }

    private RepoSourceArgs() {
        this.branchName = Input.empty();
        this.commitSha = Input.empty();
        this.dir = Input.empty();
        this.invertRegex = Input.empty();
        this.project = Input.empty();
        this.repoName = Input.empty();
        this.substitutions = Input.empty();
        this.tagName = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepoSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> branchName;
        private @Nullable Input<String> commitSha;
        private @Nullable Input<String> dir;
        private @Nullable Input<Boolean> invertRegex;
        private @Nullable Input<String> project;
        private @Nullable Input<String> repoName;
        private @Nullable Input<Map<String,String>> substitutions;
        private @Nullable Input<String> tagName;

        public Builder() {
    	      // Empty
        }

        public Builder(RepoSourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branchName = defaults.branchName;
    	      this.commitSha = defaults.commitSha;
    	      this.dir = defaults.dir;
    	      this.invertRegex = defaults.invertRegex;
    	      this.project = defaults.project;
    	      this.repoName = defaults.repoName;
    	      this.substitutions = defaults.substitutions;
    	      this.tagName = defaults.tagName;
        }

        public Builder setBranchName(@Nullable Input<String> branchName) {
            this.branchName = branchName;
            return this;
        }

        public Builder setBranchName(@Nullable String branchName) {
            this.branchName = Input.ofNullable(branchName);
            return this;
        }

        public Builder setCommitSha(@Nullable Input<String> commitSha) {
            this.commitSha = commitSha;
            return this;
        }

        public Builder setCommitSha(@Nullable String commitSha) {
            this.commitSha = Input.ofNullable(commitSha);
            return this;
        }

        public Builder setDir(@Nullable Input<String> dir) {
            this.dir = dir;
            return this;
        }

        public Builder setDir(@Nullable String dir) {
            this.dir = Input.ofNullable(dir);
            return this;
        }

        public Builder setInvertRegex(@Nullable Input<Boolean> invertRegex) {
            this.invertRegex = invertRegex;
            return this;
        }

        public Builder setInvertRegex(@Nullable Boolean invertRegex) {
            this.invertRegex = Input.ofNullable(invertRegex);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setRepoName(@Nullable Input<String> repoName) {
            this.repoName = repoName;
            return this;
        }

        public Builder setRepoName(@Nullable String repoName) {
            this.repoName = Input.ofNullable(repoName);
            return this;
        }

        public Builder setSubstitutions(@Nullable Input<Map<String,String>> substitutions) {
            this.substitutions = substitutions;
            return this;
        }

        public Builder setSubstitutions(@Nullable Map<String,String> substitutions) {
            this.substitutions = Input.ofNullable(substitutions);
            return this;
        }

        public Builder setTagName(@Nullable Input<String> tagName) {
            this.tagName = tagName;
            return this;
        }

        public Builder setTagName(@Nullable String tagName) {
            this.tagName = Input.ofNullable(tagName);
            return this;
        }

        public RepoSourceArgs build() {
            return new RepoSourceArgs(branchName, commitSha, dir, invertRegex, project, repoName, substitutions, tagName);
        }
    }
}
