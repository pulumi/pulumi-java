// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.clouddeploy_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.clouddeploy_v1.ReleaseArgs;
import io.pulumi.googlenative.clouddeploy_v1.outputs.BuildArtifactResponse;
import io.pulumi.googlenative.clouddeploy_v1.outputs.DeliveryPipelineResponse;
import io.pulumi.googlenative.clouddeploy_v1.outputs.TargetResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:clouddeploy/v1:Release")
public class Release extends io.pulumi.resources.CustomResource {
    @OutputExport(name="annotations", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> annotations;

    public Output<Map<String,String>> getAnnotations() {
        return this.annotations;
    }
    @OutputExport(name="buildArtifacts", type=List.class, parameters={BuildArtifactResponse.class})
    private Output<List<BuildArtifactResponse>> buildArtifacts;

    public Output<List<BuildArtifactResponse>> getBuildArtifacts() {
        return this.buildArtifacts;
    }
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime;
    }
    @OutputExport(name="deliveryPipelineSnapshot", type=DeliveryPipelineResponse.class, parameters={})
    private Output<DeliveryPipelineResponse> deliveryPipelineSnapshot;

    public Output<DeliveryPipelineResponse> getDeliveryPipelineSnapshot() {
        return this.deliveryPipelineSnapshot;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output<String> description;

    public Output<String> getDescription() {
        return this.description;
    }
    @OutputExport(name="etag", type=String.class, parameters={})
    private Output<String> etag;

    public Output<String> getEtag() {
        return this.etag;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="renderEndTime", type=String.class, parameters={})
    private Output<String> renderEndTime;

    public Output<String> getRenderEndTime() {
        return this.renderEndTime;
    }
    @OutputExport(name="renderStartTime", type=String.class, parameters={})
    private Output<String> renderStartTime;

    public Output<String> getRenderStartTime() {
        return this.renderStartTime;
    }
    @OutputExport(name="renderState", type=String.class, parameters={})
    private Output<String> renderState;

    public Output<String> getRenderState() {
        return this.renderState;
    }
    @OutputExport(name="skaffoldConfigPath", type=String.class, parameters={})
    private Output<String> skaffoldConfigPath;

    public Output<String> getSkaffoldConfigPath() {
        return this.skaffoldConfigPath;
    }
    @OutputExport(name="skaffoldConfigUri", type=String.class, parameters={})
    private Output<String> skaffoldConfigUri;

    public Output<String> getSkaffoldConfigUri() {
        return this.skaffoldConfigUri;
    }
    @OutputExport(name="skaffoldVersion", type=String.class, parameters={})
    private Output<String> skaffoldVersion;

    public Output<String> getSkaffoldVersion() {
        return this.skaffoldVersion;
    }
    @OutputExport(name="targetArtifacts", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> targetArtifacts;

    public Output<Map<String,String>> getTargetArtifacts() {
        return this.targetArtifacts;
    }
    @OutputExport(name="targetRenders", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> targetRenders;

    public Output<Map<String,String>> getTargetRenders() {
        return this.targetRenders;
    }
    @OutputExport(name="targetSnapshots", type=List.class, parameters={TargetResponse.class})
    private Output<List<TargetResponse>> targetSnapshots;

    public Output<List<TargetResponse>> getTargetSnapshots() {
        return this.targetSnapshots;
    }
    @OutputExport(name="uid", type=String.class, parameters={})
    private Output<String> uid;

    public Output<String> getUid() {
        return this.uid;
    }

    public Release(String name, ReleaseArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:clouddeploy/v1:Release", name, args == null ? ReleaseArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Release(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:clouddeploy/v1:Release", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Release get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Release(name, id, options);
    }
}
