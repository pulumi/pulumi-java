// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudidentity_v1beta1.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.googlenative.cloudidentity_v1beta1.outputs.CertificateTemplateResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class CertificateAttributesResponse {
    /**
     * The X.509 extension for CertificateTemplate.
     * 
     */
    private final CertificateTemplateResponse certificateTemplate;
    /**
     * The encoded certificate fingerprint.
     * 
     */
    private final String fingerprint;
    /**
     * The name of the issuer of this certificate.
     * 
     */
    private final String issuer;
    /**
     * Serial number of the certificate, Example: "123456789".
     * 
     */
    private final String serialNumber;
    /**
     * The subject name of this certificate.
     * 
     */
    private final String subject;
    /**
     * The certificate thumbprint.
     * 
     */
    private final String thumbprint;
    /**
     * Validation state of this certificate.
     * 
     */
    private final String validationState;
    /**
     * Certificate not valid at or after this timestamp.
     * 
     */
    private final String validityExpirationTime;
    /**
     * Certificate not valid before this timestamp.
     * 
     */
    private final String validityStartTime;

    @CustomType.Constructor
    private CertificateAttributesResponse(
        @CustomType.Parameter("certificateTemplate") CertificateTemplateResponse certificateTemplate,
        @CustomType.Parameter("fingerprint") String fingerprint,
        @CustomType.Parameter("issuer") String issuer,
        @CustomType.Parameter("serialNumber") String serialNumber,
        @CustomType.Parameter("subject") String subject,
        @CustomType.Parameter("thumbprint") String thumbprint,
        @CustomType.Parameter("validationState") String validationState,
        @CustomType.Parameter("validityExpirationTime") String validityExpirationTime,
        @CustomType.Parameter("validityStartTime") String validityStartTime) {
        this.certificateTemplate = certificateTemplate;
        this.fingerprint = fingerprint;
        this.issuer = issuer;
        this.serialNumber = serialNumber;
        this.subject = subject;
        this.thumbprint = thumbprint;
        this.validationState = validationState;
        this.validityExpirationTime = validityExpirationTime;
        this.validityStartTime = validityStartTime;
    }

    /**
     * The X.509 extension for CertificateTemplate.
     * 
    */
    public CertificateTemplateResponse certificateTemplate() {
        return this.certificateTemplate;
    }
    /**
     * The encoded certificate fingerprint.
     * 
    */
    public String fingerprint() {
        return this.fingerprint;
    }
    /**
     * The name of the issuer of this certificate.
     * 
    */
    public String issuer() {
        return this.issuer;
    }
    /**
     * Serial number of the certificate, Example: "123456789".
     * 
    */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * The subject name of this certificate.
     * 
    */
    public String subject() {
        return this.subject;
    }
    /**
     * The certificate thumbprint.
     * 
    */
    public String thumbprint() {
        return this.thumbprint;
    }
    /**
     * Validation state of this certificate.
     * 
    */
    public String validationState() {
        return this.validationState;
    }
    /**
     * Certificate not valid at or after this timestamp.
     * 
    */
    public String validityExpirationTime() {
        return this.validityExpirationTime;
    }
    /**
     * Certificate not valid before this timestamp.
     * 
    */
    public String validityStartTime() {
        return this.validityStartTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificateAttributesResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateTemplateResponse certificateTemplate;
        private String fingerprint;
        private String issuer;
        private String serialNumber;
        private String subject;
        private String thumbprint;
        private String validationState;
        private String validityExpirationTime;
        private String validityStartTime;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificateAttributesResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateTemplate = defaults.certificateTemplate;
    	      this.fingerprint = defaults.fingerprint;
    	      this.issuer = defaults.issuer;
    	      this.serialNumber = defaults.serialNumber;
    	      this.subject = defaults.subject;
    	      this.thumbprint = defaults.thumbprint;
    	      this.validationState = defaults.validationState;
    	      this.validityExpirationTime = defaults.validityExpirationTime;
    	      this.validityStartTime = defaults.validityStartTime;
        }

        public Builder certificateTemplate(CertificateTemplateResponse certificateTemplate) {
            this.certificateTemplate = Objects.requireNonNull(certificateTemplate);
            return this;
        }
        public Builder fingerprint(String fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }
        public Builder issuer(String issuer) {
            this.issuer = Objects.requireNonNull(issuer);
            return this;
        }
        public Builder serialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        public Builder subject(String subject) {
            this.subject = Objects.requireNonNull(subject);
            return this;
        }
        public Builder thumbprint(String thumbprint) {
            this.thumbprint = Objects.requireNonNull(thumbprint);
            return this;
        }
        public Builder validationState(String validationState) {
            this.validationState = Objects.requireNonNull(validationState);
            return this;
        }
        public Builder validityExpirationTime(String validityExpirationTime) {
            this.validityExpirationTime = Objects.requireNonNull(validityExpirationTime);
            return this;
        }
        public Builder validityStartTime(String validityStartTime) {
            this.validityStartTime = Objects.requireNonNull(validityStartTime);
            return this;
        }        public CertificateAttributesResponse build() {
            return new CertificateAttributesResponse(certificateTemplate, fingerprint, issuer, serialNumber, subject, thumbprint, validationState, validityExpirationTime, validityStartTime);
        }
    }
}
