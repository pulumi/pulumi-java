// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.dlp_v2.outputs.GooglePrivacyDlpV2InfoTypeResponse;
import java.lang.Integer;
import java.util.Objects;

@OutputCustomType
public final class GooglePrivacyDlpV2InfoTypeLimitResponse {
    /**
     * Type of information the findings limit applies to. Only one limit per info_type should be provided. If InfoTypeLimit does not have an info_type, the DLP API applies the limit against all info_types that are found but not specified in another InfoTypeLimit.
     * 
     */
    private final GooglePrivacyDlpV2InfoTypeResponse infoType;
    /**
     * Max findings limit for the given infoType.
     * 
     */
    private final Integer maxFindings;

    @OutputCustomType.Constructor({"infoType","maxFindings"})
    private GooglePrivacyDlpV2InfoTypeLimitResponse(
        GooglePrivacyDlpV2InfoTypeResponse infoType,
        Integer maxFindings) {
        this.infoType = Objects.requireNonNull(infoType);
        this.maxFindings = Objects.requireNonNull(maxFindings);
    }

    /**
     * Type of information the findings limit applies to. Only one limit per info_type should be provided. If InfoTypeLimit does not have an info_type, the DLP API applies the limit against all info_types that are found but not specified in another InfoTypeLimit.
     * 
     */
    public GooglePrivacyDlpV2InfoTypeResponse getInfoType() {
        return this.infoType;
    }
    /**
     * Max findings limit for the given infoType.
     * 
     */
    public Integer getMaxFindings() {
        return this.maxFindings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2InfoTypeLimitResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GooglePrivacyDlpV2InfoTypeResponse infoType;
        private Integer maxFindings;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2InfoTypeLimitResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.infoType = defaults.infoType;
    	      this.maxFindings = defaults.maxFindings;
        }

        public Builder setInfoType(GooglePrivacyDlpV2InfoTypeResponse infoType) {
            this.infoType = Objects.requireNonNull(infoType);
            return this;
        }

        public Builder setMaxFindings(Integer maxFindings) {
            this.maxFindings = Objects.requireNonNull(maxFindings);
            return this;
        }

        public GooglePrivacyDlpV2InfoTypeLimitResponse build() {
            return new GooglePrivacyDlpV2InfoTypeLimitResponse(infoType, maxFindings);
        }
    }
}
