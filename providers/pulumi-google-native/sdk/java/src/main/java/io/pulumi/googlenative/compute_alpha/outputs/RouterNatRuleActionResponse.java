// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class RouterNatRuleActionResponse {
    /**
     * A list of URLs of the IP resources used for this NAT rule. These IP addresses must be valid static external IP addresses assigned to the project. This field is used for public NAT.
     * 
     */
    private final List<String> sourceNatActiveIps;
    /**
     * A list of URLs of the subnetworks used as source ranges for this NAT Rule. These subnetworks must have purpose set to PRIVATE_NAT. This field is used for private NAT.
     * 
     */
    private final List<String> sourceNatActiveRanges;
    /**
     * A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to the NAT. These IPs should be used for updating/patching a NAT rule only. This field is used for public NAT.
     * 
     */
    private final List<String> sourceNatDrainIps;
    /**
     * A list of URLs of subnetworks representing source ranges to be drained. This is only supported on patch/update, and these subnetworks must have previously been used as active ranges in this NAT Rule. This field is used for private NAT.
     * 
     */
    private final List<String> sourceNatDrainRanges;

    @OutputCustomType.Constructor({"sourceNatActiveIps","sourceNatActiveRanges","sourceNatDrainIps","sourceNatDrainRanges"})
    private RouterNatRuleActionResponse(
        List<String> sourceNatActiveIps,
        List<String> sourceNatActiveRanges,
        List<String> sourceNatDrainIps,
        List<String> sourceNatDrainRanges) {
        this.sourceNatActiveIps = Objects.requireNonNull(sourceNatActiveIps);
        this.sourceNatActiveRanges = Objects.requireNonNull(sourceNatActiveRanges);
        this.sourceNatDrainIps = Objects.requireNonNull(sourceNatDrainIps);
        this.sourceNatDrainRanges = Objects.requireNonNull(sourceNatDrainRanges);
    }

    /**
     * A list of URLs of the IP resources used for this NAT rule. These IP addresses must be valid static external IP addresses assigned to the project. This field is used for public NAT.
     * 
     */
    public List<String> getSourceNatActiveIps() {
        return this.sourceNatActiveIps;
    }
    /**
     * A list of URLs of the subnetworks used as source ranges for this NAT Rule. These subnetworks must have purpose set to PRIVATE_NAT. This field is used for private NAT.
     * 
     */
    public List<String> getSourceNatActiveRanges() {
        return this.sourceNatActiveRanges;
    }
    /**
     * A list of URLs of the IP resources to be drained. These IPs must be valid static external IPs that have been assigned to the NAT. These IPs should be used for updating/patching a NAT rule only. This field is used for public NAT.
     * 
     */
    public List<String> getSourceNatDrainIps() {
        return this.sourceNatDrainIps;
    }
    /**
     * A list of URLs of subnetworks representing source ranges to be drained. This is only supported on patch/update, and these subnetworks must have previously been used as active ranges in this NAT Rule. This field is used for private NAT.
     * 
     */
    public List<String> getSourceNatDrainRanges() {
        return this.sourceNatDrainRanges;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RouterNatRuleActionResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> sourceNatActiveIps;
        private List<String> sourceNatActiveRanges;
        private List<String> sourceNatDrainIps;
        private List<String> sourceNatDrainRanges;

        public Builder() {
    	      // Empty
        }

        public Builder(RouterNatRuleActionResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sourceNatActiveIps = defaults.sourceNatActiveIps;
    	      this.sourceNatActiveRanges = defaults.sourceNatActiveRanges;
    	      this.sourceNatDrainIps = defaults.sourceNatDrainIps;
    	      this.sourceNatDrainRanges = defaults.sourceNatDrainRanges;
        }

        public Builder setSourceNatActiveIps(List<String> sourceNatActiveIps) {
            this.sourceNatActiveIps = Objects.requireNonNull(sourceNatActiveIps);
            return this;
        }

        public Builder setSourceNatActiveRanges(List<String> sourceNatActiveRanges) {
            this.sourceNatActiveRanges = Objects.requireNonNull(sourceNatActiveRanges);
            return this;
        }

        public Builder setSourceNatDrainIps(List<String> sourceNatDrainIps) {
            this.sourceNatDrainIps = Objects.requireNonNull(sourceNatDrainIps);
            return this;
        }

        public Builder setSourceNatDrainRanges(List<String> sourceNatDrainRanges) {
            this.sourceNatDrainRanges = Objects.requireNonNull(sourceNatDrainRanges);
            return this;
        }
        public RouterNatRuleActionResponse build() {
            return new RouterNatRuleActionResponse(sourceNatActiveIps, sourceNatActiveRanges, sourceNatDrainIps, sourceNatDrainRanges);
        }
    }
}
