// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v3.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.monitoring_v3.outputs.ContentMatcherResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.HttpCheckResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.InternalCheckerResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.MonitoredResourceResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.ResourceGroupResponse;
import io.pulumi.googlenative.monitoring_v3.outputs.TcpCheckResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetUptimeCheckConfigResult {
    private final String checkerType;
    private final List<ContentMatcherResponse> contentMatchers;
    private final String displayName;
    private final HttpCheckResponse httpCheck;
    private final List<InternalCheckerResponse> internalCheckers;
    private final Boolean isInternal;
    private final MonitoredResourceResponse monitoredResource;
    private final String name;
    private final String period;
    private final ResourceGroupResponse resourceGroup;
    private final List<String> selectedRegions;
    private final TcpCheckResponse tcpCheck;
    private final String timeout;

    @OutputCustomType.Constructor({"checkerType","contentMatchers","displayName","httpCheck","internalCheckers","isInternal","monitoredResource","name","period","resourceGroup","selectedRegions","tcpCheck","timeout"})
    private GetUptimeCheckConfigResult(
        String checkerType,
        List<ContentMatcherResponse> contentMatchers,
        String displayName,
        HttpCheckResponse httpCheck,
        List<InternalCheckerResponse> internalCheckers,
        Boolean isInternal,
        MonitoredResourceResponse monitoredResource,
        String name,
        String period,
        ResourceGroupResponse resourceGroup,
        List<String> selectedRegions,
        TcpCheckResponse tcpCheck,
        String timeout) {
        this.checkerType = Objects.requireNonNull(checkerType);
        this.contentMatchers = Objects.requireNonNull(contentMatchers);
        this.displayName = Objects.requireNonNull(displayName);
        this.httpCheck = Objects.requireNonNull(httpCheck);
        this.internalCheckers = Objects.requireNonNull(internalCheckers);
        this.isInternal = Objects.requireNonNull(isInternal);
        this.monitoredResource = Objects.requireNonNull(monitoredResource);
        this.name = Objects.requireNonNull(name);
        this.period = Objects.requireNonNull(period);
        this.resourceGroup = Objects.requireNonNull(resourceGroup);
        this.selectedRegions = Objects.requireNonNull(selectedRegions);
        this.tcpCheck = Objects.requireNonNull(tcpCheck);
        this.timeout = Objects.requireNonNull(timeout);
    }

    public String getCheckerType() {
        return this.checkerType;
    }
    public List<ContentMatcherResponse> getContentMatchers() {
        return this.contentMatchers;
    }
    public String getDisplayName() {
        return this.displayName;
    }
    public HttpCheckResponse getHttpCheck() {
        return this.httpCheck;
    }
    public List<InternalCheckerResponse> getInternalCheckers() {
        return this.internalCheckers;
    }
    public Boolean getIsInternal() {
        return this.isInternal;
    }
    public MonitoredResourceResponse getMonitoredResource() {
        return this.monitoredResource;
    }
    public String getName() {
        return this.name;
    }
    public String getPeriod() {
        return this.period;
    }
    public ResourceGroupResponse getResourceGroup() {
        return this.resourceGroup;
    }
    public List<String> getSelectedRegions() {
        return this.selectedRegions;
    }
    public TcpCheckResponse getTcpCheck() {
        return this.tcpCheck;
    }
    public String getTimeout() {
        return this.timeout;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUptimeCheckConfigResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String checkerType;
        private List<ContentMatcherResponse> contentMatchers;
        private String displayName;
        private HttpCheckResponse httpCheck;
        private List<InternalCheckerResponse> internalCheckers;
        private Boolean isInternal;
        private MonitoredResourceResponse monitoredResource;
        private String name;
        private String period;
        private ResourceGroupResponse resourceGroup;
        private List<String> selectedRegions;
        private TcpCheckResponse tcpCheck;
        private String timeout;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUptimeCheckConfigResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checkerType = defaults.checkerType;
    	      this.contentMatchers = defaults.contentMatchers;
    	      this.displayName = defaults.displayName;
    	      this.httpCheck = defaults.httpCheck;
    	      this.internalCheckers = defaults.internalCheckers;
    	      this.isInternal = defaults.isInternal;
    	      this.monitoredResource = defaults.monitoredResource;
    	      this.name = defaults.name;
    	      this.period = defaults.period;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.selectedRegions = defaults.selectedRegions;
    	      this.tcpCheck = defaults.tcpCheck;
    	      this.timeout = defaults.timeout;
        }

        public Builder setCheckerType(String checkerType) {
            this.checkerType = Objects.requireNonNull(checkerType);
            return this;
        }

        public Builder setContentMatchers(List<ContentMatcherResponse> contentMatchers) {
            this.contentMatchers = Objects.requireNonNull(contentMatchers);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setHttpCheck(HttpCheckResponse httpCheck) {
            this.httpCheck = Objects.requireNonNull(httpCheck);
            return this;
        }

        public Builder setInternalCheckers(List<InternalCheckerResponse> internalCheckers) {
            this.internalCheckers = Objects.requireNonNull(internalCheckers);
            return this;
        }

        public Builder setIsInternal(Boolean isInternal) {
            this.isInternal = Objects.requireNonNull(isInternal);
            return this;
        }

        public Builder setMonitoredResource(MonitoredResourceResponse monitoredResource) {
            this.monitoredResource = Objects.requireNonNull(monitoredResource);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPeriod(String period) {
            this.period = Objects.requireNonNull(period);
            return this;
        }

        public Builder setResourceGroup(ResourceGroupResponse resourceGroup) {
            this.resourceGroup = Objects.requireNonNull(resourceGroup);
            return this;
        }

        public Builder setSelectedRegions(List<String> selectedRegions) {
            this.selectedRegions = Objects.requireNonNull(selectedRegions);
            return this;
        }

        public Builder setTcpCheck(TcpCheckResponse tcpCheck) {
            this.tcpCheck = Objects.requireNonNull(tcpCheck);
            return this;
        }

        public Builder setTimeout(String timeout) {
            this.timeout = Objects.requireNonNull(timeout);
            return this;
        }

        public GetUptimeCheckConfigResult build() {
            return new GetUptimeCheckConfigResult(checkerType, contentMatchers, displayName, httpCheck, internalCheckers, isInternal, monitoredResource, name, period, resourceGroup, selectedRegions, tcpCheck, timeout);
        }
    }
}
