// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.containeranalysis_v1beta1.enums.GenericSignedAttestationContentType;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.SignatureArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An attestation wrapper that uses the Grafeas `Signature` message. This attestation must define the `serialized_payload` that the `signatures` verify and any metadata necessary to interpret that plaintext. The signatures should always be over the `serialized_payload` bytestring.
 * 
 */
public final class GenericSignedAttestationArgs extends io.pulumi.resources.ResourceArgs {

    public static final GenericSignedAttestationArgs Empty = new GenericSignedAttestationArgs();

    /**
     * Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).
     * 
     */
    @Import(name="contentType")
      private final @Nullable Output<GenericSignedAttestationContentType> contentType;

    public Output<GenericSignedAttestationContentType> getContentType() {
        return this.contentType == null ? Output.empty() : this.contentType;
    }

    /**
     * The serialized payload that is verified by one or more `signatures`. The encoding and semantic meaning of this payload must match what is set in `content_type`.
     * 
     */
    @Import(name="serializedPayload")
      private final @Nullable Output<String> serializedPayload;

    public Output<String> getSerializedPayload() {
        return this.serializedPayload == null ? Output.empty() : this.serializedPayload;
    }

    /**
     * One or more signatures over `serialized_payload`. Verifier implementations should consider this attestation message verified if at least one `signature` verifies `serialized_payload`. See `Signature` in common.proto for more details on signature structure and verification.
     * 
     */
    @Import(name="signatures")
      private final @Nullable Output<List<SignatureArgs>> signatures;

    public Output<List<SignatureArgs>> getSignatures() {
        return this.signatures == null ? Output.empty() : this.signatures;
    }

    public GenericSignedAttestationArgs(
        @Nullable Output<GenericSignedAttestationContentType> contentType,
        @Nullable Output<String> serializedPayload,
        @Nullable Output<List<SignatureArgs>> signatures) {
        this.contentType = contentType;
        this.serializedPayload = serializedPayload;
        this.signatures = signatures;
    }

    private GenericSignedAttestationArgs() {
        this.contentType = Output.empty();
        this.serializedPayload = Output.empty();
        this.signatures = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GenericSignedAttestationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<GenericSignedAttestationContentType> contentType;
        private @Nullable Output<String> serializedPayload;
        private @Nullable Output<List<SignatureArgs>> signatures;

        public Builder() {
    	      // Empty
        }

        public Builder(GenericSignedAttestationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentType = defaults.contentType;
    	      this.serializedPayload = defaults.serializedPayload;
    	      this.signatures = defaults.signatures;
        }

        public Builder contentType(@Nullable Output<GenericSignedAttestationContentType> contentType) {
            this.contentType = contentType;
            return this;
        }
        public Builder contentType(@Nullable GenericSignedAttestationContentType contentType) {
            this.contentType = Output.ofNullable(contentType);
            return this;
        }
        public Builder serializedPayload(@Nullable Output<String> serializedPayload) {
            this.serializedPayload = serializedPayload;
            return this;
        }
        public Builder serializedPayload(@Nullable String serializedPayload) {
            this.serializedPayload = Output.ofNullable(serializedPayload);
            return this;
        }
        public Builder signatures(@Nullable Output<List<SignatureArgs>> signatures) {
            this.signatures = signatures;
            return this;
        }
        public Builder signatures(@Nullable List<SignatureArgs> signatures) {
            this.signatures = Output.ofNullable(signatures);
            return this;
        }
        public Builder signatures(SignatureArgs... signatures) {
            return signatures(List.of(signatures));
        }        public GenericSignedAttestationArgs build() {
            return new GenericSignedAttestationArgs(contentType, serializedPayload, signatures);
        }
    }
}
