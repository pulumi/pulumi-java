// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1beta1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.containeranalysis_v1beta1.enums.GenericSignedAttestationContentType;
import io.pulumi.googlenative.containeranalysis_v1beta1.inputs.SignatureArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * An attestation wrapper that uses the Grafeas `Signature` message. This attestation must define the `serialized_payload` that the `signatures` verify and any metadata necessary to interpret that plaintext. The signatures should always be over the `serialized_payload` bytestring.
 * 
 */
public final class GenericSignedAttestationArgs extends io.pulumi.resources.ResourceArgs {

    public static final GenericSignedAttestationArgs Empty = new GenericSignedAttestationArgs();

    /**
     * Type (for example schema) of the attestation payload that was signed. The verifier must ensure that the provided type is one that the verifier supports, and that the attestation payload is a valid instantiation of that type (for example by validating a JSON schema).
     * 
     */
    @InputImport(name="contentType")
    private final @Nullable Input<GenericSignedAttestationContentType> contentType;

    public Input<GenericSignedAttestationContentType> getContentType() {
        return this.contentType == null ? Input.empty() : this.contentType;
    }

    /**
     * The serialized payload that is verified by one or more `signatures`. The encoding and semantic meaning of this payload must match what is set in `content_type`.
     * 
     */
    @InputImport(name="serializedPayload")
    private final @Nullable Input<String> serializedPayload;

    public Input<String> getSerializedPayload() {
        return this.serializedPayload == null ? Input.empty() : this.serializedPayload;
    }

    /**
     * One or more signatures over `serialized_payload`. Verifier implementations should consider this attestation message verified if at least one `signature` verifies `serialized_payload`. See `Signature` in common.proto for more details on signature structure and verification.
     * 
     */
    @InputImport(name="signatures")
    private final @Nullable Input<List<SignatureArgs>> signatures;

    public Input<List<SignatureArgs>> getSignatures() {
        return this.signatures == null ? Input.empty() : this.signatures;
    }

    public GenericSignedAttestationArgs(
        @Nullable Input<GenericSignedAttestationContentType> contentType,
        @Nullable Input<String> serializedPayload,
        @Nullable Input<List<SignatureArgs>> signatures) {
        this.contentType = contentType;
        this.serializedPayload = serializedPayload;
        this.signatures = signatures;
    }

    private GenericSignedAttestationArgs() {
        this.contentType = Input.empty();
        this.serializedPayload = Input.empty();
        this.signatures = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GenericSignedAttestationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GenericSignedAttestationContentType> contentType;
        private @Nullable Input<String> serializedPayload;
        private @Nullable Input<List<SignatureArgs>> signatures;

        public Builder() {
    	      // Empty
        }

        public Builder(GenericSignedAttestationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentType = defaults.contentType;
    	      this.serializedPayload = defaults.serializedPayload;
    	      this.signatures = defaults.signatures;
        }

        public Builder setContentType(@Nullable Input<GenericSignedAttestationContentType> contentType) {
            this.contentType = contentType;
            return this;
        }

        public Builder setContentType(@Nullable GenericSignedAttestationContentType contentType) {
            this.contentType = Input.ofNullable(contentType);
            return this;
        }

        public Builder setSerializedPayload(@Nullable Input<String> serializedPayload) {
            this.serializedPayload = serializedPayload;
            return this;
        }

        public Builder setSerializedPayload(@Nullable String serializedPayload) {
            this.serializedPayload = Input.ofNullable(serializedPayload);
            return this;
        }

        public Builder setSignatures(@Nullable Input<List<SignatureArgs>> signatures) {
            this.signatures = signatures;
            return this;
        }

        public Builder setSignatures(@Nullable List<SignatureArgs> signatures) {
            this.signatures = Input.ofNullable(signatures);
            return this;
        }

        public GenericSignedAttestationArgs build() {
            return new GenericSignedAttestationArgs(contentType, serializedPayload, signatures);
        }
    }
}
