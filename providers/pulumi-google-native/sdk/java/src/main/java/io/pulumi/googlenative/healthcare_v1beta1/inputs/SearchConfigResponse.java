// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.healthcare_v1beta1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.healthcare_v1beta1.inputs.SearchParameterResponse;
import java.util.List;
import java.util.Objects;


/**
 * Contains the configuration for FHIR search.
 * 
 */
public final class SearchConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final SearchConfigResponse Empty = new SearchConfigResponse();

    /**
     * A list of search parameters in this FHIR store that are used to configure this FHIR store.
     * 
     */
    @InputImport(name="searchParameters", required=true)
    private final List<SearchParameterResponse> searchParameters;

    public List<SearchParameterResponse> getSearchParameters() {
        return this.searchParameters;
    }

    public SearchConfigResponse(List<SearchParameterResponse> searchParameters) {
        this.searchParameters = Objects.requireNonNull(searchParameters, "expected parameter 'searchParameters' to be non-null");
    }

    private SearchConfigResponse() {
        this.searchParameters = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SearchConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<SearchParameterResponse> searchParameters;

        public Builder() {
    	      // Empty
        }

        public Builder(SearchConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.searchParameters = defaults.searchParameters;
        }

        public Builder setSearchParameters(List<SearchParameterResponse> searchParameters) {
            this.searchParameters = Objects.requireNonNull(searchParameters);
            return this;
        }

        public SearchConfigResponse build() {
            return new SearchConfigResponse(searchParameters);
        }
    }
}
