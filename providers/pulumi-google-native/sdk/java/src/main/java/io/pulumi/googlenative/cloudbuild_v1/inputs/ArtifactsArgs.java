// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudbuild_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.cloudbuild_v1.inputs.ArtifactObjectsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Artifacts produced by a build that should be uploaded upon successful completion of all build steps.
 * 
 */
public final class ArtifactsArgs extends io.pulumi.resources.ResourceArgs {

    public static final ArtifactsArgs Empty = new ArtifactsArgs();

    /**
     * A list of images to be pushed upon the successful completion of all build steps. The images will be pushed using the builder service account's credentials. The digests of the pushed images will be stored in the Build resource's results field. If any of the images fail to be pushed, the build is marked FAILURE.
     * 
     */
    @Import(name="images")
      private final @Nullable Output<List<String>> images;

    public Output<List<String>> getImages() {
        return this.images == null ? Codegen.empty() : this.images;
    }

    /**
     * A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps. Files in the workspace matching specified paths globs will be uploaded to the specified Cloud Storage location using the builder service account's credentials. The location and generation of the uploaded objects will be stored in the Build resource's results field. If any objects fail to be pushed, the build is marked FAILURE.
     * 
     */
    @Import(name="objects")
      private final @Nullable Output<ArtifactObjectsArgs> objects;

    public Output<ArtifactObjectsArgs> getObjects() {
        return this.objects == null ? Codegen.empty() : this.objects;
    }

    public ArtifactsArgs(
        @Nullable Output<List<String>> images,
        @Nullable Output<ArtifactObjectsArgs> objects) {
        this.images = images;
        this.objects = objects;
    }

    private ArtifactsArgs() {
        this.images = Codegen.empty();
        this.objects = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ArtifactsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<List<String>> images;
        private @Nullable Output<ArtifactObjectsArgs> objects;

        public Builder() {
    	      // Empty
        }

        public Builder(ArtifactsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.images = defaults.images;
    	      this.objects = defaults.objects;
        }

        public Builder images(@Nullable Output<List<String>> images) {
            this.images = images;
            return this;
        }
        public Builder images(@Nullable List<String> images) {
            this.images = Codegen.ofNullable(images);
            return this;
        }
        public Builder images(String... images) {
            return images(List.of(images));
        }
        public Builder objects(@Nullable Output<ArtifactObjectsArgs> objects) {
            this.objects = objects;
            return this;
        }
        public Builder objects(@Nullable ArtifactObjectsArgs objects) {
            this.objects = Codegen.ofNullable(objects);
            return this;
        }        public ArtifactsArgs build() {
            return new ArtifactsArgs(images, objects);
        }
    }
}
