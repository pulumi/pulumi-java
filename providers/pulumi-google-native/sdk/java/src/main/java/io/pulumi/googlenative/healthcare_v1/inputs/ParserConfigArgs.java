// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.healthcare_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.healthcare_v1.enums.ParserConfigVersion;
import io.pulumi.googlenative.healthcare_v1.inputs.SchemaPackageArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The configuration for the parser. It determines how the server parses the messages.
 * 
 */
public final class ParserConfigArgs extends io.pulumi.resources.ResourceArgs {

    public static final ParserConfigArgs Empty = new ParserConfigArgs();

    /**
     * Determines whether messages with no header are allowed.
     * 
     */
    @InputImport(name="allowNullHeader")
      private final @Nullable Input<Boolean> allowNullHeader;

    public Input<Boolean> getAllowNullHeader() {
        return this.allowNullHeader == null ? Input.empty() : this.allowNullHeader;
    }

    /**
     * Schemas used to parse messages in this store, if schematized parsing is desired.
     * 
     */
    @InputImport(name="schema")
      private final @Nullable Input<SchemaPackageArgs> schema;

    public Input<SchemaPackageArgs> getSchema() {
        return this.schema == null ? Input.empty() : this.schema;
    }

    /**
     * Byte(s) to use as the segment terminator. If this is unset, '\r' is used as segment terminator, matching the HL7 version 2 specification.
     * 
     */
    @InputImport(name="segmentTerminator")
      private final @Nullable Input<String> segmentTerminator;

    public Input<String> getSegmentTerminator() {
        return this.segmentTerminator == null ? Input.empty() : this.segmentTerminator;
    }

    /**
     * Immutable. Determines the version of both the default parser to be used when `schema` is not given, as well as the schematized parser used when `schema` is specified. This field is immutable after HL7v2 store creation.
     * 
     */
    @InputImport(name="version")
      private final @Nullable Input<ParserConfigVersion> version;

    public Input<ParserConfigVersion> getVersion() {
        return this.version == null ? Input.empty() : this.version;
    }

    public ParserConfigArgs(
        @Nullable Input<Boolean> allowNullHeader,
        @Nullable Input<SchemaPackageArgs> schema,
        @Nullable Input<String> segmentTerminator,
        @Nullable Input<ParserConfigVersion> version) {
        this.allowNullHeader = allowNullHeader;
        this.schema = schema;
        this.segmentTerminator = segmentTerminator;
        this.version = version;
    }

    private ParserConfigArgs() {
        this.allowNullHeader = Input.empty();
        this.schema = Input.empty();
        this.segmentTerminator = Input.empty();
        this.version = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ParserConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Boolean> allowNullHeader;
        private @Nullable Input<SchemaPackageArgs> schema;
        private @Nullable Input<String> segmentTerminator;
        private @Nullable Input<ParserConfigVersion> version;

        public Builder() {
    	      // Empty
        }

        public Builder(ParserConfigArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowNullHeader = defaults.allowNullHeader;
    	      this.schema = defaults.schema;
    	      this.segmentTerminator = defaults.segmentTerminator;
    	      this.version = defaults.version;
        }

        public Builder allowNullHeader(@Nullable Input<Boolean> allowNullHeader) {
            this.allowNullHeader = allowNullHeader;
            return this;
        }

        public Builder allowNullHeader(@Nullable Boolean allowNullHeader) {
            this.allowNullHeader = Input.ofNullable(allowNullHeader);
            return this;
        }

        public Builder schema(@Nullable Input<SchemaPackageArgs> schema) {
            this.schema = schema;
            return this;
        }

        public Builder schema(@Nullable SchemaPackageArgs schema) {
            this.schema = Input.ofNullable(schema);
            return this;
        }

        public Builder segmentTerminator(@Nullable Input<String> segmentTerminator) {
            this.segmentTerminator = segmentTerminator;
            return this;
        }

        public Builder segmentTerminator(@Nullable String segmentTerminator) {
            this.segmentTerminator = Input.ofNullable(segmentTerminator);
            return this;
        }

        public Builder version(@Nullable Input<ParserConfigVersion> version) {
            this.version = version;
            return this;
        }

        public Builder version(@Nullable ParserConfigVersion version) {
            this.version = Input.ofNullable(version);
            return this;
        }
        public ParserConfigArgs build() {
            return new ParserConfigArgs(allowNullHeader, schema, segmentTerminator, version);
        }
    }
}
