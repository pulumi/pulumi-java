// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudbuild_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.cloudbuild_v1.BuildArgs;
import io.pulumi.googlenative.cloudbuild_v1.outputs.ArtifactsResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.BuildApprovalResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.BuildOptionsResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.BuildStepResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.FailureInfoResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.ResultsResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.SecretResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.SecretsResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.SourceProvenanceResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.SourceResponse;
import io.pulumi.googlenative.cloudbuild_v1.outputs.WarningResponse;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:cloudbuild/v1:Build")
public class Build extends io.pulumi.resources.CustomResource {
    @OutputExport(name="approval", type=BuildApprovalResponse.class, parameters={})
    private Output<BuildApprovalResponse> approval;

    public Output<BuildApprovalResponse> getApproval() {
        return this.approval;
    }
    @OutputExport(name="artifacts", type=ArtifactsResponse.class, parameters={})
    private Output<ArtifactsResponse> artifacts;

    public Output<ArtifactsResponse> getArtifacts() {
        return this.artifacts;
    }
    @OutputExport(name="availableSecrets", type=SecretsResponse.class, parameters={})
    private Output<SecretsResponse> availableSecrets;

    public Output<SecretsResponse> getAvailableSecrets() {
        return this.availableSecrets;
    }
    @OutputExport(name="buildTriggerId", type=String.class, parameters={})
    private Output<String> buildTriggerId;

    public Output<String> getBuildTriggerId() {
        return this.buildTriggerId;
    }
    @OutputExport(name="createTime", type=String.class, parameters={})
    private Output<String> createTime;

    public Output<String> getCreateTime() {
        return this.createTime;
    }
    @OutputExport(name="failureInfo", type=FailureInfoResponse.class, parameters={})
    private Output<FailureInfoResponse> failureInfo;

    public Output<FailureInfoResponse> getFailureInfo() {
        return this.failureInfo;
    }
    @OutputExport(name="finishTime", type=String.class, parameters={})
    private Output<String> finishTime;

    public Output<String> getFinishTime() {
        return this.finishTime;
    }
    @OutputExport(name="images", type=List.class, parameters={String.class})
    private Output<List<String>> images;

    public Output<List<String>> getImages() {
        return this.images;
    }
    @OutputExport(name="logUrl", type=String.class, parameters={})
    private Output<String> logUrl;

    public Output<String> getLogUrl() {
        return this.logUrl;
    }
    @OutputExport(name="logsBucket", type=String.class, parameters={})
    private Output<String> logsBucket;

    public Output<String> getLogsBucket() {
        return this.logsBucket;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="options", type=BuildOptionsResponse.class, parameters={})
    private Output<BuildOptionsResponse> options;

    public Output<BuildOptionsResponse> getOptions() {
        return this.options;
    }
    @OutputExport(name="project", type=String.class, parameters={})
    private Output<String> project;

    public Output<String> getProject() {
        return this.project;
    }
    @OutputExport(name="queueTtl", type=String.class, parameters={})
    private Output<String> queueTtl;

    public Output<String> getQueueTtl() {
        return this.queueTtl;
    }
    @OutputExport(name="results", type=ResultsResponse.class, parameters={})
    private Output<ResultsResponse> results;

    public Output<ResultsResponse> getResults() {
        return this.results;
    }
    @OutputExport(name="secrets", type=List.class, parameters={SecretResponse.class})
    private Output<List<SecretResponse>> secrets;

    public Output<List<SecretResponse>> getSecrets() {
        return this.secrets;
    }
    @OutputExport(name="serviceAccount", type=String.class, parameters={})
    private Output<String> serviceAccount;

    public Output<String> getServiceAccount() {
        return this.serviceAccount;
    }
    @OutputExport(name="source", type=SourceResponse.class, parameters={})
    private Output<SourceResponse> source;

    public Output<SourceResponse> getSource() {
        return this.source;
    }
    @OutputExport(name="sourceProvenance", type=SourceProvenanceResponse.class, parameters={})
    private Output<SourceProvenanceResponse> sourceProvenance;

    public Output<SourceProvenanceResponse> getSourceProvenance() {
        return this.sourceProvenance;
    }
    @OutputExport(name="startTime", type=String.class, parameters={})
    private Output<String> startTime;

    public Output<String> getStartTime() {
        return this.startTime;
    }
    @OutputExport(name="status", type=String.class, parameters={})
    private Output<String> status;

    public Output<String> getStatus() {
        return this.status;
    }
    @OutputExport(name="statusDetail", type=String.class, parameters={})
    private Output<String> statusDetail;

    public Output<String> getStatusDetail() {
        return this.statusDetail;
    }
    @OutputExport(name="steps", type=List.class, parameters={BuildStepResponse.class})
    private Output<List<BuildStepResponse>> steps;

    public Output<List<BuildStepResponse>> getSteps() {
        return this.steps;
    }
    @OutputExport(name="substitutions", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> substitutions;

    public Output<Map<String,String>> getSubstitutions() {
        return this.substitutions;
    }
    @OutputExport(name="tags", type=List.class, parameters={String.class})
    private Output<List<String>> tags;

    public Output<List<String>> getTags() {
        return this.tags;
    }
    @OutputExport(name="timeout", type=String.class, parameters={})
    private Output<String> timeout;

    public Output<String> getTimeout() {
        return this.timeout;
    }
    @OutputExport(name="timing", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> timing;

    public Output<Map<String,String>> getTiming() {
        return this.timing;
    }
    @OutputExport(name="warnings", type=List.class, parameters={WarningResponse.class})
    private Output<List<WarningResponse>> warnings;

    public Output<List<WarningResponse>> getWarnings() {
        return this.warnings;
    }

    public Build(String name, BuildArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:cloudbuild/v1:Build", name, args == null ? BuildArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private Build(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:cloudbuild/v1:Build", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static Build get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Build(name, id, options);
    }
}
