// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.pubsublite_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.pubsublite_v1.inputs.PartitionConfigArgs;
import io.pulumi.googlenative.pubsublite_v1.inputs.ReservationConfigArgs;
import io.pulumi.googlenative.pubsublite_v1.inputs.RetentionConfigArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TopicArgs extends io.pulumi.resources.ResourceArgs {

    public static final TopicArgs Empty = new TopicArgs();

    @InputImport(name="location")
      private final @Nullable Output<String> location;

    public Output<String> getLocation() {
        return this.location == null ? Output.empty() : this.location;
    }

    /**
     * The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}
     * 
     */
    @InputImport(name="name")
      private final @Nullable Output<String> name;

    public Output<String> getName() {
        return this.name == null ? Output.empty() : this.name;
    }

    /**
     * The settings for this topic's partitions.
     * 
     */
    @InputImport(name="partitionConfig")
      private final @Nullable Output<PartitionConfigArgs> partitionConfig;

    public Output<PartitionConfigArgs> getPartitionConfig() {
        return this.partitionConfig == null ? Output.empty() : this.partitionConfig;
    }

    @InputImport(name="project")
      private final @Nullable Output<String> project;

    public Output<String> getProject() {
        return this.project == null ? Output.empty() : this.project;
    }

    /**
     * The settings for this topic's Reservation usage.
     * 
     */
    @InputImport(name="reservationConfig")
      private final @Nullable Output<ReservationConfigArgs> reservationConfig;

    public Output<ReservationConfigArgs> getReservationConfig() {
        return this.reservationConfig == null ? Output.empty() : this.reservationConfig;
    }

    /**
     * The settings for this topic's message retention.
     * 
     */
    @InputImport(name="retentionConfig")
      private final @Nullable Output<RetentionConfigArgs> retentionConfig;

    public Output<RetentionConfigArgs> getRetentionConfig() {
        return this.retentionConfig == null ? Output.empty() : this.retentionConfig;
    }

    @InputImport(name="topicId", required=true)
      private final Output<String> topicId;

    public Output<String> getTopicId() {
        return this.topicId;
    }

    public TopicArgs(
        @Nullable Output<String> location,
        @Nullable Output<String> name,
        @Nullable Output<PartitionConfigArgs> partitionConfig,
        @Nullable Output<String> project,
        @Nullable Output<ReservationConfigArgs> reservationConfig,
        @Nullable Output<RetentionConfigArgs> retentionConfig,
        Output<String> topicId) {
        this.location = location;
        this.name = name;
        this.partitionConfig = partitionConfig;
        this.project = project;
        this.reservationConfig = reservationConfig;
        this.retentionConfig = retentionConfig;
        this.topicId = Objects.requireNonNull(topicId, "expected parameter 'topicId' to be non-null");
    }

    private TopicArgs() {
        this.location = Output.empty();
        this.name = Output.empty();
        this.partitionConfig = Output.empty();
        this.project = Output.empty();
        this.reservationConfig = Output.empty();
        this.retentionConfig = Output.empty();
        this.topicId = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TopicArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> location;
        private @Nullable Output<String> name;
        private @Nullable Output<PartitionConfigArgs> partitionConfig;
        private @Nullable Output<String> project;
        private @Nullable Output<ReservationConfigArgs> reservationConfig;
        private @Nullable Output<RetentionConfigArgs> retentionConfig;
        private Output<String> topicId;

        public Builder() {
    	      // Empty
        }

        public Builder(TopicArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.location = defaults.location;
    	      this.name = defaults.name;
    	      this.partitionConfig = defaults.partitionConfig;
    	      this.project = defaults.project;
    	      this.reservationConfig = defaults.reservationConfig;
    	      this.retentionConfig = defaults.retentionConfig;
    	      this.topicId = defaults.topicId;
        }

        public Builder location(@Nullable Output<String> location) {
            this.location = location;
            return this;
        }

        public Builder location(@Nullable String location) {
            this.location = Output.ofNullable(location);
            return this;
        }

        public Builder name(@Nullable Output<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(@Nullable String name) {
            this.name = Output.ofNullable(name);
            return this;
        }

        public Builder partitionConfig(@Nullable Output<PartitionConfigArgs> partitionConfig) {
            this.partitionConfig = partitionConfig;
            return this;
        }

        public Builder partitionConfig(@Nullable PartitionConfigArgs partitionConfig) {
            this.partitionConfig = Output.ofNullable(partitionConfig);
            return this;
        }

        public Builder project(@Nullable Output<String> project) {
            this.project = project;
            return this;
        }

        public Builder project(@Nullable String project) {
            this.project = Output.ofNullable(project);
            return this;
        }

        public Builder reservationConfig(@Nullable Output<ReservationConfigArgs> reservationConfig) {
            this.reservationConfig = reservationConfig;
            return this;
        }

        public Builder reservationConfig(@Nullable ReservationConfigArgs reservationConfig) {
            this.reservationConfig = Output.ofNullable(reservationConfig);
            return this;
        }

        public Builder retentionConfig(@Nullable Output<RetentionConfigArgs> retentionConfig) {
            this.retentionConfig = retentionConfig;
            return this;
        }

        public Builder retentionConfig(@Nullable RetentionConfigArgs retentionConfig) {
            this.retentionConfig = Output.ofNullable(retentionConfig);
            return this;
        }

        public Builder topicId(Output<String> topicId) {
            this.topicId = Objects.requireNonNull(topicId);
            return this;
        }

        public Builder topicId(String topicId) {
            this.topicId = Output.of(Objects.requireNonNull(topicId));
            return this;
        }
        public TopicArgs build() {
            return new TopicArgs(location, name, partitionConfig, project, reservationConfig, retentionConfig, topicId);
        }
    }
}
