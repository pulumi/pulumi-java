// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_beta.outputs.HttpHeaderActionResponse;
import io.pulumi.googlenative.compute_beta.outputs.HttpRedirectActionResponse;
import io.pulumi.googlenative.compute_beta.outputs.HttpRouteActionResponse;
import io.pulumi.googlenative.compute_beta.outputs.HttpRouteRuleResponse;
import io.pulumi.googlenative.compute_beta.outputs.PathRuleResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class PathMatcherResponse {
    private final HttpRouteActionResponse defaultRouteAction;
    private final String defaultService;
    private final HttpRedirectActionResponse defaultUrlRedirect;
    private final String description;
    private final HttpHeaderActionResponse headerAction;
    private final String name;
    private final List<PathRuleResponse> pathRules;
    private final List<HttpRouteRuleResponse> routeRules;

    @OutputCustomType.Constructor({"defaultRouteAction","defaultService","defaultUrlRedirect","description","headerAction","name","pathRules","routeRules"})
    private PathMatcherResponse(
        HttpRouteActionResponse defaultRouteAction,
        String defaultService,
        HttpRedirectActionResponse defaultUrlRedirect,
        String description,
        HttpHeaderActionResponse headerAction,
        String name,
        List<PathRuleResponse> pathRules,
        List<HttpRouteRuleResponse> routeRules) {
        this.defaultRouteAction = Objects.requireNonNull(defaultRouteAction);
        this.defaultService = Objects.requireNonNull(defaultService);
        this.defaultUrlRedirect = Objects.requireNonNull(defaultUrlRedirect);
        this.description = Objects.requireNonNull(description);
        this.headerAction = Objects.requireNonNull(headerAction);
        this.name = Objects.requireNonNull(name);
        this.pathRules = Objects.requireNonNull(pathRules);
        this.routeRules = Objects.requireNonNull(routeRules);
    }

    public HttpRouteActionResponse getDefaultRouteAction() {
        return this.defaultRouteAction;
    }
    public String getDefaultService() {
        return this.defaultService;
    }
    public HttpRedirectActionResponse getDefaultUrlRedirect() {
        return this.defaultUrlRedirect;
    }
    public String getDescription() {
        return this.description;
    }
    public HttpHeaderActionResponse getHeaderAction() {
        return this.headerAction;
    }
    public String getName() {
        return this.name;
    }
    public List<PathRuleResponse> getPathRules() {
        return this.pathRules;
    }
    public List<HttpRouteRuleResponse> getRouteRules() {
        return this.routeRules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PathMatcherResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HttpRouteActionResponse defaultRouteAction;
        private String defaultService;
        private HttpRedirectActionResponse defaultUrlRedirect;
        private String description;
        private HttpHeaderActionResponse headerAction;
        private String name;
        private List<PathRuleResponse> pathRules;
        private List<HttpRouteRuleResponse> routeRules;

        public Builder() {
    	      // Empty
        }

        public Builder(PathMatcherResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultRouteAction = defaults.defaultRouteAction;
    	      this.defaultService = defaults.defaultService;
    	      this.defaultUrlRedirect = defaults.defaultUrlRedirect;
    	      this.description = defaults.description;
    	      this.headerAction = defaults.headerAction;
    	      this.name = defaults.name;
    	      this.pathRules = defaults.pathRules;
    	      this.routeRules = defaults.routeRules;
        }

        public Builder setDefaultRouteAction(HttpRouteActionResponse defaultRouteAction) {
            this.defaultRouteAction = Objects.requireNonNull(defaultRouteAction);
            return this;
        }

        public Builder setDefaultService(String defaultService) {
            this.defaultService = Objects.requireNonNull(defaultService);
            return this;
        }

        public Builder setDefaultUrlRedirect(HttpRedirectActionResponse defaultUrlRedirect) {
            this.defaultUrlRedirect = Objects.requireNonNull(defaultUrlRedirect);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setHeaderAction(HttpHeaderActionResponse headerAction) {
            this.headerAction = Objects.requireNonNull(headerAction);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setPathRules(List<PathRuleResponse> pathRules) {
            this.pathRules = Objects.requireNonNull(pathRules);
            return this;
        }

        public Builder setRouteRules(List<HttpRouteRuleResponse> routeRules) {
            this.routeRules = Objects.requireNonNull(routeRules);
            return this;
        }

        public PathMatcherResponse build() {
            return new PathMatcherResponse(defaultRouteAction, defaultService, defaultUrlRedirect, description, headerAction, name, pathRules, routeRules);
        }
    }
}
