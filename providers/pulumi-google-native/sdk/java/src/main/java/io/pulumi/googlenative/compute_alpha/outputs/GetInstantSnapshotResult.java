// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_alpha.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.compute_alpha.outputs.InstantSnapshotResourceStatusResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@OutputCustomType
public final class GetInstantSnapshotResult {
    private final String architecture;
    private final String creationTimestamp;
    private final String description;
    private final String diskSizeGb;
    private final Boolean guestFlush;
    private final String kind;
    private final String labelFingerprint;
    private final Map<String,String> labels;
    private final String name;
    private final String region;
    private final InstantSnapshotResourceStatusResponse resourceStatus;
    private final Boolean satisfiesPzs;
    private final String selfLink;
    private final String selfLinkWithId;
    private final String sourceDisk;
    private final String sourceDiskId;
    private final String status;
    private final String zone;

    @OutputCustomType.Constructor({"architecture","creationTimestamp","description","diskSizeGb","guestFlush","kind","labelFingerprint","labels","name","region","resourceStatus","satisfiesPzs","selfLink","selfLinkWithId","sourceDisk","sourceDiskId","status","zone"})
    private GetInstantSnapshotResult(
        String architecture,
        String creationTimestamp,
        String description,
        String diskSizeGb,
        Boolean guestFlush,
        String kind,
        String labelFingerprint,
        Map<String,String> labels,
        String name,
        String region,
        InstantSnapshotResourceStatusResponse resourceStatus,
        Boolean satisfiesPzs,
        String selfLink,
        String selfLinkWithId,
        String sourceDisk,
        String sourceDiskId,
        String status,
        String zone) {
        this.architecture = Objects.requireNonNull(architecture);
        this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
        this.description = Objects.requireNonNull(description);
        this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
        this.guestFlush = Objects.requireNonNull(guestFlush);
        this.kind = Objects.requireNonNull(kind);
        this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
        this.labels = Objects.requireNonNull(labels);
        this.name = Objects.requireNonNull(name);
        this.region = Objects.requireNonNull(region);
        this.resourceStatus = Objects.requireNonNull(resourceStatus);
        this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
        this.selfLink = Objects.requireNonNull(selfLink);
        this.selfLinkWithId = Objects.requireNonNull(selfLinkWithId);
        this.sourceDisk = Objects.requireNonNull(sourceDisk);
        this.sourceDiskId = Objects.requireNonNull(sourceDiskId);
        this.status = Objects.requireNonNull(status);
        this.zone = Objects.requireNonNull(zone);
    }

    public String getArchitecture() {
        return this.architecture;
    }
    public String getCreationTimestamp() {
        return this.creationTimestamp;
    }
    public String getDescription() {
        return this.description;
    }
    public String getDiskSizeGb() {
        return this.diskSizeGb;
    }
    public Boolean getGuestFlush() {
        return this.guestFlush;
    }
    public String getKind() {
        return this.kind;
    }
    public String getLabelFingerprint() {
        return this.labelFingerprint;
    }
    public Map<String,String> getLabels() {
        return this.labels;
    }
    public String getName() {
        return this.name;
    }
    public String getRegion() {
        return this.region;
    }
    public InstantSnapshotResourceStatusResponse getResourceStatus() {
        return this.resourceStatus;
    }
    public Boolean getSatisfiesPzs() {
        return this.satisfiesPzs;
    }
    public String getSelfLink() {
        return this.selfLink;
    }
    public String getSelfLinkWithId() {
        return this.selfLinkWithId;
    }
    public String getSourceDisk() {
        return this.sourceDisk;
    }
    public String getSourceDiskId() {
        return this.sourceDiskId;
    }
    public String getStatus() {
        return this.status;
    }
    public String getZone() {
        return this.zone;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstantSnapshotResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String architecture;
        private String creationTimestamp;
        private String description;
        private String diskSizeGb;
        private Boolean guestFlush;
        private String kind;
        private String labelFingerprint;
        private Map<String,String> labels;
        private String name;
        private String region;
        private InstantSnapshotResourceStatusResponse resourceStatus;
        private Boolean satisfiesPzs;
        private String selfLink;
        private String selfLinkWithId;
        private String sourceDisk;
        private String sourceDiskId;
        private String status;
        private String zone;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstantSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.architecture = defaults.architecture;
    	      this.creationTimestamp = defaults.creationTimestamp;
    	      this.description = defaults.description;
    	      this.diskSizeGb = defaults.diskSizeGb;
    	      this.guestFlush = defaults.guestFlush;
    	      this.kind = defaults.kind;
    	      this.labelFingerprint = defaults.labelFingerprint;
    	      this.labels = defaults.labels;
    	      this.name = defaults.name;
    	      this.region = defaults.region;
    	      this.resourceStatus = defaults.resourceStatus;
    	      this.satisfiesPzs = defaults.satisfiesPzs;
    	      this.selfLink = defaults.selfLink;
    	      this.selfLinkWithId = defaults.selfLinkWithId;
    	      this.sourceDisk = defaults.sourceDisk;
    	      this.sourceDiskId = defaults.sourceDiskId;
    	      this.status = defaults.status;
    	      this.zone = defaults.zone;
        }

        public Builder setArchitecture(String architecture) {
            this.architecture = Objects.requireNonNull(architecture);
            return this;
        }

        public Builder setCreationTimestamp(String creationTimestamp) {
            this.creationTimestamp = Objects.requireNonNull(creationTimestamp);
            return this;
        }

        public Builder setDescription(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }

        public Builder setDiskSizeGb(String diskSizeGb) {
            this.diskSizeGb = Objects.requireNonNull(diskSizeGb);
            return this;
        }

        public Builder setGuestFlush(Boolean guestFlush) {
            this.guestFlush = Objects.requireNonNull(guestFlush);
            return this;
        }

        public Builder setKind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }

        public Builder setLabelFingerprint(String labelFingerprint) {
            this.labelFingerprint = Objects.requireNonNull(labelFingerprint);
            return this;
        }

        public Builder setLabels(Map<String,String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setRegion(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }

        public Builder setResourceStatus(InstantSnapshotResourceStatusResponse resourceStatus) {
            this.resourceStatus = Objects.requireNonNull(resourceStatus);
            return this;
        }

        public Builder setSatisfiesPzs(Boolean satisfiesPzs) {
            this.satisfiesPzs = Objects.requireNonNull(satisfiesPzs);
            return this;
        }

        public Builder setSelfLink(String selfLink) {
            this.selfLink = Objects.requireNonNull(selfLink);
            return this;
        }

        public Builder setSelfLinkWithId(String selfLinkWithId) {
            this.selfLinkWithId = Objects.requireNonNull(selfLinkWithId);
            return this;
        }

        public Builder setSourceDisk(String sourceDisk) {
            this.sourceDisk = Objects.requireNonNull(sourceDisk);
            return this;
        }

        public Builder setSourceDiskId(String sourceDiskId) {
            this.sourceDiskId = Objects.requireNonNull(sourceDiskId);
            return this;
        }

        public Builder setStatus(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }

        public Builder setZone(String zone) {
            this.zone = Objects.requireNonNull(zone);
            return this;
        }

        public GetInstantSnapshotResult build() {
            return new GetInstantSnapshotResult(architecture, creationTimestamp, description, diskSizeGb, guestFlush, kind, labelFingerprint, labels, name, region, resourceStatus, satisfiesPzs, selfLink, selfLinkWithId, sourceDisk, sourceDiskId, status, zone);
        }
    }
}
