// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.servicemanagement_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.servicemanagement_v1.inputs.CustomHttpPatternArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class HttpRuleArgs extends io.pulumi.resources.ResourceArgs {

    public static final HttpRuleArgs Empty = new HttpRuleArgs();

    @InputImport(name="additionalBindings")
    private final @Nullable Input<List<HttpRuleArgs>> additionalBindings;

    public Input<List<HttpRuleArgs>> getAdditionalBindings() {
        return this.additionalBindings == null ? Input.empty() : this.additionalBindings;
    }

    @InputImport(name="body")
    private final @Nullable Input<String> body;

    public Input<String> getBody() {
        return this.body == null ? Input.empty() : this.body;
    }

    @InputImport(name="custom")
    private final @Nullable Input<CustomHttpPatternArgs> custom;

    public Input<CustomHttpPatternArgs> getCustom() {
        return this.custom == null ? Input.empty() : this.custom;
    }

    @InputImport(name="delete")
    private final @Nullable Input<String> delete;

    public Input<String> getDelete() {
        return this.delete == null ? Input.empty() : this.delete;
    }

    @InputImport(name="get")
    private final @Nullable Input<String> get;

    public Input<String> getGet() {
        return this.get == null ? Input.empty() : this.get;
    }

    @InputImport(name="patch")
    private final @Nullable Input<String> patch;

    public Input<String> getPatch() {
        return this.patch == null ? Input.empty() : this.patch;
    }

    @InputImport(name="post")
    private final @Nullable Input<String> post;

    public Input<String> getPost() {
        return this.post == null ? Input.empty() : this.post;
    }

    @InputImport(name="put")
    private final @Nullable Input<String> put;

    public Input<String> getPut() {
        return this.put == null ? Input.empty() : this.put;
    }

    @InputImport(name="responseBody")
    private final @Nullable Input<String> responseBody;

    public Input<String> getResponseBody() {
        return this.responseBody == null ? Input.empty() : this.responseBody;
    }

    @InputImport(name="selector")
    private final @Nullable Input<String> selector;

    public Input<String> getSelector() {
        return this.selector == null ? Input.empty() : this.selector;
    }

    public HttpRuleArgs(
        @Nullable Input<List<HttpRuleArgs>> additionalBindings,
        @Nullable Input<String> body,
        @Nullable Input<CustomHttpPatternArgs> custom,
        @Nullable Input<String> delete,
        @Nullable Input<String> get,
        @Nullable Input<String> patch,
        @Nullable Input<String> post,
        @Nullable Input<String> put,
        @Nullable Input<String> responseBody,
        @Nullable Input<String> selector) {
        this.additionalBindings = additionalBindings;
        this.body = body;
        this.custom = custom;
        this.delete = delete;
        this.get = get;
        this.patch = patch;
        this.post = post;
        this.put = put;
        this.responseBody = responseBody;
        this.selector = selector;
    }

    private HttpRuleArgs() {
        this.additionalBindings = Input.empty();
        this.body = Input.empty();
        this.custom = Input.empty();
        this.delete = Input.empty();
        this.get = Input.empty();
        this.patch = Input.empty();
        this.post = Input.empty();
        this.put = Input.empty();
        this.responseBody = Input.empty();
        this.selector = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(HttpRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<HttpRuleArgs>> additionalBindings;
        private @Nullable Input<String> body;
        private @Nullable Input<CustomHttpPatternArgs> custom;
        private @Nullable Input<String> delete;
        private @Nullable Input<String> get;
        private @Nullable Input<String> patch;
        private @Nullable Input<String> post;
        private @Nullable Input<String> put;
        private @Nullable Input<String> responseBody;
        private @Nullable Input<String> selector;

        public Builder() {
    	      // Empty
        }

        public Builder(HttpRuleArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.additionalBindings = defaults.additionalBindings;
    	      this.body = defaults.body;
    	      this.custom = defaults.custom;
    	      this.delete = defaults.delete;
    	      this.get = defaults.get;
    	      this.patch = defaults.patch;
    	      this.post = defaults.post;
    	      this.put = defaults.put;
    	      this.responseBody = defaults.responseBody;
    	      this.selector = defaults.selector;
        }

        public Builder setAdditionalBindings(@Nullable Input<List<HttpRuleArgs>> additionalBindings) {
            this.additionalBindings = additionalBindings;
            return this;
        }

        public Builder setAdditionalBindings(@Nullable List<HttpRuleArgs> additionalBindings) {
            this.additionalBindings = Input.ofNullable(additionalBindings);
            return this;
        }

        public Builder setBody(@Nullable Input<String> body) {
            this.body = body;
            return this;
        }

        public Builder setBody(@Nullable String body) {
            this.body = Input.ofNullable(body);
            return this;
        }

        public Builder setCustom(@Nullable Input<CustomHttpPatternArgs> custom) {
            this.custom = custom;
            return this;
        }

        public Builder setCustom(@Nullable CustomHttpPatternArgs custom) {
            this.custom = Input.ofNullable(custom);
            return this;
        }

        public Builder setDelete(@Nullable Input<String> delete) {
            this.delete = delete;
            return this;
        }

        public Builder setDelete(@Nullable String delete) {
            this.delete = Input.ofNullable(delete);
            return this;
        }

        public Builder setGet(@Nullable Input<String> get) {
            this.get = get;
            return this;
        }

        public Builder setGet(@Nullable String get) {
            this.get = Input.ofNullable(get);
            return this;
        }

        public Builder setPatch(@Nullable Input<String> patch) {
            this.patch = patch;
            return this;
        }

        public Builder setPatch(@Nullable String patch) {
            this.patch = Input.ofNullable(patch);
            return this;
        }

        public Builder setPost(@Nullable Input<String> post) {
            this.post = post;
            return this;
        }

        public Builder setPost(@Nullable String post) {
            this.post = Input.ofNullable(post);
            return this;
        }

        public Builder setPut(@Nullable Input<String> put) {
            this.put = put;
            return this;
        }

        public Builder setPut(@Nullable String put) {
            this.put = Input.ofNullable(put);
            return this;
        }

        public Builder setResponseBody(@Nullable Input<String> responseBody) {
            this.responseBody = responseBody;
            return this;
        }

        public Builder setResponseBody(@Nullable String responseBody) {
            this.responseBody = Input.ofNullable(responseBody);
            return this;
        }

        public Builder setSelector(@Nullable Input<String> selector) {
            this.selector = selector;
            return this;
        }

        public Builder setSelector(@Nullable String selector) {
            this.selector = Input.ofNullable(selector);
            return this;
        }

        public HttpRuleArgs build() {
            return new HttpRuleArgs(additionalBindings, body, custom, delete, get, patch, post, put, responseBody, selector);
        }
    }
}
