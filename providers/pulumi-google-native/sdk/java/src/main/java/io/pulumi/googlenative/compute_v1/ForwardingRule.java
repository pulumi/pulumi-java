// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.compute_v1.ForwardingRuleArgs;
import io.pulumi.googlenative.compute_v1.outputs.ForwardingRuleServiceDirectoryRegistrationResponse;
import io.pulumi.googlenative.compute_v1.outputs.MetadataFilterResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

@ResourceType(type="google-native:compute/v1:ForwardingRule")
public class ForwardingRule extends io.pulumi.resources.CustomResource {
    @OutputExport(name="allPorts", type=Boolean.class, parameters={})
    private Output<Boolean> allPorts;

    public Output<Boolean> getAllPorts() {
        return this.allPorts;
    }
    @OutputExport(name="allowGlobalAccess", type=Boolean.class, parameters={})
    private Output<Boolean> allowGlobalAccess;

    public Output<Boolean> getAllowGlobalAccess() {
        return this.allowGlobalAccess;
    }
    @OutputExport(name="backendService", type=String.class, parameters={})
    private Output<String> backendService;

    public Output<String> getBackendService() {
        return this.backendService;
    }
    @OutputExport(name="creationTimestamp", type=String.class, parameters={})
    private Output<String> creationTimestamp;

    public Output<String> getCreationTimestamp() {
        return this.creationTimestamp;
    }
    @OutputExport(name="description", type=String.class, parameters={})
    private Output<String> description;

    public Output<String> getDescription() {
        return this.description;
    }
    @OutputExport(name="fingerprint", type=String.class, parameters={})
    private Output<String> fingerprint;

    public Output<String> getFingerprint() {
        return this.fingerprint;
    }
    @OutputExport(name="ipAddress", type=String.class, parameters={})
    private Output<String> ipAddress;

    public Output<String> getIpAddress() {
        return this.ipAddress;
    }
    @OutputExport(name="ipProtocol", type=String.class, parameters={})
    private Output<String> ipProtocol;

    public Output<String> getIpProtocol() {
        return this.ipProtocol;
    }
    @OutputExport(name="ipVersion", type=String.class, parameters={})
    private Output<String> ipVersion;

    public Output<String> getIpVersion() {
        return this.ipVersion;
    }
    @OutputExport(name="isMirroringCollector", type=Boolean.class, parameters={})
    private Output<Boolean> isMirroringCollector;

    public Output<Boolean> getIsMirroringCollector() {
        return this.isMirroringCollector;
    }
    @OutputExport(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    public Output<String> getKind() {
        return this.kind;
    }
    @OutputExport(name="labelFingerprint", type=String.class, parameters={})
    private Output<String> labelFingerprint;

    public Output<String> getLabelFingerprint() {
        return this.labelFingerprint;
    }
    @OutputExport(name="labels", type=Map.class, parameters={String.class, String.class})
    private Output<Map<String,String>> labels;

    public Output<Map<String,String>> getLabels() {
        return this.labels;
    }
    @OutputExport(name="loadBalancingScheme", type=String.class, parameters={})
    private Output<String> loadBalancingScheme;

    public Output<String> getLoadBalancingScheme() {
        return this.loadBalancingScheme;
    }
    @OutputExport(name="metadataFilters", type=List.class, parameters={MetadataFilterResponse.class})
    private Output<List<MetadataFilterResponse>> metadataFilters;

    public Output<List<MetadataFilterResponse>> getMetadataFilters() {
        return this.metadataFilters;
    }
    @OutputExport(name="name", type=String.class, parameters={})
    private Output<String> name;

    public Output<String> getName() {
        return this.name;
    }
    @OutputExport(name="network", type=String.class, parameters={})
    private Output<String> network;

    public Output<String> getNetwork() {
        return this.network;
    }
    @OutputExport(name="networkTier", type=String.class, parameters={})
    private Output<String> networkTier;

    public Output<String> getNetworkTier() {
        return this.networkTier;
    }
    @OutputExport(name="portRange", type=String.class, parameters={})
    private Output<String> portRange;

    public Output<String> getPortRange() {
        return this.portRange;
    }
    @OutputExport(name="ports", type=List.class, parameters={String.class})
    private Output<List<String>> ports;

    public Output<List<String>> getPorts() {
        return this.ports;
    }
    @OutputExport(name="pscConnectionId", type=String.class, parameters={})
    private Output<String> pscConnectionId;

    public Output<String> getPscConnectionId() {
        return this.pscConnectionId;
    }
    @OutputExport(name="pscConnectionStatus", type=String.class, parameters={})
    private Output<String> pscConnectionStatus;

    public Output<String> getPscConnectionStatus() {
        return this.pscConnectionStatus;
    }
    @OutputExport(name="region", type=String.class, parameters={})
    private Output<String> region;

    public Output<String> getRegion() {
        return this.region;
    }
    @OutputExport(name="selfLink", type=String.class, parameters={})
    private Output<String> selfLink;

    public Output<String> getSelfLink() {
        return this.selfLink;
    }
    @OutputExport(name="serviceDirectoryRegistrations", type=List.class, parameters={ForwardingRuleServiceDirectoryRegistrationResponse.class})
    private Output<List<ForwardingRuleServiceDirectoryRegistrationResponse>> serviceDirectoryRegistrations;

    public Output<List<ForwardingRuleServiceDirectoryRegistrationResponse>> getServiceDirectoryRegistrations() {
        return this.serviceDirectoryRegistrations;
    }
    @OutputExport(name="serviceLabel", type=String.class, parameters={})
    private Output<String> serviceLabel;

    public Output<String> getServiceLabel() {
        return this.serviceLabel;
    }
    @OutputExport(name="serviceName", type=String.class, parameters={})
    private Output<String> serviceName;

    public Output<String> getServiceName() {
        return this.serviceName;
    }
    @OutputExport(name="subnetwork", type=String.class, parameters={})
    private Output<String> subnetwork;

    public Output<String> getSubnetwork() {
        return this.subnetwork;
    }
    @OutputExport(name="target", type=String.class, parameters={})
    private Output<String> target;

    public Output<String> getTarget() {
        return this.target;
    }

    public ForwardingRule(String name, ForwardingRuleArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:compute/v1:ForwardingRule", name, args == null ? ForwardingRuleArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private ForwardingRule(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:compute/v1:ForwardingRule", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static ForwardingRule get(String name, Input<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new ForwardingRule(name, id, options);
    }
}
