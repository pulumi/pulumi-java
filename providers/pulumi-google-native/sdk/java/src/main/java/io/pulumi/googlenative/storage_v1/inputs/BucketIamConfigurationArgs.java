// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.storage_v1.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import io.pulumi.googlenative.storage_v1.inputs.BucketIamConfigurationBucketPolicyOnlyArgs;
import io.pulumi.googlenative.storage_v1.inputs.BucketIamConfigurationUniformBucketLevelAccessArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * The bucket's IAM configuration.
 * 
 */
public final class BucketIamConfigurationArgs extends io.pulumi.resources.ResourceArgs {

    public static final BucketIamConfigurationArgs Empty = new BucketIamConfigurationArgs();

    /**
     * The bucket's uniform bucket-level access configuration. The feature was formerly known as Bucket Policy Only. For backward compatibility, this field will be populated with identical information as the uniformBucketLevelAccess field. We recommend using the uniformBucketLevelAccess field to enable and disable the feature.
     * 
     */
    @Import(name="bucketPolicyOnly")
      private final @Nullable Output<BucketIamConfigurationBucketPolicyOnlyArgs> bucketPolicyOnly;

    public Output<BucketIamConfigurationBucketPolicyOnlyArgs> bucketPolicyOnly() {
        return this.bucketPolicyOnly == null ? Codegen.empty() : this.bucketPolicyOnly;
    }

    /**
     * The bucket's Public Access Prevention configuration. Currently, 'inherited' and 'enforced' are supported.
     * 
     */
    @Import(name="publicAccessPrevention")
      private final @Nullable Output<String> publicAccessPrevention;

    public Output<String> publicAccessPrevention() {
        return this.publicAccessPrevention == null ? Codegen.empty() : this.publicAccessPrevention;
    }

    /**
     * The bucket's uniform bucket-level access configuration.
     * 
     */
    @Import(name="uniformBucketLevelAccess")
      private final @Nullable Output<BucketIamConfigurationUniformBucketLevelAccessArgs> uniformBucketLevelAccess;

    public Output<BucketIamConfigurationUniformBucketLevelAccessArgs> uniformBucketLevelAccess() {
        return this.uniformBucketLevelAccess == null ? Codegen.empty() : this.uniformBucketLevelAccess;
    }

    public BucketIamConfigurationArgs(
        @Nullable Output<BucketIamConfigurationBucketPolicyOnlyArgs> bucketPolicyOnly,
        @Nullable Output<String> publicAccessPrevention,
        @Nullable Output<BucketIamConfigurationUniformBucketLevelAccessArgs> uniformBucketLevelAccess) {
        this.bucketPolicyOnly = bucketPolicyOnly;
        this.publicAccessPrevention = publicAccessPrevention;
        this.uniformBucketLevelAccess = uniformBucketLevelAccess;
    }

    private BucketIamConfigurationArgs() {
        this.bucketPolicyOnly = Codegen.empty();
        this.publicAccessPrevention = Codegen.empty();
        this.uniformBucketLevelAccess = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BucketIamConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<BucketIamConfigurationBucketPolicyOnlyArgs> bucketPolicyOnly;
        private @Nullable Output<String> publicAccessPrevention;
        private @Nullable Output<BucketIamConfigurationUniformBucketLevelAccessArgs> uniformBucketLevelAccess;

        public Builder() {
    	      // Empty
        }

        public Builder(BucketIamConfigurationArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketPolicyOnly = defaults.bucketPolicyOnly;
    	      this.publicAccessPrevention = defaults.publicAccessPrevention;
    	      this.uniformBucketLevelAccess = defaults.uniformBucketLevelAccess;
        }

        public Builder bucketPolicyOnly(@Nullable Output<BucketIamConfigurationBucketPolicyOnlyArgs> bucketPolicyOnly) {
            this.bucketPolicyOnly = bucketPolicyOnly;
            return this;
        }
        public Builder bucketPolicyOnly(@Nullable BucketIamConfigurationBucketPolicyOnlyArgs bucketPolicyOnly) {
            this.bucketPolicyOnly = Codegen.ofNullable(bucketPolicyOnly);
            return this;
        }
        public Builder publicAccessPrevention(@Nullable Output<String> publicAccessPrevention) {
            this.publicAccessPrevention = publicAccessPrevention;
            return this;
        }
        public Builder publicAccessPrevention(@Nullable String publicAccessPrevention) {
            this.publicAccessPrevention = Codegen.ofNullable(publicAccessPrevention);
            return this;
        }
        public Builder uniformBucketLevelAccess(@Nullable Output<BucketIamConfigurationUniformBucketLevelAccessArgs> uniformBucketLevelAccess) {
            this.uniformBucketLevelAccess = uniformBucketLevelAccess;
            return this;
        }
        public Builder uniformBucketLevelAccess(@Nullable BucketIamConfigurationUniformBucketLevelAccessArgs uniformBucketLevelAccess) {
            this.uniformBucketLevelAccess = Codegen.ofNullable(uniformBucketLevelAccess);
            return this;
        }        public BucketIamConfigurationArgs build() {
            return new BucketIamConfigurationArgs(bucketPolicyOnly, publicAccessPrevention, uniformBucketLevelAccess);
        }
    }
}
