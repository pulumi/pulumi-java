// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.compute_beta.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SubnetworkLogConfigResponse extends io.pulumi.resources.InvokeArgs {

    public static final SubnetworkLogConfigResponse Empty = new SubnetworkLogConfigResponse();

    @InputImport(name="aggregationInterval", required=true)
    private final String aggregationInterval;

    public String getAggregationInterval() {
        return this.aggregationInterval;
    }

    @InputImport(name="enable", required=true)
    private final Boolean enable;

    public Boolean getEnable() {
        return this.enable;
    }

    @InputImport(name="filterExpr", required=true)
    private final String filterExpr;

    public String getFilterExpr() {
        return this.filterExpr;
    }

    @InputImport(name="flowSampling", required=true)
    private final Double flowSampling;

    public Double getFlowSampling() {
        return this.flowSampling;
    }

    @InputImport(name="metadata", required=true)
    private final String metadata;

    public String getMetadata() {
        return this.metadata;
    }

    @InputImport(name="metadataFields", required=true)
    private final List<String> metadataFields;

    public List<String> getMetadataFields() {
        return this.metadataFields;
    }

    public SubnetworkLogConfigResponse(
        String aggregationInterval,
        Boolean enable,
        String filterExpr,
        Double flowSampling,
        String metadata,
        List<String> metadataFields) {
        this.aggregationInterval = Objects.requireNonNull(aggregationInterval, "expected parameter 'aggregationInterval' to be non-null");
        this.enable = Objects.requireNonNull(enable, "expected parameter 'enable' to be non-null");
        this.filterExpr = Objects.requireNonNull(filterExpr, "expected parameter 'filterExpr' to be non-null");
        this.flowSampling = Objects.requireNonNull(flowSampling, "expected parameter 'flowSampling' to be non-null");
        this.metadata = Objects.requireNonNull(metadata, "expected parameter 'metadata' to be non-null");
        this.metadataFields = Objects.requireNonNull(metadataFields, "expected parameter 'metadataFields' to be non-null");
    }

    private SubnetworkLogConfigResponse() {
        this.aggregationInterval = null;
        this.enable = null;
        this.filterExpr = null;
        this.flowSampling = null;
        this.metadata = null;
        this.metadataFields = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubnetworkLogConfigResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String aggregationInterval;
        private Boolean enable;
        private String filterExpr;
        private Double flowSampling;
        private String metadata;
        private List<String> metadataFields;

        public Builder() {
    	      // Empty
        }

        public Builder(SubnetworkLogConfigResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aggregationInterval = defaults.aggregationInterval;
    	      this.enable = defaults.enable;
    	      this.filterExpr = defaults.filterExpr;
    	      this.flowSampling = defaults.flowSampling;
    	      this.metadata = defaults.metadata;
    	      this.metadataFields = defaults.metadataFields;
        }

        public Builder setAggregationInterval(String aggregationInterval) {
            this.aggregationInterval = Objects.requireNonNull(aggregationInterval);
            return this;
        }

        public Builder setEnable(Boolean enable) {
            this.enable = Objects.requireNonNull(enable);
            return this;
        }

        public Builder setFilterExpr(String filterExpr) {
            this.filterExpr = Objects.requireNonNull(filterExpr);
            return this;
        }

        public Builder setFlowSampling(Double flowSampling) {
            this.flowSampling = Objects.requireNonNull(flowSampling);
            return this;
        }

        public Builder setMetadata(String metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }

        public Builder setMetadataFields(List<String> metadataFields) {
            this.metadataFields = Objects.requireNonNull(metadataFields);
            return this;
        }

        public SubnetworkLogConfigResponse build() {
            return new SubnetworkLogConfigResponse(aggregationInterval, enable, filterExpr, flowSampling, metadata, metadataFields);
        }
    }
}
