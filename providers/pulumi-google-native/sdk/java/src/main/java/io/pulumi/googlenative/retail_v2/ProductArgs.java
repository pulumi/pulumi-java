// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.retail_v2;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.retail_v2.enums.ProductAvailability;
import io.pulumi.googlenative.retail_v2.enums.ProductType;
import io.pulumi.googlenative.retail_v2.inputs.GoogleCloudRetailV2AudienceArgs;
import io.pulumi.googlenative.retail_v2.inputs.GoogleCloudRetailV2ColorInfoArgs;
import io.pulumi.googlenative.retail_v2.inputs.GoogleCloudRetailV2FulfillmentInfoArgs;
import io.pulumi.googlenative.retail_v2.inputs.GoogleCloudRetailV2ImageArgs;
import io.pulumi.googlenative.retail_v2.inputs.GoogleCloudRetailV2PriceInfoArgs;
import io.pulumi.googlenative.retail_v2.inputs.GoogleCloudRetailV2PromotionArgs;
import io.pulumi.googlenative.retail_v2.inputs.GoogleCloudRetailV2RatingArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProductArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProductArgs Empty = new ProductArgs();

    @InputImport(name="attributes")
    private final @Nullable Input<Map<String,String>> attributes;

    public Input<Map<String,String>> getAttributes() {
        return this.attributes == null ? Input.empty() : this.attributes;
    }

    @InputImport(name="audience")
    private final @Nullable Input<GoogleCloudRetailV2AudienceArgs> audience;

    public Input<GoogleCloudRetailV2AudienceArgs> getAudience() {
        return this.audience == null ? Input.empty() : this.audience;
    }

    @InputImport(name="availability")
    private final @Nullable Input<ProductAvailability> availability;

    public Input<ProductAvailability> getAvailability() {
        return this.availability == null ? Input.empty() : this.availability;
    }

    @InputImport(name="availableQuantity")
    private final @Nullable Input<Integer> availableQuantity;

    public Input<Integer> getAvailableQuantity() {
        return this.availableQuantity == null ? Input.empty() : this.availableQuantity;
    }

    @InputImport(name="availableTime")
    private final @Nullable Input<String> availableTime;

    public Input<String> getAvailableTime() {
        return this.availableTime == null ? Input.empty() : this.availableTime;
    }

    @InputImport(name="branchId", required=true)
    private final Input<String> branchId;

    public Input<String> getBranchId() {
        return this.branchId;
    }

    @InputImport(name="brands")
    private final @Nullable Input<List<String>> brands;

    public Input<List<String>> getBrands() {
        return this.brands == null ? Input.empty() : this.brands;
    }

    @InputImport(name="catalogId", required=true)
    private final Input<String> catalogId;

    public Input<String> getCatalogId() {
        return this.catalogId;
    }

    @InputImport(name="categories")
    private final @Nullable Input<List<String>> categories;

    public Input<List<String>> getCategories() {
        return this.categories == null ? Input.empty() : this.categories;
    }

    @InputImport(name="collectionMemberIds")
    private final @Nullable Input<List<String>> collectionMemberIds;

    public Input<List<String>> getCollectionMemberIds() {
        return this.collectionMemberIds == null ? Input.empty() : this.collectionMemberIds;
    }

    @InputImport(name="colorInfo")
    private final @Nullable Input<GoogleCloudRetailV2ColorInfoArgs> colorInfo;

    public Input<GoogleCloudRetailV2ColorInfoArgs> getColorInfo() {
        return this.colorInfo == null ? Input.empty() : this.colorInfo;
    }

    @InputImport(name="conditions")
    private final @Nullable Input<List<String>> conditions;

    public Input<List<String>> getConditions() {
        return this.conditions == null ? Input.empty() : this.conditions;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="expireTime")
    private final @Nullable Input<String> expireTime;

    public Input<String> getExpireTime() {
        return this.expireTime == null ? Input.empty() : this.expireTime;
    }

    @InputImport(name="fulfillmentInfo")
    private final @Nullable Input<List<GoogleCloudRetailV2FulfillmentInfoArgs>> fulfillmentInfo;

    public Input<List<GoogleCloudRetailV2FulfillmentInfoArgs>> getFulfillmentInfo() {
        return this.fulfillmentInfo == null ? Input.empty() : this.fulfillmentInfo;
    }

    @InputImport(name="gtin")
    private final @Nullable Input<String> gtin;

    public Input<String> getGtin() {
        return this.gtin == null ? Input.empty() : this.gtin;
    }

    @InputImport(name="id")
    private final @Nullable Input<String> id;

    public Input<String> getId() {
        return this.id == null ? Input.empty() : this.id;
    }

    @InputImport(name="images")
    private final @Nullable Input<List<GoogleCloudRetailV2ImageArgs>> images;

    public Input<List<GoogleCloudRetailV2ImageArgs>> getImages() {
        return this.images == null ? Input.empty() : this.images;
    }

    @InputImport(name="languageCode")
    private final @Nullable Input<String> languageCode;

    public Input<String> getLanguageCode() {
        return this.languageCode == null ? Input.empty() : this.languageCode;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="materials")
    private final @Nullable Input<List<String>> materials;

    public Input<List<String>> getMaterials() {
        return this.materials == null ? Input.empty() : this.materials;
    }

    @InputImport(name="name")
    private final @Nullable Input<String> name;

    public Input<String> getName() {
        return this.name == null ? Input.empty() : this.name;
    }

    @InputImport(name="patterns")
    private final @Nullable Input<List<String>> patterns;

    public Input<List<String>> getPatterns() {
        return this.patterns == null ? Input.empty() : this.patterns;
    }

    @InputImport(name="priceInfo")
    private final @Nullable Input<GoogleCloudRetailV2PriceInfoArgs> priceInfo;

    public Input<GoogleCloudRetailV2PriceInfoArgs> getPriceInfo() {
        return this.priceInfo == null ? Input.empty() : this.priceInfo;
    }

    @InputImport(name="primaryProductId")
    private final @Nullable Input<String> primaryProductId;

    public Input<String> getPrimaryProductId() {
        return this.primaryProductId == null ? Input.empty() : this.primaryProductId;
    }

    @InputImport(name="productId", required=true)
    private final Input<String> productId;

    public Input<String> getProductId() {
        return this.productId;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="promotions")
    private final @Nullable Input<List<GoogleCloudRetailV2PromotionArgs>> promotions;

    public Input<List<GoogleCloudRetailV2PromotionArgs>> getPromotions() {
        return this.promotions == null ? Input.empty() : this.promotions;
    }

    @InputImport(name="publishTime")
    private final @Nullable Input<String> publishTime;

    public Input<String> getPublishTime() {
        return this.publishTime == null ? Input.empty() : this.publishTime;
    }

    @InputImport(name="rating")
    private final @Nullable Input<GoogleCloudRetailV2RatingArgs> rating;

    public Input<GoogleCloudRetailV2RatingArgs> getRating() {
        return this.rating == null ? Input.empty() : this.rating;
    }

    @InputImport(name="retrievableFields")
    private final @Nullable Input<String> retrievableFields;

    public Input<String> getRetrievableFields() {
        return this.retrievableFields == null ? Input.empty() : this.retrievableFields;
    }

    @InputImport(name="sizes")
    private final @Nullable Input<List<String>> sizes;

    public Input<List<String>> getSizes() {
        return this.sizes == null ? Input.empty() : this.sizes;
    }

    @InputImport(name="tags")
    private final @Nullable Input<List<String>> tags;

    public Input<List<String>> getTags() {
        return this.tags == null ? Input.empty() : this.tags;
    }

    @InputImport(name="title", required=true)
    private final Input<String> title;

    public Input<String> getTitle() {
        return this.title;
    }

    @InputImport(name="ttl")
    private final @Nullable Input<String> ttl;

    public Input<String> getTtl() {
        return this.ttl == null ? Input.empty() : this.ttl;
    }

    @InputImport(name="type")
    private final @Nullable Input<ProductType> type;

    public Input<ProductType> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    @InputImport(name="uri")
    private final @Nullable Input<String> uri;

    public Input<String> getUri() {
        return this.uri == null ? Input.empty() : this.uri;
    }

    public ProductArgs(
        @Nullable Input<Map<String,String>> attributes,
        @Nullable Input<GoogleCloudRetailV2AudienceArgs> audience,
        @Nullable Input<ProductAvailability> availability,
        @Nullable Input<Integer> availableQuantity,
        @Nullable Input<String> availableTime,
        Input<String> branchId,
        @Nullable Input<List<String>> brands,
        Input<String> catalogId,
        @Nullable Input<List<String>> categories,
        @Nullable Input<List<String>> collectionMemberIds,
        @Nullable Input<GoogleCloudRetailV2ColorInfoArgs> colorInfo,
        @Nullable Input<List<String>> conditions,
        @Nullable Input<String> description,
        @Nullable Input<String> expireTime,
        @Nullable Input<List<GoogleCloudRetailV2FulfillmentInfoArgs>> fulfillmentInfo,
        @Nullable Input<String> gtin,
        @Nullable Input<String> id,
        @Nullable Input<List<GoogleCloudRetailV2ImageArgs>> images,
        @Nullable Input<String> languageCode,
        @Nullable Input<String> location,
        @Nullable Input<List<String>> materials,
        @Nullable Input<String> name,
        @Nullable Input<List<String>> patterns,
        @Nullable Input<GoogleCloudRetailV2PriceInfoArgs> priceInfo,
        @Nullable Input<String> primaryProductId,
        Input<String> productId,
        @Nullable Input<String> project,
        @Nullable Input<List<GoogleCloudRetailV2PromotionArgs>> promotions,
        @Nullable Input<String> publishTime,
        @Nullable Input<GoogleCloudRetailV2RatingArgs> rating,
        @Nullable Input<String> retrievableFields,
        @Nullable Input<List<String>> sizes,
        @Nullable Input<List<String>> tags,
        Input<String> title,
        @Nullable Input<String> ttl,
        @Nullable Input<ProductType> type,
        @Nullable Input<String> uri) {
        this.attributes = attributes;
        this.audience = audience;
        this.availability = availability;
        this.availableQuantity = availableQuantity;
        this.availableTime = availableTime;
        this.branchId = Objects.requireNonNull(branchId, "expected parameter 'branchId' to be non-null");
        this.brands = brands;
        this.catalogId = Objects.requireNonNull(catalogId, "expected parameter 'catalogId' to be non-null");
        this.categories = categories;
        this.collectionMemberIds = collectionMemberIds;
        this.colorInfo = colorInfo;
        this.conditions = conditions;
        this.description = description;
        this.expireTime = expireTime;
        this.fulfillmentInfo = fulfillmentInfo;
        this.gtin = gtin;
        this.id = id;
        this.images = images;
        this.languageCode = languageCode;
        this.location = location;
        this.materials = materials;
        this.name = name;
        this.patterns = patterns;
        this.priceInfo = priceInfo;
        this.primaryProductId = primaryProductId;
        this.productId = Objects.requireNonNull(productId, "expected parameter 'productId' to be non-null");
        this.project = project;
        this.promotions = promotions;
        this.publishTime = publishTime;
        this.rating = rating;
        this.retrievableFields = retrievableFields;
        this.sizes = sizes;
        this.tags = tags;
        this.title = Objects.requireNonNull(title, "expected parameter 'title' to be non-null");
        this.ttl = ttl;
        this.type = type;
        this.uri = uri;
    }

    private ProductArgs() {
        this.attributes = Input.empty();
        this.audience = Input.empty();
        this.availability = Input.empty();
        this.availableQuantity = Input.empty();
        this.availableTime = Input.empty();
        this.branchId = Input.empty();
        this.brands = Input.empty();
        this.catalogId = Input.empty();
        this.categories = Input.empty();
        this.collectionMemberIds = Input.empty();
        this.colorInfo = Input.empty();
        this.conditions = Input.empty();
        this.description = Input.empty();
        this.expireTime = Input.empty();
        this.fulfillmentInfo = Input.empty();
        this.gtin = Input.empty();
        this.id = Input.empty();
        this.images = Input.empty();
        this.languageCode = Input.empty();
        this.location = Input.empty();
        this.materials = Input.empty();
        this.name = Input.empty();
        this.patterns = Input.empty();
        this.priceInfo = Input.empty();
        this.primaryProductId = Input.empty();
        this.productId = Input.empty();
        this.project = Input.empty();
        this.promotions = Input.empty();
        this.publishTime = Input.empty();
        this.rating = Input.empty();
        this.retrievableFields = Input.empty();
        this.sizes = Input.empty();
        this.tags = Input.empty();
        this.title = Input.empty();
        this.ttl = Input.empty();
        this.type = Input.empty();
        this.uri = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProductArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<Map<String,String>> attributes;
        private @Nullable Input<GoogleCloudRetailV2AudienceArgs> audience;
        private @Nullable Input<ProductAvailability> availability;
        private @Nullable Input<Integer> availableQuantity;
        private @Nullable Input<String> availableTime;
        private Input<String> branchId;
        private @Nullable Input<List<String>> brands;
        private Input<String> catalogId;
        private @Nullable Input<List<String>> categories;
        private @Nullable Input<List<String>> collectionMemberIds;
        private @Nullable Input<GoogleCloudRetailV2ColorInfoArgs> colorInfo;
        private @Nullable Input<List<String>> conditions;
        private @Nullable Input<String> description;
        private @Nullable Input<String> expireTime;
        private @Nullable Input<List<GoogleCloudRetailV2FulfillmentInfoArgs>> fulfillmentInfo;
        private @Nullable Input<String> gtin;
        private @Nullable Input<String> id;
        private @Nullable Input<List<GoogleCloudRetailV2ImageArgs>> images;
        private @Nullable Input<String> languageCode;
        private @Nullable Input<String> location;
        private @Nullable Input<List<String>> materials;
        private @Nullable Input<String> name;
        private @Nullable Input<List<String>> patterns;
        private @Nullable Input<GoogleCloudRetailV2PriceInfoArgs> priceInfo;
        private @Nullable Input<String> primaryProductId;
        private Input<String> productId;
        private @Nullable Input<String> project;
        private @Nullable Input<List<GoogleCloudRetailV2PromotionArgs>> promotions;
        private @Nullable Input<String> publishTime;
        private @Nullable Input<GoogleCloudRetailV2RatingArgs> rating;
        private @Nullable Input<String> retrievableFields;
        private @Nullable Input<List<String>> sizes;
        private @Nullable Input<List<String>> tags;
        private Input<String> title;
        private @Nullable Input<String> ttl;
        private @Nullable Input<ProductType> type;
        private @Nullable Input<String> uri;

        public Builder() {
    	      // Empty
        }

        public Builder(ProductArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.audience = defaults.audience;
    	      this.availability = defaults.availability;
    	      this.availableQuantity = defaults.availableQuantity;
    	      this.availableTime = defaults.availableTime;
    	      this.branchId = defaults.branchId;
    	      this.brands = defaults.brands;
    	      this.catalogId = defaults.catalogId;
    	      this.categories = defaults.categories;
    	      this.collectionMemberIds = defaults.collectionMemberIds;
    	      this.colorInfo = defaults.colorInfo;
    	      this.conditions = defaults.conditions;
    	      this.description = defaults.description;
    	      this.expireTime = defaults.expireTime;
    	      this.fulfillmentInfo = defaults.fulfillmentInfo;
    	      this.gtin = defaults.gtin;
    	      this.id = defaults.id;
    	      this.images = defaults.images;
    	      this.languageCode = defaults.languageCode;
    	      this.location = defaults.location;
    	      this.materials = defaults.materials;
    	      this.name = defaults.name;
    	      this.patterns = defaults.patterns;
    	      this.priceInfo = defaults.priceInfo;
    	      this.primaryProductId = defaults.primaryProductId;
    	      this.productId = defaults.productId;
    	      this.project = defaults.project;
    	      this.promotions = defaults.promotions;
    	      this.publishTime = defaults.publishTime;
    	      this.rating = defaults.rating;
    	      this.retrievableFields = defaults.retrievableFields;
    	      this.sizes = defaults.sizes;
    	      this.tags = defaults.tags;
    	      this.title = defaults.title;
    	      this.ttl = defaults.ttl;
    	      this.type = defaults.type;
    	      this.uri = defaults.uri;
        }

        public Builder setAttributes(@Nullable Input<Map<String,String>> attributes) {
            this.attributes = attributes;
            return this;
        }

        public Builder setAttributes(@Nullable Map<String,String> attributes) {
            this.attributes = Input.ofNullable(attributes);
            return this;
        }

        public Builder setAudience(@Nullable Input<GoogleCloudRetailV2AudienceArgs> audience) {
            this.audience = audience;
            return this;
        }

        public Builder setAudience(@Nullable GoogleCloudRetailV2AudienceArgs audience) {
            this.audience = Input.ofNullable(audience);
            return this;
        }

        public Builder setAvailability(@Nullable Input<ProductAvailability> availability) {
            this.availability = availability;
            return this;
        }

        public Builder setAvailability(@Nullable ProductAvailability availability) {
            this.availability = Input.ofNullable(availability);
            return this;
        }

        public Builder setAvailableQuantity(@Nullable Input<Integer> availableQuantity) {
            this.availableQuantity = availableQuantity;
            return this;
        }

        public Builder setAvailableQuantity(@Nullable Integer availableQuantity) {
            this.availableQuantity = Input.ofNullable(availableQuantity);
            return this;
        }

        public Builder setAvailableTime(@Nullable Input<String> availableTime) {
            this.availableTime = availableTime;
            return this;
        }

        public Builder setAvailableTime(@Nullable String availableTime) {
            this.availableTime = Input.ofNullable(availableTime);
            return this;
        }

        public Builder setBranchId(Input<String> branchId) {
            this.branchId = Objects.requireNonNull(branchId);
            return this;
        }

        public Builder setBranchId(String branchId) {
            this.branchId = Input.of(Objects.requireNonNull(branchId));
            return this;
        }

        public Builder setBrands(@Nullable Input<List<String>> brands) {
            this.brands = brands;
            return this;
        }

        public Builder setBrands(@Nullable List<String> brands) {
            this.brands = Input.ofNullable(brands);
            return this;
        }

        public Builder setCatalogId(Input<String> catalogId) {
            this.catalogId = Objects.requireNonNull(catalogId);
            return this;
        }

        public Builder setCatalogId(String catalogId) {
            this.catalogId = Input.of(Objects.requireNonNull(catalogId));
            return this;
        }

        public Builder setCategories(@Nullable Input<List<String>> categories) {
            this.categories = categories;
            return this;
        }

        public Builder setCategories(@Nullable List<String> categories) {
            this.categories = Input.ofNullable(categories);
            return this;
        }

        public Builder setCollectionMemberIds(@Nullable Input<List<String>> collectionMemberIds) {
            this.collectionMemberIds = collectionMemberIds;
            return this;
        }

        public Builder setCollectionMemberIds(@Nullable List<String> collectionMemberIds) {
            this.collectionMemberIds = Input.ofNullable(collectionMemberIds);
            return this;
        }

        public Builder setColorInfo(@Nullable Input<GoogleCloudRetailV2ColorInfoArgs> colorInfo) {
            this.colorInfo = colorInfo;
            return this;
        }

        public Builder setColorInfo(@Nullable GoogleCloudRetailV2ColorInfoArgs colorInfo) {
            this.colorInfo = Input.ofNullable(colorInfo);
            return this;
        }

        public Builder setConditions(@Nullable Input<List<String>> conditions) {
            this.conditions = conditions;
            return this;
        }

        public Builder setConditions(@Nullable List<String> conditions) {
            this.conditions = Input.ofNullable(conditions);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setExpireTime(@Nullable Input<String> expireTime) {
            this.expireTime = expireTime;
            return this;
        }

        public Builder setExpireTime(@Nullable String expireTime) {
            this.expireTime = Input.ofNullable(expireTime);
            return this;
        }

        public Builder setFulfillmentInfo(@Nullable Input<List<GoogleCloudRetailV2FulfillmentInfoArgs>> fulfillmentInfo) {
            this.fulfillmentInfo = fulfillmentInfo;
            return this;
        }

        public Builder setFulfillmentInfo(@Nullable List<GoogleCloudRetailV2FulfillmentInfoArgs> fulfillmentInfo) {
            this.fulfillmentInfo = Input.ofNullable(fulfillmentInfo);
            return this;
        }

        public Builder setGtin(@Nullable Input<String> gtin) {
            this.gtin = gtin;
            return this;
        }

        public Builder setGtin(@Nullable String gtin) {
            this.gtin = Input.ofNullable(gtin);
            return this;
        }

        public Builder setId(@Nullable Input<String> id) {
            this.id = id;
            return this;
        }

        public Builder setId(@Nullable String id) {
            this.id = Input.ofNullable(id);
            return this;
        }

        public Builder setImages(@Nullable Input<List<GoogleCloudRetailV2ImageArgs>> images) {
            this.images = images;
            return this;
        }

        public Builder setImages(@Nullable List<GoogleCloudRetailV2ImageArgs> images) {
            this.images = Input.ofNullable(images);
            return this;
        }

        public Builder setLanguageCode(@Nullable Input<String> languageCode) {
            this.languageCode = languageCode;
            return this;
        }

        public Builder setLanguageCode(@Nullable String languageCode) {
            this.languageCode = Input.ofNullable(languageCode);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setMaterials(@Nullable Input<List<String>> materials) {
            this.materials = materials;
            return this;
        }

        public Builder setMaterials(@Nullable List<String> materials) {
            this.materials = Input.ofNullable(materials);
            return this;
        }

        public Builder setName(@Nullable Input<String> name) {
            this.name = name;
            return this;
        }

        public Builder setName(@Nullable String name) {
            this.name = Input.ofNullable(name);
            return this;
        }

        public Builder setPatterns(@Nullable Input<List<String>> patterns) {
            this.patterns = patterns;
            return this;
        }

        public Builder setPatterns(@Nullable List<String> patterns) {
            this.patterns = Input.ofNullable(patterns);
            return this;
        }

        public Builder setPriceInfo(@Nullable Input<GoogleCloudRetailV2PriceInfoArgs> priceInfo) {
            this.priceInfo = priceInfo;
            return this;
        }

        public Builder setPriceInfo(@Nullable GoogleCloudRetailV2PriceInfoArgs priceInfo) {
            this.priceInfo = Input.ofNullable(priceInfo);
            return this;
        }

        public Builder setPrimaryProductId(@Nullable Input<String> primaryProductId) {
            this.primaryProductId = primaryProductId;
            return this;
        }

        public Builder setPrimaryProductId(@Nullable String primaryProductId) {
            this.primaryProductId = Input.ofNullable(primaryProductId);
            return this;
        }

        public Builder setProductId(Input<String> productId) {
            this.productId = Objects.requireNonNull(productId);
            return this;
        }

        public Builder setProductId(String productId) {
            this.productId = Input.of(Objects.requireNonNull(productId));
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setPromotions(@Nullable Input<List<GoogleCloudRetailV2PromotionArgs>> promotions) {
            this.promotions = promotions;
            return this;
        }

        public Builder setPromotions(@Nullable List<GoogleCloudRetailV2PromotionArgs> promotions) {
            this.promotions = Input.ofNullable(promotions);
            return this;
        }

        public Builder setPublishTime(@Nullable Input<String> publishTime) {
            this.publishTime = publishTime;
            return this;
        }

        public Builder setPublishTime(@Nullable String publishTime) {
            this.publishTime = Input.ofNullable(publishTime);
            return this;
        }

        public Builder setRating(@Nullable Input<GoogleCloudRetailV2RatingArgs> rating) {
            this.rating = rating;
            return this;
        }

        public Builder setRating(@Nullable GoogleCloudRetailV2RatingArgs rating) {
            this.rating = Input.ofNullable(rating);
            return this;
        }

        public Builder setRetrievableFields(@Nullable Input<String> retrievableFields) {
            this.retrievableFields = retrievableFields;
            return this;
        }

        public Builder setRetrievableFields(@Nullable String retrievableFields) {
            this.retrievableFields = Input.ofNullable(retrievableFields);
            return this;
        }

        public Builder setSizes(@Nullable Input<List<String>> sizes) {
            this.sizes = sizes;
            return this;
        }

        public Builder setSizes(@Nullable List<String> sizes) {
            this.sizes = Input.ofNullable(sizes);
            return this;
        }

        public Builder setTags(@Nullable Input<List<String>> tags) {
            this.tags = tags;
            return this;
        }

        public Builder setTags(@Nullable List<String> tags) {
            this.tags = Input.ofNullable(tags);
            return this;
        }

        public Builder setTitle(Input<String> title) {
            this.title = Objects.requireNonNull(title);
            return this;
        }

        public Builder setTitle(String title) {
            this.title = Input.of(Objects.requireNonNull(title));
            return this;
        }

        public Builder setTtl(@Nullable Input<String> ttl) {
            this.ttl = ttl;
            return this;
        }

        public Builder setTtl(@Nullable String ttl) {
            this.ttl = Input.ofNullable(ttl);
            return this;
        }

        public Builder setType(@Nullable Input<ProductType> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable ProductType type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public Builder setUri(@Nullable Input<String> uri) {
            this.uri = uri;
            return this;
        }

        public Builder setUri(@Nullable String uri) {
            this.uri = Input.ofNullable(uri);
            return this;
        }

        public ProductArgs build() {
            return new ProductArgs(attributes, audience, availability, availableQuantity, availableTime, branchId, brands, catalogId, categories, collectionMemberIds, colorInfo, conditions, description, expireTime, fulfillmentInfo, gtin, id, images, languageCode, location, materials, name, patterns, priceInfo, primaryProductId, productId, project, promotions, publishTime, rating, retrievableFields, sizes, tags, title, ttl, type, uri);
        }
    }
}
