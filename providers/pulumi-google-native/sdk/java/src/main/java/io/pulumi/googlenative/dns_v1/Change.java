// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dns_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.OutputExport;
import io.pulumi.core.annotations.ResourceType;
import io.pulumi.googlenative.Utilities;
import io.pulumi.googlenative.dns_v1.ChangeArgs;
import io.pulumi.googlenative.dns_v1.outputs.ResourceRecordSetResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Atomically updates the ResourceRecordSet collection.
 * Auto-naming is currently not supported for this resource.
 * Note - this resource's API doesn't support deletion. When deleted, the resource will persist
 * on Google Cloud even though it will be deleted from Pulumi state.
 * 
 */
@ResourceType(type="google-native:dns/v1:Change")
public class Change extends io.pulumi.resources.CustomResource {
    /**
     * Which ResourceRecordSets to add?
     * 
     */
    @OutputExport(name="additions", type=List.class, parameters={ResourceRecordSetResponse.class})
    private Output<List<ResourceRecordSetResponse>> additions;

    /**
     * @return Which ResourceRecordSets to add?
     * 
     */
    public Output<List<ResourceRecordSetResponse>> getAdditions() {
        return this.additions;
    }
    /**
     * Which ResourceRecordSets to remove? Must match existing data exactly.
     * 
     */
    @OutputExport(name="deletions", type=List.class, parameters={ResourceRecordSetResponse.class})
    private Output<List<ResourceRecordSetResponse>> deletions;

    /**
     * @return Which ResourceRecordSets to remove? Must match existing data exactly.
     * 
     */
    public Output<List<ResourceRecordSetResponse>> getDeletions() {
        return this.deletions;
    }
    /**
     * If the DNS queries for the zone will be served.
     * 
     */
    @OutputExport(name="isServing", type=Boolean.class, parameters={})
    private Output<Boolean> isServing;

    /**
     * @return If the DNS queries for the zone will be served.
     * 
     */
    public Output<Boolean> getIsServing() {
        return this.isServing;
    }
    @OutputExport(name="kind", type=String.class, parameters={})
    private Output<String> kind;

    public Output<String> getKind() {
        return this.kind;
    }
    /**
     * The time that this operation was started by the server (output only). This is in RFC3339 text format.
     * 
     */
    @OutputExport(name="startTime", type=String.class, parameters={})
    private Output<String> startTime;

    /**
     * @return The time that this operation was started by the server (output only). This is in RFC3339 text format.
     * 
     */
    public Output<String> getStartTime() {
        return this.startTime;
    }
    /**
     * Status of the operation (output only). A status of "done" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.
     * 
     */
    @OutputExport(name="status", type=String.class, parameters={})
    private Output<String> status;

    /**
     * @return Status of the operation (output only). A status of "done" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet.
     * 
     */
    public Output<String> getStatus() {
        return this.status;
    }

    public interface BuilderApplicator {
        public void apply(ChangeArgs.Builder a);
    }
    private static io.pulumi.googlenative.dns_v1.ChangeArgs buildArgs(BuilderApplicator argsBuilder) {
        final var builder = io.pulumi.googlenative.dns_v1.ChangeArgs.builder();
        argsBuilder.apply(builder);
        return builder.build();
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param argsBuilder A function that configures a passed builder.
     */
    public Change(String name, BuilderApplicator argsBuilder) {
        this(name, buildArgs(argsBuilder), null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Change(String name) {
        this(name, ChangeArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Change(String name, ChangeArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Change(String name, ChangeArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:dns/v1:Change", name, args == null ? ChangeArgs.Empty : args, makeResourceOptions(options, Output.empty()));
    }

    private Change(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("google-native:dns/v1:Change", name, null, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Change get(String name, Output<String> id, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new Change(name, id, options);
    }
}
