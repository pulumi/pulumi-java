// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.dlp_v2.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.dlp_v2.enums.GooglePrivacyDlpV2BigQueryOptionsSampleMethod;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2BigQueryTableArgs;
import io.pulumi.googlenative.dlp_v2.inputs.GooglePrivacyDlpV2FieldIdArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Options defining BigQuery table and row identifiers.
 * 
 */
public final class GooglePrivacyDlpV2BigQueryOptionsArgs extends io.pulumi.resources.ResourceArgs {

    public static final GooglePrivacyDlpV2BigQueryOptionsArgs Empty = new GooglePrivacyDlpV2BigQueryOptionsArgs();

    /**
     * References to fields excluded from scanning. This allows you to skip inspection of entire columns which you know have no findings.
     * 
     */
    @InputImport(name="excludedFields")
      private final @Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> excludedFields;

    public Input<List<GooglePrivacyDlpV2FieldIdArgs>> getExcludedFields() {
        return this.excludedFields == null ? Input.empty() : this.excludedFields;
    }

    /**
     * Table fields that may uniquely identify a row within the table. When `actions.saveFindings.outputConfig.table` is specified, the values of columns specified here are available in the output table under `location.content_locations.record_location.record_key.id_values`. Nested fields such as `person.birthdate.year` are allowed.
     * 
     */
    @InputImport(name="identifyingFields")
      private final @Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> identifyingFields;

    public Input<List<GooglePrivacyDlpV2FieldIdArgs>> getIdentifyingFields() {
        return this.identifyingFields == null ? Input.empty() : this.identifyingFields;
    }

    /**
     * Limit scanning only to these fields.
     * 
     */
    @InputImport(name="includedFields")
      private final @Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> includedFields;

    public Input<List<GooglePrivacyDlpV2FieldIdArgs>> getIncludedFields() {
        return this.includedFields == null ? Input.empty() : this.includedFields;
    }

    /**
     * Max number of rows to scan. If the table has more rows than this value, the rest of the rows are omitted. If not set, or if set to 0, all rows will be scanned. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
     * 
     */
    @InputImport(name="rowsLimit")
      private final @Nullable Input<String> rowsLimit;

    public Input<String> getRowsLimit() {
        return this.rowsLimit == null ? Input.empty() : this.rowsLimit;
    }

    /**
     * Max percentage of rows to scan. The rest are omitted. The number of rows scanned is rounded down. Must be between 0 and 100, inclusively. Both 0 and 100 means no limit. Defaults to 0. Only one of rows_limit and rows_limit_percent can be specified. Cannot be used in conjunction with TimespanConfig.
     * 
     */
    @InputImport(name="rowsLimitPercent")
      private final @Nullable Input<Integer> rowsLimitPercent;

    public Input<Integer> getRowsLimitPercent() {
        return this.rowsLimitPercent == null ? Input.empty() : this.rowsLimitPercent;
    }

    @InputImport(name="sampleMethod")
      private final @Nullable Input<GooglePrivacyDlpV2BigQueryOptionsSampleMethod> sampleMethod;

    public Input<GooglePrivacyDlpV2BigQueryOptionsSampleMethod> getSampleMethod() {
        return this.sampleMethod == null ? Input.empty() : this.sampleMethod;
    }

    /**
     * Complete BigQuery table reference.
     * 
     */
    @InputImport(name="tableReference")
      private final @Nullable Input<GooglePrivacyDlpV2BigQueryTableArgs> tableReference;

    public Input<GooglePrivacyDlpV2BigQueryTableArgs> getTableReference() {
        return this.tableReference == null ? Input.empty() : this.tableReference;
    }

    public GooglePrivacyDlpV2BigQueryOptionsArgs(
        @Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> excludedFields,
        @Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> identifyingFields,
        @Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> includedFields,
        @Nullable Input<String> rowsLimit,
        @Nullable Input<Integer> rowsLimitPercent,
        @Nullable Input<GooglePrivacyDlpV2BigQueryOptionsSampleMethod> sampleMethod,
        @Nullable Input<GooglePrivacyDlpV2BigQueryTableArgs> tableReference) {
        this.excludedFields = excludedFields;
        this.identifyingFields = identifyingFields;
        this.includedFields = includedFields;
        this.rowsLimit = rowsLimit;
        this.rowsLimitPercent = rowsLimitPercent;
        this.sampleMethod = sampleMethod;
        this.tableReference = tableReference;
    }

    private GooglePrivacyDlpV2BigQueryOptionsArgs() {
        this.excludedFields = Input.empty();
        this.identifyingFields = Input.empty();
        this.includedFields = Input.empty();
        this.rowsLimit = Input.empty();
        this.rowsLimitPercent = Input.empty();
        this.sampleMethod = Input.empty();
        this.tableReference = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GooglePrivacyDlpV2BigQueryOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> excludedFields;
        private @Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> identifyingFields;
        private @Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> includedFields;
        private @Nullable Input<String> rowsLimit;
        private @Nullable Input<Integer> rowsLimitPercent;
        private @Nullable Input<GooglePrivacyDlpV2BigQueryOptionsSampleMethod> sampleMethod;
        private @Nullable Input<GooglePrivacyDlpV2BigQueryTableArgs> tableReference;

        public Builder() {
    	      // Empty
        }

        public Builder(GooglePrivacyDlpV2BigQueryOptionsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.excludedFields = defaults.excludedFields;
    	      this.identifyingFields = defaults.identifyingFields;
    	      this.includedFields = defaults.includedFields;
    	      this.rowsLimit = defaults.rowsLimit;
    	      this.rowsLimitPercent = defaults.rowsLimitPercent;
    	      this.sampleMethod = defaults.sampleMethod;
    	      this.tableReference = defaults.tableReference;
        }

        public Builder setExcludedFields(@Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> excludedFields) {
            this.excludedFields = excludedFields;
            return this;
        }

        public Builder setExcludedFields(@Nullable List<GooglePrivacyDlpV2FieldIdArgs> excludedFields) {
            this.excludedFields = Input.ofNullable(excludedFields);
            return this;
        }

        public Builder setIdentifyingFields(@Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> identifyingFields) {
            this.identifyingFields = identifyingFields;
            return this;
        }

        public Builder setIdentifyingFields(@Nullable List<GooglePrivacyDlpV2FieldIdArgs> identifyingFields) {
            this.identifyingFields = Input.ofNullable(identifyingFields);
            return this;
        }

        public Builder setIncludedFields(@Nullable Input<List<GooglePrivacyDlpV2FieldIdArgs>> includedFields) {
            this.includedFields = includedFields;
            return this;
        }

        public Builder setIncludedFields(@Nullable List<GooglePrivacyDlpV2FieldIdArgs> includedFields) {
            this.includedFields = Input.ofNullable(includedFields);
            return this;
        }

        public Builder setRowsLimit(@Nullable Input<String> rowsLimit) {
            this.rowsLimit = rowsLimit;
            return this;
        }

        public Builder setRowsLimit(@Nullable String rowsLimit) {
            this.rowsLimit = Input.ofNullable(rowsLimit);
            return this;
        }

        public Builder setRowsLimitPercent(@Nullable Input<Integer> rowsLimitPercent) {
            this.rowsLimitPercent = rowsLimitPercent;
            return this;
        }

        public Builder setRowsLimitPercent(@Nullable Integer rowsLimitPercent) {
            this.rowsLimitPercent = Input.ofNullable(rowsLimitPercent);
            return this;
        }

        public Builder setSampleMethod(@Nullable Input<GooglePrivacyDlpV2BigQueryOptionsSampleMethod> sampleMethod) {
            this.sampleMethod = sampleMethod;
            return this;
        }

        public Builder setSampleMethod(@Nullable GooglePrivacyDlpV2BigQueryOptionsSampleMethod sampleMethod) {
            this.sampleMethod = Input.ofNullable(sampleMethod);
            return this;
        }

        public Builder setTableReference(@Nullable Input<GooglePrivacyDlpV2BigQueryTableArgs> tableReference) {
            this.tableReference = tableReference;
            return this;
        }

        public Builder setTableReference(@Nullable GooglePrivacyDlpV2BigQueryTableArgs tableReference) {
            this.tableReference = Input.ofNullable(tableReference);
            return this;
        }
        public GooglePrivacyDlpV2BigQueryOptionsArgs build() {
            return new GooglePrivacyDlpV2BigQueryOptionsArgs(excludedFields, identifyingFields, includedFields, rowsLimit, rowsLimitPercent, sampleMethod, tableReference);
        }
    }
}
