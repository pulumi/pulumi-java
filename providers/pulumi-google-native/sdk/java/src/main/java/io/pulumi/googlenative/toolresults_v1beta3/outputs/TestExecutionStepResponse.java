// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.toolresults_v1beta3.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import io.pulumi.googlenative.toolresults_v1beta3.outputs.TestIssueResponse;
import io.pulumi.googlenative.toolresults_v1beta3.outputs.TestSuiteOverviewResponse;
import io.pulumi.googlenative.toolresults_v1beta3.outputs.TestTimingResponse;
import io.pulumi.googlenative.toolresults_v1beta3.outputs.ToolExecutionResponse;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class TestExecutionStepResponse {
    private final List<TestIssueResponse> testIssues;
    private final List<TestSuiteOverviewResponse> testSuiteOverviews;
    private final TestTimingResponse testTiming;
    private final ToolExecutionResponse toolExecution;

    @OutputCustomType.Constructor({"testIssues","testSuiteOverviews","testTiming","toolExecution"})
    private TestExecutionStepResponse(
        List<TestIssueResponse> testIssues,
        List<TestSuiteOverviewResponse> testSuiteOverviews,
        TestTimingResponse testTiming,
        ToolExecutionResponse toolExecution) {
        this.testIssues = Objects.requireNonNull(testIssues);
        this.testSuiteOverviews = Objects.requireNonNull(testSuiteOverviews);
        this.testTiming = Objects.requireNonNull(testTiming);
        this.toolExecution = Objects.requireNonNull(toolExecution);
    }

    public List<TestIssueResponse> getTestIssues() {
        return this.testIssues;
    }
    public List<TestSuiteOverviewResponse> getTestSuiteOverviews() {
        return this.testSuiteOverviews;
    }
    public TestTimingResponse getTestTiming() {
        return this.testTiming;
    }
    public ToolExecutionResponse getToolExecution() {
        return this.toolExecution;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TestExecutionStepResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<TestIssueResponse> testIssues;
        private List<TestSuiteOverviewResponse> testSuiteOverviews;
        private TestTimingResponse testTiming;
        private ToolExecutionResponse toolExecution;

        public Builder() {
    	      // Empty
        }

        public Builder(TestExecutionStepResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.testIssues = defaults.testIssues;
    	      this.testSuiteOverviews = defaults.testSuiteOverviews;
    	      this.testTiming = defaults.testTiming;
    	      this.toolExecution = defaults.toolExecution;
        }

        public Builder setTestIssues(List<TestIssueResponse> testIssues) {
            this.testIssues = Objects.requireNonNull(testIssues);
            return this;
        }

        public Builder setTestSuiteOverviews(List<TestSuiteOverviewResponse> testSuiteOverviews) {
            this.testSuiteOverviews = Objects.requireNonNull(testSuiteOverviews);
            return this;
        }

        public Builder setTestTiming(TestTimingResponse testTiming) {
            this.testTiming = Objects.requireNonNull(testTiming);
            return this;
        }

        public Builder setToolExecution(ToolExecutionResponse toolExecution) {
            this.toolExecution = Objects.requireNonNull(toolExecution);
            return this;
        }

        public TestExecutionStepResponse build() {
            return new TestExecutionStepResponse(testIssues, testSuiteOverviews, testTiming, toolExecution);
        }
    }
}
