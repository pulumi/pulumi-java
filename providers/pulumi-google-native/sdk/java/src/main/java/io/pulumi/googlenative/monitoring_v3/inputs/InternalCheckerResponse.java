// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.monitoring_v3.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class InternalCheckerResponse extends io.pulumi.resources.InvokeArgs {

    public static final InternalCheckerResponse Empty = new InternalCheckerResponse();

    @InputImport(name="displayName", required=true)
    private final String displayName;

    public String getDisplayName() {
        return this.displayName;
    }

    @InputImport(name="gcpZone", required=true)
    private final String gcpZone;

    public String getGcpZone() {
        return this.gcpZone;
    }

    @InputImport(name="name", required=true)
    private final String name;

    public String getName() {
        return this.name;
    }

    @InputImport(name="network", required=true)
    private final String network;

    public String getNetwork() {
        return this.network;
    }

    @InputImport(name="peerProjectId", required=true)
    private final String peerProjectId;

    public String getPeerProjectId() {
        return this.peerProjectId;
    }

    @InputImport(name="state", required=true)
    private final String state;

    public String getState() {
        return this.state;
    }

    public InternalCheckerResponse(
        String displayName,
        String gcpZone,
        String name,
        String network,
        String peerProjectId,
        String state) {
        this.displayName = Objects.requireNonNull(displayName, "expected parameter 'displayName' to be non-null");
        this.gcpZone = Objects.requireNonNull(gcpZone, "expected parameter 'gcpZone' to be non-null");
        this.name = Objects.requireNonNull(name, "expected parameter 'name' to be non-null");
        this.network = Objects.requireNonNull(network, "expected parameter 'network' to be non-null");
        this.peerProjectId = Objects.requireNonNull(peerProjectId, "expected parameter 'peerProjectId' to be non-null");
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
    }

    private InternalCheckerResponse() {
        this.displayName = null;
        this.gcpZone = null;
        this.name = null;
        this.network = null;
        this.peerProjectId = null;
        this.state = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(InternalCheckerResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String displayName;
        private String gcpZone;
        private String name;
        private String network;
        private String peerProjectId;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(InternalCheckerResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.displayName = defaults.displayName;
    	      this.gcpZone = defaults.gcpZone;
    	      this.name = defaults.name;
    	      this.network = defaults.network;
    	      this.peerProjectId = defaults.peerProjectId;
    	      this.state = defaults.state;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setGcpZone(String gcpZone) {
            this.gcpZone = Objects.requireNonNull(gcpZone);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setNetwork(String network) {
            this.network = Objects.requireNonNull(network);
            return this;
        }

        public Builder setPeerProjectId(String peerProjectId) {
            this.peerProjectId = Objects.requireNonNull(peerProjectId);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public InternalCheckerResponse build() {
            return new InternalCheckerResponse(displayName, gcpZone, name, network, peerProjectId, state);
        }
    }
}
