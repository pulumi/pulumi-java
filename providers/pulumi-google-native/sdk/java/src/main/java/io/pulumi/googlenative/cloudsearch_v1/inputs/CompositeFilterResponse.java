// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudsearch_v1.inputs;

import io.pulumi.core.annotations.Import;
import io.pulumi.googlenative.cloudsearch_v1.inputs.FilterResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class CompositeFilterResponse extends io.pulumi.resources.InvokeArgs {

    public static final CompositeFilterResponse Empty = new CompositeFilterResponse();

    /**
     * The logic operator of the sub filter.
     * 
     */
    @Import(name="logicOperator", required=true)
      private final String logicOperator;

    public String getLogicOperator() {
        return this.logicOperator;
    }

    /**
     * Sub filters.
     * 
     */
    @Import(name="subFilters", required=true)
      private final List<FilterResponse> subFilters;

    public List<FilterResponse> getSubFilters() {
        return this.subFilters;
    }

    public CompositeFilterResponse(
        String logicOperator,
        List<FilterResponse> subFilters) {
        this.logicOperator = Objects.requireNonNull(logicOperator, "expected parameter 'logicOperator' to be non-null");
        this.subFilters = Objects.requireNonNull(subFilters, "expected parameter 'subFilters' to be non-null");
    }

    private CompositeFilterResponse() {
        this.logicOperator = null;
        this.subFilters = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CompositeFilterResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String logicOperator;
        private List<FilterResponse> subFilters;

        public Builder() {
    	      // Empty
        }

        public Builder(CompositeFilterResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.logicOperator = defaults.logicOperator;
    	      this.subFilters = defaults.subFilters;
        }

        public Builder logicOperator(String logicOperator) {
            this.logicOperator = Objects.requireNonNull(logicOperator);
            return this;
        }

        public Builder subFilters(List<FilterResponse> subFilters) {
            this.subFilters = Objects.requireNonNull(subFilters);
            return this;
        }
        public CompositeFilterResponse build() {
            return new CompositeFilterResponse(logicOperator, subFilters);
        }
    }
}
