// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.datacatalog_v1beta1;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import io.pulumi.googlenative.datacatalog_v1beta1.enums.EntryType;
import io.pulumi.googlenative.datacatalog_v1beta1.inputs.GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecArgs;
import io.pulumi.googlenative.datacatalog_v1beta1.inputs.GoogleCloudDatacatalogV1beta1BigQueryTableSpecArgs;
import io.pulumi.googlenative.datacatalog_v1beta1.inputs.GoogleCloudDatacatalogV1beta1GcsFilesetSpecArgs;
import io.pulumi.googlenative.datacatalog_v1beta1.inputs.GoogleCloudDatacatalogV1beta1SchemaArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class EntryArgs extends io.pulumi.resources.ResourceArgs {

    public static final EntryArgs Empty = new EntryArgs();

    @InputImport(name="bigqueryDateShardedSpec")
    private final @Nullable Input<GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecArgs> bigqueryDateShardedSpec;

    public Input<GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecArgs> getBigqueryDateShardedSpec() {
        return this.bigqueryDateShardedSpec == null ? Input.empty() : this.bigqueryDateShardedSpec;
    }

    @InputImport(name="bigqueryTableSpec")
    private final @Nullable Input<GoogleCloudDatacatalogV1beta1BigQueryTableSpecArgs> bigqueryTableSpec;

    public Input<GoogleCloudDatacatalogV1beta1BigQueryTableSpecArgs> getBigqueryTableSpec() {
        return this.bigqueryTableSpec == null ? Input.empty() : this.bigqueryTableSpec;
    }

    @InputImport(name="description")
    private final @Nullable Input<String> description;

    public Input<String> getDescription() {
        return this.description == null ? Input.empty() : this.description;
    }

    @InputImport(name="displayName")
    private final @Nullable Input<String> displayName;

    public Input<String> getDisplayName() {
        return this.displayName == null ? Input.empty() : this.displayName;
    }

    @InputImport(name="entryGroupId", required=true)
    private final Input<String> entryGroupId;

    public Input<String> getEntryGroupId() {
        return this.entryGroupId;
    }

    @InputImport(name="entryId", required=true)
    private final Input<String> entryId;

    public Input<String> getEntryId() {
        return this.entryId;
    }

    @InputImport(name="gcsFilesetSpec")
    private final @Nullable Input<GoogleCloudDatacatalogV1beta1GcsFilesetSpecArgs> gcsFilesetSpec;

    public Input<GoogleCloudDatacatalogV1beta1GcsFilesetSpecArgs> getGcsFilesetSpec() {
        return this.gcsFilesetSpec == null ? Input.empty() : this.gcsFilesetSpec;
    }

    @InputImport(name="linkedResource")
    private final @Nullable Input<String> linkedResource;

    public Input<String> getLinkedResource() {
        return this.linkedResource == null ? Input.empty() : this.linkedResource;
    }

    @InputImport(name="location")
    private final @Nullable Input<String> location;

    public Input<String> getLocation() {
        return this.location == null ? Input.empty() : this.location;
    }

    @InputImport(name="project")
    private final @Nullable Input<String> project;

    public Input<String> getProject() {
        return this.project == null ? Input.empty() : this.project;
    }

    @InputImport(name="schema")
    private final @Nullable Input<GoogleCloudDatacatalogV1beta1SchemaArgs> schema;

    public Input<GoogleCloudDatacatalogV1beta1SchemaArgs> getSchema() {
        return this.schema == null ? Input.empty() : this.schema;
    }

    @InputImport(name="type")
    private final @Nullable Input<EntryType> type;

    public Input<EntryType> getType() {
        return this.type == null ? Input.empty() : this.type;
    }

    @InputImport(name="userSpecifiedSystem")
    private final @Nullable Input<String> userSpecifiedSystem;

    public Input<String> getUserSpecifiedSystem() {
        return this.userSpecifiedSystem == null ? Input.empty() : this.userSpecifiedSystem;
    }

    @InputImport(name="userSpecifiedType")
    private final @Nullable Input<String> userSpecifiedType;

    public Input<String> getUserSpecifiedType() {
        return this.userSpecifiedType == null ? Input.empty() : this.userSpecifiedType;
    }

    public EntryArgs(
        @Nullable Input<GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecArgs> bigqueryDateShardedSpec,
        @Nullable Input<GoogleCloudDatacatalogV1beta1BigQueryTableSpecArgs> bigqueryTableSpec,
        @Nullable Input<String> description,
        @Nullable Input<String> displayName,
        Input<String> entryGroupId,
        Input<String> entryId,
        @Nullable Input<GoogleCloudDatacatalogV1beta1GcsFilesetSpecArgs> gcsFilesetSpec,
        @Nullable Input<String> linkedResource,
        @Nullable Input<String> location,
        @Nullable Input<String> project,
        @Nullable Input<GoogleCloudDatacatalogV1beta1SchemaArgs> schema,
        @Nullable Input<EntryType> type,
        @Nullable Input<String> userSpecifiedSystem,
        @Nullable Input<String> userSpecifiedType) {
        this.bigqueryDateShardedSpec = bigqueryDateShardedSpec;
        this.bigqueryTableSpec = bigqueryTableSpec;
        this.description = description;
        this.displayName = displayName;
        this.entryGroupId = Objects.requireNonNull(entryGroupId, "expected parameter 'entryGroupId' to be non-null");
        this.entryId = Objects.requireNonNull(entryId, "expected parameter 'entryId' to be non-null");
        this.gcsFilesetSpec = gcsFilesetSpec;
        this.linkedResource = linkedResource;
        this.location = location;
        this.project = project;
        this.schema = schema;
        this.type = type;
        this.userSpecifiedSystem = userSpecifiedSystem;
        this.userSpecifiedType = userSpecifiedType;
    }

    private EntryArgs() {
        this.bigqueryDateShardedSpec = Input.empty();
        this.bigqueryTableSpec = Input.empty();
        this.description = Input.empty();
        this.displayName = Input.empty();
        this.entryGroupId = Input.empty();
        this.entryId = Input.empty();
        this.gcsFilesetSpec = Input.empty();
        this.linkedResource = Input.empty();
        this.location = Input.empty();
        this.project = Input.empty();
        this.schema = Input.empty();
        this.type = Input.empty();
        this.userSpecifiedSystem = Input.empty();
        this.userSpecifiedType = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EntryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecArgs> bigqueryDateShardedSpec;
        private @Nullable Input<GoogleCloudDatacatalogV1beta1BigQueryTableSpecArgs> bigqueryTableSpec;
        private @Nullable Input<String> description;
        private @Nullable Input<String> displayName;
        private Input<String> entryGroupId;
        private Input<String> entryId;
        private @Nullable Input<GoogleCloudDatacatalogV1beta1GcsFilesetSpecArgs> gcsFilesetSpec;
        private @Nullable Input<String> linkedResource;
        private @Nullable Input<String> location;
        private @Nullable Input<String> project;
        private @Nullable Input<GoogleCloudDatacatalogV1beta1SchemaArgs> schema;
        private @Nullable Input<EntryType> type;
        private @Nullable Input<String> userSpecifiedSystem;
        private @Nullable Input<String> userSpecifiedType;

        public Builder() {
    	      // Empty
        }

        public Builder(EntryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bigqueryDateShardedSpec = defaults.bigqueryDateShardedSpec;
    	      this.bigqueryTableSpec = defaults.bigqueryTableSpec;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.entryGroupId = defaults.entryGroupId;
    	      this.entryId = defaults.entryId;
    	      this.gcsFilesetSpec = defaults.gcsFilesetSpec;
    	      this.linkedResource = defaults.linkedResource;
    	      this.location = defaults.location;
    	      this.project = defaults.project;
    	      this.schema = defaults.schema;
    	      this.type = defaults.type;
    	      this.userSpecifiedSystem = defaults.userSpecifiedSystem;
    	      this.userSpecifiedType = defaults.userSpecifiedType;
        }

        public Builder setBigqueryDateShardedSpec(@Nullable Input<GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecArgs> bigqueryDateShardedSpec) {
            this.bigqueryDateShardedSpec = bigqueryDateShardedSpec;
            return this;
        }

        public Builder setBigqueryDateShardedSpec(@Nullable GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpecArgs bigqueryDateShardedSpec) {
            this.bigqueryDateShardedSpec = Input.ofNullable(bigqueryDateShardedSpec);
            return this;
        }

        public Builder setBigqueryTableSpec(@Nullable Input<GoogleCloudDatacatalogV1beta1BigQueryTableSpecArgs> bigqueryTableSpec) {
            this.bigqueryTableSpec = bigqueryTableSpec;
            return this;
        }

        public Builder setBigqueryTableSpec(@Nullable GoogleCloudDatacatalogV1beta1BigQueryTableSpecArgs bigqueryTableSpec) {
            this.bigqueryTableSpec = Input.ofNullable(bigqueryTableSpec);
            return this;
        }

        public Builder setDescription(@Nullable Input<String> description) {
            this.description = description;
            return this;
        }

        public Builder setDescription(@Nullable String description) {
            this.description = Input.ofNullable(description);
            return this;
        }

        public Builder setDisplayName(@Nullable Input<String> displayName) {
            this.displayName = displayName;
            return this;
        }

        public Builder setDisplayName(@Nullable String displayName) {
            this.displayName = Input.ofNullable(displayName);
            return this;
        }

        public Builder setEntryGroupId(Input<String> entryGroupId) {
            this.entryGroupId = Objects.requireNonNull(entryGroupId);
            return this;
        }

        public Builder setEntryGroupId(String entryGroupId) {
            this.entryGroupId = Input.of(Objects.requireNonNull(entryGroupId));
            return this;
        }

        public Builder setEntryId(Input<String> entryId) {
            this.entryId = Objects.requireNonNull(entryId);
            return this;
        }

        public Builder setEntryId(String entryId) {
            this.entryId = Input.of(Objects.requireNonNull(entryId));
            return this;
        }

        public Builder setGcsFilesetSpec(@Nullable Input<GoogleCloudDatacatalogV1beta1GcsFilesetSpecArgs> gcsFilesetSpec) {
            this.gcsFilesetSpec = gcsFilesetSpec;
            return this;
        }

        public Builder setGcsFilesetSpec(@Nullable GoogleCloudDatacatalogV1beta1GcsFilesetSpecArgs gcsFilesetSpec) {
            this.gcsFilesetSpec = Input.ofNullable(gcsFilesetSpec);
            return this;
        }

        public Builder setLinkedResource(@Nullable Input<String> linkedResource) {
            this.linkedResource = linkedResource;
            return this;
        }

        public Builder setLinkedResource(@Nullable String linkedResource) {
            this.linkedResource = Input.ofNullable(linkedResource);
            return this;
        }

        public Builder setLocation(@Nullable Input<String> location) {
            this.location = location;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = Input.ofNullable(location);
            return this;
        }

        public Builder setProject(@Nullable Input<String> project) {
            this.project = project;
            return this;
        }

        public Builder setProject(@Nullable String project) {
            this.project = Input.ofNullable(project);
            return this;
        }

        public Builder setSchema(@Nullable Input<GoogleCloudDatacatalogV1beta1SchemaArgs> schema) {
            this.schema = schema;
            return this;
        }

        public Builder setSchema(@Nullable GoogleCloudDatacatalogV1beta1SchemaArgs schema) {
            this.schema = Input.ofNullable(schema);
            return this;
        }

        public Builder setType(@Nullable Input<EntryType> type) {
            this.type = type;
            return this;
        }

        public Builder setType(@Nullable EntryType type) {
            this.type = Input.ofNullable(type);
            return this;
        }

        public Builder setUserSpecifiedSystem(@Nullable Input<String> userSpecifiedSystem) {
            this.userSpecifiedSystem = userSpecifiedSystem;
            return this;
        }

        public Builder setUserSpecifiedSystem(@Nullable String userSpecifiedSystem) {
            this.userSpecifiedSystem = Input.ofNullable(userSpecifiedSystem);
            return this;
        }

        public Builder setUserSpecifiedType(@Nullable Input<String> userSpecifiedType) {
            this.userSpecifiedType = userSpecifiedType;
            return this;
        }

        public Builder setUserSpecifiedType(@Nullable String userSpecifiedType) {
            this.userSpecifiedType = Input.ofNullable(userSpecifiedType);
            return this;
        }

        public EntryArgs build() {
            return new EntryArgs(bigqueryDateShardedSpec, bigqueryTableSpec, description, displayName, entryGroupId, entryId, gcsFilesetSpec, linkedResource, location, project, schema, type, userSpecifiedSystem, userSpecifiedType);
        }
    }
}
