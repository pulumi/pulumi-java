// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudsearch_v1.outputs;

import io.pulumi.core.annotations.OutputCustomType;
import io.pulumi.googlenative.cloudsearch_v1.outputs.GSuitePrincipalResponse;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@OutputCustomType
public final class GetDataSourceResult {
    /**
     * If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
     * 
     */
    private final Boolean disableModifications;
    /**
     * Disable serving any search or assist results.
     * 
     */
    private final Boolean disableServing;
    /**
     * Display name of the datasource The maximum length is 300 characters.
     * 
     */
    private final String displayName;
    /**
     * List of service accounts that have indexing access.
     * 
     */
    private final List<String> indexingServiceAccounts;
    /**
     * This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
     * 
     */
    private final List<GSuitePrincipalResponse> itemsVisibility;
    /**
     * Name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
     * 
     */
    private final String name;
    /**
     * IDs of the Long Running Operations (LROs) currently running for this schema.
     * 
     */
    private final List<String> operationIds;
    /**
     * Can a user request to get thumbnail URI for Items indexed in this data source.
     * 
     */
    private final Boolean returnThumbnailUrls;
    /**
     * A short name or alias for the source. This value will be used to match the 'source' operator. For example, if the short name is *<value>* then queries like *source:<value>* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with 'google' and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
     * 
     */
    private final String shortName;

    @OutputCustomType.Constructor
    private GetDataSourceResult(
        @OutputCustomType.Parameter("disableModifications") Boolean disableModifications,
        @OutputCustomType.Parameter("disableServing") Boolean disableServing,
        @OutputCustomType.Parameter("displayName") String displayName,
        @OutputCustomType.Parameter("indexingServiceAccounts") List<String> indexingServiceAccounts,
        @OutputCustomType.Parameter("itemsVisibility") List<GSuitePrincipalResponse> itemsVisibility,
        @OutputCustomType.Parameter("name") String name,
        @OutputCustomType.Parameter("operationIds") List<String> operationIds,
        @OutputCustomType.Parameter("returnThumbnailUrls") Boolean returnThumbnailUrls,
        @OutputCustomType.Parameter("shortName") String shortName) {
        this.disableModifications = disableModifications;
        this.disableServing = disableServing;
        this.displayName = displayName;
        this.indexingServiceAccounts = indexingServiceAccounts;
        this.itemsVisibility = itemsVisibility;
        this.name = name;
        this.operationIds = operationIds;
        this.returnThumbnailUrls = returnThumbnailUrls;
        this.shortName = shortName;
    }

    /**
     * If true, sets the datasource to read-only mode. In read-only mode, the Indexing API rejects any requests to index or delete items in this source. Enabling read-only mode does not stop the processing of previously accepted data.
     * 
    */
    public Boolean getDisableModifications() {
        return this.disableModifications;
    }
    /**
     * Disable serving any search or assist results.
     * 
    */
    public Boolean getDisableServing() {
        return this.disableServing;
    }
    /**
     * Display name of the datasource The maximum length is 300 characters.
     * 
    */
    public String getDisplayName() {
        return this.displayName;
    }
    /**
     * List of service accounts that have indexing access.
     * 
    */
    public List<String> getIndexingServiceAccounts() {
        return this.indexingServiceAccounts;
    }
    /**
     * This field restricts visibility to items at the datasource level. Items within the datasource are restricted to the union of users and groups included in this field. Note that, this does not ensure access to a specific item, as users need to have ACL permissions on the contained items. This ensures a high level access on the entire datasource, and that the individual items are not shared outside this visibility.
     * 
    */
    public List<GSuitePrincipalResponse> getItemsVisibility() {
        return this.itemsVisibility;
    }
    /**
     * Name of the datasource resource. Format: datasources/{source_id}. The name is ignored when creating a datasource.
     * 
    */
    public String getName() {
        return this.name;
    }
    /**
     * IDs of the Long Running Operations (LROs) currently running for this schema.
     * 
    */
    public List<String> getOperationIds() {
        return this.operationIds;
    }
    /**
     * Can a user request to get thumbnail URI for Items indexed in this data source.
     * 
    */
    public Boolean getReturnThumbnailUrls() {
        return this.returnThumbnailUrls;
    }
    /**
     * A short name or alias for the source. This value will be used to match the 'source' operator. For example, if the short name is *<value>* then queries like *source:<value>* will only return results for this source. The value must be unique across all datasources. The value must only contain alphanumeric characters (a-zA-Z0-9). The value cannot start with 'google' and cannot be one of the following: mail, gmail, docs, drive, groups, sites, calendar, hangouts, gplus, keep, people, teams. Its maximum length is 32 characters.
     * 
    */
    public String getShortName() {
        return this.shortName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataSourceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean disableModifications;
        private Boolean disableServing;
        private String displayName;
        private List<String> indexingServiceAccounts;
        private List<GSuitePrincipalResponse> itemsVisibility;
        private String name;
        private List<String> operationIds;
        private Boolean returnThumbnailUrls;
        private String shortName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDataSourceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.disableModifications = defaults.disableModifications;
    	      this.disableServing = defaults.disableServing;
    	      this.displayName = defaults.displayName;
    	      this.indexingServiceAccounts = defaults.indexingServiceAccounts;
    	      this.itemsVisibility = defaults.itemsVisibility;
    	      this.name = defaults.name;
    	      this.operationIds = defaults.operationIds;
    	      this.returnThumbnailUrls = defaults.returnThumbnailUrls;
    	      this.shortName = defaults.shortName;
        }

        public Builder setDisableModifications(Boolean disableModifications) {
            this.disableModifications = Objects.requireNonNull(disableModifications);
            return this;
        }

        public Builder setDisableServing(Boolean disableServing) {
            this.disableServing = Objects.requireNonNull(disableServing);
            return this;
        }

        public Builder setDisplayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }

        public Builder setIndexingServiceAccounts(List<String> indexingServiceAccounts) {
            this.indexingServiceAccounts = Objects.requireNonNull(indexingServiceAccounts);
            return this;
        }

        public Builder setItemsVisibility(List<GSuitePrincipalResponse> itemsVisibility) {
            this.itemsVisibility = Objects.requireNonNull(itemsVisibility);
            return this;
        }

        public Builder setName(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }

        public Builder setOperationIds(List<String> operationIds) {
            this.operationIds = Objects.requireNonNull(operationIds);
            return this;
        }

        public Builder setReturnThumbnailUrls(Boolean returnThumbnailUrls) {
            this.returnThumbnailUrls = Objects.requireNonNull(returnThumbnailUrls);
            return this;
        }

        public Builder setShortName(String shortName) {
            this.shortName = Objects.requireNonNull(shortName);
            return this;
        }
        public GetDataSourceResult build() {
            return new GetDataSourceResult(disableModifications, disableServing, displayName, indexingServiceAccounts, itemsVisibility, name, operationIds, returnThumbnailUrls, shortName);
        }
    }
}
