// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.bigtableadmin_v2.outputs;

import io.pulumi.core.internal.annotations.OutputCustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@OutputCustomType
public final class SingleClusterRoutingResponse {
    private final Boolean allowTransactionalWrites;
    private final String clusterId;

    @OutputCustomType.Constructor({"allowTransactionalWrites","clusterId"})
    private SingleClusterRoutingResponse(
        Boolean allowTransactionalWrites,
        String clusterId) {
        this.allowTransactionalWrites = Objects.requireNonNull(allowTransactionalWrites);
        this.clusterId = Objects.requireNonNull(clusterId);
    }

    public Boolean getAllowTransactionalWrites() {
        return this.allowTransactionalWrites;
    }
    public String getClusterId() {
        return this.clusterId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SingleClusterRoutingResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean allowTransactionalWrites;
        private String clusterId;

        public Builder() {
    	      // Empty
        }

        public Builder(SingleClusterRoutingResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowTransactionalWrites = defaults.allowTransactionalWrites;
    	      this.clusterId = defaults.clusterId;
        }

        public Builder setAllowTransactionalWrites(Boolean allowTransactionalWrites) {
            this.allowTransactionalWrites = Objects.requireNonNull(allowTransactionalWrites);
            return this;
        }

        public Builder setClusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }

        public SingleClusterRoutingResponse build() {
            return new SingleClusterRoutingResponse(allowTransactionalWrites, clusterId);
        }
    }
}
