// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.containeranalysis_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class SignatureResponse extends io.pulumi.resources.InvokeArgs {

    public static final SignatureResponse Empty = new SignatureResponse();

    @InputImport(name="publicKeyId", required=true)
    private final String publicKeyId;

    public String getPublicKeyId() {
        return this.publicKeyId;
    }

    @InputImport(name="signature", required=true)
    private final String signature;

    public String getSignature() {
        return this.signature;
    }

    public SignatureResponse(
        String publicKeyId,
        String signature) {
        this.publicKeyId = Objects.requireNonNull(publicKeyId, "expected parameter 'publicKeyId' to be non-null");
        this.signature = Objects.requireNonNull(signature, "expected parameter 'signature' to be non-null");
    }

    private SignatureResponse() {
        this.publicKeyId = null;
        this.signature = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SignatureResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String publicKeyId;
        private String signature;

        public Builder() {
    	      // Empty
        }

        public Builder(SignatureResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.publicKeyId = defaults.publicKeyId;
    	      this.signature = defaults.signature;
        }

        public Builder setPublicKeyId(String publicKeyId) {
            this.publicKeyId = Objects.requireNonNull(publicKeyId);
            return this;
        }

        public Builder setSignature(String signature) {
            this.signature = Objects.requireNonNull(signature);
            return this;
        }

        public SignatureResponse build() {
            return new SignatureResponse(publicKeyId, signature);
        }
    }
}
