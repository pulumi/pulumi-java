// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.run_v1.outputs;

import io.pulumi.core.annotations.CustomType;
import io.pulumi.googlenative.run_v1.outputs.ObjectMetaResponse;
import io.pulumi.googlenative.run_v1.outputs.ServiceSpecResponse;
import io.pulumi.googlenative.run_v1.outputs.ServiceStatusResponse;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetServiceResult {
    /**
     * The API version for this call such as "serving.knative.dev/v1".
     * 
     */
    private final String apiVersion;
    /**
     * The kind of resource, in this case "Service".
     * 
     */
    private final String kind;
    /**
     * Metadata associated with this Service, including name, namespace, labels, and annotations. Cloud Run (fully managed) uses the following annotation keys to configure features on a Service: * `run.googleapis.com/ingress` sets the ingress settings for the Service. See [the ingress settings documentation](/run/docs/securing/ingress) for details on configuring ingress settings. * `run.googleapis.com/ingress-status` is output-only and contains the currently active ingress settings for the Service. `run.googleapis.com/ingress-status` may differ from `run.googleapis.com/ingress` while the system is processing a change to `run.googleapis.com/ingress` or if the system failed to process a change to `run.googleapis.com/ingress`. When the system has processed all changes successfully `run.googleapis.com/ingress-status` and `run.googleapis.com/ingress` are equal.
     * 
     */
    private final ObjectMetaResponse metadata;
    /**
     * Spec holds the desired state of the Service (from the client).
     * 
     */
    private final ServiceSpecResponse spec;
    /**
     * Status communicates the observed state of the Service (from the controller).
     * 
     */
    private final ServiceStatusResponse status;

    @CustomType.Constructor
    private GetServiceResult(
        @CustomType.Parameter("apiVersion") String apiVersion,
        @CustomType.Parameter("kind") String kind,
        @CustomType.Parameter("metadata") ObjectMetaResponse metadata,
        @CustomType.Parameter("spec") ServiceSpecResponse spec,
        @CustomType.Parameter("status") ServiceStatusResponse status) {
        this.apiVersion = apiVersion;
        this.kind = kind;
        this.metadata = metadata;
        this.spec = spec;
        this.status = status;
    }

    /**
     * The API version for this call such as "serving.knative.dev/v1".
     * 
    */
    public String apiVersion() {
        return this.apiVersion;
    }
    /**
     * The kind of resource, in this case "Service".
     * 
    */
    public String kind() {
        return this.kind;
    }
    /**
     * Metadata associated with this Service, including name, namespace, labels, and annotations. Cloud Run (fully managed) uses the following annotation keys to configure features on a Service: * `run.googleapis.com/ingress` sets the ingress settings for the Service. See [the ingress settings documentation](/run/docs/securing/ingress) for details on configuring ingress settings. * `run.googleapis.com/ingress-status` is output-only and contains the currently active ingress settings for the Service. `run.googleapis.com/ingress-status` may differ from `run.googleapis.com/ingress` while the system is processing a change to `run.googleapis.com/ingress` or if the system failed to process a change to `run.googleapis.com/ingress`. When the system has processed all changes successfully `run.googleapis.com/ingress-status` and `run.googleapis.com/ingress` are equal.
     * 
    */
    public ObjectMetaResponse metadata() {
        return this.metadata;
    }
    /**
     * Spec holds the desired state of the Service (from the client).
     * 
    */
    public ServiceSpecResponse spec() {
        return this.spec;
    }
    /**
     * Status communicates the observed state of the Service (from the controller).
     * 
    */
    public ServiceStatusResponse status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String apiVersion;
        private String kind;
        private ObjectMetaResponse metadata;
        private ServiceSpecResponse spec;
        private ServiceStatusResponse status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apiVersion = defaults.apiVersion;
    	      this.kind = defaults.kind;
    	      this.metadata = defaults.metadata;
    	      this.spec = defaults.spec;
    	      this.status = defaults.status;
        }

        public Builder apiVersion(String apiVersion) {
            this.apiVersion = Objects.requireNonNull(apiVersion);
            return this;
        }
        public Builder kind(String kind) {
            this.kind = Objects.requireNonNull(kind);
            return this;
        }
        public Builder metadata(ObjectMetaResponse metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }
        public Builder spec(ServiceSpecResponse spec) {
            this.spec = Objects.requireNonNull(spec);
            return this;
        }
        public Builder status(ServiceStatusResponse status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetServiceResult build() {
            return new GetServiceResult(apiVersion, kind, metadata, spec, status);
        }
    }
}
