// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.notebooks_v1.inputs;

import io.pulumi.core.internal.annotations.InputImport;
import java.lang.String;
import java.util.Objects;


public final class UpgradeHistoryEntryResponse extends io.pulumi.resources.InvokeArgs {

    public static final UpgradeHistoryEntryResponse Empty = new UpgradeHistoryEntryResponse();

    @InputImport(name="action", required=true)
    private final String action;

    public String getAction() {
        return this.action;
    }

    @InputImport(name="containerImage", required=true)
    private final String containerImage;

    public String getContainerImage() {
        return this.containerImage;
    }

    @InputImport(name="createTime", required=true)
    private final String createTime;

    public String getCreateTime() {
        return this.createTime;
    }

    @InputImport(name="framework", required=true)
    private final String framework;

    public String getFramework() {
        return this.framework;
    }

    @InputImport(name="snapshot", required=true)
    private final String snapshot;

    public String getSnapshot() {
        return this.snapshot;
    }

    @InputImport(name="state", required=true)
    private final String state;

    public String getState() {
        return this.state;
    }

    @InputImport(name="targetImage", required=true)
    private final String targetImage;

    public String getTargetImage() {
        return this.targetImage;
    }

    @InputImport(name="targetVersion", required=true)
    private final String targetVersion;

    public String getTargetVersion() {
        return this.targetVersion;
    }

    @InputImport(name="version", required=true)
    private final String version;

    public String getVersion() {
        return this.version;
    }

    @InputImport(name="vmImage", required=true)
    private final String vmImage;

    public String getVmImage() {
        return this.vmImage;
    }

    public UpgradeHistoryEntryResponse(
        String action,
        String containerImage,
        String createTime,
        String framework,
        String snapshot,
        String state,
        String targetImage,
        String targetVersion,
        String version,
        String vmImage) {
        this.action = Objects.requireNonNull(action, "expected parameter 'action' to be non-null");
        this.containerImage = Objects.requireNonNull(containerImage, "expected parameter 'containerImage' to be non-null");
        this.createTime = Objects.requireNonNull(createTime, "expected parameter 'createTime' to be non-null");
        this.framework = Objects.requireNonNull(framework, "expected parameter 'framework' to be non-null");
        this.snapshot = Objects.requireNonNull(snapshot, "expected parameter 'snapshot' to be non-null");
        this.state = Objects.requireNonNull(state, "expected parameter 'state' to be non-null");
        this.targetImage = Objects.requireNonNull(targetImage, "expected parameter 'targetImage' to be non-null");
        this.targetVersion = Objects.requireNonNull(targetVersion, "expected parameter 'targetVersion' to be non-null");
        this.version = Objects.requireNonNull(version, "expected parameter 'version' to be non-null");
        this.vmImage = Objects.requireNonNull(vmImage, "expected parameter 'vmImage' to be non-null");
    }

    private UpgradeHistoryEntryResponse() {
        this.action = null;
        this.containerImage = null;
        this.createTime = null;
        this.framework = null;
        this.snapshot = null;
        this.state = null;
        this.targetImage = null;
        this.targetVersion = null;
        this.version = null;
        this.vmImage = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(UpgradeHistoryEntryResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String action;
        private String containerImage;
        private String createTime;
        private String framework;
        private String snapshot;
        private String state;
        private String targetImage;
        private String targetVersion;
        private String version;
        private String vmImage;

        public Builder() {
    	      // Empty
        }

        public Builder(UpgradeHistoryEntryResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.containerImage = defaults.containerImage;
    	      this.createTime = defaults.createTime;
    	      this.framework = defaults.framework;
    	      this.snapshot = defaults.snapshot;
    	      this.state = defaults.state;
    	      this.targetImage = defaults.targetImage;
    	      this.targetVersion = defaults.targetVersion;
    	      this.version = defaults.version;
    	      this.vmImage = defaults.vmImage;
        }

        public Builder setAction(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }

        public Builder setContainerImage(String containerImage) {
            this.containerImage = Objects.requireNonNull(containerImage);
            return this;
        }

        public Builder setCreateTime(String createTime) {
            this.createTime = Objects.requireNonNull(createTime);
            return this;
        }

        public Builder setFramework(String framework) {
            this.framework = Objects.requireNonNull(framework);
            return this;
        }

        public Builder setSnapshot(String snapshot) {
            this.snapshot = Objects.requireNonNull(snapshot);
            return this;
        }

        public Builder setState(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }

        public Builder setTargetImage(String targetImage) {
            this.targetImage = Objects.requireNonNull(targetImage);
            return this;
        }

        public Builder setTargetVersion(String targetVersion) {
            this.targetVersion = Objects.requireNonNull(targetVersion);
            return this;
        }

        public Builder setVersion(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }

        public Builder setVmImage(String vmImage) {
            this.vmImage = Objects.requireNonNull(vmImage);
            return this;
        }

        public UpgradeHistoryEntryResponse build() {
            return new UpgradeHistoryEntryResponse(action, containerImage, createTime, framework, snapshot, state, targetImage, targetVersion, version, vmImage);
        }
    }
}
