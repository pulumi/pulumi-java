// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.googlenative.cloudbuild_v1.inputs;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.googlenative.cloudbuild_v1.inputs.RepoSourceArgs;
import io.pulumi.googlenative.cloudbuild_v1.inputs.StorageSourceArgs;
import io.pulumi.googlenative.cloudbuild_v1.inputs.StorageSourceManifestArgs;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Location of the source in a supported storage service.
 * 
 */
public final class SourceArgs extends io.pulumi.resources.ResourceArgs {

    public static final SourceArgs Empty = new SourceArgs();

    /**
     * If provided, get the source from this location in a Cloud Source Repository.
     * 
     */
    @InputImport(name="repoSource")
      private final @Nullable Input<RepoSourceArgs> repoSource;

    public Input<RepoSourceArgs> getRepoSource() {
        return this.repoSource == null ? Input.empty() : this.repoSource;
    }

    /**
     * If provided, get the source from this location in Google Cloud Storage.
     * 
     */
    @InputImport(name="storageSource")
      private final @Nullable Input<StorageSourceArgs> storageSource;

    public Input<StorageSourceArgs> getStorageSource() {
        return this.storageSource == null ? Input.empty() : this.storageSource;
    }

    /**
     * If provided, get the source from this manifest in Google Cloud Storage. This feature is in Preview; see description [here](https://github.com/GoogleCloudPlatform/cloud-builders/tree/master/gcs-fetcher).
     * 
     */
    @InputImport(name="storageSourceManifest")
      private final @Nullable Input<StorageSourceManifestArgs> storageSourceManifest;

    public Input<StorageSourceManifestArgs> getStorageSourceManifest() {
        return this.storageSourceManifest == null ? Input.empty() : this.storageSourceManifest;
    }

    public SourceArgs(
        @Nullable Input<RepoSourceArgs> repoSource,
        @Nullable Input<StorageSourceArgs> storageSource,
        @Nullable Input<StorageSourceManifestArgs> storageSourceManifest) {
        this.repoSource = repoSource;
        this.storageSource = storageSource;
        this.storageSourceManifest = storageSourceManifest;
    }

    private SourceArgs() {
        this.repoSource = Input.empty();
        this.storageSource = Input.empty();
        this.storageSourceManifest = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<RepoSourceArgs> repoSource;
        private @Nullable Input<StorageSourceArgs> storageSource;
        private @Nullable Input<StorageSourceManifestArgs> storageSourceManifest;

        public Builder() {
    	      // Empty
        }

        public Builder(SourceArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.repoSource = defaults.repoSource;
    	      this.storageSource = defaults.storageSource;
    	      this.storageSourceManifest = defaults.storageSourceManifest;
        }

        public Builder repoSource(@Nullable Input<RepoSourceArgs> repoSource) {
            this.repoSource = repoSource;
            return this;
        }

        public Builder repoSource(@Nullable RepoSourceArgs repoSource) {
            this.repoSource = Input.ofNullable(repoSource);
            return this;
        }

        public Builder storageSource(@Nullable Input<StorageSourceArgs> storageSource) {
            this.storageSource = storageSource;
            return this;
        }

        public Builder storageSource(@Nullable StorageSourceArgs storageSource) {
            this.storageSource = Input.ofNullable(storageSource);
            return this;
        }

        public Builder storageSourceManifest(@Nullable Input<StorageSourceManifestArgs> storageSourceManifest) {
            this.storageSourceManifest = storageSourceManifest;
            return this;
        }

        public Builder storageSourceManifest(@Nullable StorageSourceManifestArgs storageSourceManifest) {
            this.storageSourceManifest = Input.ofNullable(storageSourceManifest);
            return this;
        }
        public SourceArgs build() {
            return new SourceArgs(repoSource, storageSource, storageSourceManifest);
        }
    }
}
