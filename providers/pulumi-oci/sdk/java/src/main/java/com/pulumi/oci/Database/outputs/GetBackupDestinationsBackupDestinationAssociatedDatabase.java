// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBackupDestinationsBackupDestinationAssociatedDatabase {
    /**
     * @return The display name of the database that is associated with the backup destination.
     * 
     */
    private final String dbName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     * 
     */
    private final String id;

    @CustomType.Constructor
    private GetBackupDestinationsBackupDestinationAssociatedDatabase(
        @CustomType.Parameter("dbName") String dbName,
        @CustomType.Parameter("id") String id) {
        this.dbName = dbName;
        this.id = id;
    }

    /**
     * @return The display name of the database that is associated with the backup destination.
     * 
     */
    public String dbName() {
        return this.dbName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup destination.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackupDestinationsBackupDestinationAssociatedDatabase defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dbName;
        private String id;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBackupDestinationsBackupDestinationAssociatedDatabase defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbName = defaults.dbName;
    	      this.id = defaults.id;
        }

        public Builder dbName(String dbName) {
            this.dbName = Objects.requireNonNull(dbName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }        public GetBackupDestinationsBackupDestinationAssociatedDatabase build() {
            return new GetBackupDestinationsBackupDestinationAssociatedDatabase(dbName, id);
        }
    }
}
