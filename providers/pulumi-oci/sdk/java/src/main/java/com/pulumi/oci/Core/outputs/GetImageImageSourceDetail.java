// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetImageImageSourceDetail {
    private final String bucketName;
    private final String namespaceName;
    private final String objectName;
    /**
     * @return The image&#39;s operating system.  Example: `Oracle Linux`
     * 
     */
    private final String operatingSystem;
    /**
     * @return The image&#39;s operating system version.  Example: `7.2`
     * 
     */
    private final String operatingSystemVersion;
    private final String sourceImageType;
    private final String sourceType;
    private final String sourceUri;

    @CustomType.Constructor
    private GetImageImageSourceDetail(
        @CustomType.Parameter("bucketName") String bucketName,
        @CustomType.Parameter("namespaceName") String namespaceName,
        @CustomType.Parameter("objectName") String objectName,
        @CustomType.Parameter("operatingSystem") String operatingSystem,
        @CustomType.Parameter("operatingSystemVersion") String operatingSystemVersion,
        @CustomType.Parameter("sourceImageType") String sourceImageType,
        @CustomType.Parameter("sourceType") String sourceType,
        @CustomType.Parameter("sourceUri") String sourceUri) {
        this.bucketName = bucketName;
        this.namespaceName = namespaceName;
        this.objectName = objectName;
        this.operatingSystem = operatingSystem;
        this.operatingSystemVersion = operatingSystemVersion;
        this.sourceImageType = sourceImageType;
        this.sourceType = sourceType;
        this.sourceUri = sourceUri;
    }

    public String bucketName() {
        return this.bucketName;
    }
    public String namespaceName() {
        return this.namespaceName;
    }
    public String objectName() {
        return this.objectName;
    }
    /**
     * @return The image&#39;s operating system.  Example: `Oracle Linux`
     * 
     */
    public String operatingSystem() {
        return this.operatingSystem;
    }
    /**
     * @return The image&#39;s operating system version.  Example: `7.2`
     * 
     */
    public String operatingSystemVersion() {
        return this.operatingSystemVersion;
    }
    public String sourceImageType() {
        return this.sourceImageType;
    }
    public String sourceType() {
        return this.sourceType;
    }
    public String sourceUri() {
        return this.sourceUri;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetImageImageSourceDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bucketName;
        private String namespaceName;
        private String objectName;
        private String operatingSystem;
        private String operatingSystemVersion;
        private String sourceImageType;
        private String sourceType;
        private String sourceUri;

        public Builder() {
    	      // Empty
        }

        public Builder(GetImageImageSourceDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.namespaceName = defaults.namespaceName;
    	      this.objectName = defaults.objectName;
    	      this.operatingSystem = defaults.operatingSystem;
    	      this.operatingSystemVersion = defaults.operatingSystemVersion;
    	      this.sourceImageType = defaults.sourceImageType;
    	      this.sourceType = defaults.sourceType;
    	      this.sourceUri = defaults.sourceUri;
        }

        public Builder bucketName(String bucketName) {
            this.bucketName = Objects.requireNonNull(bucketName);
            return this;
        }
        public Builder namespaceName(String namespaceName) {
            this.namespaceName = Objects.requireNonNull(namespaceName);
            return this;
        }
        public Builder objectName(String objectName) {
            this.objectName = Objects.requireNonNull(objectName);
            return this;
        }
        public Builder operatingSystem(String operatingSystem) {
            this.operatingSystem = Objects.requireNonNull(operatingSystem);
            return this;
        }
        public Builder operatingSystemVersion(String operatingSystemVersion) {
            this.operatingSystemVersion = Objects.requireNonNull(operatingSystemVersion);
            return this;
        }
        public Builder sourceImageType(String sourceImageType) {
            this.sourceImageType = Objects.requireNonNull(sourceImageType);
            return this;
        }
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public Builder sourceUri(String sourceUri) {
            this.sourceUri = Objects.requireNonNull(sourceUri);
            return this;
        }        public GetImageImageSourceDetail build() {
            return new GetImageImageSourceDetail(bucketName, namespaceName, objectName, operatingSystem, operatingSystemVersion, sourceImageType, sourceType, sourceUri);
        }
    }
}
