// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OperatorAccessControl;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.OperatorAccessControl.OperatorControlAssignmentArgs;
import com.pulumi.oci.OperatorAccessControl.inputs.OperatorControlAssignmentState;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Operator Control Assignment resource in Oracle Cloud Infrastructure Operator Access Control service.
 * 
 * Creates an Operator Control Assignment resource. In effect, this brings the target resource under the governance of the Operator Control for specified time duration.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * OperatorControlAssignments can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:OperatorAccessControl/operatorControlAssignment:OperatorControlAssignment test_operator_control_assignment &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:OperatorAccessControl/operatorControlAssignment:OperatorControlAssignment")
public class OperatorControlAssignment extends com.pulumi.resources.CustomResource {
    /**
     * The OCID of the user who created this operator control assignment.
     * 
     */
    @Export(name="assignerId", type=String.class, parameters={})
    private Output<String> assignerId;

    /**
     * @return The OCID of the user who created this operator control assignment.
     * 
     */
    public Output<String> assignerId() {
        return this.assignerId;
    }
    /**
     * (Updatable) Comment about the assignment of the operator control to this target resource.
     * 
     */
    @Export(name="comment", type=String.class, parameters={})
    private Output<String> comment;

    /**
     * @return (Updatable) Comment about the assignment of the operator control to this target resource.
     * 
     */
    public Output<String> comment() {
        return this.comment;
    }
    /**
     * (Updatable) The OCID of the compartment that contains the operator control assignment.
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment that contains the operator control assignment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * 
     */
    @Export(name="definedTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * description containing reason for releasing of OperatorControl.
     * 
     */
    @Export(name="detachmentDescription", type=String.class, parameters={})
    private Output<String> detachmentDescription;

    /**
     * @return description containing reason for releasing of OperatorControl.
     * 
     */
    public Output<String> detachmentDescription() {
        return this.detachmentDescription;
    }
    /**
     * The code identifying the error occurred during Assignment operation.
     * 
     */
    @Export(name="errorCode", type=Integer.class, parameters={})
    private Output<Integer> errorCode;

    /**
     * @return The code identifying the error occurred during Assignment operation.
     * 
     */
    public Output<Integer> errorCode() {
        return this.errorCode;
    }
    /**
     * The message describing the error occurred during Assignment operation.
     * 
     */
    @Export(name="errorMessage", type=String.class, parameters={})
    private Output<String> errorMessage;

    /**
     * @return The message describing the error occurred during Assignment operation.
     * 
     */
    public Output<String> errorMessage() {
        return this.errorMessage;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * 
     */
    @Export(name="freeformTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) The boolean if true would autoApprove during maintenance.
     * 
     */
    @Export(name="isAutoApproveDuringMaintenance", type=Boolean.class, parameters={})
    private Output<Boolean> isAutoApproveDuringMaintenance;

    /**
     * @return (Updatable) The boolean if true would autoApprove during maintenance.
     * 
     */
    public Output<Boolean> isAutoApproveDuringMaintenance() {
        return this.isAutoApproveDuringMaintenance;
    }
    /**
     * (Updatable) If set, then the target resource is always governed by the operator control.
     * 
     */
    @Export(name="isEnforcedAlways", type=Boolean.class, parameters={})
    private Output<Boolean> isEnforcedAlways;

    /**
     * @return (Updatable) If set, then the target resource is always governed by the operator control.
     * 
     */
    public Output<Boolean> isEnforcedAlways() {
        return this.isEnforcedAlways;
    }
    /**
     * (Updatable) If set, then the audit logs will be forwarded to the relevant remote logging server
     * 
     */
    @Export(name="isLogForwarded", type=Boolean.class, parameters={})
    private Output<Boolean> isLogForwarded;

    /**
     * @return (Updatable) If set, then the audit logs will be forwarded to the relevant remote logging server
     * 
     */
    public Output<Boolean> isLogForwarded() {
        return this.isLogForwarded;
    }
    /**
     * The OCID of the operator control that is being assigned to a target resource.
     * 
     */
    @Export(name="operatorControlId", type=String.class, parameters={})
    private Output<String> operatorControlId;

    /**
     * @return The OCID of the operator control that is being assigned to a target resource.
     * 
     */
    public Output<String> operatorControlId() {
        return this.operatorControlId;
    }
    /**
     * (Updatable) The address of the remote syslog server where the audit logs will be forwarded to. Address in host or IP format.
     * 
     */
    @Export(name="remoteSyslogServerAddress", type=String.class, parameters={})
    private Output<String> remoteSyslogServerAddress;

    /**
     * @return (Updatable) The address of the remote syslog server where the audit logs will be forwarded to. Address in host or IP format.
     * 
     */
    public Output<String> remoteSyslogServerAddress() {
        return this.remoteSyslogServerAddress;
    }
    /**
     * (Updatable) The CA certificate of the remote syslog server. Identity of the remote syslog server will be asserted based on this certificate.
     * 
     */
    @Export(name="remoteSyslogServerCaCert", type=String.class, parameters={})
    private Output<String> remoteSyslogServerCaCert;

    /**
     * @return (Updatable) The CA certificate of the remote syslog server. Identity of the remote syslog server will be asserted based on this certificate.
     * 
     */
    public Output<String> remoteSyslogServerCaCert() {
        return this.remoteSyslogServerCaCert;
    }
    /**
     * (Updatable) The listening port of the remote syslog server. The port range is 0 - 65535. Only TCP supported.
     * 
     */
    @Export(name="remoteSyslogServerPort", type=Integer.class, parameters={})
    private Output<Integer> remoteSyslogServerPort;

    /**
     * @return (Updatable) The listening port of the remote syslog server. The port range is 0 - 65535. Only TCP supported.
     * 
     */
    public Output<Integer> remoteSyslogServerPort() {
        return this.remoteSyslogServerPort;
    }
    /**
     * The OCID of the compartment that contains the target resource.
     * 
     */
    @Export(name="resourceCompartmentId", type=String.class, parameters={})
    private Output<String> resourceCompartmentId;

    /**
     * @return The OCID of the compartment that contains the target resource.
     * 
     */
    public Output<String> resourceCompartmentId() {
        return this.resourceCompartmentId;
    }
    /**
     * The OCID of the target resource being brought under the governance of the operator control.
     * 
     */
    @Export(name="resourceId", type=String.class, parameters={})
    private Output<String> resourceId;

    /**
     * @return The OCID of the target resource being brought under the governance of the operator control.
     * 
     */
    public Output<String> resourceId() {
        return this.resourceId;
    }
    /**
     * Name of the target resource.
     * 
     */
    @Export(name="resourceName", type=String.class, parameters={})
    private Output<String> resourceName;

    /**
     * @return Name of the target resource.
     * 
     */
    public Output<String> resourceName() {
        return this.resourceName;
    }
    /**
     * Type of the target resource.
     * 
     */
    @Export(name="resourceType", type=String.class, parameters={})
    private Output<String> resourceType;

    /**
     * @return Type of the target resource.
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }
    /**
     * The current lifcycle state of the OperatorControl.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current lifcycle state of the OperatorControl.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * (Updatable) The time at which the target resource will be brought under the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    @Export(name="timeAssignmentFrom", type=String.class, parameters={})
    private Output<String> timeAssignmentFrom;

    /**
     * @return (Updatable) The time at which the target resource will be brought under the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Output<String> timeAssignmentFrom() {
        return this.timeAssignmentFrom;
    }
    /**
     * (Updatable) The time at which the target resource will leave the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    @Export(name="timeAssignmentTo", type=String.class, parameters={})
    private Output<String> timeAssignmentTo;

    /**
     * @return (Updatable) The time at which the target resource will leave the governance of the operator control in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Output<String> timeAssignmentTo() {
        return this.timeAssignmentTo;
    }
    /**
     * Time when the operator control assignment is created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    @Export(name="timeOfAssignment", type=String.class, parameters={})
    private Output<String> timeOfAssignment;

    /**
     * @return Time when the operator control assignment is created in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Output<String> timeOfAssignment() {
        return this.timeOfAssignment;
    }
    /**
     * Time on which the operator control assignment was deleted in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    @Export(name="timeOfDeletion", type=String.class, parameters={})
    private Output<String> timeOfDeletion;

    /**
     * @return Time on which the operator control assignment was deleted in [RFC 3339](https://tools.ietf.org/html/rfc3339)timestamp format.Example: &#39;2020-05-22T21:10:29.600Z&#39;
     * 
     */
    public Output<String> timeOfDeletion() {
        return this.timeOfDeletion;
    }
    /**
     * User id who released the operatorControl.
     * 
     */
    @Export(name="unassignerId", type=String.class, parameters={})
    private Output<String> unassignerId;

    /**
     * @return User id who released the operatorControl.
     * 
     */
    public Output<String> unassignerId() {
        return this.unassignerId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OperatorControlAssignment(String name) {
        this(name, OperatorControlAssignmentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OperatorControlAssignment(String name, OperatorControlAssignmentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OperatorControlAssignment(String name, OperatorControlAssignmentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:OperatorAccessControl/operatorControlAssignment:OperatorControlAssignment", name, args == null ? OperatorControlAssignmentArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private OperatorControlAssignment(String name, Output<String> id, @Nullable OperatorControlAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:OperatorAccessControl/operatorControlAssignment:OperatorControlAssignment", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OperatorControlAssignment get(String name, Output<String> id, @Nullable OperatorControlAssignmentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OperatorControlAssignment(name, id, state, options);
    }
}
