// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetRepositoryCommitPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRepositoryCommitPlainArgs Empty = new GetRepositoryCommitPlainArgs();

    /**
     * A filter to return only resources that match the given commit ID.
     * 
     */
    @Import(name="commitId", required=true)
    private String commitId;

    /**
     * @return A filter to return only resources that match the given commit ID.
     * 
     */
    public String commitId() {
        return this.commitId;
    }

    /**
     * Unique repository identifier.
     * 
     */
    @Import(name="repositoryId", required=true)
    private String repositoryId;

    /**
     * @return Unique repository identifier.
     * 
     */
    public String repositoryId() {
        return this.repositoryId;
    }

    private GetRepositoryCommitPlainArgs() {}

    private GetRepositoryCommitPlainArgs(GetRepositoryCommitPlainArgs $) {
        this.commitId = $.commitId;
        this.repositoryId = $.repositoryId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRepositoryCommitPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRepositoryCommitPlainArgs $;

        public Builder() {
            $ = new GetRepositoryCommitPlainArgs();
        }

        public Builder(GetRepositoryCommitPlainArgs defaults) {
            $ = new GetRepositoryCommitPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param commitId A filter to return only resources that match the given commit ID.
         * 
         * @return builder
         * 
         */
        public Builder commitId(String commitId) {
            $.commitId = commitId;
            return this;
        }

        /**
         * @param repositoryId Unique repository identifier.
         * 
         * @return builder
         * 
         */
        public Builder repositoryId(String repositoryId) {
            $.repositoryId = repositoryId;
            return this;
        }

        public GetRepositoryCommitPlainArgs build() {
            $.commitId = Objects.requireNonNull($.commitId, "expected parameter 'commitId' to be non-null");
            $.repositoryId = Objects.requireNonNull($.repositoryId, "expected parameter 'repositoryId' to be non-null");
            return $;
        }
    }

}
