// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetDrgRouteDistributionStatementsDrgRouteDistributionStatementMatchCriteria;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDrgRouteDistributionStatementsDrgRouteDistributionStatement {
    /**
     * @return `ACCEPT` indicates the route should be imported or exported as-is.
     * 
     */
    private final String action;
    /**
     * @return The Oracle-assigned ID of the route distribution statement.
     * 
     */
    private final String id;
    /**
     * @return The action is applied only if all of the match criteria is met. If match type is MATCH_ALL, any input is considered a match.
     * 
     */
    private final List<GetDrgRouteDistributionStatementsDrgRouteDistributionStatementMatchCriteria> matchCriterias;
    /**
     * @return This field specifies the priority of each statement in a route distribution. Priorities must be unique within a particular route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
     * 
     */
    private final Integer priority;

    @CustomType.Constructor
    private GetDrgRouteDistributionStatementsDrgRouteDistributionStatement(
        @CustomType.Parameter("action") String action,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("matchCriterias") List<GetDrgRouteDistributionStatementsDrgRouteDistributionStatementMatchCriteria> matchCriterias,
        @CustomType.Parameter("priority") Integer priority) {
        this.action = action;
        this.id = id;
        this.matchCriterias = matchCriterias;
        this.priority = priority;
    }

    /**
     * @return `ACCEPT` indicates the route should be imported or exported as-is.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return The Oracle-assigned ID of the route distribution statement.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The action is applied only if all of the match criteria is met. If match type is MATCH_ALL, any input is considered a match.
     * 
     */
    public List<GetDrgRouteDistributionStatementsDrgRouteDistributionStatementMatchCriteria> matchCriterias() {
        return this.matchCriterias;
    }
    /**
     * @return This field specifies the priority of each statement in a route distribution. Priorities must be unique within a particular route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
     * 
     */
    public Integer priority() {
        return this.priority;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDrgRouteDistributionStatementsDrgRouteDistributionStatement defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String action;
        private String id;
        private List<GetDrgRouteDistributionStatementsDrgRouteDistributionStatementMatchCriteria> matchCriterias;
        private Integer priority;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDrgRouteDistributionStatementsDrgRouteDistributionStatement defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.id = defaults.id;
    	      this.matchCriterias = defaults.matchCriterias;
    	      this.priority = defaults.priority;
        }

        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder matchCriterias(List<GetDrgRouteDistributionStatementsDrgRouteDistributionStatementMatchCriteria> matchCriterias) {
            this.matchCriterias = Objects.requireNonNull(matchCriterias);
            return this;
        }
        public Builder matchCriterias(GetDrgRouteDistributionStatementsDrgRouteDistributionStatementMatchCriteria... matchCriterias) {
            return matchCriterias(List.of(matchCriterias));
        }
        public Builder priority(Integer priority) {
            this.priority = Objects.requireNonNull(priority);
            return this;
        }        public GetDrgRouteDistributionStatementsDrgRouteDistributionStatement build() {
            return new GetDrgRouteDistributionStatementsDrgRouteDistributionStatement(action, id, matchCriterias, priority);
        }
    }
}
