// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetManagementAgentImagesManagementAgentImage {
    /**
     * @return Agent image content SHA256 Hash
     * 
     */
    private final String checksum;
    /**
     * @return Agent image resource id
     * 
     */
    private final String id;
    /**
     * @return Object storage URL for download
     * 
     */
    private final String objectUrl;
    /**
     * @return The installation package target architecture type
     * 
     */
    private final String packageArchitectureType;
    /**
     * @return The installation package type
     * 
     */
    private final String packageType;
    /**
     * @return Agent image platform display name
     * 
     */
    private final String platformName;
    /**
     * @return Agent image platform type
     * 
     */
    private final String platformType;
    /**
     * @return Agent image size in bytes
     * 
     */
    private final Double size;
    /**
     * @return Filter to return only Management Agents in the particular lifecycle state.
     * 
     */
    private final String state;
    /**
     * @return Agent image version
     * 
     */
    private final String version;

    @CustomType.Constructor
    private GetManagementAgentImagesManagementAgentImage(
        @CustomType.Parameter("checksum") String checksum,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("objectUrl") String objectUrl,
        @CustomType.Parameter("packageArchitectureType") String packageArchitectureType,
        @CustomType.Parameter("packageType") String packageType,
        @CustomType.Parameter("platformName") String platformName,
        @CustomType.Parameter("platformType") String platformType,
        @CustomType.Parameter("size") Double size,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("version") String version) {
        this.checksum = checksum;
        this.id = id;
        this.objectUrl = objectUrl;
        this.packageArchitectureType = packageArchitectureType;
        this.packageType = packageType;
        this.platformName = platformName;
        this.platformType = platformType;
        this.size = size;
        this.state = state;
        this.version = version;
    }

    /**
     * @return Agent image content SHA256 Hash
     * 
     */
    public String checksum() {
        return this.checksum;
    }
    /**
     * @return Agent image resource id
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Object storage URL for download
     * 
     */
    public String objectUrl() {
        return this.objectUrl;
    }
    /**
     * @return The installation package target architecture type
     * 
     */
    public String packageArchitectureType() {
        return this.packageArchitectureType;
    }
    /**
     * @return The installation package type
     * 
     */
    public String packageType() {
        return this.packageType;
    }
    /**
     * @return Agent image platform display name
     * 
     */
    public String platformName() {
        return this.platformName;
    }
    /**
     * @return Agent image platform type
     * 
     */
    public String platformType() {
        return this.platformType;
    }
    /**
     * @return Agent image size in bytes
     * 
     */
    public Double size() {
        return this.size;
    }
    /**
     * @return Filter to return only Management Agents in the particular lifecycle state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Agent image version
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagementAgentImagesManagementAgentImage defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String checksum;
        private String id;
        private String objectUrl;
        private String packageArchitectureType;
        private String packageType;
        private String platformName;
        private String platformType;
        private Double size;
        private String state;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagementAgentImagesManagementAgentImage defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.checksum = defaults.checksum;
    	      this.id = defaults.id;
    	      this.objectUrl = defaults.objectUrl;
    	      this.packageArchitectureType = defaults.packageArchitectureType;
    	      this.packageType = defaults.packageType;
    	      this.platformName = defaults.platformName;
    	      this.platformType = defaults.platformType;
    	      this.size = defaults.size;
    	      this.state = defaults.state;
    	      this.version = defaults.version;
        }

        public Builder checksum(String checksum) {
            this.checksum = Objects.requireNonNull(checksum);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder objectUrl(String objectUrl) {
            this.objectUrl = Objects.requireNonNull(objectUrl);
            return this;
        }
        public Builder packageArchitectureType(String packageArchitectureType) {
            this.packageArchitectureType = Objects.requireNonNull(packageArchitectureType);
            return this;
        }
        public Builder packageType(String packageType) {
            this.packageType = Objects.requireNonNull(packageType);
            return this;
        }
        public Builder platformName(String platformName) {
            this.platformName = Objects.requireNonNull(platformName);
            return this;
        }
        public Builder platformType(String platformType) {
            this.platformType = Objects.requireNonNull(platformType);
            return this;
        }
        public Builder size(Double size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }        public GetManagementAgentImagesManagementAgentImage build() {
            return new GetManagementAgentImagesManagementAgentImage(checksum, id, objectUrl, packageArchitectureType, packageType, platformName, platformType, size, state, version);
        }
    }
}
