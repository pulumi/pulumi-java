// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataConnectivity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DataConnectivity.RegistryDataAssetArgs;
import com.pulumi.oci.DataConnectivity.inputs.RegistryDataAssetState;
import com.pulumi.oci.DataConnectivity.outputs.RegistryDataAssetDefaultConnection;
import com.pulumi.oci.DataConnectivity.outputs.RegistryDataAssetMetadata;
import com.pulumi.oci.DataConnectivity.outputs.RegistryDataAssetNativeTypeSystem;
import com.pulumi.oci.DataConnectivity.outputs.RegistryDataAssetRegistryMetadata;
import com.pulumi.oci.Utilities;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Registry Data Asset resource in Oracle Cloud Infrastructure Data Connectivity service.
 * 
 * Creates a data asset with default connection.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * RegistryDataAssets can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:DataConnectivity/registryDataAsset:RegistryDataAsset test_registry_data_asset &#34;registries/{registryId}/dataAssets/{dataAssetKey}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DataConnectivity/registryDataAsset:RegistryDataAsset")
public class RegistryDataAsset extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) Additional properties for the data asset.
     * 
     */
    @Export(name="assetProperties", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> assetProperties;

    /**
     * @return (Updatable) Additional properties for the data asset.
     * 
     */
    public Output<Map<String,Object>> assetProperties() {
        return this.assetProperties;
    }
    /**
     * (Updatable) The default connection key.
     * 
     */
    @Export(name="defaultConnection", type=RegistryDataAssetDefaultConnection.class, parameters={})
    private Output<RegistryDataAssetDefaultConnection> defaultConnection;

    /**
     * @return (Updatable) The default connection key.
     * 
     */
    public Output<RegistryDataAssetDefaultConnection> defaultConnection() {
        return this.defaultConnection;
    }
    /**
     * (Updatable) A user defined description for the object.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return (Updatable) A user defined description for the object.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) The external key for the object.
     * 
     */
    @Export(name="externalKey", type=String.class, parameters={})
    private Output<String> externalKey;

    /**
     * @return (Updatable) The external key for the object.
     * 
     */
    public Output<String> externalKey() {
        return this.externalKey;
    }
    /**
     * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    @Export(name="identifier", type=String.class, parameters={})
    private Output<String> identifier;

    /**
     * @return (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * (Updatable) The identifying key for the object.
     * 
     */
    @Export(name="key", type=String.class, parameters={})
    private Output<String> key;

    /**
     * @return (Updatable) The identifying key for the object.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    @Export(name="metadata", type=RegistryDataAssetMetadata.class, parameters={})
    private Output<RegistryDataAssetMetadata> metadata;

    /**
     * @return (Updatable) A summary type containing information about the object including its key, name and when/who created/updated it.
     * 
     */
    public Output<RegistryDataAssetMetadata> metadata() {
        return this.metadata;
    }
    /**
     * (Updatable) The property which disciminates the subtypes.
     * 
     */
    @Export(name="modelType", type=String.class, parameters={})
    private Output<String> modelType;

    /**
     * @return (Updatable) The property which disciminates the subtypes.
     * 
     */
    public Output<String> modelType() {
        return this.modelType;
    }
    /**
     * (Updatable) The model version of an object.
     * 
     */
    @Export(name="modelVersion", type=String.class, parameters={})
    private Output<String> modelVersion;

    /**
     * @return (Updatable) The model version of an object.
     * 
     */
    public Output<String> modelVersion() {
        return this.modelVersion;
    }
    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * (Updatable) The type system maps from and to a type.
     * 
     */
    @Export(name="nativeTypeSystem", type=RegistryDataAssetNativeTypeSystem.class, parameters={})
    private Output<RegistryDataAssetNativeTypeSystem> nativeTypeSystem;

    /**
     * @return (Updatable) The type system maps from and to a type.
     * 
     */
    public Output<RegistryDataAssetNativeTypeSystem> nativeTypeSystem() {
        return this.nativeTypeSystem;
    }
    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    @Export(name="objectStatus", type=Integer.class, parameters={})
    private Output<Integer> objectStatus;

    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Output<Integer> objectStatus() {
        return this.objectStatus;
    }
    /**
     * (Updatable) The version of the object that is used to track changes in the object instance.
     * 
     */
    @Export(name="objectVersion", type=Integer.class, parameters={})
    private Output<Integer> objectVersion;

    /**
     * @return (Updatable) The version of the object that is used to track changes in the object instance.
     * 
     */
    public Output<Integer> objectVersion() {
        return this.objectVersion;
    }
    /**
     * (Updatable) All the properties for the data asset in a key-value map format.
     * 
     */
    @Export(name="properties", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> properties;

    /**
     * @return (Updatable) All the properties for the data asset in a key-value map format.
     * 
     */
    public Output<Map<String,Object>> properties() {
        return this.properties;
    }
    /**
     * The registry Ocid.
     * 
     */
    @Export(name="registryId", type=String.class, parameters={})
    private Output<String> registryId;

    /**
     * @return The registry Ocid.
     * 
     */
    public Output<String> registryId() {
        return this.registryId;
    }
    /**
     * (Updatable) Information about the object and its parent.
     * 
     */
    @Export(name="registryMetadata", type=RegistryDataAssetRegistryMetadata.class, parameters={})
    private Output<RegistryDataAssetRegistryMetadata> registryMetadata;

    /**
     * @return (Updatable) Information about the object and its parent.
     * 
     */
    public Output<RegistryDataAssetRegistryMetadata> registryMetadata() {
        return this.registryMetadata;
    }
    /**
     * (Updatable) Specific DataAsset Type
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return (Updatable) Specific DataAsset Type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RegistryDataAsset(String name) {
        this(name, RegistryDataAssetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RegistryDataAsset(String name, RegistryDataAssetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RegistryDataAsset(String name, RegistryDataAssetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataConnectivity/registryDataAsset:RegistryDataAsset", name, args == null ? RegistryDataAssetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RegistryDataAsset(String name, Output<String> id, @Nullable RegistryDataAssetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataConnectivity/registryDataAsset:RegistryDataAsset", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RegistryDataAsset get(String name, Output<String> id, @Nullable RegistryDataAssetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RegistryDataAsset(name, id, state, options);
    }
}
