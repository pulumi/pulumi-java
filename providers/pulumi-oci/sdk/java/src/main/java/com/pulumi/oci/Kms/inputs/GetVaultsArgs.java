// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Kms.inputs.GetVaultsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVaultsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVaultsArgs Empty = new GetVaultsArgs();

    /**
     * The OCID of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable List<GetVaultsFilter> filters;

    public Optional<List<GetVaultsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private GetVaultsArgs() {}

    private GetVaultsArgs(GetVaultsArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVaultsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVaultsArgs $;

        public Builder() {
            $ = new GetVaultsArgs();
        }

        public Builder(GetVaultsArgs defaults) {
            $ = new GetVaultsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetVaultsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetVaultsFilter... filters) {
            return filters(List.of(filters));
        }

        public GetVaultsArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
