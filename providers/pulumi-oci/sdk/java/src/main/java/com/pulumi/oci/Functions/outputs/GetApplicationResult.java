// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Functions.outputs.GetApplicationImagePolicyConfig;
import com.pulumi.oci.Functions.outputs.GetApplicationTraceConfig;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetApplicationResult {
    private final String applicationId;
    /**
     * @return The OCID of the compartment that contains the application.
     * 
     */
    private final String compartmentId;
    /**
     * @return Application configuration for functions in this application (passed as environment variables). Can be overridden by function configuration. Keys must be ASCII strings consisting solely of letters, digits, and the &#39;_&#39; (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{&#34;MY_FUNCTION_CONFIG&#34;: &#34;ConfVal&#34;}`
     * 
     */
    private final Map<String,Object> config;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The display name of the application. The display name is unique within the compartment containing the application.
     * 
     */
    private final String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application.
     * 
     */
    private final String id;
    /**
     * @return Define the image signature verification policy for an application.
     * 
     */
    private final List<GetApplicationImagePolicyConfig> imagePolicyConfigs;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the Network Security Groups to add the application to.
     * 
     */
    private final List<String> networkSecurityGroupIds;
    /**
     * @return The current state of the application.
     * 
     */
    private final String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
     * 
     */
    private final List<String> subnetIds;
    /**
     * @return A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
     * 
     */
    private final String syslogUrl;
    /**
     * @return The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
     * 
     */
    private final String timeUpdated;
    /**
     * @return Define the tracing configuration for an application.
     * 
     */
    private final List<GetApplicationTraceConfig> traceConfigs;

    @CustomType.Constructor
    private GetApplicationResult(
        @CustomType.Parameter("applicationId") String applicationId,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("config") Map<String,Object> config,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("imagePolicyConfigs") List<GetApplicationImagePolicyConfig> imagePolicyConfigs,
        @CustomType.Parameter("networkSecurityGroupIds") List<String> networkSecurityGroupIds,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("subnetIds") List<String> subnetIds,
        @CustomType.Parameter("syslogUrl") String syslogUrl,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("traceConfigs") List<GetApplicationTraceConfig> traceConfigs) {
        this.applicationId = applicationId;
        this.compartmentId = compartmentId;
        this.config = config;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.imagePolicyConfigs = imagePolicyConfigs;
        this.networkSecurityGroupIds = networkSecurityGroupIds;
        this.state = state;
        this.subnetIds = subnetIds;
        this.syslogUrl = syslogUrl;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
        this.traceConfigs = traceConfigs;
    }

    public String applicationId() {
        return this.applicationId;
    }
    /**
     * @return The OCID of the compartment that contains the application.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Application configuration for functions in this application (passed as environment variables). Can be overridden by function configuration. Keys must be ASCII strings consisting solely of letters, digits, and the &#39;_&#39; (underscore) character, and must not begin with a digit. Values should be limited to printable unicode characters.  Example: `{&#34;MY_FUNCTION_CONFIG&#34;: &#34;ConfVal&#34;}`
     * 
     */
    public Map<String,Object> config() {
        return this.config;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The display name of the application. The display name is unique within the compartment containing the application.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the application.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Define the image signature verification policy for an application.
     * 
     */
    public List<GetApplicationImagePolicyConfig> imagePolicyConfigs() {
        return this.imagePolicyConfigs;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the Network Security Groups to add the application to.
     * 
     */
    public List<String> networkSecurityGroupIds() {
        return this.networkSecurityGroupIds;
    }
    /**
     * @return The current state of the application.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)s of the subnets in which to run functions in the application.
     * 
     */
    public List<String> subnetIds() {
        return this.subnetIds;
    }
    /**
     * @return A syslog URL to which to send all function logs. Supports tcp, udp, and tcp+tls. The syslog URL must be reachable from all of the subnets configured for the application. Note: If you enable the Oracle Cloud Infrastructure Logging service for this application, the syslogUrl value is ignored. Function logs are sent to the Oracle Cloud Infrastructure Logging service, and not to the syslog URL.  Example: `tcp://logserver.myserver:1234`
     * 
     */
    public String syslogUrl() {
        return this.syslogUrl;
    }
    /**
     * @return The time the application was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-09-12T22:47:12.613Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the application was updated, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2018-09-12T22:47:12.613Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Define the tracing configuration for an application.
     * 
     */
    public List<GetApplicationTraceConfig> traceConfigs() {
        return this.traceConfigs;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApplicationResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String applicationId;
        private String compartmentId;
        private Map<String,Object> config;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private List<GetApplicationImagePolicyConfig> imagePolicyConfigs;
        private List<String> networkSecurityGroupIds;
        private String state;
        private List<String> subnetIds;
        private String syslogUrl;
        private String timeCreated;
        private String timeUpdated;
        private List<GetApplicationTraceConfig> traceConfigs;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApplicationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationId = defaults.applicationId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.config = defaults.config;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.imagePolicyConfigs = defaults.imagePolicyConfigs;
    	      this.networkSecurityGroupIds = defaults.networkSecurityGroupIds;
    	      this.state = defaults.state;
    	      this.subnetIds = defaults.subnetIds;
    	      this.syslogUrl = defaults.syslogUrl;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.traceConfigs = defaults.traceConfigs;
        }

        public Builder applicationId(String applicationId) {
            this.applicationId = Objects.requireNonNull(applicationId);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder config(Map<String,Object> config) {
            this.config = Objects.requireNonNull(config);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder imagePolicyConfigs(List<GetApplicationImagePolicyConfig> imagePolicyConfigs) {
            this.imagePolicyConfigs = Objects.requireNonNull(imagePolicyConfigs);
            return this;
        }
        public Builder imagePolicyConfigs(GetApplicationImagePolicyConfig... imagePolicyConfigs) {
            return imagePolicyConfigs(List.of(imagePolicyConfigs));
        }
        public Builder networkSecurityGroupIds(List<String> networkSecurityGroupIds) {
            this.networkSecurityGroupIds = Objects.requireNonNull(networkSecurityGroupIds);
            return this;
        }
        public Builder networkSecurityGroupIds(String... networkSecurityGroupIds) {
            return networkSecurityGroupIds(List.of(networkSecurityGroupIds));
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder subnetIds(List<String> subnetIds) {
            this.subnetIds = Objects.requireNonNull(subnetIds);
            return this;
        }
        public Builder subnetIds(String... subnetIds) {
            return subnetIds(List.of(subnetIds));
        }
        public Builder syslogUrl(String syslogUrl) {
            this.syslogUrl = Objects.requireNonNull(syslogUrl);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder traceConfigs(List<GetApplicationTraceConfig> traceConfigs) {
            this.traceConfigs = Objects.requireNonNull(traceConfigs);
            return this;
        }
        public Builder traceConfigs(GetApplicationTraceConfig... traceConfigs) {
            return traceConfigs(List.of(traceConfigs));
        }        public GetApplicationResult build() {
            return new GetApplicationResult(applicationId, compartmentId, config, definedTags, displayName, freeformTags, id, imagePolicyConfigs, networkSecurityGroupIds, state, subnetIds, syslogUrl, timeCreated, timeUpdated, traceConfigs);
        }
    }
}
