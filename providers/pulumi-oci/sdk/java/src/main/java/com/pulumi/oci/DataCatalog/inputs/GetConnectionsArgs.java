// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataCatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataCatalog.inputs.GetConnectionsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetConnectionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectionsArgs Empty = new GetConnectionsArgs();

    /**
     * Unique catalog identifier.
     * 
     */
    @Import(name="catalogId", required=true)
    private Output<String> catalogId;

    /**
     * @return Unique catalog identifier.
     * 
     */
    public Output<String> catalogId() {
        return this.catalogId;
    }

    /**
     * OCID of the user who created the resource.
     * 
     */
    @Import(name="createdById")
    private Output</* @Nullable */ String> createdById;

    /**
     * @return OCID of the user who created the resource.
     * 
     */
    public Output</* @Nullable */ String> createdById() {
        return this.createdById;
    }

    /**
     * Unique data asset key.
     * 
     */
    @Import(name="dataAssetKey", required=true)
    private Output<String> dataAssetKey;

    /**
     * @return Unique data asset key.
     * 
     */
    public Output<String> dataAssetKey() {
        return this.dataAssetKey;
    }

    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    @Import(name="displayName")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public Output</* @Nullable */ String> displayName() {
        return this.displayName;
    }

    /**
     * A filter to return only resources that match display name pattern given. The match is not case sensitive. For Example : /folders?displayNameContains=Cu.* The above would match all folders with display name that starts with &#34;Cu&#34; or has the pattern &#34;Cu&#34; anywhere in between.
     * 
     */
    @Import(name="displayNameContains")
    private Output</* @Nullable */ String> displayNameContains;

    /**
     * @return A filter to return only resources that match display name pattern given. The match is not case sensitive. For Example : /folders?displayNameContains=Cu.* The above would match all folders with display name that starts with &#34;Cu&#34; or has the pattern &#34;Cu&#34; anywhere in between.
     * 
     */
    public Output</* @Nullable */ String> displayNameContains() {
        return this.displayNameContains;
    }

    /**
     * Unique external identifier of this resource in the external source system.
     * 
     */
    @Import(name="externalKey")
    private Output</* @Nullable */ String> externalKey;

    /**
     * @return Unique external identifier of this resource in the external source system.
     * 
     */
    public Output</* @Nullable */ String> externalKey() {
        return this.externalKey;
    }

    /**
     * Specifies the fields to return in a connection summary response.
     * 
     */
    @Import(name="fields")
    private Output</* @Nullable */ List<String>> fields;

    /**
     * @return Specifies the fields to return in a connection summary response.
     * 
     */
    public Output</* @Nullable */ List<String>> fields() {
        return this.fields;
    }

    @Import(name="filters")
    private Output</* @Nullable */ List<GetConnectionsFilter>> filters;

    public Output</* @Nullable */ List<GetConnectionsFilter>> filters() {
        return this.filters;
    }

    /**
     * Indicates whether this connection is the default connection.
     * 
     */
    @Import(name="isDefault")
    private Output</* @Nullable */ Boolean> isDefault;

    /**
     * @return Indicates whether this connection is the default connection.
     * 
     */
    public Output</* @Nullable */ Boolean> isDefault() {
        return this.isDefault;
    }

    /**
     * A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     * 
     */
    @Import(name="state")
    private Output</* @Nullable */ String> state;

    /**
     * @return A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     * 
     */
    public Output</* @Nullable */ String> state() {
        return this.state;
    }

    /**
     * Time that the resource was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    @Import(name="timeCreated")
    private Output</* @Nullable */ String> timeCreated;

    /**
     * @return Time that the resource was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    public Output</* @Nullable */ String> timeCreated() {
        return this.timeCreated;
    }

    /**
     * Time that the resource&#39;s status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    @Import(name="timeStatusUpdated")
    private Output</* @Nullable */ String> timeStatusUpdated;

    /**
     * @return Time that the resource&#39;s status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    public Output</* @Nullable */ String> timeStatusUpdated() {
        return this.timeStatusUpdated;
    }

    /**
     * Time that the resource was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    @Import(name="timeUpdated")
    private Output</* @Nullable */ String> timeUpdated;

    /**
     * @return Time that the resource was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    public Output</* @Nullable */ String> timeUpdated() {
        return this.timeUpdated;
    }

    /**
     * OCID of the user who updated the resource.
     * 
     */
    @Import(name="updatedById")
    private Output</* @Nullable */ String> updatedById;

    /**
     * @return OCID of the user who updated the resource.
     * 
     */
    public Output</* @Nullable */ String> updatedById() {
        return this.updatedById;
    }

    private GetConnectionsArgs() {}

    private GetConnectionsArgs(GetConnectionsArgs $) {
        this.catalogId = $.catalogId;
        this.createdById = $.createdById;
        this.dataAssetKey = $.dataAssetKey;
        this.displayName = $.displayName;
        this.displayNameContains = $.displayNameContains;
        this.externalKey = $.externalKey;
        this.fields = $.fields;
        this.filters = $.filters;
        this.isDefault = $.isDefault;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeStatusUpdated = $.timeStatusUpdated;
        this.timeUpdated = $.timeUpdated;
        this.updatedById = $.updatedById;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectionsArgs $;

        public Builder() {
            $ = new GetConnectionsArgs();
        }

        public Builder(GetConnectionsArgs defaults) {
            $ = new GetConnectionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalogId Unique catalog identifier.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(Output<String> catalogId) {
            $.catalogId = catalogId;
            return this;
        }

        /**
         * @param catalogId Unique catalog identifier.
         * 
         * @return builder
         * 
         */
        public Builder catalogId(String catalogId) {
            return catalogId(Output.of(catalogId));
        }

        /**
         * @param createdById OCID of the user who created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdById(Output</* @Nullable */ String> createdById) {
            $.createdById = createdById;
            return this;
        }

        /**
         * @param createdById OCID of the user who created the resource.
         * 
         * @return builder
         * 
         */
        public Builder createdById(@Nullable String createdById) {
            return createdById(Output.of(createdById));
        }

        /**
         * @param dataAssetKey Unique data asset key.
         * 
         * @return builder
         * 
         */
        public Builder dataAssetKey(Output<String> dataAssetKey) {
            $.dataAssetKey = dataAssetKey;
            return this;
        }

        /**
         * @param dataAssetKey Unique data asset key.
         * 
         * @return builder
         * 
         */
        public Builder dataAssetKey(String dataAssetKey) {
            return dataAssetKey(Output.of(dataAssetKey));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output</* @Nullable */ String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param displayNameContains A filter to return only resources that match display name pattern given. The match is not case sensitive. For Example : /folders?displayNameContains=Cu.* The above would match all folders with display name that starts with &#34;Cu&#34; or has the pattern &#34;Cu&#34; anywhere in between.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(Output</* @Nullable */ String> displayNameContains) {
            $.displayNameContains = displayNameContains;
            return this;
        }

        /**
         * @param displayNameContains A filter to return only resources that match display name pattern given. The match is not case sensitive. For Example : /folders?displayNameContains=Cu.* The above would match all folders with display name that starts with &#34;Cu&#34; or has the pattern &#34;Cu&#34; anywhere in between.
         * 
         * @return builder
         * 
         */
        public Builder displayNameContains(@Nullable String displayNameContains) {
            return displayNameContains(Output.of(displayNameContains));
        }

        /**
         * @param externalKey Unique external identifier of this resource in the external source system.
         * 
         * @return builder
         * 
         */
        public Builder externalKey(Output</* @Nullable */ String> externalKey) {
            $.externalKey = externalKey;
            return this;
        }

        /**
         * @param externalKey Unique external identifier of this resource in the external source system.
         * 
         * @return builder
         * 
         */
        public Builder externalKey(@Nullable String externalKey) {
            return externalKey(Output.of(externalKey));
        }

        /**
         * @param fields Specifies the fields to return in a connection summary response.
         * 
         * @return builder
         * 
         */
        public Builder fields(Output</* @Nullable */ List<String>> fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param fields Specifies the fields to return in a connection summary response.
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable List<String> fields) {
            return fields(Output.of(fields));
        }

        /**
         * @param fields Specifies the fields to return in a connection summary response.
         * 
         * @return builder
         * 
         */
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }

        public Builder filters(Output</* @Nullable */ List<GetConnectionsFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetConnectionsFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetConnectionsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isDefault Indicates whether this connection is the default connection.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(Output</* @Nullable */ Boolean> isDefault) {
            $.isDefault = isDefault;
            return this;
        }

        /**
         * @param isDefault Indicates whether this connection is the default connection.
         * 
         * @return builder
         * 
         */
        public Builder isDefault(@Nullable Boolean isDefault) {
            return isDefault(Output.of(isDefault));
        }

        /**
         * @param state A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(Output</* @Nullable */ String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated Time that the resource was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(Output</* @Nullable */ String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated Time that the resource was created. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeStatusUpdated Time that the resource&#39;s status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeStatusUpdated(Output</* @Nullable */ String> timeStatusUpdated) {
            $.timeStatusUpdated = timeStatusUpdated;
            return this;
        }

        /**
         * @param timeStatusUpdated Time that the resource&#39;s status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeStatusUpdated(@Nullable String timeStatusUpdated) {
            return timeStatusUpdated(Output.of(timeStatusUpdated));
        }

        /**
         * @param timeUpdated Time that the resource was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(Output</* @Nullable */ String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated Time that the resource was updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param updatedById OCID of the user who updated the resource.
         * 
         * @return builder
         * 
         */
        public Builder updatedById(Output</* @Nullable */ String> updatedById) {
            $.updatedById = updatedById;
            return this;
        }

        /**
         * @param updatedById OCID of the user who updated the resource.
         * 
         * @return builder
         * 
         */
        public Builder updatedById(@Nullable String updatedById) {
            return updatedById(Output.of(updatedById));
        }

        public GetConnectionsArgs build() {
            $.catalogId = Objects.requireNonNull($.catalogId, "expected parameter 'catalogId' to be non-null");
            $.dataAssetKey = Objects.requireNonNull($.dataAssetKey, "expected parameter 'dataAssetKey' to be non-null");
            return $;
        }
    }

}
