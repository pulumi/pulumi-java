// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataConnectivity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataConnectivity.outputs.GetRegistryConnectionsConnectionSummaryCollection;
import com.pulumi.oci.DataConnectivity.outputs.GetRegistryConnectionsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRegistryConnectionsResult {
    /**
     * @return The list of connection_summary_collection.
     * 
     */
    private final List<GetRegistryConnectionsConnectionSummaryCollection> connectionSummaryCollections;
    private final String dataAssetKey;
    private final @Nullable String favoritesQueryParam;
    private final @Nullable List<String> fields;
    private final @Nullable List<GetRegistryConnectionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    private final @Nullable String name;
    private final String registryId;
    /**
     * @return Specific Connection Type
     * 
     */
    private final @Nullable String type;

    @CustomType.Constructor
    private GetRegistryConnectionsResult(
        @CustomType.Parameter("connectionSummaryCollections") List<GetRegistryConnectionsConnectionSummaryCollection> connectionSummaryCollections,
        @CustomType.Parameter("dataAssetKey") String dataAssetKey,
        @CustomType.Parameter("favoritesQueryParam") @Nullable String favoritesQueryParam,
        @CustomType.Parameter("fields") @Nullable List<String> fields,
        @CustomType.Parameter("filters") @Nullable List<GetRegistryConnectionsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("registryId") String registryId,
        @CustomType.Parameter("type") @Nullable String type) {
        this.connectionSummaryCollections = connectionSummaryCollections;
        this.dataAssetKey = dataAssetKey;
        this.favoritesQueryParam = favoritesQueryParam;
        this.fields = fields;
        this.filters = filters;
        this.id = id;
        this.name = name;
        this.registryId = registryId;
        this.type = type;
    }

    /**
     * @return The list of connection_summary_collection.
     * 
     */
    public List<GetRegistryConnectionsConnectionSummaryCollection> connectionSummaryCollections() {
        return this.connectionSummaryCollections;
    }
    public String dataAssetKey() {
        return this.dataAssetKey;
    }
    public Optional<String> favoritesQueryParam() {
        return Optional.ofNullable(this.favoritesQueryParam);
    }
    public List<String> fields() {
        return this.fields == null ? List.of() : this.fields;
    }
    public List<GetRegistryConnectionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String registryId() {
        return this.registryId;
    }
    /**
     * @return Specific Connection Type
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegistryConnectionsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetRegistryConnectionsConnectionSummaryCollection> connectionSummaryCollections;
        private String dataAssetKey;
        private @Nullable String favoritesQueryParam;
        private @Nullable List<String> fields;
        private @Nullable List<GetRegistryConnectionsFilter> filters;
        private String id;
        private @Nullable String name;
        private String registryId;
        private @Nullable String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRegistryConnectionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionSummaryCollections = defaults.connectionSummaryCollections;
    	      this.dataAssetKey = defaults.dataAssetKey;
    	      this.favoritesQueryParam = defaults.favoritesQueryParam;
    	      this.fields = defaults.fields;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.registryId = defaults.registryId;
    	      this.type = defaults.type;
        }

        public Builder connectionSummaryCollections(List<GetRegistryConnectionsConnectionSummaryCollection> connectionSummaryCollections) {
            this.connectionSummaryCollections = Objects.requireNonNull(connectionSummaryCollections);
            return this;
        }
        public Builder connectionSummaryCollections(GetRegistryConnectionsConnectionSummaryCollection... connectionSummaryCollections) {
            return connectionSummaryCollections(List.of(connectionSummaryCollections));
        }
        public Builder dataAssetKey(String dataAssetKey) {
            this.dataAssetKey = Objects.requireNonNull(dataAssetKey);
            return this;
        }
        public Builder favoritesQueryParam(@Nullable String favoritesQueryParam) {
            this.favoritesQueryParam = favoritesQueryParam;
            return this;
        }
        public Builder fields(@Nullable List<String> fields) {
            this.fields = fields;
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        public Builder filters(@Nullable List<GetRegistryConnectionsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetRegistryConnectionsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder registryId(String registryId) {
            this.registryId = Objects.requireNonNull(registryId);
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }        public GetRegistryConnectionsResult build() {
            return new GetRegistryConnectionsResult(connectionSummaryCollections, dataAssetKey, favoritesQueryParam, fields, filters, id, name, registryId, type);
        }
    }
}
