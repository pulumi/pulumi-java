// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MigrationGoldenGateDetailsSettingsReplicatArgs extends com.pulumi.resources.ResourceArgs {

    public static final MigrationGoldenGateDetailsSettingsReplicatArgs Empty = new MigrationGoldenGateDetailsSettingsReplicatArgs();

    /**
     * (Updatable) Number of threads used to read trail files (valid for Parallel Replicat)
     * 
     */
    @Import(name="mapParallelism")
    private @Nullable Output<Integer> mapParallelism;

    /**
     * @return (Updatable) Number of threads used to read trail files (valid for Parallel Replicat)
     * 
     */
    public Optional<Output<Integer>> mapParallelism() {
        return Optional.ofNullable(this.mapParallelism);
    }

    /**
     * (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
     * 
     */
    @Import(name="maxApplyParallelism")
    private @Nullable Output<Integer> maxApplyParallelism;

    /**
     * @return (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
     * 
     */
    public Optional<Output<Integer>> maxApplyParallelism() {
        return Optional.ofNullable(this.maxApplyParallelism);
    }

    /**
     * (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
     * 
     */
    @Import(name="minApplyParallelism")
    private @Nullable Output<Integer> minApplyParallelism;

    /**
     * @return (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
     * 
     */
    public Optional<Output<Integer>> minApplyParallelism() {
        return Optional.ofNullable(this.minApplyParallelism);
    }

    private MigrationGoldenGateDetailsSettingsReplicatArgs() {}

    private MigrationGoldenGateDetailsSettingsReplicatArgs(MigrationGoldenGateDetailsSettingsReplicatArgs $) {
        this.mapParallelism = $.mapParallelism;
        this.maxApplyParallelism = $.maxApplyParallelism;
        this.minApplyParallelism = $.minApplyParallelism;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MigrationGoldenGateDetailsSettingsReplicatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MigrationGoldenGateDetailsSettingsReplicatArgs $;

        public Builder() {
            $ = new MigrationGoldenGateDetailsSettingsReplicatArgs();
        }

        public Builder(MigrationGoldenGateDetailsSettingsReplicatArgs defaults) {
            $ = new MigrationGoldenGateDetailsSettingsReplicatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mapParallelism (Updatable) Number of threads used to read trail files (valid for Parallel Replicat)
         * 
         * @return builder
         * 
         */
        public Builder mapParallelism(@Nullable Output<Integer> mapParallelism) {
            $.mapParallelism = mapParallelism;
            return this;
        }

        /**
         * @param mapParallelism (Updatable) Number of threads used to read trail files (valid for Parallel Replicat)
         * 
         * @return builder
         * 
         */
        public Builder mapParallelism(Integer mapParallelism) {
            return mapParallelism(Output.of(mapParallelism));
        }

        /**
         * @param maxApplyParallelism (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
         * 
         * @return builder
         * 
         */
        public Builder maxApplyParallelism(@Nullable Output<Integer> maxApplyParallelism) {
            $.maxApplyParallelism = maxApplyParallelism;
            return this;
        }

        /**
         * @param maxApplyParallelism (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
         * 
         * @return builder
         * 
         */
        public Builder maxApplyParallelism(Integer maxApplyParallelism) {
            return maxApplyParallelism(Output.of(maxApplyParallelism));
        }

        /**
         * @param minApplyParallelism (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
         * 
         * @return builder
         * 
         */
        public Builder minApplyParallelism(@Nullable Output<Integer> minApplyParallelism) {
            $.minApplyParallelism = minApplyParallelism;
            return this;
        }

        /**
         * @param minApplyParallelism (Updatable) Defines the range in which the Replicat automatically adjusts its apply parallelism (valid for Parallel Replicat)
         * 
         * @return builder
         * 
         */
        public Builder minApplyParallelism(Integer minApplyParallelism) {
            return minApplyParallelism(Output.of(minApplyParallelism));
        }

        public MigrationGoldenGateDetailsSettingsReplicatArgs build() {
            return $;
        }
    }

}
