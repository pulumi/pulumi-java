// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetShapesShapeMaxVnicAttachmentOption;
import com.pulumi.oci.Core.outputs.GetShapesShapeMemoryOption;
import com.pulumi.oci.Core.outputs.GetShapesShapeNetworkingBandwidthOption;
import com.pulumi.oci.Core.outputs.GetShapesShapeOcpuOption;
import com.pulumi.oci.Core.outputs.GetShapesShapePlatformConfigOption;
import com.pulumi.oci.Core.outputs.GetShapesShapeRecommendedAlternative;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetShapesShape {
    /**
     * @return For a subcore burstable VM, the supported baseline OCPU utilization for instances that use this shape.
     * 
     */
    private final List<String> baselineOcpuUtilizations;
    /**
     * @return How instances that use this shape are charged.
     * 
     */
    private final String billingType;
    /**
     * @return A short description of the graphics processing unit (GPU) available for this shape.
     * 
     */
    private final String gpuDescription;
    /**
     * @return The number of GPUs available for this shape.
     * 
     */
    private final Integer gpus;
    /**
     * @return Whether billing continues when the instances that use this shape are in the stopped state.
     * 
     */
    private final Boolean isBilledForStoppedInstance;
    /**
     * @return Whether the shape supports creating flexible instances. A [flexible shape](https://docs.cloud.oracle.com/iaas/Content/Compute/References/computeshapes.htm#flexible) is a shape that lets you customize the number of OCPUs and the amount of memory when launching or resizing your instance.
     * 
     */
    private final Boolean isFlexible;
    /**
     * @return Whether Live Migration is currently supported for this shape.
     * 
     */
    private final Boolean isLiveMigrationSupported;
    /**
     * @return Whether the shape supports creating subcore or burstable instances. A [burstable instance](https://docs.cloud.oracle.com/iaas/Content/Compute/References/burstable-instances.htm) is a virtual machine (VM) instance that provides a baseline level of CPU performance with the ability to burst to a higher level to support occasional spikes in usage.
     * 
     */
    private final Boolean isSubcore;
    /**
     * @return A short description of the local disks available for this shape.
     * 
     */
    private final String localDiskDescription;
    /**
     * @return The number of local disks available for this shape.
     * 
     */
    private final Integer localDisks;
    /**
     * @return The aggregate size of the local disks available for this shape, in gigabytes.
     * 
     */
    private final Double localDisksTotalSizeInGbs;
    /**
     * @return For a flexible shape, the number of VNIC attachments that are available for instances that use this shape.
     * 
     */
    private final List<GetShapesShapeMaxVnicAttachmentOption> maxVnicAttachmentOptions;
    /**
     * @return The maximum number of VNIC attachments available for this shape.
     * 
     */
    private final Integer maxVnicAttachments;
    /**
     * @return The default amount of memory available for this shape, in gigabytes.
     * 
     */
    private final Double memoryInGbs;
    /**
     * @return For a flexible shape, the amount of memory available for instances that use this shape.
     * 
     */
    private final List<GetShapesShapeMemoryOption> memoryOptions;
    /**
     * @return For a subcore burstable VM, the minimum total baseline OCPUs required. The total baseline OCPUs is equal to baselineOcpuUtilization chosen multiplied by the number of OCPUs chosen.
     * 
     */
    private final Double minTotalBaselineOcpusRequired;
    /**
     * @return The name of the shape. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     * 
     */
    private final String name;
    /**
     * @return The number of physical network interface card (NIC) ports available for this shape.
     * 
     */
    private final Integer networkPorts;
    /**
     * @return The networking bandwidth available for this shape, in gigabits per second.
     * 
     */
    private final Double networkingBandwidthInGbps;
    /**
     * @return For a flexible shape, the amount of networking bandwidth available for instances that use this shape.
     * 
     */
    private final List<GetShapesShapeNetworkingBandwidthOption> networkingBandwidthOptions;
    /**
     * @return For a flexible shape, the number of OCPUs available for instances that use this shape.
     * 
     */
    private final List<GetShapesShapeOcpuOption> ocpuOptions;
    /**
     * @return The default number of OCPUs available for this shape.
     * 
     */
    private final Double ocpus;
    /**
     * @return The list of supported platform configuration options for this shape.
     * 
     */
    private final List<GetShapesShapePlatformConfigOption> platformConfigOptions;
    /**
     * @return A short description of the shape&#39;s processor (CPU).
     * 
     */
    private final String processorDescription;
    /**
     * @return The list of of compartment quotas for the shape.
     * 
     */
    private final List<String> quotaNames;
    /**
     * @return The networking bandwidth available for the remote direct memory access (RDMA) network for this shape, in gigabits per second.
     * 
     */
    private final Integer rdmaBandwidthInGbps;
    /**
     * @return The number of networking ports available for the remote direct memory access (RDMA) network between nodes in a high performance computing (HPC) cluster network. If the shape does not support cluster networks, this value is `0`.
     * 
     */
    private final Integer rdmaPorts;
    /**
     * @return The list of shapes and shape details (if applicable) that Oracle recommends that you use as an alternative to the current shape.
     * 
     */
    private final List<GetShapesShapeRecommendedAlternative> recommendedAlternatives;
    /**
     * @return The list of compatible shapes that this shape can be changed to. For more information, see [Changing the Shape of an Instance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/resizinginstances.htm).
     * 
     */
    private final List<String> resizeCompatibleShapes;

    @CustomType.Constructor
    private GetShapesShape(
        @CustomType.Parameter("baselineOcpuUtilizations") List<String> baselineOcpuUtilizations,
        @CustomType.Parameter("billingType") String billingType,
        @CustomType.Parameter("gpuDescription") String gpuDescription,
        @CustomType.Parameter("gpus") Integer gpus,
        @CustomType.Parameter("isBilledForStoppedInstance") Boolean isBilledForStoppedInstance,
        @CustomType.Parameter("isFlexible") Boolean isFlexible,
        @CustomType.Parameter("isLiveMigrationSupported") Boolean isLiveMigrationSupported,
        @CustomType.Parameter("isSubcore") Boolean isSubcore,
        @CustomType.Parameter("localDiskDescription") String localDiskDescription,
        @CustomType.Parameter("localDisks") Integer localDisks,
        @CustomType.Parameter("localDisksTotalSizeInGbs") Double localDisksTotalSizeInGbs,
        @CustomType.Parameter("maxVnicAttachmentOptions") List<GetShapesShapeMaxVnicAttachmentOption> maxVnicAttachmentOptions,
        @CustomType.Parameter("maxVnicAttachments") Integer maxVnicAttachments,
        @CustomType.Parameter("memoryInGbs") Double memoryInGbs,
        @CustomType.Parameter("memoryOptions") List<GetShapesShapeMemoryOption> memoryOptions,
        @CustomType.Parameter("minTotalBaselineOcpusRequired") Double minTotalBaselineOcpusRequired,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networkPorts") Integer networkPorts,
        @CustomType.Parameter("networkingBandwidthInGbps") Double networkingBandwidthInGbps,
        @CustomType.Parameter("networkingBandwidthOptions") List<GetShapesShapeNetworkingBandwidthOption> networkingBandwidthOptions,
        @CustomType.Parameter("ocpuOptions") List<GetShapesShapeOcpuOption> ocpuOptions,
        @CustomType.Parameter("ocpus") Double ocpus,
        @CustomType.Parameter("platformConfigOptions") List<GetShapesShapePlatformConfigOption> platformConfigOptions,
        @CustomType.Parameter("processorDescription") String processorDescription,
        @CustomType.Parameter("quotaNames") List<String> quotaNames,
        @CustomType.Parameter("rdmaBandwidthInGbps") Integer rdmaBandwidthInGbps,
        @CustomType.Parameter("rdmaPorts") Integer rdmaPorts,
        @CustomType.Parameter("recommendedAlternatives") List<GetShapesShapeRecommendedAlternative> recommendedAlternatives,
        @CustomType.Parameter("resizeCompatibleShapes") List<String> resizeCompatibleShapes) {
        this.baselineOcpuUtilizations = baselineOcpuUtilizations;
        this.billingType = billingType;
        this.gpuDescription = gpuDescription;
        this.gpus = gpus;
        this.isBilledForStoppedInstance = isBilledForStoppedInstance;
        this.isFlexible = isFlexible;
        this.isLiveMigrationSupported = isLiveMigrationSupported;
        this.isSubcore = isSubcore;
        this.localDiskDescription = localDiskDescription;
        this.localDisks = localDisks;
        this.localDisksTotalSizeInGbs = localDisksTotalSizeInGbs;
        this.maxVnicAttachmentOptions = maxVnicAttachmentOptions;
        this.maxVnicAttachments = maxVnicAttachments;
        this.memoryInGbs = memoryInGbs;
        this.memoryOptions = memoryOptions;
        this.minTotalBaselineOcpusRequired = minTotalBaselineOcpusRequired;
        this.name = name;
        this.networkPorts = networkPorts;
        this.networkingBandwidthInGbps = networkingBandwidthInGbps;
        this.networkingBandwidthOptions = networkingBandwidthOptions;
        this.ocpuOptions = ocpuOptions;
        this.ocpus = ocpus;
        this.platformConfigOptions = platformConfigOptions;
        this.processorDescription = processorDescription;
        this.quotaNames = quotaNames;
        this.rdmaBandwidthInGbps = rdmaBandwidthInGbps;
        this.rdmaPorts = rdmaPorts;
        this.recommendedAlternatives = recommendedAlternatives;
        this.resizeCompatibleShapes = resizeCompatibleShapes;
    }

    /**
     * @return For a subcore burstable VM, the supported baseline OCPU utilization for instances that use this shape.
     * 
     */
    public List<String> baselineOcpuUtilizations() {
        return this.baselineOcpuUtilizations;
    }
    /**
     * @return How instances that use this shape are charged.
     * 
     */
    public String billingType() {
        return this.billingType;
    }
    /**
     * @return A short description of the graphics processing unit (GPU) available for this shape.
     * 
     */
    public String gpuDescription() {
        return this.gpuDescription;
    }
    /**
     * @return The number of GPUs available for this shape.
     * 
     */
    public Integer gpus() {
        return this.gpus;
    }
    /**
     * @return Whether billing continues when the instances that use this shape are in the stopped state.
     * 
     */
    public Boolean isBilledForStoppedInstance() {
        return this.isBilledForStoppedInstance;
    }
    /**
     * @return Whether the shape supports creating flexible instances. A [flexible shape](https://docs.cloud.oracle.com/iaas/Content/Compute/References/computeshapes.htm#flexible) is a shape that lets you customize the number of OCPUs and the amount of memory when launching or resizing your instance.
     * 
     */
    public Boolean isFlexible() {
        return this.isFlexible;
    }
    /**
     * @return Whether Live Migration is currently supported for this shape.
     * 
     */
    public Boolean isLiveMigrationSupported() {
        return this.isLiveMigrationSupported;
    }
    /**
     * @return Whether the shape supports creating subcore or burstable instances. A [burstable instance](https://docs.cloud.oracle.com/iaas/Content/Compute/References/burstable-instances.htm) is a virtual machine (VM) instance that provides a baseline level of CPU performance with the ability to burst to a higher level to support occasional spikes in usage.
     * 
     */
    public Boolean isSubcore() {
        return this.isSubcore;
    }
    /**
     * @return A short description of the local disks available for this shape.
     * 
     */
    public String localDiskDescription() {
        return this.localDiskDescription;
    }
    /**
     * @return The number of local disks available for this shape.
     * 
     */
    public Integer localDisks() {
        return this.localDisks;
    }
    /**
     * @return The aggregate size of the local disks available for this shape, in gigabytes.
     * 
     */
    public Double localDisksTotalSizeInGbs() {
        return this.localDisksTotalSizeInGbs;
    }
    /**
     * @return For a flexible shape, the number of VNIC attachments that are available for instances that use this shape.
     * 
     */
    public List<GetShapesShapeMaxVnicAttachmentOption> maxVnicAttachmentOptions() {
        return this.maxVnicAttachmentOptions;
    }
    /**
     * @return The maximum number of VNIC attachments available for this shape.
     * 
     */
    public Integer maxVnicAttachments() {
        return this.maxVnicAttachments;
    }
    /**
     * @return The default amount of memory available for this shape, in gigabytes.
     * 
     */
    public Double memoryInGbs() {
        return this.memoryInGbs;
    }
    /**
     * @return For a flexible shape, the amount of memory available for instances that use this shape.
     * 
     */
    public List<GetShapesShapeMemoryOption> memoryOptions() {
        return this.memoryOptions;
    }
    /**
     * @return For a subcore burstable VM, the minimum total baseline OCPUs required. The total baseline OCPUs is equal to baselineOcpuUtilization chosen multiplied by the number of OCPUs chosen.
     * 
     */
    public Double minTotalBaselineOcpusRequired() {
        return this.minTotalBaselineOcpusRequired;
    }
    /**
     * @return The name of the shape. You can enumerate all available shapes by calling [ListShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Shape/ListShapes).
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The number of physical network interface card (NIC) ports available for this shape.
     * 
     */
    public Integer networkPorts() {
        return this.networkPorts;
    }
    /**
     * @return The networking bandwidth available for this shape, in gigabits per second.
     * 
     */
    public Double networkingBandwidthInGbps() {
        return this.networkingBandwidthInGbps;
    }
    /**
     * @return For a flexible shape, the amount of networking bandwidth available for instances that use this shape.
     * 
     */
    public List<GetShapesShapeNetworkingBandwidthOption> networkingBandwidthOptions() {
        return this.networkingBandwidthOptions;
    }
    /**
     * @return For a flexible shape, the number of OCPUs available for instances that use this shape.
     * 
     */
    public List<GetShapesShapeOcpuOption> ocpuOptions() {
        return this.ocpuOptions;
    }
    /**
     * @return The default number of OCPUs available for this shape.
     * 
     */
    public Double ocpus() {
        return this.ocpus;
    }
    /**
     * @return The list of supported platform configuration options for this shape.
     * 
     */
    public List<GetShapesShapePlatformConfigOption> platformConfigOptions() {
        return this.platformConfigOptions;
    }
    /**
     * @return A short description of the shape&#39;s processor (CPU).
     * 
     */
    public String processorDescription() {
        return this.processorDescription;
    }
    /**
     * @return The list of of compartment quotas for the shape.
     * 
     */
    public List<String> quotaNames() {
        return this.quotaNames;
    }
    /**
     * @return The networking bandwidth available for the remote direct memory access (RDMA) network for this shape, in gigabits per second.
     * 
     */
    public Integer rdmaBandwidthInGbps() {
        return this.rdmaBandwidthInGbps;
    }
    /**
     * @return The number of networking ports available for the remote direct memory access (RDMA) network between nodes in a high performance computing (HPC) cluster network. If the shape does not support cluster networks, this value is `0`.
     * 
     */
    public Integer rdmaPorts() {
        return this.rdmaPorts;
    }
    /**
     * @return The list of shapes and shape details (if applicable) that Oracle recommends that you use as an alternative to the current shape.
     * 
     */
    public List<GetShapesShapeRecommendedAlternative> recommendedAlternatives() {
        return this.recommendedAlternatives;
    }
    /**
     * @return The list of compatible shapes that this shape can be changed to. For more information, see [Changing the Shape of an Instance](https://docs.cloud.oracle.com/iaas/Content/Compute/Tasks/resizinginstances.htm).
     * 
     */
    public List<String> resizeCompatibleShapes() {
        return this.resizeCompatibleShapes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetShapesShape defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> baselineOcpuUtilizations;
        private String billingType;
        private String gpuDescription;
        private Integer gpus;
        private Boolean isBilledForStoppedInstance;
        private Boolean isFlexible;
        private Boolean isLiveMigrationSupported;
        private Boolean isSubcore;
        private String localDiskDescription;
        private Integer localDisks;
        private Double localDisksTotalSizeInGbs;
        private List<GetShapesShapeMaxVnicAttachmentOption> maxVnicAttachmentOptions;
        private Integer maxVnicAttachments;
        private Double memoryInGbs;
        private List<GetShapesShapeMemoryOption> memoryOptions;
        private Double minTotalBaselineOcpusRequired;
        private String name;
        private Integer networkPorts;
        private Double networkingBandwidthInGbps;
        private List<GetShapesShapeNetworkingBandwidthOption> networkingBandwidthOptions;
        private List<GetShapesShapeOcpuOption> ocpuOptions;
        private Double ocpus;
        private List<GetShapesShapePlatformConfigOption> platformConfigOptions;
        private String processorDescription;
        private List<String> quotaNames;
        private Integer rdmaBandwidthInGbps;
        private Integer rdmaPorts;
        private List<GetShapesShapeRecommendedAlternative> recommendedAlternatives;
        private List<String> resizeCompatibleShapes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetShapesShape defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineOcpuUtilizations = defaults.baselineOcpuUtilizations;
    	      this.billingType = defaults.billingType;
    	      this.gpuDescription = defaults.gpuDescription;
    	      this.gpus = defaults.gpus;
    	      this.isBilledForStoppedInstance = defaults.isBilledForStoppedInstance;
    	      this.isFlexible = defaults.isFlexible;
    	      this.isLiveMigrationSupported = defaults.isLiveMigrationSupported;
    	      this.isSubcore = defaults.isSubcore;
    	      this.localDiskDescription = defaults.localDiskDescription;
    	      this.localDisks = defaults.localDisks;
    	      this.localDisksTotalSizeInGbs = defaults.localDisksTotalSizeInGbs;
    	      this.maxVnicAttachmentOptions = defaults.maxVnicAttachmentOptions;
    	      this.maxVnicAttachments = defaults.maxVnicAttachments;
    	      this.memoryInGbs = defaults.memoryInGbs;
    	      this.memoryOptions = defaults.memoryOptions;
    	      this.minTotalBaselineOcpusRequired = defaults.minTotalBaselineOcpusRequired;
    	      this.name = defaults.name;
    	      this.networkPorts = defaults.networkPorts;
    	      this.networkingBandwidthInGbps = defaults.networkingBandwidthInGbps;
    	      this.networkingBandwidthOptions = defaults.networkingBandwidthOptions;
    	      this.ocpuOptions = defaults.ocpuOptions;
    	      this.ocpus = defaults.ocpus;
    	      this.platformConfigOptions = defaults.platformConfigOptions;
    	      this.processorDescription = defaults.processorDescription;
    	      this.quotaNames = defaults.quotaNames;
    	      this.rdmaBandwidthInGbps = defaults.rdmaBandwidthInGbps;
    	      this.rdmaPorts = defaults.rdmaPorts;
    	      this.recommendedAlternatives = defaults.recommendedAlternatives;
    	      this.resizeCompatibleShapes = defaults.resizeCompatibleShapes;
        }

        public Builder baselineOcpuUtilizations(List<String> baselineOcpuUtilizations) {
            this.baselineOcpuUtilizations = Objects.requireNonNull(baselineOcpuUtilizations);
            return this;
        }
        public Builder baselineOcpuUtilizations(String... baselineOcpuUtilizations) {
            return baselineOcpuUtilizations(List.of(baselineOcpuUtilizations));
        }
        public Builder billingType(String billingType) {
            this.billingType = Objects.requireNonNull(billingType);
            return this;
        }
        public Builder gpuDescription(String gpuDescription) {
            this.gpuDescription = Objects.requireNonNull(gpuDescription);
            return this;
        }
        public Builder gpus(Integer gpus) {
            this.gpus = Objects.requireNonNull(gpus);
            return this;
        }
        public Builder isBilledForStoppedInstance(Boolean isBilledForStoppedInstance) {
            this.isBilledForStoppedInstance = Objects.requireNonNull(isBilledForStoppedInstance);
            return this;
        }
        public Builder isFlexible(Boolean isFlexible) {
            this.isFlexible = Objects.requireNonNull(isFlexible);
            return this;
        }
        public Builder isLiveMigrationSupported(Boolean isLiveMigrationSupported) {
            this.isLiveMigrationSupported = Objects.requireNonNull(isLiveMigrationSupported);
            return this;
        }
        public Builder isSubcore(Boolean isSubcore) {
            this.isSubcore = Objects.requireNonNull(isSubcore);
            return this;
        }
        public Builder localDiskDescription(String localDiskDescription) {
            this.localDiskDescription = Objects.requireNonNull(localDiskDescription);
            return this;
        }
        public Builder localDisks(Integer localDisks) {
            this.localDisks = Objects.requireNonNull(localDisks);
            return this;
        }
        public Builder localDisksTotalSizeInGbs(Double localDisksTotalSizeInGbs) {
            this.localDisksTotalSizeInGbs = Objects.requireNonNull(localDisksTotalSizeInGbs);
            return this;
        }
        public Builder maxVnicAttachmentOptions(List<GetShapesShapeMaxVnicAttachmentOption> maxVnicAttachmentOptions) {
            this.maxVnicAttachmentOptions = Objects.requireNonNull(maxVnicAttachmentOptions);
            return this;
        }
        public Builder maxVnicAttachmentOptions(GetShapesShapeMaxVnicAttachmentOption... maxVnicAttachmentOptions) {
            return maxVnicAttachmentOptions(List.of(maxVnicAttachmentOptions));
        }
        public Builder maxVnicAttachments(Integer maxVnicAttachments) {
            this.maxVnicAttachments = Objects.requireNonNull(maxVnicAttachments);
            return this;
        }
        public Builder memoryInGbs(Double memoryInGbs) {
            this.memoryInGbs = Objects.requireNonNull(memoryInGbs);
            return this;
        }
        public Builder memoryOptions(List<GetShapesShapeMemoryOption> memoryOptions) {
            this.memoryOptions = Objects.requireNonNull(memoryOptions);
            return this;
        }
        public Builder memoryOptions(GetShapesShapeMemoryOption... memoryOptions) {
            return memoryOptions(List.of(memoryOptions));
        }
        public Builder minTotalBaselineOcpusRequired(Double minTotalBaselineOcpusRequired) {
            this.minTotalBaselineOcpusRequired = Objects.requireNonNull(minTotalBaselineOcpusRequired);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networkPorts(Integer networkPorts) {
            this.networkPorts = Objects.requireNonNull(networkPorts);
            return this;
        }
        public Builder networkingBandwidthInGbps(Double networkingBandwidthInGbps) {
            this.networkingBandwidthInGbps = Objects.requireNonNull(networkingBandwidthInGbps);
            return this;
        }
        public Builder networkingBandwidthOptions(List<GetShapesShapeNetworkingBandwidthOption> networkingBandwidthOptions) {
            this.networkingBandwidthOptions = Objects.requireNonNull(networkingBandwidthOptions);
            return this;
        }
        public Builder networkingBandwidthOptions(GetShapesShapeNetworkingBandwidthOption... networkingBandwidthOptions) {
            return networkingBandwidthOptions(List.of(networkingBandwidthOptions));
        }
        public Builder ocpuOptions(List<GetShapesShapeOcpuOption> ocpuOptions) {
            this.ocpuOptions = Objects.requireNonNull(ocpuOptions);
            return this;
        }
        public Builder ocpuOptions(GetShapesShapeOcpuOption... ocpuOptions) {
            return ocpuOptions(List.of(ocpuOptions));
        }
        public Builder ocpus(Double ocpus) {
            this.ocpus = Objects.requireNonNull(ocpus);
            return this;
        }
        public Builder platformConfigOptions(List<GetShapesShapePlatformConfigOption> platformConfigOptions) {
            this.platformConfigOptions = Objects.requireNonNull(platformConfigOptions);
            return this;
        }
        public Builder platformConfigOptions(GetShapesShapePlatformConfigOption... platformConfigOptions) {
            return platformConfigOptions(List.of(platformConfigOptions));
        }
        public Builder processorDescription(String processorDescription) {
            this.processorDescription = Objects.requireNonNull(processorDescription);
            return this;
        }
        public Builder quotaNames(List<String> quotaNames) {
            this.quotaNames = Objects.requireNonNull(quotaNames);
            return this;
        }
        public Builder quotaNames(String... quotaNames) {
            return quotaNames(List.of(quotaNames));
        }
        public Builder rdmaBandwidthInGbps(Integer rdmaBandwidthInGbps) {
            this.rdmaBandwidthInGbps = Objects.requireNonNull(rdmaBandwidthInGbps);
            return this;
        }
        public Builder rdmaPorts(Integer rdmaPorts) {
            this.rdmaPorts = Objects.requireNonNull(rdmaPorts);
            return this;
        }
        public Builder recommendedAlternatives(List<GetShapesShapeRecommendedAlternative> recommendedAlternatives) {
            this.recommendedAlternatives = Objects.requireNonNull(recommendedAlternatives);
            return this;
        }
        public Builder recommendedAlternatives(GetShapesShapeRecommendedAlternative... recommendedAlternatives) {
            return recommendedAlternatives(List.of(recommendedAlternatives));
        }
        public Builder resizeCompatibleShapes(List<String> resizeCompatibleShapes) {
            this.resizeCompatibleShapes = Objects.requireNonNull(resizeCompatibleShapes);
            return this;
        }
        public Builder resizeCompatibleShapes(String... resizeCompatibleShapes) {
            return resizeCompatibleShapes(List.of(resizeCompatibleShapes));
        }        public GetShapesShape build() {
            return new GetShapesShape(baselineOcpuUtilizations, billingType, gpuDescription, gpus, isBilledForStoppedInstance, isFlexible, isLiveMigrationSupported, isSubcore, localDiskDescription, localDisks, localDisksTotalSizeInGbs, maxVnicAttachmentOptions, maxVnicAttachments, memoryInGbs, memoryOptions, minTotalBaselineOcpusRequired, name, networkPorts, networkingBandwidthInGbps, networkingBandwidthOptions, ocpuOptions, ocpus, platformConfigOptions, processorDescription, quotaNames, rdmaBandwidthInGbps, rdmaPorts, recommendedAlternatives, resizeCompatibleShapes);
        }
    }
}
