// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Dns.RrsetArgs;
import com.pulumi.oci.Dns.inputs.RrsetState;
import com.pulumi.oci.Dns.outputs.RrsetItem;
import com.pulumi.oci.Utilities;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Rrset resource in Oracle Cloud Infrastructure DNS service.
 * 
 * Replaces records in the specified RRSet. For private zones, the scope query parameter is required with a
 * value of `PRIVATE`. When the zone name is provided as a path parameter and `PRIVATE` is used for the scope
 * query parameter then the viewId query parameter is required.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * For legacy Rrsets that were created without using `scope`, these Rrsets can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Dns/rrset:Rrset test_rrset &#34;zoneNameOrId/{zoneNameOrId}/domain/{domain}/rtype/{rtype}&#34;
 * ```
 * 
 *  For Rrsets created using `scope` and `view_id`, these Rrsets can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Dns/rrset:Rrset test_rrset &#34;zoneNameOrId/{zoneNameOrId}/domain/{domain}/rtype/{rtype}/scope/{scope}/viewId/{viewId}&#34;
 * ```
 * 
 *  skip adding `{view_id}` at the end if Rrset was created without `view_id`.
 * 
 */
@ResourceType(type="oci:Dns/rrset:Rrset")
public class Rrset extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The OCID of the compartment the resource belongs to.
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment the resource belongs to.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * The fully qualified domain name where the record can be located.
     * 
     */
    @Export(name="domain", type=String.class, parameters={})
    private Output<String> domain;

    /**
     * @return The fully qualified domain name where the record can be located.
     * 
     */
    public Output<String> domain() {
        return this.domain;
    }
    /**
     * (Updatable)
     * **NOTE** Omitting `items` at time of create, will delete any existing records in the RRSet
     * 
     */
    @Export(name="items", type=List.class, parameters={RrsetItem.class})
    private Output<List<RrsetItem>> items;

    /**
     * @return (Updatable)
     * **NOTE** Omitting `items` at time of create, will delete any existing records in the RRSet
     * 
     */
    public Output<List<RrsetItem>> items() {
        return this.items;
    }
    /**
     * The type of the target RRSet within the target zone.
     * 
     */
    @Export(name="rtype", type=String.class, parameters={})
    private Output<String> rtype;

    /**
     * @return The type of the target RRSet within the target zone.
     * 
     */
    public Output<String> rtype() {
        return this.rtype;
    }
    /**
     * Specifies to operate only on resources that have a matching DNS scope.
     * This value will be null for zones in the global DNS and `PRIVATE` when creating private Rrsets.
     * 
     */
    @Export(name="scope", type=String.class, parameters={})
    private Output</* @Nullable */ String> scope;

    /**
     * @return Specifies to operate only on resources that have a matching DNS scope.
     * This value will be null for zones in the global DNS and `PRIVATE` when creating private Rrsets.
     * 
     */
    public Output<Optional<String>> scope() {
        return Codegen.optional(this.scope);
    }
    /**
     * The OCID of the view the resource is associated with.
     * 
     */
    @Export(name="viewId", type=String.class, parameters={})
    private Output</* @Nullable */ String> viewId;

    /**
     * @return The OCID of the view the resource is associated with.
     * 
     */
    public Output<Optional<String>> viewId() {
        return Codegen.optional(this.viewId);
    }
    /**
     * The name or OCID of the target zone.
     * 
     */
    @Export(name="zoneNameOrId", type=String.class, parameters={})
    private Output<String> zoneNameOrId;

    /**
     * @return The name or OCID of the target zone.
     * 
     */
    public Output<String> zoneNameOrId() {
        return this.zoneNameOrId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Rrset(String name) {
        this(name, RrsetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Rrset(String name, RrsetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Rrset(String name, RrsetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Dns/rrset:Rrset", name, args == null ? RrsetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Rrset(String name, Output<String> id, @Nullable RrsetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Dns/rrset:Rrset", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Rrset get(String name, Output<String> id, @Nullable RrsetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Rrset(name, id, state, options);
    }
}
