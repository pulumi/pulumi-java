// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseSoftwareImageArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseSoftwareImageArgs Empty = new DatabaseSoftwareImageArgs();

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment the database software image  belongs in.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment the database software image  belongs in.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * List of one-off patches for Database Homes.
     * 
     */
    @Import(name="databaseSoftwareImageOneOffPatches")
    private @Nullable Output<List<String>> databaseSoftwareImageOneOffPatches;

    /**
     * @return List of one-off patches for Database Homes.
     * 
     */
    public Optional<Output<List<String>>> databaseSoftwareImageOneOffPatches() {
        return Optional.ofNullable(this.databaseSoftwareImageOneOffPatches);
    }

    /**
     * The database version with which the database software image is to be built.
     * 
     */
    @Import(name="databaseVersion")
    private @Nullable Output<String> databaseVersion;

    /**
     * @return The database version with which the database software image is to be built.
     * 
     */
    public Optional<Output<String>> databaseVersion() {
        return Optional.ofNullable(this.databaseVersion);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The user-friendly name for the database software image. The name does not have to be unique.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) The user-friendly name for the database software image. The name does not have to be unique.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * To what shape the image is meant for.
     * 
     */
    @Import(name="imageShapeFamily")
    private @Nullable Output<String> imageShapeFamily;

    /**
     * @return To what shape the image is meant for.
     * 
     */
    public Optional<Output<String>> imageShapeFamily() {
        return Optional.ofNullable(this.imageShapeFamily);
    }

    /**
     * The type of software image. Can be grid or database.
     * 
     */
    @Import(name="imageType")
    private @Nullable Output<String> imageType;

    /**
     * @return The type of software image. Can be grid or database.
     * 
     */
    public Optional<Output<String>> imageType() {
        return Optional.ofNullable(this.imageType);
    }

    /**
     * output from lsinventory which will get passed as a string
     * 
     */
    @Import(name="lsInventory")
    private @Nullable Output<String> lsInventory;

    /**
     * @return output from lsinventory which will get passed as a string
     * 
     */
    public Optional<Output<String>> lsInventory() {
        return Optional.ofNullable(this.lsInventory);
    }

    /**
     * The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     * 
     */
    @Import(name="patchSet")
    private @Nullable Output<String> patchSet;

    /**
     * @return The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     * 
     */
    public Optional<Output<String>> patchSet() {
        return Optional.ofNullable(this.patchSet);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     * 
     */
    @Import(name="sourceDbHomeId")
    private @Nullable Output<String> sourceDbHomeId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
     * 
     */
    public Optional<Output<String>> sourceDbHomeId() {
        return Optional.ofNullable(this.sourceDbHomeId);
    }

    private DatabaseSoftwareImageArgs() {}

    private DatabaseSoftwareImageArgs(DatabaseSoftwareImageArgs $) {
        this.compartmentId = $.compartmentId;
        this.databaseSoftwareImageOneOffPatches = $.databaseSoftwareImageOneOffPatches;
        this.databaseVersion = $.databaseVersion;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.imageShapeFamily = $.imageShapeFamily;
        this.imageType = $.imageType;
        this.lsInventory = $.lsInventory;
        this.patchSet = $.patchSet;
        this.sourceDbHomeId = $.sourceDbHomeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseSoftwareImageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseSoftwareImageArgs $;

        public Builder() {
            $ = new DatabaseSoftwareImageArgs();
        }

        public Builder(DatabaseSoftwareImageArgs defaults) {
            $ = new DatabaseSoftwareImageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment the database software image  belongs in.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment the database software image  belongs in.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param databaseSoftwareImageOneOffPatches List of one-off patches for Database Homes.
         * 
         * @return builder
         * 
         */
        public Builder databaseSoftwareImageOneOffPatches(@Nullable Output<List<String>> databaseSoftwareImageOneOffPatches) {
            $.databaseSoftwareImageOneOffPatches = databaseSoftwareImageOneOffPatches;
            return this;
        }

        /**
         * @param databaseSoftwareImageOneOffPatches List of one-off patches for Database Homes.
         * 
         * @return builder
         * 
         */
        public Builder databaseSoftwareImageOneOffPatches(List<String> databaseSoftwareImageOneOffPatches) {
            return databaseSoftwareImageOneOffPatches(Output.of(databaseSoftwareImageOneOffPatches));
        }

        /**
         * @param databaseSoftwareImageOneOffPatches List of one-off patches for Database Homes.
         * 
         * @return builder
         * 
         */
        public Builder databaseSoftwareImageOneOffPatches(String... databaseSoftwareImageOneOffPatches) {
            return databaseSoftwareImageOneOffPatches(List.of(databaseSoftwareImageOneOffPatches));
        }

        /**
         * @param databaseVersion The database version with which the database software image is to be built.
         * 
         * @return builder
         * 
         */
        public Builder databaseVersion(@Nullable Output<String> databaseVersion) {
            $.databaseVersion = databaseVersion;
            return this;
        }

        /**
         * @param databaseVersion The database version with which the database software image is to be built.
         * 
         * @return builder
         * 
         */
        public Builder databaseVersion(String databaseVersion) {
            return databaseVersion(Output.of(databaseVersion));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) The user-friendly name for the database software image. The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The user-friendly name for the database software image. The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param imageShapeFamily To what shape the image is meant for.
         * 
         * @return builder
         * 
         */
        public Builder imageShapeFamily(@Nullable Output<String> imageShapeFamily) {
            $.imageShapeFamily = imageShapeFamily;
            return this;
        }

        /**
         * @param imageShapeFamily To what shape the image is meant for.
         * 
         * @return builder
         * 
         */
        public Builder imageShapeFamily(String imageShapeFamily) {
            return imageShapeFamily(Output.of(imageShapeFamily));
        }

        /**
         * @param imageType The type of software image. Can be grid or database.
         * 
         * @return builder
         * 
         */
        public Builder imageType(@Nullable Output<String> imageType) {
            $.imageType = imageType;
            return this;
        }

        /**
         * @param imageType The type of software image. Can be grid or database.
         * 
         * @return builder
         * 
         */
        public Builder imageType(String imageType) {
            return imageType(Output.of(imageType));
        }

        /**
         * @param lsInventory output from lsinventory which will get passed as a string
         * 
         * @return builder
         * 
         */
        public Builder lsInventory(@Nullable Output<String> lsInventory) {
            $.lsInventory = lsInventory;
            return this;
        }

        /**
         * @param lsInventory output from lsinventory which will get passed as a string
         * 
         * @return builder
         * 
         */
        public Builder lsInventory(String lsInventory) {
            return lsInventory(Output.of(lsInventory));
        }

        /**
         * @param patchSet The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
         * 
         * @return builder
         * 
         */
        public Builder patchSet(@Nullable Output<String> patchSet) {
            $.patchSet = patchSet;
            return this;
        }

        /**
         * @param patchSet The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
         * 
         * @return builder
         * 
         */
        public Builder patchSet(String patchSet) {
            return patchSet(Output.of(patchSet));
        }

        /**
         * @param sourceDbHomeId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
         * 
         * @return builder
         * 
         */
        public Builder sourceDbHomeId(@Nullable Output<String> sourceDbHomeId) {
            $.sourceDbHomeId = sourceDbHomeId;
            return this;
        }

        /**
         * @param sourceDbHomeId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Database Home.
         * 
         * @return builder
         * 
         */
        public Builder sourceDbHomeId(String sourceDbHomeId) {
            return sourceDbHomeId(Output.of(sourceDbHomeId));
        }

        public DatabaseSoftwareImageArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            return $;
        }
    }

}
