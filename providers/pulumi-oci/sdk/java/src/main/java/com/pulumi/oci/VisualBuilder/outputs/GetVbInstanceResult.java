// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VisualBuilder.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.VisualBuilder.outputs.GetVbInstanceAlternateCustomEndpoint;
import com.pulumi.oci.VisualBuilder.outputs.GetVbInstanceCustomEndpoint;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVbInstanceResult {
    /**
     * @return A list of alternate custom endpoints used for the vb instance URL.
     * 
     */
    private final List<GetVbInstanceAlternateCustomEndpoint> alternateCustomEndpoints;
    /**
     * @return Compartment Identifier.
     * 
     */
    private final String compartmentId;
    /**
     * @return The entitlement used for billing purposes.
     * 
     */
    private final String consumptionModel;
    /**
     * @return Details for a custom endpoint for the vb instance.
     * 
     */
    private final List<GetVbInstanceCustomEndpoint> customEndpoints;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Vb Instance Identifier, can be renamed.
     * 
     */
    private final String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    private final String id;
    private final String idcsOpenId;
    /**
     * @return The Vb Instance URL.
     * 
     */
    private final String instanceUrl;
    /**
     * @return Visual Builder is enabled or not.
     * 
     */
    private final Boolean isVisualBuilderEnabled;
    /**
     * @return The number of Nodes
     * 
     */
    private final Integer nodeCount;
    /**
     * @return The current state of the vb instance.
     * 
     */
    private final String state;
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private final String stateMessage;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The time the the VbInstance was created. An RFC3339 formatted datetime string.
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the VbInstance was updated. An RFC3339 formatted datetime string.
     * 
     */
    private final String timeUpdated;
    private final String vbInstanceId;

    @CustomType.Constructor
    private GetVbInstanceResult(
        @CustomType.Parameter("alternateCustomEndpoints") List<GetVbInstanceAlternateCustomEndpoint> alternateCustomEndpoints,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("consumptionModel") String consumptionModel,
        @CustomType.Parameter("customEndpoints") List<GetVbInstanceCustomEndpoint> customEndpoints,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("idcsOpenId") String idcsOpenId,
        @CustomType.Parameter("instanceUrl") String instanceUrl,
        @CustomType.Parameter("isVisualBuilderEnabled") Boolean isVisualBuilderEnabled,
        @CustomType.Parameter("nodeCount") Integer nodeCount,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("stateMessage") String stateMessage,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("vbInstanceId") String vbInstanceId) {
        this.alternateCustomEndpoints = alternateCustomEndpoints;
        this.compartmentId = compartmentId;
        this.consumptionModel = consumptionModel;
        this.customEndpoints = customEndpoints;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.idcsOpenId = idcsOpenId;
        this.instanceUrl = instanceUrl;
        this.isVisualBuilderEnabled = isVisualBuilderEnabled;
        this.nodeCount = nodeCount;
        this.state = state;
        this.stateMessage = stateMessage;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
        this.vbInstanceId = vbInstanceId;
    }

    /**
     * @return A list of alternate custom endpoints used for the vb instance URL.
     * 
     */
    public List<GetVbInstanceAlternateCustomEndpoint> alternateCustomEndpoints() {
        return this.alternateCustomEndpoints;
    }
    /**
     * @return Compartment Identifier.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The entitlement used for billing purposes.
     * 
     */
    public String consumptionModel() {
        return this.consumptionModel;
    }
    /**
     * @return Details for a custom endpoint for the vb instance.
     * 
     */
    public List<GetVbInstanceCustomEndpoint> customEndpoints() {
        return this.customEndpoints;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Vb Instance Identifier, can be renamed.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    public String id() {
        return this.id;
    }
    public String idcsOpenId() {
        return this.idcsOpenId;
    }
    /**
     * @return The Vb Instance URL.
     * 
     */
    public String instanceUrl() {
        return this.instanceUrl;
    }
    /**
     * @return Visual Builder is enabled or not.
     * 
     */
    public Boolean isVisualBuilderEnabled() {
        return this.isVisualBuilderEnabled;
    }
    /**
     * @return The number of Nodes
     * 
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }
    /**
     * @return The current state of the vb instance.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String stateMessage() {
        return this.stateMessage;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the the VbInstance was created. An RFC3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the VbInstance was updated. An RFC3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    public String vbInstanceId() {
        return this.vbInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVbInstanceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetVbInstanceAlternateCustomEndpoint> alternateCustomEndpoints;
        private String compartmentId;
        private String consumptionModel;
        private List<GetVbInstanceCustomEndpoint> customEndpoints;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String idcsOpenId;
        private String instanceUrl;
        private Boolean isVisualBuilderEnabled;
        private Integer nodeCount;
        private String state;
        private String stateMessage;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private String vbInstanceId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVbInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alternateCustomEndpoints = defaults.alternateCustomEndpoints;
    	      this.compartmentId = defaults.compartmentId;
    	      this.consumptionModel = defaults.consumptionModel;
    	      this.customEndpoints = defaults.customEndpoints;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.idcsOpenId = defaults.idcsOpenId;
    	      this.instanceUrl = defaults.instanceUrl;
    	      this.isVisualBuilderEnabled = defaults.isVisualBuilderEnabled;
    	      this.nodeCount = defaults.nodeCount;
    	      this.state = defaults.state;
    	      this.stateMessage = defaults.stateMessage;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vbInstanceId = defaults.vbInstanceId;
        }

        public Builder alternateCustomEndpoints(List<GetVbInstanceAlternateCustomEndpoint> alternateCustomEndpoints) {
            this.alternateCustomEndpoints = Objects.requireNonNull(alternateCustomEndpoints);
            return this;
        }
        public Builder alternateCustomEndpoints(GetVbInstanceAlternateCustomEndpoint... alternateCustomEndpoints) {
            return alternateCustomEndpoints(List.of(alternateCustomEndpoints));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder consumptionModel(String consumptionModel) {
            this.consumptionModel = Objects.requireNonNull(consumptionModel);
            return this;
        }
        public Builder customEndpoints(List<GetVbInstanceCustomEndpoint> customEndpoints) {
            this.customEndpoints = Objects.requireNonNull(customEndpoints);
            return this;
        }
        public Builder customEndpoints(GetVbInstanceCustomEndpoint... customEndpoints) {
            return customEndpoints(List.of(customEndpoints));
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder idcsOpenId(String idcsOpenId) {
            this.idcsOpenId = Objects.requireNonNull(idcsOpenId);
            return this;
        }
        public Builder instanceUrl(String instanceUrl) {
            this.instanceUrl = Objects.requireNonNull(instanceUrl);
            return this;
        }
        public Builder isVisualBuilderEnabled(Boolean isVisualBuilderEnabled) {
            this.isVisualBuilderEnabled = Objects.requireNonNull(isVisualBuilderEnabled);
            return this;
        }
        public Builder nodeCount(Integer nodeCount) {
            this.nodeCount = Objects.requireNonNull(nodeCount);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder stateMessage(String stateMessage) {
            this.stateMessage = Objects.requireNonNull(stateMessage);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder vbInstanceId(String vbInstanceId) {
            this.vbInstanceId = Objects.requireNonNull(vbInstanceId);
            return this;
        }        public GetVbInstanceResult build() {
            return new GetVbInstanceResult(alternateCustomEndpoints, compartmentId, consumptionModel, customEndpoints, definedTags, displayName, freeformTags, id, idcsOpenId, instanceUrl, isVisualBuilderEnabled, nodeCount, state, stateMessage, systemTags, timeCreated, timeUpdated, vbInstanceId);
        }
    }
}
