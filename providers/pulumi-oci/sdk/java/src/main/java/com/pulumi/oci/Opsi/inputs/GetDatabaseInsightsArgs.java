// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Opsi.inputs.GetDatabaseInsightsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDatabaseInsightsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDatabaseInsightsArgs Empty = new GetDatabaseInsightsArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A flag to search all resources within a given compartment and all sub-compartments.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Boolean compartmentIdInSubtree;

    /**
     * @return A flag to search all resources within a given compartment and all sub-compartments.
     * 
     */
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    /**
     * Optional list of database [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated DBaaS entity.
     * 
     */
    @Import(name="databaseIds")
    private @Nullable List<String> databaseIds;

    /**
     * @return Optional list of database [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated DBaaS entity.
     * 
     */
    public Optional<List<String>> databaseIds() {
        return Optional.ofNullable(this.databaseIds);
    }

    /**
     * Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
     * 
     */
    @Import(name="databaseTypes")
    private @Nullable List<String> databaseTypes;

    /**
     * @return Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
     * 
     */
    public Optional<List<String>> databaseTypes() {
        return Optional.ofNullable(this.databaseTypes);
    }

    /**
     * Unique Enterprise Manager bridge identifier
     * 
     */
    @Import(name="enterpriseManagerBridgeId")
    private @Nullable String enterpriseManagerBridgeId;

    /**
     * @return Unique Enterprise Manager bridge identifier
     * 
     */
    public Optional<String> enterpriseManagerBridgeId() {
        return Optional.ofNullable(this.enterpriseManagerBridgeId);
    }

    /**
     * [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of exadata insight resource.
     * 
     */
    @Import(name="exadataInsightId")
    private @Nullable String exadataInsightId;

    /**
     * @return [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of exadata insight resource.
     * 
     */
    public Optional<String> exadataInsightId() {
        return Optional.ofNullable(this.exadataInsightId);
    }

    /**
     * Specifies the fields to return in a database summary response. By default all fields are returned if omitted.
     * 
     */
    @Import(name="fields")
    private @Nullable List<String> fields;

    /**
     * @return Specifies the fields to return in a database summary response. By default all fields are returned if omitted.
     * 
     */
    public Optional<List<String>> fields() {
        return Optional.ofNullable(this.fields);
    }

    @Import(name="filters")
    private @Nullable List<GetDatabaseInsightsFilter> filters;

    public Optional<List<GetDatabaseInsightsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Optional list of database insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return Optional list of database insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Unique Operations Insights PrivateEndpoint identifier
     * 
     */
    @Import(name="opsiPrivateEndpointId")
    private @Nullable String opsiPrivateEndpointId;

    /**
     * @return Unique Operations Insights PrivateEndpoint identifier
     * 
     */
    public Optional<String> opsiPrivateEndpointId() {
        return Optional.ofNullable(this.opsiPrivateEndpointId);
    }

    /**
     * Lifecycle states
     * 
     */
    @Import(name="states")
    private @Nullable List<String> states;

    /**
     * @return Lifecycle states
     * 
     */
    public Optional<List<String>> states() {
        return Optional.ofNullable(this.states);
    }

    /**
     * Resource Status
     * 
     */
    @Import(name="statuses")
    private @Nullable List<String> statuses;

    /**
     * @return Resource Status
     * 
     */
    public Optional<List<String>> statuses() {
        return Optional.ofNullable(this.statuses);
    }

    private GetDatabaseInsightsArgs() {}

    private GetDatabaseInsightsArgs(GetDatabaseInsightsArgs $) {
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.databaseIds = $.databaseIds;
        this.databaseTypes = $.databaseTypes;
        this.enterpriseManagerBridgeId = $.enterpriseManagerBridgeId;
        this.exadataInsightId = $.exadataInsightId;
        this.fields = $.fields;
        this.filters = $.filters;
        this.id = $.id;
        this.opsiPrivateEndpointId = $.opsiPrivateEndpointId;
        this.states = $.states;
        this.statuses = $.statuses;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDatabaseInsightsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDatabaseInsightsArgs $;

        public Builder() {
            $ = new GetDatabaseInsightsArgs();
        }

        public Builder(GetDatabaseInsightsArgs defaults) {
            $ = new GetDatabaseInsightsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentIdInSubtree A flag to search all resources within a given compartment and all sub-compartments.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param databaseIds Optional list of database [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated DBaaS entity.
         * 
         * @return builder
         * 
         */
        public Builder databaseIds(@Nullable List<String> databaseIds) {
            $.databaseIds = databaseIds;
            return this;
        }

        /**
         * @param databaseIds Optional list of database [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the associated DBaaS entity.
         * 
         * @return builder
         * 
         */
        public Builder databaseIds(String... databaseIds) {
            return databaseIds(List.of(databaseIds));
        }

        /**
         * @param databaseTypes Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
         * 
         * @return builder
         * 
         */
        public Builder databaseTypes(@Nullable List<String> databaseTypes) {
            $.databaseTypes = databaseTypes;
            return this;
        }

        /**
         * @param databaseTypes Filter by one or more database type. Possible values are ADW-S, ATP-S, ADW-D, ATP-D, EXTERNAL-PDB, EXTERNAL-NONCDB.
         * 
         * @return builder
         * 
         */
        public Builder databaseTypes(String... databaseTypes) {
            return databaseTypes(List.of(databaseTypes));
        }

        /**
         * @param enterpriseManagerBridgeId Unique Enterprise Manager bridge identifier
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerBridgeId(@Nullable String enterpriseManagerBridgeId) {
            $.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
            return this;
        }

        /**
         * @param exadataInsightId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of exadata insight resource.
         * 
         * @return builder
         * 
         */
        public Builder exadataInsightId(@Nullable String exadataInsightId) {
            $.exadataInsightId = exadataInsightId;
            return this;
        }

        /**
         * @param fields Specifies the fields to return in a database summary response. By default all fields are returned if omitted.
         * 
         * @return builder
         * 
         */
        public Builder fields(@Nullable List<String> fields) {
            $.fields = fields;
            return this;
        }

        /**
         * @param fields Specifies the fields to return in a database summary response. By default all fields are returned if omitted.
         * 
         * @return builder
         * 
         */
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }

        public Builder filters(@Nullable List<GetDatabaseInsightsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetDatabaseInsightsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id Optional list of database insight resource [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param opsiPrivateEndpointId Unique Operations Insights PrivateEndpoint identifier
         * 
         * @return builder
         * 
         */
        public Builder opsiPrivateEndpointId(@Nullable String opsiPrivateEndpointId) {
            $.opsiPrivateEndpointId = opsiPrivateEndpointId;
            return this;
        }

        /**
         * @param states Lifecycle states
         * 
         * @return builder
         * 
         */
        public Builder states(@Nullable List<String> states) {
            $.states = states;
            return this;
        }

        /**
         * @param states Lifecycle states
         * 
         * @return builder
         * 
         */
        public Builder states(String... states) {
            return states(List.of(states));
        }

        /**
         * @param statuses Resource Status
         * 
         * @return builder
         * 
         */
        public Builder statuses(@Nullable List<String> statuses) {
            $.statuses = statuses;
            return this;
        }

        /**
         * @param statuses Resource Status
         * 
         * @return builder
         * 
         */
        public Builder statuses(String... statuses) {
            return statuses(List.of(statuses));
        }

        public GetDatabaseInsightsArgs build() {
            return $;
        }
    }

}
