// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs Empty = new InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs();

    /**
     * The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
     * 
     */
    @Import(name="baselineOcpuUtilization")
    private @Nullable Output<String> baselineOcpuUtilization;

    /**
     * @return The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
     * 
     */
    public Optional<Output<String>> baselineOcpuUtilization() {
        return Optional.ofNullable(this.baselineOcpuUtilization);
    }

    /**
     * The total amount of memory available to the instance, in gigabytes.
     * 
     */
    @Import(name="memoryInGbs")
    private @Nullable Output<Double> memoryInGbs;

    /**
     * @return The total amount of memory available to the instance, in gigabytes.
     * 
     */
    public Optional<Output<Double>> memoryInGbs() {
        return Optional.ofNullable(this.memoryInGbs);
    }

    /**
     * The total number of OCPUs available to the instance.
     * 
     */
    @Import(name="ocpus")
    private @Nullable Output<Double> ocpus;

    /**
     * @return The total number of OCPUs available to the instance.
     * 
     */
    public Optional<Output<Double>> ocpus() {
        return Optional.ofNullable(this.ocpus);
    }

    private InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs() {}

    private InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs(InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs $) {
        this.baselineOcpuUtilization = $.baselineOcpuUtilization;
        this.memoryInGbs = $.memoryInGbs;
        this.ocpus = $.ocpus;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs $;

        public Builder() {
            $ = new InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs();
        }

        public Builder(InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs defaults) {
            $ = new InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param baselineOcpuUtilization The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
         * 
         * @return builder
         * 
         */
        public Builder baselineOcpuUtilization(@Nullable Output<String> baselineOcpuUtilization) {
            $.baselineOcpuUtilization = baselineOcpuUtilization;
            return this;
        }

        /**
         * @param baselineOcpuUtilization The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
         * 
         * @return builder
         * 
         */
        public Builder baselineOcpuUtilization(String baselineOcpuUtilization) {
            return baselineOcpuUtilization(Output.of(baselineOcpuUtilization));
        }

        /**
         * @param memoryInGbs The total amount of memory available to the instance, in gigabytes.
         * 
         * @return builder
         * 
         */
        public Builder memoryInGbs(@Nullable Output<Double> memoryInGbs) {
            $.memoryInGbs = memoryInGbs;
            return this;
        }

        /**
         * @param memoryInGbs The total amount of memory available to the instance, in gigabytes.
         * 
         * @return builder
         * 
         */
        public Builder memoryInGbs(Double memoryInGbs) {
            return memoryInGbs(Output.of(memoryInGbs));
        }

        /**
         * @param ocpus The total number of OCPUs available to the instance.
         * 
         * @return builder
         * 
         */
        public Builder ocpus(@Nullable Output<Double> ocpus) {
            $.ocpus = ocpus;
            return this;
        }

        /**
         * @param ocpus The total number of OCPUs available to the instance.
         * 
         * @return builder
         * 
         */
        public Builder ocpus(Double ocpus) {
            return ocpus(Output.of(ocpus));
        }

        public InstanceConfigurationInstanceDetailsLaunchDetailsShapeConfigArgs build() {
            return $;
        }
    }

}
