// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult {
    /**
     * @return The text string identifying the type of execution plan.
     * 
     */
    private final String attribute;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String managedDatabaseId;
    /**
     * @return A SQL execution plan as a list of steps.
     * 
     */
    private final List<GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan> plans;
    private final String sqlObjectId;
    private final String sqlTuningAdvisorTaskId;

    @CustomType.Constructor
    private GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult(
        @CustomType.Parameter("attribute") String attribute,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("managedDatabaseId") String managedDatabaseId,
        @CustomType.Parameter("plans") List<GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan> plans,
        @CustomType.Parameter("sqlObjectId") String sqlObjectId,
        @CustomType.Parameter("sqlTuningAdvisorTaskId") String sqlTuningAdvisorTaskId) {
        this.attribute = attribute;
        this.id = id;
        this.managedDatabaseId = managedDatabaseId;
        this.plans = plans;
        this.sqlObjectId = sqlObjectId;
        this.sqlTuningAdvisorTaskId = sqlTuningAdvisorTaskId;
    }

    /**
     * @return The text string identifying the type of execution plan.
     * 
     */
    public String attribute() {
        return this.attribute;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }
    /**
     * @return A SQL execution plan as a list of steps.
     * 
     */
    public List<GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan> plans() {
        return this.plans;
    }
    public String sqlObjectId() {
        return this.sqlObjectId;
    }
    public String sqlTuningAdvisorTaskId() {
        return this.sqlTuningAdvisorTaskId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String attribute;
        private String id;
        private String managedDatabaseId;
        private List<GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan> plans;
        private String sqlObjectId;
        private String sqlTuningAdvisorTaskId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attribute = defaults.attribute;
    	      this.id = defaults.id;
    	      this.managedDatabaseId = defaults.managedDatabaseId;
    	      this.plans = defaults.plans;
    	      this.sqlObjectId = defaults.sqlObjectId;
    	      this.sqlTuningAdvisorTaskId = defaults.sqlTuningAdvisorTaskId;
        }

        public Builder attribute(String attribute) {
            this.attribute = Objects.requireNonNull(attribute);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder managedDatabaseId(String managedDatabaseId) {
            this.managedDatabaseId = Objects.requireNonNull(managedDatabaseId);
            return this;
        }
        public Builder plans(List<GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan> plans) {
            this.plans = Objects.requireNonNull(plans);
            return this;
        }
        public Builder plans(GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanPlan... plans) {
            return plans(List.of(plans));
        }
        public Builder sqlObjectId(String sqlObjectId) {
            this.sqlObjectId = Objects.requireNonNull(sqlObjectId);
            return this;
        }
        public Builder sqlTuningAdvisorTaskId(String sqlTuningAdvisorTaskId) {
            this.sqlTuningAdvisorTaskId = Objects.requireNonNull(sqlTuningAdvisorTaskId);
            return this;
        }        public GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult build() {
            return new GetManagedDatabaseSqlTuningAdvisorTasksSqlExecutionPlanResult(attribute, id, managedDatabaseId, plans, sqlObjectId, sqlTuningAdvisorTaskId);
        }
    }
}
