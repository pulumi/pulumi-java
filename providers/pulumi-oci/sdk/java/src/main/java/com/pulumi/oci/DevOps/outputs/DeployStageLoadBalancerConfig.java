// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeployStageLoadBalancerConfig {
    /**
     * @return (Updatable) Listen port for the backend server.
     * 
     */
    private final @Nullable Integer backendPort;
    /**
     * @return (Updatable) Name of the load balancer listener.
     * 
     */
    private final @Nullable String listenerName;
    /**
     * @return (Updatable) The OCID of the load balancer.
     * 
     */
    private final @Nullable String loadBalancerId;
    /**
     * @return The current state of the deployment stage.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private DeployStageLoadBalancerConfig(
        @CustomType.Parameter("backendPort") @Nullable Integer backendPort,
        @CustomType.Parameter("listenerName") @Nullable String listenerName,
        @CustomType.Parameter("loadBalancerId") @Nullable String loadBalancerId,
        @CustomType.Parameter("state") @Nullable String state) {
        this.backendPort = backendPort;
        this.listenerName = listenerName;
        this.loadBalancerId = loadBalancerId;
        this.state = state;
    }

    /**
     * @return (Updatable) Listen port for the backend server.
     * 
     */
    public Optional<Integer> backendPort() {
        return Optional.ofNullable(this.backendPort);
    }
    /**
     * @return (Updatable) Name of the load balancer listener.
     * 
     */
    public Optional<String> listenerName() {
        return Optional.ofNullable(this.listenerName);
    }
    /**
     * @return (Updatable) The OCID of the load balancer.
     * 
     */
    public Optional<String> loadBalancerId() {
        return Optional.ofNullable(this.loadBalancerId);
    }
    /**
     * @return The current state of the deployment stage.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeployStageLoadBalancerConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer backendPort;
        private @Nullable String listenerName;
        private @Nullable String loadBalancerId;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(DeployStageLoadBalancerConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendPort = defaults.backendPort;
    	      this.listenerName = defaults.listenerName;
    	      this.loadBalancerId = defaults.loadBalancerId;
    	      this.state = defaults.state;
        }

        public Builder backendPort(@Nullable Integer backendPort) {
            this.backendPort = backendPort;
            return this;
        }
        public Builder listenerName(@Nullable String listenerName) {
            this.listenerName = listenerName;
            return this;
        }
        public Builder loadBalancerId(@Nullable String loadBalancerId) {
            this.loadBalancerId = loadBalancerId;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public DeployStageLoadBalancerConfig build() {
            return new DeployStageLoadBalancerConfig(backendPort, listenerName, loadBalancerId, state);
        }
    }
}
