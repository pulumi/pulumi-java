// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.CloudGuard.inputs.DetectorRecipeDetectorRuleDetailsConfigurationValueArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DetectorRecipeDetectorRuleDetailsConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final DetectorRecipeDetectorRuleDetailsConfigurationArgs Empty = new DetectorRecipeDetectorRuleDetailsConfigurationArgs();

    /**
     * (Updatable) Unique name of the configuration
     * 
     */
    @Import(name="configKey", required=true)
    private Output<String> configKey;

    /**
     * @return (Updatable) Unique name of the configuration
     * 
     */
    public Output<String> configKey() {
        return this.configKey;
    }

    /**
     * (Updatable) configuration data type
     * 
     */
    @Import(name="dataType")
    private @Nullable Output<String> dataType;

    /**
     * @return (Updatable) configuration data type
     * 
     */
    public Optional<Output<String>> dataType() {
        return Optional.ofNullable(this.dataType);
    }

    /**
     * (Updatable) configuration name
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return (Updatable) configuration name
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * (Updatable) configuration value
     * 
     */
    @Import(name="value")
    private @Nullable Output<String> value;

    /**
     * @return (Updatable) configuration value
     * 
     */
    public Optional<Output<String>> value() {
        return Optional.ofNullable(this.value);
    }

    /**
     * (Updatable) List of configuration values
     * 
     */
    @Import(name="values")
    private @Nullable Output<List<DetectorRecipeDetectorRuleDetailsConfigurationValueArgs>> values;

    /**
     * @return (Updatable) List of configuration values
     * 
     */
    public Optional<Output<List<DetectorRecipeDetectorRuleDetailsConfigurationValueArgs>>> values() {
        return Optional.ofNullable(this.values);
    }

    private DetectorRecipeDetectorRuleDetailsConfigurationArgs() {}

    private DetectorRecipeDetectorRuleDetailsConfigurationArgs(DetectorRecipeDetectorRuleDetailsConfigurationArgs $) {
        this.configKey = $.configKey;
        this.dataType = $.dataType;
        this.name = $.name;
        this.value = $.value;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DetectorRecipeDetectorRuleDetailsConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DetectorRecipeDetectorRuleDetailsConfigurationArgs $;

        public Builder() {
            $ = new DetectorRecipeDetectorRuleDetailsConfigurationArgs();
        }

        public Builder(DetectorRecipeDetectorRuleDetailsConfigurationArgs defaults) {
            $ = new DetectorRecipeDetectorRuleDetailsConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configKey (Updatable) Unique name of the configuration
         * 
         * @return builder
         * 
         */
        public Builder configKey(Output<String> configKey) {
            $.configKey = configKey;
            return this;
        }

        /**
         * @param configKey (Updatable) Unique name of the configuration
         * 
         * @return builder
         * 
         */
        public Builder configKey(String configKey) {
            return configKey(Output.of(configKey));
        }

        /**
         * @param dataType (Updatable) configuration data type
         * 
         * @return builder
         * 
         */
        public Builder dataType(@Nullable Output<String> dataType) {
            $.dataType = dataType;
            return this;
        }

        /**
         * @param dataType (Updatable) configuration data type
         * 
         * @return builder
         * 
         */
        public Builder dataType(String dataType) {
            return dataType(Output.of(dataType));
        }

        /**
         * @param name (Updatable) configuration name
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) configuration name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param value (Updatable) configuration value
         * 
         * @return builder
         * 
         */
        public Builder value(@Nullable Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) configuration value
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        /**
         * @param values (Updatable) List of configuration values
         * 
         * @return builder
         * 
         */
        public Builder values(@Nullable Output<List<DetectorRecipeDetectorRuleDetailsConfigurationValueArgs>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values (Updatable) List of configuration values
         * 
         * @return builder
         * 
         */
        public Builder values(List<DetectorRecipeDetectorRuleDetailsConfigurationValueArgs> values) {
            return values(Output.of(values));
        }

        /**
         * @param values (Updatable) List of configuration values
         * 
         * @return builder
         * 
         */
        public Builder values(DetectorRecipeDetectorRuleDetailsConfigurationValueArgs... values) {
            return values(List.of(values));
        }

        public DetectorRecipeDetectorRuleDetailsConfigurationArgs build() {
            $.configKey = Objects.requireNonNull($.configKey, "expected parameter 'configKey' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
