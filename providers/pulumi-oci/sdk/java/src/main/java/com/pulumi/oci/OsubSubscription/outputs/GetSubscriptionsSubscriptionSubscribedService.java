// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubSubscription.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsubSubscription.outputs.GetSubscriptionsSubscriptionSubscribedServiceCommitmentService;
import com.pulumi.oci.OsubSubscription.outputs.GetSubscriptionsSubscriptionSubscribedServiceProduct;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetSubscriptionsSubscriptionSubscribedService {
    /**
     * @return Booking Opportunity Number of Subscribed Service
     * 
     */
    private final String bookingOptyNumber;
    /**
     * @return List of Commitment services of a line
     * 
     */
    private final List<GetSubscriptionsSubscriptionSubscribedServiceCommitmentService> commitmentServices;
    /**
     * @return Subscribed service CSI number
     * 
     */
    private final String csi;
    /**
     * @return Subscribed service data center region
     * 
     */
    private final String dataCenterRegion;
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    private final String fundedAllocationValue;
    /**
     * @return SPM internal Subscribed Service ID
     * 
     */
    private final String id;
    /**
     * @return Subscribed service intent to pay flag
     * 
     */
    private final Boolean isIntentToPay;
    /**
     * @return Subscribed service net unit price
     * 
     */
    private final String netUnitPrice;
    /**
     * @return Subscribed service operation type
     * 
     */
    private final String operationType;
    /**
     * @return Sales Order Number associated to the subscribed service
     * 
     */
    private final String orderNumber;
    /**
     * @return This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
     * 
     */
    private final String partnerTransactionType;
    /**
     * @return Subscribed service pricing model
     * 
     */
    private final String pricingModel;
    /**
     * @return Product description
     * 
     */
    private final List<GetSubscriptionsSubscriptionSubscribedServiceProduct> products;
    /**
     * @return Subscribed service program type
     * 
     */
    private final String programType;
    /**
     * @return Subscribed service promotion type
     * 
     */
    private final String promoType;
    /**
     * @return Subscribed service quantity
     * 
     */
    private final String quantity;
    /**
     * @return Subscribed service status
     * 
     */
    private final String status;
    /**
     * @return Term value in Months
     * 
     */
    private final String termValue;
    /**
     * @return Term value UOM
     * 
     */
    private final String termValueUom;
    /**
     * @return Represents the date when the last service of the subscription ends
     * 
     */
    private final String timeEnd;
    /**
     * @return Represents the date when the first service of the subscription was activated
     * 
     */
    private final String timeStart;
    /**
     * @return Subscribed service total value
     * 
     */
    private final String totalValue;

    @CustomType.Constructor
    private GetSubscriptionsSubscriptionSubscribedService(
        @CustomType.Parameter("bookingOptyNumber") String bookingOptyNumber,
        @CustomType.Parameter("commitmentServices") List<GetSubscriptionsSubscriptionSubscribedServiceCommitmentService> commitmentServices,
        @CustomType.Parameter("csi") String csi,
        @CustomType.Parameter("dataCenterRegion") String dataCenterRegion,
        @CustomType.Parameter("fundedAllocationValue") String fundedAllocationValue,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isIntentToPay") Boolean isIntentToPay,
        @CustomType.Parameter("netUnitPrice") String netUnitPrice,
        @CustomType.Parameter("operationType") String operationType,
        @CustomType.Parameter("orderNumber") String orderNumber,
        @CustomType.Parameter("partnerTransactionType") String partnerTransactionType,
        @CustomType.Parameter("pricingModel") String pricingModel,
        @CustomType.Parameter("products") List<GetSubscriptionsSubscriptionSubscribedServiceProduct> products,
        @CustomType.Parameter("programType") String programType,
        @CustomType.Parameter("promoType") String promoType,
        @CustomType.Parameter("quantity") String quantity,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("termValue") String termValue,
        @CustomType.Parameter("termValueUom") String termValueUom,
        @CustomType.Parameter("timeEnd") String timeEnd,
        @CustomType.Parameter("timeStart") String timeStart,
        @CustomType.Parameter("totalValue") String totalValue) {
        this.bookingOptyNumber = bookingOptyNumber;
        this.commitmentServices = commitmentServices;
        this.csi = csi;
        this.dataCenterRegion = dataCenterRegion;
        this.fundedAllocationValue = fundedAllocationValue;
        this.id = id;
        this.isIntentToPay = isIntentToPay;
        this.netUnitPrice = netUnitPrice;
        this.operationType = operationType;
        this.orderNumber = orderNumber;
        this.partnerTransactionType = partnerTransactionType;
        this.pricingModel = pricingModel;
        this.products = products;
        this.programType = programType;
        this.promoType = promoType;
        this.quantity = quantity;
        this.status = status;
        this.termValue = termValue;
        this.termValueUom = termValueUom;
        this.timeEnd = timeEnd;
        this.timeStart = timeStart;
        this.totalValue = totalValue;
    }

    /**
     * @return Booking Opportunity Number of Subscribed Service
     * 
     */
    public String bookingOptyNumber() {
        return this.bookingOptyNumber;
    }
    /**
     * @return List of Commitment services of a line
     * 
     */
    public List<GetSubscriptionsSubscriptionSubscribedServiceCommitmentService> commitmentServices() {
        return this.commitmentServices;
    }
    /**
     * @return Subscribed service CSI number
     * 
     */
    public String csi() {
        return this.csi;
    }
    /**
     * @return Subscribed service data center region
     * 
     */
    public String dataCenterRegion() {
        return this.dataCenterRegion;
    }
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    public String fundedAllocationValue() {
        return this.fundedAllocationValue;
    }
    /**
     * @return SPM internal Subscribed Service ID
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Subscribed service intent to pay flag
     * 
     */
    public Boolean isIntentToPay() {
        return this.isIntentToPay;
    }
    /**
     * @return Subscribed service net unit price
     * 
     */
    public String netUnitPrice() {
        return this.netUnitPrice;
    }
    /**
     * @return Subscribed service operation type
     * 
     */
    public String operationType() {
        return this.operationType;
    }
    /**
     * @return Sales Order Number associated to the subscribed service
     * 
     */
    public String orderNumber() {
        return this.orderNumber;
    }
    /**
     * @return This field contains the name of the partner to which the subscription belongs - depending on which the invoicing may differ
     * 
     */
    public String partnerTransactionType() {
        return this.partnerTransactionType;
    }
    /**
     * @return Subscribed service pricing model
     * 
     */
    public String pricingModel() {
        return this.pricingModel;
    }
    /**
     * @return Product description
     * 
     */
    public List<GetSubscriptionsSubscriptionSubscribedServiceProduct> products() {
        return this.products;
    }
    /**
     * @return Subscribed service program type
     * 
     */
    public String programType() {
        return this.programType;
    }
    /**
     * @return Subscribed service promotion type
     * 
     */
    public String promoType() {
        return this.promoType;
    }
    /**
     * @return Subscribed service quantity
     * 
     */
    public String quantity() {
        return this.quantity;
    }
    /**
     * @return Subscribed service status
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Term value in Months
     * 
     */
    public String termValue() {
        return this.termValue;
    }
    /**
     * @return Term value UOM
     * 
     */
    public String termValueUom() {
        return this.termValueUom;
    }
    /**
     * @return Represents the date when the last service of the subscription ends
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return Represents the date when the first service of the subscription was activated
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }
    /**
     * @return Subscribed service total value
     * 
     */
    public String totalValue() {
        return this.totalValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionsSubscriptionSubscribedService defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bookingOptyNumber;
        private List<GetSubscriptionsSubscriptionSubscribedServiceCommitmentService> commitmentServices;
        private String csi;
        private String dataCenterRegion;
        private String fundedAllocationValue;
        private String id;
        private Boolean isIntentToPay;
        private String netUnitPrice;
        private String operationType;
        private String orderNumber;
        private String partnerTransactionType;
        private String pricingModel;
        private List<GetSubscriptionsSubscriptionSubscribedServiceProduct> products;
        private String programType;
        private String promoType;
        private String quantity;
        private String status;
        private String termValue;
        private String termValueUom;
        private String timeEnd;
        private String timeStart;
        private String totalValue;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSubscriptionsSubscriptionSubscribedService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bookingOptyNumber = defaults.bookingOptyNumber;
    	      this.commitmentServices = defaults.commitmentServices;
    	      this.csi = defaults.csi;
    	      this.dataCenterRegion = defaults.dataCenterRegion;
    	      this.fundedAllocationValue = defaults.fundedAllocationValue;
    	      this.id = defaults.id;
    	      this.isIntentToPay = defaults.isIntentToPay;
    	      this.netUnitPrice = defaults.netUnitPrice;
    	      this.operationType = defaults.operationType;
    	      this.orderNumber = defaults.orderNumber;
    	      this.partnerTransactionType = defaults.partnerTransactionType;
    	      this.pricingModel = defaults.pricingModel;
    	      this.products = defaults.products;
    	      this.programType = defaults.programType;
    	      this.promoType = defaults.promoType;
    	      this.quantity = defaults.quantity;
    	      this.status = defaults.status;
    	      this.termValue = defaults.termValue;
    	      this.termValueUom = defaults.termValueUom;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
    	      this.totalValue = defaults.totalValue;
        }

        public Builder bookingOptyNumber(String bookingOptyNumber) {
            this.bookingOptyNumber = Objects.requireNonNull(bookingOptyNumber);
            return this;
        }
        public Builder commitmentServices(List<GetSubscriptionsSubscriptionSubscribedServiceCommitmentService> commitmentServices) {
            this.commitmentServices = Objects.requireNonNull(commitmentServices);
            return this;
        }
        public Builder commitmentServices(GetSubscriptionsSubscriptionSubscribedServiceCommitmentService... commitmentServices) {
            return commitmentServices(List.of(commitmentServices));
        }
        public Builder csi(String csi) {
            this.csi = Objects.requireNonNull(csi);
            return this;
        }
        public Builder dataCenterRegion(String dataCenterRegion) {
            this.dataCenterRegion = Objects.requireNonNull(dataCenterRegion);
            return this;
        }
        public Builder fundedAllocationValue(String fundedAllocationValue) {
            this.fundedAllocationValue = Objects.requireNonNull(fundedAllocationValue);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isIntentToPay(Boolean isIntentToPay) {
            this.isIntentToPay = Objects.requireNonNull(isIntentToPay);
            return this;
        }
        public Builder netUnitPrice(String netUnitPrice) {
            this.netUnitPrice = Objects.requireNonNull(netUnitPrice);
            return this;
        }
        public Builder operationType(String operationType) {
            this.operationType = Objects.requireNonNull(operationType);
            return this;
        }
        public Builder orderNumber(String orderNumber) {
            this.orderNumber = Objects.requireNonNull(orderNumber);
            return this;
        }
        public Builder partnerTransactionType(String partnerTransactionType) {
            this.partnerTransactionType = Objects.requireNonNull(partnerTransactionType);
            return this;
        }
        public Builder pricingModel(String pricingModel) {
            this.pricingModel = Objects.requireNonNull(pricingModel);
            return this;
        }
        public Builder products(List<GetSubscriptionsSubscriptionSubscribedServiceProduct> products) {
            this.products = Objects.requireNonNull(products);
            return this;
        }
        public Builder products(GetSubscriptionsSubscriptionSubscribedServiceProduct... products) {
            return products(List.of(products));
        }
        public Builder programType(String programType) {
            this.programType = Objects.requireNonNull(programType);
            return this;
        }
        public Builder promoType(String promoType) {
            this.promoType = Objects.requireNonNull(promoType);
            return this;
        }
        public Builder quantity(String quantity) {
            this.quantity = Objects.requireNonNull(quantity);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder termValue(String termValue) {
            this.termValue = Objects.requireNonNull(termValue);
            return this;
        }
        public Builder termValueUom(String termValueUom) {
            this.termValueUom = Objects.requireNonNull(termValueUom);
            return this;
        }
        public Builder timeEnd(String timeEnd) {
            this.timeEnd = Objects.requireNonNull(timeEnd);
            return this;
        }
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }
        public Builder totalValue(String totalValue) {
            this.totalValue = Objects.requireNonNull(totalValue);
            return this;
        }        public GetSubscriptionsSubscriptionSubscribedService build() {
            return new GetSubscriptionsSubscriptionSubscribedService(bookingOptyNumber, commitmentServices, csi, dataCenterRegion, fundedAllocationValue, id, isIntentToPay, netUnitPrice, operationType, orderNumber, partnerTransactionType, pricingModel, products, programType, promoType, quantity, status, termValue, termValueUom, timeEnd, timeStart, totalValue);
        }
    }
}
