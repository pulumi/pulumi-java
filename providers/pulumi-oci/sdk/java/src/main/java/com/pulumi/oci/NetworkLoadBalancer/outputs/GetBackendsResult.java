// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkLoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.NetworkLoadBalancer.outputs.GetBackendsBackendCollection;
import com.pulumi.oci.NetworkLoadBalancer.outputs.GetBackendsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetBackendsResult {
    /**
     * @return The list of backend_collection.
     * 
     */
    private final List<GetBackendsBackendCollection> backendCollections;
    private final String backendSetName;
    private final @Nullable List<GetBackendsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String networkLoadBalancerId;

    @CustomType.Constructor
    private GetBackendsResult(
        @CustomType.Parameter("backendCollections") List<GetBackendsBackendCollection> backendCollections,
        @CustomType.Parameter("backendSetName") String backendSetName,
        @CustomType.Parameter("filters") @Nullable List<GetBackendsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("networkLoadBalancerId") String networkLoadBalancerId) {
        this.backendCollections = backendCollections;
        this.backendSetName = backendSetName;
        this.filters = filters;
        this.id = id;
        this.networkLoadBalancerId = networkLoadBalancerId;
    }

    /**
     * @return The list of backend_collection.
     * 
     */
    public List<GetBackendsBackendCollection> backendCollections() {
        return this.backendCollections;
    }
    public String backendSetName() {
        return this.backendSetName;
    }
    public List<GetBackendsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String networkLoadBalancerId() {
        return this.networkLoadBalancerId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBackendsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetBackendsBackendCollection> backendCollections;
        private String backendSetName;
        private @Nullable List<GetBackendsFilter> filters;
        private String id;
        private String networkLoadBalancerId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBackendsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendCollections = defaults.backendCollections;
    	      this.backendSetName = defaults.backendSetName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.networkLoadBalancerId = defaults.networkLoadBalancerId;
        }

        public Builder backendCollections(List<GetBackendsBackendCollection> backendCollections) {
            this.backendCollections = Objects.requireNonNull(backendCollections);
            return this;
        }
        public Builder backendCollections(GetBackendsBackendCollection... backendCollections) {
            return backendCollections(List.of(backendCollections));
        }
        public Builder backendSetName(String backendSetName) {
            this.backendSetName = Objects.requireNonNull(backendSetName);
            return this;
        }
        public Builder filters(@Nullable List<GetBackendsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetBackendsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder networkLoadBalancerId(String networkLoadBalancerId) {
            this.networkLoadBalancerId = Objects.requireNonNull(networkLoadBalancerId);
            return this;
        }        public GetBackendsResult build() {
            return new GetBackendsResult(backendCollections, backendSetName, filters, id, networkLoadBalancerId);
        }
    }
}
