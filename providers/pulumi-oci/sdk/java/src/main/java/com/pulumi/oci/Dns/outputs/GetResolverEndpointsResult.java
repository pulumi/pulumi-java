// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Dns.outputs.GetResolverEndpointsFilter;
import com.pulumi.oci.Dns.outputs.GetResolverEndpointsResolverEndpoint;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResolverEndpointsResult {
    private final @Nullable List<GetResolverEndpointsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
     * 
     */
    private final @Nullable String name;
    /**
     * @return The list of resolver_endpoints.
     * 
     */
    private final List<GetResolverEndpointsResolverEndpoint> resolverEndpoints;
    private final String resolverId;
    private final String scope;
    /**
     * @return The current state of the resource.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetResolverEndpointsResult(
        @CustomType.Parameter("filters") @Nullable List<GetResolverEndpointsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("resolverEndpoints") List<GetResolverEndpointsResolverEndpoint> resolverEndpoints,
        @CustomType.Parameter("resolverId") String resolverId,
        @CustomType.Parameter("scope") String scope,
        @CustomType.Parameter("state") @Nullable String state) {
        this.filters = filters;
        this.id = id;
        this.name = name;
        this.resolverEndpoints = resolverEndpoints;
        this.resolverId = resolverId;
        this.scope = scope;
        this.state = state;
    }

    public List<GetResolverEndpointsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the resolver endpoint. Must be unique, case-insensitive, within the resolver.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of resolver_endpoints.
     * 
     */
    public List<GetResolverEndpointsResolverEndpoint> resolverEndpoints() {
        return this.resolverEndpoints;
    }
    public String resolverId() {
        return this.resolverId;
    }
    public String scope() {
        return this.scope;
    }
    /**
     * @return The current state of the resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResolverEndpointsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<GetResolverEndpointsFilter> filters;
        private String id;
        private @Nullable String name;
        private List<GetResolverEndpointsResolverEndpoint> resolverEndpoints;
        private String resolverId;
        private String scope;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetResolverEndpointsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.resolverEndpoints = defaults.resolverEndpoints;
    	      this.resolverId = defaults.resolverId;
    	      this.scope = defaults.scope;
    	      this.state = defaults.state;
        }

        public Builder filters(@Nullable List<GetResolverEndpointsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetResolverEndpointsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder resolverEndpoints(List<GetResolverEndpointsResolverEndpoint> resolverEndpoints) {
            this.resolverEndpoints = Objects.requireNonNull(resolverEndpoints);
            return this;
        }
        public Builder resolverEndpoints(GetResolverEndpointsResolverEndpoint... resolverEndpoints) {
            return resolverEndpoints(List.of(resolverEndpoints));
        }
        public Builder resolverId(String resolverId) {
            this.resolverId = Objects.requireNonNull(resolverId);
            return this;
        }
        public Builder scope(String scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetResolverEndpointsResult build() {
            return new GetResolverEndpointsResult(filters, id, name, resolverEndpoints, resolverId, scope, state);
        }
    }
}
