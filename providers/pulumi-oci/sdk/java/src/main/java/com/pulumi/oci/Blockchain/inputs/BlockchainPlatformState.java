// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Blockchain.inputs.BlockchainPlatformComponentDetailArgs;
import com.pulumi.oci.Blockchain.inputs.BlockchainPlatformHostOcpuUtilizationInfoArgs;
import com.pulumi.oci.Blockchain.inputs.BlockchainPlatformReplicasArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BlockchainPlatformState extends com.pulumi.resources.ResourceArgs {

    public static final BlockchainPlatformState Empty = new BlockchainPlatformState();

    /**
     * Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file. The Archive file is a zip file containing third part CA Certificates, the ca key and certificate files used when issuing enrollment certificates (ECerts) and transaction certificates (TCerts). The chainfile (if it exists) contains the certificate chain which should be trusted for this CA, where the 1st in the chain is always the root CA certificate. File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
     * 
     */
    @Import(name="caCertArchiveText")
    private @Nullable Output<String> caCertArchiveText;

    /**
     * @return Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file. The Archive file is a zip file containing third part CA Certificates, the ca key and certificate files used when issuing enrollment certificates (ECerts) and transaction certificates (TCerts). The chainfile (if it exists) contains the certificate chain which should be trusted for this CA, where the 1st in the chain is always the root CA certificate. File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
     * 
     */
    public Optional<Output<String>> caCertArchiveText() {
        return Optional.ofNullable(this.caCertArchiveText);
    }

    /**
     * (Updatable) Compartment Identifier
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Blockchain Platform component details.
     * 
     */
    @Import(name="componentDetails")
    private @Nullable Output<List<BlockchainPlatformComponentDetailArgs>> componentDetails;

    /**
     * @return Blockchain Platform component details.
     * 
     */
    public Optional<Output<List<BlockchainPlatformComponentDetailArgs>>> componentDetails() {
        return Optional.ofNullable(this.componentDetails);
    }

    /**
     * Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
     * 
     */
    @Import(name="computeShape")
    private @Nullable Output<String> computeShape;

    /**
     * @return Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
     * 
     */
    public Optional<Output<String>> computeShape() {
        return Optional.ofNullable(this.computeShape);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Platform Instance Description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Platform Instance Description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Platform Instance Display name, can be renamed
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return Platform Instance Display name, can be renamed
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Identifier for a federated user
     * 
     */
    @Import(name="federatedUserId")
    private @Nullable Output<String> federatedUserId;

    /**
     * @return Identifier for a federated user
     * 
     */
    public Optional<Output<String>> federatedUserId() {
        return Optional.ofNullable(this.federatedUserId);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * List of OcpuUtilization for all hosts
     * 
     */
    @Import(name="hostOcpuUtilizationInfos")
    private @Nullable Output<List<BlockchainPlatformHostOcpuUtilizationInfoArgs>> hostOcpuUtilizationInfos;

    /**
     * @return List of OcpuUtilization for all hosts
     * 
     */
    public Optional<Output<List<BlockchainPlatformHostOcpuUtilizationInfoArgs>>> hostOcpuUtilizationInfos() {
        return Optional.ofNullable(this.hostOcpuUtilizationInfos);
    }

    /**
     * IDCS access token with Identity Domain Administrator role
     * 
     */
    @Import(name="idcsAccessToken")
    private @Nullable Output<String> idcsAccessToken;

    /**
     * @return IDCS access token with Identity Domain Administrator role
     * 
     */
    public Optional<Output<String>> idcsAccessToken() {
        return Optional.ofNullable(this.idcsAccessToken);
    }

    /**
     * Bring your own license
     * 
     */
    @Import(name="isByol")
    private @Nullable Output<Boolean> isByol;

    /**
     * @return Bring your own license
     * 
     */
    public Optional<Output<Boolean>> isByol() {
        return Optional.ofNullable(this.isByol);
    }

    /**
     * True for multi-AD blockchain plaforms, false for single-AD
     * 
     */
    @Import(name="isMultiAd")
    private @Nullable Output<Boolean> isMultiAd;

    /**
     * @return True for multi-AD blockchain plaforms, false for single-AD
     * 
     */
    public Optional<Output<Boolean>> isMultiAd() {
        return Optional.ofNullable(this.isMultiAd);
    }

    /**
     * An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * (Updatable) Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     * 
     */
    @Import(name="loadBalancerShape")
    private @Nullable Output<String> loadBalancerShape;

    /**
     * @return (Updatable) Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     * 
     */
    public Optional<Output<String>> loadBalancerShape() {
        return Optional.ofNullable(this.loadBalancerShape);
    }

    /**
     * Role of platform - founder or participant
     * 
     */
    @Import(name="platformRole")
    private @Nullable Output<String> platformRole;

    /**
     * @return Role of platform - founder or participant
     * 
     */
    public Optional<Output<String>> platformRole() {
        return Optional.ofNullable(this.platformRole);
    }

    /**
     * Type of Platform shape - DEFAULT or CUSTOM
     * 
     */
    @Import(name="platformShapeType")
    private @Nullable Output<String> platformShapeType;

    /**
     * @return Type of Platform shape - DEFAULT or CUSTOM
     * 
     */
    public Optional<Output<String>> platformShapeType() {
        return Optional.ofNullable(this.platformShapeType);
    }

    /**
     * Platform version
     * 
     */
    @Import(name="platformVersion")
    private @Nullable Output<String> platformVersion;

    /**
     * @return Platform version
     * 
     */
    public Optional<Output<String>> platformVersion() {
        return Optional.ofNullable(this.platformVersion);
    }

    /**
     * Number of replicas of service components like Rest Proxy, CA and Console
     * 
     */
    @Import(name="replicas")
    private @Nullable Output<BlockchainPlatformReplicasArgs> replicas;

    /**
     * @return Number of replicas of service components like Rest Proxy, CA and Console
     * 
     */
    public Optional<Output<BlockchainPlatformReplicasArgs>> replicas() {
        return Optional.ofNullable(this.replicas);
    }

    /**
     * Service endpoint URL, valid post-provisioning
     * 
     */
    @Import(name="serviceEndpoint")
    private @Nullable Output<String> serviceEndpoint;

    /**
     * @return Service endpoint URL, valid post-provisioning
     * 
     */
    public Optional<Output<String>> serviceEndpoint() {
        return Optional.ofNullable(this.serviceEndpoint);
    }

    /**
     * The version of the Platform Instance.
     * 
     */
    @Import(name="serviceVersion")
    private @Nullable Output<String> serviceVersion;

    /**
     * @return The version of the Platform Instance.
     * 
     */
    public Optional<Output<String>> serviceVersion() {
        return Optional.ofNullable(this.serviceVersion);
    }

    /**
     * The current state of the Platform Instance.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the Platform Instance.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Storage size in TBs
     * 
     */
    @Import(name="storageSizeInTbs")
    private @Nullable Output<Double> storageSizeInTbs;

    /**
     * @return Storage size in TBs
     * 
     */
    public Optional<Output<Double>> storageSizeInTbs() {
        return Optional.ofNullable(this.storageSizeInTbs);
    }

    /**
     * Storage used in TBs
     * 
     */
    @Import(name="storageUsedInTbs")
    private @Nullable Output<Double> storageUsedInTbs;

    /**
     * @return Storage used in TBs
     * 
     */
    public Optional<Output<Double>> storageUsedInTbs() {
        return Optional.ofNullable(this.storageUsedInTbs);
    }

    /**
     * The time the the Platform Instance was created. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the the Platform Instance was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the Platform Instance was updated. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the Platform Instance was updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * Number of total OCPUs allocated to the platform cluster
     * 
     */
    @Import(name="totalOcpuCapacity")
    private @Nullable Output<Integer> totalOcpuCapacity;

    /**
     * @return Number of total OCPUs allocated to the platform cluster
     * 
     */
    public Optional<Output<Integer>> totalOcpuCapacity() {
        return Optional.ofNullable(this.totalOcpuCapacity);
    }

    private BlockchainPlatformState() {}

    private BlockchainPlatformState(BlockchainPlatformState $) {
        this.caCertArchiveText = $.caCertArchiveText;
        this.compartmentId = $.compartmentId;
        this.componentDetails = $.componentDetails;
        this.computeShape = $.computeShape;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.federatedUserId = $.federatedUserId;
        this.freeformTags = $.freeformTags;
        this.hostOcpuUtilizationInfos = $.hostOcpuUtilizationInfos;
        this.idcsAccessToken = $.idcsAccessToken;
        this.isByol = $.isByol;
        this.isMultiAd = $.isMultiAd;
        this.lifecycleDetails = $.lifecycleDetails;
        this.loadBalancerShape = $.loadBalancerShape;
        this.platformRole = $.platformRole;
        this.platformShapeType = $.platformShapeType;
        this.platformVersion = $.platformVersion;
        this.replicas = $.replicas;
        this.serviceEndpoint = $.serviceEndpoint;
        this.serviceVersion = $.serviceVersion;
        this.state = $.state;
        this.storageSizeInTbs = $.storageSizeInTbs;
        this.storageUsedInTbs = $.storageUsedInTbs;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
        this.totalOcpuCapacity = $.totalOcpuCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlockchainPlatformState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlockchainPlatformState $;

        public Builder() {
            $ = new BlockchainPlatformState();
        }

        public Builder(BlockchainPlatformState defaults) {
            $ = new BlockchainPlatformState(Objects.requireNonNull(defaults));
        }

        /**
         * @param caCertArchiveText Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file. The Archive file is a zip file containing third part CA Certificates, the ca key and certificate files used when issuing enrollment certificates (ECerts) and transaction certificates (TCerts). The chainfile (if it exists) contains the certificate chain which should be trusted for this CA, where the 1st in the chain is always the root CA certificate. File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
         * 
         * @return builder
         * 
         */
        public Builder caCertArchiveText(@Nullable Output<String> caCertArchiveText) {
            $.caCertArchiveText = caCertArchiveText;
            return this;
        }

        /**
         * @param caCertArchiveText Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file. The Archive file is a zip file containing third part CA Certificates, the ca key and certificate files used when issuing enrollment certificates (ECerts) and transaction certificates (TCerts). The chainfile (if it exists) contains the certificate chain which should be trusted for this CA, where the 1st in the chain is always the root CA certificate. File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
         * 
         * @return builder
         * 
         */
        public Builder caCertArchiveText(String caCertArchiveText) {
            return caCertArchiveText(Output.of(caCertArchiveText));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param componentDetails Blockchain Platform component details.
         * 
         * @return builder
         * 
         */
        public Builder componentDetails(@Nullable Output<List<BlockchainPlatformComponentDetailArgs>> componentDetails) {
            $.componentDetails = componentDetails;
            return this;
        }

        /**
         * @param componentDetails Blockchain Platform component details.
         * 
         * @return builder
         * 
         */
        public Builder componentDetails(List<BlockchainPlatformComponentDetailArgs> componentDetails) {
            return componentDetails(Output.of(componentDetails));
        }

        /**
         * @param componentDetails Blockchain Platform component details.
         * 
         * @return builder
         * 
         */
        public Builder componentDetails(BlockchainPlatformComponentDetailArgs... componentDetails) {
            return componentDetails(List.of(componentDetails));
        }

        /**
         * @param computeShape Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
         * 
         * @return builder
         * 
         */
        public Builder computeShape(@Nullable Output<String> computeShape) {
            $.computeShape = computeShape;
            return this;
        }

        /**
         * @param computeShape Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
         * 
         * @return builder
         * 
         */
        public Builder computeShape(String computeShape) {
            return computeShape(Output.of(computeShape));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Platform Instance Description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Platform Instance Description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Platform Instance Display name, can be renamed
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Platform Instance Display name, can be renamed
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param federatedUserId Identifier for a federated user
         * 
         * @return builder
         * 
         */
        public Builder federatedUserId(@Nullable Output<String> federatedUserId) {
            $.federatedUserId = federatedUserId;
            return this;
        }

        /**
         * @param federatedUserId Identifier for a federated user
         * 
         * @return builder
         * 
         */
        public Builder federatedUserId(String federatedUserId) {
            return federatedUserId(Output.of(federatedUserId));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param hostOcpuUtilizationInfos List of OcpuUtilization for all hosts
         * 
         * @return builder
         * 
         */
        public Builder hostOcpuUtilizationInfos(@Nullable Output<List<BlockchainPlatformHostOcpuUtilizationInfoArgs>> hostOcpuUtilizationInfos) {
            $.hostOcpuUtilizationInfos = hostOcpuUtilizationInfos;
            return this;
        }

        /**
         * @param hostOcpuUtilizationInfos List of OcpuUtilization for all hosts
         * 
         * @return builder
         * 
         */
        public Builder hostOcpuUtilizationInfos(List<BlockchainPlatformHostOcpuUtilizationInfoArgs> hostOcpuUtilizationInfos) {
            return hostOcpuUtilizationInfos(Output.of(hostOcpuUtilizationInfos));
        }

        /**
         * @param hostOcpuUtilizationInfos List of OcpuUtilization for all hosts
         * 
         * @return builder
         * 
         */
        public Builder hostOcpuUtilizationInfos(BlockchainPlatformHostOcpuUtilizationInfoArgs... hostOcpuUtilizationInfos) {
            return hostOcpuUtilizationInfos(List.of(hostOcpuUtilizationInfos));
        }

        /**
         * @param idcsAccessToken IDCS access token with Identity Domain Administrator role
         * 
         * @return builder
         * 
         */
        public Builder idcsAccessToken(@Nullable Output<String> idcsAccessToken) {
            $.idcsAccessToken = idcsAccessToken;
            return this;
        }

        /**
         * @param idcsAccessToken IDCS access token with Identity Domain Administrator role
         * 
         * @return builder
         * 
         */
        public Builder idcsAccessToken(String idcsAccessToken) {
            return idcsAccessToken(Output.of(idcsAccessToken));
        }

        /**
         * @param isByol Bring your own license
         * 
         * @return builder
         * 
         */
        public Builder isByol(@Nullable Output<Boolean> isByol) {
            $.isByol = isByol;
            return this;
        }

        /**
         * @param isByol Bring your own license
         * 
         * @return builder
         * 
         */
        public Builder isByol(Boolean isByol) {
            return isByol(Output.of(isByol));
        }

        /**
         * @param isMultiAd True for multi-AD blockchain plaforms, false for single-AD
         * 
         * @return builder
         * 
         */
        public Builder isMultiAd(@Nullable Output<Boolean> isMultiAd) {
            $.isMultiAd = isMultiAd;
            return this;
        }

        /**
         * @param isMultiAd True for multi-AD blockchain plaforms, false for single-AD
         * 
         * @return builder
         * 
         */
        public Builder isMultiAd(Boolean isMultiAd) {
            return isMultiAd(Output.of(isMultiAd));
        }

        /**
         * @param lifecycleDetails An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param loadBalancerShape (Updatable) Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerShape(@Nullable Output<String> loadBalancerShape) {
            $.loadBalancerShape = loadBalancerShape;
            return this;
        }

        /**
         * @param loadBalancerShape (Updatable) Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerShape(String loadBalancerShape) {
            return loadBalancerShape(Output.of(loadBalancerShape));
        }

        /**
         * @param platformRole Role of platform - founder or participant
         * 
         * @return builder
         * 
         */
        public Builder platformRole(@Nullable Output<String> platformRole) {
            $.platformRole = platformRole;
            return this;
        }

        /**
         * @param platformRole Role of platform - founder or participant
         * 
         * @return builder
         * 
         */
        public Builder platformRole(String platformRole) {
            return platformRole(Output.of(platformRole));
        }

        /**
         * @param platformShapeType Type of Platform shape - DEFAULT or CUSTOM
         * 
         * @return builder
         * 
         */
        public Builder platformShapeType(@Nullable Output<String> platformShapeType) {
            $.platformShapeType = platformShapeType;
            return this;
        }

        /**
         * @param platformShapeType Type of Platform shape - DEFAULT or CUSTOM
         * 
         * @return builder
         * 
         */
        public Builder platformShapeType(String platformShapeType) {
            return platformShapeType(Output.of(platformShapeType));
        }

        /**
         * @param platformVersion Platform version
         * 
         * @return builder
         * 
         */
        public Builder platformVersion(@Nullable Output<String> platformVersion) {
            $.platformVersion = platformVersion;
            return this;
        }

        /**
         * @param platformVersion Platform version
         * 
         * @return builder
         * 
         */
        public Builder platformVersion(String platformVersion) {
            return platformVersion(Output.of(platformVersion));
        }

        /**
         * @param replicas Number of replicas of service components like Rest Proxy, CA and Console
         * 
         * @return builder
         * 
         */
        public Builder replicas(@Nullable Output<BlockchainPlatformReplicasArgs> replicas) {
            $.replicas = replicas;
            return this;
        }

        /**
         * @param replicas Number of replicas of service components like Rest Proxy, CA and Console
         * 
         * @return builder
         * 
         */
        public Builder replicas(BlockchainPlatformReplicasArgs replicas) {
            return replicas(Output.of(replicas));
        }

        /**
         * @param serviceEndpoint Service endpoint URL, valid post-provisioning
         * 
         * @return builder
         * 
         */
        public Builder serviceEndpoint(@Nullable Output<String> serviceEndpoint) {
            $.serviceEndpoint = serviceEndpoint;
            return this;
        }

        /**
         * @param serviceEndpoint Service endpoint URL, valid post-provisioning
         * 
         * @return builder
         * 
         */
        public Builder serviceEndpoint(String serviceEndpoint) {
            return serviceEndpoint(Output.of(serviceEndpoint));
        }

        /**
         * @param serviceVersion The version of the Platform Instance.
         * 
         * @return builder
         * 
         */
        public Builder serviceVersion(@Nullable Output<String> serviceVersion) {
            $.serviceVersion = serviceVersion;
            return this;
        }

        /**
         * @param serviceVersion The version of the Platform Instance.
         * 
         * @return builder
         * 
         */
        public Builder serviceVersion(String serviceVersion) {
            return serviceVersion(Output.of(serviceVersion));
        }

        /**
         * @param state The current state of the Platform Instance.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the Platform Instance.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param storageSizeInTbs Storage size in TBs
         * 
         * @return builder
         * 
         */
        public Builder storageSizeInTbs(@Nullable Output<Double> storageSizeInTbs) {
            $.storageSizeInTbs = storageSizeInTbs;
            return this;
        }

        /**
         * @param storageSizeInTbs Storage size in TBs
         * 
         * @return builder
         * 
         */
        public Builder storageSizeInTbs(Double storageSizeInTbs) {
            return storageSizeInTbs(Output.of(storageSizeInTbs));
        }

        /**
         * @param storageUsedInTbs Storage used in TBs
         * 
         * @return builder
         * 
         */
        public Builder storageUsedInTbs(@Nullable Output<Double> storageUsedInTbs) {
            $.storageUsedInTbs = storageUsedInTbs;
            return this;
        }

        /**
         * @param storageUsedInTbs Storage used in TBs
         * 
         * @return builder
         * 
         */
        public Builder storageUsedInTbs(Double storageUsedInTbs) {
            return storageUsedInTbs(Output.of(storageUsedInTbs));
        }

        /**
         * @param timeCreated The time the the Platform Instance was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the the Platform Instance was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the Platform Instance was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the Platform Instance was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param totalOcpuCapacity Number of total OCPUs allocated to the platform cluster
         * 
         * @return builder
         * 
         */
        public Builder totalOcpuCapacity(@Nullable Output<Integer> totalOcpuCapacity) {
            $.totalOcpuCapacity = totalOcpuCapacity;
            return this;
        }

        /**
         * @param totalOcpuCapacity Number of total OCPUs allocated to the platform cluster
         * 
         * @return builder
         * 
         */
        public Builder totalOcpuCapacity(Integer totalOcpuCapacity) {
            return totalOcpuCapacity(Output.of(totalOcpuCapacity));
        }

        public BlockchainPlatformState build() {
            return $;
        }
    }

}
