// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Integration.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetIntegrationInstanceArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIntegrationInstanceArgs Empty = new GetIntegrationInstanceArgs();

    /**
     * Unique Integration Instance identifier.
     * 
     */
    @Import(name="integrationInstanceId", required=true)
    private Output<String> integrationInstanceId;

    /**
     * @return Unique Integration Instance identifier.
     * 
     */
    public Output<String> integrationInstanceId() {
        return this.integrationInstanceId;
    }

    private GetIntegrationInstanceArgs() {}

    private GetIntegrationInstanceArgs(GetIntegrationInstanceArgs $) {
        this.integrationInstanceId = $.integrationInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIntegrationInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIntegrationInstanceArgs $;

        public Builder() {
            $ = new GetIntegrationInstanceArgs();
        }

        public Builder(GetIntegrationInstanceArgs defaults) {
            $ = new GetIntegrationInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param integrationInstanceId Unique Integration Instance identifier.
         * 
         * @return builder
         * 
         */
        public Builder integrationInstanceId(Output<String> integrationInstanceId) {
            $.integrationInstanceId = integrationInstanceId;
            return this;
        }

        /**
         * @param integrationInstanceId Unique Integration Instance identifier.
         * 
         * @return builder
         * 
         */
        public Builder integrationInstanceId(String integrationInstanceId) {
            return integrationInstanceId(Output.of(integrationInstanceId));
        }

        public GetIntegrationInstanceArgs build() {
            $.integrationInstanceId = Objects.requireNonNull($.integrationInstanceId, "expected parameter 'integrationInstanceId' to be non-null");
            return $;
        }
    }

}
