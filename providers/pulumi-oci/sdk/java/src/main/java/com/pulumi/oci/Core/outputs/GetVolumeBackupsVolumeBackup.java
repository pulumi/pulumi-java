// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetVolumeBackupsVolumeBackupSourceDetail;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVolumeBackupsVolumeBackup {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private final String displayName;
    /**
     * @return The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     * 
     */
    private final String expirationTime;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The OCID of the volume backup.
     * 
     */
    private final String id;
    /**
     * @return The OCID of the Key Management key which is the master encryption key for the volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     * 
     */
    private final String kmsKeyId;
    /**
     * @return The size of the volume, in GBs.
     * 
     */
    private final String sizeInGbs;
    /**
     * @return The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `size_in_gbs`.
     * 
     * @deprecated
     * The &#39;size_in_mbs&#39; field has been deprecated. Please use &#39;size_in_gbs&#39; instead.
     * 
     */
    @Deprecated /* The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead. */
    private final String sizeInMbs;
    private final List<GetVolumeBackupsVolumeBackupSourceDetail> sourceDetails;
    /**
     * @return Specifies whether the backup was created manually, or via scheduled backup policy.
     * 
     */
    private final String sourceType;
    /**
     * @return A filter to return only resources that originated from the given source volume backup.
     * 
     */
    private final String sourceVolumeBackupId;
    /**
     * @return A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    private final String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private final String timeCreated;
    /**
     * @return The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
     * 
     */
    private final String timeRequestReceived;
    /**
     * @return The type of a volume backup. Supported values are &#39;FULL&#39; or &#39;INCREMENTAL&#39;.
     * 
     */
    private final String type;
    /**
     * @return The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
     * 
     */
    private final String uniqueSizeInGbs;
    /**
     * @return The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
     * 
     * @deprecated
     * The &#39;unique_size_in_mbs&#39; field has been deprecated. Please use &#39;unique_size_in_gbs&#39; instead.
     * 
     */
    @Deprecated /* The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead. */
    private final String uniqueSizeInMbs;
    /**
     * @return The OCID of the volume.
     * 
     */
    private final String volumeId;

    @CustomType.Constructor
    private GetVolumeBackupsVolumeBackup(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("expirationTime") String expirationTime,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("kmsKeyId") String kmsKeyId,
        @CustomType.Parameter("sizeInGbs") String sizeInGbs,
        @CustomType.Parameter("sizeInMbs") String sizeInMbs,
        @CustomType.Parameter("sourceDetails") List<GetVolumeBackupsVolumeBackupSourceDetail> sourceDetails,
        @CustomType.Parameter("sourceType") String sourceType,
        @CustomType.Parameter("sourceVolumeBackupId") String sourceVolumeBackupId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeRequestReceived") String timeRequestReceived,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("uniqueSizeInGbs") String uniqueSizeInGbs,
        @CustomType.Parameter("uniqueSizeInMbs") String uniqueSizeInMbs,
        @CustomType.Parameter("volumeId") String volumeId) {
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.expirationTime = expirationTime;
        this.freeformTags = freeformTags;
        this.id = id;
        this.kmsKeyId = kmsKeyId;
        this.sizeInGbs = sizeInGbs;
        this.sizeInMbs = sizeInMbs;
        this.sourceDetails = sourceDetails;
        this.sourceType = sourceType;
        this.sourceVolumeBackupId = sourceVolumeBackupId;
        this.state = state;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeRequestReceived = timeRequestReceived;
        this.type = type;
        this.uniqueSizeInGbs = uniqueSizeInGbs;
        this.uniqueSizeInMbs = uniqueSizeInMbs;
        this.volumeId = volumeId;
    }

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The date and time the volume backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for backups that were created automatically by a scheduled-backup policy. For manually created backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     * 
     */
    public String expirationTime() {
        return this.expirationTime;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the volume backup.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the Key Management key which is the master encryption key for the volume backup. For more information about the Key Management service and encryption keys, see [Overview of Key Management](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm) and [Using Keys](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Tasks/usingkeys.htm).
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    /**
     * @return The size of the volume, in GBs.
     * 
     */
    public String sizeInGbs() {
        return this.sizeInGbs;
    }
    /**
     * @return The size of the volume in MBs. The value must be a multiple of 1024. This field is deprecated. Please use `size_in_gbs`.
     * 
     * @deprecated
     * The &#39;size_in_mbs&#39; field has been deprecated. Please use &#39;size_in_gbs&#39; instead.
     * 
     */
    @Deprecated /* The 'size_in_mbs' field has been deprecated. Please use 'size_in_gbs' instead. */
    public String sizeInMbs() {
        return this.sizeInMbs;
    }
    public List<GetVolumeBackupsVolumeBackupSourceDetail> sourceDetails() {
        return this.sourceDetails;
    }
    /**
     * @return Specifies whether the backup was created manually, or via scheduled backup policy.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return A filter to return only resources that originated from the given source volume backup.
     * 
     */
    public String sourceVolumeBackupId() {
        return this.sourceVolumeBackupId;
    }
    /**
     * @return A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the volume backup was created. This is the time the actual point-in-time image of the volume data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the request to create the volume backup was received. Format defined by [RFC3339]https://tools.ietf.org/html/rfc3339.
     * 
     */
    public String timeRequestReceived() {
        return this.timeRequestReceived;
    }
    /**
     * @return The type of a volume backup. Supported values are &#39;FULL&#39; or &#39;INCREMENTAL&#39;.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The size used by the backup, in GBs. It is typically smaller than sizeInGBs, depending on the space consumed on the volume and whether the backup is full or incremental.
     * 
     */
    public String uniqueSizeInGbs() {
        return this.uniqueSizeInGbs;
    }
    /**
     * @return The size used by the backup, in MBs. It is typically smaller than sizeInMBs, depending on the space consumed on the volume and whether the backup is full or incremental. This field is deprecated. Please use uniqueSizeInGBs.
     * 
     * @deprecated
     * The &#39;unique_size_in_mbs&#39; field has been deprecated. Please use &#39;unique_size_in_gbs&#39; instead.
     * 
     */
    @Deprecated /* The 'unique_size_in_mbs' field has been deprecated. Please use 'unique_size_in_gbs' instead. */
    public String uniqueSizeInMbs() {
        return this.uniqueSizeInMbs;
    }
    /**
     * @return The OCID of the volume.
     * 
     */
    public String volumeId() {
        return this.volumeId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeBackupsVolumeBackup defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private String expirationTime;
        private Map<String,Object> freeformTags;
        private String id;
        private String kmsKeyId;
        private String sizeInGbs;
        private String sizeInMbs;
        private List<GetVolumeBackupsVolumeBackupSourceDetail> sourceDetails;
        private String sourceType;
        private String sourceVolumeBackupId;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeRequestReceived;
        private String type;
        private String uniqueSizeInGbs;
        private String uniqueSizeInMbs;
        private String volumeId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVolumeBackupsVolumeBackup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.expirationTime = defaults.expirationTime;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.sizeInGbs = defaults.sizeInGbs;
    	      this.sizeInMbs = defaults.sizeInMbs;
    	      this.sourceDetails = defaults.sourceDetails;
    	      this.sourceType = defaults.sourceType;
    	      this.sourceVolumeBackupId = defaults.sourceVolumeBackupId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeRequestReceived = defaults.timeRequestReceived;
    	      this.type = defaults.type;
    	      this.uniqueSizeInGbs = defaults.uniqueSizeInGbs;
    	      this.uniqueSizeInMbs = defaults.uniqueSizeInMbs;
    	      this.volumeId = defaults.volumeId;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder expirationTime(String expirationTime) {
            this.expirationTime = Objects.requireNonNull(expirationTime);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder kmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }
        public Builder sizeInGbs(String sizeInGbs) {
            this.sizeInGbs = Objects.requireNonNull(sizeInGbs);
            return this;
        }
        public Builder sizeInMbs(String sizeInMbs) {
            this.sizeInMbs = Objects.requireNonNull(sizeInMbs);
            return this;
        }
        public Builder sourceDetails(List<GetVolumeBackupsVolumeBackupSourceDetail> sourceDetails) {
            this.sourceDetails = Objects.requireNonNull(sourceDetails);
            return this;
        }
        public Builder sourceDetails(GetVolumeBackupsVolumeBackupSourceDetail... sourceDetails) {
            return sourceDetails(List.of(sourceDetails));
        }
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public Builder sourceVolumeBackupId(String sourceVolumeBackupId) {
            this.sourceVolumeBackupId = Objects.requireNonNull(sourceVolumeBackupId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeRequestReceived(String timeRequestReceived) {
            this.timeRequestReceived = Objects.requireNonNull(timeRequestReceived);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder uniqueSizeInGbs(String uniqueSizeInGbs) {
            this.uniqueSizeInGbs = Objects.requireNonNull(uniqueSizeInGbs);
            return this;
        }
        public Builder uniqueSizeInMbs(String uniqueSizeInMbs) {
            this.uniqueSizeInMbs = Objects.requireNonNull(uniqueSizeInMbs);
            return this;
        }
        public Builder volumeId(String volumeId) {
            this.volumeId = Objects.requireNonNull(volumeId);
            return this;
        }        public GetVolumeBackupsVolumeBackup build() {
            return new GetVolumeBackupsVolumeBackup(compartmentId, definedTags, displayName, expirationTime, freeformTags, id, kmsKeyId, sizeInGbs, sizeInMbs, sourceDetails, sourceType, sourceVolumeBackupId, state, systemTags, timeCreated, timeRequestReceived, type, uniqueSizeInGbs, uniqueSizeInMbs, volumeId);
        }
    }
}
