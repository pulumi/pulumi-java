// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntitiesFilter;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsEntitiesLogAnalyticsEntityCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLogAnalyticsEntitiesResult {
    /**
     * @return The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
     * 
     */
    private final @Nullable String cloudResourceId;
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private final String compartmentId;
    /**
     * @return Log analytics entity type name.
     * 
     */
    private final @Nullable List<String> entityTypeNames;
    private final @Nullable List<GetLogAnalyticsEntitiesFilter> filters;
    /**
     * @return The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
     * 
     */
    private final @Nullable String hostname;
    private final @Nullable String hostnameContains;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable String isManagementAgentIdNull;
    private final @Nullable String lifecycleDetailsContains;
    /**
     * @return The list of log_analytics_entity_collection.
     * 
     */
    private final List<GetLogAnalyticsEntitiesLogAnalyticsEntityCollection> logAnalyticsEntityCollections;
    /**
     * @return Log analytics entity name.
     * 
     */
    private final @Nullable String name;
    private final @Nullable String nameContains;
    private final String namespace;
    /**
     * @return This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
     * 
     */
    private final @Nullable String sourceId;
    /**
     * @return The current state of the log analytics entity.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetLogAnalyticsEntitiesResult(
        @CustomType.Parameter("cloudResourceId") @Nullable String cloudResourceId,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("entityTypeNames") @Nullable List<String> entityTypeNames,
        @CustomType.Parameter("filters") @Nullable List<GetLogAnalyticsEntitiesFilter> filters,
        @CustomType.Parameter("hostname") @Nullable String hostname,
        @CustomType.Parameter("hostnameContains") @Nullable String hostnameContains,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isManagementAgentIdNull") @Nullable String isManagementAgentIdNull,
        @CustomType.Parameter("lifecycleDetailsContains") @Nullable String lifecycleDetailsContains,
        @CustomType.Parameter("logAnalyticsEntityCollections") List<GetLogAnalyticsEntitiesLogAnalyticsEntityCollection> logAnalyticsEntityCollections,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("nameContains") @Nullable String nameContains,
        @CustomType.Parameter("namespace") String namespace,
        @CustomType.Parameter("sourceId") @Nullable String sourceId,
        @CustomType.Parameter("state") @Nullable String state) {
        this.cloudResourceId = cloudResourceId;
        this.compartmentId = compartmentId;
        this.entityTypeNames = entityTypeNames;
        this.filters = filters;
        this.hostname = hostname;
        this.hostnameContains = hostnameContains;
        this.id = id;
        this.isManagementAgentIdNull = isManagementAgentIdNull;
        this.lifecycleDetailsContains = lifecycleDetailsContains;
        this.logAnalyticsEntityCollections = logAnalyticsEntityCollections;
        this.name = name;
        this.nameContains = nameContains;
        this.namespace = namespace;
        this.sourceId = sourceId;
        this.state = state;
    }

    /**
     * @return The OCID of the Cloud resource which this entity is a representation of. This may be blank when the entity represents a non-cloud resource that the customer may have on their premises.
     * 
     */
    public Optional<String> cloudResourceId() {
        return Optional.ofNullable(this.cloudResourceId);
    }
    /**
     * @return Compartment Identifier [OCID] (https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Log analytics entity type name.
     * 
     */
    public List<String> entityTypeNames() {
        return this.entityTypeNames == null ? List.of() : this.entityTypeNames;
    }
    public List<GetLogAnalyticsEntitiesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The hostname where the entity represented here is actually present. This would be the output one would get if they run `echo $HOSTNAME` on Linux or an equivalent OS command. This may be different from management agents host since logs may be collected remotely.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    public Optional<String> hostnameContains() {
        return Optional.ofNullable(this.hostnameContains);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> isManagementAgentIdNull() {
        return Optional.ofNullable(this.isManagementAgentIdNull);
    }
    public Optional<String> lifecycleDetailsContains() {
        return Optional.ofNullable(this.lifecycleDetailsContains);
    }
    /**
     * @return The list of log_analytics_entity_collection.
     * 
     */
    public List<GetLogAnalyticsEntitiesLogAnalyticsEntityCollection> logAnalyticsEntityCollections() {
        return this.logAnalyticsEntityCollections;
    }
    /**
     * @return Log analytics entity name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> nameContains() {
        return Optional.ofNullable(this.nameContains);
    }
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return This indicates the type of source. It is primarily for Enterprise Manager Repository ID.
     * 
     */
    public Optional<String> sourceId() {
        return Optional.ofNullable(this.sourceId);
    }
    /**
     * @return The current state of the log analytics entity.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogAnalyticsEntitiesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String cloudResourceId;
        private String compartmentId;
        private @Nullable List<String> entityTypeNames;
        private @Nullable List<GetLogAnalyticsEntitiesFilter> filters;
        private @Nullable String hostname;
        private @Nullable String hostnameContains;
        private String id;
        private @Nullable String isManagementAgentIdNull;
        private @Nullable String lifecycleDetailsContains;
        private List<GetLogAnalyticsEntitiesLogAnalyticsEntityCollection> logAnalyticsEntityCollections;
        private @Nullable String name;
        private @Nullable String nameContains;
        private String namespace;
        private @Nullable String sourceId;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLogAnalyticsEntitiesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudResourceId = defaults.cloudResourceId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.entityTypeNames = defaults.entityTypeNames;
    	      this.filters = defaults.filters;
    	      this.hostname = defaults.hostname;
    	      this.hostnameContains = defaults.hostnameContains;
    	      this.id = defaults.id;
    	      this.isManagementAgentIdNull = defaults.isManagementAgentIdNull;
    	      this.lifecycleDetailsContains = defaults.lifecycleDetailsContains;
    	      this.logAnalyticsEntityCollections = defaults.logAnalyticsEntityCollections;
    	      this.name = defaults.name;
    	      this.nameContains = defaults.nameContains;
    	      this.namespace = defaults.namespace;
    	      this.sourceId = defaults.sourceId;
    	      this.state = defaults.state;
        }

        public Builder cloudResourceId(@Nullable String cloudResourceId) {
            this.cloudResourceId = cloudResourceId;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder entityTypeNames(@Nullable List<String> entityTypeNames) {
            this.entityTypeNames = entityTypeNames;
            return this;
        }
        public Builder entityTypeNames(String... entityTypeNames) {
            return entityTypeNames(List.of(entityTypeNames));
        }
        public Builder filters(@Nullable List<GetLogAnalyticsEntitiesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetLogAnalyticsEntitiesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder hostname(@Nullable String hostname) {
            this.hostname = hostname;
            return this;
        }
        public Builder hostnameContains(@Nullable String hostnameContains) {
            this.hostnameContains = hostnameContains;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isManagementAgentIdNull(@Nullable String isManagementAgentIdNull) {
            this.isManagementAgentIdNull = isManagementAgentIdNull;
            return this;
        }
        public Builder lifecycleDetailsContains(@Nullable String lifecycleDetailsContains) {
            this.lifecycleDetailsContains = lifecycleDetailsContains;
            return this;
        }
        public Builder logAnalyticsEntityCollections(List<GetLogAnalyticsEntitiesLogAnalyticsEntityCollection> logAnalyticsEntityCollections) {
            this.logAnalyticsEntityCollections = Objects.requireNonNull(logAnalyticsEntityCollections);
            return this;
        }
        public Builder logAnalyticsEntityCollections(GetLogAnalyticsEntitiesLogAnalyticsEntityCollection... logAnalyticsEntityCollections) {
            return logAnalyticsEntityCollections(List.of(logAnalyticsEntityCollections));
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder nameContains(@Nullable String nameContains) {
            this.nameContains = nameContains;
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        public Builder sourceId(@Nullable String sourceId) {
            this.sourceId = sourceId;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetLogAnalyticsEntitiesResult build() {
            return new GetLogAnalyticsEntitiesResult(cloudResourceId, compartmentId, entityTypeNames, filters, hostname, hostnameContains, id, isManagementAgentIdNull, lifecycleDetailsContains, logAnalyticsEntityCollections, name, nameContains, namespace, sourceId, state);
        }
    }
}
