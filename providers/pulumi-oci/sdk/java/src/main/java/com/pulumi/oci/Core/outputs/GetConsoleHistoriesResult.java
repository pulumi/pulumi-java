// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetConsoleHistoriesConsoleHistory;
import com.pulumi.oci.Core.outputs.GetConsoleHistoriesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConsoleHistoriesResult {
    /**
     * @return The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private final @Nullable String availabilityDomain;
    /**
     * @return The OCID of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return The list of console_histories.
     * 
     */
    private final List<GetConsoleHistoriesConsoleHistory> consoleHistories;
    private final @Nullable List<GetConsoleHistoriesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The OCID of the instance this console history was fetched from.
     * 
     */
    private final @Nullable String instanceId;
    /**
     * @return The current state of the console history.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetConsoleHistoriesResult(
        @CustomType.Parameter("availabilityDomain") @Nullable String availabilityDomain,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("consoleHistories") List<GetConsoleHistoriesConsoleHistory> consoleHistories,
        @CustomType.Parameter("filters") @Nullable List<GetConsoleHistoriesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceId") @Nullable String instanceId,
        @CustomType.Parameter("state") @Nullable String state) {
        this.availabilityDomain = availabilityDomain;
        this.compartmentId = compartmentId;
        this.consoleHistories = consoleHistories;
        this.filters = filters;
        this.id = id;
        this.instanceId = instanceId;
        this.state = state;
    }

    /**
     * @return The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of console_histories.
     * 
     */
    public List<GetConsoleHistoriesConsoleHistory> consoleHistories() {
        return this.consoleHistories;
    }
    public List<GetConsoleHistoriesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the instance this console history was fetched from.
     * 
     */
    public Optional<String> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }
    /**
     * @return The current state of the console history.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConsoleHistoriesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String availabilityDomain;
        private String compartmentId;
        private List<GetConsoleHistoriesConsoleHistory> consoleHistories;
        private @Nullable List<GetConsoleHistoriesFilter> filters;
        private String id;
        private @Nullable String instanceId;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetConsoleHistoriesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.consoleHistories = defaults.consoleHistories;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.state = defaults.state;
        }

        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder consoleHistories(List<GetConsoleHistoriesConsoleHistory> consoleHistories) {
            this.consoleHistories = Objects.requireNonNull(consoleHistories);
            return this;
        }
        public Builder consoleHistories(GetConsoleHistoriesConsoleHistory... consoleHistories) {
            return consoleHistories(List.of(consoleHistories));
        }
        public Builder filters(@Nullable List<GetConsoleHistoriesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetConsoleHistoriesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceId(@Nullable String instanceId) {
            this.instanceId = instanceId;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetConsoleHistoriesResult build() {
            return new GetConsoleHistoriesResult(availabilityDomain, compartmentId, consoleHistories, filters, id, instanceId, state);
        }
    }
}
