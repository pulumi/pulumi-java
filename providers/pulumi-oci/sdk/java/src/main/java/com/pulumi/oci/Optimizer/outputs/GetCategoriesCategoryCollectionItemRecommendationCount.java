// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetCategoriesCategoryCollectionItemRecommendationCount {
    /**
     * @return The count of resources.
     * 
     */
    private final Integer count;
    /**
     * @return The level of importance assigned to the recommendation.
     * 
     */
    private final String importance;

    @CustomType.Constructor
    private GetCategoriesCategoryCollectionItemRecommendationCount(
        @CustomType.Parameter("count") Integer count,
        @CustomType.Parameter("importance") String importance) {
        this.count = count;
        this.importance = importance;
    }

    /**
     * @return The count of resources.
     * 
     */
    public Integer count() {
        return this.count;
    }
    /**
     * @return The level of importance assigned to the recommendation.
     * 
     */
    public String importance() {
        return this.importance;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCategoriesCategoryCollectionItemRecommendationCount defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer count;
        private String importance;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCategoriesCategoryCollectionItemRecommendationCount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.importance = defaults.importance;
        }

        public Builder count(Integer count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }
        public Builder importance(String importance) {
            this.importance = Objects.requireNonNull(importance);
            return this;
        }        public GetCategoriesCategoryCollectionItemRecommendationCount build() {
            return new GetCategoriesCategoryCollectionItemRecommendationCount(count, importance);
        }
    }
}
