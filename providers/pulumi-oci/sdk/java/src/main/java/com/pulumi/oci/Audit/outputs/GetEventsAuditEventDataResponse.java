// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Audit.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetEventsAuditEventDataResponse {
    /**
     * @return The headers of the response.
     * 
     */
    private final Map<String,Object> headers;
    /**
     * @return A friendly description of what happened during the operation. Use this for troubleshooting.
     * 
     */
    private final String message;
    /**
     * @return This value is included for backward compatibility with the Audit version 1 schema, where  it contained metadata of interest from the response payload.
     * 
     */
    private final Map<String,Object> payload;
    /**
     * @return The time of the response to the audited request, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.278Z`
     * 
     */
    private final String responseTime;
    /**
     * @return The status code of the response.  Example: `200`
     * 
     */
    private final String status;

    @CustomType.Constructor
    private GetEventsAuditEventDataResponse(
        @CustomType.Parameter("headers") Map<String,Object> headers,
        @CustomType.Parameter("message") String message,
        @CustomType.Parameter("payload") Map<String,Object> payload,
        @CustomType.Parameter("responseTime") String responseTime,
        @CustomType.Parameter("status") String status) {
        this.headers = headers;
        this.message = message;
        this.payload = payload;
        this.responseTime = responseTime;
        this.status = status;
    }

    /**
     * @return The headers of the response.
     * 
     */
    public Map<String,Object> headers() {
        return this.headers;
    }
    /**
     * @return A friendly description of what happened during the operation. Use this for troubleshooting.
     * 
     */
    public String message() {
        return this.message;
    }
    /**
     * @return This value is included for backward compatibility with the Audit version 1 schema, where  it contained metadata of interest from the response payload.
     * 
     */
    public Map<String,Object> payload() {
        return this.payload;
    }
    /**
     * @return The time of the response to the audited request, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.278Z`
     * 
     */
    public String responseTime() {
        return this.responseTime;
    }
    /**
     * @return The status code of the response.  Example: `200`
     * 
     */
    public String status() {
        return this.status;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventsAuditEventDataResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,Object> headers;
        private String message;
        private Map<String,Object> payload;
        private String responseTime;
        private String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEventsAuditEventDataResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.headers = defaults.headers;
    	      this.message = defaults.message;
    	      this.payload = defaults.payload;
    	      this.responseTime = defaults.responseTime;
    	      this.status = defaults.status;
        }

        public Builder headers(Map<String,Object> headers) {
            this.headers = Objects.requireNonNull(headers);
            return this;
        }
        public Builder message(String message) {
            this.message = Objects.requireNonNull(message);
            return this;
        }
        public Builder payload(Map<String,Object> payload) {
            this.payload = Objects.requireNonNull(payload);
            return this;
        }
        public Builder responseTime(String responseTime) {
            this.responseTime = Objects.requireNonNull(responseTime);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }        public GetEventsAuditEventDataResponse build() {
            return new GetEventsAuditEventDataResponse(headers, message, payload, responseTime, status);
        }
    }
}
