// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ObjectStorage.inputs.GetPreauthrequestsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPreauthrequestsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPreauthrequestsArgs Empty = new GetPreauthrequestsArgs();

    /**
     * The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetPreauthrequestsFilterArgs>> filters;

    public Optional<Output<List<GetPreauthrequestsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The Object Storage namespace used for the request.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return The Object Storage namespace used for the request.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * User-specified object name prefixes can be used to query and return a list of pre-authenticated requests.
     * 
     */
    @Import(name="objectNamePrefix")
    private @Nullable Output<String> objectNamePrefix;

    /**
     * @return User-specified object name prefixes can be used to query and return a list of pre-authenticated requests.
     * 
     */
    public Optional<Output<String>> objectNamePrefix() {
        return Optional.ofNullable(this.objectNamePrefix);
    }

    private GetPreauthrequestsArgs() {}

    private GetPreauthrequestsArgs(GetPreauthrequestsArgs $) {
        this.bucket = $.bucket;
        this.filters = $.filters;
        this.namespace = $.namespace;
        this.objectNamePrefix = $.objectNamePrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPreauthrequestsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPreauthrequestsArgs $;

        public Builder() {
            $ = new GetPreauthrequestsArgs();
        }

        public Builder(GetPreauthrequestsArgs defaults) {
            $ = new GetPreauthrequestsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        public Builder filters(@Nullable Output<List<GetPreauthrequestsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetPreauthrequestsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetPreauthrequestsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param namespace The Object Storage namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Object Storage namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param objectNamePrefix User-specified object name prefixes can be used to query and return a list of pre-authenticated requests.
         * 
         * @return builder
         * 
         */
        public Builder objectNamePrefix(@Nullable Output<String> objectNamePrefix) {
            $.objectNamePrefix = objectNamePrefix;
            return this;
        }

        /**
         * @param objectNamePrefix User-specified object name prefixes can be used to query and return a list of pre-authenticated requests.
         * 
         * @return builder
         * 
         */
        public Builder objectNamePrefix(String objectNamePrefix) {
            return objectNamePrefix(Output.of(objectNamePrefix));
        }

        public GetPreauthrequestsArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            return $;
        }
    }

}
