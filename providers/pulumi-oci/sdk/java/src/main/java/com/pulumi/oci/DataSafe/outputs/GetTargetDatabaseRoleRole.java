// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetTargetDatabaseRoleRole {
    private final String authenticationType;
    private final Boolean isCommon;
    private final Boolean isImplicit;
    private final Boolean isInherited;
    private final Boolean isOracleMaintained;
    private final Boolean isPasswordRequired;
    private final String roleName;

    @CustomType.Constructor
    private GetTargetDatabaseRoleRole(
        @CustomType.Parameter("authenticationType") String authenticationType,
        @CustomType.Parameter("isCommon") Boolean isCommon,
        @CustomType.Parameter("isImplicit") Boolean isImplicit,
        @CustomType.Parameter("isInherited") Boolean isInherited,
        @CustomType.Parameter("isOracleMaintained") Boolean isOracleMaintained,
        @CustomType.Parameter("isPasswordRequired") Boolean isPasswordRequired,
        @CustomType.Parameter("roleName") String roleName) {
        this.authenticationType = authenticationType;
        this.isCommon = isCommon;
        this.isImplicit = isImplicit;
        this.isInherited = isInherited;
        this.isOracleMaintained = isOracleMaintained;
        this.isPasswordRequired = isPasswordRequired;
        this.roleName = roleName;
    }

    public String authenticationType() {
        return this.authenticationType;
    }
    public Boolean isCommon() {
        return this.isCommon;
    }
    public Boolean isImplicit() {
        return this.isImplicit;
    }
    public Boolean isInherited() {
        return this.isInherited;
    }
    public Boolean isOracleMaintained() {
        return this.isOracleMaintained;
    }
    public Boolean isPasswordRequired() {
        return this.isPasswordRequired;
    }
    public String roleName() {
        return this.roleName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTargetDatabaseRoleRole defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String authenticationType;
        private Boolean isCommon;
        private Boolean isImplicit;
        private Boolean isInherited;
        private Boolean isOracleMaintained;
        private Boolean isPasswordRequired;
        private String roleName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTargetDatabaseRoleRole defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authenticationType = defaults.authenticationType;
    	      this.isCommon = defaults.isCommon;
    	      this.isImplicit = defaults.isImplicit;
    	      this.isInherited = defaults.isInherited;
    	      this.isOracleMaintained = defaults.isOracleMaintained;
    	      this.isPasswordRequired = defaults.isPasswordRequired;
    	      this.roleName = defaults.roleName;
        }

        public Builder authenticationType(String authenticationType) {
            this.authenticationType = Objects.requireNonNull(authenticationType);
            return this;
        }
        public Builder isCommon(Boolean isCommon) {
            this.isCommon = Objects.requireNonNull(isCommon);
            return this;
        }
        public Builder isImplicit(Boolean isImplicit) {
            this.isImplicit = Objects.requireNonNull(isImplicit);
            return this;
        }
        public Builder isInherited(Boolean isInherited) {
            this.isInherited = Objects.requireNonNull(isInherited);
            return this;
        }
        public Builder isOracleMaintained(Boolean isOracleMaintained) {
            this.isOracleMaintained = Objects.requireNonNull(isOracleMaintained);
            return this;
        }
        public Builder isPasswordRequired(Boolean isPasswordRequired) {
            this.isPasswordRequired = Objects.requireNonNull(isPasswordRequired);
            return this;
        }
        public Builder roleName(String roleName) {
            this.roleName = Objects.requireNonNull(roleName);
            return this;
        }        public GetTargetDatabaseRoleRole build() {
            return new GetTargetDatabaseRoleRole(authenticationType, isCommon, isImplicit, isInherited, isOracleMaintained, isPasswordRequired, roleName);
        }
    }
}
