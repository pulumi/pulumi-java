// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiVision.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModelTrainingDataset {
    /**
     * @return The name of the ObjectStorage bucket that contains the input data file.
     * 
     */
    private final @Nullable String bucket;
    /**
     * @return The OCID of the Data Science Labeling Dataset.
     * 
     */
    private final @Nullable String datasetId;
    /**
     * @return Type of the Dataset.
     * 
     */
    private final String datasetType;
    private final @Nullable String namespaceName;
    /**
     * @return The object name of the input data file.
     * 
     */
    private final @Nullable String object;

    @CustomType.Constructor
    private ModelTrainingDataset(
        @CustomType.Parameter("bucket") @Nullable String bucket,
        @CustomType.Parameter("datasetId") @Nullable String datasetId,
        @CustomType.Parameter("datasetType") String datasetType,
        @CustomType.Parameter("namespaceName") @Nullable String namespaceName,
        @CustomType.Parameter("object") @Nullable String object) {
        this.bucket = bucket;
        this.datasetId = datasetId;
        this.datasetType = datasetType;
        this.namespaceName = namespaceName;
        this.object = object;
    }

    /**
     * @return The name of the ObjectStorage bucket that contains the input data file.
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return The OCID of the Data Science Labeling Dataset.
     * 
     */
    public Optional<String> datasetId() {
        return Optional.ofNullable(this.datasetId);
    }
    /**
     * @return Type of the Dataset.
     * 
     */
    public String datasetType() {
        return this.datasetType;
    }
    public Optional<String> namespaceName() {
        return Optional.ofNullable(this.namespaceName);
    }
    /**
     * @return The object name of the input data file.
     * 
     */
    public Optional<String> object() {
        return Optional.ofNullable(this.object);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelTrainingDataset defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String bucket;
        private @Nullable String datasetId;
        private String datasetType;
        private @Nullable String namespaceName;
        private @Nullable String object;

        public Builder() {
    	      // Empty
        }

        public Builder(ModelTrainingDataset defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.datasetId = defaults.datasetId;
    	      this.datasetType = defaults.datasetType;
    	      this.namespaceName = defaults.namespaceName;
    	      this.object = defaults.object;
        }

        public Builder bucket(@Nullable String bucket) {
            this.bucket = bucket;
            return this;
        }
        public Builder datasetId(@Nullable String datasetId) {
            this.datasetId = datasetId;
            return this;
        }
        public Builder datasetType(String datasetType) {
            this.datasetType = Objects.requireNonNull(datasetType);
            return this;
        }
        public Builder namespaceName(@Nullable String namespaceName) {
            this.namespaceName = namespaceName;
            return this;
        }
        public Builder object(@Nullable String object) {
            this.object = object;
            return this;
        }        public ModelTrainingDataset build() {
            return new ModelTrainingDataset(bucket, datasetId, datasetType, namespaceName, object);
        }
    }
}
