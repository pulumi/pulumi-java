// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPreauthrequestsPreauthenticatedRequest {
    /**
     * @return The operation that can be performed on this resource.
     * 
     */
    private final String accessType;
    /**
     * @return The URI to embed in the URL when using the pre-authenticated request.
     * 
     */
    private final String accessUri;
    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    private final String bucket;
    /**
     * @return Specifies whether a list operation is allowed on a PAR with accessType &#34;AnyObjectRead&#34; or &#34;AnyObjectReadWrite&#34;. Deny: Prevents the user from performing a list operation. ListObjects: Authorizes the user to perform a list operation.
     * 
     */
    private final String bucketListingAction;
    /**
     * @return The unique identifier to use when directly addressing the pre-authenticated request.
     * 
     */
    private final String id;
    /**
     * @return The user-provided name of the pre-authenticated request.
     * 
     */
    private final String name;
    /**
     * @return The Object Storage namespace used for the request.
     * 
     */
    private final String namespace;
    /**
     * @return Deprecated. Instead use `object_name`.The name of the object that is being granted access to by the pre-authenticated request. Avoid entering confidential information. The object name can be null and if so, the pre-authenticated request grants access to the entire bucket. Example: test/object1.log
     * 
     * @deprecated
     * The &#39;object&#39; field has been deprecated. Please use &#39;object_name&#39; instead.
     * 
     */
    @Deprecated /* The 'object' field has been deprecated. Please use 'object_name' instead. */
    private final String object;
    /**
     * @return The name of the object that is being granted access to by the pre-authenticated request. Avoid entering confidential information. The object name can be null and if so, the pre-authenticated request grants access to the entire bucket. Example: test/object1.log
     * 
     */
    private final String objectName;
    private final String parId;
    /**
     * @return The date when the pre-authenticated request was created as per specification [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private final String timeCreated;
    /**
     * @return The expiration date for the pre-authenticated request as per [RFC 3339](https://tools.ietf.org/html/rfc3339). After this date the pre-authenticated request will no longer be valid.
     * 
     */
    private final String timeExpires;

    @CustomType.Constructor
    private GetPreauthrequestsPreauthenticatedRequest(
        @CustomType.Parameter("accessType") String accessType,
        @CustomType.Parameter("accessUri") String accessUri,
        @CustomType.Parameter("bucket") String bucket,
        @CustomType.Parameter("bucketListingAction") String bucketListingAction,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("namespace") String namespace,
        @CustomType.Parameter("object") String object,
        @CustomType.Parameter("objectName") String objectName,
        @CustomType.Parameter("parId") String parId,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeExpires") String timeExpires) {
        this.accessType = accessType;
        this.accessUri = accessUri;
        this.bucket = bucket;
        this.bucketListingAction = bucketListingAction;
        this.id = id;
        this.name = name;
        this.namespace = namespace;
        this.object = object;
        this.objectName = objectName;
        this.parId = parId;
        this.timeCreated = timeCreated;
        this.timeExpires = timeExpires;
    }

    /**
     * @return The operation that can be performed on this resource.
     * 
     */
    public String accessType() {
        return this.accessType;
    }
    /**
     * @return The URI to embed in the URL when using the pre-authenticated request.
     * 
     */
    public String accessUri() {
        return this.accessUri;
    }
    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return Specifies whether a list operation is allowed on a PAR with accessType &#34;AnyObjectRead&#34; or &#34;AnyObjectReadWrite&#34;. Deny: Prevents the user from performing a list operation. ListObjects: Authorizes the user to perform a list operation.
     * 
     */
    public String bucketListingAction() {
        return this.bucketListingAction;
    }
    /**
     * @return The unique identifier to use when directly addressing the pre-authenticated request.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The user-provided name of the pre-authenticated request.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The Object Storage namespace used for the request.
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return Deprecated. Instead use `object_name`.The name of the object that is being granted access to by the pre-authenticated request. Avoid entering confidential information. The object name can be null and if so, the pre-authenticated request grants access to the entire bucket. Example: test/object1.log
     * 
     * @deprecated
     * The &#39;object&#39; field has been deprecated. Please use &#39;object_name&#39; instead.
     * 
     */
    @Deprecated /* The 'object' field has been deprecated. Please use 'object_name' instead. */
    public String object() {
        return this.object;
    }
    /**
     * @return The name of the object that is being granted access to by the pre-authenticated request. Avoid entering confidential information. The object name can be null and if so, the pre-authenticated request grants access to the entire bucket. Example: test/object1.log
     * 
     */
    public String objectName() {
        return this.objectName;
    }
    public String parId() {
        return this.parId;
    }
    /**
     * @return The date when the pre-authenticated request was created as per specification [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The expiration date for the pre-authenticated request as per [RFC 3339](https://tools.ietf.org/html/rfc3339). After this date the pre-authenticated request will no longer be valid.
     * 
     */
    public String timeExpires() {
        return this.timeExpires;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPreauthrequestsPreauthenticatedRequest defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String accessType;
        private String accessUri;
        private String bucket;
        private String bucketListingAction;
        private String id;
        private String name;
        private String namespace;
        private String object;
        private String objectName;
        private String parId;
        private String timeCreated;
        private String timeExpires;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPreauthrequestsPreauthenticatedRequest defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessType = defaults.accessType;
    	      this.accessUri = defaults.accessUri;
    	      this.bucket = defaults.bucket;
    	      this.bucketListingAction = defaults.bucketListingAction;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.objectName = defaults.objectName;
    	      this.parId = defaults.parId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeExpires = defaults.timeExpires;
        }

        public Builder accessType(String accessType) {
            this.accessType = Objects.requireNonNull(accessType);
            return this;
        }
        public Builder accessUri(String accessUri) {
            this.accessUri = Objects.requireNonNull(accessUri);
            return this;
        }
        public Builder bucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        public Builder bucketListingAction(String bucketListingAction) {
            this.bucketListingAction = Objects.requireNonNull(bucketListingAction);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        public Builder object(String object) {
            this.object = Objects.requireNonNull(object);
            return this;
        }
        public Builder objectName(String objectName) {
            this.objectName = Objects.requireNonNull(objectName);
            return this;
        }
        public Builder parId(String parId) {
            this.parId = Objects.requireNonNull(parId);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeExpires(String timeExpires) {
            this.timeExpires = Objects.requireNonNull(timeExpires);
            return this;
        }        public GetPreauthrequestsPreauthenticatedRequest build() {
            return new GetPreauthrequestsPreauthenticatedRequest(accessType, accessUri, bucket, bucketListingAction, id, name, namespace, object, objectName, parId, timeCreated, timeExpires);
        }
    }
}
