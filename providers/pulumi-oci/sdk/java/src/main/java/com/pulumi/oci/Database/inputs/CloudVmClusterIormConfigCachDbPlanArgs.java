// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CloudVmClusterIormConfigCachDbPlanArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudVmClusterIormConfigCachDbPlanArgs Empty = new CloudVmClusterIormConfigCachDbPlanArgs();

    /**
     * The database name. For the default `DbPlan`, the `dbName` is `default`.
     * 
     */
    @Import(name="dbName")
    private @Nullable Output<String> dbName;

    /**
     * @return The database name. For the default `DbPlan`, the `dbName` is `default`.
     * 
     */
    public Optional<Output<String>> dbName() {
        return Optional.ofNullable(this.dbName);
    }

    /**
     * The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
     * 
     */
    @Import(name="flashCacheLimit")
    private @Nullable Output<String> flashCacheLimit;

    /**
     * @return The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
     * 
     */
    public Optional<Output<String>> flashCacheLimit() {
        return Optional.ofNullable(this.flashCacheLimit);
    }

    /**
     * The relative priority of this database.
     * 
     */
    @Import(name="share")
    private @Nullable Output<Integer> share;

    /**
     * @return The relative priority of this database.
     * 
     */
    public Optional<Output<Integer>> share() {
        return Optional.ofNullable(this.share);
    }

    private CloudVmClusterIormConfigCachDbPlanArgs() {}

    private CloudVmClusterIormConfigCachDbPlanArgs(CloudVmClusterIormConfigCachDbPlanArgs $) {
        this.dbName = $.dbName;
        this.flashCacheLimit = $.flashCacheLimit;
        this.share = $.share;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudVmClusterIormConfigCachDbPlanArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudVmClusterIormConfigCachDbPlanArgs $;

        public Builder() {
            $ = new CloudVmClusterIormConfigCachDbPlanArgs();
        }

        public Builder(CloudVmClusterIormConfigCachDbPlanArgs defaults) {
            $ = new CloudVmClusterIormConfigCachDbPlanArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dbName The database name. For the default `DbPlan`, the `dbName` is `default`.
         * 
         * @return builder
         * 
         */
        public Builder dbName(@Nullable Output<String> dbName) {
            $.dbName = dbName;
            return this;
        }

        /**
         * @param dbName The database name. For the default `DbPlan`, the `dbName` is `default`.
         * 
         * @return builder
         * 
         */
        public Builder dbName(String dbName) {
            return dbName(Output.of(dbName));
        }

        /**
         * @param flashCacheLimit The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
         * 
         * @return builder
         * 
         */
        public Builder flashCacheLimit(@Nullable Output<String> flashCacheLimit) {
            $.flashCacheLimit = flashCacheLimit;
            return this;
        }

        /**
         * @param flashCacheLimit The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
         * 
         * @return builder
         * 
         */
        public Builder flashCacheLimit(String flashCacheLimit) {
            return flashCacheLimit(Output.of(flashCacheLimit));
        }

        /**
         * @param share The relative priority of this database.
         * 
         * @return builder
         * 
         */
        public Builder share(@Nullable Output<Integer> share) {
            $.share = share;
            return this;
        }

        /**
         * @param share The relative priority of this database.
         * 
         * @return builder
         * 
         */
        public Builder share(Integer share) {
            return share(Output.of(share));
        }

        public CloudVmClusterIormConfigCachDbPlanArgs build() {
            return $;
        }
    }

}
