// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.GetAuditProfilesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAuditProfilesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAuditProfilesPlainArgs Empty = new GetAuditProfilesPlainArgs();

    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    @Import(name="accessLevel")
    private @Nullable String accessLevel;

    /**
     * @return Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }

    /**
     * A filter to return only items that have count of audit records collected greater than or equal to the specified value.
     * 
     */
    @Import(name="auditCollectedVolumeGreaterThanOrEqualTo")
    private @Nullable String auditCollectedVolumeGreaterThanOrEqualTo;

    /**
     * @return A filter to return only items that have count of audit records collected greater than or equal to the specified value.
     * 
     */
    public Optional<String> auditCollectedVolumeGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.auditCollectedVolumeGreaterThanOrEqualTo);
    }

    /**
     * A optional filter to return only resources that match the specified id.
     * 
     */
    @Import(name="auditProfileId")
    private @Nullable String auditProfileId;

    /**
     * @return A optional filter to return only resources that match the specified id.
     * 
     */
    public Optional<String> auditProfileId() {
        return Optional.ofNullable(this.auditProfileId);
    }

    /**
     * A filter to return only resources that match the specified compartment OCID.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Boolean compartmentIdInSubtree;

    /**
     * @return Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    /**
     * A filter to return only resources that match the specified display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetAuditProfilesFilter> filters;

    public Optional<List<GetAuditProfilesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A optional filter to return only resources that match the specified retention configured value.
     * 
     */
    @Import(name="isOverrideGlobalRetentionSetting")
    private @Nullable Boolean isOverrideGlobalRetentionSetting;

    /**
     * @return A optional filter to return only resources that match the specified retention configured value.
     * 
     */
    public Optional<Boolean> isOverrideGlobalRetentionSetting() {
        return Optional.ofNullable(this.isOverrideGlobalRetentionSetting);
    }

    /**
     * Indicates if you want to continue audit record collection beyond the free limit of one million audit records per month per target database, incurring additional charges. The default value is inherited from the global settings. You can change at the global level or at the target level.
     * 
     */
    @Import(name="isPaidUsageEnabled")
    private @Nullable Boolean isPaidUsageEnabled;

    /**
     * @return Indicates if you want to continue audit record collection beyond the free limit of one million audit records per month per target database, incurring additional charges. The default value is inherited from the global settings. You can change at the global level or at the target level.
     * 
     */
    public Optional<Boolean> isPaidUsageEnabled() {
        return Optional.ofNullable(this.isPaidUsageEnabled);
    }

    /**
     * A optional filter to return only resources that match the specified lifecycle state.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return A optional filter to return only resources that match the specified lifecycle state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A filter to return only items related to a specific target OCID.
     * 
     */
    @Import(name="targetId")
    private @Nullable String targetId;

    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    private GetAuditProfilesPlainArgs() {}

    private GetAuditProfilesPlainArgs(GetAuditProfilesPlainArgs $) {
        this.accessLevel = $.accessLevel;
        this.auditCollectedVolumeGreaterThanOrEqualTo = $.auditCollectedVolumeGreaterThanOrEqualTo;
        this.auditProfileId = $.auditProfileId;
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.isOverrideGlobalRetentionSetting = $.isOverrideGlobalRetentionSetting;
        this.isPaidUsageEnabled = $.isPaidUsageEnabled;
        this.state = $.state;
        this.targetId = $.targetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAuditProfilesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAuditProfilesPlainArgs $;

        public Builder() {
            $ = new GetAuditProfilesPlainArgs();
        }

        public Builder(GetAuditProfilesPlainArgs defaults) {
            $ = new GetAuditProfilesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessLevel Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
         * 
         * @return builder
         * 
         */
        public Builder accessLevel(@Nullable String accessLevel) {
            $.accessLevel = accessLevel;
            return this;
        }

        /**
         * @param auditCollectedVolumeGreaterThanOrEqualTo A filter to return only items that have count of audit records collected greater than or equal to the specified value.
         * 
         * @return builder
         * 
         */
        public Builder auditCollectedVolumeGreaterThanOrEqualTo(@Nullable String auditCollectedVolumeGreaterThanOrEqualTo) {
            $.auditCollectedVolumeGreaterThanOrEqualTo = auditCollectedVolumeGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param auditProfileId A optional filter to return only resources that match the specified id.
         * 
         * @return builder
         * 
         */
        public Builder auditProfileId(@Nullable String auditProfileId) {
            $.auditProfileId = auditProfileId;
            return this;
        }

        /**
         * @param compartmentId A filter to return only resources that match the specified compartment OCID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the specified display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetAuditProfilesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetAuditProfilesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isOverrideGlobalRetentionSetting A optional filter to return only resources that match the specified retention configured value.
         * 
         * @return builder
         * 
         */
        public Builder isOverrideGlobalRetentionSetting(@Nullable Boolean isOverrideGlobalRetentionSetting) {
            $.isOverrideGlobalRetentionSetting = isOverrideGlobalRetentionSetting;
            return this;
        }

        /**
         * @param isPaidUsageEnabled Indicates if you want to continue audit record collection beyond the free limit of one million audit records per month per target database, incurring additional charges. The default value is inherited from the global settings. You can change at the global level or at the target level.
         * 
         * @return builder
         * 
         */
        public Builder isPaidUsageEnabled(@Nullable Boolean isPaidUsageEnabled) {
            $.isPaidUsageEnabled = isPaidUsageEnabled;
            return this;
        }

        /**
         * @param state A optional filter to return only resources that match the specified lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param targetId A filter to return only items related to a specific target OCID.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable String targetId) {
            $.targetId = targetId;
            return this;
        }

        public GetAuditProfilesPlainArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
