// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.VolumeGroupBackupSourceDetailsArgs;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeGroupBackupState extends com.pulumi.resources.ResourceArgs {

    public static final VolumeGroupBackupState Empty = new VolumeGroupBackupState();

    /**
     * (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     * 
     */
    @Import(name="expirationTime")
    private @Nullable Output<String> expirationTime;

    /**
     * @return The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     * 
     */
    public Optional<Output<String>> expirationTime() {
        return Optional.ofNullable(this.expirationTime);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The aggregate size of the volume group backup, in GBs.
     * 
     */
    @Import(name="sizeInGbs")
    private @Nullable Output<String> sizeInGbs;

    /**
     * @return The aggregate size of the volume group backup, in GBs.
     * 
     */
    public Optional<Output<String>> sizeInGbs() {
        return Optional.ofNullable(this.sizeInGbs);
    }

    /**
     * The aggregate size of the volume group backup, in MBs.
     * 
     */
    @Import(name="sizeInMbs")
    private @Nullable Output<String> sizeInMbs;

    /**
     * @return The aggregate size of the volume group backup, in MBs.
     * 
     */
    public Optional<Output<String>> sizeInMbs() {
        return Optional.ofNullable(this.sizeInMbs);
    }

    /**
     * Details of the volume group backup source in the cloud.
     * 
     */
    @Import(name="sourceDetails")
    private @Nullable Output<VolumeGroupBackupSourceDetailsArgs> sourceDetails;

    /**
     * @return Details of the volume group backup source in the cloud.
     * 
     */
    public Optional<Output<VolumeGroupBackupSourceDetailsArgs>> sourceDetails() {
        return Optional.ofNullable(this.sourceDetails);
    }

    /**
     * Specifies whether the volume group backup was created manually, or via scheduled backup policy.
     * 
     */
    @Import(name="sourceType")
    private @Nullable Output<String> sourceType;

    /**
     * @return Specifies whether the volume group backup was created manually, or via scheduled backup policy.
     * 
     */
    public Optional<Output<String>> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    /**
     * The OCID of the source volume group backup.
     * 
     */
    @Import(name="sourceVolumeGroupBackupId")
    private @Nullable Output<String> sourceVolumeGroupBackupId;

    /**
     * @return The OCID of the source volume group backup.
     * 
     */
    public Optional<Output<String>> sourceVolumeGroupBackupId() {
        return Optional.ofNullable(this.sourceVolumeGroupBackupId);
    }

    /**
     * The current state of a volume group backup.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of a volume group backup.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Import(name="timeRequestReceived")
    private @Nullable Output<String> timeRequestReceived;

    /**
     * @return The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeRequestReceived() {
        return Optional.ofNullable(this.timeRequestReceived);
    }

    /**
     * The type of backup to create. If omitted, defaults to incremental.
     * * Allowed values are :
     * * FULL
     * * INCREMENTAL
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of backup to create. If omitted, defaults to incremental.
     * * Allowed values are :
     * * FULL
     * * INCREMENTAL
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `size_in_gbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
     * 
     */
    @Import(name="uniqueSizeInGbs")
    private @Nullable Output<String> uniqueSizeInGbs;

    /**
     * @return The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `size_in_gbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
     * 
     */
    public Optional<Output<String>> uniqueSizeInGbs() {
        return Optional.ofNullable(this.uniqueSizeInGbs);
    }

    /**
     * The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `size_in_mbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
     * 
     */
    @Import(name="uniqueSizeInMbs")
    private @Nullable Output<String> uniqueSizeInMbs;

    /**
     * @return The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `size_in_mbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
     * 
     */
    public Optional<Output<String>> uniqueSizeInMbs() {
        return Optional.ofNullable(this.uniqueSizeInMbs);
    }

    /**
     * OCIDs for the volume backups in this volume group backup.
     * 
     */
    @Import(name="volumeBackupIds")
    private @Nullable Output<List<String>> volumeBackupIds;

    /**
     * @return OCIDs for the volume backups in this volume group backup.
     * 
     */
    public Optional<Output<List<String>>> volumeBackupIds() {
        return Optional.ofNullable(this.volumeBackupIds);
    }

    /**
     * The OCID of the volume group that needs to be backed up.
     * 
     */
    @Import(name="volumeGroupId")
    private @Nullable Output<String> volumeGroupId;

    /**
     * @return The OCID of the volume group that needs to be backed up.
     * 
     */
    public Optional<Output<String>> volumeGroupId() {
        return Optional.ofNullable(this.volumeGroupId);
    }

    private VolumeGroupBackupState() {}

    private VolumeGroupBackupState(VolumeGroupBackupState $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.expirationTime = $.expirationTime;
        this.freeformTags = $.freeformTags;
        this.sizeInGbs = $.sizeInGbs;
        this.sizeInMbs = $.sizeInMbs;
        this.sourceDetails = $.sourceDetails;
        this.sourceType = $.sourceType;
        this.sourceVolumeGroupBackupId = $.sourceVolumeGroupBackupId;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeRequestReceived = $.timeRequestReceived;
        this.type = $.type;
        this.uniqueSizeInGbs = $.uniqueSizeInGbs;
        this.uniqueSizeInMbs = $.uniqueSizeInMbs;
        this.volumeBackupIds = $.volumeBackupIds;
        this.volumeGroupId = $.volumeGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeGroupBackupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeGroupBackupState $;

        public Builder() {
            $ = new VolumeGroupBackupState();
        }

        public Builder(VolumeGroupBackupState defaults) {
            $ = new VolumeGroupBackupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that will contain the volume group backup. This parameter is optional, by default backup will be created in the same compartment and source volume group.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param expirationTime The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
         * 
         * @return builder
         * 
         */
        public Builder expirationTime(@Nullable Output<String> expirationTime) {
            $.expirationTime = expirationTime;
            return this;
        }

        /**
         * @param expirationTime The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
         * 
         * @return builder
         * 
         */
        public Builder expirationTime(String expirationTime) {
            return expirationTime(Output.of(expirationTime));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param sizeInGbs The aggregate size of the volume group backup, in GBs.
         * 
         * @return builder
         * 
         */
        public Builder sizeInGbs(@Nullable Output<String> sizeInGbs) {
            $.sizeInGbs = sizeInGbs;
            return this;
        }

        /**
         * @param sizeInGbs The aggregate size of the volume group backup, in GBs.
         * 
         * @return builder
         * 
         */
        public Builder sizeInGbs(String sizeInGbs) {
            return sizeInGbs(Output.of(sizeInGbs));
        }

        /**
         * @param sizeInMbs The aggregate size of the volume group backup, in MBs.
         * 
         * @return builder
         * 
         */
        public Builder sizeInMbs(@Nullable Output<String> sizeInMbs) {
            $.sizeInMbs = sizeInMbs;
            return this;
        }

        /**
         * @param sizeInMbs The aggregate size of the volume group backup, in MBs.
         * 
         * @return builder
         * 
         */
        public Builder sizeInMbs(String sizeInMbs) {
            return sizeInMbs(Output.of(sizeInMbs));
        }

        /**
         * @param sourceDetails Details of the volume group backup source in the cloud.
         * 
         * @return builder
         * 
         */
        public Builder sourceDetails(@Nullable Output<VolumeGroupBackupSourceDetailsArgs> sourceDetails) {
            $.sourceDetails = sourceDetails;
            return this;
        }

        /**
         * @param sourceDetails Details of the volume group backup source in the cloud.
         * 
         * @return builder
         * 
         */
        public Builder sourceDetails(VolumeGroupBackupSourceDetailsArgs sourceDetails) {
            return sourceDetails(Output.of(sourceDetails));
        }

        /**
         * @param sourceType Specifies whether the volume group backup was created manually, or via scheduled backup policy.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(@Nullable Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @param sourceType Specifies whether the volume group backup was created manually, or via scheduled backup policy.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        /**
         * @param sourceVolumeGroupBackupId The OCID of the source volume group backup.
         * 
         * @return builder
         * 
         */
        public Builder sourceVolumeGroupBackupId(@Nullable Output<String> sourceVolumeGroupBackupId) {
            $.sourceVolumeGroupBackupId = sourceVolumeGroupBackupId;
            return this;
        }

        /**
         * @param sourceVolumeGroupBackupId The OCID of the source volume group backup.
         * 
         * @return builder
         * 
         */
        public Builder sourceVolumeGroupBackupId(String sourceVolumeGroupBackupId) {
            return sourceVolumeGroupBackupId(Output.of(sourceVolumeGroupBackupId));
        }

        /**
         * @param state The current state of a volume group backup.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of a volume group backup.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeRequestReceived The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeRequestReceived(@Nullable Output<String> timeRequestReceived) {
            $.timeRequestReceived = timeRequestReceived;
            return this;
        }

        /**
         * @param timeRequestReceived The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeRequestReceived(String timeRequestReceived) {
            return timeRequestReceived(Output.of(timeRequestReceived));
        }

        /**
         * @param type The type of backup to create. If omitted, defaults to incremental.
         * * Allowed values are :
         * * FULL
         * * INCREMENTAL
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of backup to create. If omitted, defaults to incremental.
         * * Allowed values are :
         * * FULL
         * * INCREMENTAL
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param uniqueSizeInGbs The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `size_in_gbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
         * 
         * @return builder
         * 
         */
        public Builder uniqueSizeInGbs(@Nullable Output<String> uniqueSizeInGbs) {
            $.uniqueSizeInGbs = uniqueSizeInGbs;
            return this;
        }

        /**
         * @param uniqueSizeInGbs The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `size_in_gbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
         * 
         * @return builder
         * 
         */
        public Builder uniqueSizeInGbs(String uniqueSizeInGbs) {
            return uniqueSizeInGbs(Output.of(uniqueSizeInGbs));
        }

        /**
         * @param uniqueSizeInMbs The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `size_in_mbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
         * 
         * @return builder
         * 
         */
        public Builder uniqueSizeInMbs(@Nullable Output<String> uniqueSizeInMbs) {
            $.uniqueSizeInMbs = uniqueSizeInMbs;
            return this;
        }

        /**
         * @param uniqueSizeInMbs The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `size_in_mbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
         * 
         * @return builder
         * 
         */
        public Builder uniqueSizeInMbs(String uniqueSizeInMbs) {
            return uniqueSizeInMbs(Output.of(uniqueSizeInMbs));
        }

        /**
         * @param volumeBackupIds OCIDs for the volume backups in this volume group backup.
         * 
         * @return builder
         * 
         */
        public Builder volumeBackupIds(@Nullable Output<List<String>> volumeBackupIds) {
            $.volumeBackupIds = volumeBackupIds;
            return this;
        }

        /**
         * @param volumeBackupIds OCIDs for the volume backups in this volume group backup.
         * 
         * @return builder
         * 
         */
        public Builder volumeBackupIds(List<String> volumeBackupIds) {
            return volumeBackupIds(Output.of(volumeBackupIds));
        }

        /**
         * @param volumeBackupIds OCIDs for the volume backups in this volume group backup.
         * 
         * @return builder
         * 
         */
        public Builder volumeBackupIds(String... volumeBackupIds) {
            return volumeBackupIds(List.of(volumeBackupIds));
        }

        /**
         * @param volumeGroupId The OCID of the volume group that needs to be backed up.
         * 
         * @return builder
         * 
         */
        public Builder volumeGroupId(@Nullable Output<String> volumeGroupId) {
            $.volumeGroupId = volumeGroupId;
            return this;
        }

        /**
         * @param volumeGroupId The OCID of the volume group that needs to be backed up.
         * 
         * @return builder
         * 
         */
        public Builder volumeGroupId(String volumeGroupId) {
            return volumeGroupId(Output.of(volumeGroupId));
        }

        public VolumeGroupBackupState build() {
            return $;
        }
    }

}
