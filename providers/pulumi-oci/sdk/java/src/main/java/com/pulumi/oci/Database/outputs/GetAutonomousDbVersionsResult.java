// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetAutonomousDbVersionsAutonomousDbVersion;
import com.pulumi.oci.Database.outputs.GetAutonomousDbVersionsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAutonomousDbVersionsResult {
    /**
     * @return The list of autonomous_db_versions.
     * 
     */
    private final List<GetAutonomousDbVersionsAutonomousDbVersion> autonomousDbVersions;
    private final String compartmentId;
    /**
     * @return The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     */
    private final @Nullable String dbWorkload;
    private final @Nullable List<GetAutonomousDbVersionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;

    @CustomType.Constructor
    private GetAutonomousDbVersionsResult(
        @CustomType.Parameter("autonomousDbVersions") List<GetAutonomousDbVersionsAutonomousDbVersion> autonomousDbVersions,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("dbWorkload") @Nullable String dbWorkload,
        @CustomType.Parameter("filters") @Nullable List<GetAutonomousDbVersionsFilter> filters,
        @CustomType.Parameter("id") String id) {
        this.autonomousDbVersions = autonomousDbVersions;
        this.compartmentId = compartmentId;
        this.dbWorkload = dbWorkload;
        this.filters = filters;
        this.id = id;
    }

    /**
     * @return The list of autonomous_db_versions.
     * 
     */
    public List<GetAutonomousDbVersionsAutonomousDbVersion> autonomousDbVersions() {
        return this.autonomousDbVersions;
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     */
    public Optional<String> dbWorkload() {
        return Optional.ofNullable(this.dbWorkload);
    }
    public List<GetAutonomousDbVersionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDbVersionsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetAutonomousDbVersionsAutonomousDbVersion> autonomousDbVersions;
        private String compartmentId;
        private @Nullable String dbWorkload;
        private @Nullable List<GetAutonomousDbVersionsFilter> filters;
        private String id;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAutonomousDbVersionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousDbVersions = defaults.autonomousDbVersions;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbWorkload = defaults.dbWorkload;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
        }

        public Builder autonomousDbVersions(List<GetAutonomousDbVersionsAutonomousDbVersion> autonomousDbVersions) {
            this.autonomousDbVersions = Objects.requireNonNull(autonomousDbVersions);
            return this;
        }
        public Builder autonomousDbVersions(GetAutonomousDbVersionsAutonomousDbVersion... autonomousDbVersions) {
            return autonomousDbVersions(List.of(autonomousDbVersions));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder dbWorkload(@Nullable String dbWorkload) {
            this.dbWorkload = dbWorkload;
            return this;
        }
        public Builder filters(@Nullable List<GetAutonomousDbVersionsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetAutonomousDbVersionsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }        public GetAutonomousDbVersionsResult build() {
            return new GetAutonomousDbVersionsResult(autonomousDbVersions, compartmentId, dbWorkload, filters, id);
        }
    }
}
