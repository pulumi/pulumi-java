// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItemFormatEntry;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItem {
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The description of the format entry.
     * 
     */
    private final String description;
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    private final String displayName;
    /**
     * @return An array of format entries. The combined output of all the format entries is used for masking.
     * 
     */
    private final List<GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItemFormatEntry> formatEntries;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The OCID of the library masking format.
     * 
     */
    private final String id;
    /**
     * @return An array of OCIDs of the sensitive types compatible with the library masking format.
     * 
     */
    private final List<String> sensitiveTypeIds;
    /**
     * @return Specifies whether the library masking format is user-defined or predefined.
     * 
     */
    private final String source;
    /**
     * @return A filter to return only the resources that match the specified lifecycle states.
     * 
     */
    private final String state;
    /**
     * @return The date and time the library masking format was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     * 
     */
    private final String timeCreated;
    /**
     * @return The date and time the library masking format was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItem(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("formatEntries") List<GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItemFormatEntry> formatEntries,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("sensitiveTypeIds") List<String> sensitiveTypeIds,
        @CustomType.Parameter("source") String source,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.description = description;
        this.displayName = displayName;
        this.formatEntries = formatEntries;
        this.freeformTags = freeformTags;
        this.id = id;
        this.sensitiveTypeIds = sensitiveTypeIds;
        this.source = source;
        this.state = state;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the format entry.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return An array of format entries. The combined output of all the format entries is used for masking.
     * 
     */
    public List<GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItemFormatEntry> formatEntries() {
        return this.formatEntries;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the library masking format.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An array of OCIDs of the sensitive types compatible with the library masking format.
     * 
     */
    public List<String> sensitiveTypeIds() {
        return this.sensitiveTypeIds;
    }
    /**
     * @return Specifies whether the library masking format is user-defined or predefined.
     * 
     */
    public String source() {
        return this.source;
    }
    /**
     * @return A filter to return only the resources that match the specified lifecycle states.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the library masking format was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the library masking format was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339)
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private List<GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItemFormatEntry> formatEntries;
        private Map<String,Object> freeformTags;
        private String id;
        private List<String> sensitiveTypeIds;
        private String source;
        private String state;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.formatEntries = defaults.formatEntries;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.sensitiveTypeIds = defaults.sensitiveTypeIds;
    	      this.source = defaults.source;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder formatEntries(List<GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItemFormatEntry> formatEntries) {
            this.formatEntries = Objects.requireNonNull(formatEntries);
            return this;
        }
        public Builder formatEntries(GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItemFormatEntry... formatEntries) {
            return formatEntries(List.of(formatEntries));
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder sensitiveTypeIds(List<String> sensitiveTypeIds) {
            this.sensitiveTypeIds = Objects.requireNonNull(sensitiveTypeIds);
            return this;
        }
        public Builder sensitiveTypeIds(String... sensitiveTypeIds) {
            return sensitiveTypeIds(List.of(sensitiveTypeIds));
        }
        public Builder source(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItem build() {
            return new GetLibraryMaskingFormatsLibraryMaskingFormatCollectionItem(compartmentId, definedTags, description, displayName, formatEntries, freeformTags, id, sensitiveTypeIds, source, state, timeCreated, timeUpdated);
        }
    }
}
