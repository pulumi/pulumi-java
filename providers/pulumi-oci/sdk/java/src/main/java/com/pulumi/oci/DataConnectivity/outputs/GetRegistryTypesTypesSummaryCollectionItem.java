// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataConnectivity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataConnectivity.outputs.GetRegistryTypesTypesSummaryCollectionItemDataAssetAttribute;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRegistryTypesTypesSummaryCollectionItem {
    /**
     * @return Map of connectionType as key and List of attributes as value
     * 
     */
    private final Map<String,Object> connectionAttributes;
    /**
     * @return list of attributes for the dataAsset
     * 
     */
    private final List<GetRegistryTypesTypesSummaryCollectionItemDataAssetAttribute> dataAssetAttributes;
    private final @Nullable String description;
    private final String key;
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    private final String name;

    @CustomType.Constructor
    private GetRegistryTypesTypesSummaryCollectionItem(
        @CustomType.Parameter("connectionAttributes") Map<String,Object> connectionAttributes,
        @CustomType.Parameter("dataAssetAttributes") List<GetRegistryTypesTypesSummaryCollectionItemDataAssetAttribute> dataAssetAttributes,
        @CustomType.Parameter("description") @Nullable String description,
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("name") String name) {
        this.connectionAttributes = connectionAttributes;
        this.dataAssetAttributes = dataAssetAttributes;
        this.description = description;
        this.key = key;
        this.name = name;
    }

    /**
     * @return Map of connectionType as key and List of attributes as value
     * 
     */
    public Map<String,Object> connectionAttributes() {
        return this.connectionAttributes;
    }
    /**
     * @return list of attributes for the dataAsset
     * 
     */
    public List<GetRegistryTypesTypesSummaryCollectionItemDataAssetAttribute> dataAssetAttributes() {
        return this.dataAssetAttributes;
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public String key() {
        return this.key;
    }
    /**
     * @return Used to filter by the name of the object.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegistryTypesTypesSummaryCollectionItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Map<String,Object> connectionAttributes;
        private List<GetRegistryTypesTypesSummaryCollectionItemDataAssetAttribute> dataAssetAttributes;
        private @Nullable String description;
        private String key;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRegistryTypesTypesSummaryCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionAttributes = defaults.connectionAttributes;
    	      this.dataAssetAttributes = defaults.dataAssetAttributes;
    	      this.description = defaults.description;
    	      this.key = defaults.key;
    	      this.name = defaults.name;
        }

        public Builder connectionAttributes(Map<String,Object> connectionAttributes) {
            this.connectionAttributes = Objects.requireNonNull(connectionAttributes);
            return this;
        }
        public Builder dataAssetAttributes(List<GetRegistryTypesTypesSummaryCollectionItemDataAssetAttribute> dataAssetAttributes) {
            this.dataAssetAttributes = Objects.requireNonNull(dataAssetAttributes);
            return this;
        }
        public Builder dataAssetAttributes(GetRegistryTypesTypesSummaryCollectionItemDataAssetAttribute... dataAssetAttributes) {
            return dataAssetAttributes(List.of(dataAssetAttributes));
        }
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public GetRegistryTypesTypesSummaryCollectionItem build() {
            return new GetRegistryTypesTypesSummaryCollectionItem(connectionAttributes, dataAssetAttributes, description, key, name);
        }
    }
}
