// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs extends com.pulumi.resources.ResourceArgs {

    public static final UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs Empty = new UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs();

    /**
     * (Updatable) Process value using the specified format. This is available only when time_type is a string.
     * 
     */
    @Import(name="fieldTimeFormat")
    private @Nullable Output<String> fieldTimeFormat;

    /**
     * @return (Updatable) Process value using the specified format. This is available only when time_type is a string.
     * 
     */
    public Optional<Output<String>> fieldTimeFormat() {
        return Optional.ofNullable(this.fieldTimeFormat);
    }

    /**
     * (Updatable) Specify the time field for the event time. If the event doesn&#39;t have this field, the current time is used.
     * 
     */
    @Import(name="fieldTimeKey")
    private @Nullable Output<String> fieldTimeKey;

    /**
     * @return (Updatable) Specify the time field for the event time. If the event doesn&#39;t have this field, the current time is used.
     * 
     */
    public Optional<Output<String>> fieldTimeKey() {
        return Optional.ofNullable(this.fieldTimeKey);
    }

    /**
     * (Updatable) Use the specified time zone. The time value can be parsed or formatted in the specified time zone.
     * 
     */
    @Import(name="fieldTimeZone")
    private @Nullable Output<String> fieldTimeZone;

    /**
     * @return (Updatable) Use the specified time zone. The time value can be parsed or formatted in the specified time zone.
     * 
     */
    public Optional<Output<String>> fieldTimeZone() {
        return Optional.ofNullable(this.fieldTimeZone);
    }

    /**
     * (Updatable) The name key to tag this grok pattern.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) The name key to tag this grok pattern.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) The grok pattern.
     * 
     */
    @Import(name="pattern")
    private @Nullable Output<String> pattern;

    /**
     * @return (Updatable) The grok pattern.
     * 
     */
    public Optional<Output<String>> pattern() {
        return Optional.ofNullable(this.pattern);
    }

    private UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs() {}

    private UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs(UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs $) {
        this.fieldTimeFormat = $.fieldTimeFormat;
        this.fieldTimeKey = $.fieldTimeKey;
        this.fieldTimeZone = $.fieldTimeZone;
        this.name = $.name;
        this.pattern = $.pattern;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs $;

        public Builder() {
            $ = new UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs();
        }

        public Builder(UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs defaults) {
            $ = new UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param fieldTimeFormat (Updatable) Process value using the specified format. This is available only when time_type is a string.
         * 
         * @return builder
         * 
         */
        public Builder fieldTimeFormat(@Nullable Output<String> fieldTimeFormat) {
            $.fieldTimeFormat = fieldTimeFormat;
            return this;
        }

        /**
         * @param fieldTimeFormat (Updatable) Process value using the specified format. This is available only when time_type is a string.
         * 
         * @return builder
         * 
         */
        public Builder fieldTimeFormat(String fieldTimeFormat) {
            return fieldTimeFormat(Output.of(fieldTimeFormat));
        }

        /**
         * @param fieldTimeKey (Updatable) Specify the time field for the event time. If the event doesn&#39;t have this field, the current time is used.
         * 
         * @return builder
         * 
         */
        public Builder fieldTimeKey(@Nullable Output<String> fieldTimeKey) {
            $.fieldTimeKey = fieldTimeKey;
            return this;
        }

        /**
         * @param fieldTimeKey (Updatable) Specify the time field for the event time. If the event doesn&#39;t have this field, the current time is used.
         * 
         * @return builder
         * 
         */
        public Builder fieldTimeKey(String fieldTimeKey) {
            return fieldTimeKey(Output.of(fieldTimeKey));
        }

        /**
         * @param fieldTimeZone (Updatable) Use the specified time zone. The time value can be parsed or formatted in the specified time zone.
         * 
         * @return builder
         * 
         */
        public Builder fieldTimeZone(@Nullable Output<String> fieldTimeZone) {
            $.fieldTimeZone = fieldTimeZone;
            return this;
        }

        /**
         * @param fieldTimeZone (Updatable) Use the specified time zone. The time value can be parsed or formatted in the specified time zone.
         * 
         * @return builder
         * 
         */
        public Builder fieldTimeZone(String fieldTimeZone) {
            return fieldTimeZone(Output.of(fieldTimeZone));
        }

        /**
         * @param name (Updatable) The name key to tag this grok pattern.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) The name key to tag this grok pattern.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param pattern (Updatable) The grok pattern.
         * 
         * @return builder
         * 
         */
        public Builder pattern(@Nullable Output<String> pattern) {
            $.pattern = pattern;
            return this;
        }

        /**
         * @param pattern (Updatable) The grok pattern.
         * 
         * @return builder
         * 
         */
        public Builder pattern(String pattern) {
            return pattern(Output.of(pattern));
        }

        public UnifiedAgentConfigurationServiceConfigurationSourceParserPatternArgs build() {
            return $;
        }
    }

}
