// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseTools.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseTools.inputs.DatabaseToolsConnectionKeyStoreKeyStoreContentArgs;
import com.pulumi.oci.DatabaseTools.inputs.DatabaseToolsConnectionKeyStoreKeyStorePasswordArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseToolsConnectionKeyStoreArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseToolsConnectionKeyStoreArgs Empty = new DatabaseToolsConnectionKeyStoreArgs();

    /**
     * (Updatable) The key store content.
     * 
     */
    @Import(name="keyStoreContent")
    private @Nullable Output<DatabaseToolsConnectionKeyStoreKeyStoreContentArgs> keyStoreContent;

    /**
     * @return (Updatable) The key store content.
     * 
     */
    public Optional<Output<DatabaseToolsConnectionKeyStoreKeyStoreContentArgs>> keyStoreContent() {
        return Optional.ofNullable(this.keyStoreContent);
    }

    /**
     * (Updatable) The key store password.
     * 
     */
    @Import(name="keyStorePassword")
    private @Nullable Output<DatabaseToolsConnectionKeyStoreKeyStorePasswordArgs> keyStorePassword;

    /**
     * @return (Updatable) The key store password.
     * 
     */
    public Optional<Output<DatabaseToolsConnectionKeyStoreKeyStorePasswordArgs>> keyStorePassword() {
        return Optional.ofNullable(this.keyStorePassword);
    }

    /**
     * (Updatable) The key store type.
     * 
     */
    @Import(name="keyStoreType")
    private @Nullable Output<String> keyStoreType;

    /**
     * @return (Updatable) The key store type.
     * 
     */
    public Optional<Output<String>> keyStoreType() {
        return Optional.ofNullable(this.keyStoreType);
    }

    private DatabaseToolsConnectionKeyStoreArgs() {}

    private DatabaseToolsConnectionKeyStoreArgs(DatabaseToolsConnectionKeyStoreArgs $) {
        this.keyStoreContent = $.keyStoreContent;
        this.keyStorePassword = $.keyStorePassword;
        this.keyStoreType = $.keyStoreType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseToolsConnectionKeyStoreArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseToolsConnectionKeyStoreArgs $;

        public Builder() {
            $ = new DatabaseToolsConnectionKeyStoreArgs();
        }

        public Builder(DatabaseToolsConnectionKeyStoreArgs defaults) {
            $ = new DatabaseToolsConnectionKeyStoreArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param keyStoreContent (Updatable) The key store content.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreContent(@Nullable Output<DatabaseToolsConnectionKeyStoreKeyStoreContentArgs> keyStoreContent) {
            $.keyStoreContent = keyStoreContent;
            return this;
        }

        /**
         * @param keyStoreContent (Updatable) The key store content.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreContent(DatabaseToolsConnectionKeyStoreKeyStoreContentArgs keyStoreContent) {
            return keyStoreContent(Output.of(keyStoreContent));
        }

        /**
         * @param keyStorePassword (Updatable) The key store password.
         * 
         * @return builder
         * 
         */
        public Builder keyStorePassword(@Nullable Output<DatabaseToolsConnectionKeyStoreKeyStorePasswordArgs> keyStorePassword) {
            $.keyStorePassword = keyStorePassword;
            return this;
        }

        /**
         * @param keyStorePassword (Updatable) The key store password.
         * 
         * @return builder
         * 
         */
        public Builder keyStorePassword(DatabaseToolsConnectionKeyStoreKeyStorePasswordArgs keyStorePassword) {
            return keyStorePassword(Output.of(keyStorePassword));
        }

        /**
         * @param keyStoreType (Updatable) The key store type.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreType(@Nullable Output<String> keyStoreType) {
            $.keyStoreType = keyStoreType;
            return this;
        }

        /**
         * @param keyStoreType (Updatable) The key store type.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreType(String keyStoreType) {
            return keyStoreType(Output.of(keyStoreType));
        }

        public DatabaseToolsConnectionKeyStoreArgs build() {
            return $;
        }
    }

}
