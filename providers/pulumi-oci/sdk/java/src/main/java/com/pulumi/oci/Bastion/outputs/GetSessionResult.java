// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Bastion.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Bastion.outputs.GetSessionKeyDetail;
import com.pulumi.oci.Bastion.outputs.GetSessionTargetResourceDetail;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetSessionResult {
    /**
     * @return The unique identifier (OCID) of the bastion that is hosting this session.
     * 
     */
    private final String bastionId;
    /**
     * @return The name of the bastion that is hosting this session.
     * 
     */
    private final String bastionName;
    /**
     * @return The public key of the bastion host. You can use this to verify that you&#39;re connecting to the correct bastion.
     * 
     */
    private final String bastionPublicHostKeyInfo;
    /**
     * @return The username that the session uses to connect to the target resource.
     * 
     */
    private final String bastionUserName;
    /**
     * @return The name of the session.
     * 
     */
    private final String displayName;
    /**
     * @return The unique identifier (OCID) of the session, which can&#39;t be changed after creation.
     * 
     */
    private final String id;
    /**
     * @return Public key details for a bastion session.
     * 
     */
    private final List<GetSessionKeyDetail> keyDetails;
    /**
     * @return The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
     * 
     */
    private final String keyType;
    /**
     * @return A message describing the current session state in more detail.
     * 
     */
    private final String lifecycleDetails;
    private final String sessionId;
    /**
     * @return The amount of time the session can remain active.
     * 
     */
    private final Integer sessionTtlInSeconds;
    /**
     * @return The connection message for the session.
     * 
     */
    private final Map<String,Object> sshMetadata;
    /**
     * @return The current state of the session.
     * 
     */
    private final String state;
    /**
     * @return Details about a bastion session&#39;s target resource.
     * 
     */
    private final List<GetSessionTargetResourceDetail> targetResourceDetails;
    /**
     * @return The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetSessionResult(
        @CustomType.Parameter("bastionId") String bastionId,
        @CustomType.Parameter("bastionName") String bastionName,
        @CustomType.Parameter("bastionPublicHostKeyInfo") String bastionPublicHostKeyInfo,
        @CustomType.Parameter("bastionUserName") String bastionUserName,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("keyDetails") List<GetSessionKeyDetail> keyDetails,
        @CustomType.Parameter("keyType") String keyType,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("sessionId") String sessionId,
        @CustomType.Parameter("sessionTtlInSeconds") Integer sessionTtlInSeconds,
        @CustomType.Parameter("sshMetadata") Map<String,Object> sshMetadata,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("targetResourceDetails") List<GetSessionTargetResourceDetail> targetResourceDetails,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.bastionId = bastionId;
        this.bastionName = bastionName;
        this.bastionPublicHostKeyInfo = bastionPublicHostKeyInfo;
        this.bastionUserName = bastionUserName;
        this.displayName = displayName;
        this.id = id;
        this.keyDetails = keyDetails;
        this.keyType = keyType;
        this.lifecycleDetails = lifecycleDetails;
        this.sessionId = sessionId;
        this.sessionTtlInSeconds = sessionTtlInSeconds;
        this.sshMetadata = sshMetadata;
        this.state = state;
        this.targetResourceDetails = targetResourceDetails;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return The unique identifier (OCID) of the bastion that is hosting this session.
     * 
     */
    public String bastionId() {
        return this.bastionId;
    }
    /**
     * @return The name of the bastion that is hosting this session.
     * 
     */
    public String bastionName() {
        return this.bastionName;
    }
    /**
     * @return The public key of the bastion host. You can use this to verify that you&#39;re connecting to the correct bastion.
     * 
     */
    public String bastionPublicHostKeyInfo() {
        return this.bastionPublicHostKeyInfo;
    }
    /**
     * @return The username that the session uses to connect to the target resource.
     * 
     */
    public String bastionUserName() {
        return this.bastionUserName;
    }
    /**
     * @return The name of the session.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The unique identifier (OCID) of the session, which can&#39;t be changed after creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Public key details for a bastion session.
     * 
     */
    public List<GetSessionKeyDetail> keyDetails() {
        return this.keyDetails;
    }
    /**
     * @return The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
     * 
     */
    public String keyType() {
        return this.keyType;
    }
    /**
     * @return A message describing the current session state in more detail.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public String sessionId() {
        return this.sessionId;
    }
    /**
     * @return The amount of time the session can remain active.
     * 
     */
    public Integer sessionTtlInSeconds() {
        return this.sessionTtlInSeconds;
    }
    /**
     * @return The connection message for the session.
     * 
     */
    public Map<String,Object> sshMetadata() {
        return this.sshMetadata;
    }
    /**
     * @return The current state of the session.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Details about a bastion session&#39;s target resource.
     * 
     */
    public List<GetSessionTargetResourceDetail> targetResourceDetails() {
        return this.targetResourceDetails;
    }
    /**
     * @return The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSessionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bastionId;
        private String bastionName;
        private String bastionPublicHostKeyInfo;
        private String bastionUserName;
        private String displayName;
        private String id;
        private List<GetSessionKeyDetail> keyDetails;
        private String keyType;
        private String lifecycleDetails;
        private String sessionId;
        private Integer sessionTtlInSeconds;
        private Map<String,Object> sshMetadata;
        private String state;
        private List<GetSessionTargetResourceDetail> targetResourceDetails;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSessionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bastionId = defaults.bastionId;
    	      this.bastionName = defaults.bastionName;
    	      this.bastionPublicHostKeyInfo = defaults.bastionPublicHostKeyInfo;
    	      this.bastionUserName = defaults.bastionUserName;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.keyDetails = defaults.keyDetails;
    	      this.keyType = defaults.keyType;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.sessionId = defaults.sessionId;
    	      this.sessionTtlInSeconds = defaults.sessionTtlInSeconds;
    	      this.sshMetadata = defaults.sshMetadata;
    	      this.state = defaults.state;
    	      this.targetResourceDetails = defaults.targetResourceDetails;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder bastionId(String bastionId) {
            this.bastionId = Objects.requireNonNull(bastionId);
            return this;
        }
        public Builder bastionName(String bastionName) {
            this.bastionName = Objects.requireNonNull(bastionName);
            return this;
        }
        public Builder bastionPublicHostKeyInfo(String bastionPublicHostKeyInfo) {
            this.bastionPublicHostKeyInfo = Objects.requireNonNull(bastionPublicHostKeyInfo);
            return this;
        }
        public Builder bastionUserName(String bastionUserName) {
            this.bastionUserName = Objects.requireNonNull(bastionUserName);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder keyDetails(List<GetSessionKeyDetail> keyDetails) {
            this.keyDetails = Objects.requireNonNull(keyDetails);
            return this;
        }
        public Builder keyDetails(GetSessionKeyDetail... keyDetails) {
            return keyDetails(List.of(keyDetails));
        }
        public Builder keyType(String keyType) {
            this.keyType = Objects.requireNonNull(keyType);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder sessionId(String sessionId) {
            this.sessionId = Objects.requireNonNull(sessionId);
            return this;
        }
        public Builder sessionTtlInSeconds(Integer sessionTtlInSeconds) {
            this.sessionTtlInSeconds = Objects.requireNonNull(sessionTtlInSeconds);
            return this;
        }
        public Builder sshMetadata(Map<String,Object> sshMetadata) {
            this.sshMetadata = Objects.requireNonNull(sshMetadata);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder targetResourceDetails(List<GetSessionTargetResourceDetail> targetResourceDetails) {
            this.targetResourceDetails = Objects.requireNonNull(targetResourceDetails);
            return this;
        }
        public Builder targetResourceDetails(GetSessionTargetResourceDetail... targetResourceDetails) {
            return targetResourceDetails(List.of(targetResourceDetails));
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetSessionResult build() {
            return new GetSessionResult(bastionId, bastionName, bastionPublicHostKeyInfo, bastionUserName, displayName, id, keyDetails, keyType, lifecycleDetails, sessionId, sessionTtlInSeconds, sshMetadata, state, targetResourceDetails, timeCreated, timeUpdated);
        }
    }
}
