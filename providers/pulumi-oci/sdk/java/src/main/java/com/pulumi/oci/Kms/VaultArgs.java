// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Kms.inputs.VaultRestoreFromFileArgs;
import com.pulumi.oci.Kms.inputs.VaultRestoreFromObjectStoreArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VaultArgs extends com.pulumi.resources.ResourceArgs {

    public static final VaultArgs Empty = new VaultArgs();

    /**
     * (Updatable) The OCID of the compartment where you want to create this vault.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment where you want to create this vault.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Details where vault was backed up.
     * 
     */
    @Import(name="restoreFromFile")
    private @Nullable Output<VaultRestoreFromFileArgs> restoreFromFile;

    /**
     * @return (Updatable) Details where vault was backed up.
     * 
     */
    public Optional<Output<VaultRestoreFromFileArgs>> restoreFromFile() {
        return Optional.ofNullable(this.restoreFromFile);
    }

    /**
     * (Updatable) Details where vault was backed up
     * 
     */
    @Import(name="restoreFromObjectStore")
    private @Nullable Output<VaultRestoreFromObjectStoreArgs> restoreFromObjectStore;

    /**
     * @return (Updatable) Details where vault was backed up
     * 
     */
    public Optional<Output<VaultRestoreFromObjectStoreArgs>> restoreFromObjectStore() {
        return Optional.ofNullable(this.restoreFromObjectStore);
    }

    @Import(name="restoreTrigger")
    private @Nullable Output<Boolean> restoreTrigger;

    public Optional<Output<Boolean>> restoreTrigger() {
        return Optional.ofNullable(this.restoreTrigger);
    }

    /**
     * (Updatable) An optional property for the deletion time of the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    @Import(name="timeOfDeletion")
    private @Nullable Output<String> timeOfDeletion;

    /**
     * @return (Updatable) An optional property for the deletion time of the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeOfDeletion() {
        return Optional.ofNullable(this.timeOfDeletion);
    }

    /**
     * The type of vault to create. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
     * 
     */
    @Import(name="vaultType", required=true)
    private Output<String> vaultType;

    /**
     * @return The type of vault to create. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
     * 
     */
    public Output<String> vaultType() {
        return this.vaultType;
    }

    private VaultArgs() {}

    private VaultArgs(VaultArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.restoreFromFile = $.restoreFromFile;
        this.restoreFromObjectStore = $.restoreFromObjectStore;
        this.restoreTrigger = $.restoreTrigger;
        this.timeOfDeletion = $.timeOfDeletion;
        this.vaultType = $.vaultType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VaultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VaultArgs $;

        public Builder() {
            $ = new VaultArgs();
        }

        public Builder(VaultArgs defaults) {
            $ = new VaultArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment where you want to create this vault.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment where you want to create this vault.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name for the vault. It does not have to be unique, and it is changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param restoreFromFile (Updatable) Details where vault was backed up.
         * 
         * @return builder
         * 
         */
        public Builder restoreFromFile(@Nullable Output<VaultRestoreFromFileArgs> restoreFromFile) {
            $.restoreFromFile = restoreFromFile;
            return this;
        }

        /**
         * @param restoreFromFile (Updatable) Details where vault was backed up.
         * 
         * @return builder
         * 
         */
        public Builder restoreFromFile(VaultRestoreFromFileArgs restoreFromFile) {
            return restoreFromFile(Output.of(restoreFromFile));
        }

        /**
         * @param restoreFromObjectStore (Updatable) Details where vault was backed up
         * 
         * @return builder
         * 
         */
        public Builder restoreFromObjectStore(@Nullable Output<VaultRestoreFromObjectStoreArgs> restoreFromObjectStore) {
            $.restoreFromObjectStore = restoreFromObjectStore;
            return this;
        }

        /**
         * @param restoreFromObjectStore (Updatable) Details where vault was backed up
         * 
         * @return builder
         * 
         */
        public Builder restoreFromObjectStore(VaultRestoreFromObjectStoreArgs restoreFromObjectStore) {
            return restoreFromObjectStore(Output.of(restoreFromObjectStore));
        }

        public Builder restoreTrigger(@Nullable Output<Boolean> restoreTrigger) {
            $.restoreTrigger = restoreTrigger;
            return this;
        }

        public Builder restoreTrigger(Boolean restoreTrigger) {
            return restoreTrigger(Output.of(restoreTrigger));
        }

        /**
         * @param timeOfDeletion (Updatable) An optional property for the deletion time of the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeOfDeletion(@Nullable Output<String> timeOfDeletion) {
            $.timeOfDeletion = timeOfDeletion;
            return this;
        }

        /**
         * @param timeOfDeletion (Updatable) An optional property for the deletion time of the vault, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeOfDeletion(String timeOfDeletion) {
            return timeOfDeletion(Output.of(timeOfDeletion));
        }

        /**
         * @param vaultType The type of vault to create. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
         * 
         * @return builder
         * 
         */
        public Builder vaultType(Output<String> vaultType) {
            $.vaultType = vaultType;
            return this;
        }

        /**
         * @param vaultType The type of vault to create. Each type of vault stores the key with different degrees of isolation and has different options and pricing.
         * 
         * @return builder
         * 
         */
        public Builder vaultType(String vaultType) {
            return vaultType(Output.of(vaultType));
        }

        public VaultArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.vaultType = Objects.requireNonNull($.vaultType, "expected parameter 'vaultType' to be non-null");
            return $;
        }
    }

}
