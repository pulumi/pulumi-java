// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetObjectHeadResult {
    private final String archivalState;
    private final String bucket;
    /**
     * @return The content-length of the object
     * 
     */
    private final Integer contentLength;
    /**
     * @return The content-type of the object
     * 
     */
    private final String contentType;
    /**
     * @return The etag of the object
     * 
     */
    private final String etag;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The metadata of the object
     * 
     */
    private final Map<String,Object> metadata;
    private final String namespace;
    private final String object;
    /**
     * @return The storage tier that the object is stored in.
     * * `archival-state` - Archival state of an object. This field is set only for objects in Archive tier.
     * 
     */
    private final String storageTier;

    @CustomType.Constructor
    private GetObjectHeadResult(
        @CustomType.Parameter("archivalState") String archivalState,
        @CustomType.Parameter("bucket") String bucket,
        @CustomType.Parameter("contentLength") Integer contentLength,
        @CustomType.Parameter("contentType") String contentType,
        @CustomType.Parameter("etag") String etag,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("metadata") Map<String,Object> metadata,
        @CustomType.Parameter("namespace") String namespace,
        @CustomType.Parameter("object") String object,
        @CustomType.Parameter("storageTier") String storageTier) {
        this.archivalState = archivalState;
        this.bucket = bucket;
        this.contentLength = contentLength;
        this.contentType = contentType;
        this.etag = etag;
        this.id = id;
        this.metadata = metadata;
        this.namespace = namespace;
        this.object = object;
        this.storageTier = storageTier;
    }

    public String archivalState() {
        return this.archivalState;
    }
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The content-length of the object
     * 
     */
    public Integer contentLength() {
        return this.contentLength;
    }
    /**
     * @return The content-type of the object
     * 
     */
    public String contentType() {
        return this.contentType;
    }
    /**
     * @return The etag of the object
     * 
     */
    public String etag() {
        return this.etag;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The metadata of the object
     * 
     */
    public Map<String,Object> metadata() {
        return this.metadata;
    }
    public String namespace() {
        return this.namespace;
    }
    public String object() {
        return this.object;
    }
    /**
     * @return The storage tier that the object is stored in.
     * * `archival-state` - Archival state of an object. This field is set only for objects in Archive tier.
     * 
     */
    public String storageTier() {
        return this.storageTier;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetObjectHeadResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String archivalState;
        private String bucket;
        private Integer contentLength;
        private String contentType;
        private String etag;
        private String id;
        private Map<String,Object> metadata;
        private String namespace;
        private String object;
        private String storageTier;

        public Builder() {
    	      // Empty
        }

        public Builder(GetObjectHeadResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archivalState = defaults.archivalState;
    	      this.bucket = defaults.bucket;
    	      this.contentLength = defaults.contentLength;
    	      this.contentType = defaults.contentType;
    	      this.etag = defaults.etag;
    	      this.id = defaults.id;
    	      this.metadata = defaults.metadata;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.storageTier = defaults.storageTier;
        }

        public Builder archivalState(String archivalState) {
            this.archivalState = Objects.requireNonNull(archivalState);
            return this;
        }
        public Builder bucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        public Builder contentLength(Integer contentLength) {
            this.contentLength = Objects.requireNonNull(contentLength);
            return this;
        }
        public Builder contentType(String contentType) {
            this.contentType = Objects.requireNonNull(contentType);
            return this;
        }
        public Builder etag(String etag) {
            this.etag = Objects.requireNonNull(etag);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder metadata(Map<String,Object> metadata) {
            this.metadata = Objects.requireNonNull(metadata);
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        public Builder object(String object) {
            this.object = Objects.requireNonNull(object);
            return this;
        }
        public Builder storageTier(String storageTier) {
            this.storageTier = Objects.requireNonNull(storageTier);
            return this;
        }        public GetObjectHeadResult build() {
            return new GetObjectHeadResult(archivalState, bucket, contentLength, contentType, etag, id, metadata, namespace, object, storageTier);
        }
    }
}
