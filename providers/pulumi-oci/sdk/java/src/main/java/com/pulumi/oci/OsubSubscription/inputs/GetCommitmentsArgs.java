// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubSubscription.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsubSubscription.inputs.GetCommitmentsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCommitmentsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCommitmentsArgs Empty = new GetCommitmentsArgs();

    /**
     * The OCID of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetCommitmentsFilterArgs>> filters;

    public Optional<Output<List<GetCommitmentsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * This param is used to get the commitments for a particular subscribed service
     * 
     */
    @Import(name="subscribedServiceId", required=true)
    private Output<String> subscribedServiceId;

    /**
     * @return This param is used to get the commitments for a particular subscribed service
     * 
     */
    public Output<String> subscribedServiceId() {
        return this.subscribedServiceId;
    }

    /**
     * This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
     * 
     */
    @Import(name="xOneGatewaySubscriptionId")
    private @Nullable Output<String> xOneGatewaySubscriptionId;

    /**
     * @return This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
     * 
     */
    public Optional<Output<String>> xOneGatewaySubscriptionId() {
        return Optional.ofNullable(this.xOneGatewaySubscriptionId);
    }

    /**
     * The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
     * 
     */
    @Import(name="xOneOriginRegion")
    private @Nullable Output<String> xOneOriginRegion;

    /**
     * @return The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
     * 
     */
    public Optional<Output<String>> xOneOriginRegion() {
        return Optional.ofNullable(this.xOneOriginRegion);
    }

    private GetCommitmentsArgs() {}

    private GetCommitmentsArgs(GetCommitmentsArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.subscribedServiceId = $.subscribedServiceId;
        this.xOneGatewaySubscriptionId = $.xOneGatewaySubscriptionId;
        this.xOneOriginRegion = $.xOneOriginRegion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCommitmentsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCommitmentsArgs $;

        public Builder() {
            $ = new GetCommitmentsArgs();
        }

        public Builder(GetCommitmentsArgs defaults) {
            $ = new GetCommitmentsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(@Nullable Output<List<GetCommitmentsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetCommitmentsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetCommitmentsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param subscribedServiceId This param is used to get the commitments for a particular subscribed service
         * 
         * @return builder
         * 
         */
        public Builder subscribedServiceId(Output<String> subscribedServiceId) {
            $.subscribedServiceId = subscribedServiceId;
            return this;
        }

        /**
         * @param subscribedServiceId This param is used to get the commitments for a particular subscribed service
         * 
         * @return builder
         * 
         */
        public Builder subscribedServiceId(String subscribedServiceId) {
            return subscribedServiceId(Output.of(subscribedServiceId));
        }

        /**
         * @param xOneGatewaySubscriptionId This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
         * 
         * @return builder
         * 
         */
        public Builder xOneGatewaySubscriptionId(@Nullable Output<String> xOneGatewaySubscriptionId) {
            $.xOneGatewaySubscriptionId = xOneGatewaySubscriptionId;
            return this;
        }

        /**
         * @param xOneGatewaySubscriptionId This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
         * 
         * @return builder
         * 
         */
        public Builder xOneGatewaySubscriptionId(String xOneGatewaySubscriptionId) {
            return xOneGatewaySubscriptionId(Output.of(xOneGatewaySubscriptionId));
        }

        /**
         * @param xOneOriginRegion The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
         * 
         * @return builder
         * 
         */
        public Builder xOneOriginRegion(@Nullable Output<String> xOneOriginRegion) {
            $.xOneOriginRegion = xOneOriginRegion;
            return this;
        }

        /**
         * @param xOneOriginRegion The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
         * 
         * @return builder
         * 
         */
        public Builder xOneOriginRegion(String xOneOriginRegion) {
            return xOneOriginRegion(Output.of(xOneOriginRegion));
        }

        public GetCommitmentsArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.subscribedServiceId = Objects.requireNonNull($.subscribedServiceId, "expected parameter 'subscribedServiceId' to be non-null");
            return $;
        }
    }

}
