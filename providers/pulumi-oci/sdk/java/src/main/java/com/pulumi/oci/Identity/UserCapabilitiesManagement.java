// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Identity.UserCapabilitiesManagementArgs;
import com.pulumi.oci.Identity.inputs.UserCapabilitiesManagementState;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource provides the User Capabilities Management resource in Oracle Cloud Infrastructure Identity service.
 * 
 * Manages the capabilities of the specified user.
 * 
 * **Important:** Deleting the User Capabilities Management leaves the User resource in its existing state (rather than returning to its defaults)
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Users can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Identity/userCapabilitiesManagement:UserCapabilitiesManagement test_user_capabilities_management &#34;capabilities/{userId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Identity/userCapabilitiesManagement:UserCapabilitiesManagement")
public class UserCapabilitiesManagement extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) Indicates if the user can use API keys.
     * 
     */
    @Export(name="canUseApiKeys", type=Boolean.class, parameters={})
    private Output<Boolean> canUseApiKeys;

    /**
     * @return (Updatable) Indicates if the user can use API keys.
     * 
     */
    public Output<Boolean> canUseApiKeys() {
        return this.canUseApiKeys;
    }
    /**
     * (Updatable) Indicates if the user can use SWIFT passwords / auth tokens.
     * 
     */
    @Export(name="canUseAuthTokens", type=Boolean.class, parameters={})
    private Output<Boolean> canUseAuthTokens;

    /**
     * @return (Updatable) Indicates if the user can use SWIFT passwords / auth tokens.
     * 
     */
    public Output<Boolean> canUseAuthTokens() {
        return this.canUseAuthTokens;
    }
    /**
     * (Updatable) Indicates if the user can log in to the console.
     * 
     */
    @Export(name="canUseConsolePassword", type=Boolean.class, parameters={})
    private Output<Boolean> canUseConsolePassword;

    /**
     * @return (Updatable) Indicates if the user can log in to the console.
     * 
     */
    public Output<Boolean> canUseConsolePassword() {
        return this.canUseConsolePassword;
    }
    /**
     * (Updatable) Indicates if the user can use SigV4 symmetric keys.
     * 
     */
    @Export(name="canUseCustomerSecretKeys", type=Boolean.class, parameters={})
    private Output<Boolean> canUseCustomerSecretKeys;

    /**
     * @return (Updatable) Indicates if the user can use SigV4 symmetric keys.
     * 
     */
    public Output<Boolean> canUseCustomerSecretKeys() {
        return this.canUseCustomerSecretKeys;
    }
    /**
     * (Updatable) Indicates if the user can use SMTP passwords.
     * 
     */
    @Export(name="canUseSmtpCredentials", type=Boolean.class, parameters={})
    private Output<Boolean> canUseSmtpCredentials;

    /**
     * @return (Updatable) Indicates if the user can use SMTP passwords.
     * 
     */
    public Output<Boolean> canUseSmtpCredentials() {
        return this.canUseSmtpCredentials;
    }
    /**
     * The OCID of the user.
     * 
     */
    @Export(name="userId", type=String.class, parameters={})
    private Output<String> userId;

    /**
     * @return The OCID of the user.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public UserCapabilitiesManagement(String name) {
        this(name, UserCapabilitiesManagementArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public UserCapabilitiesManagement(String name, UserCapabilitiesManagementArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public UserCapabilitiesManagement(String name, UserCapabilitiesManagementArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Identity/userCapabilitiesManagement:UserCapabilitiesManagement", name, args == null ? UserCapabilitiesManagementArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private UserCapabilitiesManagement(String name, Output<String> id, @Nullable UserCapabilitiesManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Identity/userCapabilitiesManagement:UserCapabilitiesManagement", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static UserCapabilitiesManagement get(String name, Output<String> id, @Nullable UserCapabilitiesManagementState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new UserCapabilitiesManagement(name, id, state, options);
    }
}
