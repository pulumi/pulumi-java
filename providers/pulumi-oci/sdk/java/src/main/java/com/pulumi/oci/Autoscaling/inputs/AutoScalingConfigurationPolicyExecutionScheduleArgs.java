// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Autoscaling.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class AutoScalingConfigurationPolicyExecutionScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoScalingConfigurationPolicyExecutionScheduleArgs Empty = new AutoScalingConfigurationPolicyExecutionScheduleArgs();

    /**
     * A cron expression that represents the time at which to execute the autoscaling policy.
     * 
     */
    @Import(name="expression", required=true)
    private Output<String> expression;

    /**
     * @return A cron expression that represents the time at which to execute the autoscaling policy.
     * 
     */
    public Output<String> expression() {
        return this.expression;
    }

    /**
     * The time zone for the execution schedule.
     * 
     */
    @Import(name="timezone", required=true)
    private Output<String> timezone;

    /**
     * @return The time zone for the execution schedule.
     * 
     */
    public Output<String> timezone() {
        return this.timezone;
    }

    /**
     * The type of action to take.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The type of action to take.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AutoScalingConfigurationPolicyExecutionScheduleArgs() {}

    private AutoScalingConfigurationPolicyExecutionScheduleArgs(AutoScalingConfigurationPolicyExecutionScheduleArgs $) {
        this.expression = $.expression;
        this.timezone = $.timezone;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoScalingConfigurationPolicyExecutionScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoScalingConfigurationPolicyExecutionScheduleArgs $;

        public Builder() {
            $ = new AutoScalingConfigurationPolicyExecutionScheduleArgs();
        }

        public Builder(AutoScalingConfigurationPolicyExecutionScheduleArgs defaults) {
            $ = new AutoScalingConfigurationPolicyExecutionScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expression A cron expression that represents the time at which to execute the autoscaling policy.
         * 
         * @return builder
         * 
         */
        public Builder expression(Output<String> expression) {
            $.expression = expression;
            return this;
        }

        /**
         * @param expression A cron expression that represents the time at which to execute the autoscaling policy.
         * 
         * @return builder
         * 
         */
        public Builder expression(String expression) {
            return expression(Output.of(expression));
        }

        /**
         * @param timezone The time zone for the execution schedule.
         * 
         * @return builder
         * 
         */
        public Builder timezone(Output<String> timezone) {
            $.timezone = timezone;
            return this;
        }

        /**
         * @param timezone The time zone for the execution schedule.
         * 
         * @return builder
         * 
         */
        public Builder timezone(String timezone) {
            return timezone(Output.of(timezone));
        }

        /**
         * @param type The type of action to take.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of action to take.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AutoScalingConfigurationPolicyExecutionScheduleArgs build() {
            $.expression = Objects.requireNonNull($.expression, "expected parameter 'expression' to be non-null");
            $.timezone = Objects.requireNonNull($.timezone, "expected parameter 'timezone' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
