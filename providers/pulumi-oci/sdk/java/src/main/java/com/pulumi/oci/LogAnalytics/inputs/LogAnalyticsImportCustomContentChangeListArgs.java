// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LogAnalyticsImportCustomContentChangeListArgs extends com.pulumi.resources.ResourceArgs {

    public static final LogAnalyticsImportCustomContentChangeListArgs Empty = new LogAnalyticsImportCustomContentChangeListArgs();

    /**
     * A list of field display names with conflicts.
     * 
     */
    @Import(name="conflictFieldDisplayNames")
    private @Nullable Output<List<String>> conflictFieldDisplayNames;

    /**
     * @return A list of field display names with conflicts.
     * 
     */
    public Optional<Output<List<String>>> conflictFieldDisplayNames() {
        return Optional.ofNullable(this.conflictFieldDisplayNames);
    }

    /**
     * A list of parser names with conflicts.
     * 
     */
    @Import(name="conflictParserNames")
    private @Nullable Output<List<String>> conflictParserNames;

    /**
     * @return A list of parser names with conflicts.
     * 
     */
    public Optional<Output<List<String>>> conflictParserNames() {
        return Optional.ofNullable(this.conflictParserNames);
    }

    /**
     * A list of source names with conflicts.
     * 
     */
    @Import(name="conflictSourceNames")
    private @Nullable Output<List<String>> conflictSourceNames;

    /**
     * @return A list of source names with conflicts.
     * 
     */
    public Optional<Output<List<String>>> conflictSourceNames() {
        return Optional.ofNullable(this.conflictSourceNames);
    }

    /**
     * An array of created field display names.
     * 
     */
    @Import(name="createdFieldDisplayNames")
    private @Nullable Output<List<String>> createdFieldDisplayNames;

    /**
     * @return An array of created field display names.
     * 
     */
    public Optional<Output<List<String>>> createdFieldDisplayNames() {
        return Optional.ofNullable(this.createdFieldDisplayNames);
    }

    /**
     * An array of created parser names.
     * 
     */
    @Import(name="createdParserNames")
    private @Nullable Output<List<String>> createdParserNames;

    /**
     * @return An array of created parser names.
     * 
     */
    public Optional<Output<List<String>>> createdParserNames() {
        return Optional.ofNullable(this.createdParserNames);
    }

    /**
     * An array of created source names.
     * 
     */
    @Import(name="createdSourceNames")
    private @Nullable Output<List<String>> createdSourceNames;

    /**
     * @return An array of created source names.
     * 
     */
    public Optional<Output<List<String>>> createdSourceNames() {
        return Optional.ofNullable(this.createdSourceNames);
    }

    /**
     * An array of updated field display names.
     * 
     */
    @Import(name="updatedFieldDisplayNames")
    private @Nullable Output<List<String>> updatedFieldDisplayNames;

    /**
     * @return An array of updated field display names.
     * 
     */
    public Optional<Output<List<String>>> updatedFieldDisplayNames() {
        return Optional.ofNullable(this.updatedFieldDisplayNames);
    }

    /**
     * An array of updated parser names.
     * 
     */
    @Import(name="updatedParserNames")
    private @Nullable Output<List<String>> updatedParserNames;

    /**
     * @return An array of updated parser names.
     * 
     */
    public Optional<Output<List<String>>> updatedParserNames() {
        return Optional.ofNullable(this.updatedParserNames);
    }

    /**
     * An array of updated source names.
     * 
     */
    @Import(name="updatedSourceNames")
    private @Nullable Output<List<String>> updatedSourceNames;

    /**
     * @return An array of updated source names.
     * 
     */
    public Optional<Output<List<String>>> updatedSourceNames() {
        return Optional.ofNullable(this.updatedSourceNames);
    }

    private LogAnalyticsImportCustomContentChangeListArgs() {}

    private LogAnalyticsImportCustomContentChangeListArgs(LogAnalyticsImportCustomContentChangeListArgs $) {
        this.conflictFieldDisplayNames = $.conflictFieldDisplayNames;
        this.conflictParserNames = $.conflictParserNames;
        this.conflictSourceNames = $.conflictSourceNames;
        this.createdFieldDisplayNames = $.createdFieldDisplayNames;
        this.createdParserNames = $.createdParserNames;
        this.createdSourceNames = $.createdSourceNames;
        this.updatedFieldDisplayNames = $.updatedFieldDisplayNames;
        this.updatedParserNames = $.updatedParserNames;
        this.updatedSourceNames = $.updatedSourceNames;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LogAnalyticsImportCustomContentChangeListArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LogAnalyticsImportCustomContentChangeListArgs $;

        public Builder() {
            $ = new LogAnalyticsImportCustomContentChangeListArgs();
        }

        public Builder(LogAnalyticsImportCustomContentChangeListArgs defaults) {
            $ = new LogAnalyticsImportCustomContentChangeListArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param conflictFieldDisplayNames A list of field display names with conflicts.
         * 
         * @return builder
         * 
         */
        public Builder conflictFieldDisplayNames(@Nullable Output<List<String>> conflictFieldDisplayNames) {
            $.conflictFieldDisplayNames = conflictFieldDisplayNames;
            return this;
        }

        /**
         * @param conflictFieldDisplayNames A list of field display names with conflicts.
         * 
         * @return builder
         * 
         */
        public Builder conflictFieldDisplayNames(List<String> conflictFieldDisplayNames) {
            return conflictFieldDisplayNames(Output.of(conflictFieldDisplayNames));
        }

        /**
         * @param conflictFieldDisplayNames A list of field display names with conflicts.
         * 
         * @return builder
         * 
         */
        public Builder conflictFieldDisplayNames(String... conflictFieldDisplayNames) {
            return conflictFieldDisplayNames(List.of(conflictFieldDisplayNames));
        }

        /**
         * @param conflictParserNames A list of parser names with conflicts.
         * 
         * @return builder
         * 
         */
        public Builder conflictParserNames(@Nullable Output<List<String>> conflictParserNames) {
            $.conflictParserNames = conflictParserNames;
            return this;
        }

        /**
         * @param conflictParserNames A list of parser names with conflicts.
         * 
         * @return builder
         * 
         */
        public Builder conflictParserNames(List<String> conflictParserNames) {
            return conflictParserNames(Output.of(conflictParserNames));
        }

        /**
         * @param conflictParserNames A list of parser names with conflicts.
         * 
         * @return builder
         * 
         */
        public Builder conflictParserNames(String... conflictParserNames) {
            return conflictParserNames(List.of(conflictParserNames));
        }

        /**
         * @param conflictSourceNames A list of source names with conflicts.
         * 
         * @return builder
         * 
         */
        public Builder conflictSourceNames(@Nullable Output<List<String>> conflictSourceNames) {
            $.conflictSourceNames = conflictSourceNames;
            return this;
        }

        /**
         * @param conflictSourceNames A list of source names with conflicts.
         * 
         * @return builder
         * 
         */
        public Builder conflictSourceNames(List<String> conflictSourceNames) {
            return conflictSourceNames(Output.of(conflictSourceNames));
        }

        /**
         * @param conflictSourceNames A list of source names with conflicts.
         * 
         * @return builder
         * 
         */
        public Builder conflictSourceNames(String... conflictSourceNames) {
            return conflictSourceNames(List.of(conflictSourceNames));
        }

        /**
         * @param createdFieldDisplayNames An array of created field display names.
         * 
         * @return builder
         * 
         */
        public Builder createdFieldDisplayNames(@Nullable Output<List<String>> createdFieldDisplayNames) {
            $.createdFieldDisplayNames = createdFieldDisplayNames;
            return this;
        }

        /**
         * @param createdFieldDisplayNames An array of created field display names.
         * 
         * @return builder
         * 
         */
        public Builder createdFieldDisplayNames(List<String> createdFieldDisplayNames) {
            return createdFieldDisplayNames(Output.of(createdFieldDisplayNames));
        }

        /**
         * @param createdFieldDisplayNames An array of created field display names.
         * 
         * @return builder
         * 
         */
        public Builder createdFieldDisplayNames(String... createdFieldDisplayNames) {
            return createdFieldDisplayNames(List.of(createdFieldDisplayNames));
        }

        /**
         * @param createdParserNames An array of created parser names.
         * 
         * @return builder
         * 
         */
        public Builder createdParserNames(@Nullable Output<List<String>> createdParserNames) {
            $.createdParserNames = createdParserNames;
            return this;
        }

        /**
         * @param createdParserNames An array of created parser names.
         * 
         * @return builder
         * 
         */
        public Builder createdParserNames(List<String> createdParserNames) {
            return createdParserNames(Output.of(createdParserNames));
        }

        /**
         * @param createdParserNames An array of created parser names.
         * 
         * @return builder
         * 
         */
        public Builder createdParserNames(String... createdParserNames) {
            return createdParserNames(List.of(createdParserNames));
        }

        /**
         * @param createdSourceNames An array of created source names.
         * 
         * @return builder
         * 
         */
        public Builder createdSourceNames(@Nullable Output<List<String>> createdSourceNames) {
            $.createdSourceNames = createdSourceNames;
            return this;
        }

        /**
         * @param createdSourceNames An array of created source names.
         * 
         * @return builder
         * 
         */
        public Builder createdSourceNames(List<String> createdSourceNames) {
            return createdSourceNames(Output.of(createdSourceNames));
        }

        /**
         * @param createdSourceNames An array of created source names.
         * 
         * @return builder
         * 
         */
        public Builder createdSourceNames(String... createdSourceNames) {
            return createdSourceNames(List.of(createdSourceNames));
        }

        /**
         * @param updatedFieldDisplayNames An array of updated field display names.
         * 
         * @return builder
         * 
         */
        public Builder updatedFieldDisplayNames(@Nullable Output<List<String>> updatedFieldDisplayNames) {
            $.updatedFieldDisplayNames = updatedFieldDisplayNames;
            return this;
        }

        /**
         * @param updatedFieldDisplayNames An array of updated field display names.
         * 
         * @return builder
         * 
         */
        public Builder updatedFieldDisplayNames(List<String> updatedFieldDisplayNames) {
            return updatedFieldDisplayNames(Output.of(updatedFieldDisplayNames));
        }

        /**
         * @param updatedFieldDisplayNames An array of updated field display names.
         * 
         * @return builder
         * 
         */
        public Builder updatedFieldDisplayNames(String... updatedFieldDisplayNames) {
            return updatedFieldDisplayNames(List.of(updatedFieldDisplayNames));
        }

        /**
         * @param updatedParserNames An array of updated parser names.
         * 
         * @return builder
         * 
         */
        public Builder updatedParserNames(@Nullable Output<List<String>> updatedParserNames) {
            $.updatedParserNames = updatedParserNames;
            return this;
        }

        /**
         * @param updatedParserNames An array of updated parser names.
         * 
         * @return builder
         * 
         */
        public Builder updatedParserNames(List<String> updatedParserNames) {
            return updatedParserNames(Output.of(updatedParserNames));
        }

        /**
         * @param updatedParserNames An array of updated parser names.
         * 
         * @return builder
         * 
         */
        public Builder updatedParserNames(String... updatedParserNames) {
            return updatedParserNames(List.of(updatedParserNames));
        }

        /**
         * @param updatedSourceNames An array of updated source names.
         * 
         * @return builder
         * 
         */
        public Builder updatedSourceNames(@Nullable Output<List<String>> updatedSourceNames) {
            $.updatedSourceNames = updatedSourceNames;
            return this;
        }

        /**
         * @param updatedSourceNames An array of updated source names.
         * 
         * @return builder
         * 
         */
        public Builder updatedSourceNames(List<String> updatedSourceNames) {
            return updatedSourceNames(Output.of(updatedSourceNames));
        }

        /**
         * @param updatedSourceNames An array of updated source names.
         * 
         * @return builder
         * 
         */
        public Builder updatedSourceNames(String... updatedSourceNames) {
            return updatedSourceNames(List.of(updatedSourceNames));
        }

        public LogAnalyticsImportCustomContentChangeListArgs build() {
            return $;
        }
    }

}
