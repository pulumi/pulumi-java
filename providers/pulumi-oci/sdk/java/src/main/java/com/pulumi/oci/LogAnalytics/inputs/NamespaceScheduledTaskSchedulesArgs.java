// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.LogAnalytics.inputs.NamespaceScheduledTaskSchedulesScheduleArgs;
import java.util.List;
import java.util.Objects;


public final class NamespaceScheduledTaskSchedulesArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamespaceScheduledTaskSchedulesArgs Empty = new NamespaceScheduledTaskSchedulesArgs();

    @Import(name="schedules", required=true)
    private Output<List<NamespaceScheduledTaskSchedulesScheduleArgs>> schedules;

    public Output<List<NamespaceScheduledTaskSchedulesScheduleArgs>> schedules() {
        return this.schedules;
    }

    private NamespaceScheduledTaskSchedulesArgs() {}

    private NamespaceScheduledTaskSchedulesArgs(NamespaceScheduledTaskSchedulesArgs $) {
        this.schedules = $.schedules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamespaceScheduledTaskSchedulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamespaceScheduledTaskSchedulesArgs $;

        public Builder() {
            $ = new NamespaceScheduledTaskSchedulesArgs();
        }

        public Builder(NamespaceScheduledTaskSchedulesArgs defaults) {
            $ = new NamespaceScheduledTaskSchedulesArgs(Objects.requireNonNull(defaults));
        }

        public Builder schedules(Output<List<NamespaceScheduledTaskSchedulesScheduleArgs>> schedules) {
            $.schedules = schedules;
            return this;
        }

        public Builder schedules(List<NamespaceScheduledTaskSchedulesScheduleArgs> schedules) {
            return schedules(Output.of(schedules));
        }

        public Builder schedules(NamespaceScheduledTaskSchedulesScheduleArgs... schedules) {
            return schedules(List.of(schedules));
        }

        public NamespaceScheduledTaskSchedulesArgs build() {
            $.schedules = Objects.requireNonNull($.schedules, "expected parameter 'schedules' to be non-null");
            return $;
        }
    }

}
