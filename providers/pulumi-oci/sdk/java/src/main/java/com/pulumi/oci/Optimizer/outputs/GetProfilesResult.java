// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Optimizer.outputs.GetProfilesFilter;
import com.pulumi.oci.Optimizer.outputs.GetProfilesProfileCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetProfilesResult {
    /**
     * @return The OCID of the tenancy. The tenancy is the root compartment.
     * 
     */
    private final String compartmentId;
    private final @Nullable List<GetProfilesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The name assigned to the profile. Avoid entering confidential information.
     * 
     */
    private final @Nullable String name;
    /**
     * @return The list of profile_collection.
     * 
     */
    private final List<GetProfilesProfileCollection> profileCollections;
    /**
     * @return The profile&#39;s current state.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetProfilesResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetProfilesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("profileCollections") List<GetProfilesProfileCollection> profileCollections,
        @CustomType.Parameter("state") @Nullable String state) {
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.name = name;
        this.profileCollections = profileCollections;
        this.state = state;
    }

    /**
     * @return The OCID of the tenancy. The tenancy is the root compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetProfilesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name assigned to the profile. Avoid entering confidential information.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of profile_collection.
     * 
     */
    public List<GetProfilesProfileCollection> profileCollections() {
        return this.profileCollections;
    }
    /**
     * @return The profile&#39;s current state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProfilesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetProfilesFilter> filters;
        private String id;
        private @Nullable String name;
        private List<GetProfilesProfileCollection> profileCollections;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProfilesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.profileCollections = defaults.profileCollections;
    	      this.state = defaults.state;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetProfilesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetProfilesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder profileCollections(List<GetProfilesProfileCollection> profileCollections) {
            this.profileCollections = Objects.requireNonNull(profileCollections);
            return this;
        }
        public Builder profileCollections(GetProfilesProfileCollection... profileCollections) {
            return profileCollections(List.of(profileCollections));
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetProfilesResult build() {
            return new GetProfilesResult(compartmentId, filters, id, name, profileCollections, state);
        }
    }
}
