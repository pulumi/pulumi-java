// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.ComputeCapacityReservationInstanceReservationConfigInstanceShapeConfigArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ComputeCapacityReservationInstanceReservationConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ComputeCapacityReservationInstanceReservationConfigArgs Empty = new ComputeCapacityReservationInstanceReservationConfigArgs();

    /**
     * (Updatable) The fault domain to use for instances created using this capacity configuration. For more information, see [Fault Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm#fault). If you do not specify the fault domain, the capacity is available for an instance that does not specify a fault domain. To change the fault domain for a reservation, delete the reservation and create a new one in the preferred fault domain.
     * 
     */
    @Import(name="faultDomain")
    private @Nullable Output<String> faultDomain;

    /**
     * @return (Updatable) The fault domain to use for instances created using this capacity configuration. For more information, see [Fault Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm#fault). If you do not specify the fault domain, the capacity is available for an instance that does not specify a fault domain. To change the fault domain for a reservation, delete the reservation and create a new one in the preferred fault domain.
     * 
     */
    public Optional<Output<String>> faultDomain() {
        return Optional.ofNullable(this.faultDomain);
    }

    /**
     * (Updatable) The shape requested when launching instances using reserved capacity. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance. You can list all available shapes by calling [ListComputeCapacityReservationInstanceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/computeCapacityReservationInstanceShapes/ListComputeCapacityReservationInstanceShapes).
     * 
     */
    @Import(name="instanceShape", required=true)
    private Output<String> instanceShape;

    /**
     * @return (Updatable) The shape requested when launching instances using reserved capacity. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance. You can list all available shapes by calling [ListComputeCapacityReservationInstanceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/computeCapacityReservationInstanceShapes/ListComputeCapacityReservationInstanceShapes).
     * 
     */
    public Output<String> instanceShape() {
        return this.instanceShape;
    }

    /**
     * (Updatable) The shape configuration requested when launching instances in a compute capacity reservation.
     * 
     */
    @Import(name="instanceShapeConfig")
    private @Nullable Output<ComputeCapacityReservationInstanceReservationConfigInstanceShapeConfigArgs> instanceShapeConfig;

    /**
     * @return (Updatable) The shape configuration requested when launching instances in a compute capacity reservation.
     * 
     */
    public Optional<Output<ComputeCapacityReservationInstanceReservationConfigInstanceShapeConfigArgs>> instanceShapeConfig() {
        return Optional.ofNullable(this.instanceShapeConfig);
    }

    /**
     * (Updatable) The total number of instances that can be launched from the capacity configuration.
     * 
     */
    @Import(name="reservedCount", required=true)
    private Output<String> reservedCount;

    /**
     * @return (Updatable) The total number of instances that can be launched from the capacity configuration.
     * 
     */
    public Output<String> reservedCount() {
        return this.reservedCount;
    }

    /**
     * The amount of capacity in use out of the total capacity reserved in this capacity configuration.
     * 
     */
    @Import(name="usedCount")
    private @Nullable Output<String> usedCount;

    /**
     * @return The amount of capacity in use out of the total capacity reserved in this capacity configuration.
     * 
     */
    public Optional<Output<String>> usedCount() {
        return Optional.ofNullable(this.usedCount);
    }

    private ComputeCapacityReservationInstanceReservationConfigArgs() {}

    private ComputeCapacityReservationInstanceReservationConfigArgs(ComputeCapacityReservationInstanceReservationConfigArgs $) {
        this.faultDomain = $.faultDomain;
        this.instanceShape = $.instanceShape;
        this.instanceShapeConfig = $.instanceShapeConfig;
        this.reservedCount = $.reservedCount;
        this.usedCount = $.usedCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComputeCapacityReservationInstanceReservationConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComputeCapacityReservationInstanceReservationConfigArgs $;

        public Builder() {
            $ = new ComputeCapacityReservationInstanceReservationConfigArgs();
        }

        public Builder(ComputeCapacityReservationInstanceReservationConfigArgs defaults) {
            $ = new ComputeCapacityReservationInstanceReservationConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param faultDomain (Updatable) The fault domain to use for instances created using this capacity configuration. For more information, see [Fault Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm#fault). If you do not specify the fault domain, the capacity is available for an instance that does not specify a fault domain. To change the fault domain for a reservation, delete the reservation and create a new one in the preferred fault domain.
         * 
         * @return builder
         * 
         */
        public Builder faultDomain(@Nullable Output<String> faultDomain) {
            $.faultDomain = faultDomain;
            return this;
        }

        /**
         * @param faultDomain (Updatable) The fault domain to use for instances created using this capacity configuration. For more information, see [Fault Domains](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/regions.htm#fault). If you do not specify the fault domain, the capacity is available for an instance that does not specify a fault domain. To change the fault domain for a reservation, delete the reservation and create a new one in the preferred fault domain.
         * 
         * @return builder
         * 
         */
        public Builder faultDomain(String faultDomain) {
            return faultDomain(Output.of(faultDomain));
        }

        /**
         * @param instanceShape (Updatable) The shape requested when launching instances using reserved capacity. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance. You can list all available shapes by calling [ListComputeCapacityReservationInstanceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/computeCapacityReservationInstanceShapes/ListComputeCapacityReservationInstanceShapes).
         * 
         * @return builder
         * 
         */
        public Builder instanceShape(Output<String> instanceShape) {
            $.instanceShape = instanceShape;
            return this;
        }

        /**
         * @param instanceShape (Updatable) The shape requested when launching instances using reserved capacity. The shape determines the number of CPUs, amount of memory, and other resources allocated to the instance. You can list all available shapes by calling [ListComputeCapacityReservationInstanceShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/computeCapacityReservationInstanceShapes/ListComputeCapacityReservationInstanceShapes).
         * 
         * @return builder
         * 
         */
        public Builder instanceShape(String instanceShape) {
            return instanceShape(Output.of(instanceShape));
        }

        /**
         * @param instanceShapeConfig (Updatable) The shape configuration requested when launching instances in a compute capacity reservation.
         * 
         * @return builder
         * 
         */
        public Builder instanceShapeConfig(@Nullable Output<ComputeCapacityReservationInstanceReservationConfigInstanceShapeConfigArgs> instanceShapeConfig) {
            $.instanceShapeConfig = instanceShapeConfig;
            return this;
        }

        /**
         * @param instanceShapeConfig (Updatable) The shape configuration requested when launching instances in a compute capacity reservation.
         * 
         * @return builder
         * 
         */
        public Builder instanceShapeConfig(ComputeCapacityReservationInstanceReservationConfigInstanceShapeConfigArgs instanceShapeConfig) {
            return instanceShapeConfig(Output.of(instanceShapeConfig));
        }

        /**
         * @param reservedCount (Updatable) The total number of instances that can be launched from the capacity configuration.
         * 
         * @return builder
         * 
         */
        public Builder reservedCount(Output<String> reservedCount) {
            $.reservedCount = reservedCount;
            return this;
        }

        /**
         * @param reservedCount (Updatable) The total number of instances that can be launched from the capacity configuration.
         * 
         * @return builder
         * 
         */
        public Builder reservedCount(String reservedCount) {
            return reservedCount(Output.of(reservedCount));
        }

        /**
         * @param usedCount The amount of capacity in use out of the total capacity reserved in this capacity configuration.
         * 
         * @return builder
         * 
         */
        public Builder usedCount(@Nullable Output<String> usedCount) {
            $.usedCount = usedCount;
            return this;
        }

        /**
         * @param usedCount The amount of capacity in use out of the total capacity reserved in this capacity configuration.
         * 
         * @return builder
         * 
         */
        public Builder usedCount(String usedCount) {
            return usedCount(Output.of(usedCount));
        }

        public ComputeCapacityReservationInstanceReservationConfigArgs build() {
            $.instanceShape = Objects.requireNonNull($.instanceShape, "expected parameter 'instanceShape' to be non-null");
            $.reservedCount = Objects.requireNonNull($.reservedCount, "expected parameter 'reservedCount' to be non-null");
            return $;
        }
    }

}
