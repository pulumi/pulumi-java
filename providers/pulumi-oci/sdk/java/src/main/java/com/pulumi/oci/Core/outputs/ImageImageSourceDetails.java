// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ImageImageSourceDetails {
    /**
     * @return The Object Storage bucket for the image.
     * 
     */
    private final @Nullable String bucketName;
    /**
     * @return The Object Storage namespace for the image.
     * 
     */
    private final @Nullable String namespaceName;
    /**
     * @return The Object Storage name for the image.
     * 
     */
    private final @Nullable String objectName;
    /**
     * @return The image&#39;s operating system.  Example: `Oracle Linux`
     * 
     */
    private final @Nullable String operatingSystem;
    /**
     * @return The image&#39;s operating system version.  Example: `7.2`
     * 
     */
    private final @Nullable String operatingSystemVersion;
    /**
     * @return The format of the image to be imported.  Only monolithic images are supported. This attribute is not used for exported Oracle images with the Oracle Cloud Infrastructure image format. Allowed values are:
     * * `QCOW2`
     * * `VMDK`
     * 
     */
    private final @Nullable String sourceImageType;
    /**
     * @return The source type for the image. Use `objectStorageTuple` when specifying the namespace, bucket name, and object name. Use `objectStorageUri` when specifying the Object Storage URL.
     * 
     */
    private final String sourceType;
    /**
     * @return The Object Storage URL for the image.
     * 
     */
    private final @Nullable String sourceUri;

    @CustomType.Constructor
    private ImageImageSourceDetails(
        @CustomType.Parameter("bucketName") @Nullable String bucketName,
        @CustomType.Parameter("namespaceName") @Nullable String namespaceName,
        @CustomType.Parameter("objectName") @Nullable String objectName,
        @CustomType.Parameter("operatingSystem") @Nullable String operatingSystem,
        @CustomType.Parameter("operatingSystemVersion") @Nullable String operatingSystemVersion,
        @CustomType.Parameter("sourceImageType") @Nullable String sourceImageType,
        @CustomType.Parameter("sourceType") String sourceType,
        @CustomType.Parameter("sourceUri") @Nullable String sourceUri) {
        this.bucketName = bucketName;
        this.namespaceName = namespaceName;
        this.objectName = objectName;
        this.operatingSystem = operatingSystem;
        this.operatingSystemVersion = operatingSystemVersion;
        this.sourceImageType = sourceImageType;
        this.sourceType = sourceType;
        this.sourceUri = sourceUri;
    }

    /**
     * @return The Object Storage bucket for the image.
     * 
     */
    public Optional<String> bucketName() {
        return Optional.ofNullable(this.bucketName);
    }
    /**
     * @return The Object Storage namespace for the image.
     * 
     */
    public Optional<String> namespaceName() {
        return Optional.ofNullable(this.namespaceName);
    }
    /**
     * @return The Object Storage name for the image.
     * 
     */
    public Optional<String> objectName() {
        return Optional.ofNullable(this.objectName);
    }
    /**
     * @return The image&#39;s operating system.  Example: `Oracle Linux`
     * 
     */
    public Optional<String> operatingSystem() {
        return Optional.ofNullable(this.operatingSystem);
    }
    /**
     * @return The image&#39;s operating system version.  Example: `7.2`
     * 
     */
    public Optional<String> operatingSystemVersion() {
        return Optional.ofNullable(this.operatingSystemVersion);
    }
    /**
     * @return The format of the image to be imported.  Only monolithic images are supported. This attribute is not used for exported Oracle images with the Oracle Cloud Infrastructure image format. Allowed values are:
     * * `QCOW2`
     * * `VMDK`
     * 
     */
    public Optional<String> sourceImageType() {
        return Optional.ofNullable(this.sourceImageType);
    }
    /**
     * @return The source type for the image. Use `objectStorageTuple` when specifying the namespace, bucket name, and object name. Use `objectStorageUri` when specifying the Object Storage URL.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return The Object Storage URL for the image.
     * 
     */
    public Optional<String> sourceUri() {
        return Optional.ofNullable(this.sourceUri);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ImageImageSourceDetails defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String bucketName;
        private @Nullable String namespaceName;
        private @Nullable String objectName;
        private @Nullable String operatingSystem;
        private @Nullable String operatingSystemVersion;
        private @Nullable String sourceImageType;
        private String sourceType;
        private @Nullable String sourceUri;

        public Builder() {
    	      // Empty
        }

        public Builder(ImageImageSourceDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucketName = defaults.bucketName;
    	      this.namespaceName = defaults.namespaceName;
    	      this.objectName = defaults.objectName;
    	      this.operatingSystem = defaults.operatingSystem;
    	      this.operatingSystemVersion = defaults.operatingSystemVersion;
    	      this.sourceImageType = defaults.sourceImageType;
    	      this.sourceType = defaults.sourceType;
    	      this.sourceUri = defaults.sourceUri;
        }

        public Builder bucketName(@Nullable String bucketName) {
            this.bucketName = bucketName;
            return this;
        }
        public Builder namespaceName(@Nullable String namespaceName) {
            this.namespaceName = namespaceName;
            return this;
        }
        public Builder objectName(@Nullable String objectName) {
            this.objectName = objectName;
            return this;
        }
        public Builder operatingSystem(@Nullable String operatingSystem) {
            this.operatingSystem = operatingSystem;
            return this;
        }
        public Builder operatingSystemVersion(@Nullable String operatingSystemVersion) {
            this.operatingSystemVersion = operatingSystemVersion;
            return this;
        }
        public Builder sourceImageType(@Nullable String sourceImageType) {
            this.sourceImageType = sourceImageType;
            return this;
        }
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public Builder sourceUri(@Nullable String sourceUri) {
            this.sourceUri = sourceUri;
            return this;
        }        public ImageImageSourceDetails build() {
            return new ImageImageSourceDetails(bucketName, namespaceName, objectName, operatingSystem, operatingSystemVersion, sourceImageType, sourceType, sourceUri);
        }
    }
}
