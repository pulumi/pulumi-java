// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Bastion.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SessionTargetResourceDetails {
    /**
     * @return The session type.
     * 
     */
    private final String sessionType;
    /**
     * @return The display name of the target Compute instance that the session connects to.
     * 
     */
    private final @Nullable String targetResourceDisplayName;
    /**
     * @return The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to. It&#39;s optional depends on the type of session you want to create.
     * * (Required) For MANAGED_SSH session type, we can only use target_resource_id to create session.
     * * (Optional) For PORT_FORWARDING session type, you must either use target_resource_id or target_resource_private_ip_address
     * 
     */
    private final @Nullable String targetResourceId;
    /**
     * @return The name of the user on the target resource operating system that the session uses for the connection.
     * 
     */
    private final @Nullable String targetResourceOperatingSystemUserName;
    /**
     * @return The port number to connect to on the target resource.
     * 
     */
    private final @Nullable Integer targetResourcePort;
    /**
     * @return The private IP address of the target resource that the session connects to. For PORT_FORWARDING session type, you must either use target_resource_id or target_resource_private_ip_address
     * 
     */
    private final @Nullable String targetResourcePrivateIpAddress;

    @CustomType.Constructor
    private SessionTargetResourceDetails(
        @CustomType.Parameter("sessionType") String sessionType,
        @CustomType.Parameter("targetResourceDisplayName") @Nullable String targetResourceDisplayName,
        @CustomType.Parameter("targetResourceId") @Nullable String targetResourceId,
        @CustomType.Parameter("targetResourceOperatingSystemUserName") @Nullable String targetResourceOperatingSystemUserName,
        @CustomType.Parameter("targetResourcePort") @Nullable Integer targetResourcePort,
        @CustomType.Parameter("targetResourcePrivateIpAddress") @Nullable String targetResourcePrivateIpAddress) {
        this.sessionType = sessionType;
        this.targetResourceDisplayName = targetResourceDisplayName;
        this.targetResourceId = targetResourceId;
        this.targetResourceOperatingSystemUserName = targetResourceOperatingSystemUserName;
        this.targetResourcePort = targetResourcePort;
        this.targetResourcePrivateIpAddress = targetResourcePrivateIpAddress;
    }

    /**
     * @return The session type.
     * 
     */
    public String sessionType() {
        return this.sessionType;
    }
    /**
     * @return The display name of the target Compute instance that the session connects to.
     * 
     */
    public Optional<String> targetResourceDisplayName() {
        return Optional.ofNullable(this.targetResourceDisplayName);
    }
    /**
     * @return The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to. It&#39;s optional depends on the type of session you want to create.
     * * (Required) For MANAGED_SSH session type, we can only use target_resource_id to create session.
     * * (Optional) For PORT_FORWARDING session type, you must either use target_resource_id or target_resource_private_ip_address
     * 
     */
    public Optional<String> targetResourceId() {
        return Optional.ofNullable(this.targetResourceId);
    }
    /**
     * @return The name of the user on the target resource operating system that the session uses for the connection.
     * 
     */
    public Optional<String> targetResourceOperatingSystemUserName() {
        return Optional.ofNullable(this.targetResourceOperatingSystemUserName);
    }
    /**
     * @return The port number to connect to on the target resource.
     * 
     */
    public Optional<Integer> targetResourcePort() {
        return Optional.ofNullable(this.targetResourcePort);
    }
    /**
     * @return The private IP address of the target resource that the session connects to. For PORT_FORWARDING session type, you must either use target_resource_id or target_resource_private_ip_address
     * 
     */
    public Optional<String> targetResourcePrivateIpAddress() {
        return Optional.ofNullable(this.targetResourcePrivateIpAddress);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SessionTargetResourceDetails defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String sessionType;
        private @Nullable String targetResourceDisplayName;
        private @Nullable String targetResourceId;
        private @Nullable String targetResourceOperatingSystemUserName;
        private @Nullable Integer targetResourcePort;
        private @Nullable String targetResourcePrivateIpAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(SessionTargetResourceDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sessionType = defaults.sessionType;
    	      this.targetResourceDisplayName = defaults.targetResourceDisplayName;
    	      this.targetResourceId = defaults.targetResourceId;
    	      this.targetResourceOperatingSystemUserName = defaults.targetResourceOperatingSystemUserName;
    	      this.targetResourcePort = defaults.targetResourcePort;
    	      this.targetResourcePrivateIpAddress = defaults.targetResourcePrivateIpAddress;
        }

        public Builder sessionType(String sessionType) {
            this.sessionType = Objects.requireNonNull(sessionType);
            return this;
        }
        public Builder targetResourceDisplayName(@Nullable String targetResourceDisplayName) {
            this.targetResourceDisplayName = targetResourceDisplayName;
            return this;
        }
        public Builder targetResourceId(@Nullable String targetResourceId) {
            this.targetResourceId = targetResourceId;
            return this;
        }
        public Builder targetResourceOperatingSystemUserName(@Nullable String targetResourceOperatingSystemUserName) {
            this.targetResourceOperatingSystemUserName = targetResourceOperatingSystemUserName;
            return this;
        }
        public Builder targetResourcePort(@Nullable Integer targetResourcePort) {
            this.targetResourcePort = targetResourcePort;
            return this;
        }
        public Builder targetResourcePrivateIpAddress(@Nullable String targetResourcePrivateIpAddress) {
            this.targetResourcePrivateIpAddress = targetResourcePrivateIpAddress;
            return this;
        }        public SessionTargetResourceDetails build() {
            return new SessionTargetResourceDetails(sessionType, targetResourceDisplayName, targetResourceId, targetResourceOperatingSystemUserName, targetResourcePort, targetResourcePrivateIpAddress);
        }
    }
}
