// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationsFilter;
import com.pulumi.oci.Core.outputs.GetInstanceConfigurationsInstanceConfiguration;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetInstanceConfigurationsResult {
    /**
     * @return The OCID of the compartment containing the instance. Instances created from instance configurations are placed in the same compartment  as the instance that was used to create the instance configuration.
     * 
     */
    private final String compartmentId;
    private final @Nullable List<GetInstanceConfigurationsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of instance_configurations.
     * 
     */
    private final List<GetInstanceConfigurationsInstanceConfiguration> instanceConfigurations;

    @CustomType.Constructor
    private GetInstanceConfigurationsResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetInstanceConfigurationsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceConfigurations") List<GetInstanceConfigurationsInstanceConfiguration> instanceConfigurations) {
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.instanceConfigurations = instanceConfigurations;
    }

    /**
     * @return The OCID of the compartment containing the instance. Instances created from instance configurations are placed in the same compartment  as the instance that was used to create the instance configuration.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetInstanceConfigurationsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of instance_configurations.
     * 
     */
    public List<GetInstanceConfigurationsInstanceConfiguration> instanceConfigurations() {
        return this.instanceConfigurations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceConfigurationsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetInstanceConfigurationsFilter> filters;
        private String id;
        private List<GetInstanceConfigurationsInstanceConfiguration> instanceConfigurations;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceConfigurationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.instanceConfigurations = defaults.instanceConfigurations;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetInstanceConfigurationsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetInstanceConfigurationsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceConfigurations(List<GetInstanceConfigurationsInstanceConfiguration> instanceConfigurations) {
            this.instanceConfigurations = Objects.requireNonNull(instanceConfigurations);
            return this;
        }
        public Builder instanceConfigurations(GetInstanceConfigurationsInstanceConfiguration... instanceConfigurations) {
            return instanceConfigurations(List.of(instanceConfigurations));
        }        public GetInstanceConfigurationsResult build() {
            return new GetInstanceConfigurationsResult(compartmentId, filters, id, instanceConfigurations);
        }
    }
}
