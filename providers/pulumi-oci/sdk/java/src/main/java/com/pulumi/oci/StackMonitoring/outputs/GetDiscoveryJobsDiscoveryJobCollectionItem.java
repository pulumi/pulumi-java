// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDiscoveryJobsDiscoveryJobCollectionItem {
    /**
     * @return The ID of the compartment in which data is listed.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Add option submits new discovery Job. Add with retry option to re-submit failed discovery job. Refresh option refreshes the existing discovered resources.
     * 
     */
    private final String discoveryType;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The OCID of Discovery job
     * 
     */
    private final String id;
    /**
     * @return The Name of resource type
     * 
     */
    private final String resourceName;
    /**
     * @return Resource Type.
     * 
     */
    private final String resourceType;
    /**
     * @return The current state of the DiscoveryJob Resource.
     * 
     */
    private final String state;
    /**
     * @return Specifies the status of the discovery job
     * 
     */
    private final String status;
    /**
     * @return The short summary of the status of the discovery job
     * 
     */
    private final String statusMessage;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The OCID of Tenant
     * 
     */
    private final String tenantId;
    /**
     * @return The time the discovery Job was updated.
     * 
     */
    private final String timeUpdated;
    /**
     * @return The OCID of user in which the job is submitted
     * 
     */
    private final String userId;

    @CustomType.Constructor
    private GetDiscoveryJobsDiscoveryJobCollectionItem(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("discoveryType") String discoveryType,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("resourceName") String resourceName,
        @CustomType.Parameter("resourceType") String resourceType,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("statusMessage") String statusMessage,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("tenantId") String tenantId,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("userId") String userId) {
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.discoveryType = discoveryType;
        this.freeformTags = freeformTags;
        this.id = id;
        this.resourceName = resourceName;
        this.resourceType = resourceType;
        this.state = state;
        this.status = status;
        this.statusMessage = statusMessage;
        this.systemTags = systemTags;
        this.tenantId = tenantId;
        this.timeUpdated = timeUpdated;
        this.userId = userId;
    }

    /**
     * @return The ID of the compartment in which data is listed.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Add option submits new discovery Job. Add with retry option to re-submit failed discovery job. Refresh option refreshes the existing discovered resources.
     * 
     */
    public String discoveryType() {
        return this.discoveryType;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of Discovery job
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The Name of resource type
     * 
     */
    public String resourceName() {
        return this.resourceName;
    }
    /**
     * @return Resource Type.
     * 
     */
    public String resourceType() {
        return this.resourceType;
    }
    /**
     * @return The current state of the DiscoveryJob Resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Specifies the status of the discovery job
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The short summary of the status of the discovery job
     * 
     */
    public String statusMessage() {
        return this.statusMessage;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The OCID of Tenant
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }
    /**
     * @return The time the discovery Job was updated.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return The OCID of user in which the job is submitted
     * 
     */
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDiscoveryJobsDiscoveryJobCollectionItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String discoveryType;
        private Map<String,Object> freeformTags;
        private String id;
        private String resourceName;
        private String resourceType;
        private String state;
        private String status;
        private String statusMessage;
        private Map<String,Object> systemTags;
        private String tenantId;
        private String timeUpdated;
        private String userId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDiscoveryJobsDiscoveryJobCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.discoveryType = defaults.discoveryType;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.resourceName = defaults.resourceName;
    	      this.resourceType = defaults.resourceType;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.statusMessage = defaults.statusMessage;
    	      this.systemTags = defaults.systemTags;
    	      this.tenantId = defaults.tenantId;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.userId = defaults.userId;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder discoveryType(String discoveryType) {
            this.discoveryType = Objects.requireNonNull(discoveryType);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder resourceName(String resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }
        public Builder resourceType(String resourceType) {
            this.resourceType = Objects.requireNonNull(resourceType);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder statusMessage(String statusMessage) {
            this.statusMessage = Objects.requireNonNull(statusMessage);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder userId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }        public GetDiscoveryJobsDiscoveryJobCollectionItem build() {
            return new GetDiscoveryJobsDiscoveryJobCollectionItem(compartmentId, definedTags, discoveryType, freeformTags, id, resourceName, resourceType, state, status, statusMessage, systemTags, tenantId, timeUpdated, userId);
        }
    }
}
