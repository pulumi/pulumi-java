// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.DrgRouteDistributionStatementMatchCriteriaArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DrgRouteDistributionStatementState extends com.pulumi.resources.ResourceArgs {

    public static final DrgRouteDistributionStatementState Empty = new DrgRouteDistributionStatementState();

    /**
     * Accept: import/export the route &#34;as is&#34;
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return Accept: import/export the route &#34;as is&#34;
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
     * 
     */
    @Import(name="drgRouteDistributionId")
    private @Nullable Output<String> drgRouteDistributionId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
     * 
     */
    public Optional<Output<String>> drgRouteDistributionId() {
        return Optional.ofNullable(this.drgRouteDistributionId);
    }

    /**
     * (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
     * 
     */
    @Import(name="matchCriteria")
    private @Nullable Output<DrgRouteDistributionStatementMatchCriteriaArgs> matchCriteria;

    /**
     * @return (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
     * 
     */
    public Optional<Output<DrgRouteDistributionStatementMatchCriteriaArgs>> matchCriteria() {
        return Optional.ofNullable(this.matchCriteria);
    }

    /**
     * (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
     * 
     */
    @Import(name="priority")
    private @Nullable Output<Integer> priority;

    /**
     * @return (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
     * 
     */
    public Optional<Output<Integer>> priority() {
        return Optional.ofNullable(this.priority);
    }

    private DrgRouteDistributionStatementState() {}

    private DrgRouteDistributionStatementState(DrgRouteDistributionStatementState $) {
        this.action = $.action;
        this.drgRouteDistributionId = $.drgRouteDistributionId;
        this.matchCriteria = $.matchCriteria;
        this.priority = $.priority;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DrgRouteDistributionStatementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DrgRouteDistributionStatementState $;

        public Builder() {
            $ = new DrgRouteDistributionStatementState();
        }

        public Builder(DrgRouteDistributionStatementState defaults) {
            $ = new DrgRouteDistributionStatementState(Objects.requireNonNull(defaults));
        }

        /**
         * @param action Accept: import/export the route &#34;as is&#34;
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action Accept: import/export the route &#34;as is&#34;
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param drgRouteDistributionId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
         * 
         * @return builder
         * 
         */
        public Builder drgRouteDistributionId(@Nullable Output<String> drgRouteDistributionId) {
            $.drgRouteDistributionId = drgRouteDistributionId;
            return this;
        }

        /**
         * @param drgRouteDistributionId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route distribution.
         * 
         * @return builder
         * 
         */
        public Builder drgRouteDistributionId(String drgRouteDistributionId) {
            return drgRouteDistributionId(Output.of(drgRouteDistributionId));
        }

        /**
         * @param matchCriteria (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
         * 
         * @return builder
         * 
         */
        public Builder matchCriteria(@Nullable Output<DrgRouteDistributionStatementMatchCriteriaArgs> matchCriteria) {
            $.matchCriteria = matchCriteria;
            return this;
        }

        /**
         * @param matchCriteria (Updatable) The action is applied only if all of the match criteria are met. MATCH_ALL match type implies any input is considered a match.
         * 
         * @return builder
         * 
         */
        public Builder matchCriteria(DrgRouteDistributionStatementMatchCriteriaArgs matchCriteria) {
            return matchCriteria(Output.of(matchCriteria));
        }

        /**
         * @param priority (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
         * 
         * @return builder
         * 
         */
        public Builder priority(@Nullable Output<Integer> priority) {
            $.priority = priority;
            return this;
        }

        /**
         * @param priority (Updatable) This field is used to specify the priority of each statement in a route distribution. The priority will be represented as a number between 0 and 65535 where a lower number indicates a higher priority. When a route is processed, statements are applied in the order defined by their priority. The first matching rule dictates the action that will be taken on the route.
         * 
         * @return builder
         * 
         */
        public Builder priority(Integer priority) {
            return priority(Output.of(priority));
        }

        public DrgRouteDistributionStatementState build() {
            return $;
        }
    }

}
