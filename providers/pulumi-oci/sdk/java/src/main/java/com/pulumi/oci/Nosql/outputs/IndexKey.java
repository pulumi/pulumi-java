// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class IndexKey {
    /**
     * @return The name of a column to be included as an index key.
     * 
     */
    private final String columnName;
    /**
     * @return If the specified column is of type JSON, jsonFieldType contains the type of the field indicated by jsonPath.
     * 
     */
    private final @Nullable String jsonFieldType;
    /**
     * @return If the specified column is of type JSON, jsonPath contains a dotted path indicating the field within the JSON object that will be the index key.
     * 
     */
    private final @Nullable String jsonPath;

    @CustomType.Constructor
    private IndexKey(
        @CustomType.Parameter("columnName") String columnName,
        @CustomType.Parameter("jsonFieldType") @Nullable String jsonFieldType,
        @CustomType.Parameter("jsonPath") @Nullable String jsonPath) {
        this.columnName = columnName;
        this.jsonFieldType = jsonFieldType;
        this.jsonPath = jsonPath;
    }

    /**
     * @return The name of a column to be included as an index key.
     * 
     */
    public String columnName() {
        return this.columnName;
    }
    /**
     * @return If the specified column is of type JSON, jsonFieldType contains the type of the field indicated by jsonPath.
     * 
     */
    public Optional<String> jsonFieldType() {
        return Optional.ofNullable(this.jsonFieldType);
    }
    /**
     * @return If the specified column is of type JSON, jsonPath contains a dotted path indicating the field within the JSON object that will be the index key.
     * 
     */
    public Optional<String> jsonPath() {
        return Optional.ofNullable(this.jsonPath);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(IndexKey defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String columnName;
        private @Nullable String jsonFieldType;
        private @Nullable String jsonPath;

        public Builder() {
    	      // Empty
        }

        public Builder(IndexKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnName = defaults.columnName;
    	      this.jsonFieldType = defaults.jsonFieldType;
    	      this.jsonPath = defaults.jsonPath;
        }

        public Builder columnName(String columnName) {
            this.columnName = Objects.requireNonNull(columnName);
            return this;
        }
        public Builder jsonFieldType(@Nullable String jsonFieldType) {
            this.jsonFieldType = jsonFieldType;
            return this;
        }
        public Builder jsonPath(@Nullable String jsonPath) {
            this.jsonPath = jsonPath;
            return this;
        }        public IndexKey build() {
            return new IndexKey(columnName, jsonFieldType, jsonPath);
        }
    }
}
