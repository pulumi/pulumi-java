// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Bastion.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSessionsSessionTargetResourceDetail {
    /**
     * @return The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
     * 
     */
    private final String sessionType;
    /**
     * @return The display name of the target Compute instance that the session connects to.
     * 
     */
    private final String targetResourceDisplayName;
    /**
     * @return The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
     * 
     */
    private final String targetResourceId;
    /**
     * @return The name of the user on the target resource operating system that the session uses for the connection.
     * 
     */
    private final String targetResourceOperatingSystemUserName;
    /**
     * @return The port number to connect to on the target resource.
     * 
     */
    private final Integer targetResourcePort;
    /**
     * @return The private IP address of the target resource that the session connects to.
     * 
     */
    private final String targetResourcePrivateIpAddress;

    @CustomType.Constructor
    private GetSessionsSessionTargetResourceDetail(
        @CustomType.Parameter("sessionType") String sessionType,
        @CustomType.Parameter("targetResourceDisplayName") String targetResourceDisplayName,
        @CustomType.Parameter("targetResourceId") String targetResourceId,
        @CustomType.Parameter("targetResourceOperatingSystemUserName") String targetResourceOperatingSystemUserName,
        @CustomType.Parameter("targetResourcePort") Integer targetResourcePort,
        @CustomType.Parameter("targetResourcePrivateIpAddress") String targetResourcePrivateIpAddress) {
        this.sessionType = sessionType;
        this.targetResourceDisplayName = targetResourceDisplayName;
        this.targetResourceId = targetResourceId;
        this.targetResourceOperatingSystemUserName = targetResourceOperatingSystemUserName;
        this.targetResourcePort = targetResourcePort;
        this.targetResourcePrivateIpAddress = targetResourcePrivateIpAddress;
    }

    /**
     * @return The Bastion service recognizes two types of sessions, managed SSH sessions and SSH port forwarding sessions. Managed SSH sessions require that the target resource has an OpenSSH server and the Oracle Cloud Agent both running.
     * 
     */
    public String sessionType() {
        return this.sessionType;
    }
    /**
     * @return The display name of the target Compute instance that the session connects to.
     * 
     */
    public String targetResourceDisplayName() {
        return this.targetResourceDisplayName;
    }
    /**
     * @return The unique identifier (OCID) of the target resource (a Compute instance, for example) that the session connects to.
     * 
     */
    public String targetResourceId() {
        return this.targetResourceId;
    }
    /**
     * @return The name of the user on the target resource operating system that the session uses for the connection.
     * 
     */
    public String targetResourceOperatingSystemUserName() {
        return this.targetResourceOperatingSystemUserName;
    }
    /**
     * @return The port number to connect to on the target resource.
     * 
     */
    public Integer targetResourcePort() {
        return this.targetResourcePort;
    }
    /**
     * @return The private IP address of the target resource that the session connects to.
     * 
     */
    public String targetResourcePrivateIpAddress() {
        return this.targetResourcePrivateIpAddress;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSessionsSessionTargetResourceDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String sessionType;
        private String targetResourceDisplayName;
        private String targetResourceId;
        private String targetResourceOperatingSystemUserName;
        private Integer targetResourcePort;
        private String targetResourcePrivateIpAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSessionsSessionTargetResourceDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sessionType = defaults.sessionType;
    	      this.targetResourceDisplayName = defaults.targetResourceDisplayName;
    	      this.targetResourceId = defaults.targetResourceId;
    	      this.targetResourceOperatingSystemUserName = defaults.targetResourceOperatingSystemUserName;
    	      this.targetResourcePort = defaults.targetResourcePort;
    	      this.targetResourcePrivateIpAddress = defaults.targetResourcePrivateIpAddress;
        }

        public Builder sessionType(String sessionType) {
            this.sessionType = Objects.requireNonNull(sessionType);
            return this;
        }
        public Builder targetResourceDisplayName(String targetResourceDisplayName) {
            this.targetResourceDisplayName = Objects.requireNonNull(targetResourceDisplayName);
            return this;
        }
        public Builder targetResourceId(String targetResourceId) {
            this.targetResourceId = Objects.requireNonNull(targetResourceId);
            return this;
        }
        public Builder targetResourceOperatingSystemUserName(String targetResourceOperatingSystemUserName) {
            this.targetResourceOperatingSystemUserName = Objects.requireNonNull(targetResourceOperatingSystemUserName);
            return this;
        }
        public Builder targetResourcePort(Integer targetResourcePort) {
            this.targetResourcePort = Objects.requireNonNull(targetResourcePort);
            return this;
        }
        public Builder targetResourcePrivateIpAddress(String targetResourcePrivateIpAddress) {
            this.targetResourcePrivateIpAddress = Objects.requireNonNull(targetResourcePrivateIpAddress);
            return this;
        }        public GetSessionsSessionTargetResourceDetail build() {
            return new GetSessionsSessionTargetResourceDetail(sessionType, targetResourceDisplayName, targetResourceId, targetResourceOperatingSystemUserName, targetResourcePort, targetResourcePrivateIpAddress);
        }
    }
}
