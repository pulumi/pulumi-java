// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Identity.SwiftPasswordArgs;
import com.pulumi.oci.Identity.inputs.SwiftPasswordState;
import com.pulumi.oci.Utilities;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource provides the Swift Password resource in Oracle Cloud Infrastructure Identity service.
 * 
 * **Deprecated. Use [CreateAuthToken](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/AuthToken/CreateAuthToken) instead.**
 * 
 * Creates a new Swift password for the specified user. For information about what Swift passwords are for, see
 * [Managing User Credentials](https://docs.cloud.oracle.com/iaas/Content/Identity/Tasks/managingcredentials.htm).
 * 
 * You must specify a *description* for the Swift password (although it can be an empty string). It does not
 * have to be unique, and you can change it anytime with
 * [UpdateSwiftPassword](https://docs.cloud.oracle.com/iaas/api/#/en/identity/20160918/SwiftPassword/UpdateSwiftPassword).
 * 
 * Every user has permission to create a Swift password for *their own user ID*. An administrator in your organization
 * does not need to write a policy to give users this ability. To compare, administrators who have permission to the
 * tenancy can use this operation to create a Swift password for any user, including themselves.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * SwiftPasswords can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Identity/swiftPassword:SwiftPassword test_swift_password &#34;users/{userId}/swiftPasswords/{swiftPasswordId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Identity/swiftPassword:SwiftPassword")
public class SwiftPassword extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The description you assign to the Swift password during creation. Does not have to be unique, and it&#39;s changeable.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return (Updatable) The description you assign to the Swift password during creation. Does not have to be unique, and it&#39;s changeable.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * Date and time when this password will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Export(name="expiresOn", type=String.class, parameters={})
    private Output<String> expiresOn;

    /**
     * @return Date and time when this password will expire, in the format defined by RFC3339. Null if it never expires.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Output<String> expiresOn() {
        return this.expiresOn;
    }
    /**
     * The detailed status of INACTIVE lifecycleState.
     * 
     */
    @Export(name="inactiveState", type=String.class, parameters={})
    private Output<String> inactiveState;

    /**
     * @return The detailed status of INACTIVE lifecycleState.
     * 
     */
    public Output<String> inactiveState() {
        return this.inactiveState;
    }
    /**
     * The Swift password. The value is available only in the response for `CreateSwiftPassword`, and not for `ListSwiftPasswords` or `UpdateSwiftPassword`.
     * 
     */
    @Export(name="password", type=String.class, parameters={})
    private Output<String> password;

    /**
     * @return The Swift password. The value is available only in the response for `CreateSwiftPassword`, and not for `ListSwiftPasswords` or `UpdateSwiftPassword`.
     * 
     */
    public Output<String> password() {
        return this.password;
    }
    /**
     * The password&#39;s current state.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The password&#39;s current state.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Date and time the `SwiftPassword` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Export(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    /**
     * @return Date and time the `SwiftPassword` object was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The OCID of the user.
     * 
     */
    @Export(name="userId", type=String.class, parameters={})
    private Output<String> userId;

    /**
     * @return The OCID of the user.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SwiftPassword(String name) {
        this(name, SwiftPasswordArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SwiftPassword(String name, SwiftPasswordArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SwiftPassword(String name, SwiftPasswordArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Identity/swiftPassword:SwiftPassword", name, args == null ? SwiftPasswordArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private SwiftPassword(String name, Output<String> id, @Nullable SwiftPasswordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Identity/swiftPassword:SwiftPassword", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SwiftPassword get(String name, Output<String> id, @Nullable SwiftPasswordState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SwiftPassword(name, id, state, options);
    }
}
