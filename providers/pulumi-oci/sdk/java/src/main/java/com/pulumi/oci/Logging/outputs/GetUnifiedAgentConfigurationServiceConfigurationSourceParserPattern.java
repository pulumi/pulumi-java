// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUnifiedAgentConfigurationServiceConfigurationSourceParserPattern {
    /**
     * @return Process value using the specified format. This is available only when time_type is a string.
     * 
     */
    private final String fieldTimeFormat;
    /**
     * @return Specify the time field for the event time. If the event doesn&#39;t have this field, the current time is used.
     * 
     */
    private final String fieldTimeKey;
    /**
     * @return Use the specified time zone. The time value can be parsed or formatted in the specified time zone.
     * 
     */
    private final String fieldTimeZone;
    /**
     * @return The name key to tag this grok pattern.
     * 
     */
    private final String name;
    /**
     * @return The grok pattern.
     * 
     */
    private final String pattern;

    @CustomType.Constructor
    private GetUnifiedAgentConfigurationServiceConfigurationSourceParserPattern(
        @CustomType.Parameter("fieldTimeFormat") String fieldTimeFormat,
        @CustomType.Parameter("fieldTimeKey") String fieldTimeKey,
        @CustomType.Parameter("fieldTimeZone") String fieldTimeZone,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("pattern") String pattern) {
        this.fieldTimeFormat = fieldTimeFormat;
        this.fieldTimeKey = fieldTimeKey;
        this.fieldTimeZone = fieldTimeZone;
        this.name = name;
        this.pattern = pattern;
    }

    /**
     * @return Process value using the specified format. This is available only when time_type is a string.
     * 
     */
    public String fieldTimeFormat() {
        return this.fieldTimeFormat;
    }
    /**
     * @return Specify the time field for the event time. If the event doesn&#39;t have this field, the current time is used.
     * 
     */
    public String fieldTimeKey() {
        return this.fieldTimeKey;
    }
    /**
     * @return Use the specified time zone. The time value can be parsed or formatted in the specified time zone.
     * 
     */
    public String fieldTimeZone() {
        return this.fieldTimeZone;
    }
    /**
     * @return The name key to tag this grok pattern.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The grok pattern.
     * 
     */
    public String pattern() {
        return this.pattern;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUnifiedAgentConfigurationServiceConfigurationSourceParserPattern defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String fieldTimeFormat;
        private String fieldTimeKey;
        private String fieldTimeZone;
        private String name;
        private String pattern;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUnifiedAgentConfigurationServiceConfigurationSourceParserPattern defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fieldTimeFormat = defaults.fieldTimeFormat;
    	      this.fieldTimeKey = defaults.fieldTimeKey;
    	      this.fieldTimeZone = defaults.fieldTimeZone;
    	      this.name = defaults.name;
    	      this.pattern = defaults.pattern;
        }

        public Builder fieldTimeFormat(String fieldTimeFormat) {
            this.fieldTimeFormat = Objects.requireNonNull(fieldTimeFormat);
            return this;
        }
        public Builder fieldTimeKey(String fieldTimeKey) {
            this.fieldTimeKey = Objects.requireNonNull(fieldTimeKey);
            return this;
        }
        public Builder fieldTimeZone(String fieldTimeZone) {
            this.fieldTimeZone = Objects.requireNonNull(fieldTimeZone);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder pattern(String pattern) {
            this.pattern = Objects.requireNonNull(pattern);
            return this;
        }        public GetUnifiedAgentConfigurationServiceConfigurationSourceParserPattern build() {
            return new GetUnifiedAgentConfigurationServiceConfigurationSourceParserPattern(fieldTimeFormat, fieldTimeKey, fieldTimeZone, name, pattern);
        }
    }
}
