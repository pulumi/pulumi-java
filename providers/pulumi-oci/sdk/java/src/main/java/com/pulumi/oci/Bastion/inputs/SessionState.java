// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Bastion.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Bastion.inputs.SessionKeyDetailsArgs;
import com.pulumi.oci.Bastion.inputs.SessionTargetResourceDetailsArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SessionState extends com.pulumi.resources.ResourceArgs {

    public static final SessionState Empty = new SessionState();

    /**
     * The unique identifier (OCID) of the bastion on which to create this session.
     * 
     */
    @Import(name="bastionId")
    private @Nullable Output<String> bastionId;

    /**
     * @return The unique identifier (OCID) of the bastion on which to create this session.
     * 
     */
    public Optional<Output<String>> bastionId() {
        return Optional.ofNullable(this.bastionId);
    }

    /**
     * The name of the bastion that is hosting this session.
     * 
     */
    @Import(name="bastionName")
    private @Nullable Output<String> bastionName;

    /**
     * @return The name of the bastion that is hosting this session.
     * 
     */
    public Optional<Output<String>> bastionName() {
        return Optional.ofNullable(this.bastionName);
    }

    /**
     * The public key of the bastion host. You can use this to verify that you&#39;re connecting to the correct bastion.
     * 
     */
    @Import(name="bastionPublicHostKeyInfo")
    private @Nullable Output<String> bastionPublicHostKeyInfo;

    /**
     * @return The public key of the bastion host. You can use this to verify that you&#39;re connecting to the correct bastion.
     * 
     */
    public Optional<Output<String>> bastionPublicHostKeyInfo() {
        return Optional.ofNullable(this.bastionPublicHostKeyInfo);
    }

    /**
     * The username that the session uses to connect to the target resource.
     * 
     */
    @Import(name="bastionUserName")
    private @Nullable Output<String> bastionUserName;

    /**
     * @return The username that the session uses to connect to the target resource.
     * 
     */
    public Optional<Output<String>> bastionUserName() {
        return Optional.ofNullable(this.bastionUserName);
    }

    /**
     * (Updatable) The name of the session.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The name of the session.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Public key details for a bastion session.
     * 
     */
    @Import(name="keyDetails")
    private @Nullable Output<SessionKeyDetailsArgs> keyDetails;

    /**
     * @return Public key details for a bastion session.
     * 
     */
    public Optional<Output<SessionKeyDetailsArgs>> keyDetails() {
        return Optional.ofNullable(this.keyDetails);
    }

    /**
     * The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
     * 
     */
    @Import(name="keyType")
    private @Nullable Output<String> keyType;

    /**
     * @return The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
     * 
     */
    public Optional<Output<String>> keyType() {
        return Optional.ofNullable(this.keyType);
    }

    /**
     * A message describing the current session state in more detail.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current session state in more detail.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The amount of time the session can remain active.
     * 
     */
    @Import(name="sessionTtlInSeconds")
    private @Nullable Output<Integer> sessionTtlInSeconds;

    /**
     * @return The amount of time the session can remain active.
     * 
     */
    public Optional<Output<Integer>> sessionTtlInSeconds() {
        return Optional.ofNullable(this.sessionTtlInSeconds);
    }

    /**
     * The connection message for the session.
     * 
     */
    @Import(name="sshMetadata")
    private @Nullable Output<Map<String,Object>> sshMetadata;

    /**
     * @return The connection message for the session.
     * 
     */
    public Optional<Output<Map<String,Object>>> sshMetadata() {
        return Optional.ofNullable(this.sshMetadata);
    }

    /**
     * The current state of the session.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the session.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Details about a bastion session&#39;s target resource.
     * 
     */
    @Import(name="targetResourceDetails")
    private @Nullable Output<SessionTargetResourceDetailsArgs> targetResourceDetails;

    /**
     * @return Details about a bastion session&#39;s target resource.
     * 
     */
    public Optional<Output<SessionTargetResourceDetailsArgs>> targetResourceDetails() {
        return Optional.ofNullable(this.targetResourceDetails);
    }

    /**
     * The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private SessionState() {}

    private SessionState(SessionState $) {
        this.bastionId = $.bastionId;
        this.bastionName = $.bastionName;
        this.bastionPublicHostKeyInfo = $.bastionPublicHostKeyInfo;
        this.bastionUserName = $.bastionUserName;
        this.displayName = $.displayName;
        this.keyDetails = $.keyDetails;
        this.keyType = $.keyType;
        this.lifecycleDetails = $.lifecycleDetails;
        this.sessionTtlInSeconds = $.sessionTtlInSeconds;
        this.sshMetadata = $.sshMetadata;
        this.state = $.state;
        this.targetResourceDetails = $.targetResourceDetails;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SessionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SessionState $;

        public Builder() {
            $ = new SessionState();
        }

        public Builder(SessionState defaults) {
            $ = new SessionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bastionId The unique identifier (OCID) of the bastion on which to create this session.
         * 
         * @return builder
         * 
         */
        public Builder bastionId(@Nullable Output<String> bastionId) {
            $.bastionId = bastionId;
            return this;
        }

        /**
         * @param bastionId The unique identifier (OCID) of the bastion on which to create this session.
         * 
         * @return builder
         * 
         */
        public Builder bastionId(String bastionId) {
            return bastionId(Output.of(bastionId));
        }

        /**
         * @param bastionName The name of the bastion that is hosting this session.
         * 
         * @return builder
         * 
         */
        public Builder bastionName(@Nullable Output<String> bastionName) {
            $.bastionName = bastionName;
            return this;
        }

        /**
         * @param bastionName The name of the bastion that is hosting this session.
         * 
         * @return builder
         * 
         */
        public Builder bastionName(String bastionName) {
            return bastionName(Output.of(bastionName));
        }

        /**
         * @param bastionPublicHostKeyInfo The public key of the bastion host. You can use this to verify that you&#39;re connecting to the correct bastion.
         * 
         * @return builder
         * 
         */
        public Builder bastionPublicHostKeyInfo(@Nullable Output<String> bastionPublicHostKeyInfo) {
            $.bastionPublicHostKeyInfo = bastionPublicHostKeyInfo;
            return this;
        }

        /**
         * @param bastionPublicHostKeyInfo The public key of the bastion host. You can use this to verify that you&#39;re connecting to the correct bastion.
         * 
         * @return builder
         * 
         */
        public Builder bastionPublicHostKeyInfo(String bastionPublicHostKeyInfo) {
            return bastionPublicHostKeyInfo(Output.of(bastionPublicHostKeyInfo));
        }

        /**
         * @param bastionUserName The username that the session uses to connect to the target resource.
         * 
         * @return builder
         * 
         */
        public Builder bastionUserName(@Nullable Output<String> bastionUserName) {
            $.bastionUserName = bastionUserName;
            return this;
        }

        /**
         * @param bastionUserName The username that the session uses to connect to the target resource.
         * 
         * @return builder
         * 
         */
        public Builder bastionUserName(String bastionUserName) {
            return bastionUserName(Output.of(bastionUserName));
        }

        /**
         * @param displayName (Updatable) The name of the session.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The name of the session.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param keyDetails Public key details for a bastion session.
         * 
         * @return builder
         * 
         */
        public Builder keyDetails(@Nullable Output<SessionKeyDetailsArgs> keyDetails) {
            $.keyDetails = keyDetails;
            return this;
        }

        /**
         * @param keyDetails Public key details for a bastion session.
         * 
         * @return builder
         * 
         */
        public Builder keyDetails(SessionKeyDetailsArgs keyDetails) {
            return keyDetails(Output.of(keyDetails));
        }

        /**
         * @param keyType The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
         * 
         * @return builder
         * 
         */
        public Builder keyType(@Nullable Output<String> keyType) {
            $.keyType = keyType;
            return this;
        }

        /**
         * @param keyType The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
         * 
         * @return builder
         * 
         */
        public Builder keyType(String keyType) {
            return keyType(Output.of(keyType));
        }

        /**
         * @param lifecycleDetails A message describing the current session state in more detail.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current session state in more detail.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param sessionTtlInSeconds The amount of time the session can remain active.
         * 
         * @return builder
         * 
         */
        public Builder sessionTtlInSeconds(@Nullable Output<Integer> sessionTtlInSeconds) {
            $.sessionTtlInSeconds = sessionTtlInSeconds;
            return this;
        }

        /**
         * @param sessionTtlInSeconds The amount of time the session can remain active.
         * 
         * @return builder
         * 
         */
        public Builder sessionTtlInSeconds(Integer sessionTtlInSeconds) {
            return sessionTtlInSeconds(Output.of(sessionTtlInSeconds));
        }

        /**
         * @param sshMetadata The connection message for the session.
         * 
         * @return builder
         * 
         */
        public Builder sshMetadata(@Nullable Output<Map<String,Object>> sshMetadata) {
            $.sshMetadata = sshMetadata;
            return this;
        }

        /**
         * @param sshMetadata The connection message for the session.
         * 
         * @return builder
         * 
         */
        public Builder sshMetadata(Map<String,Object> sshMetadata) {
            return sshMetadata(Output.of(sshMetadata));
        }

        /**
         * @param state The current state of the session.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the session.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param targetResourceDetails Details about a bastion session&#39;s target resource.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceDetails(@Nullable Output<SessionTargetResourceDetailsArgs> targetResourceDetails) {
            $.targetResourceDetails = targetResourceDetails;
            return this;
        }

        /**
         * @param targetResourceDetails Details about a bastion session&#39;s target resource.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceDetails(SessionTargetResourceDetailsArgs targetResourceDetails) {
            return targetResourceDetails(Output.of(targetResourceDetails));
        }

        /**
         * @param timeCreated The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the session was created. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the session was updated. Format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2020-01-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public SessionState build() {
            return $;
        }
    }

}
