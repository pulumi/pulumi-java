// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetExternalNonContainerDatabasesExternalNonContainerDatabase;
import com.pulumi.oci.Database.outputs.GetExternalNonContainerDatabasesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalNonContainerDatabasesResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return The user-friendly name for the external database. The name does not have to be unique.
     * 
     */
    private final @Nullable String displayName;
    /**
     * @return The list of external_non_container_databases.
     * 
     */
    private final List<GetExternalNonContainerDatabasesExternalNonContainerDatabase> externalNonContainerDatabases;
    private final @Nullable List<GetExternalNonContainerDatabasesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The current state of the Oracle Cloud Infrastructure external database resource.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetExternalNonContainerDatabasesResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("externalNonContainerDatabases") List<GetExternalNonContainerDatabasesExternalNonContainerDatabase> externalNonContainerDatabases,
        @CustomType.Parameter("filters") @Nullable List<GetExternalNonContainerDatabasesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("state") @Nullable String state) {
        this.compartmentId = compartmentId;
        this.displayName = displayName;
        this.externalNonContainerDatabases = externalNonContainerDatabases;
        this.filters = filters;
        this.id = id;
        this.state = state;
    }

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The user-friendly name for the external database. The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The list of external_non_container_databases.
     * 
     */
    public List<GetExternalNonContainerDatabasesExternalNonContainerDatabase> externalNonContainerDatabases() {
        return this.externalNonContainerDatabases;
    }
    public List<GetExternalNonContainerDatabasesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current state of the Oracle Cloud Infrastructure external database resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalNonContainerDatabasesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private List<GetExternalNonContainerDatabasesExternalNonContainerDatabase> externalNonContainerDatabases;
        private @Nullable List<GetExternalNonContainerDatabasesFilter> filters;
        private String id;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetExternalNonContainerDatabasesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.externalNonContainerDatabases = defaults.externalNonContainerDatabases;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder externalNonContainerDatabases(List<GetExternalNonContainerDatabasesExternalNonContainerDatabase> externalNonContainerDatabases) {
            this.externalNonContainerDatabases = Objects.requireNonNull(externalNonContainerDatabases);
            return this;
        }
        public Builder externalNonContainerDatabases(GetExternalNonContainerDatabasesExternalNonContainerDatabase... externalNonContainerDatabases) {
            return externalNonContainerDatabases(List.of(externalNonContainerDatabases));
        }
        public Builder filters(@Nullable List<GetExternalNonContainerDatabasesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetExternalNonContainerDatabasesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetExternalNonContainerDatabasesResult build() {
            return new GetExternalNonContainerDatabasesResult(compartmentId, displayName, externalNonContainerDatabases, filters, id, state);
        }
    }
}
