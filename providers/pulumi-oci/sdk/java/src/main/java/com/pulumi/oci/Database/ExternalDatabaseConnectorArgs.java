// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Database.inputs.ExternalDatabaseConnectorConnectionCredentialsArgs;
import com.pulumi.oci.Database.inputs.ExternalDatabaseConnectorConnectionStringArgs;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExternalDatabaseConnectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExternalDatabaseConnectorArgs Empty = new ExternalDatabaseConnectorArgs();

    /**
     * (Updatable) Credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector crendentials.
     * 
     */
    @Import(name="connectionCredentials", required=true)
    private Output<ExternalDatabaseConnectorConnectionCredentialsArgs> connectionCredentials;

    /**
     * @return (Updatable) Credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector crendentials.
     * 
     */
    public Output<ExternalDatabaseConnectorConnectionCredentialsArgs> connectionCredentials() {
        return this.connectionCredentials;
    }

    /**
     * (Updatable) The Oracle Database connection string.
     * 
     */
    @Import(name="connectionString", required=true)
    private Output<ExternalDatabaseConnectorConnectionStringArgs> connectionString;

    /**
     * @return (Updatable) The Oracle Database connection string.
     * 
     */
    public Output<ExternalDatabaseConnectorConnectionStringArgs> connectionString() {
        return this.connectionString;
    }

    /**
     * The ID of the agent used for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    @Import(name="connectorAgentId", required=true)
    private Output<String> connectorAgentId;

    /**
     * @return The ID of the agent used for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    public Output<String> connectorAgentId() {
        return this.connectorAgentId;
    }

    /**
     * (Updatable) The type of connector used by the external database resource.
     * 
     */
    @Import(name="connectorType")
    private @Nullable Output<String> connectorType;

    /**
     * @return (Updatable) The type of connector used by the external database resource.
     * 
     */
    public Optional<Output<String>> connectorType() {
        return Optional.ofNullable(this.connectorType);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The user-friendly name for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails). The name does not have to be unique.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) The user-friendly name for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails). The name does not have to be unique.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database resource.
     * 
     */
    @Import(name="externalDatabaseId", required=true)
    private Output<String> externalDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database resource.
     * 
     */
    public Output<String> externalDatabaseId() {
        return this.externalDatabaseId;
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    private ExternalDatabaseConnectorArgs() {}

    private ExternalDatabaseConnectorArgs(ExternalDatabaseConnectorArgs $) {
        this.connectionCredentials = $.connectionCredentials;
        this.connectionString = $.connectionString;
        this.connectorAgentId = $.connectorAgentId;
        this.connectorType = $.connectorType;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.externalDatabaseId = $.externalDatabaseId;
        this.freeformTags = $.freeformTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalDatabaseConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalDatabaseConnectorArgs $;

        public Builder() {
            $ = new ExternalDatabaseConnectorArgs();
        }

        public Builder(ExternalDatabaseConnectorArgs defaults) {
            $ = new ExternalDatabaseConnectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionCredentials (Updatable) Credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector crendentials.
         * 
         * @return builder
         * 
         */
        public Builder connectionCredentials(Output<ExternalDatabaseConnectorConnectionCredentialsArgs> connectionCredentials) {
            $.connectionCredentials = connectionCredentials;
            return this;
        }

        /**
         * @param connectionCredentials (Updatable) Credentials used to connect to the database. Currently only the `DETAILS` type is supported for creating MACS connector crendentials.
         * 
         * @return builder
         * 
         */
        public Builder connectionCredentials(ExternalDatabaseConnectorConnectionCredentialsArgs connectionCredentials) {
            return connectionCredentials(Output.of(connectionCredentials));
        }

        /**
         * @param connectionString (Updatable) The Oracle Database connection string.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(Output<ExternalDatabaseConnectorConnectionStringArgs> connectionString) {
            $.connectionString = connectionString;
            return this;
        }

        /**
         * @param connectionString (Updatable) The Oracle Database connection string.
         * 
         * @return builder
         * 
         */
        public Builder connectionString(ExternalDatabaseConnectorConnectionStringArgs connectionString) {
            return connectionString(Output.of(connectionString));
        }

        /**
         * @param connectorAgentId The ID of the agent used for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         * 
         * @return builder
         * 
         */
        public Builder connectorAgentId(Output<String> connectorAgentId) {
            $.connectorAgentId = connectorAgentId;
            return this;
        }

        /**
         * @param connectorAgentId The ID of the agent used for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         * 
         * @return builder
         * 
         */
        public Builder connectorAgentId(String connectorAgentId) {
            return connectorAgentId(Output.of(connectorAgentId));
        }

        /**
         * @param connectorType (Updatable) The type of connector used by the external database resource.
         * 
         * @return builder
         * 
         */
        public Builder connectorType(@Nullable Output<String> connectorType) {
            $.connectorType = connectorType;
            return this;
        }

        /**
         * @param connectorType (Updatable) The type of connector used by the external database resource.
         * 
         * @return builder
         * 
         */
        public Builder connectorType(String connectorType) {
            return connectorType(Output.of(connectorType));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) The user-friendly name for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails). The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The user-friendly name for the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails). The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param externalDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database resource.
         * 
         * @return builder
         * 
         */
        public Builder externalDatabaseId(Output<String> externalDatabaseId) {
            $.externalDatabaseId = externalDatabaseId;
            return this;
        }

        /**
         * @param externalDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database resource.
         * 
         * @return builder
         * 
         */
        public Builder externalDatabaseId(String externalDatabaseId) {
            return externalDatabaseId(Output.of(externalDatabaseId));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        public ExternalDatabaseConnectorArgs build() {
            $.connectionCredentials = Objects.requireNonNull($.connectionCredentials, "expected parameter 'connectionCredentials' to be non-null");
            $.connectionString = Objects.requireNonNull($.connectionString, "expected parameter 'connectionString' to be non-null");
            $.connectorAgentId = Objects.requireNonNull($.connectorAgentId, "expected parameter 'connectorAgentId' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.externalDatabaseId = Objects.requireNonNull($.externalDatabaseId, "expected parameter 'externalDatabaseId' to be non-null");
            return $;
        }
    }

}
