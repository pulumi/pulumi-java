// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetVolumeGroupsFilter;
import com.pulumi.oci.Core.outputs.GetVolumeGroupsVolumeGroup;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetVolumeGroupsResult {
    /**
     * @return The availability domain of the boot volume replica replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private final @Nullable String availabilityDomain;
    /**
     * @return The OCID of the compartment that contains the volume group.
     * 
     */
    private final String compartmentId;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetVolumeGroupsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The current state of a volume group.
     * 
     */
    private final @Nullable String state;
    /**
     * @return The list of volume_groups.
     * 
     */
    private final List<GetVolumeGroupsVolumeGroup> volumeGroups;

    @CustomType.Constructor
    private GetVolumeGroupsResult(
        @CustomType.Parameter("availabilityDomain") @Nullable String availabilityDomain,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetVolumeGroupsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("volumeGroups") List<GetVolumeGroupsVolumeGroup> volumeGroups) {
        this.availabilityDomain = availabilityDomain;
        this.compartmentId = compartmentId;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.state = state;
        this.volumeGroups = volumeGroups;
    }

    /**
     * @return The availability domain of the boot volume replica replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    /**
     * @return The OCID of the compartment that contains the volume group.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetVolumeGroupsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current state of a volume group.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The list of volume_groups.
     * 
     */
    public List<GetVolumeGroupsVolumeGroup> volumeGroups() {
        return this.volumeGroups;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeGroupsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String availabilityDomain;
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetVolumeGroupsFilter> filters;
        private String id;
        private @Nullable String state;
        private List<GetVolumeGroupsVolumeGroup> volumeGroups;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVolumeGroupsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.volumeGroups = defaults.volumeGroups;
        }

        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetVolumeGroupsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetVolumeGroupsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder volumeGroups(List<GetVolumeGroupsVolumeGroup> volumeGroups) {
            this.volumeGroups = Objects.requireNonNull(volumeGroups);
            return this;
        }
        public Builder volumeGroups(GetVolumeGroupsVolumeGroup... volumeGroups) {
            return volumeGroups(List.of(volumeGroups));
        }        public GetVolumeGroupsResult build() {
            return new GetVolumeGroupsResult(availabilityDomain, compartmentId, displayName, filters, id, state, volumeGroups);
        }
    }
}
