// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ComputeInstanceAgent.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ComputeInstanceAgent.inputs.GetInstanceAgentPluginsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetInstanceAgentPluginsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceAgentPluginsArgs Empty = new GetInstanceAgentPluginsArgs();

    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable Output<List<GetInstanceAgentPluginsFilterArgs>> filters;

    public Optional<Output<List<GetInstanceAgentPluginsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of the instance.
     * 
     */
    @Import(name="instanceagentId", required=true)
    private Output<String> instanceagentId;

    /**
     * @return The OCID of the instance.
     * 
     */
    public Output<String> instanceagentId() {
        return this.instanceagentId;
    }

    /**
     * The plugin name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The plugin name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The plugin status
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The plugin status
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    private GetInstanceAgentPluginsArgs() {}

    private GetInstanceAgentPluginsArgs(GetInstanceAgentPluginsArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.instanceagentId = $.instanceagentId;
        this.name = $.name;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceAgentPluginsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceAgentPluginsArgs $;

        public Builder() {
            $ = new GetInstanceAgentPluginsArgs();
        }

        public Builder(GetInstanceAgentPluginsArgs defaults) {
            $ = new GetInstanceAgentPluginsArgs(Objects.requireNonNull(defaults));
        }

        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(@Nullable Output<List<GetInstanceAgentPluginsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetInstanceAgentPluginsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetInstanceAgentPluginsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param instanceagentId The OCID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceagentId(Output<String> instanceagentId) {
            $.instanceagentId = instanceagentId;
            return this;
        }

        /**
         * @param instanceagentId The OCID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceagentId(String instanceagentId) {
            return instanceagentId(Output.of(instanceagentId));
        }

        /**
         * @param name The plugin name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The plugin name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param status The plugin status
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The plugin status
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GetInstanceAgentPluginsArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.instanceagentId = Objects.requireNonNull($.instanceagentId, "expected parameter 'instanceagentId' to be non-null");
            return $;
        }
    }

}
