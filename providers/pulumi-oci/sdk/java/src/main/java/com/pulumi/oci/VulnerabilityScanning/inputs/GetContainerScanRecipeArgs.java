// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VulnerabilityScanning.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetContainerScanRecipeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetContainerScanRecipeArgs Empty = new GetContainerScanRecipeArgs();

    /**
     * unique ContainerScanRecipe identifier
     * 
     */
    @Import(name="containerScanRecipeId", required=true)
    private String containerScanRecipeId;

    /**
     * @return unique ContainerScanRecipe identifier
     * 
     */
    public String containerScanRecipeId() {
        return this.containerScanRecipeId;
    }

    private GetContainerScanRecipeArgs() {}

    private GetContainerScanRecipeArgs(GetContainerScanRecipeArgs $) {
        this.containerScanRecipeId = $.containerScanRecipeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetContainerScanRecipeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetContainerScanRecipeArgs $;

        public Builder() {
            $ = new GetContainerScanRecipeArgs();
        }

        public Builder(GetContainerScanRecipeArgs defaults) {
            $ = new GetContainerScanRecipeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param containerScanRecipeId unique ContainerScanRecipe identifier
         * 
         * @return builder
         * 
         */
        public Builder containerScanRecipeId(String containerScanRecipeId) {
            $.containerScanRecipeId = containerScanRecipeId;
            return this;
        }

        public GetContainerScanRecipeArgs build() {
            $.containerScanRecipeId = Objects.requireNonNull($.containerScanRecipeId, "expected parameter 'containerScanRecipeId' to be non-null");
            return $;
        }
    }

}
