// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetVirtualCircuitsVirtualCircuitCrossConnectMapping;
import com.pulumi.oci.Core.outputs.GetVirtualCircuitsVirtualCircuitPublicPrefix;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVirtualCircuitsVirtualCircuit {
    /**
     * @return The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
     * 
     */
    private final String bandwidthShapeName;
    /**
     * @return Set to ENABLED to activate the  bgp session of virtual circuit, DISABLED to deactivate.
     * 
     */
    private final String bgpAdminState;
    /**
     * @return The state of the Ipv6 BGP session associated with the virtual circuit.
     * 
     */
    private final String bgpIpv6sessionState;
    /**
     * @return Deprecated. Instead use the information in [FastConnectProviderService](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/).
     * 
     * @deprecated
     * The &#39;bgp_management&#39; field has been deprecated. Please use the &#39;oci_core_fast_connect_provider_service&#39; data source instead.
     * 
     */
    @Deprecated /* The 'bgp_management' field has been deprecated. Please use the 'oci_core_fast_connect_provider_service' data source instead. */
    private final String bgpManagement;
    /**
     * @return The state of the Ipv4 BGP session associated with the virtual circuit.
     * 
     */
    private final String bgpSessionState;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return An array of mappings, each containing properties for a cross-connect or cross-connect group that is associated with this virtual circuit.
     * 
     */
    private final List<GetVirtualCircuitsVirtualCircuitCrossConnectMapping> crossConnectMappings;
    /**
     * @return The BGP ASN of the network at the other end of the BGP session from Oracle. If the session is between the customer&#39;s edge router and Oracle, the value is the customer&#39;s ASN. If the BGP session is between the provider&#39;s edge router and Oracle, the value is the provider&#39;s ASN. Can be a 2-byte or 4-byte ASN. Uses &#34;asplain&#34; format.
     * 
     */
    private final String customerAsn;
    /**
     * @return Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
     * 
     * @deprecated
     * The &#39;customer_bgp_asn&#39; field has been deprecated. Please use &#39;customer_asn&#39; instead.
     * 
     */
    @Deprecated /* The 'customer_bgp_asn' field has been deprecated. Please use 'customer_asn' instead. */
    private final Integer customerBgpAsn;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private final String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer&#39;s [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses. Applicable only to private virtual circuits.
     * 
     */
    private final String gatewayId;
    /**
     * @return The virtual circuit&#39;s Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     * 
     */
    private final String id;
    /**
     * @return The layer 3 IP MTU to use on this virtual circuit.
     * 
     */
    private final String ipMtu;
    /**
     * @return Set to true to enable BFD for ipv4 Bgp Peering, false to disable. If not set, default is false
     * 
     */
    private final Boolean isBfdEnabled;
    /**
     * @return The Oracle BGP ASN.
     * 
     */
    private final Integer oracleBgpAsn;
    /**
     * @return The OCID of the service offered by the provider (if the customer is connecting via a provider).
     * 
     */
    private final String providerServiceId;
    /**
     * @return The service key name offered by the provider (if the customer is connecting via a provider).
     * 
     */
    private final String providerServiceKeyName;
    /**
     * @return The provider&#39;s state in relation to this virtual circuit (if the customer is connecting via a provider). ACTIVE means the provider has provisioned the virtual circuit from their end. INACTIVE means the provider has not yet provisioned the virtual circuit, or has de-provisioned it.
     * 
     */
    private final String providerState;
    /**
     * @return For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection. All prefix sizes are allowed.
     * 
     */
    private final List<GetVirtualCircuitsVirtualCircuitPublicPrefix> publicPrefixes;
    /**
     * @return Provider-supplied reference information about this virtual circuit (if the customer is connecting via a provider).
     * 
     */
    private final String referenceComment;
    /**
     * @return The Oracle Cloud Infrastructure region where this virtual circuit is located.
     * 
     */
    private final String region;
    /**
     * @return The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
     * 
     */
    private final List<String> routingPolicies;
    /**
     * @return Provider service type.
     * 
     */
    private final String serviceType;
    /**
     * @return A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     * 
     */
    private final String state;
    /**
     * @return The date and time the virtual circuit was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private final String timeCreated;
    /**
     * @return Whether the virtual circuit supports private or public peering. For more information, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
     * 
     */
    private final String type;
    private final String virtualCircuitId;

    @CustomType.Constructor
    private GetVirtualCircuitsVirtualCircuit(
        @CustomType.Parameter("bandwidthShapeName") String bandwidthShapeName,
        @CustomType.Parameter("bgpAdminState") String bgpAdminState,
        @CustomType.Parameter("bgpIpv6sessionState") String bgpIpv6sessionState,
        @CustomType.Parameter("bgpManagement") String bgpManagement,
        @CustomType.Parameter("bgpSessionState") String bgpSessionState,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("crossConnectMappings") List<GetVirtualCircuitsVirtualCircuitCrossConnectMapping> crossConnectMappings,
        @CustomType.Parameter("customerAsn") String customerAsn,
        @CustomType.Parameter("customerBgpAsn") Integer customerBgpAsn,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("gatewayId") String gatewayId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ipMtu") String ipMtu,
        @CustomType.Parameter("isBfdEnabled") Boolean isBfdEnabled,
        @CustomType.Parameter("oracleBgpAsn") Integer oracleBgpAsn,
        @CustomType.Parameter("providerServiceId") String providerServiceId,
        @CustomType.Parameter("providerServiceKeyName") String providerServiceKeyName,
        @CustomType.Parameter("providerState") String providerState,
        @CustomType.Parameter("publicPrefixes") List<GetVirtualCircuitsVirtualCircuitPublicPrefix> publicPrefixes,
        @CustomType.Parameter("referenceComment") String referenceComment,
        @CustomType.Parameter("region") String region,
        @CustomType.Parameter("routingPolicies") List<String> routingPolicies,
        @CustomType.Parameter("serviceType") String serviceType,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("virtualCircuitId") String virtualCircuitId) {
        this.bandwidthShapeName = bandwidthShapeName;
        this.bgpAdminState = bgpAdminState;
        this.bgpIpv6sessionState = bgpIpv6sessionState;
        this.bgpManagement = bgpManagement;
        this.bgpSessionState = bgpSessionState;
        this.compartmentId = compartmentId;
        this.crossConnectMappings = crossConnectMappings;
        this.customerAsn = customerAsn;
        this.customerBgpAsn = customerBgpAsn;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.gatewayId = gatewayId;
        this.id = id;
        this.ipMtu = ipMtu;
        this.isBfdEnabled = isBfdEnabled;
        this.oracleBgpAsn = oracleBgpAsn;
        this.providerServiceId = providerServiceId;
        this.providerServiceKeyName = providerServiceKeyName;
        this.providerState = providerState;
        this.publicPrefixes = publicPrefixes;
        this.referenceComment = referenceComment;
        this.region = region;
        this.routingPolicies = routingPolicies;
        this.serviceType = serviceType;
        this.state = state;
        this.timeCreated = timeCreated;
        this.type = type;
        this.virtualCircuitId = virtualCircuitId;
    }

    /**
     * @return The provisioned data rate of the connection. To get a list of the available bandwidth levels (that is, shapes), see [ListFastConnectProviderServiceVirtualCircuitBandwidthShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/ListFastConnectProviderVirtualCircuitBandwidthShapes).  Example: `10 Gbps`
     * 
     */
    public String bandwidthShapeName() {
        return this.bandwidthShapeName;
    }
    /**
     * @return Set to ENABLED to activate the  bgp session of virtual circuit, DISABLED to deactivate.
     * 
     */
    public String bgpAdminState() {
        return this.bgpAdminState;
    }
    /**
     * @return The state of the Ipv6 BGP session associated with the virtual circuit.
     * 
     */
    public String bgpIpv6sessionState() {
        return this.bgpIpv6sessionState;
    }
    /**
     * @return Deprecated. Instead use the information in [FastConnectProviderService](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/FastConnectProviderService/).
     * 
     * @deprecated
     * The &#39;bgp_management&#39; field has been deprecated. Please use the &#39;oci_core_fast_connect_provider_service&#39; data source instead.
     * 
     */
    @Deprecated /* The 'bgp_management' field has been deprecated. Please use the 'oci_core_fast_connect_provider_service' data source instead. */
    public String bgpManagement() {
        return this.bgpManagement;
    }
    /**
     * @return The state of the Ipv4 BGP session associated with the virtual circuit.
     * 
     */
    public String bgpSessionState() {
        return this.bgpSessionState;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return An array of mappings, each containing properties for a cross-connect or cross-connect group that is associated with this virtual circuit.
     * 
     */
    public List<GetVirtualCircuitsVirtualCircuitCrossConnectMapping> crossConnectMappings() {
        return this.crossConnectMappings;
    }
    /**
     * @return The BGP ASN of the network at the other end of the BGP session from Oracle. If the session is between the customer&#39;s edge router and Oracle, the value is the customer&#39;s ASN. If the BGP session is between the provider&#39;s edge router and Oracle, the value is the provider&#39;s ASN. Can be a 2-byte or 4-byte ASN. Uses &#34;asplain&#34; format.
     * 
     */
    public String customerAsn() {
        return this.customerAsn;
    }
    /**
     * @return Deprecated. Instead use `customerAsn`. If you specify values for both, the request will be rejected.
     * 
     * @deprecated
     * The &#39;customer_bgp_asn&#39; field has been deprecated. Please use &#39;customer_asn&#39; instead.
     * 
     */
    @Deprecated /* The 'customer_bgp_asn' field has been deprecated. Please use 'customer_asn' instead. */
    public Integer customerBgpAsn() {
        return this.customerBgpAsn;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the customer&#39;s [dynamic routing gateway (DRG)](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Drg) that this virtual circuit uses. Applicable only to private virtual circuits.
     * 
     */
    public String gatewayId() {
        return this.gatewayId;
    }
    /**
     * @return The virtual circuit&#39;s Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The layer 3 IP MTU to use on this virtual circuit.
     * 
     */
    public String ipMtu() {
        return this.ipMtu;
    }
    /**
     * @return Set to true to enable BFD for ipv4 Bgp Peering, false to disable. If not set, default is false
     * 
     */
    public Boolean isBfdEnabled() {
        return this.isBfdEnabled;
    }
    /**
     * @return The Oracle BGP ASN.
     * 
     */
    public Integer oracleBgpAsn() {
        return this.oracleBgpAsn;
    }
    /**
     * @return The OCID of the service offered by the provider (if the customer is connecting via a provider).
     * 
     */
    public String providerServiceId() {
        return this.providerServiceId;
    }
    /**
     * @return The service key name offered by the provider (if the customer is connecting via a provider).
     * 
     */
    public String providerServiceKeyName() {
        return this.providerServiceKeyName;
    }
    /**
     * @return The provider&#39;s state in relation to this virtual circuit (if the customer is connecting via a provider). ACTIVE means the provider has provisioned the virtual circuit from their end. INACTIVE means the provider has not yet provisioned the virtual circuit, or has de-provisioned it.
     * 
     */
    public String providerState() {
        return this.providerState;
    }
    /**
     * @return For a public virtual circuit. The public IP prefixes (CIDRs) the customer wants to advertise across the connection. All prefix sizes are allowed.
     * 
     */
    public List<GetVirtualCircuitsVirtualCircuitPublicPrefix> publicPrefixes() {
        return this.publicPrefixes;
    }
    /**
     * @return Provider-supplied reference information about this virtual circuit (if the customer is connecting via a provider).
     * 
     */
    public String referenceComment() {
        return this.referenceComment;
    }
    /**
     * @return The Oracle Cloud Infrastructure region where this virtual circuit is located.
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return The routing policy sets how routing information about the Oracle cloud is shared over a public virtual circuit. Policies available are: `ORACLE_SERVICE_NETWORK`, `REGIONAL`, `MARKET_LEVEL`, and `GLOBAL`. See [Route Filtering](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/routingonprem.htm#route_filtering) for details. By default, routing information is shared for all routes in the same market.
     * 
     */
    public List<String> routingPolicies() {
        return this.routingPolicies;
    }
    /**
     * @return Provider service type.
     * 
     */
    public String serviceType() {
        return this.serviceType;
    }
    /**
     * @return A filter to return only resources that match the specified lifecycle state. The value is case insensitive.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the virtual circuit was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Whether the virtual circuit supports private or public peering. For more information, see [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
     * 
     */
    public String type() {
        return this.type;
    }
    public String virtualCircuitId() {
        return this.virtualCircuitId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVirtualCircuitsVirtualCircuit defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bandwidthShapeName;
        private String bgpAdminState;
        private String bgpIpv6sessionState;
        private String bgpManagement;
        private String bgpSessionState;
        private String compartmentId;
        private List<GetVirtualCircuitsVirtualCircuitCrossConnectMapping> crossConnectMappings;
        private String customerAsn;
        private Integer customerBgpAsn;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String gatewayId;
        private String id;
        private String ipMtu;
        private Boolean isBfdEnabled;
        private Integer oracleBgpAsn;
        private String providerServiceId;
        private String providerServiceKeyName;
        private String providerState;
        private List<GetVirtualCircuitsVirtualCircuitPublicPrefix> publicPrefixes;
        private String referenceComment;
        private String region;
        private List<String> routingPolicies;
        private String serviceType;
        private String state;
        private String timeCreated;
        private String type;
        private String virtualCircuitId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVirtualCircuitsVirtualCircuit defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bandwidthShapeName = defaults.bandwidthShapeName;
    	      this.bgpAdminState = defaults.bgpAdminState;
    	      this.bgpIpv6sessionState = defaults.bgpIpv6sessionState;
    	      this.bgpManagement = defaults.bgpManagement;
    	      this.bgpSessionState = defaults.bgpSessionState;
    	      this.compartmentId = defaults.compartmentId;
    	      this.crossConnectMappings = defaults.crossConnectMappings;
    	      this.customerAsn = defaults.customerAsn;
    	      this.customerBgpAsn = defaults.customerBgpAsn;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.gatewayId = defaults.gatewayId;
    	      this.id = defaults.id;
    	      this.ipMtu = defaults.ipMtu;
    	      this.isBfdEnabled = defaults.isBfdEnabled;
    	      this.oracleBgpAsn = defaults.oracleBgpAsn;
    	      this.providerServiceId = defaults.providerServiceId;
    	      this.providerServiceKeyName = defaults.providerServiceKeyName;
    	      this.providerState = defaults.providerState;
    	      this.publicPrefixes = defaults.publicPrefixes;
    	      this.referenceComment = defaults.referenceComment;
    	      this.region = defaults.region;
    	      this.routingPolicies = defaults.routingPolicies;
    	      this.serviceType = defaults.serviceType;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.type = defaults.type;
    	      this.virtualCircuitId = defaults.virtualCircuitId;
        }

        public Builder bandwidthShapeName(String bandwidthShapeName) {
            this.bandwidthShapeName = Objects.requireNonNull(bandwidthShapeName);
            return this;
        }
        public Builder bgpAdminState(String bgpAdminState) {
            this.bgpAdminState = Objects.requireNonNull(bgpAdminState);
            return this;
        }
        public Builder bgpIpv6sessionState(String bgpIpv6sessionState) {
            this.bgpIpv6sessionState = Objects.requireNonNull(bgpIpv6sessionState);
            return this;
        }
        public Builder bgpManagement(String bgpManagement) {
            this.bgpManagement = Objects.requireNonNull(bgpManagement);
            return this;
        }
        public Builder bgpSessionState(String bgpSessionState) {
            this.bgpSessionState = Objects.requireNonNull(bgpSessionState);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder crossConnectMappings(List<GetVirtualCircuitsVirtualCircuitCrossConnectMapping> crossConnectMappings) {
            this.crossConnectMappings = Objects.requireNonNull(crossConnectMappings);
            return this;
        }
        public Builder crossConnectMappings(GetVirtualCircuitsVirtualCircuitCrossConnectMapping... crossConnectMappings) {
            return crossConnectMappings(List.of(crossConnectMappings));
        }
        public Builder customerAsn(String customerAsn) {
            this.customerAsn = Objects.requireNonNull(customerAsn);
            return this;
        }
        public Builder customerBgpAsn(Integer customerBgpAsn) {
            this.customerBgpAsn = Objects.requireNonNull(customerBgpAsn);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder gatewayId(String gatewayId) {
            this.gatewayId = Objects.requireNonNull(gatewayId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ipMtu(String ipMtu) {
            this.ipMtu = Objects.requireNonNull(ipMtu);
            return this;
        }
        public Builder isBfdEnabled(Boolean isBfdEnabled) {
            this.isBfdEnabled = Objects.requireNonNull(isBfdEnabled);
            return this;
        }
        public Builder oracleBgpAsn(Integer oracleBgpAsn) {
            this.oracleBgpAsn = Objects.requireNonNull(oracleBgpAsn);
            return this;
        }
        public Builder providerServiceId(String providerServiceId) {
            this.providerServiceId = Objects.requireNonNull(providerServiceId);
            return this;
        }
        public Builder providerServiceKeyName(String providerServiceKeyName) {
            this.providerServiceKeyName = Objects.requireNonNull(providerServiceKeyName);
            return this;
        }
        public Builder providerState(String providerState) {
            this.providerState = Objects.requireNonNull(providerState);
            return this;
        }
        public Builder publicPrefixes(List<GetVirtualCircuitsVirtualCircuitPublicPrefix> publicPrefixes) {
            this.publicPrefixes = Objects.requireNonNull(publicPrefixes);
            return this;
        }
        public Builder publicPrefixes(GetVirtualCircuitsVirtualCircuitPublicPrefix... publicPrefixes) {
            return publicPrefixes(List.of(publicPrefixes));
        }
        public Builder referenceComment(String referenceComment) {
            this.referenceComment = Objects.requireNonNull(referenceComment);
            return this;
        }
        public Builder region(String region) {
            this.region = Objects.requireNonNull(region);
            return this;
        }
        public Builder routingPolicies(List<String> routingPolicies) {
            this.routingPolicies = Objects.requireNonNull(routingPolicies);
            return this;
        }
        public Builder routingPolicies(String... routingPolicies) {
            return routingPolicies(List.of(routingPolicies));
        }
        public Builder serviceType(String serviceType) {
            this.serviceType = Objects.requireNonNull(serviceType);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder virtualCircuitId(String virtualCircuitId) {
            this.virtualCircuitId = Objects.requireNonNull(virtualCircuitId);
            return this;
        }        public GetVirtualCircuitsVirtualCircuit build() {
            return new GetVirtualCircuitsVirtualCircuit(bandwidthShapeName, bgpAdminState, bgpIpv6sessionState, bgpManagement, bgpSessionState, compartmentId, crossConnectMappings, customerAsn, customerBgpAsn, definedTags, displayName, freeformTags, gatewayId, id, ipMtu, isBfdEnabled, oracleBgpAsn, providerServiceId, providerServiceKeyName, providerState, publicPrefixes, referenceComment, region, routingPolicies, serviceType, state, timeCreated, type, virtualCircuitId);
        }
    }
}
