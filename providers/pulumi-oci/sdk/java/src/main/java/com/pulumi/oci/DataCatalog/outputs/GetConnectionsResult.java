// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataCatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataCatalog.outputs.GetConnectionsConnectionCollection;
import com.pulumi.oci.DataCatalog.outputs.GetConnectionsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectionsResult {
    private final String catalogId;
    /**
     * @return The list of connection_collection.
     * 
     */
    private final List<GetConnectionsConnectionCollection> connectionCollections;
    /**
     * @return OCID of the user who created the connection.
     * 
     */
    private final @Nullable String createdById;
    /**
     * @return Unique key of the parent data asset.
     * 
     */
    private final String dataAssetKey;
    /**
     * @return A user-friendly display name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable String displayNameContains;
    /**
     * @return Unique external key of this object from the source system.
     * 
     */
    private final @Nullable String externalKey;
    private final @Nullable List<String> fields;
    private final @Nullable List<GetConnectionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return Indicates whether this connection is the default connection.
     * 
     */
    private final @Nullable Boolean isDefault;
    /**
     * @return The current state of the connection.
     * 
     */
    private final @Nullable String state;
    /**
     * @return The date and time the connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2019-03-25T21:10:29.600Z`
     * 
     */
    private final @Nullable String timeCreated;
    /**
     * @return Time that the connections status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    private final @Nullable String timeStatusUpdated;
    /**
     * @return The last time that any change was made to the connection. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    private final @Nullable String timeUpdated;
    /**
     * @return OCID of the user who modified the connection.
     * 
     */
    private final @Nullable String updatedById;

    @CustomType.Constructor
    private GetConnectionsResult(
        @CustomType.Parameter("catalogId") String catalogId,
        @CustomType.Parameter("connectionCollections") List<GetConnectionsConnectionCollection> connectionCollections,
        @CustomType.Parameter("createdById") @Nullable String createdById,
        @CustomType.Parameter("dataAssetKey") String dataAssetKey,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("displayNameContains") @Nullable String displayNameContains,
        @CustomType.Parameter("externalKey") @Nullable String externalKey,
        @CustomType.Parameter("fields") @Nullable List<String> fields,
        @CustomType.Parameter("filters") @Nullable List<GetConnectionsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isDefault") @Nullable Boolean isDefault,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("timeCreated") @Nullable String timeCreated,
        @CustomType.Parameter("timeStatusUpdated") @Nullable String timeStatusUpdated,
        @CustomType.Parameter("timeUpdated") @Nullable String timeUpdated,
        @CustomType.Parameter("updatedById") @Nullable String updatedById) {
        this.catalogId = catalogId;
        this.connectionCollections = connectionCollections;
        this.createdById = createdById;
        this.dataAssetKey = dataAssetKey;
        this.displayName = displayName;
        this.displayNameContains = displayNameContains;
        this.externalKey = externalKey;
        this.fields = fields;
        this.filters = filters;
        this.id = id;
        this.isDefault = isDefault;
        this.state = state;
        this.timeCreated = timeCreated;
        this.timeStatusUpdated = timeStatusUpdated;
        this.timeUpdated = timeUpdated;
        this.updatedById = updatedById;
    }

    public String catalogId() {
        return this.catalogId;
    }
    /**
     * @return The list of connection_collection.
     * 
     */
    public List<GetConnectionsConnectionCollection> connectionCollections() {
        return this.connectionCollections;
    }
    /**
     * @return OCID of the user who created the connection.
     * 
     */
    public Optional<String> createdById() {
        return Optional.ofNullable(this.createdById);
    }
    /**
     * @return Unique key of the parent data asset.
     * 
     */
    public String dataAssetKey() {
        return this.dataAssetKey;
    }
    /**
     * @return A user-friendly display name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public Optional<String> displayNameContains() {
        return Optional.ofNullable(this.displayNameContains);
    }
    /**
     * @return Unique external key of this object from the source system.
     * 
     */
    public Optional<String> externalKey() {
        return Optional.ofNullable(this.externalKey);
    }
    public List<String> fields() {
        return this.fields == null ? List.of() : this.fields;
    }
    public List<GetConnectionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether this connection is the default connection.
     * 
     */
    public Optional<Boolean> isDefault() {
        return Optional.ofNullable(this.isDefault);
    }
    /**
     * @return The current state of the connection.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The date and time the connection was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2019-03-25T21:10:29.600Z`
     * 
     */
    public Optional<String> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }
    /**
     * @return Time that the connections status was last updated. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    public Optional<String> timeStatusUpdated() {
        return Optional.ofNullable(this.timeStatusUpdated);
    }
    /**
     * @return The last time that any change was made to the connection. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    public Optional<String> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }
    /**
     * @return OCID of the user who modified the connection.
     * 
     */
    public Optional<String> updatedById() {
        return Optional.ofNullable(this.updatedById);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String catalogId;
        private List<GetConnectionsConnectionCollection> connectionCollections;
        private @Nullable String createdById;
        private String dataAssetKey;
        private @Nullable String displayName;
        private @Nullable String displayNameContains;
        private @Nullable String externalKey;
        private @Nullable List<String> fields;
        private @Nullable List<GetConnectionsFilter> filters;
        private String id;
        private @Nullable Boolean isDefault;
        private @Nullable String state;
        private @Nullable String timeCreated;
        private @Nullable String timeStatusUpdated;
        private @Nullable String timeUpdated;
        private @Nullable String updatedById;

        public Builder() {
    	      // Empty
        }

        public Builder(GetConnectionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.catalogId = defaults.catalogId;
    	      this.connectionCollections = defaults.connectionCollections;
    	      this.createdById = defaults.createdById;
    	      this.dataAssetKey = defaults.dataAssetKey;
    	      this.displayName = defaults.displayName;
    	      this.displayNameContains = defaults.displayNameContains;
    	      this.externalKey = defaults.externalKey;
    	      this.fields = defaults.fields;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isDefault = defaults.isDefault;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeStatusUpdated = defaults.timeStatusUpdated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.updatedById = defaults.updatedById;
        }

        public Builder catalogId(String catalogId) {
            this.catalogId = Objects.requireNonNull(catalogId);
            return this;
        }
        public Builder connectionCollections(List<GetConnectionsConnectionCollection> connectionCollections) {
            this.connectionCollections = Objects.requireNonNull(connectionCollections);
            return this;
        }
        public Builder connectionCollections(GetConnectionsConnectionCollection... connectionCollections) {
            return connectionCollections(List.of(connectionCollections));
        }
        public Builder createdById(@Nullable String createdById) {
            this.createdById = createdById;
            return this;
        }
        public Builder dataAssetKey(String dataAssetKey) {
            this.dataAssetKey = Objects.requireNonNull(dataAssetKey);
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder displayNameContains(@Nullable String displayNameContains) {
            this.displayNameContains = displayNameContains;
            return this;
        }
        public Builder externalKey(@Nullable String externalKey) {
            this.externalKey = externalKey;
            return this;
        }
        public Builder fields(@Nullable List<String> fields) {
            this.fields = fields;
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        public Builder filters(@Nullable List<GetConnectionsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetConnectionsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isDefault(@Nullable Boolean isDefault) {
            this.isDefault = isDefault;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder timeCreated(@Nullable String timeCreated) {
            this.timeCreated = timeCreated;
            return this;
        }
        public Builder timeStatusUpdated(@Nullable String timeStatusUpdated) {
            this.timeStatusUpdated = timeStatusUpdated;
            return this;
        }
        public Builder timeUpdated(@Nullable String timeUpdated) {
            this.timeUpdated = timeUpdated;
            return this;
        }
        public Builder updatedById(@Nullable String updatedById) {
            this.updatedById = updatedById;
            return this;
        }        public GetConnectionsResult build() {
            return new GetConnectionsResult(catalogId, connectionCollections, createdById, dataAssetKey, displayName, displayNameContains, externalKey, fields, filters, id, isDefault, state, timeCreated, timeStatusUpdated, timeUpdated, updatedById);
        }
    }
}
