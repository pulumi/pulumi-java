// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.BigDataService.inputs.AutoScalingConfigurationPolicyArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutoScalingConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoScalingConfigurationArgs Empty = new AutoScalingConfigurationArgs();

    /**
     * The OCID of the cluster.
     * 
     */
    @Import(name="bdsInstanceId", required=true)
    private Output<String> bdsInstanceId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public Output<String> bdsInstanceId() {
        return this.bdsInstanceId;
    }

    /**
     * (Updatable) Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
     * 
     */
    @Import(name="clusterAdminPassword", required=true)
    private Output<String> clusterAdminPassword;

    /**
     * @return (Updatable) Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
     * 
     */
    public Output<String> clusterAdminPassword() {
        return this.clusterAdminPassword;
    }

    /**
     * (Updatable) A user-friendly name. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Whether the autoscale configuration is enabled.
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return (Updatable) Whether the autoscale configuration is enabled.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * A node type that is managed by an autoscale configuration. The only supported type is WORKER.
     * 
     */
    @Import(name="nodeType", required=true)
    private Output<String> nodeType;

    /**
     * @return A node type that is managed by an autoscale configuration. The only supported type is WORKER.
     * 
     */
    public Output<String> nodeType() {
        return this.nodeType;
    }

    /**
     * (Updatable) Policy definitions for the autoscale configuration.
     * 
     */
    @Import(name="policy", required=true)
    private Output<AutoScalingConfigurationPolicyArgs> policy;

    /**
     * @return (Updatable) Policy definitions for the autoscale configuration.
     * 
     */
    public Output<AutoScalingConfigurationPolicyArgs> policy() {
        return this.policy;
    }

    private AutoScalingConfigurationArgs() {}

    private AutoScalingConfigurationArgs(AutoScalingConfigurationArgs $) {
        this.bdsInstanceId = $.bdsInstanceId;
        this.clusterAdminPassword = $.clusterAdminPassword;
        this.displayName = $.displayName;
        this.isEnabled = $.isEnabled;
        this.nodeType = $.nodeType;
        this.policy = $.policy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoScalingConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoScalingConfigurationArgs $;

        public Builder() {
            $ = new AutoScalingConfigurationArgs();
        }

        public Builder(AutoScalingConfigurationArgs defaults) {
            $ = new AutoScalingConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(Output<String> bdsInstanceId) {
            $.bdsInstanceId = bdsInstanceId;
            return this;
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(String bdsInstanceId) {
            return bdsInstanceId(Output.of(bdsInstanceId));
        }

        /**
         * @param clusterAdminPassword (Updatable) Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
         * 
         * @return builder
         * 
         */
        public Builder clusterAdminPassword(Output<String> clusterAdminPassword) {
            $.clusterAdminPassword = clusterAdminPassword;
            return this;
        }

        /**
         * @param clusterAdminPassword (Updatable) Base-64 encoded password for the cluster (and Cloudera Manager) admin user.
         * 
         * @return builder
         * 
         */
        public Builder clusterAdminPassword(String clusterAdminPassword) {
            return clusterAdminPassword(Output.of(clusterAdminPassword));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. The name does not have to be unique, and it may be changed. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param isEnabled (Updatable) Whether the autoscale configuration is enabled.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled (Updatable) Whether the autoscale configuration is enabled.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param nodeType A node type that is managed by an autoscale configuration. The only supported type is WORKER.
         * 
         * @return builder
         * 
         */
        public Builder nodeType(Output<String> nodeType) {
            $.nodeType = nodeType;
            return this;
        }

        /**
         * @param nodeType A node type that is managed by an autoscale configuration. The only supported type is WORKER.
         * 
         * @return builder
         * 
         */
        public Builder nodeType(String nodeType) {
            return nodeType(Output.of(nodeType));
        }

        /**
         * @param policy (Updatable) Policy definitions for the autoscale configuration.
         * 
         * @return builder
         * 
         */
        public Builder policy(Output<AutoScalingConfigurationPolicyArgs> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy (Updatable) Policy definitions for the autoscale configuration.
         * 
         * @return builder
         * 
         */
        public Builder policy(AutoScalingConfigurationPolicyArgs policy) {
            return policy(Output.of(policy));
        }

        public AutoScalingConfigurationArgs build() {
            $.bdsInstanceId = Objects.requireNonNull($.bdsInstanceId, "expected parameter 'bdsInstanceId' to be non-null");
            $.clusterAdminPassword = Objects.requireNonNull($.clusterAdminPassword, "expected parameter 'clusterAdminPassword' to be non-null");
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            $.nodeType = Objects.requireNonNull($.nodeType, "expected parameter 'nodeType' to be non-null");
            $.policy = Objects.requireNonNull($.policy, "expected parameter 'policy' to be non-null");
            return $;
        }
    }

}
