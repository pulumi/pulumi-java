// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Database.inputs.CloudDatabaseManagementCredentialdetailsArgs;
import java.lang.String;
import java.util.Objects;


public final class CloudDatabaseManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final CloudDatabaseManagementArgs Empty = new CloudDatabaseManagementArgs();

    @Import(name="credentialdetails", required=true)
    private Output<CloudDatabaseManagementCredentialdetailsArgs> credentialdetails;

    public Output<CloudDatabaseManagementCredentialdetailsArgs> credentialdetails() {
        return this.credentialdetails;
    }

    /**
     * The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="databaseId", required=true)
    private Output<String> databaseId;

    /**
     * @return The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> databaseId() {
        return this.databaseId;
    }

    /**
     * (Updatable) Specifies database management type
     * enum:
     * - `BASIC`
     * - `ADVANCED`
     * 
     */
    @Import(name="managementType", required=true)
    private Output<String> managementType;

    /**
     * @return (Updatable) Specifies database management type
     * enum:
     * - `BASIC`
     * - `ADVANCED`
     * 
     */
    public Output<String> managementType() {
        return this.managementType;
    }

    /**
     * (Updatable) The private end point [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="privateEndPointId", required=true)
    private Output<String> privateEndPointId;

    /**
     * @return (Updatable) The private end point [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> privateEndPointId() {
        return this.privateEndPointId;
    }

    /**
     * (Updatable) Database service name
     * 
     */
    @Import(name="serviceName", required=true)
    private Output<String> serviceName;

    /**
     * @return (Updatable) Database service name
     * 
     */
    public Output<String> serviceName() {
        return this.serviceName;
    }

    private CloudDatabaseManagementArgs() {}

    private CloudDatabaseManagementArgs(CloudDatabaseManagementArgs $) {
        this.credentialdetails = $.credentialdetails;
        this.databaseId = $.databaseId;
        this.managementType = $.managementType;
        this.privateEndPointId = $.privateEndPointId;
        this.serviceName = $.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CloudDatabaseManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CloudDatabaseManagementArgs $;

        public Builder() {
            $ = new CloudDatabaseManagementArgs();
        }

        public Builder(CloudDatabaseManagementArgs defaults) {
            $ = new CloudDatabaseManagementArgs(Objects.requireNonNull(defaults));
        }

        public Builder credentialdetails(Output<CloudDatabaseManagementCredentialdetailsArgs> credentialdetails) {
            $.credentialdetails = credentialdetails;
            return this;
        }

        public Builder credentialdetails(CloudDatabaseManagementCredentialdetailsArgs credentialdetails) {
            return credentialdetails(Output.of(credentialdetails));
        }

        /**
         * @param databaseId The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder databaseId(Output<String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param databaseId The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder databaseId(String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        /**
         * @param managementType (Updatable) Specifies database management type
         * enum:
         * - `BASIC`
         * - `ADVANCED`
         * 
         * @return builder
         * 
         */
        public Builder managementType(Output<String> managementType) {
            $.managementType = managementType;
            return this;
        }

        /**
         * @param managementType (Updatable) Specifies database management type
         * enum:
         * - `BASIC`
         * - `ADVANCED`
         * 
         * @return builder
         * 
         */
        public Builder managementType(String managementType) {
            return managementType(Output.of(managementType));
        }

        /**
         * @param privateEndPointId (Updatable) The private end point [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder privateEndPointId(Output<String> privateEndPointId) {
            $.privateEndPointId = privateEndPointId;
            return this;
        }

        /**
         * @param privateEndPointId (Updatable) The private end point [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder privateEndPointId(String privateEndPointId) {
            return privateEndPointId(Output.of(privateEndPointId));
        }

        /**
         * @param serviceName (Updatable) Database service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName (Updatable) Database service name
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        public CloudDatabaseManagementArgs build() {
            $.credentialdetails = Objects.requireNonNull($.credentialdetails, "expected parameter 'credentialdetails' to be non-null");
            $.databaseId = Objects.requireNonNull($.databaseId, "expected parameter 'databaseId' to be non-null");
            $.managementType = Objects.requireNonNull($.managementType, "expected parameter 'managementType' to be non-null");
            $.privateEndPointId = Objects.requireNonNull($.privateEndPointId, "expected parameter 'privateEndPointId' to be non-null");
            $.serviceName = Objects.requireNonNull($.serviceName, "expected parameter 'serviceName' to be non-null");
            return $;
        }
    }

}
