// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedInstanceEventReportPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedInstanceEventReportPlainArgs Empty = new GetManagedInstanceEventReportPlainArgs();

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * filter event occurrence. Selecting only those last occurred on or after given date in ISO 8601 format Example: 2017-07-14T02:40:00.000Z
     * 
     */
    @Import(name="latestTimestampGreaterThanOrEqualTo")
    private @Nullable String latestTimestampGreaterThanOrEqualTo;

    /**
     * @return filter event occurrence. Selecting only those last occurred on or after given date in ISO 8601 format Example: 2017-07-14T02:40:00.000Z
     * 
     */
    public Optional<String> latestTimestampGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.latestTimestampGreaterThanOrEqualTo);
    }

    /**
     * filter event occurrence. Selecting only those last occurred before given date in ISO 8601 format Example: 2017-07-14T02:40:00.000Z
     * 
     */
    @Import(name="latestTimestampLessThan")
    private @Nullable String latestTimestampLessThan;

    /**
     * @return filter event occurrence. Selecting only those last occurred before given date in ISO 8601 format Example: 2017-07-14T02:40:00.000Z
     * 
     */
    public Optional<String> latestTimestampLessThan() {
        return Optional.ofNullable(this.latestTimestampLessThan);
    }

    /**
     * Instance Oracle Cloud identifier (ocid)
     * 
     */
    @Import(name="managedInstanceId", required=true)
    private String managedInstanceId;

    /**
     * @return Instance Oracle Cloud identifier (ocid)
     * 
     */
    public String managedInstanceId() {
        return this.managedInstanceId;
    }

    private GetManagedInstanceEventReportPlainArgs() {}

    private GetManagedInstanceEventReportPlainArgs(GetManagedInstanceEventReportPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.latestTimestampGreaterThanOrEqualTo = $.latestTimestampGreaterThanOrEqualTo;
        this.latestTimestampLessThan = $.latestTimestampLessThan;
        this.managedInstanceId = $.managedInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedInstanceEventReportPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedInstanceEventReportPlainArgs $;

        public Builder() {
            $ = new GetManagedInstanceEventReportPlainArgs();
        }

        public Builder(GetManagedInstanceEventReportPlainArgs defaults) {
            $ = new GetManagedInstanceEventReportPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param latestTimestampGreaterThanOrEqualTo filter event occurrence. Selecting only those last occurred on or after given date in ISO 8601 format Example: 2017-07-14T02:40:00.000Z
         * 
         * @return builder
         * 
         */
        public Builder latestTimestampGreaterThanOrEqualTo(@Nullable String latestTimestampGreaterThanOrEqualTo) {
            $.latestTimestampGreaterThanOrEqualTo = latestTimestampGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param latestTimestampLessThan filter event occurrence. Selecting only those last occurred before given date in ISO 8601 format Example: 2017-07-14T02:40:00.000Z
         * 
         * @return builder
         * 
         */
        public Builder latestTimestampLessThan(@Nullable String latestTimestampLessThan) {
            $.latestTimestampLessThan = latestTimestampLessThan;
            return this;
        }

        /**
         * @param managedInstanceId Instance Oracle Cloud identifier (ocid)
         * 
         * @return builder
         * 
         */
        public Builder managedInstanceId(String managedInstanceId) {
            $.managedInstanceId = managedInstanceId;
            return this;
        }

        public GetManagedInstanceEventReportPlainArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.managedInstanceId = Objects.requireNonNull($.managedInstanceId, "expected parameter 'managedInstanceId' to be non-null");
            return $;
        }
    }

}
