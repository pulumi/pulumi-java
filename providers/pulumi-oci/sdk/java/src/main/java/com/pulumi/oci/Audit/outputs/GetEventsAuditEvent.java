// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Audit.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Audit.outputs.GetEventsAuditEventData;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetEventsAuditEvent {
    /**
     * @return The version of the CloudEvents specification. The structure of the envelope follows the  [CloudEvents](https://github.com/cloudevents/spec) industry standard format hosted by the [Cloud Native Computing Foundation ( CNCF)](https://www.cncf.io/).
     * 
     */
    private final String cloudEventsVersion;
    /**
     * @return The content type of the data contained in `data`.  Example: `application/json`
     * 
     */
    private final String contentType;
    /**
     * @return The payload of the event. Information within `data` comes from the resource emitting the event.
     * 
     */
    private final List<GetEventsAuditEventData> datas;
    /**
     * @return The GUID of the event.
     * 
     */
    private final String eventId;
    /**
     * @return The time the event occurred, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.252Z`
     * 
     */
    private final String eventTime;
    /**
     * @return The type of event that happened.
     * 
     */
    private final String eventType;
    /**
     * @return The version of the event type. This version applies to the payload of the event, not the envelope. Use `cloudEventsVersion` to determine the version of the envelope.  Example: `2.0`
     * 
     */
    private final String eventTypeVersion;
    /**
     * @return The source of the event.  Example: `ComputeApi`
     * 
     */
    private final String source;

    @CustomType.Constructor
    private GetEventsAuditEvent(
        @CustomType.Parameter("cloudEventsVersion") String cloudEventsVersion,
        @CustomType.Parameter("contentType") String contentType,
        @CustomType.Parameter("datas") List<GetEventsAuditEventData> datas,
        @CustomType.Parameter("eventId") String eventId,
        @CustomType.Parameter("eventTime") String eventTime,
        @CustomType.Parameter("eventType") String eventType,
        @CustomType.Parameter("eventTypeVersion") String eventTypeVersion,
        @CustomType.Parameter("source") String source) {
        this.cloudEventsVersion = cloudEventsVersion;
        this.contentType = contentType;
        this.datas = datas;
        this.eventId = eventId;
        this.eventTime = eventTime;
        this.eventType = eventType;
        this.eventTypeVersion = eventTypeVersion;
        this.source = source;
    }

    /**
     * @return The version of the CloudEvents specification. The structure of the envelope follows the  [CloudEvents](https://github.com/cloudevents/spec) industry standard format hosted by the [Cloud Native Computing Foundation ( CNCF)](https://www.cncf.io/).
     * 
     */
    public String cloudEventsVersion() {
        return this.cloudEventsVersion;
    }
    /**
     * @return The content type of the data contained in `data`.  Example: `application/json`
     * 
     */
    public String contentType() {
        return this.contentType;
    }
    /**
     * @return The payload of the event. Information within `data` comes from the resource emitting the event.
     * 
     */
    public List<GetEventsAuditEventData> datas() {
        return this.datas;
    }
    /**
     * @return The GUID of the event.
     * 
     */
    public String eventId() {
        return this.eventId;
    }
    /**
     * @return The time the event occurred, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2019-09-18T00:10:59.252Z`
     * 
     */
    public String eventTime() {
        return this.eventTime;
    }
    /**
     * @return The type of event that happened.
     * 
     */
    public String eventType() {
        return this.eventType;
    }
    /**
     * @return The version of the event type. This version applies to the payload of the event, not the envelope. Use `cloudEventsVersion` to determine the version of the envelope.  Example: `2.0`
     * 
     */
    public String eventTypeVersion() {
        return this.eventTypeVersion;
    }
    /**
     * @return The source of the event.  Example: `ComputeApi`
     * 
     */
    public String source() {
        return this.source;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventsAuditEvent defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String cloudEventsVersion;
        private String contentType;
        private List<GetEventsAuditEventData> datas;
        private String eventId;
        private String eventTime;
        private String eventType;
        private String eventTypeVersion;
        private String source;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEventsAuditEvent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cloudEventsVersion = defaults.cloudEventsVersion;
    	      this.contentType = defaults.contentType;
    	      this.datas = defaults.datas;
    	      this.eventId = defaults.eventId;
    	      this.eventTime = defaults.eventTime;
    	      this.eventType = defaults.eventType;
    	      this.eventTypeVersion = defaults.eventTypeVersion;
    	      this.source = defaults.source;
        }

        public Builder cloudEventsVersion(String cloudEventsVersion) {
            this.cloudEventsVersion = Objects.requireNonNull(cloudEventsVersion);
            return this;
        }
        public Builder contentType(String contentType) {
            this.contentType = Objects.requireNonNull(contentType);
            return this;
        }
        public Builder datas(List<GetEventsAuditEventData> datas) {
            this.datas = Objects.requireNonNull(datas);
            return this;
        }
        public Builder datas(GetEventsAuditEventData... datas) {
            return datas(List.of(datas));
        }
        public Builder eventId(String eventId) {
            this.eventId = Objects.requireNonNull(eventId);
            return this;
        }
        public Builder eventTime(String eventTime) {
            this.eventTime = Objects.requireNonNull(eventTime);
            return this;
        }
        public Builder eventType(String eventType) {
            this.eventType = Objects.requireNonNull(eventType);
            return this;
        }
        public Builder eventTypeVersion(String eventTypeVersion) {
            this.eventTypeVersion = Objects.requireNonNull(eventTypeVersion);
            return this;
        }
        public Builder source(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }        public GetEventsAuditEvent build() {
            return new GetEventsAuditEvent(cloudEventsVersion, contentType, datas, eventId, eventTime, eventType, eventTypeVersion, source);
        }
    }
}
