// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseTools.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseTools.outputs.DatabaseToolsConnectionKeyStoreKeyStoreContent;
import com.pulumi.oci.DatabaseTools.outputs.DatabaseToolsConnectionKeyStoreKeyStorePassword;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseToolsConnectionKeyStore {
    /**
     * @return (Updatable) The key store content.
     * 
     */
    private final @Nullable DatabaseToolsConnectionKeyStoreKeyStoreContent keyStoreContent;
    /**
     * @return (Updatable) The key store password.
     * 
     */
    private final @Nullable DatabaseToolsConnectionKeyStoreKeyStorePassword keyStorePassword;
    /**
     * @return (Updatable) The key store type.
     * 
     */
    private final @Nullable String keyStoreType;

    @CustomType.Constructor
    private DatabaseToolsConnectionKeyStore(
        @CustomType.Parameter("keyStoreContent") @Nullable DatabaseToolsConnectionKeyStoreKeyStoreContent keyStoreContent,
        @CustomType.Parameter("keyStorePassword") @Nullable DatabaseToolsConnectionKeyStoreKeyStorePassword keyStorePassword,
        @CustomType.Parameter("keyStoreType") @Nullable String keyStoreType) {
        this.keyStoreContent = keyStoreContent;
        this.keyStorePassword = keyStorePassword;
        this.keyStoreType = keyStoreType;
    }

    /**
     * @return (Updatable) The key store content.
     * 
     */
    public Optional<DatabaseToolsConnectionKeyStoreKeyStoreContent> keyStoreContent() {
        return Optional.ofNullable(this.keyStoreContent);
    }
    /**
     * @return (Updatable) The key store password.
     * 
     */
    public Optional<DatabaseToolsConnectionKeyStoreKeyStorePassword> keyStorePassword() {
        return Optional.ofNullable(this.keyStorePassword);
    }
    /**
     * @return (Updatable) The key store type.
     * 
     */
    public Optional<String> keyStoreType() {
        return Optional.ofNullable(this.keyStoreType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseToolsConnectionKeyStore defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DatabaseToolsConnectionKeyStoreKeyStoreContent keyStoreContent;
        private @Nullable DatabaseToolsConnectionKeyStoreKeyStorePassword keyStorePassword;
        private @Nullable String keyStoreType;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseToolsConnectionKeyStore defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.keyStoreContent = defaults.keyStoreContent;
    	      this.keyStorePassword = defaults.keyStorePassword;
    	      this.keyStoreType = defaults.keyStoreType;
        }

        public Builder keyStoreContent(@Nullable DatabaseToolsConnectionKeyStoreKeyStoreContent keyStoreContent) {
            this.keyStoreContent = keyStoreContent;
            return this;
        }
        public Builder keyStorePassword(@Nullable DatabaseToolsConnectionKeyStoreKeyStorePassword keyStorePassword) {
            this.keyStorePassword = keyStorePassword;
            return this;
        }
        public Builder keyStoreType(@Nullable String keyStoreType) {
            this.keyStoreType = keyStoreType;
            return this;
        }        public DatabaseToolsConnectionKeyStore build() {
            return new DatabaseToolsConnectionKeyStore(keyStoreContent, keyStorePassword, keyStoreType);
        }
    }
}
