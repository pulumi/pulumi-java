// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetAuditPoliciesAuditPolicyCollection;
import com.pulumi.oci.DataSafe.outputs.GetAuditPoliciesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAuditPoliciesResult {
    private final @Nullable String accessLevel;
    /**
     * @return The list of audit_policy_collection.
     * 
     */
    private final List<GetAuditPoliciesAuditPolicyCollection> auditPolicyCollections;
    private final @Nullable String auditPolicyId;
    /**
     * @return The OCID of the compartment containing the audit policy.
     * 
     */
    private final String compartmentId;
    private final @Nullable Boolean compartmentIdInSubtree;
    /**
     * @return The display name of the audit policy.
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetAuditPoliciesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The current state of the audit policy.
     * 
     */
    private final @Nullable String state;
    /**
     * @return The OCID of the target for which the audit policy is created.
     * 
     */
    private final @Nullable String targetId;

    @CustomType.Constructor
    private GetAuditPoliciesResult(
        @CustomType.Parameter("accessLevel") @Nullable String accessLevel,
        @CustomType.Parameter("auditPolicyCollections") List<GetAuditPoliciesAuditPolicyCollection> auditPolicyCollections,
        @CustomType.Parameter("auditPolicyId") @Nullable String auditPolicyId,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("compartmentIdInSubtree") @Nullable Boolean compartmentIdInSubtree,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetAuditPoliciesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("targetId") @Nullable String targetId) {
        this.accessLevel = accessLevel;
        this.auditPolicyCollections = auditPolicyCollections;
        this.auditPolicyId = auditPolicyId;
        this.compartmentId = compartmentId;
        this.compartmentIdInSubtree = compartmentIdInSubtree;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.state = state;
        this.targetId = targetId;
    }

    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }
    /**
     * @return The list of audit_policy_collection.
     * 
     */
    public List<GetAuditPoliciesAuditPolicyCollection> auditPolicyCollections() {
        return this.auditPolicyCollections;
    }
    public Optional<String> auditPolicyId() {
        return Optional.ofNullable(this.auditPolicyId);
    }
    /**
     * @return The OCID of the compartment containing the audit policy.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    /**
     * @return The display name of the audit policy.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetAuditPoliciesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current state of the audit policy.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The OCID of the target for which the audit policy is created.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditPoliciesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accessLevel;
        private List<GetAuditPoliciesAuditPolicyCollection> auditPolicyCollections;
        private @Nullable String auditPolicyId;
        private String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable String displayName;
        private @Nullable List<GetAuditPoliciesFilter> filters;
        private String id;
        private @Nullable String state;
        private @Nullable String targetId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAuditPoliciesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.auditPolicyCollections = defaults.auditPolicyCollections;
    	      this.auditPolicyId = defaults.auditPolicyId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.targetId = defaults.targetId;
        }

        public Builder accessLevel(@Nullable String accessLevel) {
            this.accessLevel = accessLevel;
            return this;
        }
        public Builder auditPolicyCollections(List<GetAuditPoliciesAuditPolicyCollection> auditPolicyCollections) {
            this.auditPolicyCollections = Objects.requireNonNull(auditPolicyCollections);
            return this;
        }
        public Builder auditPolicyCollections(GetAuditPoliciesAuditPolicyCollection... auditPolicyCollections) {
            return auditPolicyCollections(List.of(auditPolicyCollections));
        }
        public Builder auditPolicyId(@Nullable String auditPolicyId) {
            this.auditPolicyId = auditPolicyId;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetAuditPoliciesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetAuditPoliciesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder targetId(@Nullable String targetId) {
            this.targetId = targetId;
            return this;
        }        public GetAuditPoliciesResult build() {
            return new GetAuditPoliciesResult(accessLevel, auditPolicyCollections, auditPolicyId, compartmentId, compartmentIdInSubtree, displayName, filters, id, state, targetId);
        }
    }
}
