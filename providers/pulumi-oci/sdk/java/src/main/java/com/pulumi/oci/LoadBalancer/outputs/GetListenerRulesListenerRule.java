// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.LoadBalancer.outputs.GetListenerRulesListenerRuleRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetListenerRulesListenerRule {
    /**
     * @return The name of the rule set that the rule belongs to.
     * 
     */
    private final String name;
    /**
     * @return A rule object that applies to the listener.
     * 
     */
    private final List<GetListenerRulesListenerRuleRule> rules;
    private final String state;

    @CustomType.Constructor
    private GetListenerRulesListenerRule(
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("rules") List<GetListenerRulesListenerRuleRule> rules,
        @CustomType.Parameter("state") String state) {
        this.name = name;
        this.rules = rules;
        this.state = state;
    }

    /**
     * @return The name of the rule set that the rule belongs to.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A rule object that applies to the listener.
     * 
     */
    public List<GetListenerRulesListenerRuleRule> rules() {
        return this.rules;
    }
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListenerRulesListenerRule defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String name;
        private List<GetListenerRulesListenerRuleRule> rules;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetListenerRulesListenerRule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.name = defaults.name;
    	      this.rules = defaults.rules;
    	      this.state = defaults.state;
        }

        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder rules(List<GetListenerRulesListenerRuleRule> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(GetListenerRulesListenerRuleRule... rules) {
            return rules(List.of(rules));
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }        public GetListenerRulesListenerRule build() {
            return new GetListenerRulesListenerRule(name, rules, state);
        }
    }
}
