// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildRunSourceTriggerInfoActionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildRunBuildRunSourceTriggerInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildRunBuildRunSourceTriggerInfoArgs Empty = new BuildRunBuildRunSourceTriggerInfoArgs();

    /**
     * The list of actions that are to be performed for this Trigger
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<BuildRunBuildRunSourceTriggerInfoActionArgs>> actions;

    /**
     * @return The list of actions that are to be performed for this Trigger
     * 
     */
    public Optional<Output<List<BuildRunBuildRunSourceTriggerInfoActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    private BuildRunBuildRunSourceTriggerInfoArgs() {}

    private BuildRunBuildRunSourceTriggerInfoArgs(BuildRunBuildRunSourceTriggerInfoArgs $) {
        this.actions = $.actions;
        this.displayName = $.displayName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildRunBuildRunSourceTriggerInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildRunBuildRunSourceTriggerInfoArgs $;

        public Builder() {
            $ = new BuildRunBuildRunSourceTriggerInfoArgs();
        }

        public Builder(BuildRunBuildRunSourceTriggerInfoArgs defaults) {
            $ = new BuildRunBuildRunSourceTriggerInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions The list of actions that are to be performed for this Trigger
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<BuildRunBuildRunSourceTriggerInfoActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions The list of actions that are to be performed for this Trigger
         * 
         * @return builder
         * 
         */
        public Builder actions(List<BuildRunBuildRunSourceTriggerInfoActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions The list of actions that are to be performed for this Trigger
         * 
         * @return builder
         * 
         */
        public Builder actions(BuildRunBuildRunSourceTriggerInfoActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param displayName (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public BuildRunBuildRunSourceTriggerInfoArgs build() {
            return $;
        }
    }

}
