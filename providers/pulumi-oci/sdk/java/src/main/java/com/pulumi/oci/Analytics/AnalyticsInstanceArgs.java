// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Analytics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Analytics.inputs.AnalyticsInstanceCapacityArgs;
import com.pulumi.oci.Analytics.inputs.AnalyticsInstanceNetworkEndpointDetailsArgs;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AnalyticsInstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final AnalyticsInstanceArgs Empty = new AnalyticsInstanceArgs();

    /**
     * Service instance capacity metadata (e.g.: OLPU count, number of users, ...etc...).
     * 
     */
    @Import(name="capacity", required=true)
    private Output<AnalyticsInstanceCapacityArgs> capacity;

    /**
     * @return Service instance capacity metadata (e.g.: OLPU count, number of users, ...etc...).
     * 
     */
    public Output<AnalyticsInstanceCapacityArgs> capacity() {
        return this.capacity;
    }

    /**
     * (Updatable) The OCID of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Optional description.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Optional description.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Email address receiving notifications.
     * 
     */
    @Import(name="emailNotification")
    private @Nullable Output<String> emailNotification;

    /**
     * @return (Updatable) Email address receiving notifications.
     * 
     */
    public Optional<Output<String>> emailNotification() {
        return Optional.ofNullable(this.emailNotification);
    }

    /**
     * Analytics feature set.
     * 
     */
    @Import(name="featureSet", required=true)
    private Output<String> featureSet;

    /**
     * @return Analytics feature set.
     * 
     */
    public Output<String> featureSet() {
        return this.featureSet;
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * IDCS access token identifying a stripe and service administrator user.
     * 
     */
    @Import(name="idcsAccessToken", required=true)
    private Output<String> idcsAccessToken;

    /**
     * @return IDCS access token identifying a stripe and service administrator user.
     * 
     */
    public Output<String> idcsAccessToken() {
        return this.idcsAccessToken;
    }

    /**
     * (Updatable) The license used for the service.
     * 
     */
    @Import(name="licenseType", required=true)
    private Output<String> licenseType;

    /**
     * @return (Updatable) The license used for the service.
     * 
     */
    public Output<String> licenseType() {
        return this.licenseType;
    }

    /**
     * The name of the Analytics instance. This name must be unique in the tenancy and cannot be changed.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the Analytics instance. This name must be unique in the tenancy and cannot be changed.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Base representation of a network endpoint.
     * 
     */
    @Import(name="networkEndpointDetails")
    private @Nullable Output<AnalyticsInstanceNetworkEndpointDetailsArgs> networkEndpointDetails;

    /**
     * @return Base representation of a network endpoint.
     * 
     */
    public Optional<Output<AnalyticsInstanceNetworkEndpointDetailsArgs>> networkEndpointDetails() {
        return Optional.ofNullable(this.networkEndpointDetails);
    }

    /**
     * (Updatable) The target state for the Analytics Instance. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return (Updatable) The target state for the Analytics Instance. Could be set to `ACTIVE` or `INACTIVE`.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private AnalyticsInstanceArgs() {}

    private AnalyticsInstanceArgs(AnalyticsInstanceArgs $) {
        this.capacity = $.capacity;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.emailNotification = $.emailNotification;
        this.featureSet = $.featureSet;
        this.freeformTags = $.freeformTags;
        this.idcsAccessToken = $.idcsAccessToken;
        this.licenseType = $.licenseType;
        this.name = $.name;
        this.networkEndpointDetails = $.networkEndpointDetails;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AnalyticsInstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AnalyticsInstanceArgs $;

        public Builder() {
            $ = new AnalyticsInstanceArgs();
        }

        public Builder(AnalyticsInstanceArgs defaults) {
            $ = new AnalyticsInstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacity Service instance capacity metadata (e.g.: OLPU count, number of users, ...etc...).
         * 
         * @return builder
         * 
         */
        public Builder capacity(Output<AnalyticsInstanceCapacityArgs> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param capacity Service instance capacity metadata (e.g.: OLPU count, number of users, ...etc...).
         * 
         * @return builder
         * 
         */
        public Builder capacity(AnalyticsInstanceCapacityArgs capacity) {
            return capacity(Output.of(capacity));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Optional description.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Optional description.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param emailNotification (Updatable) Email address receiving notifications.
         * 
         * @return builder
         * 
         */
        public Builder emailNotification(@Nullable Output<String> emailNotification) {
            $.emailNotification = emailNotification;
            return this;
        }

        /**
         * @param emailNotification (Updatable) Email address receiving notifications.
         * 
         * @return builder
         * 
         */
        public Builder emailNotification(String emailNotification) {
            return emailNotification(Output.of(emailNotification));
        }

        /**
         * @param featureSet Analytics feature set.
         * 
         * @return builder
         * 
         */
        public Builder featureSet(Output<String> featureSet) {
            $.featureSet = featureSet;
            return this;
        }

        /**
         * @param featureSet Analytics feature set.
         * 
         * @return builder
         * 
         */
        public Builder featureSet(String featureSet) {
            return featureSet(Output.of(featureSet));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param idcsAccessToken IDCS access token identifying a stripe and service administrator user.
         * 
         * @return builder
         * 
         */
        public Builder idcsAccessToken(Output<String> idcsAccessToken) {
            $.idcsAccessToken = idcsAccessToken;
            return this;
        }

        /**
         * @param idcsAccessToken IDCS access token identifying a stripe and service administrator user.
         * 
         * @return builder
         * 
         */
        public Builder idcsAccessToken(String idcsAccessToken) {
            return idcsAccessToken(Output.of(idcsAccessToken));
        }

        /**
         * @param licenseType (Updatable) The license used for the service.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        /**
         * @param licenseType (Updatable) The license used for the service.
         * 
         * @return builder
         * 
         */
        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        /**
         * @param name The name of the Analytics instance. This name must be unique in the tenancy and cannot be changed.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the Analytics instance. This name must be unique in the tenancy and cannot be changed.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param networkEndpointDetails Base representation of a network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder networkEndpointDetails(@Nullable Output<AnalyticsInstanceNetworkEndpointDetailsArgs> networkEndpointDetails) {
            $.networkEndpointDetails = networkEndpointDetails;
            return this;
        }

        /**
         * @param networkEndpointDetails Base representation of a network endpoint.
         * 
         * @return builder
         * 
         */
        public Builder networkEndpointDetails(AnalyticsInstanceNetworkEndpointDetailsArgs networkEndpointDetails) {
            return networkEndpointDetails(Output.of(networkEndpointDetails));
        }

        /**
         * @param state (Updatable) The target state for the Analytics Instance. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state (Updatable) The target state for the Analytics Instance. Could be set to `ACTIVE` or `INACTIVE`.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public AnalyticsInstanceArgs build() {
            $.capacity = Objects.requireNonNull($.capacity, "expected parameter 'capacity' to be non-null");
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.featureSet = Objects.requireNonNull($.featureSet, "expected parameter 'featureSet' to be non-null");
            $.idcsAccessToken = Objects.requireNonNull($.idcsAccessToken, "expected parameter 'idcsAccessToken' to be non-null");
            $.licenseType = Objects.requireNonNull($.licenseType, "expected parameter 'licenseType' to be non-null");
            return $;
        }
    }

}
