// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudGuard.outputs.GetResponderRecipesFilter;
import com.pulumi.oci.CloudGuard.outputs.GetResponderRecipesResponderRecipeCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetResponderRecipesResult {
    private final @Nullable String accessLevel;
    /**
     * @return Compartment Identifier
     * 
     */
    private final String compartmentId;
    private final @Nullable Boolean compartmentIdInSubtree;
    /**
     * @return ResponderRule Display Name
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetResponderRecipesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable Boolean resourceMetadataOnly;
    /**
     * @return The list of responder_recipe_collection.
     * 
     */
    private final List<GetResponderRecipesResponderRecipeCollection> responderRecipeCollections;
    /**
     * @return The current state of the Example.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetResponderRecipesResult(
        @CustomType.Parameter("accessLevel") @Nullable String accessLevel,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("compartmentIdInSubtree") @Nullable Boolean compartmentIdInSubtree,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetResponderRecipesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("resourceMetadataOnly") @Nullable Boolean resourceMetadataOnly,
        @CustomType.Parameter("responderRecipeCollections") List<GetResponderRecipesResponderRecipeCollection> responderRecipeCollections,
        @CustomType.Parameter("state") @Nullable String state) {
        this.accessLevel = accessLevel;
        this.compartmentId = compartmentId;
        this.compartmentIdInSubtree = compartmentIdInSubtree;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.resourceMetadataOnly = resourceMetadataOnly;
        this.responderRecipeCollections = responderRecipeCollections;
        this.state = state;
    }

    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }
    /**
     * @return Compartment Identifier
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    /**
     * @return ResponderRule Display Name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetResponderRecipesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> resourceMetadataOnly() {
        return Optional.ofNullable(this.resourceMetadataOnly);
    }
    /**
     * @return The list of responder_recipe_collection.
     * 
     */
    public List<GetResponderRecipesResponderRecipeCollection> responderRecipeCollections() {
        return this.responderRecipeCollections;
    }
    /**
     * @return The current state of the Example.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResponderRecipesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accessLevel;
        private String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable String displayName;
        private @Nullable List<GetResponderRecipesFilter> filters;
        private String id;
        private @Nullable Boolean resourceMetadataOnly;
        private List<GetResponderRecipesResponderRecipeCollection> responderRecipeCollections;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetResponderRecipesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.resourceMetadataOnly = defaults.resourceMetadataOnly;
    	      this.responderRecipeCollections = defaults.responderRecipeCollections;
    	      this.state = defaults.state;
        }

        public Builder accessLevel(@Nullable String accessLevel) {
            this.accessLevel = accessLevel;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetResponderRecipesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetResponderRecipesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder resourceMetadataOnly(@Nullable Boolean resourceMetadataOnly) {
            this.resourceMetadataOnly = resourceMetadataOnly;
            return this;
        }
        public Builder responderRecipeCollections(List<GetResponderRecipesResponderRecipeCollection> responderRecipeCollections) {
            this.responderRecipeCollections = Objects.requireNonNull(responderRecipeCollections);
            return this;
        }
        public Builder responderRecipeCollections(GetResponderRecipesResponderRecipeCollection... responderRecipeCollections) {
            return responderRecipeCollections(List.of(responderRecipeCollections));
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetResponderRecipesResult build() {
            return new GetResponderRecipesResult(accessLevel, compartmentId, compartmentIdInSubtree, displayName, filters, id, resourceMetadataOnly, responderRecipeCollections, state);
        }
    }
}
