// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMigrationDatapumpSettingDataPumpParameter {
    /**
     * @return Estimate size of dumps that will be generated.
     * 
     */
    private final String estimate;
    /**
     * @return Exclude paratemers for Export and Import.
     * 
     */
    private final List<String> excludeParameters;
    /**
     * @return Maximum number of worker processes that can be used for a Data Pump Export job.
     * 
     */
    private final Integer exportParallelismDegree;
    /**
     * @return Maximum number of worker processes that can be used for a Data Pump Import job. For an Autonomous Database, ODMS will automatically query its CPU core count and set this property.
     * 
     */
    private final Integer importParallelismDegree;
    /**
     * @return Set to false to force Data Pump worker processes to run on one instance.
     * 
     */
    private final Boolean isCluster;
    /**
     * @return IMPORT: Specifies the action to be performed when data is loaded into a preexisting table.
     * 
     */
    private final String tableExistsAction;

    @CustomType.Constructor
    private GetMigrationDatapumpSettingDataPumpParameter(
        @CustomType.Parameter("estimate") String estimate,
        @CustomType.Parameter("excludeParameters") List<String> excludeParameters,
        @CustomType.Parameter("exportParallelismDegree") Integer exportParallelismDegree,
        @CustomType.Parameter("importParallelismDegree") Integer importParallelismDegree,
        @CustomType.Parameter("isCluster") Boolean isCluster,
        @CustomType.Parameter("tableExistsAction") String tableExistsAction) {
        this.estimate = estimate;
        this.excludeParameters = excludeParameters;
        this.exportParallelismDegree = exportParallelismDegree;
        this.importParallelismDegree = importParallelismDegree;
        this.isCluster = isCluster;
        this.tableExistsAction = tableExistsAction;
    }

    /**
     * @return Estimate size of dumps that will be generated.
     * 
     */
    public String estimate() {
        return this.estimate;
    }
    /**
     * @return Exclude paratemers for Export and Import.
     * 
     */
    public List<String> excludeParameters() {
        return this.excludeParameters;
    }
    /**
     * @return Maximum number of worker processes that can be used for a Data Pump Export job.
     * 
     */
    public Integer exportParallelismDegree() {
        return this.exportParallelismDegree;
    }
    /**
     * @return Maximum number of worker processes that can be used for a Data Pump Import job. For an Autonomous Database, ODMS will automatically query its CPU core count and set this property.
     * 
     */
    public Integer importParallelismDegree() {
        return this.importParallelismDegree;
    }
    /**
     * @return Set to false to force Data Pump worker processes to run on one instance.
     * 
     */
    public Boolean isCluster() {
        return this.isCluster;
    }
    /**
     * @return IMPORT: Specifies the action to be performed when data is loaded into a preexisting table.
     * 
     */
    public String tableExistsAction() {
        return this.tableExistsAction;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigrationDatapumpSettingDataPumpParameter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String estimate;
        private List<String> excludeParameters;
        private Integer exportParallelismDegree;
        private Integer importParallelismDegree;
        private Boolean isCluster;
        private String tableExistsAction;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMigrationDatapumpSettingDataPumpParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.estimate = defaults.estimate;
    	      this.excludeParameters = defaults.excludeParameters;
    	      this.exportParallelismDegree = defaults.exportParallelismDegree;
    	      this.importParallelismDegree = defaults.importParallelismDegree;
    	      this.isCluster = defaults.isCluster;
    	      this.tableExistsAction = defaults.tableExistsAction;
        }

        public Builder estimate(String estimate) {
            this.estimate = Objects.requireNonNull(estimate);
            return this;
        }
        public Builder excludeParameters(List<String> excludeParameters) {
            this.excludeParameters = Objects.requireNonNull(excludeParameters);
            return this;
        }
        public Builder excludeParameters(String... excludeParameters) {
            return excludeParameters(List.of(excludeParameters));
        }
        public Builder exportParallelismDegree(Integer exportParallelismDegree) {
            this.exportParallelismDegree = Objects.requireNonNull(exportParallelismDegree);
            return this;
        }
        public Builder importParallelismDegree(Integer importParallelismDegree) {
            this.importParallelismDegree = Objects.requireNonNull(importParallelismDegree);
            return this;
        }
        public Builder isCluster(Boolean isCluster) {
            this.isCluster = Objects.requireNonNull(isCluster);
            return this;
        }
        public Builder tableExistsAction(String tableExistsAction) {
            this.tableExistsAction = Objects.requireNonNull(tableExistsAction);
            return this;
        }        public GetMigrationDatapumpSettingDataPumpParameter build() {
            return new GetMigrationDatapumpSettingDataPumpParameter(estimate, excludeParameters, exportParallelismDegree, importParallelismDegree, isCluster, tableExistsAction);
        }
    }
}
