// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Limits.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLimitDefinitionsLimitDefinition {
    /**
     * @return If true, quota policies can be created on top of this resource limit.
     * 
     */
    private final Boolean areQuotasSupported;
    /**
     * @return The limit description.
     * 
     */
    private final String description;
    /**
     * @return Indicates if the limit has been deprecated.
     * 
     */
    private final Boolean isDeprecated;
    /**
     * @return The limit for this resource has a dynamic value that is based on consumption across all Oracle Cloud Infrastructure services.
     * 
     */
    private final Boolean isDynamic;
    /**
     * @return Indicates if the customer can request a limit increase for this resource.
     * 
     */
    private final Boolean isEligibleForLimitIncrease;
    /**
     * @return Reflects whether or not the GetResourceAvailability API is supported for this limit. If not, the API returns an empty JSON response.
     * 
     */
    private final Boolean isResourceAvailabilitySupported;
    /**
     * @return Optional field, filter for a specific resource limit.
     * 
     */
    private final String name;
    /**
     * @return Reflects the scope of the resource limit, whether Global (across all regions), regional, or availability domain-specific.
     * 
     */
    private final String scopeType;
    /**
     * @return The target service name.
     * 
     */
    private final String serviceName;

    @CustomType.Constructor
    private GetLimitDefinitionsLimitDefinition(
        @CustomType.Parameter("areQuotasSupported") Boolean areQuotasSupported,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("isDeprecated") Boolean isDeprecated,
        @CustomType.Parameter("isDynamic") Boolean isDynamic,
        @CustomType.Parameter("isEligibleForLimitIncrease") Boolean isEligibleForLimitIncrease,
        @CustomType.Parameter("isResourceAvailabilitySupported") Boolean isResourceAvailabilitySupported,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("scopeType") String scopeType,
        @CustomType.Parameter("serviceName") String serviceName) {
        this.areQuotasSupported = areQuotasSupported;
        this.description = description;
        this.isDeprecated = isDeprecated;
        this.isDynamic = isDynamic;
        this.isEligibleForLimitIncrease = isEligibleForLimitIncrease;
        this.isResourceAvailabilitySupported = isResourceAvailabilitySupported;
        this.name = name;
        this.scopeType = scopeType;
        this.serviceName = serviceName;
    }

    /**
     * @return If true, quota policies can be created on top of this resource limit.
     * 
     */
    public Boolean areQuotasSupported() {
        return this.areQuotasSupported;
    }
    /**
     * @return The limit description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Indicates if the limit has been deprecated.
     * 
     */
    public Boolean isDeprecated() {
        return this.isDeprecated;
    }
    /**
     * @return The limit for this resource has a dynamic value that is based on consumption across all Oracle Cloud Infrastructure services.
     * 
     */
    public Boolean isDynamic() {
        return this.isDynamic;
    }
    /**
     * @return Indicates if the customer can request a limit increase for this resource.
     * 
     */
    public Boolean isEligibleForLimitIncrease() {
        return this.isEligibleForLimitIncrease;
    }
    /**
     * @return Reflects whether or not the GetResourceAvailability API is supported for this limit. If not, the API returns an empty JSON response.
     * 
     */
    public Boolean isResourceAvailabilitySupported() {
        return this.isResourceAvailabilitySupported;
    }
    /**
     * @return Optional field, filter for a specific resource limit.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Reflects the scope of the resource limit, whether Global (across all regions), regional, or availability domain-specific.
     * 
     */
    public String scopeType() {
        return this.scopeType;
    }
    /**
     * @return The target service name.
     * 
     */
    public String serviceName() {
        return this.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLimitDefinitionsLimitDefinition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean areQuotasSupported;
        private String description;
        private Boolean isDeprecated;
        private Boolean isDynamic;
        private Boolean isEligibleForLimitIncrease;
        private Boolean isResourceAvailabilitySupported;
        private String name;
        private String scopeType;
        private String serviceName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLimitDefinitionsLimitDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.areQuotasSupported = defaults.areQuotasSupported;
    	      this.description = defaults.description;
    	      this.isDeprecated = defaults.isDeprecated;
    	      this.isDynamic = defaults.isDynamic;
    	      this.isEligibleForLimitIncrease = defaults.isEligibleForLimitIncrease;
    	      this.isResourceAvailabilitySupported = defaults.isResourceAvailabilitySupported;
    	      this.name = defaults.name;
    	      this.scopeType = defaults.scopeType;
    	      this.serviceName = defaults.serviceName;
        }

        public Builder areQuotasSupported(Boolean areQuotasSupported) {
            this.areQuotasSupported = Objects.requireNonNull(areQuotasSupported);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder isDeprecated(Boolean isDeprecated) {
            this.isDeprecated = Objects.requireNonNull(isDeprecated);
            return this;
        }
        public Builder isDynamic(Boolean isDynamic) {
            this.isDynamic = Objects.requireNonNull(isDynamic);
            return this;
        }
        public Builder isEligibleForLimitIncrease(Boolean isEligibleForLimitIncrease) {
            this.isEligibleForLimitIncrease = Objects.requireNonNull(isEligibleForLimitIncrease);
            return this;
        }
        public Builder isResourceAvailabilitySupported(Boolean isResourceAvailabilitySupported) {
            this.isResourceAvailabilitySupported = Objects.requireNonNull(isResourceAvailabilitySupported);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder scopeType(String scopeType) {
            this.scopeType = Objects.requireNonNull(scopeType);
            return this;
        }
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }        public GetLimitDefinitionsLimitDefinition build() {
            return new GetLimitDefinitionsLimitDefinition(areQuotasSupported, description, isDeprecated, isDynamic, isEligibleForLimitIncrease, isResourceAvailabilitySupported, name, scopeType, serviceName);
        }
    }
}
