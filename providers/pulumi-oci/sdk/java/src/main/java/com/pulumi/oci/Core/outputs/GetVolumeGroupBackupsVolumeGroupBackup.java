// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetVolumeGroupBackupsVolumeGroupBackupSourceDetail;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetVolumeGroupBackupsVolumeGroupBackup {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    private final String displayName;
    /**
     * @return The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     * 
     */
    private final String expirationTime;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The OCID of the volume group backup.
     * 
     */
    private final String id;
    /**
     * @return The aggregate size of the volume group backup, in GBs.
     * 
     */
    private final String sizeInGbs;
    /**
     * @return The aggregate size of the volume group backup, in MBs.
     * 
     */
    private final String sizeInMbs;
    private final List<GetVolumeGroupBackupsVolumeGroupBackupSourceDetail> sourceDetails;
    /**
     * @return Specifies whether the volume group backup was created manually, or via scheduled backup policy.
     * 
     */
    private final String sourceType;
    /**
     * @return The OCID of the source volume group backup.
     * 
     */
    private final String sourceVolumeGroupBackupId;
    /**
     * @return The current state of a volume group backup.
     * 
     */
    private final String state;
    /**
     * @return The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private final String timeCreated;
    /**
     * @return The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private final String timeRequestReceived;
    /**
     * @return The type of backup.
     * 
     */
    private final String type;
    /**
     * @return The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `size_in_gbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
     * 
     */
    private final String uniqueSizeInGbs;
    /**
     * @return The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `size_in_mbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
     * 
     */
    private final String uniqueSizeInMbs;
    /**
     * @return OCIDs for the volume backups in this volume group backup.
     * 
     */
    private final List<String> volumeBackupIds;
    /**
     * @return The OCID of the volume group.
     * 
     */
    private final String volumeGroupId;

    @CustomType.Constructor
    private GetVolumeGroupBackupsVolumeGroupBackup(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("expirationTime") String expirationTime,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("sizeInGbs") String sizeInGbs,
        @CustomType.Parameter("sizeInMbs") String sizeInMbs,
        @CustomType.Parameter("sourceDetails") List<GetVolumeGroupBackupsVolumeGroupBackupSourceDetail> sourceDetails,
        @CustomType.Parameter("sourceType") String sourceType,
        @CustomType.Parameter("sourceVolumeGroupBackupId") String sourceVolumeGroupBackupId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeRequestReceived") String timeRequestReceived,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("uniqueSizeInGbs") String uniqueSizeInGbs,
        @CustomType.Parameter("uniqueSizeInMbs") String uniqueSizeInMbs,
        @CustomType.Parameter("volumeBackupIds") List<String> volumeBackupIds,
        @CustomType.Parameter("volumeGroupId") String volumeGroupId) {
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.expirationTime = expirationTime;
        this.freeformTags = freeformTags;
        this.id = id;
        this.sizeInGbs = sizeInGbs;
        this.sizeInMbs = sizeInMbs;
        this.sourceDetails = sourceDetails;
        this.sourceType = sourceType;
        this.sourceVolumeGroupBackupId = sourceVolumeGroupBackupId;
        this.state = state;
        this.timeCreated = timeCreated;
        this.timeRequestReceived = timeRequestReceived;
        this.type = type;
        this.uniqueSizeInGbs = uniqueSizeInGbs;
        this.uniqueSizeInMbs = uniqueSizeInMbs;
        this.volumeBackupIds = volumeBackupIds;
        this.volumeGroupId = volumeGroupId;
    }

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The date and time the volume group backup will expire and be automatically deleted. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). This parameter will always be present for volume group backups that were created automatically by a scheduled-backup policy. For manually created volume group backups, it will be absent, signifying that there is no expiration time and the backup will last forever until manually deleted.
     * 
     */
    public String expirationTime() {
        return this.expirationTime;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the volume group backup.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The aggregate size of the volume group backup, in GBs.
     * 
     */
    public String sizeInGbs() {
        return this.sizeInGbs;
    }
    /**
     * @return The aggregate size of the volume group backup, in MBs.
     * 
     */
    public String sizeInMbs() {
        return this.sizeInMbs;
    }
    public List<GetVolumeGroupBackupsVolumeGroupBackupSourceDetail> sourceDetails() {
        return this.sourceDetails;
    }
    /**
     * @return Specifies whether the volume group backup was created manually, or via scheduled backup policy.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return The OCID of the source volume group backup.
     * 
     */
    public String sourceVolumeGroupBackupId() {
        return this.sourceVolumeGroupBackupId;
    }
    /**
     * @return The current state of a volume group backup.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the volume group backup was created. This is the time the actual point-in-time image of the volume group data was taken. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the request to create the volume group backup was received. Format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeRequestReceived() {
        return this.timeRequestReceived;
    }
    /**
     * @return The type of backup.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The aggregate size used by the volume group backup, in GBs.  It is typically smaller than `size_in_gbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
     * 
     */
    public String uniqueSizeInGbs() {
        return this.uniqueSizeInGbs;
    }
    /**
     * @return The aggregate size used by the volume group backup, in MBs.  It is typically smaller than `size_in_mbs`, depending on the space consumed on the volume group and whether the volume backup is full or incremental.
     * 
     */
    public String uniqueSizeInMbs() {
        return this.uniqueSizeInMbs;
    }
    /**
     * @return OCIDs for the volume backups in this volume group backup.
     * 
     */
    public List<String> volumeBackupIds() {
        return this.volumeBackupIds;
    }
    /**
     * @return The OCID of the volume group.
     * 
     */
    public String volumeGroupId() {
        return this.volumeGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetVolumeGroupBackupsVolumeGroupBackup defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private String expirationTime;
        private Map<String,Object> freeformTags;
        private String id;
        private String sizeInGbs;
        private String sizeInMbs;
        private List<GetVolumeGroupBackupsVolumeGroupBackupSourceDetail> sourceDetails;
        private String sourceType;
        private String sourceVolumeGroupBackupId;
        private String state;
        private String timeCreated;
        private String timeRequestReceived;
        private String type;
        private String uniqueSizeInGbs;
        private String uniqueSizeInMbs;
        private List<String> volumeBackupIds;
        private String volumeGroupId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetVolumeGroupBackupsVolumeGroupBackup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.expirationTime = defaults.expirationTime;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.sizeInGbs = defaults.sizeInGbs;
    	      this.sizeInMbs = defaults.sizeInMbs;
    	      this.sourceDetails = defaults.sourceDetails;
    	      this.sourceType = defaults.sourceType;
    	      this.sourceVolumeGroupBackupId = defaults.sourceVolumeGroupBackupId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeRequestReceived = defaults.timeRequestReceived;
    	      this.type = defaults.type;
    	      this.uniqueSizeInGbs = defaults.uniqueSizeInGbs;
    	      this.uniqueSizeInMbs = defaults.uniqueSizeInMbs;
    	      this.volumeBackupIds = defaults.volumeBackupIds;
    	      this.volumeGroupId = defaults.volumeGroupId;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder expirationTime(String expirationTime) {
            this.expirationTime = Objects.requireNonNull(expirationTime);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder sizeInGbs(String sizeInGbs) {
            this.sizeInGbs = Objects.requireNonNull(sizeInGbs);
            return this;
        }
        public Builder sizeInMbs(String sizeInMbs) {
            this.sizeInMbs = Objects.requireNonNull(sizeInMbs);
            return this;
        }
        public Builder sourceDetails(List<GetVolumeGroupBackupsVolumeGroupBackupSourceDetail> sourceDetails) {
            this.sourceDetails = Objects.requireNonNull(sourceDetails);
            return this;
        }
        public Builder sourceDetails(GetVolumeGroupBackupsVolumeGroupBackupSourceDetail... sourceDetails) {
            return sourceDetails(List.of(sourceDetails));
        }
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public Builder sourceVolumeGroupBackupId(String sourceVolumeGroupBackupId) {
            this.sourceVolumeGroupBackupId = Objects.requireNonNull(sourceVolumeGroupBackupId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeRequestReceived(String timeRequestReceived) {
            this.timeRequestReceived = Objects.requireNonNull(timeRequestReceived);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder uniqueSizeInGbs(String uniqueSizeInGbs) {
            this.uniqueSizeInGbs = Objects.requireNonNull(uniqueSizeInGbs);
            return this;
        }
        public Builder uniqueSizeInMbs(String uniqueSizeInMbs) {
            this.uniqueSizeInMbs = Objects.requireNonNull(uniqueSizeInMbs);
            return this;
        }
        public Builder volumeBackupIds(List<String> volumeBackupIds) {
            this.volumeBackupIds = Objects.requireNonNull(volumeBackupIds);
            return this;
        }
        public Builder volumeBackupIds(String... volumeBackupIds) {
            return volumeBackupIds(List.of(volumeBackupIds));
        }
        public Builder volumeGroupId(String volumeGroupId) {
            this.volumeGroupId = Objects.requireNonNull(volumeGroupId);
            return this;
        }        public GetVolumeGroupBackupsVolumeGroupBackup build() {
            return new GetVolumeGroupBackupsVolumeGroupBackup(compartmentId, definedTags, displayName, expirationTime, freeformTags, id, sizeInGbs, sizeInMbs, sourceDetails, sourceType, sourceVolumeGroupBackupId, state, timeCreated, timeRequestReceived, type, uniqueSizeInGbs, uniqueSizeInMbs, volumeBackupIds, volumeGroupId);
        }
    }
}
