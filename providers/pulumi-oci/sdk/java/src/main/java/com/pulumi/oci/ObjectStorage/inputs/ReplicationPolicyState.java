// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReplicationPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final ReplicationPolicyState Empty = new ReplicationPolicyState();

    /**
     * The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * @deprecated
     * The &#39;delete_object_in_destination_bucket&#39; field has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'delete_object_in_destination_bucket' field has been deprecated. It is no longer supported. */
    @Import(name="deleteObjectInDestinationBucket")
    private @Nullable Output<String> deleteObjectInDestinationBucket;

    /**
     * @deprecated
     * The &#39;delete_object_in_destination_bucket&#39; field has been deprecated. It is no longer supported.
     * 
     */
    @Deprecated /* The 'delete_object_in_destination_bucket' field has been deprecated. It is no longer supported. */
    public Optional<Output<String>> deleteObjectInDestinationBucket() {
        return Optional.ofNullable(this.deleteObjectInDestinationBucket);
    }

    /**
     * The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
     * 
     */
    @Import(name="destinationBucketName")
    private @Nullable Output<String> destinationBucketName;

    /**
     * @return The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
     * 
     */
    public Optional<Output<String>> destinationBucketName() {
        return Optional.ofNullable(this.destinationBucketName);
    }

    /**
     * The destination region to replicate to, for example &#34;us-ashburn-1&#34;.
     * 
     */
    @Import(name="destinationRegionName")
    private @Nullable Output<String> destinationRegionName;

    /**
     * @return The destination region to replicate to, for example &#34;us-ashburn-1&#34;.
     * 
     */
    public Optional<Output<String>> destinationRegionName() {
        return Optional.ofNullable(this.destinationRegionName);
    }

    /**
     * The name of the policy. Avoid entering confidential information.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The Object Storage namespace used for the request.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The Object Storage namespace used for the request.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * A human-readable description of the status.
     * 
     */
    @Import(name="statusMessage")
    private @Nullable Output<String> statusMessage;

    /**
     * @return A human-readable description of the status.
     * 
     */
    public Optional<Output<String>> statusMessage() {
        return Optional.ofNullable(this.statusMessage);
    }

    /**
     * The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * Changes made to the source bucket before this time has been replicated.
     * 
     */
    @Import(name="timeLastSync")
    private @Nullable Output<String> timeLastSync;

    /**
     * @return Changes made to the source bucket before this time has been replicated.
     * 
     */
    public Optional<Output<String>> timeLastSync() {
        return Optional.ofNullable(this.timeLastSync);
    }

    private ReplicationPolicyState() {}

    private ReplicationPolicyState(ReplicationPolicyState $) {
        this.bucket = $.bucket;
        this.deleteObjectInDestinationBucket = $.deleteObjectInDestinationBucket;
        this.destinationBucketName = $.destinationBucketName;
        this.destinationRegionName = $.destinationRegionName;
        this.name = $.name;
        this.namespace = $.namespace;
        this.status = $.status;
        this.statusMessage = $.statusMessage;
        this.timeCreated = $.timeCreated;
        this.timeLastSync = $.timeLastSync;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReplicationPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReplicationPolicyState $;

        public Builder() {
            $ = new ReplicationPolicyState();
        }

        public Builder(ReplicationPolicyState defaults) {
            $ = new ReplicationPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The &#39;delete_object_in_destination_bucket&#39; field has been deprecated. It is no longer supported.
         * 
         */
        @Deprecated /* The 'delete_object_in_destination_bucket' field has been deprecated. It is no longer supported. */
        public Builder deleteObjectInDestinationBucket(@Nullable Output<String> deleteObjectInDestinationBucket) {
            $.deleteObjectInDestinationBucket = deleteObjectInDestinationBucket;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The &#39;delete_object_in_destination_bucket&#39; field has been deprecated. It is no longer supported.
         * 
         */
        @Deprecated /* The 'delete_object_in_destination_bucket' field has been deprecated. It is no longer supported. */
        public Builder deleteObjectInDestinationBucket(String deleteObjectInDestinationBucket) {
            return deleteObjectInDestinationBucket(Output.of(deleteObjectInDestinationBucket));
        }

        /**
         * @param destinationBucketName The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
         * 
         * @return builder
         * 
         */
        public Builder destinationBucketName(@Nullable Output<String> destinationBucketName) {
            $.destinationBucketName = destinationBucketName;
            return this;
        }

        /**
         * @param destinationBucketName The bucket to replicate to in the destination region. Replication policy creation does not automatically create a destination bucket. Create the destination bucket before creating the policy.
         * 
         * @return builder
         * 
         */
        public Builder destinationBucketName(String destinationBucketName) {
            return destinationBucketName(Output.of(destinationBucketName));
        }

        /**
         * @param destinationRegionName The destination region to replicate to, for example &#34;us-ashburn-1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder destinationRegionName(@Nullable Output<String> destinationRegionName) {
            $.destinationRegionName = destinationRegionName;
            return this;
        }

        /**
         * @param destinationRegionName The destination region to replicate to, for example &#34;us-ashburn-1&#34;.
         * 
         * @return builder
         * 
         */
        public Builder destinationRegionName(String destinationRegionName) {
            return destinationRegionName(Output.of(destinationRegionName));
        }

        /**
         * @param name The name of the policy. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param namespace The Object Storage namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Object Storage namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param status The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The replication status of the policy. If the status is CLIENT_ERROR, once the user fixes the issue described in the status message, the status will become ACTIVE.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusMessage A human-readable description of the status.
         * 
         * @return builder
         * 
         */
        public Builder statusMessage(@Nullable Output<String> statusMessage) {
            $.statusMessage = statusMessage;
            return this;
        }

        /**
         * @param statusMessage A human-readable description of the status.
         * 
         * @return builder
         * 
         */
        public Builder statusMessage(String statusMessage) {
            return statusMessage(Output.of(statusMessage));
        }

        /**
         * @param timeCreated The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date when the replication policy was created as per [RFC 3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeLastSync Changes made to the source bucket before this time has been replicated.
         * 
         * @return builder
         * 
         */
        public Builder timeLastSync(@Nullable Output<String> timeLastSync) {
            $.timeLastSync = timeLastSync;
            return this;
        }

        /**
         * @param timeLastSync Changes made to the source bucket before this time has been replicated.
         * 
         * @return builder
         * 
         */
        public Builder timeLastSync(String timeLastSync) {
            return timeLastSync(Output.of(timeLastSync));
        }

        public ReplicationPolicyState build() {
            return $;
        }
    }

}
