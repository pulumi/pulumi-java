// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceApiKeysBdsApiKey;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceApiKeysFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBdsInstanceApiKeysResult {
    private final List<GetBdsInstanceApiKeysBdsApiKey> bdsApiKeys;
    private final String bdsInstanceId;
    private final @Nullable String displayName;
    private final @Nullable List<GetBdsInstanceApiKeysFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The current status of the API key.
     * 
     */
    private final @Nullable String state;
    /**
     * @return The user OCID for which this API key was created.
     * 
     */
    private final @Nullable String userId;

    @CustomType.Constructor
    private GetBdsInstanceApiKeysResult(
        @CustomType.Parameter("bdsApiKeys") List<GetBdsInstanceApiKeysBdsApiKey> bdsApiKeys,
        @CustomType.Parameter("bdsInstanceId") String bdsInstanceId,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetBdsInstanceApiKeysFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("userId") @Nullable String userId) {
        this.bdsApiKeys = bdsApiKeys;
        this.bdsInstanceId = bdsInstanceId;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.state = state;
        this.userId = userId;
    }

    public List<GetBdsInstanceApiKeysBdsApiKey> bdsApiKeys() {
        return this.bdsApiKeys;
    }
    public String bdsInstanceId() {
        return this.bdsInstanceId;
    }
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetBdsInstanceApiKeysFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current status of the API key.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The user OCID for which this API key was created.
     * 
     */
    public Optional<String> userId() {
        return Optional.ofNullable(this.userId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceApiKeysResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetBdsInstanceApiKeysBdsApiKey> bdsApiKeys;
        private String bdsInstanceId;
        private @Nullable String displayName;
        private @Nullable List<GetBdsInstanceApiKeysFilter> filters;
        private String id;
        private @Nullable String state;
        private @Nullable String userId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBdsInstanceApiKeysResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bdsApiKeys = defaults.bdsApiKeys;
    	      this.bdsInstanceId = defaults.bdsInstanceId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.userId = defaults.userId;
        }

        public Builder bdsApiKeys(List<GetBdsInstanceApiKeysBdsApiKey> bdsApiKeys) {
            this.bdsApiKeys = Objects.requireNonNull(bdsApiKeys);
            return this;
        }
        public Builder bdsApiKeys(GetBdsInstanceApiKeysBdsApiKey... bdsApiKeys) {
            return bdsApiKeys(List.of(bdsApiKeys));
        }
        public Builder bdsInstanceId(String bdsInstanceId) {
            this.bdsInstanceId = Objects.requireNonNull(bdsInstanceId);
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetBdsInstanceApiKeysFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetBdsInstanceApiKeysFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder userId(@Nullable String userId) {
            this.userId = userId;
            return this;
        }        public GetBdsInstanceApiKeysResult build() {
            return new GetBdsInstanceApiKeysResult(bdsApiKeys, bdsInstanceId, displayName, filters, id, state, userId);
        }
    }
}
