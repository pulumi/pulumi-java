// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;


public final class ExternalPluggableDatabaseOperationsInsightsManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final ExternalPluggableDatabaseOperationsInsightsManagementArgs Empty = new ExternalPluggableDatabaseOperationsInsightsManagementArgs();

    /**
     * (Updatable) Enabling OPSI on External Pluggable Databases . Requires boolean value &#34;true&#34; or &#34;false&#34;.
     * 
     */
    @Import(name="enableOperationsInsights", required=true)
    private Output<Boolean> enableOperationsInsights;

    /**
     * @return (Updatable) Enabling OPSI on External Pluggable Databases . Requires boolean value &#34;true&#34; or &#34;false&#34;.
     * 
     */
    public Output<Boolean> enableOperationsInsights() {
        return this.enableOperationsInsights;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    @Import(name="externalDatabaseConnectorId", required=true)
    private Output<String> externalDatabaseConnectorId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
     * 
     */
    public Output<String> externalDatabaseConnectorId() {
        return this.externalDatabaseConnectorId;
    }

    /**
     * The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="externalPluggableDatabaseId", required=true)
    private Output<String> externalPluggableDatabaseId;

    /**
     * @return The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> externalPluggableDatabaseId() {
        return this.externalPluggableDatabaseId;
    }

    private ExternalPluggableDatabaseOperationsInsightsManagementArgs() {}

    private ExternalPluggableDatabaseOperationsInsightsManagementArgs(ExternalPluggableDatabaseOperationsInsightsManagementArgs $) {
        this.enableOperationsInsights = $.enableOperationsInsights;
        this.externalDatabaseConnectorId = $.externalDatabaseConnectorId;
        this.externalPluggableDatabaseId = $.externalPluggableDatabaseId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExternalPluggableDatabaseOperationsInsightsManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExternalPluggableDatabaseOperationsInsightsManagementArgs $;

        public Builder() {
            $ = new ExternalPluggableDatabaseOperationsInsightsManagementArgs();
        }

        public Builder(ExternalPluggableDatabaseOperationsInsightsManagementArgs defaults) {
            $ = new ExternalPluggableDatabaseOperationsInsightsManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enableOperationsInsights (Updatable) Enabling OPSI on External Pluggable Databases . Requires boolean value &#34;true&#34; or &#34;false&#34;.
         * 
         * @return builder
         * 
         */
        public Builder enableOperationsInsights(Output<Boolean> enableOperationsInsights) {
            $.enableOperationsInsights = enableOperationsInsights;
            return this;
        }

        /**
         * @param enableOperationsInsights (Updatable) Enabling OPSI on External Pluggable Databases . Requires boolean value &#34;true&#34; or &#34;false&#34;.
         * 
         * @return builder
         * 
         */
        public Builder enableOperationsInsights(Boolean enableOperationsInsights) {
            return enableOperationsInsights(Output.of(enableOperationsInsights));
        }

        /**
         * @param externalDatabaseConnectorId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         * 
         * @return builder
         * 
         */
        public Builder externalDatabaseConnectorId(Output<String> externalDatabaseConnectorId) {
            $.externalDatabaseConnectorId = externalDatabaseConnectorId;
            return this;
        }

        /**
         * @param externalDatabaseConnectorId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external database connector](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalDatabaseConnectorDetails).
         * 
         * @return builder
         * 
         */
        public Builder externalDatabaseConnectorId(String externalDatabaseConnectorId) {
            return externalDatabaseConnectorId(Output.of(externalDatabaseConnectorId));
        }

        /**
         * @param externalPluggableDatabaseId The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder externalPluggableDatabaseId(Output<String> externalPluggableDatabaseId) {
            $.externalPluggableDatabaseId = externalPluggableDatabaseId;
            return this;
        }

        /**
         * @param externalPluggableDatabaseId The ExternalPluggableDatabaseId [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder externalPluggableDatabaseId(String externalPluggableDatabaseId) {
            return externalPluggableDatabaseId(Output.of(externalPluggableDatabaseId));
        }

        public ExternalPluggableDatabaseOperationsInsightsManagementArgs build() {
            $.enableOperationsInsights = Objects.requireNonNull($.enableOperationsInsights, "expected parameter 'enableOperationsInsights' to be non-null");
            $.externalDatabaseConnectorId = Objects.requireNonNull($.externalDatabaseConnectorId, "expected parameter 'externalDatabaseConnectorId' to be non-null");
            $.externalPluggableDatabaseId = Objects.requireNonNull($.externalPluggableDatabaseId, "expected parameter 'externalPluggableDatabaseId' to be non-null");
            return $;
        }
    }

}
