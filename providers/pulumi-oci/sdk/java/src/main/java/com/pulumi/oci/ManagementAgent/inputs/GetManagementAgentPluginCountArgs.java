// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetManagementAgentPluginCountArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagementAgentPluginCountArgs Empty = new GetManagementAgentPluginCountArgs();

    /**
     * The OCID of the compartment to which a request will be scoped.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment to which a request will be scoped.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The field by which to group Management Agent Plugins
     * 
     */
    @Import(name="groupBy", required=true)
    private Output<String> groupBy;

    /**
     * @return The field by which to group Management Agent Plugins
     * 
     */
    public Output<String> groupBy() {
        return this.groupBy;
    }

    private GetManagementAgentPluginCountArgs() {}

    private GetManagementAgentPluginCountArgs(GetManagementAgentPluginCountArgs $) {
        this.compartmentId = $.compartmentId;
        this.groupBy = $.groupBy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagementAgentPluginCountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagementAgentPluginCountArgs $;

        public Builder() {
            $ = new GetManagementAgentPluginCountArgs();
        }

        public Builder(GetManagementAgentPluginCountArgs defaults) {
            $ = new GetManagementAgentPluginCountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment to which a request will be scoped.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment to which a request will be scoped.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param groupBy The field by which to group Management Agent Plugins
         * 
         * @return builder
         * 
         */
        public Builder groupBy(Output<String> groupBy) {
            $.groupBy = groupBy;
            return this;
        }

        /**
         * @param groupBy The field by which to group Management Agent Plugins
         * 
         * @return builder
         * 
         */
        public Builder groupBy(String groupBy) {
            return groupBy(Output.of(groupBy));
        }

        public GetManagementAgentPluginCountArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.groupBy = Objects.requireNonNull($.groupBy, "expected parameter 'groupBy' to be non-null");
            return $;
        }
    }

}
