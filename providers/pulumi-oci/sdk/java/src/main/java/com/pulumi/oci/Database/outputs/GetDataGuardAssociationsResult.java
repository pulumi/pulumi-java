// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetDataGuardAssociationsDataGuardAssociation;
import com.pulumi.oci.Database.outputs.GetDataGuardAssociationsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetDataGuardAssociationsResult {
    /**
     * @return The list of data_guard_associations.
     * 
     */
    private final List<GetDataGuardAssociationsDataGuardAssociation> dataGuardAssociations;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the reporting database.
     * 
     */
    private final String databaseId;
    private final @Nullable List<GetDataGuardAssociationsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;

    @CustomType.Constructor
    private GetDataGuardAssociationsResult(
        @CustomType.Parameter("dataGuardAssociations") List<GetDataGuardAssociationsDataGuardAssociation> dataGuardAssociations,
        @CustomType.Parameter("databaseId") String databaseId,
        @CustomType.Parameter("filters") @Nullable List<GetDataGuardAssociationsFilter> filters,
        @CustomType.Parameter("id") String id) {
        this.dataGuardAssociations = dataGuardAssociations;
        this.databaseId = databaseId;
        this.filters = filters;
        this.id = id;
    }

    /**
     * @return The list of data_guard_associations.
     * 
     */
    public List<GetDataGuardAssociationsDataGuardAssociation> dataGuardAssociations() {
        return this.dataGuardAssociations;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the reporting database.
     * 
     */
    public String databaseId() {
        return this.databaseId;
    }
    public List<GetDataGuardAssociationsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataGuardAssociationsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetDataGuardAssociationsDataGuardAssociation> dataGuardAssociations;
        private String databaseId;
        private @Nullable List<GetDataGuardAssociationsFilter> filters;
        private String id;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDataGuardAssociationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataGuardAssociations = defaults.dataGuardAssociations;
    	      this.databaseId = defaults.databaseId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
        }

        public Builder dataGuardAssociations(List<GetDataGuardAssociationsDataGuardAssociation> dataGuardAssociations) {
            this.dataGuardAssociations = Objects.requireNonNull(dataGuardAssociations);
            return this;
        }
        public Builder dataGuardAssociations(GetDataGuardAssociationsDataGuardAssociation... dataGuardAssociations) {
            return dataGuardAssociations(List.of(dataGuardAssociations));
        }
        public Builder databaseId(String databaseId) {
            this.databaseId = Objects.requireNonNull(databaseId);
            return this;
        }
        public Builder filters(@Nullable List<GetDataGuardAssociationsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetDataGuardAssociationsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }        public GetDataGuardAssociationsResult build() {
            return new GetDataGuardAssociationsResult(dataGuardAssociations, databaseId, filters, id);
        }
    }
}
