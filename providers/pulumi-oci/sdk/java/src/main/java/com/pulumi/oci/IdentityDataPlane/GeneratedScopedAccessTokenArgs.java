// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.IdentityDataPlane;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GeneratedScopedAccessTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final GeneratedScopedAccessTokenArgs Empty = new GeneratedScopedAccessTokenArgs();

    /**
     * A temporary public key, owned by the service. The service also owns the corresponding private key. This public key will by put inside the security token by the auth service after successful validation of the certificate.
     * 
     */
    @Import(name="publicKey", required=true)
    private Output<String> publicKey;

    /**
     * @return A temporary public key, owned by the service. The service also owns the corresponding private key. This public key will by put inside the security token by the auth service after successful validation of the certificate.
     * 
     */
    public Output<String> publicKey() {
        return this.publicKey;
    }

    /**
     * Scope definition for the scoped access token
     * 
     */
    @Import(name="scope", required=true)
    private Output<String> scope;

    /**
     * @return Scope definition for the scoped access token
     * 
     */
    public Output<String> scope() {
        return this.scope;
    }

    private GeneratedScopedAccessTokenArgs() {}

    private GeneratedScopedAccessTokenArgs(GeneratedScopedAccessTokenArgs $) {
        this.publicKey = $.publicKey;
        this.scope = $.scope;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GeneratedScopedAccessTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GeneratedScopedAccessTokenArgs $;

        public Builder() {
            $ = new GeneratedScopedAccessTokenArgs();
        }

        public Builder(GeneratedScopedAccessTokenArgs defaults) {
            $ = new GeneratedScopedAccessTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param publicKey A temporary public key, owned by the service. The service also owns the corresponding private key. This public key will by put inside the security token by the auth service after successful validation of the certificate.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(Output<String> publicKey) {
            $.publicKey = publicKey;
            return this;
        }

        /**
         * @param publicKey A temporary public key, owned by the service. The service also owns the corresponding private key. This public key will by put inside the security token by the auth service after successful validation of the certificate.
         * 
         * @return builder
         * 
         */
        public Builder publicKey(String publicKey) {
            return publicKey(Output.of(publicKey));
        }

        /**
         * @param scope Scope definition for the scoped access token
         * 
         * @return builder
         * 
         */
        public Builder scope(Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Scope definition for the scoped access token
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        public GeneratedScopedAccessTokenArgs build() {
            $.publicKey = Objects.requireNonNull($.publicKey, "expected parameter 'publicKey' to be non-null");
            $.scope = Objects.requireNonNull($.scope, "expected parameter 'scope' to be non-null");
            return $;
        }
    }

}
