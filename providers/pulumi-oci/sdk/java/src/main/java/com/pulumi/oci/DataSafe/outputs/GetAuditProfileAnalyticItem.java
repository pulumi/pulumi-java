// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetAuditProfileAnalyticItemDimension;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAuditProfileAnalyticItem {
    /**
     * @return Total count of aggregated metric.
     * 
     */
    private final String count;
    /**
     * @return Details of aggregation dimensions used for summarizing audit profiles.
     * 
     */
    private final List<GetAuditProfileAnalyticItemDimension> dimensions;

    @CustomType.Constructor
    private GetAuditProfileAnalyticItem(
        @CustomType.Parameter("count") String count,
        @CustomType.Parameter("dimensions") List<GetAuditProfileAnalyticItemDimension> dimensions) {
        this.count = count;
        this.dimensions = dimensions;
    }

    /**
     * @return Total count of aggregated metric.
     * 
     */
    public String count() {
        return this.count;
    }
    /**
     * @return Details of aggregation dimensions used for summarizing audit profiles.
     * 
     */
    public List<GetAuditProfileAnalyticItemDimension> dimensions() {
        return this.dimensions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditProfileAnalyticItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String count;
        private List<GetAuditProfileAnalyticItemDimension> dimensions;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAuditProfileAnalyticItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.count = defaults.count;
    	      this.dimensions = defaults.dimensions;
        }

        public Builder count(String count) {
            this.count = Objects.requireNonNull(count);
            return this;
        }
        public Builder dimensions(List<GetAuditProfileAnalyticItemDimension> dimensions) {
            this.dimensions = Objects.requireNonNull(dimensions);
            return this;
        }
        public Builder dimensions(GetAuditProfileAnalyticItemDimension... dimensions) {
            return dimensions(List.of(dimensions));
        }        public GetAuditProfileAnalyticItem build() {
            return new GetAuditProfileAnalyticItem(count, dimensions);
        }
    }
}
