// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceCatalog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ServiceCatalog.inputs.PrivateApplicationPackageDetailsArgs;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateApplicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateApplicationArgs Empty = new PrivateApplicationArgs();

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the private application.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the private application.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The name of the private application.
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return (Updatable) The name of the private application.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Base64-encoded logo to use as the private application icon. Template icon file requirements: PNG format, 50 KB maximum, 130 x 130 pixels.
     * 
     */
    @Import(name="logoFileBase64encoded")
    private @Nullable Output<String> logoFileBase64encoded;

    /**
     * @return (Updatable) Base64-encoded logo to use as the private application icon. Template icon file requirements: PNG format, 50 KB maximum, 130 x 130 pixels.
     * 
     */
    public Optional<Output<String>> logoFileBase64encoded() {
        return Optional.ofNullable(this.logoFileBase64encoded);
    }

    /**
     * (Updatable) A long description of the private application.
     * 
     */
    @Import(name="longDescription")
    private @Nullable Output<String> longDescription;

    /**
     * @return (Updatable) A long description of the private application.
     * 
     */
    public Optional<Output<String>> longDescription() {
        return Optional.ofNullable(this.longDescription);
    }

    /**
     * A base object for creating a private application package.
     * 
     */
    @Import(name="packageDetails", required=true)
    private Output<PrivateApplicationPackageDetailsArgs> packageDetails;

    /**
     * @return A base object for creating a private application package.
     * 
     */
    public Output<PrivateApplicationPackageDetailsArgs> packageDetails() {
        return this.packageDetails;
    }

    /**
     * (Updatable) A short description of the private application.
     * 
     */
    @Import(name="shortDescription", required=true)
    private Output<String> shortDescription;

    /**
     * @return (Updatable) A short description of the private application.
     * 
     */
    public Output<String> shortDescription() {
        return this.shortDescription;
    }

    private PrivateApplicationArgs() {}

    private PrivateApplicationArgs(PrivateApplicationArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.logoFileBase64encoded = $.logoFileBase64encoded;
        this.longDescription = $.longDescription;
        this.packageDetails = $.packageDetails;
        this.shortDescription = $.shortDescription;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateApplicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateApplicationArgs $;

        public Builder() {
            $ = new PrivateApplicationArgs();
        }

        public Builder(PrivateApplicationArgs defaults) {
            $ = new PrivateApplicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the private application.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the private application.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) The name of the private application.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The name of the private application.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param logoFileBase64encoded (Updatable) Base64-encoded logo to use as the private application icon. Template icon file requirements: PNG format, 50 KB maximum, 130 x 130 pixels.
         * 
         * @return builder
         * 
         */
        public Builder logoFileBase64encoded(@Nullable Output<String> logoFileBase64encoded) {
            $.logoFileBase64encoded = logoFileBase64encoded;
            return this;
        }

        /**
         * @param logoFileBase64encoded (Updatable) Base64-encoded logo to use as the private application icon. Template icon file requirements: PNG format, 50 KB maximum, 130 x 130 pixels.
         * 
         * @return builder
         * 
         */
        public Builder logoFileBase64encoded(String logoFileBase64encoded) {
            return logoFileBase64encoded(Output.of(logoFileBase64encoded));
        }

        /**
         * @param longDescription (Updatable) A long description of the private application.
         * 
         * @return builder
         * 
         */
        public Builder longDescription(@Nullable Output<String> longDescription) {
            $.longDescription = longDescription;
            return this;
        }

        /**
         * @param longDescription (Updatable) A long description of the private application.
         * 
         * @return builder
         * 
         */
        public Builder longDescription(String longDescription) {
            return longDescription(Output.of(longDescription));
        }

        /**
         * @param packageDetails A base object for creating a private application package.
         * 
         * @return builder
         * 
         */
        public Builder packageDetails(Output<PrivateApplicationPackageDetailsArgs> packageDetails) {
            $.packageDetails = packageDetails;
            return this;
        }

        /**
         * @param packageDetails A base object for creating a private application package.
         * 
         * @return builder
         * 
         */
        public Builder packageDetails(PrivateApplicationPackageDetailsArgs packageDetails) {
            return packageDetails(Output.of(packageDetails));
        }

        /**
         * @param shortDescription (Updatable) A short description of the private application.
         * 
         * @return builder
         * 
         */
        public Builder shortDescription(Output<String> shortDescription) {
            $.shortDescription = shortDescription;
            return this;
        }

        /**
         * @param shortDescription (Updatable) A short description of the private application.
         * 
         * @return builder
         * 
         */
        public Builder shortDescription(String shortDescription) {
            return shortDescription(Output.of(shortDescription));
        }

        public PrivateApplicationArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.packageDetails = Objects.requireNonNull($.packageDetails, "expected parameter 'packageDetails' to be non-null");
            $.shortDescription = Objects.requireNonNull($.shortDescription, "expected parameter 'shortDescription' to be non-null");
            return $;
        }
    }

}
