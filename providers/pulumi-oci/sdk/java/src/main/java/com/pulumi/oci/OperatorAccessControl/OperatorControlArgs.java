// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OperatorAccessControl;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OperatorControlArgs extends com.pulumi.resources.ResourceArgs {

    public static final OperatorControlArgs Empty = new OperatorControlArgs();

    /**
     * (Updatable) List of user groups who can approve an access request associated with a resource governed by this operator control.
     * 
     */
    @Import(name="approverGroupsLists", required=true)
    private Output<List<String>> approverGroupsLists;

    /**
     * @return (Updatable) List of user groups who can approve an access request associated with a resource governed by this operator control.
     * 
     */
    public Output<List<String>> approverGroupsLists() {
        return this.approverGroupsLists;
    }

    /**
     * (Updatable) List of users who can approve an access request associated with a resource governed by this operator control.
     * 
     */
    @Import(name="approversLists")
    private @Nullable Output<List<String>> approversLists;

    /**
     * @return (Updatable) List of users who can approve an access request associated with a resource governed by this operator control.
     * 
     */
    public Optional<Output<List<String>>> approversLists() {
        return Optional.ofNullable(this.approversLists);
    }

    /**
     * (Updatable) The OCID of the compartment that contains this operator control.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment that contains this operator control.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Description of the operator control.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Description of the operator control.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) List of emailId.
     * 
     */
    @Import(name="emailIdLists")
    private @Nullable Output<List<String>> emailIdLists;

    /**
     * @return (Updatable) List of emailId.
     * 
     */
    public Optional<Output<List<String>>> emailIdLists() {
        return Optional.ofNullable(this.emailIdLists);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) Whether all the operator actions have been pre-approved. If yes, all access requests associated with a resource governed by this operator control  will be auto-approved.
     * 
     */
    @Import(name="isFullyPreApproved", required=true)
    private Output<Boolean> isFullyPreApproved;

    /**
     * @return (Updatable) Whether all the operator actions have been pre-approved. If yes, all access requests associated with a resource governed by this operator control  will be auto-approved.
     * 
     */
    public Output<Boolean> isFullyPreApproved() {
        return this.isFullyPreApproved;
    }

    /**
     * (Updatable) Name of the operator control.
     * 
     */
    @Import(name="operatorControlName", required=true)
    private Output<String> operatorControlName;

    /**
     * @return (Updatable) Name of the operator control.
     * 
     */
    public Output<String> operatorControlName() {
        return this.operatorControlName;
    }

    /**
     * (Updatable) List of pre-approved operator actions. Access requests associated with a resource governed by this operator control will be auto-approved if the access request only contain operator actions in the pre-approved list.
     * 
     */
    @Import(name="preApprovedOpActionLists")
    private @Nullable Output<List<String>> preApprovedOpActionLists;

    /**
     * @return (Updatable) List of pre-approved operator actions. Access requests associated with a resource governed by this operator control will be auto-approved if the access request only contain operator actions in the pre-approved list.
     * 
     */
    public Optional<Output<List<String>>> preApprovedOpActionLists() {
        return Optional.ofNullable(this.preApprovedOpActionLists);
    }

    /**
     * resourceType for which the OperatorControl is applicable
     * 
     */
    @Import(name="resourceType", required=true)
    private Output<String> resourceType;

    /**
     * @return resourceType for which the OperatorControl is applicable
     * 
     */
    public Output<String> resourceType() {
        return this.resourceType;
    }

    /**
     * (Updatable) This is the message that will be displayed to the operator users while accessing the system.
     * 
     */
    @Import(name="systemMessage")
    private @Nullable Output<String> systemMessage;

    /**
     * @return (Updatable) This is the message that will be displayed to the operator users while accessing the system.
     * 
     */
    public Optional<Output<String>> systemMessage() {
        return Optional.ofNullable(this.systemMessage);
    }

    private OperatorControlArgs() {}

    private OperatorControlArgs(OperatorControlArgs $) {
        this.approverGroupsLists = $.approverGroupsLists;
        this.approversLists = $.approversLists;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.emailIdLists = $.emailIdLists;
        this.freeformTags = $.freeformTags;
        this.isFullyPreApproved = $.isFullyPreApproved;
        this.operatorControlName = $.operatorControlName;
        this.preApprovedOpActionLists = $.preApprovedOpActionLists;
        this.resourceType = $.resourceType;
        this.systemMessage = $.systemMessage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OperatorControlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OperatorControlArgs $;

        public Builder() {
            $ = new OperatorControlArgs();
        }

        public Builder(OperatorControlArgs defaults) {
            $ = new OperatorControlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param approverGroupsLists (Updatable) List of user groups who can approve an access request associated with a resource governed by this operator control.
         * 
         * @return builder
         * 
         */
        public Builder approverGroupsLists(Output<List<String>> approverGroupsLists) {
            $.approverGroupsLists = approverGroupsLists;
            return this;
        }

        /**
         * @param approverGroupsLists (Updatable) List of user groups who can approve an access request associated with a resource governed by this operator control.
         * 
         * @return builder
         * 
         */
        public Builder approverGroupsLists(List<String> approverGroupsLists) {
            return approverGroupsLists(Output.of(approverGroupsLists));
        }

        /**
         * @param approverGroupsLists (Updatable) List of user groups who can approve an access request associated with a resource governed by this operator control.
         * 
         * @return builder
         * 
         */
        public Builder approverGroupsLists(String... approverGroupsLists) {
            return approverGroupsLists(List.of(approverGroupsLists));
        }

        /**
         * @param approversLists (Updatable) List of users who can approve an access request associated with a resource governed by this operator control.
         * 
         * @return builder
         * 
         */
        public Builder approversLists(@Nullable Output<List<String>> approversLists) {
            $.approversLists = approversLists;
            return this;
        }

        /**
         * @param approversLists (Updatable) List of users who can approve an access request associated with a resource governed by this operator control.
         * 
         * @return builder
         * 
         */
        public Builder approversLists(List<String> approversLists) {
            return approversLists(Output.of(approversLists));
        }

        /**
         * @param approversLists (Updatable) List of users who can approve an access request associated with a resource governed by this operator control.
         * 
         * @return builder
         * 
         */
        public Builder approversLists(String... approversLists) {
            return approversLists(List.of(approversLists));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains this operator control.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains this operator control.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace.
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Description of the operator control.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Description of the operator control.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param emailIdLists (Updatable) List of emailId.
         * 
         * @return builder
         * 
         */
        public Builder emailIdLists(@Nullable Output<List<String>> emailIdLists) {
            $.emailIdLists = emailIdLists;
            return this;
        }

        /**
         * @param emailIdLists (Updatable) List of emailId.
         * 
         * @return builder
         * 
         */
        public Builder emailIdLists(List<String> emailIdLists) {
            return emailIdLists(Output.of(emailIdLists));
        }

        /**
         * @param emailIdLists (Updatable) List of emailId.
         * 
         * @return builder
         * 
         */
        public Builder emailIdLists(String... emailIdLists) {
            return emailIdLists(List.of(emailIdLists));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isFullyPreApproved (Updatable) Whether all the operator actions have been pre-approved. If yes, all access requests associated with a resource governed by this operator control  will be auto-approved.
         * 
         * @return builder
         * 
         */
        public Builder isFullyPreApproved(Output<Boolean> isFullyPreApproved) {
            $.isFullyPreApproved = isFullyPreApproved;
            return this;
        }

        /**
         * @param isFullyPreApproved (Updatable) Whether all the operator actions have been pre-approved. If yes, all access requests associated with a resource governed by this operator control  will be auto-approved.
         * 
         * @return builder
         * 
         */
        public Builder isFullyPreApproved(Boolean isFullyPreApproved) {
            return isFullyPreApproved(Output.of(isFullyPreApproved));
        }

        /**
         * @param operatorControlName (Updatable) Name of the operator control.
         * 
         * @return builder
         * 
         */
        public Builder operatorControlName(Output<String> operatorControlName) {
            $.operatorControlName = operatorControlName;
            return this;
        }

        /**
         * @param operatorControlName (Updatable) Name of the operator control.
         * 
         * @return builder
         * 
         */
        public Builder operatorControlName(String operatorControlName) {
            return operatorControlName(Output.of(operatorControlName));
        }

        /**
         * @param preApprovedOpActionLists (Updatable) List of pre-approved operator actions. Access requests associated with a resource governed by this operator control will be auto-approved if the access request only contain operator actions in the pre-approved list.
         * 
         * @return builder
         * 
         */
        public Builder preApprovedOpActionLists(@Nullable Output<List<String>> preApprovedOpActionLists) {
            $.preApprovedOpActionLists = preApprovedOpActionLists;
            return this;
        }

        /**
         * @param preApprovedOpActionLists (Updatable) List of pre-approved operator actions. Access requests associated with a resource governed by this operator control will be auto-approved if the access request only contain operator actions in the pre-approved list.
         * 
         * @return builder
         * 
         */
        public Builder preApprovedOpActionLists(List<String> preApprovedOpActionLists) {
            return preApprovedOpActionLists(Output.of(preApprovedOpActionLists));
        }

        /**
         * @param preApprovedOpActionLists (Updatable) List of pre-approved operator actions. Access requests associated with a resource governed by this operator control will be auto-approved if the access request only contain operator actions in the pre-approved list.
         * 
         * @return builder
         * 
         */
        public Builder preApprovedOpActionLists(String... preApprovedOpActionLists) {
            return preApprovedOpActionLists(List.of(preApprovedOpActionLists));
        }

        /**
         * @param resourceType resourceType for which the OperatorControl is applicable
         * 
         * @return builder
         * 
         */
        public Builder resourceType(Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType resourceType for which the OperatorControl is applicable
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param systemMessage (Updatable) This is the message that will be displayed to the operator users while accessing the system.
         * 
         * @return builder
         * 
         */
        public Builder systemMessage(@Nullable Output<String> systemMessage) {
            $.systemMessage = systemMessage;
            return this;
        }

        /**
         * @param systemMessage (Updatable) This is the message that will be displayed to the operator users while accessing the system.
         * 
         * @return builder
         * 
         */
        public Builder systemMessage(String systemMessage) {
            return systemMessage(Output.of(systemMessage));
        }

        public OperatorControlArgs build() {
            $.approverGroupsLists = Objects.requireNonNull($.approverGroupsLists, "expected parameter 'approverGroupsLists' to be non-null");
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.isFullyPreApproved = Objects.requireNonNull($.isFullyPreApproved, "expected parameter 'isFullyPreApproved' to be non-null");
            $.operatorControlName = Objects.requireNonNull($.operatorControlName, "expected parameter 'operatorControlName' to be non-null");
            $.resourceType = Objects.requireNonNull($.resourceType, "expected parameter 'resourceType' to be non-null");
            return $;
        }
    }

}
