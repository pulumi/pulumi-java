// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceCloudSqlDetailKerberosDetail;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBdsInstanceCloudSqlDetail {
    /**
     * @return The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     * 
     */
    private final String blockVolumeSizeInGbs;
    /**
     * @return IP address of the node.
     * 
     */
    private final String ipAddress;
    /**
     * @return Boolean flag specifying whether or not Kerberos principals are mapped to database users.
     * 
     */
    private final Boolean isKerberosMappedToDatabaseUsers;
    /**
     * @return Details about the Kerberos principals.
     * 
     */
    private final List<GetBdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails;
    /**
     * @return Shape of the node.
     * 
     */
    private final String shape;

    @CustomType.Constructor
    private GetBdsInstanceCloudSqlDetail(
        @CustomType.Parameter("blockVolumeSizeInGbs") String blockVolumeSizeInGbs,
        @CustomType.Parameter("ipAddress") String ipAddress,
        @CustomType.Parameter("isKerberosMappedToDatabaseUsers") Boolean isKerberosMappedToDatabaseUsers,
        @CustomType.Parameter("kerberosDetails") List<GetBdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails,
        @CustomType.Parameter("shape") String shape) {
        this.blockVolumeSizeInGbs = blockVolumeSizeInGbs;
        this.ipAddress = ipAddress;
        this.isKerberosMappedToDatabaseUsers = isKerberosMappedToDatabaseUsers;
        this.kerberosDetails = kerberosDetails;
        this.shape = shape;
    }

    /**
     * @return The size of block volume in GB that needs to be attached to a given node. All the necessary details needed for attachment are managed by service itself.
     * 
     */
    public String blockVolumeSizeInGbs() {
        return this.blockVolumeSizeInGbs;
    }
    /**
     * @return IP address of the node.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return Boolean flag specifying whether or not Kerberos principals are mapped to database users.
     * 
     */
    public Boolean isKerberosMappedToDatabaseUsers() {
        return this.isKerberosMappedToDatabaseUsers;
    }
    /**
     * @return Details about the Kerberos principals.
     * 
     */
    public List<GetBdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails() {
        return this.kerberosDetails;
    }
    /**
     * @return Shape of the node.
     * 
     */
    public String shape() {
        return this.shape;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceCloudSqlDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String blockVolumeSizeInGbs;
        private String ipAddress;
        private Boolean isKerberosMappedToDatabaseUsers;
        private List<GetBdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails;
        private String shape;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBdsInstanceCloudSqlDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockVolumeSizeInGbs = defaults.blockVolumeSizeInGbs;
    	      this.ipAddress = defaults.ipAddress;
    	      this.isKerberosMappedToDatabaseUsers = defaults.isKerberosMappedToDatabaseUsers;
    	      this.kerberosDetails = defaults.kerberosDetails;
    	      this.shape = defaults.shape;
        }

        public Builder blockVolumeSizeInGbs(String blockVolumeSizeInGbs) {
            this.blockVolumeSizeInGbs = Objects.requireNonNull(blockVolumeSizeInGbs);
            return this;
        }
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        public Builder isKerberosMappedToDatabaseUsers(Boolean isKerberosMappedToDatabaseUsers) {
            this.isKerberosMappedToDatabaseUsers = Objects.requireNonNull(isKerberosMappedToDatabaseUsers);
            return this;
        }
        public Builder kerberosDetails(List<GetBdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails) {
            this.kerberosDetails = Objects.requireNonNull(kerberosDetails);
            return this;
        }
        public Builder kerberosDetails(GetBdsInstanceCloudSqlDetailKerberosDetail... kerberosDetails) {
            return kerberosDetails(List.of(kerberosDetails));
        }
        public Builder shape(String shape) {
            this.shape = Objects.requireNonNull(shape);
            return this;
        }        public GetBdsInstanceCloudSqlDetail build() {
            return new GetBdsInstanceCloudSqlDetail(blockVolumeSizeInGbs, ipAddress, isKerberosMappedToDatabaseUsers, kerberosDetails, shape);
        }
    }
}
