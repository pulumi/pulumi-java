// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetEnterpriseManagerBridgeResult {
    /**
     * @return Compartment identifier of the Enterprise Manager bridge
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Description of Enterprise Manager Bridge
     * 
     */
    private final String description;
    /**
     * @return User-friedly name of Enterprise Manager Bridge that does not have to be unique.
     * 
     */
    private final String displayName;
    private final String enterpriseManagerBridgeId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return Enterprise Manager bridge identifier
     * 
     */
    private final String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return Object Storage Bucket Name
     * 
     */
    private final String objectStorageBucketName;
    /**
     * @return A message describing status of the object storage bucket of this resource. For example, it can be used to provide actionable information about the permission and content validity of the bucket.
     * 
     */
    private final String objectStorageBucketStatusDetails;
    /**
     * @return Object Storage Namespace Name
     * 
     */
    private final String objectStorageNamespaceName;
    /**
     * @return The current state of the Enterprise Manager bridge.
     * 
     */
    private final String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The time the the Enterprise Manager bridge was first created. An RFC3339 formatted datetime string
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the Enterprise Manager bridge was updated. An RFC3339 formatted datetime string
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetEnterpriseManagerBridgeResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("enterpriseManagerBridgeId") String enterpriseManagerBridgeId,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("objectStorageBucketName") String objectStorageBucketName,
        @CustomType.Parameter("objectStorageBucketStatusDetails") String objectStorageBucketStatusDetails,
        @CustomType.Parameter("objectStorageNamespaceName") String objectStorageNamespaceName,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.description = description;
        this.displayName = displayName;
        this.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
        this.freeformTags = freeformTags;
        this.id = id;
        this.lifecycleDetails = lifecycleDetails;
        this.objectStorageBucketName = objectStorageBucketName;
        this.objectStorageBucketStatusDetails = objectStorageBucketStatusDetails;
        this.objectStorageNamespaceName = objectStorageNamespaceName;
        this.state = state;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return Compartment identifier of the Enterprise Manager bridge
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of Enterprise Manager Bridge
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return User-friedly name of Enterprise Manager Bridge that does not have to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public String enterpriseManagerBridgeId() {
        return this.enterpriseManagerBridgeId;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Enterprise Manager bridge identifier
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Object Storage Bucket Name
     * 
     */
    public String objectStorageBucketName() {
        return this.objectStorageBucketName;
    }
    /**
     * @return A message describing status of the object storage bucket of this resource. For example, it can be used to provide actionable information about the permission and content validity of the bucket.
     * 
     */
    public String objectStorageBucketStatusDetails() {
        return this.objectStorageBucketStatusDetails;
    }
    /**
     * @return Object Storage Namespace Name
     * 
     */
    public String objectStorageNamespaceName() {
        return this.objectStorageNamespaceName;
    }
    /**
     * @return The current state of the Enterprise Manager bridge.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the the Enterprise Manager bridge was first created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the Enterprise Manager bridge was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEnterpriseManagerBridgeResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private String enterpriseManagerBridgeId;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String objectStorageBucketName;
        private String objectStorageBucketStatusDetails;
        private String objectStorageNamespaceName;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEnterpriseManagerBridgeResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.enterpriseManagerBridgeId = defaults.enterpriseManagerBridgeId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.objectStorageBucketName = defaults.objectStorageBucketName;
    	      this.objectStorageBucketStatusDetails = defaults.objectStorageBucketStatusDetails;
    	      this.objectStorageNamespaceName = defaults.objectStorageNamespaceName;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder enterpriseManagerBridgeId(String enterpriseManagerBridgeId) {
            this.enterpriseManagerBridgeId = Objects.requireNonNull(enterpriseManagerBridgeId);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder objectStorageBucketName(String objectStorageBucketName) {
            this.objectStorageBucketName = Objects.requireNonNull(objectStorageBucketName);
            return this;
        }
        public Builder objectStorageBucketStatusDetails(String objectStorageBucketStatusDetails) {
            this.objectStorageBucketStatusDetails = Objects.requireNonNull(objectStorageBucketStatusDetails);
            return this;
        }
        public Builder objectStorageNamespaceName(String objectStorageNamespaceName) {
            this.objectStorageNamespaceName = Objects.requireNonNull(objectStorageNamespaceName);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetEnterpriseManagerBridgeResult build() {
            return new GetEnterpriseManagerBridgeResult(compartmentId, definedTags, description, displayName, enterpriseManagerBridgeId, freeformTags, id, lifecycleDetails, objectStorageBucketName, objectStorageBucketStatusDetails, objectStorageNamespaceName, state, systemTags, timeCreated, timeUpdated);
        }
    }
}
