// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthorityCurrentVersionRevocationStatus;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthorityCurrentVersionValidity;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCertificateAuthorityCurrentVersion {
    /**
     * @return The OCID of the certificate authority (CA).
     * 
     */
    private final String certificateAuthorityId;
    /**
     * @return The version number of the issuing CA.
     * 
     */
    private final String issuerCaVersionNumber;
    /**
     * @return The current revocation status of the entity.
     * 
     */
    private final List<GetCertificateAuthorityCurrentVersionRevocationStatus> revocationStatuses;
    /**
     * @return Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
     * 
     */
    private final String serialNumber;
    /**
     * @return A list of rotation states for this CA version.
     * 
     */
    private final List<String> stages;
    /**
     * @return A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    private final String timeCreated;
    /**
     * @return An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    private final String timeOfDeletion;
    /**
     * @return An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
     * 
     */
    private final List<GetCertificateAuthorityCurrentVersionValidity> validities;
    /**
     * @return The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
     * 
     */
    private final String versionName;
    /**
     * @return The version number of the CA.
     * 
     */
    private final String versionNumber;

    @CustomType.Constructor
    private GetCertificateAuthorityCurrentVersion(
        @CustomType.Parameter("certificateAuthorityId") String certificateAuthorityId,
        @CustomType.Parameter("issuerCaVersionNumber") String issuerCaVersionNumber,
        @CustomType.Parameter("revocationStatuses") List<GetCertificateAuthorityCurrentVersionRevocationStatus> revocationStatuses,
        @CustomType.Parameter("serialNumber") String serialNumber,
        @CustomType.Parameter("stages") List<String> stages,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeOfDeletion") String timeOfDeletion,
        @CustomType.Parameter("validities") List<GetCertificateAuthorityCurrentVersionValidity> validities,
        @CustomType.Parameter("versionName") String versionName,
        @CustomType.Parameter("versionNumber") String versionNumber) {
        this.certificateAuthorityId = certificateAuthorityId;
        this.issuerCaVersionNumber = issuerCaVersionNumber;
        this.revocationStatuses = revocationStatuses;
        this.serialNumber = serialNumber;
        this.stages = stages;
        this.timeCreated = timeCreated;
        this.timeOfDeletion = timeOfDeletion;
        this.validities = validities;
        this.versionName = versionName;
        this.versionNumber = versionNumber;
    }

    /**
     * @return The OCID of the certificate authority (CA).
     * 
     */
    public String certificateAuthorityId() {
        return this.certificateAuthorityId;
    }
    /**
     * @return The version number of the issuing CA.
     * 
     */
    public String issuerCaVersionNumber() {
        return this.issuerCaVersionNumber;
    }
    /**
     * @return The current revocation status of the entity.
     * 
     */
    public List<GetCertificateAuthorityCurrentVersionRevocationStatus> revocationStatuses() {
        return this.revocationStatuses;
    }
    /**
     * @return Unique subject identifier, which is not the same as the certificate serial number (RDN SERIALNUMBER).
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return A list of rotation states for this CA version.
     * 
     */
    public List<String> stages() {
        return this.stages;
    }
    /**
     * @return A property indicating when the CA was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public String timeOfDeletion() {
        return this.timeOfDeletion;
    }
    /**
     * @return An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
     * 
     */
    public List<GetCertificateAuthorityCurrentVersionValidity> validities() {
        return this.validities;
    }
    /**
     * @return The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
     * 
     */
    public String versionName() {
        return this.versionName;
    }
    /**
     * @return The version number of the CA.
     * 
     */
    public String versionNumber() {
        return this.versionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateAuthorityCurrentVersion defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String certificateAuthorityId;
        private String issuerCaVersionNumber;
        private List<GetCertificateAuthorityCurrentVersionRevocationStatus> revocationStatuses;
        private String serialNumber;
        private List<String> stages;
        private String timeCreated;
        private String timeOfDeletion;
        private List<GetCertificateAuthorityCurrentVersionValidity> validities;
        private String versionName;
        private String versionNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCertificateAuthorityCurrentVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthorityId = defaults.certificateAuthorityId;
    	      this.issuerCaVersionNumber = defaults.issuerCaVersionNumber;
    	      this.revocationStatuses = defaults.revocationStatuses;
    	      this.serialNumber = defaults.serialNumber;
    	      this.stages = defaults.stages;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfDeletion = defaults.timeOfDeletion;
    	      this.validities = defaults.validities;
    	      this.versionName = defaults.versionName;
    	      this.versionNumber = defaults.versionNumber;
        }

        public Builder certificateAuthorityId(String certificateAuthorityId) {
            this.certificateAuthorityId = Objects.requireNonNull(certificateAuthorityId);
            return this;
        }
        public Builder issuerCaVersionNumber(String issuerCaVersionNumber) {
            this.issuerCaVersionNumber = Objects.requireNonNull(issuerCaVersionNumber);
            return this;
        }
        public Builder revocationStatuses(List<GetCertificateAuthorityCurrentVersionRevocationStatus> revocationStatuses) {
            this.revocationStatuses = Objects.requireNonNull(revocationStatuses);
            return this;
        }
        public Builder revocationStatuses(GetCertificateAuthorityCurrentVersionRevocationStatus... revocationStatuses) {
            return revocationStatuses(List.of(revocationStatuses));
        }
        public Builder serialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        public Builder stages(List<String> stages) {
            this.stages = Objects.requireNonNull(stages);
            return this;
        }
        public Builder stages(String... stages) {
            return stages(List.of(stages));
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeOfDeletion(String timeOfDeletion) {
            this.timeOfDeletion = Objects.requireNonNull(timeOfDeletion);
            return this;
        }
        public Builder validities(List<GetCertificateAuthorityCurrentVersionValidity> validities) {
            this.validities = Objects.requireNonNull(validities);
            return this;
        }
        public Builder validities(GetCertificateAuthorityCurrentVersionValidity... validities) {
            return validities(List.of(validities));
        }
        public Builder versionName(String versionName) {
            this.versionName = Objects.requireNonNull(versionName);
            return this;
        }
        public Builder versionNumber(String versionNumber) {
            this.versionNumber = Objects.requireNonNull(versionNumber);
            return this;
        }        public GetCertificateAuthorityCurrentVersion build() {
            return new GetCertificateAuthorityCurrentVersion(certificateAuthorityId, issuerCaVersionNumber, revocationStatuses, serialNumber, stages, timeCreated, timeOfDeletion, validities, versionName, versionNumber);
        }
    }
}
