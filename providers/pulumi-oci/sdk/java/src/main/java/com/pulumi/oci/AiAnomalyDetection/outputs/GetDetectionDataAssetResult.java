// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiAnomalyDetection.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.AiAnomalyDetection.outputs.GetDetectionDataAssetDataSourceDetail;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDetectionDataAssetResult {
    /**
     * @return The OCID of the compartment containing the DataAsset.
     * 
     */
    private final String compartmentId;
    private final String dataAssetId;
    /**
     * @return Possible data sources
     * 
     */
    private final List<GetDetectionDataAssetDataSourceDetail> dataSourceDetails;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return A short description of the data asset.
     * 
     */
    private final String description;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private final String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The Unique Oracle ID (OCID) that is immutable on creation.
     * 
     */
    private final String id;
    /**
     * @return OCID of Private Endpoint.
     * 
     */
    private final String privateEndpointId;
    /**
     * @return The Unique project id which is created at project creation that is immutable on creation.
     * 
     */
    private final String projectId;
    /**
     * @return The lifecycle state of the Data Asset.
     * 
     */
    private final String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The time the the DataAsset was created. An RFC3339 formatted datetime string
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the the DataAsset was updated. An RFC3339 formatted datetime string
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetDetectionDataAssetResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("dataAssetId") String dataAssetId,
        @CustomType.Parameter("dataSourceDetails") List<GetDetectionDataAssetDataSourceDetail> dataSourceDetails,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("privateEndpointId") String privateEndpointId,
        @CustomType.Parameter("projectId") String projectId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.compartmentId = compartmentId;
        this.dataAssetId = dataAssetId;
        this.dataSourceDetails = dataSourceDetails;
        this.definedTags = definedTags;
        this.description = description;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.privateEndpointId = privateEndpointId;
        this.projectId = projectId;
        this.state = state;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return The OCID of the compartment containing the DataAsset.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public String dataAssetId() {
        return this.dataAssetId;
    }
    /**
     * @return Possible data sources
     * 
     */
    public List<GetDetectionDataAssetDataSourceDetail> dataSourceDetails() {
        return this.dataSourceDetails;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A short description of the data asset.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The Unique Oracle ID (OCID) that is immutable on creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return OCID of Private Endpoint.
     * 
     */
    public String privateEndpointId() {
        return this.privateEndpointId;
    }
    /**
     * @return The Unique project id which is created at project creation that is immutable on creation.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The lifecycle state of the Data Asset.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the the DataAsset was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the the DataAsset was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDetectionDataAssetResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private String dataAssetId;
        private List<GetDetectionDataAssetDataSourceDetail> dataSourceDetails;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String privateEndpointId;
        private String projectId;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDetectionDataAssetResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.dataAssetId = defaults.dataAssetId;
    	      this.dataSourceDetails = defaults.dataSourceDetails;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.privateEndpointId = defaults.privateEndpointId;
    	      this.projectId = defaults.projectId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder dataAssetId(String dataAssetId) {
            this.dataAssetId = Objects.requireNonNull(dataAssetId);
            return this;
        }
        public Builder dataSourceDetails(List<GetDetectionDataAssetDataSourceDetail> dataSourceDetails) {
            this.dataSourceDetails = Objects.requireNonNull(dataSourceDetails);
            return this;
        }
        public Builder dataSourceDetails(GetDetectionDataAssetDataSourceDetail... dataSourceDetails) {
            return dataSourceDetails(List.of(dataSourceDetails));
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder privateEndpointId(String privateEndpointId) {
            this.privateEndpointId = Objects.requireNonNull(privateEndpointId);
            return this;
        }
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetDetectionDataAssetResult build() {
            return new GetDetectionDataAssetResult(compartmentId, dataAssetId, dataSourceDetails, definedTags, description, displayName, freeformTags, id, privateEndpointId, projectId, state, systemTags, timeCreated, timeUpdated);
        }
    }
}
