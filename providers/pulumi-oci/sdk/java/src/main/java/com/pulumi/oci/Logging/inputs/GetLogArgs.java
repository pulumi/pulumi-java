// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetLogArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLogArgs Empty = new GetLogArgs();

    /**
     * OCID of a log group to work with.
     * 
     */
    @Import(name="logGroupId", required=true)
    private String logGroupId;

    /**
     * @return OCID of a log group to work with.
     * 
     */
    public String logGroupId() {
        return this.logGroupId;
    }

    /**
     * OCID of a log to work with.
     * 
     */
    @Import(name="logId", required=true)
    private String logId;

    /**
     * @return OCID of a log to work with.
     * 
     */
    public String logId() {
        return this.logId;
    }

    private GetLogArgs() {}

    private GetLogArgs(GetLogArgs $) {
        this.logGroupId = $.logGroupId;
        this.logId = $.logId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogArgs $;

        public Builder() {
            $ = new GetLogArgs();
        }

        public Builder(GetLogArgs defaults) {
            $ = new GetLogArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param logGroupId OCID of a log group to work with.
         * 
         * @return builder
         * 
         */
        public Builder logGroupId(String logGroupId) {
            $.logGroupId = logGroupId;
            return this;
        }

        /**
         * @param logId OCID of a log to work with.
         * 
         * @return builder
         * 
         */
        public Builder logId(String logId) {
            $.logId = logId;
            return this;
        }

        public GetLogArgs build() {
            $.logGroupId = Objects.requireNonNull($.logGroupId, "expected parameter 'logGroupId' to be non-null");
            $.logId = Objects.requireNonNull($.logId, "expected parameter 'logId' to be non-null");
            return $;
        }
    }

}
