// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waf.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Waf.outputs.GetProtectionCapabilitiesProtectionCapabilityCollectionItemCollaborativeWeight;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProtectionCapabilitiesProtectionCapabilityCollectionItem {
    /**
     * @return The default collaborative action threshold for OCI-managed collaborative protection capability. Collaborative protection capabilities are made of several simple, non-collaborative protection capabilities (referred to as `contributing capabilities` later on) which have weights assigned to them. These weights can be found in the `collaborativeWeights` array. For incoming/outgoing HTTP messages, all contributing capabilities are executed and the sum of all triggered contributing capabilities weights is calculated. Only if this sum is greater than or equal to `collaborativeActionThreshold` is the incoming/outgoing HTTP message marked as malicious.
     * 
     */
    private final Integer collaborativeActionThreshold;
    /**
     * @return The weights of contributing capabilities. Defines how much each contributing capability contributes towards the action threshold of a collaborative protection capability.
     * 
     */
    private final List<GetProtectionCapabilitiesProtectionCapabilityCollectionItemCollaborativeWeight> collaborativeWeights;
    /**
     * @return The description of protection capability.
     * 
     */
    private final String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private final String displayName;
    /**
     * @return The list of unique names protection capability group tags that are associated with this capability. Example: [&#34;PCI&#34;, &#34;Recommended&#34;]
     * 
     */
    private final List<String> groupTags;
    /**
     * @return A filter to return only resources that matches given isLatestVersion.
     * 
     */
    private final Boolean isLatestVersion;
    /**
     * @return The unique key of protection capability to filter by.
     * 
     */
    private final String key;
    /**
     * @return A filter to return only resources that matches given type.
     * 
     */
    private final String type;
    /**
     * @return The version of protection capability.
     * 
     */
    private final Integer version;

    @CustomType.Constructor
    private GetProtectionCapabilitiesProtectionCapabilityCollectionItem(
        @CustomType.Parameter("collaborativeActionThreshold") Integer collaborativeActionThreshold,
        @CustomType.Parameter("collaborativeWeights") List<GetProtectionCapabilitiesProtectionCapabilityCollectionItemCollaborativeWeight> collaborativeWeights,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("groupTags") List<String> groupTags,
        @CustomType.Parameter("isLatestVersion") Boolean isLatestVersion,
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("version") Integer version) {
        this.collaborativeActionThreshold = collaborativeActionThreshold;
        this.collaborativeWeights = collaborativeWeights;
        this.description = description;
        this.displayName = displayName;
        this.groupTags = groupTags;
        this.isLatestVersion = isLatestVersion;
        this.key = key;
        this.type = type;
        this.version = version;
    }

    /**
     * @return The default collaborative action threshold for OCI-managed collaborative protection capability. Collaborative protection capabilities are made of several simple, non-collaborative protection capabilities (referred to as `contributing capabilities` later on) which have weights assigned to them. These weights can be found in the `collaborativeWeights` array. For incoming/outgoing HTTP messages, all contributing capabilities are executed and the sum of all triggered contributing capabilities weights is calculated. Only if this sum is greater than or equal to `collaborativeActionThreshold` is the incoming/outgoing HTTP message marked as malicious.
     * 
     */
    public Integer collaborativeActionThreshold() {
        return this.collaborativeActionThreshold;
    }
    /**
     * @return The weights of contributing capabilities. Defines how much each contributing capability contributes towards the action threshold of a collaborative protection capability.
     * 
     */
    public List<GetProtectionCapabilitiesProtectionCapabilityCollectionItemCollaborativeWeight> collaborativeWeights() {
        return this.collaborativeWeights;
    }
    /**
     * @return The description of protection capability.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The list of unique names protection capability group tags that are associated with this capability. Example: [&#34;PCI&#34;, &#34;Recommended&#34;]
     * 
     */
    public List<String> groupTags() {
        return this.groupTags;
    }
    /**
     * @return A filter to return only resources that matches given isLatestVersion.
     * 
     */
    public Boolean isLatestVersion() {
        return this.isLatestVersion;
    }
    /**
     * @return The unique key of protection capability to filter by.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return A filter to return only resources that matches given type.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The version of protection capability.
     * 
     */
    public Integer version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProtectionCapabilitiesProtectionCapabilityCollectionItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer collaborativeActionThreshold;
        private List<GetProtectionCapabilitiesProtectionCapabilityCollectionItemCollaborativeWeight> collaborativeWeights;
        private String description;
        private String displayName;
        private List<String> groupTags;
        private Boolean isLatestVersion;
        private String key;
        private String type;
        private Integer version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProtectionCapabilitiesProtectionCapabilityCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.collaborativeActionThreshold = defaults.collaborativeActionThreshold;
    	      this.collaborativeWeights = defaults.collaborativeWeights;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.groupTags = defaults.groupTags;
    	      this.isLatestVersion = defaults.isLatestVersion;
    	      this.key = defaults.key;
    	      this.type = defaults.type;
    	      this.version = defaults.version;
        }

        public Builder collaborativeActionThreshold(Integer collaborativeActionThreshold) {
            this.collaborativeActionThreshold = Objects.requireNonNull(collaborativeActionThreshold);
            return this;
        }
        public Builder collaborativeWeights(List<GetProtectionCapabilitiesProtectionCapabilityCollectionItemCollaborativeWeight> collaborativeWeights) {
            this.collaborativeWeights = Objects.requireNonNull(collaborativeWeights);
            return this;
        }
        public Builder collaborativeWeights(GetProtectionCapabilitiesProtectionCapabilityCollectionItemCollaborativeWeight... collaborativeWeights) {
            return collaborativeWeights(List.of(collaborativeWeights));
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder groupTags(List<String> groupTags) {
            this.groupTags = Objects.requireNonNull(groupTags);
            return this;
        }
        public Builder groupTags(String... groupTags) {
            return groupTags(List.of(groupTags));
        }
        public Builder isLatestVersion(Boolean isLatestVersion) {
            this.isLatestVersion = Objects.requireNonNull(isLatestVersion);
            return this;
        }
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder version(Integer version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }        public GetProtectionCapabilitiesProtectionCapabilityCollectionItem build() {
            return new GetProtectionCapabilitiesProtectionCapabilityCollectionItem(collaborativeActionThreshold, collaborativeWeights, description, displayName, groupTags, isLatestVersion, key, type, version);
        }
    }
}
