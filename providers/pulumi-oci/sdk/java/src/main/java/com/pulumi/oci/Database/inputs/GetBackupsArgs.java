// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Database.inputs.GetBackupsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetBackupsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBackupsArgs Empty = new GetBackupsArgs();

    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="compartmentId")
    private Output</* @Nullable */ String> compartmentId;

    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output</* @Nullable */ String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    @Import(name="databaseId")
    private Output</* @Nullable */ String> databaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    public Output</* @Nullable */ String> databaseId() {
        return this.databaseId;
    }

    @Import(name="filters")
    private Output</* @Nullable */ List<GetBackupsFilter>> filters;

    public Output</* @Nullable */ List<GetBackupsFilter>> filters() {
        return this.filters;
    }

    private GetBackupsArgs() {}

    private GetBackupsArgs(GetBackupsArgs $) {
        this.compartmentId = $.compartmentId;
        this.databaseId = $.databaseId;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBackupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBackupsArgs $;

        public Builder() {
            $ = new GetBackupsArgs();
        }

        public Builder(GetBackupsArgs defaults) {
            $ = new GetBackupsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output</* @Nullable */ String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param databaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(Output</* @Nullable */ String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param databaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(@Nullable String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        public Builder filters(Output</* @Nullable */ List<GetBackupsFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetBackupsFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetBackupsFilter... filters) {
            return filters(List.of(filters));
        }

        public GetBackupsArgs build() {
            return $;
        }
    }

}
