// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstancesFilter;
import com.pulumi.oci.OsManagement.outputs.GetManagedInstancesManagedInstance;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedInstancesResult {
    /**
     * @return OCID for the Compartment
     * 
     */
    private final String compartmentId;
    /**
     * @return User friendly name
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetManagedInstancesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of managed_instances.
     * 
     */
    private final List<GetManagedInstancesManagedInstance> managedInstances;
    /**
     * @return The Operating System type of the managed instance.
     * 
     */
    private final @Nullable String osFamily;

    @CustomType.Constructor
    private GetManagedInstancesResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetManagedInstancesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("managedInstances") List<GetManagedInstancesManagedInstance> managedInstances,
        @CustomType.Parameter("osFamily") @Nullable String osFamily) {
        this.compartmentId = compartmentId;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.managedInstances = managedInstances;
        this.osFamily = osFamily;
    }

    /**
     * @return OCID for the Compartment
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return User friendly name
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetManagedInstancesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of managed_instances.
     * 
     */
    public List<GetManagedInstancesManagedInstance> managedInstances() {
        return this.managedInstances;
    }
    /**
     * @return The Operating System type of the managed instance.
     * 
     */
    public Optional<String> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstancesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetManagedInstancesFilter> filters;
        private String id;
        private List<GetManagedInstancesManagedInstance> managedInstances;
        private @Nullable String osFamily;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedInstancesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managedInstances = defaults.managedInstances;
    	      this.osFamily = defaults.osFamily;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetManagedInstancesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedInstancesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder managedInstances(List<GetManagedInstancesManagedInstance> managedInstances) {
            this.managedInstances = Objects.requireNonNull(managedInstances);
            return this;
        }
        public Builder managedInstances(GetManagedInstancesManagedInstance... managedInstances) {
            return managedInstances(List.of(managedInstances));
        }
        public Builder osFamily(@Nullable String osFamily) {
            this.osFamily = osFamily;
            return this;
        }        public GetManagedInstancesResult build() {
            return new GetManagedInstancesResult(compartmentId, displayName, filters, id, managedInstances, osFamily);
        }
    }
}
