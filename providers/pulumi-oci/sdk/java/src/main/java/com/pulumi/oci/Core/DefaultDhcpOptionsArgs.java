// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.DefaultDhcpOptionsOptionArgs;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefaultDhcpOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefaultDhcpOptionsArgs Empty = new DefaultDhcpOptionsArgs();

    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="domainNameType")
    private @Nullable Output<String> domainNameType;

    public Optional<Output<String>> domainNameType() {
        return Optional.ofNullable(this.domainNameType);
    }

    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    @Import(name="manageDefaultResourceId", required=true)
    private Output<String> manageDefaultResourceId;

    public Output<String> manageDefaultResourceId() {
        return this.manageDefaultResourceId;
    }

    @Import(name="options", required=true)
    private Output<List<DefaultDhcpOptionsOptionArgs>> options;

    public Output<List<DefaultDhcpOptionsOptionArgs>> options() {
        return this.options;
    }

    private DefaultDhcpOptionsArgs() {}

    private DefaultDhcpOptionsArgs(DefaultDhcpOptionsArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.domainNameType = $.domainNameType;
        this.freeformTags = $.freeformTags;
        this.manageDefaultResourceId = $.manageDefaultResourceId;
        this.options = $.options;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultDhcpOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultDhcpOptionsArgs $;

        public Builder() {
            $ = new DefaultDhcpOptionsArgs();
        }

        public Builder(DefaultDhcpOptionsArgs defaults) {
            $ = new DefaultDhcpOptionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder domainNameType(@Nullable Output<String> domainNameType) {
            $.domainNameType = domainNameType;
            return this;
        }

        public Builder domainNameType(String domainNameType) {
            return domainNameType(Output.of(domainNameType));
        }

        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        public Builder manageDefaultResourceId(Output<String> manageDefaultResourceId) {
            $.manageDefaultResourceId = manageDefaultResourceId;
            return this;
        }

        public Builder manageDefaultResourceId(String manageDefaultResourceId) {
            return manageDefaultResourceId(Output.of(manageDefaultResourceId));
        }

        public Builder options(Output<List<DefaultDhcpOptionsOptionArgs>> options) {
            $.options = options;
            return this;
        }

        public Builder options(List<DefaultDhcpOptionsOptionArgs> options) {
            return options(Output.of(options));
        }

        public Builder options(DefaultDhcpOptionsOptionArgs... options) {
            return options(List.of(options));
        }

        public DefaultDhcpOptionsArgs build() {
            $.manageDefaultResourceId = Objects.requireNonNull($.manageDefaultResourceId, "expected parameter 'manageDefaultResourceId' to be non-null");
            $.options = Objects.requireNonNull($.options, "expected parameter 'options' to be non-null");
            return $;
        }
    }

}
