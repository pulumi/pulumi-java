// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeader;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeader;
import com.pulumi.oci.ApiGateway.outputs.GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeader;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDeploymentSpecificationRouteResponsePolicyHeaderTransformation {
    /**
     * @return Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     * 
     */
    private final List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeader> filterHeaders;
    /**
     * @return Rename HTTP headers as they pass through the gateway.
     * 
     */
    private final List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeader> renameHeaders;
    /**
     * @return Set HTTP headers as they pass through the gateway.
     * 
     */
    private final List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeader> setHeaders;

    @CustomType.Constructor
    private GetDeploymentSpecificationRouteResponsePolicyHeaderTransformation(
        @CustomType.Parameter("filterHeaders") List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeader> filterHeaders,
        @CustomType.Parameter("renameHeaders") List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeader> renameHeaders,
        @CustomType.Parameter("setHeaders") List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeader> setHeaders) {
        this.filterHeaders = filterHeaders;
        this.renameHeaders = renameHeaders;
        this.setHeaders = setHeaders;
    }

    /**
     * @return Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     * 
     */
    public List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeader> filterHeaders() {
        return this.filterHeaders;
    }
    /**
     * @return Rename HTTP headers as they pass through the gateway.
     * 
     */
    public List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeader> renameHeaders() {
        return this.renameHeaders;
    }
    /**
     * @return Set HTTP headers as they pass through the gateway.
     * 
     */
    public List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeader> setHeaders() {
        return this.setHeaders;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentSpecificationRouteResponsePolicyHeaderTransformation defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeader> filterHeaders;
        private List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeader> renameHeaders;
        private List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeader> setHeaders;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDeploymentSpecificationRouteResponsePolicyHeaderTransformation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterHeaders = defaults.filterHeaders;
    	      this.renameHeaders = defaults.renameHeaders;
    	      this.setHeaders = defaults.setHeaders;
        }

        public Builder filterHeaders(List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeader> filterHeaders) {
            this.filterHeaders = Objects.requireNonNull(filterHeaders);
            return this;
        }
        public Builder filterHeaders(GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationFilterHeader... filterHeaders) {
            return filterHeaders(List.of(filterHeaders));
        }
        public Builder renameHeaders(List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeader> renameHeaders) {
            this.renameHeaders = Objects.requireNonNull(renameHeaders);
            return this;
        }
        public Builder renameHeaders(GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationRenameHeader... renameHeaders) {
            return renameHeaders(List.of(renameHeaders));
        }
        public Builder setHeaders(List<GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeader> setHeaders) {
            this.setHeaders = Objects.requireNonNull(setHeaders);
            return this;
        }
        public Builder setHeaders(GetDeploymentSpecificationRouteResponsePolicyHeaderTransformationSetHeader... setHeaders) {
            return setHeaders(List.of(setHeaders));
        }        public GetDeploymentSpecificationRouteResponsePolicyHeaderTransformation build() {
            return new GetDeploymentSpecificationRouteResponsePolicyHeaderTransformation(filterHeaders, renameHeaders, setHeaders);
        }
    }
}
