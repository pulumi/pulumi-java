// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class DeployStageApprovalPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeployStageApprovalPolicyArgs Empty = new DeployStageApprovalPolicyArgs();

    /**
     * (Updatable) Approval policy type.
     * 
     */
    @Import(name="approvalPolicyType", required=true)
    private Output<String> approvalPolicyType;

    /**
     * @return (Updatable) Approval policy type.
     * 
     */
    public Output<String> approvalPolicyType() {
        return this.approvalPolicyType;
    }

    /**
     * (Updatable) A minimum number of approvals required for stage to proceed.
     * 
     */
    @Import(name="numberOfApprovalsRequired", required=true)
    private Output<Integer> numberOfApprovalsRequired;

    /**
     * @return (Updatable) A minimum number of approvals required for stage to proceed.
     * 
     */
    public Output<Integer> numberOfApprovalsRequired() {
        return this.numberOfApprovalsRequired;
    }

    private DeployStageApprovalPolicyArgs() {}

    private DeployStageApprovalPolicyArgs(DeployStageApprovalPolicyArgs $) {
        this.approvalPolicyType = $.approvalPolicyType;
        this.numberOfApprovalsRequired = $.numberOfApprovalsRequired;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeployStageApprovalPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeployStageApprovalPolicyArgs $;

        public Builder() {
            $ = new DeployStageApprovalPolicyArgs();
        }

        public Builder(DeployStageApprovalPolicyArgs defaults) {
            $ = new DeployStageApprovalPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param approvalPolicyType (Updatable) Approval policy type.
         * 
         * @return builder
         * 
         */
        public Builder approvalPolicyType(Output<String> approvalPolicyType) {
            $.approvalPolicyType = approvalPolicyType;
            return this;
        }

        /**
         * @param approvalPolicyType (Updatable) Approval policy type.
         * 
         * @return builder
         * 
         */
        public Builder approvalPolicyType(String approvalPolicyType) {
            return approvalPolicyType(Output.of(approvalPolicyType));
        }

        /**
         * @param numberOfApprovalsRequired (Updatable) A minimum number of approvals required for stage to proceed.
         * 
         * @return builder
         * 
         */
        public Builder numberOfApprovalsRequired(Output<Integer> numberOfApprovalsRequired) {
            $.numberOfApprovalsRequired = numberOfApprovalsRequired;
            return this;
        }

        /**
         * @param numberOfApprovalsRequired (Updatable) A minimum number of approvals required for stage to proceed.
         * 
         * @return builder
         * 
         */
        public Builder numberOfApprovalsRequired(Integer numberOfApprovalsRequired) {
            return numberOfApprovalsRequired(Output.of(numberOfApprovalsRequired));
        }

        public DeployStageApprovalPolicyArgs build() {
            $.approvalPolicyType = Objects.requireNonNull($.approvalPolicyType, "expected parameter 'approvalPolicyType' to be non-null");
            $.numberOfApprovalsRequired = Objects.requireNonNull($.numberOfApprovalsRequired, "expected parameter 'numberOfApprovalsRequired' to be non-null");
            return $;
        }
    }

}
