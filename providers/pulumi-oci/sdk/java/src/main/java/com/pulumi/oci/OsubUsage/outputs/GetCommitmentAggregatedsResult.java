// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubUsage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OsubUsage.outputs.GetCommitmentAggregatedsComputedUsageAggregated;
import com.pulumi.oci.OsubUsage.outputs.GetCommitmentAggregatedsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetCommitmentAggregatedsResult {
    private final String compartmentId;
    /**
     * @return The list of computed_usage_aggregateds.
     * 
     */
    private final List<GetCommitmentAggregatedsComputedUsageAggregated> computedUsageAggregateds;
    private final @Nullable List<GetCommitmentAggregatedsFilter> filters;
    private final @Nullable String grouping;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return Product description
     * 
     */
    private final @Nullable String parentProduct;
    /**
     * @return Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM
     * 
     */
    private final String subscriptionId;
    private final String timeFrom;
    private final String timeTo;
    private final @Nullable String xOneOriginRegion;

    @CustomType.Constructor
    private GetCommitmentAggregatedsResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("computedUsageAggregateds") List<GetCommitmentAggregatedsComputedUsageAggregated> computedUsageAggregateds,
        @CustomType.Parameter("filters") @Nullable List<GetCommitmentAggregatedsFilter> filters,
        @CustomType.Parameter("grouping") @Nullable String grouping,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("parentProduct") @Nullable String parentProduct,
        @CustomType.Parameter("subscriptionId") String subscriptionId,
        @CustomType.Parameter("timeFrom") String timeFrom,
        @CustomType.Parameter("timeTo") String timeTo,
        @CustomType.Parameter("xOneOriginRegion") @Nullable String xOneOriginRegion) {
        this.compartmentId = compartmentId;
        this.computedUsageAggregateds = computedUsageAggregateds;
        this.filters = filters;
        this.grouping = grouping;
        this.id = id;
        this.parentProduct = parentProduct;
        this.subscriptionId = subscriptionId;
        this.timeFrom = timeFrom;
        this.timeTo = timeTo;
        this.xOneOriginRegion = xOneOriginRegion;
    }

    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of computed_usage_aggregateds.
     * 
     */
    public List<GetCommitmentAggregatedsComputedUsageAggregated> computedUsageAggregateds() {
        return this.computedUsageAggregateds;
    }
    public List<GetCommitmentAggregatedsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    public Optional<String> grouping() {
        return Optional.ofNullable(this.grouping);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Product description
     * 
     */
    public Optional<String> parentProduct() {
        return Optional.ofNullable(this.parentProduct);
    }
    /**
     * @return Subscription Id is an identifier associated to the service used for filter the Computed Usage in SPM
     * 
     */
    public String subscriptionId() {
        return this.subscriptionId;
    }
    public String timeFrom() {
        return this.timeFrom;
    }
    public String timeTo() {
        return this.timeTo;
    }
    public Optional<String> xOneOriginRegion() {
        return Optional.ofNullable(this.xOneOriginRegion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCommitmentAggregatedsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private List<GetCommitmentAggregatedsComputedUsageAggregated> computedUsageAggregateds;
        private @Nullable List<GetCommitmentAggregatedsFilter> filters;
        private @Nullable String grouping;
        private String id;
        private @Nullable String parentProduct;
        private String subscriptionId;
        private String timeFrom;
        private String timeTo;
        private @Nullable String xOneOriginRegion;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCommitmentAggregatedsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.computedUsageAggregateds = defaults.computedUsageAggregateds;
    	      this.filters = defaults.filters;
    	      this.grouping = defaults.grouping;
    	      this.id = defaults.id;
    	      this.parentProduct = defaults.parentProduct;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.timeFrom = defaults.timeFrom;
    	      this.timeTo = defaults.timeTo;
    	      this.xOneOriginRegion = defaults.xOneOriginRegion;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder computedUsageAggregateds(List<GetCommitmentAggregatedsComputedUsageAggregated> computedUsageAggregateds) {
            this.computedUsageAggregateds = Objects.requireNonNull(computedUsageAggregateds);
            return this;
        }
        public Builder computedUsageAggregateds(GetCommitmentAggregatedsComputedUsageAggregated... computedUsageAggregateds) {
            return computedUsageAggregateds(List.of(computedUsageAggregateds));
        }
        public Builder filters(@Nullable List<GetCommitmentAggregatedsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetCommitmentAggregatedsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder grouping(@Nullable String grouping) {
            this.grouping = grouping;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder parentProduct(@Nullable String parentProduct) {
            this.parentProduct = parentProduct;
            return this;
        }
        public Builder subscriptionId(String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId);
            return this;
        }
        public Builder timeFrom(String timeFrom) {
            this.timeFrom = Objects.requireNonNull(timeFrom);
            return this;
        }
        public Builder timeTo(String timeTo) {
            this.timeTo = Objects.requireNonNull(timeTo);
            return this;
        }
        public Builder xOneOriginRegion(@Nullable String xOneOriginRegion) {
            this.xOneOriginRegion = xOneOriginRegion;
            return this;
        }        public GetCommitmentAggregatedsResult build() {
            return new GetCommitmentAggregatedsResult(compartmentId, computedUsageAggregateds, filters, grouping, id, parentProduct, subscriptionId, timeFrom, timeTo, xOneOriginRegion);
        }
    }
}
