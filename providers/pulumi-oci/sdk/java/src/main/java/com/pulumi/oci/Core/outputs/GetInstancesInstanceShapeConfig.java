// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancesInstanceShapeConfig {
    /**
     * @return The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
     * 
     */
    private final String baselineOcpuUtilization;
    /**
     * @return A short description of the instance&#39;s graphics processing unit (GPU).
     * 
     */
    private final String gpuDescription;
    /**
     * @return The number of GPUs available to the instance.
     * 
     */
    private final Integer gpus;
    /**
     * @return A short description of the local disks available to this instance.
     * 
     */
    private final String localDiskDescription;
    /**
     * @return The number of local disks available to the instance.
     * 
     */
    private final Integer localDisks;
    /**
     * @return The aggregate size of all local disks, in gigabytes.
     * 
     */
    private final Double localDisksTotalSizeInGbs;
    /**
     * @return The maximum number of VNIC attachments for the instance.
     * 
     */
    private final Integer maxVnicAttachments;
    /**
     * @return The total amount of memory available to the instance, in gigabytes.
     * 
     */
    private final Double memoryInGbs;
    /**
     * @return The networking bandwidth available to the instance, in gigabits per second.
     * 
     */
    private final Double networkingBandwidthInGbps;
    /**
     * @return The total number of OCPUs available to the instance.
     * 
     */
    private final Double ocpus;
    /**
     * @return A short description of the instance&#39;s processor (CPU).
     * 
     */
    private final String processorDescription;

    @CustomType.Constructor
    private GetInstancesInstanceShapeConfig(
        @CustomType.Parameter("baselineOcpuUtilization") String baselineOcpuUtilization,
        @CustomType.Parameter("gpuDescription") String gpuDescription,
        @CustomType.Parameter("gpus") Integer gpus,
        @CustomType.Parameter("localDiskDescription") String localDiskDescription,
        @CustomType.Parameter("localDisks") Integer localDisks,
        @CustomType.Parameter("localDisksTotalSizeInGbs") Double localDisksTotalSizeInGbs,
        @CustomType.Parameter("maxVnicAttachments") Integer maxVnicAttachments,
        @CustomType.Parameter("memoryInGbs") Double memoryInGbs,
        @CustomType.Parameter("networkingBandwidthInGbps") Double networkingBandwidthInGbps,
        @CustomType.Parameter("ocpus") Double ocpus,
        @CustomType.Parameter("processorDescription") String processorDescription) {
        this.baselineOcpuUtilization = baselineOcpuUtilization;
        this.gpuDescription = gpuDescription;
        this.gpus = gpus;
        this.localDiskDescription = localDiskDescription;
        this.localDisks = localDisks;
        this.localDisksTotalSizeInGbs = localDisksTotalSizeInGbs;
        this.maxVnicAttachments = maxVnicAttachments;
        this.memoryInGbs = memoryInGbs;
        this.networkingBandwidthInGbps = networkingBandwidthInGbps;
        this.ocpus = ocpus;
        this.processorDescription = processorDescription;
    }

    /**
     * @return The baseline OCPU utilization for a subcore burstable VM instance. Leave this attribute blank for a non-burstable instance, or explicitly specify non-burstable with `BASELINE_1_1`.
     * 
     */
    public String baselineOcpuUtilization() {
        return this.baselineOcpuUtilization;
    }
    /**
     * @return A short description of the instance&#39;s graphics processing unit (GPU).
     * 
     */
    public String gpuDescription() {
        return this.gpuDescription;
    }
    /**
     * @return The number of GPUs available to the instance.
     * 
     */
    public Integer gpus() {
        return this.gpus;
    }
    /**
     * @return A short description of the local disks available to this instance.
     * 
     */
    public String localDiskDescription() {
        return this.localDiskDescription;
    }
    /**
     * @return The number of local disks available to the instance.
     * 
     */
    public Integer localDisks() {
        return this.localDisks;
    }
    /**
     * @return The aggregate size of all local disks, in gigabytes.
     * 
     */
    public Double localDisksTotalSizeInGbs() {
        return this.localDisksTotalSizeInGbs;
    }
    /**
     * @return The maximum number of VNIC attachments for the instance.
     * 
     */
    public Integer maxVnicAttachments() {
        return this.maxVnicAttachments;
    }
    /**
     * @return The total amount of memory available to the instance, in gigabytes.
     * 
     */
    public Double memoryInGbs() {
        return this.memoryInGbs;
    }
    /**
     * @return The networking bandwidth available to the instance, in gigabits per second.
     * 
     */
    public Double networkingBandwidthInGbps() {
        return this.networkingBandwidthInGbps;
    }
    /**
     * @return The total number of OCPUs available to the instance.
     * 
     */
    public Double ocpus() {
        return this.ocpus;
    }
    /**
     * @return A short description of the instance&#39;s processor (CPU).
     * 
     */
    public String processorDescription() {
        return this.processorDescription;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstanceShapeConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String baselineOcpuUtilization;
        private String gpuDescription;
        private Integer gpus;
        private String localDiskDescription;
        private Integer localDisks;
        private Double localDisksTotalSizeInGbs;
        private Integer maxVnicAttachments;
        private Double memoryInGbs;
        private Double networkingBandwidthInGbps;
        private Double ocpus;
        private String processorDescription;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancesInstanceShapeConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.baselineOcpuUtilization = defaults.baselineOcpuUtilization;
    	      this.gpuDescription = defaults.gpuDescription;
    	      this.gpus = defaults.gpus;
    	      this.localDiskDescription = defaults.localDiskDescription;
    	      this.localDisks = defaults.localDisks;
    	      this.localDisksTotalSizeInGbs = defaults.localDisksTotalSizeInGbs;
    	      this.maxVnicAttachments = defaults.maxVnicAttachments;
    	      this.memoryInGbs = defaults.memoryInGbs;
    	      this.networkingBandwidthInGbps = defaults.networkingBandwidthInGbps;
    	      this.ocpus = defaults.ocpus;
    	      this.processorDescription = defaults.processorDescription;
        }

        public Builder baselineOcpuUtilization(String baselineOcpuUtilization) {
            this.baselineOcpuUtilization = Objects.requireNonNull(baselineOcpuUtilization);
            return this;
        }
        public Builder gpuDescription(String gpuDescription) {
            this.gpuDescription = Objects.requireNonNull(gpuDescription);
            return this;
        }
        public Builder gpus(Integer gpus) {
            this.gpus = Objects.requireNonNull(gpus);
            return this;
        }
        public Builder localDiskDescription(String localDiskDescription) {
            this.localDiskDescription = Objects.requireNonNull(localDiskDescription);
            return this;
        }
        public Builder localDisks(Integer localDisks) {
            this.localDisks = Objects.requireNonNull(localDisks);
            return this;
        }
        public Builder localDisksTotalSizeInGbs(Double localDisksTotalSizeInGbs) {
            this.localDisksTotalSizeInGbs = Objects.requireNonNull(localDisksTotalSizeInGbs);
            return this;
        }
        public Builder maxVnicAttachments(Integer maxVnicAttachments) {
            this.maxVnicAttachments = Objects.requireNonNull(maxVnicAttachments);
            return this;
        }
        public Builder memoryInGbs(Double memoryInGbs) {
            this.memoryInGbs = Objects.requireNonNull(memoryInGbs);
            return this;
        }
        public Builder networkingBandwidthInGbps(Double networkingBandwidthInGbps) {
            this.networkingBandwidthInGbps = Objects.requireNonNull(networkingBandwidthInGbps);
            return this;
        }
        public Builder ocpus(Double ocpus) {
            this.ocpus = Objects.requireNonNull(ocpus);
            return this;
        }
        public Builder processorDescription(String processorDescription) {
            this.processorDescription = Objects.requireNonNull(processorDescription);
            return this;
        }        public GetInstancesInstanceShapeConfig build() {
            return new GetInstancesInstanceShapeConfig(baselineOcpuUtilization, gpuDescription, gpus, localDiskDescription, localDisks, localDisksTotalSizeInGbs, maxVnicAttachments, memoryInGbs, networkingBandwidthInGbps, ocpus, processorDescription);
        }
    }
}
