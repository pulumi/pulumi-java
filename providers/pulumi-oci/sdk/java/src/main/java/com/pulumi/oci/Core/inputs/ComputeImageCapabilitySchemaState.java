// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ComputeImageCapabilitySchemaState extends com.pulumi.resources.ResourceArgs {

    public static final ComputeImageCapabilitySchemaState Empty = new ComputeImageCapabilitySchemaState();

    /**
     * (Updatable) The OCID of the compartment that contains the resource.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment that contains the resource.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The ocid of the compute global image capability schema
     * 
     */
    @Import(name="computeGlobalImageCapabilitySchemaId")
    private @Nullable Output<String> computeGlobalImageCapabilitySchemaId;

    /**
     * @return The ocid of the compute global image capability schema
     * 
     */
    public Optional<Output<String>> computeGlobalImageCapabilitySchemaId() {
        return Optional.ofNullable(this.computeGlobalImageCapabilitySchemaId);
    }

    /**
     * The name of the compute global image capability schema version
     * 
     */
    @Import(name="computeGlobalImageCapabilitySchemaVersionName")
    private @Nullable Output<String> computeGlobalImageCapabilitySchemaVersionName;

    /**
     * @return The name of the compute global image capability schema version
     * 
     */
    public Optional<Output<String>> computeGlobalImageCapabilitySchemaVersionName() {
        return Optional.ofNullable(this.computeGlobalImageCapabilitySchemaVersionName);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The ocid of the image
     * 
     */
    @Import(name="imageId")
    private @Nullable Output<String> imageId;

    /**
     * @return The ocid of the image
     * 
     */
    public Optional<Output<String>> imageId() {
        return Optional.ofNullable(this.imageId);
    }

    /**
     * (Updatable) The map of each capability name to its ImageCapabilitySchemaDescriptor.
     * 
     */
    @Import(name="schemaData")
    private @Nullable Output<Map<String,Object>> schemaData;

    /**
     * @return (Updatable) The map of each capability name to its ImageCapabilitySchemaDescriptor.
     * 
     */
    public Optional<Output<Map<String,Object>>> schemaData() {
        return Optional.ofNullable(this.schemaData);
    }

    /**
     * The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    private ComputeImageCapabilitySchemaState() {}

    private ComputeImageCapabilitySchemaState(ComputeImageCapabilitySchemaState $) {
        this.compartmentId = $.compartmentId;
        this.computeGlobalImageCapabilitySchemaId = $.computeGlobalImageCapabilitySchemaId;
        this.computeGlobalImageCapabilitySchemaVersionName = $.computeGlobalImageCapabilitySchemaVersionName;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.imageId = $.imageId;
        this.schemaData = $.schemaData;
        this.timeCreated = $.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ComputeImageCapabilitySchemaState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ComputeImageCapabilitySchemaState $;

        public Builder() {
            $ = new ComputeImageCapabilitySchemaState();
        }

        public Builder(ComputeImageCapabilitySchemaState defaults) {
            $ = new ComputeImageCapabilitySchemaState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains the resource.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment that contains the resource.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param computeGlobalImageCapabilitySchemaId The ocid of the compute global image capability schema
         * 
         * @return builder
         * 
         */
        public Builder computeGlobalImageCapabilitySchemaId(@Nullable Output<String> computeGlobalImageCapabilitySchemaId) {
            $.computeGlobalImageCapabilitySchemaId = computeGlobalImageCapabilitySchemaId;
            return this;
        }

        /**
         * @param computeGlobalImageCapabilitySchemaId The ocid of the compute global image capability schema
         * 
         * @return builder
         * 
         */
        public Builder computeGlobalImageCapabilitySchemaId(String computeGlobalImageCapabilitySchemaId) {
            return computeGlobalImageCapabilitySchemaId(Output.of(computeGlobalImageCapabilitySchemaId));
        }

        /**
         * @param computeGlobalImageCapabilitySchemaVersionName The name of the compute global image capability schema version
         * 
         * @return builder
         * 
         */
        public Builder computeGlobalImageCapabilitySchemaVersionName(@Nullable Output<String> computeGlobalImageCapabilitySchemaVersionName) {
            $.computeGlobalImageCapabilitySchemaVersionName = computeGlobalImageCapabilitySchemaVersionName;
            return this;
        }

        /**
         * @param computeGlobalImageCapabilitySchemaVersionName The name of the compute global image capability schema version
         * 
         * @return builder
         * 
         */
        public Builder computeGlobalImageCapabilitySchemaVersionName(String computeGlobalImageCapabilitySchemaVersionName) {
            return computeGlobalImageCapabilitySchemaVersionName(Output.of(computeGlobalImageCapabilitySchemaVersionName));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param imageId The ocid of the image
         * 
         * @return builder
         * 
         */
        public Builder imageId(@Nullable Output<String> imageId) {
            $.imageId = imageId;
            return this;
        }

        /**
         * @param imageId The ocid of the image
         * 
         * @return builder
         * 
         */
        public Builder imageId(String imageId) {
            return imageId(Output.of(imageId));
        }

        /**
         * @param schemaData (Updatable) The map of each capability name to its ImageCapabilitySchemaDescriptor.
         * 
         * @return builder
         * 
         */
        public Builder schemaData(@Nullable Output<Map<String,Object>> schemaData) {
            $.schemaData = schemaData;
            return this;
        }

        /**
         * @param schemaData (Updatable) The map of each capability name to its ImageCapabilitySchemaDescriptor.
         * 
         * @return builder
         * 
         */
        public Builder schemaData(Map<String,Object> schemaData) {
            return schemaData(Output.of(schemaData));
        }

        /**
         * @param timeCreated The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the compute image capability schema was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        public ComputeImageCapabilitySchemaState build() {
            return $;
        }
    }

}
