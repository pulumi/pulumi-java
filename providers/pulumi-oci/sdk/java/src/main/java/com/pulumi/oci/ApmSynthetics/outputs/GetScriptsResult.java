// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApmSynthetics.outputs.GetScriptsFilter;
import com.pulumi.oci.ApmSynthetics.outputs.GetScriptsScriptCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetScriptsResult {
    private final String apmDomainId;
    /**
     * @return Content type of the script.
     * 
     */
    private final @Nullable String contentType;
    /**
     * @return Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetScriptsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of script_collection.
     * 
     */
    private final List<GetScriptsScriptCollection> scriptCollections;

    @CustomType.Constructor
    private GetScriptsResult(
        @CustomType.Parameter("apmDomainId") String apmDomainId,
        @CustomType.Parameter("contentType") @Nullable String contentType,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetScriptsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("scriptCollections") List<GetScriptsScriptCollection> scriptCollections) {
        this.apmDomainId = apmDomainId;
        this.contentType = contentType;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.scriptCollections = scriptCollections;
    }

    public String apmDomainId() {
        return this.apmDomainId;
    }
    /**
     * @return Content type of the script.
     * 
     */
    public Optional<String> contentType() {
        return Optional.ofNullable(this.contentType);
    }
    /**
     * @return Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetScriptsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of script_collection.
     * 
     */
    public List<GetScriptsScriptCollection> scriptCollections() {
        return this.scriptCollections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScriptsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String apmDomainId;
        private @Nullable String contentType;
        private @Nullable String displayName;
        private @Nullable List<GetScriptsFilter> filters;
        private String id;
        private List<GetScriptsScriptCollection> scriptCollections;

        public Builder() {
    	      // Empty
        }

        public Builder(GetScriptsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apmDomainId = defaults.apmDomainId;
    	      this.contentType = defaults.contentType;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.scriptCollections = defaults.scriptCollections;
        }

        public Builder apmDomainId(String apmDomainId) {
            this.apmDomainId = Objects.requireNonNull(apmDomainId);
            return this;
        }
        public Builder contentType(@Nullable String contentType) {
            this.contentType = contentType;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetScriptsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetScriptsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder scriptCollections(List<GetScriptsScriptCollection> scriptCollections) {
            this.scriptCollections = Objects.requireNonNull(scriptCollections);
            return this;
        }
        public Builder scriptCollections(GetScriptsScriptCollection... scriptCollections) {
            return scriptCollections(List.of(scriptCollections));
        }        public GetScriptsResult build() {
            return new GetScriptsResult(apmDomainId, contentType, displayName, filters, id, scriptCollections);
        }
    }
}
