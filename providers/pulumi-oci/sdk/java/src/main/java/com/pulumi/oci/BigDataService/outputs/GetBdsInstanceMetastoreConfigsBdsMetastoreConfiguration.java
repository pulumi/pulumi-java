// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration {
    private final Integer activateTrigger;
    /**
     * @return The ID of the API key that is associated with the external metastore in the metastore configuration
     * 
     */
    private final String bdsApiKeyId;
    private final String bdsApiKeyPassphrase;
    /**
     * @return The OCID of the cluster.
     * 
     */
    private final String bdsInstanceId;
    private final String clusterAdminPassword;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private final String displayName;
    /**
     * @return The ID of the metastore configuration
     * 
     */
    private final String id;
    /**
     * @return The OCID of the Data Catalog metastore in the metastore configuration
     * 
     */
    private final String metastoreId;
    /**
     * @return The type of the metastore in the metastore configuration
     * 
     */
    private final String metastoreType;
    /**
     * @return The lifecycle state of the metastore in the metastore configuration
     * 
     */
    private final String state;
    /**
     * @return The time when the configuration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    private final String timeCreated;
    /**
     * @return The time when the configuration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration(
        @CustomType.Parameter("activateTrigger") Integer activateTrigger,
        @CustomType.Parameter("bdsApiKeyId") String bdsApiKeyId,
        @CustomType.Parameter("bdsApiKeyPassphrase") String bdsApiKeyPassphrase,
        @CustomType.Parameter("bdsInstanceId") String bdsInstanceId,
        @CustomType.Parameter("clusterAdminPassword") String clusterAdminPassword,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("metastoreId") String metastoreId,
        @CustomType.Parameter("metastoreType") String metastoreType,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.activateTrigger = activateTrigger;
        this.bdsApiKeyId = bdsApiKeyId;
        this.bdsApiKeyPassphrase = bdsApiKeyPassphrase;
        this.bdsInstanceId = bdsInstanceId;
        this.clusterAdminPassword = clusterAdminPassword;
        this.displayName = displayName;
        this.id = id;
        this.metastoreId = metastoreId;
        this.metastoreType = metastoreType;
        this.state = state;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    public Integer activateTrigger() {
        return this.activateTrigger;
    }
    /**
     * @return The ID of the API key that is associated with the external metastore in the metastore configuration
     * 
     */
    public String bdsApiKeyId() {
        return this.bdsApiKeyId;
    }
    public String bdsApiKeyPassphrase() {
        return this.bdsApiKeyPassphrase;
    }
    /**
     * @return The OCID of the cluster.
     * 
     */
    public String bdsInstanceId() {
        return this.bdsInstanceId;
    }
    public String clusterAdminPassword() {
        return this.clusterAdminPassword;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The ID of the metastore configuration
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the Data Catalog metastore in the metastore configuration
     * 
     */
    public String metastoreId() {
        return this.metastoreId;
    }
    /**
     * @return The type of the metastore in the metastore configuration
     * 
     */
    public String metastoreType() {
        return this.metastoreType;
    }
    /**
     * @return The lifecycle state of the metastore in the metastore configuration
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The time when the configuration was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time when the configuration was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer activateTrigger;
        private String bdsApiKeyId;
        private String bdsApiKeyPassphrase;
        private String bdsInstanceId;
        private String clusterAdminPassword;
        private String displayName;
        private String id;
        private String metastoreId;
        private String metastoreType;
        private String state;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.activateTrigger = defaults.activateTrigger;
    	      this.bdsApiKeyId = defaults.bdsApiKeyId;
    	      this.bdsApiKeyPassphrase = defaults.bdsApiKeyPassphrase;
    	      this.bdsInstanceId = defaults.bdsInstanceId;
    	      this.clusterAdminPassword = defaults.clusterAdminPassword;
    	      this.displayName = defaults.displayName;
    	      this.id = defaults.id;
    	      this.metastoreId = defaults.metastoreId;
    	      this.metastoreType = defaults.metastoreType;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder activateTrigger(Integer activateTrigger) {
            this.activateTrigger = Objects.requireNonNull(activateTrigger);
            return this;
        }
        public Builder bdsApiKeyId(String bdsApiKeyId) {
            this.bdsApiKeyId = Objects.requireNonNull(bdsApiKeyId);
            return this;
        }
        public Builder bdsApiKeyPassphrase(String bdsApiKeyPassphrase) {
            this.bdsApiKeyPassphrase = Objects.requireNonNull(bdsApiKeyPassphrase);
            return this;
        }
        public Builder bdsInstanceId(String bdsInstanceId) {
            this.bdsInstanceId = Objects.requireNonNull(bdsInstanceId);
            return this;
        }
        public Builder clusterAdminPassword(String clusterAdminPassword) {
            this.clusterAdminPassword = Objects.requireNonNull(clusterAdminPassword);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder metastoreId(String metastoreId) {
            this.metastoreId = Objects.requireNonNull(metastoreId);
            return this;
        }
        public Builder metastoreType(String metastoreType) {
            this.metastoreType = Objects.requireNonNull(metastoreType);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration build() {
            return new GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration(activateTrigger, bdsApiKeyId, bdsApiKeyPassphrase, bdsInstanceId, clusterAdminPassword, displayName, id, metastoreId, metastoreType, state, timeCreated, timeUpdated);
        }
    }
}
