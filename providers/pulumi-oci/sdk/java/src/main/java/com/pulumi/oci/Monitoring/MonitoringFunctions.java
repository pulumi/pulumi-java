// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Monitoring;

import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.oci.Monitoring.inputs.GetAlarmArgs;
import com.pulumi.oci.Monitoring.inputs.GetAlarmHistoryCollectionArgs;
import com.pulumi.oci.Monitoring.inputs.GetAlarmStatusesArgs;
import com.pulumi.oci.Monitoring.inputs.GetAlarmsArgs;
import com.pulumi.oci.Monitoring.inputs.GetMetricDataArgs;
import com.pulumi.oci.Monitoring.inputs.GetMetricsArgs;
import com.pulumi.oci.Monitoring.outputs.GetAlarmHistoryCollectionResult;
import com.pulumi.oci.Monitoring.outputs.GetAlarmResult;
import com.pulumi.oci.Monitoring.outputs.GetAlarmStatusesResult;
import com.pulumi.oci.Monitoring.outputs.GetAlarmsResult;
import com.pulumi.oci.Monitoring.outputs.GetMetricDataResult;
import com.pulumi.oci.Monitoring.outputs.GetMetricsResult;
import com.pulumi.oci.Utilities;
import java.util.concurrent.CompletableFuture;

public final class MonitoringFunctions {
    /**
     * This data source provides details about a specific Alarm resource in Oracle Cloud Infrastructure Monitoring service.
     * 
     * Gets the specified alarm.
     * For important limits information, see [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#Limits).
     * 
     * This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
     * Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
     * or transactions, per second (TPS) for a given tenancy.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAlarmResult> getAlarm(GetAlarmArgs args) {
        return getAlarm(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAlarmResult> getAlarm(GetAlarmArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Monitoring/getAlarm:getAlarm", TypeShape.of(GetAlarmResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides details about a specific Alarm History Collection resource in Oracle Cloud Infrastructure Monitoring service.
     * 
     * Get the history of the specified alarm.
     * For important limits information, see [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#Limits).
     * 
     * This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
     * Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
     * or transactions, per second (TPS) for a given tenancy.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAlarmHistoryCollectionResult> getAlarmHistoryCollection(GetAlarmHistoryCollectionArgs args) {
        return getAlarmHistoryCollection(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAlarmHistoryCollectionResult> getAlarmHistoryCollection(GetAlarmHistoryCollectionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Monitoring/getAlarmHistoryCollection:getAlarmHistoryCollection", TypeShape.of(GetAlarmHistoryCollectionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Alarm Statuses in Oracle Cloud Infrastructure Monitoring service.
     * 
     * List the status of each alarm in the specified compartment.
     * For important limits information, see [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#Limits).
     * 
     * This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
     * Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
     * or transactions, per second (TPS) for a given tenancy.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAlarmStatusesResult> getAlarmStatuses(GetAlarmStatusesArgs args) {
        return getAlarmStatuses(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAlarmStatusesResult> getAlarmStatuses(GetAlarmStatusesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Monitoring/getAlarmStatuses:getAlarmStatuses", TypeShape.of(GetAlarmStatusesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Alarms in Oracle Cloud Infrastructure Monitoring service.
     * 
     * Lists the alarms for the specified compartment.
     * For important limits information, see [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#Limits).
     * 
     * This call is subject to a Monitoring limit that applies to the total number of requests across all alarm operations.
     * Monitoring might throttle this call to reject an otherwise valid request when the total rate of alarm operations exceeds 10 requests,
     * or transactions, per second (TPS) for a given tenancy.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetAlarmsResult> getAlarms(GetAlarmsArgs args) {
        return getAlarms(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetAlarmsResult> getAlarms(GetAlarmsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Monitoring/getAlarms:getAlarms", TypeShape.of(GetAlarmsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Metric Data in Oracle Cloud Infrastructure Monitoring service.
     * 
     * Returns aggregated data that match the criteria specified in the request. Compartment OCID required.
     * For information on metric queries, see [Building Metric Queries](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Tasks/buildingqueries.htm).
     * For important limits information, see [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#Limits).
     * 
     * Transactions Per Second (TPS) per-tenancy limit for this operation: 10.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetMetricDataResult> getMetricData(GetMetricDataArgs args) {
        return getMetricData(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMetricDataResult> getMetricData(GetMetricDataArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Monitoring/getMetricData:getMetricData", TypeShape.of(GetMetricDataResult.class), args, Utilities.withVersion(options));
    }
    /**
     * This data source provides the list of Metrics in Oracle Cloud Infrastructure Monitoring service.
     * 
     * Returns metric definitions that match the criteria specified in the request. Compartment OCID required.
     * For information about metrics, see [Metrics Overview](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#MetricsOverview).
     * For important limits information, see [Limits on Monitoring](https://docs.cloud.oracle.com/iaas/Content/Monitoring/Concepts/monitoringoverview.htm#Limits).
     * 
     * Transactions Per Second (TPS) per-tenancy limit for this operation: 10.
     * 
     * ## Example Usage
     * 
     */
    public static CompletableFuture<GetMetricsResult> getMetrics(GetMetricsArgs args) {
        return getMetrics(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetMetricsResult> getMetrics(GetMetricsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("oci:Monitoring/getMetrics:getMetrics", TypeShape.of(GetMetricsResult.class), args, Utilities.withVersion(options));
    }
}
