// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VulnerabilityScanning.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContainerScanTargetTargetRegistry {
    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return (Updatable) List of repositories to scan images in. If left empty, the target defaults to scanning all repos in the compartmentId
     * 
     */
    private final @Nullable List<String> repositories;
    /**
     * @return (Updatable) The scan level
     * 
     */
    private final String type;
    /**
     * @return (Updatable) URL of the registry. Required for non-OCIR registry types (for OCIR registry types, it can be inferred from the tenancy).
     * 
     */
    private final @Nullable String url;

    @CustomType.Constructor
    private ContainerScanTargetTargetRegistry(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("repositories") @Nullable List<String> repositories,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("url") @Nullable String url) {
        this.compartmentId = compartmentId;
        this.repositories = repositories;
        this.type = type;
        this.url = url;
    }

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to perform the scans in. All listed repositories must be in the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return (Updatable) List of repositories to scan images in. If left empty, the target defaults to scanning all repos in the compartmentId
     * 
     */
    public List<String> repositories() {
        return this.repositories == null ? List.of() : this.repositories;
    }
    /**
     * @return (Updatable) The scan level
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return (Updatable) URL of the registry. Required for non-OCIR registry types (for OCIR registry types, it can be inferred from the tenancy).
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerScanTargetTargetRegistry defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable List<String> repositories;
        private String type;
        private @Nullable String url;

        public Builder() {
    	      // Empty
        }

        public Builder(ContainerScanTargetTargetRegistry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.repositories = defaults.repositories;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder repositories(@Nullable List<String> repositories) {
            this.repositories = repositories;
            return this;
        }
        public Builder repositories(String... repositories) {
            return repositories(List.of(repositories));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }        public ContainerScanTargetTargetRegistry build() {
            return new ContainerScanTargetTargetRegistry(compartmentId, repositories, type, url);
        }
    }
}
