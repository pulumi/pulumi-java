// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiAnomalyDetection.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.AiAnomalyDetection.outputs.DataAssetDataSourceDetailsVersionSpecificDetails;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DataAssetDataSourceDetails {
    /**
     * @return atp db password Secret Id
     * 
     */
    private final @Nullable String atpPasswordSecretId;
    /**
     * @return atp db user name
     * 
     */
    private final @Nullable String atpUserName;
    /**
     * @return Bucket Name for influx connection
     * 
     */
    private final @Nullable String bucket;
    /**
     * @return OCID of the secret containing the containers certificates of ATP wallet
     * 
     */
    private final @Nullable String cwalletFileSecretId;
    /**
     * @return Data source type where actually data asset is being stored
     * 
     */
    private final String dataSourceType;
    /**
     * @return DB Name for influx connection
     * 
     */
    private final @Nullable String databaseName;
    /**
     * @return OCID of the secret containing the PDB&#39;S certificates of ATP wallet
     * 
     */
    private final @Nullable String ewalletFileSecretId;
    /**
     * @return OCID of the secret containing Keystore.jks file of the ATP wallet
     * 
     */
    private final @Nullable String keyStoreFileSecretId;
    /**
     * @return Measurement name for influx
     * 
     */
    private final @Nullable String measurementName;
    /**
     * @return Object storage namespace
     * 
     */
    private final @Nullable String namespace;
    /**
     * @return File name
     * 
     */
    private final @Nullable String object;
    /**
     * @return OCID of the secret that contains jdbc properties file of ATP wallet
     * 
     */
    private final @Nullable String ojdbcFileSecretId;
    /**
     * @return Password Secret Id for the influx connection
     * 
     */
    private final @Nullable String passwordSecretId;
    /**
     * @return atp database table name
     * 
     */
    private final @Nullable String tableName;
    /**
     * @return OCID of the secret that contains the tnsnames file of ATP wallet
     * 
     */
    private final @Nullable String tnsnamesFileSecretId;
    /**
     * @return OCID of the secret containing truststore.jks file of the ATP wallet
     * 
     */
    private final @Nullable String truststoreFileSecretId;
    /**
     * @return public IP address and port to influx DB
     * 
     */
    private final @Nullable String url;
    /**
     * @return Username for connection to Influx
     * 
     */
    private final @Nullable String userName;
    /**
     * @return Possible data sources
     * 
     */
    private final @Nullable DataAssetDataSourceDetailsVersionSpecificDetails versionSpecificDetails;
    /**
     * @return wallet password Secret ID in String format
     * 
     */
    private final @Nullable String walletPasswordSecretId;

    @CustomType.Constructor
    private DataAssetDataSourceDetails(
        @CustomType.Parameter("atpPasswordSecretId") @Nullable String atpPasswordSecretId,
        @CustomType.Parameter("atpUserName") @Nullable String atpUserName,
        @CustomType.Parameter("bucket") @Nullable String bucket,
        @CustomType.Parameter("cwalletFileSecretId") @Nullable String cwalletFileSecretId,
        @CustomType.Parameter("dataSourceType") String dataSourceType,
        @CustomType.Parameter("databaseName") @Nullable String databaseName,
        @CustomType.Parameter("ewalletFileSecretId") @Nullable String ewalletFileSecretId,
        @CustomType.Parameter("keyStoreFileSecretId") @Nullable String keyStoreFileSecretId,
        @CustomType.Parameter("measurementName") @Nullable String measurementName,
        @CustomType.Parameter("namespace") @Nullable String namespace,
        @CustomType.Parameter("object") @Nullable String object,
        @CustomType.Parameter("ojdbcFileSecretId") @Nullable String ojdbcFileSecretId,
        @CustomType.Parameter("passwordSecretId") @Nullable String passwordSecretId,
        @CustomType.Parameter("tableName") @Nullable String tableName,
        @CustomType.Parameter("tnsnamesFileSecretId") @Nullable String tnsnamesFileSecretId,
        @CustomType.Parameter("truststoreFileSecretId") @Nullable String truststoreFileSecretId,
        @CustomType.Parameter("url") @Nullable String url,
        @CustomType.Parameter("userName") @Nullable String userName,
        @CustomType.Parameter("versionSpecificDetails") @Nullable DataAssetDataSourceDetailsVersionSpecificDetails versionSpecificDetails,
        @CustomType.Parameter("walletPasswordSecretId") @Nullable String walletPasswordSecretId) {
        this.atpPasswordSecretId = atpPasswordSecretId;
        this.atpUserName = atpUserName;
        this.bucket = bucket;
        this.cwalletFileSecretId = cwalletFileSecretId;
        this.dataSourceType = dataSourceType;
        this.databaseName = databaseName;
        this.ewalletFileSecretId = ewalletFileSecretId;
        this.keyStoreFileSecretId = keyStoreFileSecretId;
        this.measurementName = measurementName;
        this.namespace = namespace;
        this.object = object;
        this.ojdbcFileSecretId = ojdbcFileSecretId;
        this.passwordSecretId = passwordSecretId;
        this.tableName = tableName;
        this.tnsnamesFileSecretId = tnsnamesFileSecretId;
        this.truststoreFileSecretId = truststoreFileSecretId;
        this.url = url;
        this.userName = userName;
        this.versionSpecificDetails = versionSpecificDetails;
        this.walletPasswordSecretId = walletPasswordSecretId;
    }

    /**
     * @return atp db password Secret Id
     * 
     */
    public Optional<String> atpPasswordSecretId() {
        return Optional.ofNullable(this.atpPasswordSecretId);
    }
    /**
     * @return atp db user name
     * 
     */
    public Optional<String> atpUserName() {
        return Optional.ofNullable(this.atpUserName);
    }
    /**
     * @return Bucket Name for influx connection
     * 
     */
    public Optional<String> bucket() {
        return Optional.ofNullable(this.bucket);
    }
    /**
     * @return OCID of the secret containing the containers certificates of ATP wallet
     * 
     */
    public Optional<String> cwalletFileSecretId() {
        return Optional.ofNullable(this.cwalletFileSecretId);
    }
    /**
     * @return Data source type where actually data asset is being stored
     * 
     */
    public String dataSourceType() {
        return this.dataSourceType;
    }
    /**
     * @return DB Name for influx connection
     * 
     */
    public Optional<String> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }
    /**
     * @return OCID of the secret containing the PDB&#39;S certificates of ATP wallet
     * 
     */
    public Optional<String> ewalletFileSecretId() {
        return Optional.ofNullable(this.ewalletFileSecretId);
    }
    /**
     * @return OCID of the secret containing Keystore.jks file of the ATP wallet
     * 
     */
    public Optional<String> keyStoreFileSecretId() {
        return Optional.ofNullable(this.keyStoreFileSecretId);
    }
    /**
     * @return Measurement name for influx
     * 
     */
    public Optional<String> measurementName() {
        return Optional.ofNullable(this.measurementName);
    }
    /**
     * @return Object storage namespace
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return File name
     * 
     */
    public Optional<String> object() {
        return Optional.ofNullable(this.object);
    }
    /**
     * @return OCID of the secret that contains jdbc properties file of ATP wallet
     * 
     */
    public Optional<String> ojdbcFileSecretId() {
        return Optional.ofNullable(this.ojdbcFileSecretId);
    }
    /**
     * @return Password Secret Id for the influx connection
     * 
     */
    public Optional<String> passwordSecretId() {
        return Optional.ofNullable(this.passwordSecretId);
    }
    /**
     * @return atp database table name
     * 
     */
    public Optional<String> tableName() {
        return Optional.ofNullable(this.tableName);
    }
    /**
     * @return OCID of the secret that contains the tnsnames file of ATP wallet
     * 
     */
    public Optional<String> tnsnamesFileSecretId() {
        return Optional.ofNullable(this.tnsnamesFileSecretId);
    }
    /**
     * @return OCID of the secret containing truststore.jks file of the ATP wallet
     * 
     */
    public Optional<String> truststoreFileSecretId() {
        return Optional.ofNullable(this.truststoreFileSecretId);
    }
    /**
     * @return public IP address and port to influx DB
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }
    /**
     * @return Username for connection to Influx
     * 
     */
    public Optional<String> userName() {
        return Optional.ofNullable(this.userName);
    }
    /**
     * @return Possible data sources
     * 
     */
    public Optional<DataAssetDataSourceDetailsVersionSpecificDetails> versionSpecificDetails() {
        return Optional.ofNullable(this.versionSpecificDetails);
    }
    /**
     * @return wallet password Secret ID in String format
     * 
     */
    public Optional<String> walletPasswordSecretId() {
        return Optional.ofNullable(this.walletPasswordSecretId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DataAssetDataSourceDetails defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String atpPasswordSecretId;
        private @Nullable String atpUserName;
        private @Nullable String bucket;
        private @Nullable String cwalletFileSecretId;
        private String dataSourceType;
        private @Nullable String databaseName;
        private @Nullable String ewalletFileSecretId;
        private @Nullable String keyStoreFileSecretId;
        private @Nullable String measurementName;
        private @Nullable String namespace;
        private @Nullable String object;
        private @Nullable String ojdbcFileSecretId;
        private @Nullable String passwordSecretId;
        private @Nullable String tableName;
        private @Nullable String tnsnamesFileSecretId;
        private @Nullable String truststoreFileSecretId;
        private @Nullable String url;
        private @Nullable String userName;
        private @Nullable DataAssetDataSourceDetailsVersionSpecificDetails versionSpecificDetails;
        private @Nullable String walletPasswordSecretId;

        public Builder() {
    	      // Empty
        }

        public Builder(DataAssetDataSourceDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.atpPasswordSecretId = defaults.atpPasswordSecretId;
    	      this.atpUserName = defaults.atpUserName;
    	      this.bucket = defaults.bucket;
    	      this.cwalletFileSecretId = defaults.cwalletFileSecretId;
    	      this.dataSourceType = defaults.dataSourceType;
    	      this.databaseName = defaults.databaseName;
    	      this.ewalletFileSecretId = defaults.ewalletFileSecretId;
    	      this.keyStoreFileSecretId = defaults.keyStoreFileSecretId;
    	      this.measurementName = defaults.measurementName;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.ojdbcFileSecretId = defaults.ojdbcFileSecretId;
    	      this.passwordSecretId = defaults.passwordSecretId;
    	      this.tableName = defaults.tableName;
    	      this.tnsnamesFileSecretId = defaults.tnsnamesFileSecretId;
    	      this.truststoreFileSecretId = defaults.truststoreFileSecretId;
    	      this.url = defaults.url;
    	      this.userName = defaults.userName;
    	      this.versionSpecificDetails = defaults.versionSpecificDetails;
    	      this.walletPasswordSecretId = defaults.walletPasswordSecretId;
        }

        public Builder atpPasswordSecretId(@Nullable String atpPasswordSecretId) {
            this.atpPasswordSecretId = atpPasswordSecretId;
            return this;
        }
        public Builder atpUserName(@Nullable String atpUserName) {
            this.atpUserName = atpUserName;
            return this;
        }
        public Builder bucket(@Nullable String bucket) {
            this.bucket = bucket;
            return this;
        }
        public Builder cwalletFileSecretId(@Nullable String cwalletFileSecretId) {
            this.cwalletFileSecretId = cwalletFileSecretId;
            return this;
        }
        public Builder dataSourceType(String dataSourceType) {
            this.dataSourceType = Objects.requireNonNull(dataSourceType);
            return this;
        }
        public Builder databaseName(@Nullable String databaseName) {
            this.databaseName = databaseName;
            return this;
        }
        public Builder ewalletFileSecretId(@Nullable String ewalletFileSecretId) {
            this.ewalletFileSecretId = ewalletFileSecretId;
            return this;
        }
        public Builder keyStoreFileSecretId(@Nullable String keyStoreFileSecretId) {
            this.keyStoreFileSecretId = keyStoreFileSecretId;
            return this;
        }
        public Builder measurementName(@Nullable String measurementName) {
            this.measurementName = measurementName;
            return this;
        }
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        public Builder object(@Nullable String object) {
            this.object = object;
            return this;
        }
        public Builder ojdbcFileSecretId(@Nullable String ojdbcFileSecretId) {
            this.ojdbcFileSecretId = ojdbcFileSecretId;
            return this;
        }
        public Builder passwordSecretId(@Nullable String passwordSecretId) {
            this.passwordSecretId = passwordSecretId;
            return this;
        }
        public Builder tableName(@Nullable String tableName) {
            this.tableName = tableName;
            return this;
        }
        public Builder tnsnamesFileSecretId(@Nullable String tnsnamesFileSecretId) {
            this.tnsnamesFileSecretId = tnsnamesFileSecretId;
            return this;
        }
        public Builder truststoreFileSecretId(@Nullable String truststoreFileSecretId) {
            this.truststoreFileSecretId = truststoreFileSecretId;
            return this;
        }
        public Builder url(@Nullable String url) {
            this.url = url;
            return this;
        }
        public Builder userName(@Nullable String userName) {
            this.userName = userName;
            return this;
        }
        public Builder versionSpecificDetails(@Nullable DataAssetDataSourceDetailsVersionSpecificDetails versionSpecificDetails) {
            this.versionSpecificDetails = versionSpecificDetails;
            return this;
        }
        public Builder walletPasswordSecretId(@Nullable String walletPasswordSecretId) {
            this.walletPasswordSecretId = walletPasswordSecretId;
            return this;
        }        public DataAssetDataSourceDetails build() {
            return new DataAssetDataSourceDetails(atpPasswordSecretId, atpUserName, bucket, cwalletFileSecretId, dataSourceType, databaseName, ewalletFileSecretId, keyStoreFileSecretId, measurementName, namespace, object, ojdbcFileSecretId, passwordSecretId, tableName, tnsnamesFileSecretId, truststoreFileSecretId, url, userName, versionSpecificDetails, walletPasswordSecretId);
        }
    }
}
