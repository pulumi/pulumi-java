// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildOutputArtifactOverrideParameterArgs;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildOutputDeliveredArtifactArgs;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildOutputExportedVariableArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildRunBuildOutputArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildRunBuildOutputArgs Empty = new BuildRunBuildOutputArgs();

    /**
     * Specifies the list of artifact override arguments at the time of deployment.
     * 
     */
    @Import(name="artifactOverrideParameters")
    private @Nullable Output<List<BuildRunBuildOutputArtifactOverrideParameterArgs>> artifactOverrideParameters;

    /**
     * @return Specifies the list of artifact override arguments at the time of deployment.
     * 
     */
    public Optional<Output<List<BuildRunBuildOutputArtifactOverrideParameterArgs>>> artifactOverrideParameters() {
        return Optional.ofNullable(this.artifactOverrideParameters);
    }

    /**
     * Specifies the list of artifacts delivered through the Deliver Artifacts stage.
     * 
     */
    @Import(name="deliveredArtifacts")
    private @Nullable Output<List<BuildRunBuildOutputDeliveredArtifactArgs>> deliveredArtifacts;

    /**
     * @return Specifies the list of artifacts delivered through the Deliver Artifacts stage.
     * 
     */
    public Optional<Output<List<BuildRunBuildOutputDeliveredArtifactArgs>>> deliveredArtifacts() {
        return Optional.ofNullable(this.deliveredArtifacts);
    }

    /**
     * Specifies list of exported variables.
     * 
     */
    @Import(name="exportedVariables")
    private @Nullable Output<List<BuildRunBuildOutputExportedVariableArgs>> exportedVariables;

    /**
     * @return Specifies list of exported variables.
     * 
     */
    public Optional<Output<List<BuildRunBuildOutputExportedVariableArgs>>> exportedVariables() {
        return Optional.ofNullable(this.exportedVariables);
    }

    private BuildRunBuildOutputArgs() {}

    private BuildRunBuildOutputArgs(BuildRunBuildOutputArgs $) {
        this.artifactOverrideParameters = $.artifactOverrideParameters;
        this.deliveredArtifacts = $.deliveredArtifacts;
        this.exportedVariables = $.exportedVariables;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildRunBuildOutputArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildRunBuildOutputArgs $;

        public Builder() {
            $ = new BuildRunBuildOutputArgs();
        }

        public Builder(BuildRunBuildOutputArgs defaults) {
            $ = new BuildRunBuildOutputArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param artifactOverrideParameters Specifies the list of artifact override arguments at the time of deployment.
         * 
         * @return builder
         * 
         */
        public Builder artifactOverrideParameters(@Nullable Output<List<BuildRunBuildOutputArtifactOverrideParameterArgs>> artifactOverrideParameters) {
            $.artifactOverrideParameters = artifactOverrideParameters;
            return this;
        }

        /**
         * @param artifactOverrideParameters Specifies the list of artifact override arguments at the time of deployment.
         * 
         * @return builder
         * 
         */
        public Builder artifactOverrideParameters(List<BuildRunBuildOutputArtifactOverrideParameterArgs> artifactOverrideParameters) {
            return artifactOverrideParameters(Output.of(artifactOverrideParameters));
        }

        /**
         * @param artifactOverrideParameters Specifies the list of artifact override arguments at the time of deployment.
         * 
         * @return builder
         * 
         */
        public Builder artifactOverrideParameters(BuildRunBuildOutputArtifactOverrideParameterArgs... artifactOverrideParameters) {
            return artifactOverrideParameters(List.of(artifactOverrideParameters));
        }

        /**
         * @param deliveredArtifacts Specifies the list of artifacts delivered through the Deliver Artifacts stage.
         * 
         * @return builder
         * 
         */
        public Builder deliveredArtifacts(@Nullable Output<List<BuildRunBuildOutputDeliveredArtifactArgs>> deliveredArtifacts) {
            $.deliveredArtifacts = deliveredArtifacts;
            return this;
        }

        /**
         * @param deliveredArtifacts Specifies the list of artifacts delivered through the Deliver Artifacts stage.
         * 
         * @return builder
         * 
         */
        public Builder deliveredArtifacts(List<BuildRunBuildOutputDeliveredArtifactArgs> deliveredArtifacts) {
            return deliveredArtifacts(Output.of(deliveredArtifacts));
        }

        /**
         * @param deliveredArtifacts Specifies the list of artifacts delivered through the Deliver Artifacts stage.
         * 
         * @return builder
         * 
         */
        public Builder deliveredArtifacts(BuildRunBuildOutputDeliveredArtifactArgs... deliveredArtifacts) {
            return deliveredArtifacts(List.of(deliveredArtifacts));
        }

        /**
         * @param exportedVariables Specifies list of exported variables.
         * 
         * @return builder
         * 
         */
        public Builder exportedVariables(@Nullable Output<List<BuildRunBuildOutputExportedVariableArgs>> exportedVariables) {
            $.exportedVariables = exportedVariables;
            return this;
        }

        /**
         * @param exportedVariables Specifies list of exported variables.
         * 
         * @return builder
         * 
         */
        public Builder exportedVariables(List<BuildRunBuildOutputExportedVariableArgs> exportedVariables) {
            return exportedVariables(Output.of(exportedVariables));
        }

        /**
         * @param exportedVariables Specifies list of exported variables.
         * 
         * @return builder
         * 
         */
        public Builder exportedVariables(BuildRunBuildOutputExportedVariableArgs... exportedVariables) {
            return exportedVariables(List.of(exportedVariables));
        }

        public BuildRunBuildOutputArgs build() {
            return $;
        }
    }

}
