// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.ProviderArgs;
import com.pulumi.oci.Utilities;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * The provider type for the oci package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 * 
 */
@ResourceType(type="pulumi:providers:oci")
public class Provider extends com.pulumi.resources.ProviderResource {
    /**
     * (Optional) The type of auth to use. Options are &#39;ApiKey&#39;, &#39;SecurityToken&#39; and &#39;InstancePrincipal&#39; and
     * &#39;ResourcePrincipal&#39;. By default, &#39;ApiKey&#39; will be used.
     * 
     */
    @Export(name="auth", type=String.class, parameters={})
    private Output</* @Nullable */ String> auth;

    /**
     * @return (Optional) The type of auth to use. Options are &#39;ApiKey&#39;, &#39;SecurityToken&#39; and &#39;InstancePrincipal&#39; and
     * &#39;ResourcePrincipal&#39;. By default, &#39;ApiKey&#39; will be used.
     * 
     */
    public Output<Optional<String>> auth() {
        return Codegen.optional(this.auth);
    }
    /**
     * (Optional) The profile name to be used from config file, if not set it will be DEFAULT.
     * 
     */
    @Export(name="configFileProfile", type=String.class, parameters={})
    private Output</* @Nullable */ String> configFileProfile;

    /**
     * @return (Optional) The profile name to be used from config file, if not set it will be DEFAULT.
     * 
     */
    public Output<Optional<String>> configFileProfile() {
        return Codegen.optional(this.configFileProfile);
    }
    /**
     * (Optional) The fingerprint for the user&#39;s RSA key. This can be found in user settings in the Oracle Cloud Infrastructure
     * console. Required if auth is set to &#39;ApiKey&#39;, ignored otherwise.
     * 
     */
    @Export(name="fingerprint", type=String.class, parameters={})
    private Output</* @Nullable */ String> fingerprint;

    /**
     * @return (Optional) The fingerprint for the user&#39;s RSA key. This can be found in user settings in the Oracle Cloud Infrastructure
     * console. Required if auth is set to &#39;ApiKey&#39;, ignored otherwise.
     * 
     */
    public Output<Optional<String>> fingerprint() {
        return Codegen.optional(this.fingerprint);
    }
    /**
     * (Optional) A PEM formatted RSA private key for the user. A private_key or a private_key_path must be provided if auth is
     * set to &#39;ApiKey&#39;, ignored otherwise.
     * 
     */
    @Export(name="privateKey", type=String.class, parameters={})
    private Output</* @Nullable */ String> privateKey;

    /**
     * @return (Optional) A PEM formatted RSA private key for the user. A private_key or a private_key_path must be provided if auth is
     * set to &#39;ApiKey&#39;, ignored otherwise.
     * 
     */
    public Output<Optional<String>> privateKey() {
        return Codegen.optional(this.privateKey);
    }
    /**
     * (Optional) The password used to secure the private key.
     * 
     */
    @Export(name="privateKeyPassword", type=String.class, parameters={})
    private Output</* @Nullable */ String> privateKeyPassword;

    /**
     * @return (Optional) The password used to secure the private key.
     * 
     */
    public Output<Optional<String>> privateKeyPassword() {
        return Codegen.optional(this.privateKeyPassword);
    }
    /**
     * (Optional) The path to the user&#39;s PEM formatted private key. A private_key or a private_key_path must be provided if
     * auth is set to &#39;ApiKey&#39;, ignored otherwise.
     * 
     */
    @Export(name="privateKeyPath", type=String.class, parameters={})
    private Output</* @Nullable */ String> privateKeyPath;

    /**
     * @return (Optional) The path to the user&#39;s PEM formatted private key. A private_key or a private_key_path must be provided if
     * auth is set to &#39;ApiKey&#39;, ignored otherwise.
     * 
     */
    public Output<Optional<String>> privateKeyPath() {
        return Codegen.optional(this.privateKeyPath);
    }
    /**
     * (Required) The region for API connections (e.g. us-ashburn-1).
     * 
     */
    @Export(name="region", type=String.class, parameters={})
    private Output</* @Nullable */ String> region;

    /**
     * @return (Required) The region for API connections (e.g. us-ashburn-1).
     * 
     */
    public Output<Optional<String>> region() {
        return Codegen.optional(this.region);
    }
    /**
     * (Optional) The tenancy OCID for a user. The tenancy OCID can be found at the bottom of user settings in the Oracle Cloud
     * Infrastructure console. Required if auth is set to &#39;ApiKey&#39;, ignored otherwise.
     * 
     */
    @Export(name="tenancyOcid", type=String.class, parameters={})
    private Output</* @Nullable */ String> tenancyOcid;

    /**
     * @return (Optional) The tenancy OCID for a user. The tenancy OCID can be found at the bottom of user settings in the Oracle Cloud
     * Infrastructure console. Required if auth is set to &#39;ApiKey&#39;, ignored otherwise.
     * 
     */
    public Output<Optional<String>> tenancyOcid() {
        return Codegen.optional(this.tenancyOcid);
    }
    /**
     * (Optional) The user OCID. This can be found in user settings in the Oracle Cloud Infrastructure console. Required if
     * auth is set to &#39;ApiKey&#39;, ignored otherwise.
     * 
     */
    @Export(name="userOcid", type=String.class, parameters={})
    private Output</* @Nullable */ String> userOcid;

    /**
     * @return (Optional) The user OCID. This can be found in user settings in the Oracle Cloud Infrastructure console. Required if
     * auth is set to &#39;ApiKey&#39;, ignored otherwise.
     * 
     */
    public Output<Optional<String>> userOcid() {
        return Codegen.optional(this.userOcid);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Provider(String name) {
        this(name, ProviderArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Provider(String name, @Nullable ProviderArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Provider(String name, @Nullable ProviderArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci", name, args == null ? ProviderArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

}
