// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildOutputArgs;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildRunArgumentsArgs;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildRunProgressArgs;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildRunSourceArgs;
import com.pulumi.oci.DevOps.inputs.BuildRunCommitInfoArgs;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildRunState extends com.pulumi.resources.ResourceArgs {

    public static final BuildRunState Empty = new BuildRunState();

    /**
     * Outputs from the build.
     * 
     */
    @Import(name="buildOutputs")
    private @Nullable Output<List<BuildRunBuildOutputArgs>> buildOutputs;

    /**
     * @return Outputs from the build.
     * 
     */
    public Optional<Output<List<BuildRunBuildOutputArgs>>> buildOutputs() {
        return Optional.ofNullable(this.buildOutputs);
    }

    /**
     * The OCID of the build pipeline.
     * 
     */
    @Import(name="buildPipelineId")
    private @Nullable Output<String> buildPipelineId;

    /**
     * @return The OCID of the build pipeline.
     * 
     */
    public Optional<Output<String>> buildPipelineId() {
        return Optional.ofNullable(this.buildPipelineId);
    }

    /**
     * Specifies list of arguments passed along with the build run.
     * 
     */
    @Import(name="buildRunArguments")
    private @Nullable Output<BuildRunBuildRunArgumentsArgs> buildRunArguments;

    /**
     * @return Specifies list of arguments passed along with the build run.
     * 
     */
    public Optional<Output<BuildRunBuildRunArgumentsArgs>> buildRunArguments() {
        return Optional.ofNullable(this.buildRunArguments);
    }

    /**
     * The run progress details of a build run.
     * 
     */
    @Import(name="buildRunProgresses")
    private @Nullable Output<List<BuildRunBuildRunProgressArgs>> buildRunProgresses;

    /**
     * @return The run progress details of a build run.
     * 
     */
    public Optional<Output<List<BuildRunBuildRunProgressArgs>>> buildRunProgresses() {
        return Optional.ofNullable(this.buildRunProgresses);
    }

    /**
     * The source from which the build run is triggered.
     * 
     */
    @Import(name="buildRunSources")
    private @Nullable Output<List<BuildRunBuildRunSourceArgs>> buildRunSources;

    /**
     * @return The source from which the build run is triggered.
     * 
     */
    public Optional<Output<List<BuildRunBuildRunSourceArgs>>> buildRunSources() {
        return Optional.ofNullable(this.buildRunSources);
    }

    /**
     * Commit details that need to be used for the build run.
     * 
     */
    @Import(name="commitInfo")
    private @Nullable Output<BuildRunCommitInfoArgs> commitInfo;

    /**
     * @return Commit details that need to be used for the build run.
     * 
     */
    public Optional<Output<BuildRunCommitInfoArgs>> commitInfo() {
        return Optional.ofNullable(this.commitInfo);
    }

    /**
     * The OCID of the compartment where the build is running.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment where the build is running.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The OCID of the DevOps project.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The OCID of the DevOps project.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The current state of the build run.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the build run.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private BuildRunState() {}

    private BuildRunState(BuildRunState $) {
        this.buildOutputs = $.buildOutputs;
        this.buildPipelineId = $.buildPipelineId;
        this.buildRunArguments = $.buildRunArguments;
        this.buildRunProgresses = $.buildRunProgresses;
        this.buildRunSources = $.buildRunSources;
        this.commitInfo = $.commitInfo;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.lifecycleDetails = $.lifecycleDetails;
        this.projectId = $.projectId;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildRunState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildRunState $;

        public Builder() {
            $ = new BuildRunState();
        }

        public Builder(BuildRunState defaults) {
            $ = new BuildRunState(Objects.requireNonNull(defaults));
        }

        /**
         * @param buildOutputs Outputs from the build.
         * 
         * @return builder
         * 
         */
        public Builder buildOutputs(@Nullable Output<List<BuildRunBuildOutputArgs>> buildOutputs) {
            $.buildOutputs = buildOutputs;
            return this;
        }

        /**
         * @param buildOutputs Outputs from the build.
         * 
         * @return builder
         * 
         */
        public Builder buildOutputs(List<BuildRunBuildOutputArgs> buildOutputs) {
            return buildOutputs(Output.of(buildOutputs));
        }

        /**
         * @param buildOutputs Outputs from the build.
         * 
         * @return builder
         * 
         */
        public Builder buildOutputs(BuildRunBuildOutputArgs... buildOutputs) {
            return buildOutputs(List.of(buildOutputs));
        }

        /**
         * @param buildPipelineId The OCID of the build pipeline.
         * 
         * @return builder
         * 
         */
        public Builder buildPipelineId(@Nullable Output<String> buildPipelineId) {
            $.buildPipelineId = buildPipelineId;
            return this;
        }

        /**
         * @param buildPipelineId The OCID of the build pipeline.
         * 
         * @return builder
         * 
         */
        public Builder buildPipelineId(String buildPipelineId) {
            return buildPipelineId(Output.of(buildPipelineId));
        }

        /**
         * @param buildRunArguments Specifies list of arguments passed along with the build run.
         * 
         * @return builder
         * 
         */
        public Builder buildRunArguments(@Nullable Output<BuildRunBuildRunArgumentsArgs> buildRunArguments) {
            $.buildRunArguments = buildRunArguments;
            return this;
        }

        /**
         * @param buildRunArguments Specifies list of arguments passed along with the build run.
         * 
         * @return builder
         * 
         */
        public Builder buildRunArguments(BuildRunBuildRunArgumentsArgs buildRunArguments) {
            return buildRunArguments(Output.of(buildRunArguments));
        }

        /**
         * @param buildRunProgresses The run progress details of a build run.
         * 
         * @return builder
         * 
         */
        public Builder buildRunProgresses(@Nullable Output<List<BuildRunBuildRunProgressArgs>> buildRunProgresses) {
            $.buildRunProgresses = buildRunProgresses;
            return this;
        }

        /**
         * @param buildRunProgresses The run progress details of a build run.
         * 
         * @return builder
         * 
         */
        public Builder buildRunProgresses(List<BuildRunBuildRunProgressArgs> buildRunProgresses) {
            return buildRunProgresses(Output.of(buildRunProgresses));
        }

        /**
         * @param buildRunProgresses The run progress details of a build run.
         * 
         * @return builder
         * 
         */
        public Builder buildRunProgresses(BuildRunBuildRunProgressArgs... buildRunProgresses) {
            return buildRunProgresses(List.of(buildRunProgresses));
        }

        /**
         * @param buildRunSources The source from which the build run is triggered.
         * 
         * @return builder
         * 
         */
        public Builder buildRunSources(@Nullable Output<List<BuildRunBuildRunSourceArgs>> buildRunSources) {
            $.buildRunSources = buildRunSources;
            return this;
        }

        /**
         * @param buildRunSources The source from which the build run is triggered.
         * 
         * @return builder
         * 
         */
        public Builder buildRunSources(List<BuildRunBuildRunSourceArgs> buildRunSources) {
            return buildRunSources(Output.of(buildRunSources));
        }

        /**
         * @param buildRunSources The source from which the build run is triggered.
         * 
         * @return builder
         * 
         */
        public Builder buildRunSources(BuildRunBuildRunSourceArgs... buildRunSources) {
            return buildRunSources(List.of(buildRunSources));
        }

        /**
         * @param commitInfo Commit details that need to be used for the build run.
         * 
         * @return builder
         * 
         */
        public Builder commitInfo(@Nullable Output<BuildRunCommitInfoArgs> commitInfo) {
            $.commitInfo = commitInfo;
            return this;
        }

        /**
         * @param commitInfo Commit details that need to be used for the build run.
         * 
         * @return builder
         * 
         */
        public Builder commitInfo(BuildRunCommitInfoArgs commitInfo) {
            return commitInfo(Output.of(commitInfo));
        }

        /**
         * @param compartmentId The OCID of the compartment where the build is running.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment where the build is running.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param projectId The OCID of the DevOps project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The OCID of the DevOps project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param state The current state of the build run.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the build run.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public BuildRunState build() {
            return $;
        }
    }

}
