// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.LogAnalytics.outputs.GetLogAnalyticsCategoriesListItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLogAnalyticsCategoriesListResult {
    private final @Nullable String categoryDisplayText;
    private final @Nullable String categoryType;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return An array of categories.
     * 
     */
    private final List<GetLogAnalyticsCategoriesListItem> items;
    /**
     * @return The unique name that identifies the category.
     * 
     */
    private final @Nullable String name;
    private final String namespace;

    @CustomType.Constructor
    private GetLogAnalyticsCategoriesListResult(
        @CustomType.Parameter("categoryDisplayText") @Nullable String categoryDisplayText,
        @CustomType.Parameter("categoryType") @Nullable String categoryType,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("items") List<GetLogAnalyticsCategoriesListItem> items,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("namespace") String namespace) {
        this.categoryDisplayText = categoryDisplayText;
        this.categoryType = categoryType;
        this.id = id;
        this.items = items;
        this.name = name;
        this.namespace = namespace;
    }

    public Optional<String> categoryDisplayText() {
        return Optional.ofNullable(this.categoryDisplayText);
    }
    public Optional<String> categoryType() {
        return Optional.ofNullable(this.categoryType);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An array of categories.
     * 
     */
    public List<GetLogAnalyticsCategoriesListItem> items() {
        return this.items;
    }
    /**
     * @return The unique name that identifies the category.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public String namespace() {
        return this.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogAnalyticsCategoriesListResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String categoryDisplayText;
        private @Nullable String categoryType;
        private String id;
        private List<GetLogAnalyticsCategoriesListItem> items;
        private @Nullable String name;
        private String namespace;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLogAnalyticsCategoriesListResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.categoryDisplayText = defaults.categoryDisplayText;
    	      this.categoryType = defaults.categoryType;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
        }

        public Builder categoryDisplayText(@Nullable String categoryDisplayText) {
            this.categoryDisplayText = categoryDisplayText;
            return this;
        }
        public Builder categoryType(@Nullable String categoryType) {
            this.categoryType = categoryType;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder items(List<GetLogAnalyticsCategoriesListItem> items) {
            this.items = Objects.requireNonNull(items);
            return this;
        }
        public Builder items(GetLogAnalyticsCategoriesListItem... items) {
            return items(List.of(items));
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }        public GetLogAnalyticsCategoriesListResult build() {
            return new GetLogAnalyticsCategoriesListResult(categoryDisplayText, categoryType, id, items, name, namespace);
        }
    }
}
