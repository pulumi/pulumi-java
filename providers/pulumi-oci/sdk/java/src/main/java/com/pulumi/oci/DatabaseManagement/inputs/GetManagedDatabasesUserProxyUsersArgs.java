// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseManagement.inputs.GetManagedDatabasesUserProxyUsersFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetManagedDatabasesUserProxyUsersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedDatabasesUserProxyUsersArgs Empty = new GetManagedDatabasesUserProxyUsersArgs();

    @Import(name="filters")
    private Output</* @Nullable */ List<GetManagedDatabasesUserProxyUsersFilter>> filters;

    public Output</* @Nullable */ List<GetManagedDatabasesUserProxyUsersFilter>> filters() {
        return this.filters;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private Output<String> managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public Output<String> managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * A filter to return only resources that match the entire name.
     * 
     */
    @Import(name="name")
    private Output</* @Nullable */ String> name;

    /**
     * @return A filter to return only resources that match the entire name.
     * 
     */
    public Output</* @Nullable */ String> name() {
        return this.name;
    }

    /**
     * The name of the user whose details are to be viewed.
     * 
     */
    @Import(name="userName", required=true)
    private Output<String> userName;

    /**
     * @return The name of the user whose details are to be viewed.
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    private GetManagedDatabasesUserProxyUsersArgs() {}

    private GetManagedDatabasesUserProxyUsersArgs(GetManagedDatabasesUserProxyUsersArgs $) {
        this.filters = $.filters;
        this.managedDatabaseId = $.managedDatabaseId;
        this.name = $.name;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedDatabasesUserProxyUsersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedDatabasesUserProxyUsersArgs $;

        public Builder() {
            $ = new GetManagedDatabasesUserProxyUsersArgs();
        }

        public Builder(GetManagedDatabasesUserProxyUsersArgs defaults) {
            $ = new GetManagedDatabasesUserProxyUsersArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(Output</* @Nullable */ List<GetManagedDatabasesUserProxyUsersFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetManagedDatabasesUserProxyUsersFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetManagedDatabasesUserProxyUsersFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(Output<String> managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            return managedDatabaseId(Output.of(managedDatabaseId));
        }

        /**
         * @param name A filter to return only resources that match the entire name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output</* @Nullable */ String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A filter to return only resources that match the entire name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            return name(Output.of(name));
        }

        /**
         * @param userName The name of the user whose details are to be viewed.
         * 
         * @return builder
         * 
         */
        public Builder userName(Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName The name of the user whose details are to be viewed.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public GetManagedDatabasesUserProxyUsersArgs build() {
            $.managedDatabaseId = Objects.requireNonNull($.managedDatabaseId, "expected parameter 'managedDatabaseId' to be non-null");
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
