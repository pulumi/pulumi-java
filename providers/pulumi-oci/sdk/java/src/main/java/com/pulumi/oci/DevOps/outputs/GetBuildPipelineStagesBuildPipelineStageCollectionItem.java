// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildPipelineStagePredecessorCollection;
import com.pulumi.oci.DevOps.outputs.GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildSourceCollection;
import com.pulumi.oci.DevOps.outputs.GetBuildPipelineStagesBuildPipelineStageCollectionItemDeliverArtifactCollection;
import com.pulumi.oci.DevOps.outputs.GetBuildPipelineStagesBuildPipelineStageCollectionItemWaitCriteria;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBuildPipelineStagesBuildPipelineStageCollectionItem {
    /**
     * @return The OCID of the parent build pipeline.
     * 
     */
    private final String buildPipelineId;
    /**
     * @return The collection containing the predecessors of a stage.
     * 
     */
    private final List<GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildPipelineStagePredecessorCollection> buildPipelineStagePredecessorCollections;
    /**
     * @return Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
     * 
     */
    private final String buildPipelineStageType;
    /**
     * @return Collection of build sources.
     * 
     */
    private final GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildSourceCollection buildSourceCollection;
    /**
     * @return The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
     * 
     */
    private final String buildSpecFile;
    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    private final String compartmentId;
    /**
     * @return The type of source provider.
     * 
     */
    private final String connectionType;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Specifies an array of artifacts that need to be pushed to the artifactory stores.
     * 
     */
    private final GetBuildPipelineStagesBuildPipelineStageCollectionItemDeliverArtifactCollection deliverArtifactCollection;
    /**
     * @return A target deployment pipeline OCID that will run in this stage.
     * 
     */
    private final String deployPipelineId;
    /**
     * @return Optional description about the build stage.
     * 
     */
    private final String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private final String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return Unique identifier or OCID for listing a single resource by ID.
     * 
     */
    private final String id;
    /**
     * @return Image name for the build environment.
     * 
     */
    private final String image;
    /**
     * @return A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
     * 
     */
    private final Boolean isPassAllParametersEnabled;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return Name of the build source where the build_spec.yml file is located. If not specified, then the first entry in the build source collection is chosen as primary build source.
     * 
     */
    private final String primaryBuildSource;
    /**
     * @return The OCID of the DevOps project.
     * 
     */
    private final String projectId;
    /**
     * @return Timeout for the build stage execution. Specify value in seconds.
     * 
     */
    private final Integer stageExecutionTimeoutInSeconds;
    /**
     * @return A filter to return the stages that matches the given lifecycle state.
     * 
     */
    private final String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The time the stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private final String timeUpdated;
    /**
     * @return Specifies wait criteria for the Wait stage.
     * 
     */
    private final GetBuildPipelineStagesBuildPipelineStageCollectionItemWaitCriteria waitCriteria;

    @CustomType.Constructor
    private GetBuildPipelineStagesBuildPipelineStageCollectionItem(
        @CustomType.Parameter("buildPipelineId") String buildPipelineId,
        @CustomType.Parameter("buildPipelineStagePredecessorCollections") List<GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildPipelineStagePredecessorCollection> buildPipelineStagePredecessorCollections,
        @CustomType.Parameter("buildPipelineStageType") String buildPipelineStageType,
        @CustomType.Parameter("buildSourceCollection") GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildSourceCollection buildSourceCollection,
        @CustomType.Parameter("buildSpecFile") String buildSpecFile,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("connectionType") String connectionType,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("deliverArtifactCollection") GetBuildPipelineStagesBuildPipelineStageCollectionItemDeliverArtifactCollection deliverArtifactCollection,
        @CustomType.Parameter("deployPipelineId") String deployPipelineId,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("image") String image,
        @CustomType.Parameter("isPassAllParametersEnabled") Boolean isPassAllParametersEnabled,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("primaryBuildSource") String primaryBuildSource,
        @CustomType.Parameter("projectId") String projectId,
        @CustomType.Parameter("stageExecutionTimeoutInSeconds") Integer stageExecutionTimeoutInSeconds,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("waitCriteria") GetBuildPipelineStagesBuildPipelineStageCollectionItemWaitCriteria waitCriteria) {
        this.buildPipelineId = buildPipelineId;
        this.buildPipelineStagePredecessorCollections = buildPipelineStagePredecessorCollections;
        this.buildPipelineStageType = buildPipelineStageType;
        this.buildSourceCollection = buildSourceCollection;
        this.buildSpecFile = buildSpecFile;
        this.compartmentId = compartmentId;
        this.connectionType = connectionType;
        this.definedTags = definedTags;
        this.deliverArtifactCollection = deliverArtifactCollection;
        this.deployPipelineId = deployPipelineId;
        this.description = description;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.image = image;
        this.isPassAllParametersEnabled = isPassAllParametersEnabled;
        this.lifecycleDetails = lifecycleDetails;
        this.primaryBuildSource = primaryBuildSource;
        this.projectId = projectId;
        this.stageExecutionTimeoutInSeconds = stageExecutionTimeoutInSeconds;
        this.state = state;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
        this.waitCriteria = waitCriteria;
    }

    /**
     * @return The OCID of the parent build pipeline.
     * 
     */
    public String buildPipelineId() {
        return this.buildPipelineId;
    }
    /**
     * @return The collection containing the predecessors of a stage.
     * 
     */
    public List<GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildPipelineStagePredecessorCollection> buildPipelineStagePredecessorCollections() {
        return this.buildPipelineStagePredecessorCollections;
    }
    /**
     * @return Defines the stage type, which is one of the following: BUILD, DELIVER_ARTIFACT, WAIT, and TRIGGER_DEPLOYMENT_PIPELINE.
     * 
     */
    public String buildPipelineStageType() {
        return this.buildPipelineStageType;
    }
    /**
     * @return Collection of build sources.
     * 
     */
    public GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildSourceCollection buildSourceCollection() {
        return this.buildSourceCollection;
    }
    /**
     * @return The path to the build specification file for this environment. The default location of the file if not specified is build_spec.yaml.
     * 
     */
    public String buildSpecFile() {
        return this.buildSpecFile;
    }
    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The type of source provider.
     * 
     */
    public String connectionType() {
        return this.connectionType;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Specifies an array of artifacts that need to be pushed to the artifactory stores.
     * 
     */
    public GetBuildPipelineStagesBuildPipelineStageCollectionItemDeliverArtifactCollection deliverArtifactCollection() {
        return this.deliverArtifactCollection;
    }
    /**
     * @return A target deployment pipeline OCID that will run in this stage.
     * 
     */
    public String deployPipelineId() {
        return this.deployPipelineId;
    }
    /**
     * @return Optional description about the build stage.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier or OCID for listing a single resource by ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Image name for the build environment.
     * 
     */
    public String image() {
        return this.image;
    }
    /**
     * @return A boolean flag that specifies whether all the parameters must be passed when the deployment is triggered.
     * 
     */
    public Boolean isPassAllParametersEnabled() {
        return this.isPassAllParametersEnabled;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Name of the build source where the build_spec.yml file is located. If not specified, then the first entry in the build source collection is chosen as primary build source.
     * 
     */
    public String primaryBuildSource() {
        return this.primaryBuildSource;
    }
    /**
     * @return The OCID of the DevOps project.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return Timeout for the build stage execution. Specify value in seconds.
     * 
     */
    public Integer stageExecutionTimeoutInSeconds() {
        return this.stageExecutionTimeoutInSeconds;
    }
    /**
     * @return A filter to return the stages that matches the given lifecycle state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the stage was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the stage was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Specifies wait criteria for the Wait stage.
     * 
     */
    public GetBuildPipelineStagesBuildPipelineStageCollectionItemWaitCriteria waitCriteria() {
        return this.waitCriteria;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBuildPipelineStagesBuildPipelineStageCollectionItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String buildPipelineId;
        private List<GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildPipelineStagePredecessorCollection> buildPipelineStagePredecessorCollections;
        private String buildPipelineStageType;
        private GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildSourceCollection buildSourceCollection;
        private String buildSpecFile;
        private String compartmentId;
        private String connectionType;
        private Map<String,Object> definedTags;
        private GetBuildPipelineStagesBuildPipelineStageCollectionItemDeliverArtifactCollection deliverArtifactCollection;
        private String deployPipelineId;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String image;
        private Boolean isPassAllParametersEnabled;
        private String lifecycleDetails;
        private String primaryBuildSource;
        private String projectId;
        private Integer stageExecutionTimeoutInSeconds;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;
        private GetBuildPipelineStagesBuildPipelineStageCollectionItemWaitCriteria waitCriteria;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBuildPipelineStagesBuildPipelineStageCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buildPipelineId = defaults.buildPipelineId;
    	      this.buildPipelineStagePredecessorCollections = defaults.buildPipelineStagePredecessorCollections;
    	      this.buildPipelineStageType = defaults.buildPipelineStageType;
    	      this.buildSourceCollection = defaults.buildSourceCollection;
    	      this.buildSpecFile = defaults.buildSpecFile;
    	      this.compartmentId = defaults.compartmentId;
    	      this.connectionType = defaults.connectionType;
    	      this.definedTags = defaults.definedTags;
    	      this.deliverArtifactCollection = defaults.deliverArtifactCollection;
    	      this.deployPipelineId = defaults.deployPipelineId;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.image = defaults.image;
    	      this.isPassAllParametersEnabled = defaults.isPassAllParametersEnabled;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.primaryBuildSource = defaults.primaryBuildSource;
    	      this.projectId = defaults.projectId;
    	      this.stageExecutionTimeoutInSeconds = defaults.stageExecutionTimeoutInSeconds;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.waitCriteria = defaults.waitCriteria;
        }

        public Builder buildPipelineId(String buildPipelineId) {
            this.buildPipelineId = Objects.requireNonNull(buildPipelineId);
            return this;
        }
        public Builder buildPipelineStagePredecessorCollections(List<GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildPipelineStagePredecessorCollection> buildPipelineStagePredecessorCollections) {
            this.buildPipelineStagePredecessorCollections = Objects.requireNonNull(buildPipelineStagePredecessorCollections);
            return this;
        }
        public Builder buildPipelineStagePredecessorCollections(GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildPipelineStagePredecessorCollection... buildPipelineStagePredecessorCollections) {
            return buildPipelineStagePredecessorCollections(List.of(buildPipelineStagePredecessorCollections));
        }
        public Builder buildPipelineStageType(String buildPipelineStageType) {
            this.buildPipelineStageType = Objects.requireNonNull(buildPipelineStageType);
            return this;
        }
        public Builder buildSourceCollection(GetBuildPipelineStagesBuildPipelineStageCollectionItemBuildSourceCollection buildSourceCollection) {
            this.buildSourceCollection = Objects.requireNonNull(buildSourceCollection);
            return this;
        }
        public Builder buildSpecFile(String buildSpecFile) {
            this.buildSpecFile = Objects.requireNonNull(buildSpecFile);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder connectionType(String connectionType) {
            this.connectionType = Objects.requireNonNull(connectionType);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder deliverArtifactCollection(GetBuildPipelineStagesBuildPipelineStageCollectionItemDeliverArtifactCollection deliverArtifactCollection) {
            this.deliverArtifactCollection = Objects.requireNonNull(deliverArtifactCollection);
            return this;
        }
        public Builder deployPipelineId(String deployPipelineId) {
            this.deployPipelineId = Objects.requireNonNull(deployPipelineId);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder image(String image) {
            this.image = Objects.requireNonNull(image);
            return this;
        }
        public Builder isPassAllParametersEnabled(Boolean isPassAllParametersEnabled) {
            this.isPassAllParametersEnabled = Objects.requireNonNull(isPassAllParametersEnabled);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder primaryBuildSource(String primaryBuildSource) {
            this.primaryBuildSource = Objects.requireNonNull(primaryBuildSource);
            return this;
        }
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        public Builder stageExecutionTimeoutInSeconds(Integer stageExecutionTimeoutInSeconds) {
            this.stageExecutionTimeoutInSeconds = Objects.requireNonNull(stageExecutionTimeoutInSeconds);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder waitCriteria(GetBuildPipelineStagesBuildPipelineStageCollectionItemWaitCriteria waitCriteria) {
            this.waitCriteria = Objects.requireNonNull(waitCriteria);
            return this;
        }        public GetBuildPipelineStagesBuildPipelineStageCollectionItem build() {
            return new GetBuildPipelineStagesBuildPipelineStageCollectionItem(buildPipelineId, buildPipelineStagePredecessorCollections, buildPipelineStageType, buildSourceCollection, buildSpecFile, compartmentId, connectionType, definedTags, deliverArtifactCollection, deployPipelineId, description, displayName, freeformTags, id, image, isPassAllParametersEnabled, lifecycleDetails, primaryBuildSource, projectId, stageExecutionTimeoutInSeconds, state, systemTags, timeCreated, timeUpdated, waitCriteria);
        }
    }
}
