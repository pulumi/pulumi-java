// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApmSynthetics.outputs.ConfigConfigurationReqAuthenticationDetailsAuthHeader;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigConfigurationReqAuthenticationDetails {
    /**
     * @return (Updatable) List of authentication headers. Example: `[{&#34;headerName&#34;: &#34;content-type&#34;, &#34;headerValue&#34;:&#34;json&#34;}]`
     * 
     */
    private final @Nullable List<ConfigConfigurationReqAuthenticationDetailsAuthHeader> authHeaders;
    /**
     * @return (Updatable) Request method.
     * 
     */
    private final @Nullable String authRequestMethod;
    /**
     * @return (Updatable) Request post body.
     * 
     */
    private final @Nullable String authRequestPostBody;
    /**
     * @return (Updatable) Authentication token.
     * 
     */
    private final @Nullable String authToken;
    /**
     * @return (Updatable) URL to get authetication token.
     * 
     */
    private final @Nullable String authUrl;
    /**
     * @return (Updatable) Username for authentication.
     * 
     */
    private final @Nullable String authUserName;
    /**
     * @return (Updatable) User password for authentication.
     * 
     */
    private final @Nullable String authUserPassword;
    /**
     * @return (Updatable) Request http oauth scheme.
     * 
     */
    private final @Nullable String oauthScheme;

    @CustomType.Constructor
    private ConfigConfigurationReqAuthenticationDetails(
        @CustomType.Parameter("authHeaders") @Nullable List<ConfigConfigurationReqAuthenticationDetailsAuthHeader> authHeaders,
        @CustomType.Parameter("authRequestMethod") @Nullable String authRequestMethod,
        @CustomType.Parameter("authRequestPostBody") @Nullable String authRequestPostBody,
        @CustomType.Parameter("authToken") @Nullable String authToken,
        @CustomType.Parameter("authUrl") @Nullable String authUrl,
        @CustomType.Parameter("authUserName") @Nullable String authUserName,
        @CustomType.Parameter("authUserPassword") @Nullable String authUserPassword,
        @CustomType.Parameter("oauthScheme") @Nullable String oauthScheme) {
        this.authHeaders = authHeaders;
        this.authRequestMethod = authRequestMethod;
        this.authRequestPostBody = authRequestPostBody;
        this.authToken = authToken;
        this.authUrl = authUrl;
        this.authUserName = authUserName;
        this.authUserPassword = authUserPassword;
        this.oauthScheme = oauthScheme;
    }

    /**
     * @return (Updatable) List of authentication headers. Example: `[{&#34;headerName&#34;: &#34;content-type&#34;, &#34;headerValue&#34;:&#34;json&#34;}]`
     * 
     */
    public List<ConfigConfigurationReqAuthenticationDetailsAuthHeader> authHeaders() {
        return this.authHeaders == null ? List.of() : this.authHeaders;
    }
    /**
     * @return (Updatable) Request method.
     * 
     */
    public Optional<String> authRequestMethod() {
        return Optional.ofNullable(this.authRequestMethod);
    }
    /**
     * @return (Updatable) Request post body.
     * 
     */
    public Optional<String> authRequestPostBody() {
        return Optional.ofNullable(this.authRequestPostBody);
    }
    /**
     * @return (Updatable) Authentication token.
     * 
     */
    public Optional<String> authToken() {
        return Optional.ofNullable(this.authToken);
    }
    /**
     * @return (Updatable) URL to get authetication token.
     * 
     */
    public Optional<String> authUrl() {
        return Optional.ofNullable(this.authUrl);
    }
    /**
     * @return (Updatable) Username for authentication.
     * 
     */
    public Optional<String> authUserName() {
        return Optional.ofNullable(this.authUserName);
    }
    /**
     * @return (Updatable) User password for authentication.
     * 
     */
    public Optional<String> authUserPassword() {
        return Optional.ofNullable(this.authUserPassword);
    }
    /**
     * @return (Updatable) Request http oauth scheme.
     * 
     */
    public Optional<String> oauthScheme() {
        return Optional.ofNullable(this.oauthScheme);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigConfigurationReqAuthenticationDetails defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<ConfigConfigurationReqAuthenticationDetailsAuthHeader> authHeaders;
        private @Nullable String authRequestMethod;
        private @Nullable String authRequestPostBody;
        private @Nullable String authToken;
        private @Nullable String authUrl;
        private @Nullable String authUserName;
        private @Nullable String authUserPassword;
        private @Nullable String oauthScheme;

        public Builder() {
    	      // Empty
        }

        public Builder(ConfigConfigurationReqAuthenticationDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authHeaders = defaults.authHeaders;
    	      this.authRequestMethod = defaults.authRequestMethod;
    	      this.authRequestPostBody = defaults.authRequestPostBody;
    	      this.authToken = defaults.authToken;
    	      this.authUrl = defaults.authUrl;
    	      this.authUserName = defaults.authUserName;
    	      this.authUserPassword = defaults.authUserPassword;
    	      this.oauthScheme = defaults.oauthScheme;
        }

        public Builder authHeaders(@Nullable List<ConfigConfigurationReqAuthenticationDetailsAuthHeader> authHeaders) {
            this.authHeaders = authHeaders;
            return this;
        }
        public Builder authHeaders(ConfigConfigurationReqAuthenticationDetailsAuthHeader... authHeaders) {
            return authHeaders(List.of(authHeaders));
        }
        public Builder authRequestMethod(@Nullable String authRequestMethod) {
            this.authRequestMethod = authRequestMethod;
            return this;
        }
        public Builder authRequestPostBody(@Nullable String authRequestPostBody) {
            this.authRequestPostBody = authRequestPostBody;
            return this;
        }
        public Builder authToken(@Nullable String authToken) {
            this.authToken = authToken;
            return this;
        }
        public Builder authUrl(@Nullable String authUrl) {
            this.authUrl = authUrl;
            return this;
        }
        public Builder authUserName(@Nullable String authUserName) {
            this.authUserName = authUserName;
            return this;
        }
        public Builder authUserPassword(@Nullable String authUserPassword) {
            this.authUserPassword = authUserPassword;
            return this;
        }
        public Builder oauthScheme(@Nullable String oauthScheme) {
            this.oauthScheme = oauthScheme;
            return this;
        }        public ConfigConfigurationReqAuthenticationDetails build() {
            return new ConfigConfigurationReqAuthenticationDetails(authHeaders, authRequestMethod, authRequestPostBody, authToken, authUrl, authUserName, authUserPassword, oauthScheme);
        }
    }
}
