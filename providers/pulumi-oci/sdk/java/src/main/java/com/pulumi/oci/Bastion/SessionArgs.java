// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Bastion;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Bastion.inputs.SessionKeyDetailsArgs;
import com.pulumi.oci.Bastion.inputs.SessionTargetResourceDetailsArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SessionArgs extends com.pulumi.resources.ResourceArgs {

    public static final SessionArgs Empty = new SessionArgs();

    /**
     * The unique identifier (OCID) of the bastion on which to create this session.
     * 
     */
    @Import(name="bastionId", required=true)
    private Output<String> bastionId;

    /**
     * @return The unique identifier (OCID) of the bastion on which to create this session.
     * 
     */
    public Output<String> bastionId() {
        return this.bastionId;
    }

    /**
     * (Updatable) The name of the session.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The name of the session.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Public key details for a bastion session.
     * 
     */
    @Import(name="keyDetails", required=true)
    private Output<SessionKeyDetailsArgs> keyDetails;

    /**
     * @return Public key details for a bastion session.
     * 
     */
    public Output<SessionKeyDetailsArgs> keyDetails() {
        return this.keyDetails;
    }

    /**
     * The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
     * 
     */
    @Import(name="keyType")
    private @Nullable Output<String> keyType;

    /**
     * @return The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
     * 
     */
    public Optional<Output<String>> keyType() {
        return Optional.ofNullable(this.keyType);
    }

    /**
     * The amount of time the session can remain active.
     * 
     */
    @Import(name="sessionTtlInSeconds")
    private @Nullable Output<Integer> sessionTtlInSeconds;

    /**
     * @return The amount of time the session can remain active.
     * 
     */
    public Optional<Output<Integer>> sessionTtlInSeconds() {
        return Optional.ofNullable(this.sessionTtlInSeconds);
    }

    /**
     * Details about a bastion session&#39;s target resource.
     * 
     */
    @Import(name="targetResourceDetails", required=true)
    private Output<SessionTargetResourceDetailsArgs> targetResourceDetails;

    /**
     * @return Details about a bastion session&#39;s target resource.
     * 
     */
    public Output<SessionTargetResourceDetailsArgs> targetResourceDetails() {
        return this.targetResourceDetails;
    }

    private SessionArgs() {}

    private SessionArgs(SessionArgs $) {
        this.bastionId = $.bastionId;
        this.displayName = $.displayName;
        this.keyDetails = $.keyDetails;
        this.keyType = $.keyType;
        this.sessionTtlInSeconds = $.sessionTtlInSeconds;
        this.targetResourceDetails = $.targetResourceDetails;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SessionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SessionArgs $;

        public Builder() {
            $ = new SessionArgs();
        }

        public Builder(SessionArgs defaults) {
            $ = new SessionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bastionId The unique identifier (OCID) of the bastion on which to create this session.
         * 
         * @return builder
         * 
         */
        public Builder bastionId(Output<String> bastionId) {
            $.bastionId = bastionId;
            return this;
        }

        /**
         * @param bastionId The unique identifier (OCID) of the bastion on which to create this session.
         * 
         * @return builder
         * 
         */
        public Builder bastionId(String bastionId) {
            return bastionId(Output.of(bastionId));
        }

        /**
         * @param displayName (Updatable) The name of the session.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The name of the session.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param keyDetails Public key details for a bastion session.
         * 
         * @return builder
         * 
         */
        public Builder keyDetails(Output<SessionKeyDetailsArgs> keyDetails) {
            $.keyDetails = keyDetails;
            return this;
        }

        /**
         * @param keyDetails Public key details for a bastion session.
         * 
         * @return builder
         * 
         */
        public Builder keyDetails(SessionKeyDetailsArgs keyDetails) {
            return keyDetails(Output.of(keyDetails));
        }

        /**
         * @param keyType The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
         * 
         * @return builder
         * 
         */
        public Builder keyType(@Nullable Output<String> keyType) {
            $.keyType = keyType;
            return this;
        }

        /**
         * @param keyType The type of the key used to connect to the session. PUB is a standard public key in OpenSSH format.
         * 
         * @return builder
         * 
         */
        public Builder keyType(String keyType) {
            return keyType(Output.of(keyType));
        }

        /**
         * @param sessionTtlInSeconds The amount of time the session can remain active.
         * 
         * @return builder
         * 
         */
        public Builder sessionTtlInSeconds(@Nullable Output<Integer> sessionTtlInSeconds) {
            $.sessionTtlInSeconds = sessionTtlInSeconds;
            return this;
        }

        /**
         * @param sessionTtlInSeconds The amount of time the session can remain active.
         * 
         * @return builder
         * 
         */
        public Builder sessionTtlInSeconds(Integer sessionTtlInSeconds) {
            return sessionTtlInSeconds(Output.of(sessionTtlInSeconds));
        }

        /**
         * @param targetResourceDetails Details about a bastion session&#39;s target resource.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceDetails(Output<SessionTargetResourceDetailsArgs> targetResourceDetails) {
            $.targetResourceDetails = targetResourceDetails;
            return this;
        }

        /**
         * @param targetResourceDetails Details about a bastion session&#39;s target resource.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceDetails(SessionTargetResourceDetailsArgs targetResourceDetails) {
            return targetResourceDetails(Output.of(targetResourceDetails));
        }

        public SessionArgs build() {
            $.bastionId = Objects.requireNonNull($.bastionId, "expected parameter 'bastionId' to be non-null");
            $.keyDetails = Objects.requireNonNull($.keyDetails, "expected parameter 'keyDetails' to be non-null");
            $.targetResourceDetails = Objects.requireNonNull($.targetResourceDetails, "expected parameter 'targetResourceDetails' to be non-null");
            return $;
        }
    }

}
