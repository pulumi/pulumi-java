// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetDedicatedVmHostInstanceShapesDedicatedVmHostInstanceShape;
import com.pulumi.oci.Core.outputs.GetDedicatedVmHostInstanceShapesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDedicatedVmHostInstanceShapesResult {
    /**
     * @return The shape&#39;s availability domain.
     * 
     */
    private final @Nullable String availabilityDomain;
    private final String compartmentId;
    /**
     * @return The list of dedicated_vm_host_instance_shapes.
     * 
     */
    private final List<GetDedicatedVmHostInstanceShapesDedicatedVmHostInstanceShape> dedicatedVmHostInstanceShapes;
    private final @Nullable String dedicatedVmHostShape;
    private final @Nullable List<GetDedicatedVmHostInstanceShapesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;

    @CustomType.Constructor
    private GetDedicatedVmHostInstanceShapesResult(
        @CustomType.Parameter("availabilityDomain") @Nullable String availabilityDomain,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("dedicatedVmHostInstanceShapes") List<GetDedicatedVmHostInstanceShapesDedicatedVmHostInstanceShape> dedicatedVmHostInstanceShapes,
        @CustomType.Parameter("dedicatedVmHostShape") @Nullable String dedicatedVmHostShape,
        @CustomType.Parameter("filters") @Nullable List<GetDedicatedVmHostInstanceShapesFilter> filters,
        @CustomType.Parameter("id") String id) {
        this.availabilityDomain = availabilityDomain;
        this.compartmentId = compartmentId;
        this.dedicatedVmHostInstanceShapes = dedicatedVmHostInstanceShapes;
        this.dedicatedVmHostShape = dedicatedVmHostShape;
        this.filters = filters;
        this.id = id;
    }

    /**
     * @return The shape&#39;s availability domain.
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of dedicated_vm_host_instance_shapes.
     * 
     */
    public List<GetDedicatedVmHostInstanceShapesDedicatedVmHostInstanceShape> dedicatedVmHostInstanceShapes() {
        return this.dedicatedVmHostInstanceShapes;
    }
    public Optional<String> dedicatedVmHostShape() {
        return Optional.ofNullable(this.dedicatedVmHostShape);
    }
    public List<GetDedicatedVmHostInstanceShapesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDedicatedVmHostInstanceShapesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String availabilityDomain;
        private String compartmentId;
        private List<GetDedicatedVmHostInstanceShapesDedicatedVmHostInstanceShape> dedicatedVmHostInstanceShapes;
        private @Nullable String dedicatedVmHostShape;
        private @Nullable List<GetDedicatedVmHostInstanceShapesFilter> filters;
        private String id;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDedicatedVmHostInstanceShapesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dedicatedVmHostInstanceShapes = defaults.dedicatedVmHostInstanceShapes;
    	      this.dedicatedVmHostShape = defaults.dedicatedVmHostShape;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
        }

        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder dedicatedVmHostInstanceShapes(List<GetDedicatedVmHostInstanceShapesDedicatedVmHostInstanceShape> dedicatedVmHostInstanceShapes) {
            this.dedicatedVmHostInstanceShapes = Objects.requireNonNull(dedicatedVmHostInstanceShapes);
            return this;
        }
        public Builder dedicatedVmHostInstanceShapes(GetDedicatedVmHostInstanceShapesDedicatedVmHostInstanceShape... dedicatedVmHostInstanceShapes) {
            return dedicatedVmHostInstanceShapes(List.of(dedicatedVmHostInstanceShapes));
        }
        public Builder dedicatedVmHostShape(@Nullable String dedicatedVmHostShape) {
            this.dedicatedVmHostShape = dedicatedVmHostShape;
            return this;
        }
        public Builder filters(@Nullable List<GetDedicatedVmHostInstanceShapesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetDedicatedVmHostInstanceShapesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }        public GetDedicatedVmHostInstanceShapesResult build() {
            return new GetDedicatedVmHostInstanceShapesResult(availabilityDomain, compartmentId, dedicatedVmHostInstanceShapes, dedicatedVmHostShape, filters, id);
        }
    }
}
