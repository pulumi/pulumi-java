// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UiPasswordState extends com.pulumi.resources.ResourceArgs {

    public static final UiPasswordState Empty = new UiPasswordState();

    /**
     * The detailed status of INACTIVE lifecycleState.
     * 
     */
    @Import(name="inactiveStatus")
    private @Nullable Output<String> inactiveStatus;

    /**
     * @return The detailed status of INACTIVE lifecycleState.
     * 
     */
    public Optional<Output<String>> inactiveStatus() {
        return Optional.ofNullable(this.inactiveStatus);
    }

    /**
     * The user&#39;s password for the Console.
     * 
     */
    @Import(name="password")
    private @Nullable Output<String> password;

    /**
     * @return The user&#39;s password for the Console.
     * 
     */
    public Optional<Output<String>> password() {
        return Optional.ofNullable(this.password);
    }

    /**
     * The password&#39;s current state.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The password&#39;s current state.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Date and time the password was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return Date and time the password was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The OCID of the user.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return The OCID of the user.
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private UiPasswordState() {}

    private UiPasswordState(UiPasswordState $) {
        this.inactiveStatus = $.inactiveStatus;
        this.password = $.password;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UiPasswordState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UiPasswordState $;

        public Builder() {
            $ = new UiPasswordState();
        }

        public Builder(UiPasswordState defaults) {
            $ = new UiPasswordState(Objects.requireNonNull(defaults));
        }

        /**
         * @param inactiveStatus The detailed status of INACTIVE lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder inactiveStatus(@Nullable Output<String> inactiveStatus) {
            $.inactiveStatus = inactiveStatus;
            return this;
        }

        /**
         * @param inactiveStatus The detailed status of INACTIVE lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder inactiveStatus(String inactiveStatus) {
            return inactiveStatus(Output.of(inactiveStatus));
        }

        /**
         * @param password The user&#39;s password for the Console.
         * 
         * @return builder
         * 
         */
        public Builder password(@Nullable Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The user&#39;s password for the Console.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param state The password&#39;s current state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The password&#39;s current state.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated Date and time the password was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated Date and time the password was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param userId The OCID of the user.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The OCID of the user.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public UiPasswordState build() {
            return $;
        }
    }

}
