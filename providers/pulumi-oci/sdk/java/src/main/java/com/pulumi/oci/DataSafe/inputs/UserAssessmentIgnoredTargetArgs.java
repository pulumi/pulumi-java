// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserAssessmentIgnoredTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserAssessmentIgnoredTargetArgs Empty = new UserAssessmentIgnoredTargetArgs();

    @Import(name="lifecycleState")
    private @Nullable Output<String> lifecycleState;

    public Optional<Output<String>> lifecycleState() {
        return Optional.ofNullable(this.lifecycleState);
    }

    /**
     * The OCID of the target database on which the user assessment is to be run.
     * 
     */
    @Import(name="targetId")
    private @Nullable Output<String> targetId;

    /**
     * @return The OCID of the target database on which the user assessment is to be run.
     * 
     */
    public Optional<Output<String>> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    @Import(name="userAssessmentId")
    private @Nullable Output<String> userAssessmentId;

    public Optional<Output<String>> userAssessmentId() {
        return Optional.ofNullable(this.userAssessmentId);
    }

    private UserAssessmentIgnoredTargetArgs() {}

    private UserAssessmentIgnoredTargetArgs(UserAssessmentIgnoredTargetArgs $) {
        this.lifecycleState = $.lifecycleState;
        this.targetId = $.targetId;
        this.userAssessmentId = $.userAssessmentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserAssessmentIgnoredTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserAssessmentIgnoredTargetArgs $;

        public Builder() {
            $ = new UserAssessmentIgnoredTargetArgs();
        }

        public Builder(UserAssessmentIgnoredTargetArgs defaults) {
            $ = new UserAssessmentIgnoredTargetArgs(Objects.requireNonNull(defaults));
        }

        public Builder lifecycleState(@Nullable Output<String> lifecycleState) {
            $.lifecycleState = lifecycleState;
            return this;
        }

        public Builder lifecycleState(String lifecycleState) {
            return lifecycleState(Output.of(lifecycleState));
        }

        /**
         * @param targetId The OCID of the target database on which the user assessment is to be run.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable Output<String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId The OCID of the target database on which the user assessment is to be run.
         * 
         * @return builder
         * 
         */
        public Builder targetId(String targetId) {
            return targetId(Output.of(targetId));
        }

        public Builder userAssessmentId(@Nullable Output<String> userAssessmentId) {
            $.userAssessmentId = userAssessmentId;
            return this;
        }

        public Builder userAssessmentId(String userAssessmentId) {
            return userAssessmentId(Output.of(userAssessmentId));
        }

        public UserAssessmentIgnoredTargetArgs build() {
            return $;
        }
    }

}
