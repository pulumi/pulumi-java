// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.LibraryMasingFormatFormatEntryArgs;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LibraryMasingFormatArgs extends com.pulumi.resources.ResourceArgs {

    public static final LibraryMasingFormatArgs Empty = new LibraryMasingFormatArgs();

    /**
     * (Updatable) The OCID of the compartment where the library masking format should be created.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment where the library masking format should be created.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The description of the format entry.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) The description of the format entry.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) The display name of the library masking format. The name does not have to be unique, and it&#39;s changeable.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the library masking format. The name does not have to be unique, and it&#39;s changeable.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) An array of format entries. The combined output of all the format entries is used for masking.
     * 
     */
    @Import(name="formatEntries", required=true)
    private Output<List<LibraryMasingFormatFormatEntryArgs>> formatEntries;

    /**
     * @return (Updatable) An array of format entries. The combined output of all the format entries is used for masking.
     * 
     */
    public Output<List<LibraryMasingFormatFormatEntryArgs>> formatEntries() {
        return this.formatEntries;
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) An array of OCIDs of the sensitive types compatible with the library masking format. It helps track the sensitive types for which the library masking format is being created.
     * 
     */
    @Import(name="sensitiveTypeIds")
    private @Nullable Output<List<String>> sensitiveTypeIds;

    /**
     * @return (Updatable) An array of OCIDs of the sensitive types compatible with the library masking format. It helps track the sensitive types for which the library masking format is being created.
     * 
     */
    public Optional<Output<List<String>>> sensitiveTypeIds() {
        return Optional.ofNullable(this.sensitiveTypeIds);
    }

    private LibraryMasingFormatArgs() {}

    private LibraryMasingFormatArgs(LibraryMasingFormatArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.formatEntries = $.formatEntries;
        this.freeformTags = $.freeformTags;
        this.sensitiveTypeIds = $.sensitiveTypeIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LibraryMasingFormatArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LibraryMasingFormatArgs $;

        public Builder() {
            $ = new LibraryMasingFormatArgs();
        }

        public Builder(LibraryMasingFormatArgs defaults) {
            $ = new LibraryMasingFormatArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment where the library masking format should be created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the compartment where the library masking format should be created.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) The description of the format entry.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) The description of the format entry.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) The display name of the library masking format. The name does not have to be unique, and it&#39;s changeable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the library masking format. The name does not have to be unique, and it&#39;s changeable.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param formatEntries (Updatable) An array of format entries. The combined output of all the format entries is used for masking.
         * 
         * @return builder
         * 
         */
        public Builder formatEntries(Output<List<LibraryMasingFormatFormatEntryArgs>> formatEntries) {
            $.formatEntries = formatEntries;
            return this;
        }

        /**
         * @param formatEntries (Updatable) An array of format entries. The combined output of all the format entries is used for masking.
         * 
         * @return builder
         * 
         */
        public Builder formatEntries(List<LibraryMasingFormatFormatEntryArgs> formatEntries) {
            return formatEntries(Output.of(formatEntries));
        }

        /**
         * @param formatEntries (Updatable) An array of format entries. The combined output of all the format entries is used for masking.
         * 
         * @return builder
         * 
         */
        public Builder formatEntries(LibraryMasingFormatFormatEntryArgs... formatEntries) {
            return formatEntries(List.of(formatEntries));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param sensitiveTypeIds (Updatable) An array of OCIDs of the sensitive types compatible with the library masking format. It helps track the sensitive types for which the library masking format is being created.
         * 
         * @return builder
         * 
         */
        public Builder sensitiveTypeIds(@Nullable Output<List<String>> sensitiveTypeIds) {
            $.sensitiveTypeIds = sensitiveTypeIds;
            return this;
        }

        /**
         * @param sensitiveTypeIds (Updatable) An array of OCIDs of the sensitive types compatible with the library masking format. It helps track the sensitive types for which the library masking format is being created.
         * 
         * @return builder
         * 
         */
        public Builder sensitiveTypeIds(List<String> sensitiveTypeIds) {
            return sensitiveTypeIds(Output.of(sensitiveTypeIds));
        }

        /**
         * @param sensitiveTypeIds (Updatable) An array of OCIDs of the sensitive types compatible with the library masking format. It helps track the sensitive types for which the library masking format is being created.
         * 
         * @return builder
         * 
         */
        public Builder sensitiveTypeIds(String... sensitiveTypeIds) {
            return sensitiveTypeIds(List.of(sensitiveTypeIds));
        }

        public LibraryMasingFormatArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.formatEntries = Objects.requireNonNull($.formatEntries, "expected parameter 'formatEntries' to be non-null");
            return $;
        }
    }

}
