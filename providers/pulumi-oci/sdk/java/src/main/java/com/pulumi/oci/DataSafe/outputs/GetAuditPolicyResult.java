// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetAuditPolicyAuditCondition;
import com.pulumi.oci.DataSafe.outputs.GetAuditPolicyAuditSpecification;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAuditPolicyResult {
    /**
     * @return Lists the audit policy provisioning conditions for the target database.
     * 
     */
    private final List<GetAuditPolicyAuditCondition> auditConditions;
    private final String auditPolicyId;
    /**
     * @return Represents all available audit policy specifications relevant for the target database. For more details on available audit polcies, refer to [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827).
     * 
     */
    private final List<GetAuditPolicyAuditSpecification> auditSpecifications;
    /**
     * @return The OCID of the compartment containing the audit policy.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Description of the audit policy.
     * 
     */
    private final String description;
    /**
     * @return The display name of the audit policy.
     * 
     */
    private final String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The OCID of the audit policy.
     * 
     */
    private final String id;
    /**
     * @return Option provided to users at the target to indicate whether the Data Safe service account has to be excluded while provisioning the audit policies.
     * 
     */
    private final Boolean isDataSafeServiceAccountExcluded;
    /**
     * @return Details about the current state of the audit policy in Data Safe.
     * 
     */
    private final String lifecycleDetails;
    private final Integer provisionTrigger;
    private final Integer retrieveFromTargetTrigger;
    /**
     * @return The current state of the audit policy.
     * 
     */
    private final String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The OCID of the target for which the audit policy is created.
     * 
     */
    private final String targetId;
    /**
     * @return The time the the audit policy was created, in the format defined by RFC3339.
     * 
     */
    private final String timeCreated;
    /**
     * @return Indicates the last provisioning time of audit policies on the target, in the format defined by RFC3339.
     * 
     */
    private final String timeLastProvisioned;
    /**
     * @return The time when the audit policies was last retrieved from this target, in the format defined by RFC3339.
     * 
     */
    private final String timeLastRetrieved;
    /**
     * @return The last date and time the audit policy was updated, in the format defined by RFC3339.
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetAuditPolicyResult(
        @CustomType.Parameter("auditConditions") List<GetAuditPolicyAuditCondition> auditConditions,
        @CustomType.Parameter("auditPolicyId") String auditPolicyId,
        @CustomType.Parameter("auditSpecifications") List<GetAuditPolicyAuditSpecification> auditSpecifications,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isDataSafeServiceAccountExcluded") Boolean isDataSafeServiceAccountExcluded,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("provisionTrigger") Integer provisionTrigger,
        @CustomType.Parameter("retrieveFromTargetTrigger") Integer retrieveFromTargetTrigger,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("targetId") String targetId,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeLastProvisioned") String timeLastProvisioned,
        @CustomType.Parameter("timeLastRetrieved") String timeLastRetrieved,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.auditConditions = auditConditions;
        this.auditPolicyId = auditPolicyId;
        this.auditSpecifications = auditSpecifications;
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.description = description;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.isDataSafeServiceAccountExcluded = isDataSafeServiceAccountExcluded;
        this.lifecycleDetails = lifecycleDetails;
        this.provisionTrigger = provisionTrigger;
        this.retrieveFromTargetTrigger = retrieveFromTargetTrigger;
        this.state = state;
        this.systemTags = systemTags;
        this.targetId = targetId;
        this.timeCreated = timeCreated;
        this.timeLastProvisioned = timeLastProvisioned;
        this.timeLastRetrieved = timeLastRetrieved;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return Lists the audit policy provisioning conditions for the target database.
     * 
     */
    public List<GetAuditPolicyAuditCondition> auditConditions() {
        return this.auditConditions;
    }
    public String auditPolicyId() {
        return this.auditPolicyId;
    }
    /**
     * @return Represents all available audit policy specifications relevant for the target database. For more details on available audit polcies, refer to [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827).
     * 
     */
    public List<GetAuditPolicyAuditSpecification> auditSpecifications() {
        return this.auditSpecifications;
    }
    /**
     * @return The OCID of the compartment containing the audit policy.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of the audit policy.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of the audit policy.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the audit policy.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Option provided to users at the target to indicate whether the Data Safe service account has to be excluded while provisioning the audit policies.
     * 
     */
    public Boolean isDataSafeServiceAccountExcluded() {
        return this.isDataSafeServiceAccountExcluded;
    }
    /**
     * @return Details about the current state of the audit policy in Data Safe.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    public Integer provisionTrigger() {
        return this.provisionTrigger;
    }
    public Integer retrieveFromTargetTrigger() {
        return this.retrieveFromTargetTrigger;
    }
    /**
     * @return The current state of the audit policy.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The OCID of the target for which the audit policy is created.
     * 
     */
    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The time the the audit policy was created, in the format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Indicates the last provisioning time of audit policies on the target, in the format defined by RFC3339.
     * 
     */
    public String timeLastProvisioned() {
        return this.timeLastProvisioned;
    }
    /**
     * @return The time when the audit policies was last retrieved from this target, in the format defined by RFC3339.
     * 
     */
    public String timeLastRetrieved() {
        return this.timeLastRetrieved;
    }
    /**
     * @return The last date and time the audit policy was updated, in the format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditPolicyResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetAuditPolicyAuditCondition> auditConditions;
        private String auditPolicyId;
        private List<GetAuditPolicyAuditSpecification> auditSpecifications;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isDataSafeServiceAccountExcluded;
        private String lifecycleDetails;
        private Integer provisionTrigger;
        private Integer retrieveFromTargetTrigger;
        private String state;
        private Map<String,Object> systemTags;
        private String targetId;
        private String timeCreated;
        private String timeLastProvisioned;
        private String timeLastRetrieved;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAuditPolicyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditConditions = defaults.auditConditions;
    	      this.auditPolicyId = defaults.auditPolicyId;
    	      this.auditSpecifications = defaults.auditSpecifications;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isDataSafeServiceAccountExcluded = defaults.isDataSafeServiceAccountExcluded;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.provisionTrigger = defaults.provisionTrigger;
    	      this.retrieveFromTargetTrigger = defaults.retrieveFromTargetTrigger;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.targetId = defaults.targetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeLastProvisioned = defaults.timeLastProvisioned;
    	      this.timeLastRetrieved = defaults.timeLastRetrieved;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder auditConditions(List<GetAuditPolicyAuditCondition> auditConditions) {
            this.auditConditions = Objects.requireNonNull(auditConditions);
            return this;
        }
        public Builder auditConditions(GetAuditPolicyAuditCondition... auditConditions) {
            return auditConditions(List.of(auditConditions));
        }
        public Builder auditPolicyId(String auditPolicyId) {
            this.auditPolicyId = Objects.requireNonNull(auditPolicyId);
            return this;
        }
        public Builder auditSpecifications(List<GetAuditPolicyAuditSpecification> auditSpecifications) {
            this.auditSpecifications = Objects.requireNonNull(auditSpecifications);
            return this;
        }
        public Builder auditSpecifications(GetAuditPolicyAuditSpecification... auditSpecifications) {
            return auditSpecifications(List.of(auditSpecifications));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isDataSafeServiceAccountExcluded(Boolean isDataSafeServiceAccountExcluded) {
            this.isDataSafeServiceAccountExcluded = Objects.requireNonNull(isDataSafeServiceAccountExcluded);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder provisionTrigger(Integer provisionTrigger) {
            this.provisionTrigger = Objects.requireNonNull(provisionTrigger);
            return this;
        }
        public Builder retrieveFromTargetTrigger(Integer retrieveFromTargetTrigger) {
            this.retrieveFromTargetTrigger = Objects.requireNonNull(retrieveFromTargetTrigger);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder targetId(String targetId) {
            this.targetId = Objects.requireNonNull(targetId);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeLastProvisioned(String timeLastProvisioned) {
            this.timeLastProvisioned = Objects.requireNonNull(timeLastProvisioned);
            return this;
        }
        public Builder timeLastRetrieved(String timeLastRetrieved) {
            this.timeLastRetrieved = Objects.requireNonNull(timeLastRetrieved);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetAuditPolicyResult build() {
            return new GetAuditPolicyResult(auditConditions, auditPolicyId, auditSpecifications, compartmentId, definedTags, description, displayName, freeformTags, id, isDataSafeServiceAccountExcluded, lifecycleDetails, provisionTrigger, retrieveFromTargetTrigger, state, systemTags, targetId, timeCreated, timeLastProvisioned, timeLastRetrieved, timeUpdated);
        }
    }
}
