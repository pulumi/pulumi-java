// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Nosql.outputs.GetIndexKey;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetIndexResult {
    /**
     * @return Compartment Identifier.
     * 
     */
    private final String compartmentId;
    private final String id;
    private final String indexName;
    private final Boolean isIfNotExists;
    /**
     * @return A set of keys for a secondary index.
     * 
     */
    private final List<GetIndexKey> keys;
    /**
     * @return A message describing the current state in more detail.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return Index name.
     * 
     */
    private final String name;
    /**
     * @return The state of an index.
     * 
     */
    private final String state;
    /**
     * @return the OCID of the table to which this index belongs.
     * 
     */
    private final String tableId;
    /**
     * @return The name of the table to which this index belongs.
     * 
     */
    private final String tableName;
    private final String tableNameOrId;

    @CustomType.Constructor
    private GetIndexResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("indexName") String indexName,
        @CustomType.Parameter("isIfNotExists") Boolean isIfNotExists,
        @CustomType.Parameter("keys") List<GetIndexKey> keys,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("tableId") String tableId,
        @CustomType.Parameter("tableName") String tableName,
        @CustomType.Parameter("tableNameOrId") String tableNameOrId) {
        this.compartmentId = compartmentId;
        this.id = id;
        this.indexName = indexName;
        this.isIfNotExists = isIfNotExists;
        this.keys = keys;
        this.lifecycleDetails = lifecycleDetails;
        this.name = name;
        this.state = state;
        this.tableId = tableId;
        this.tableName = tableName;
        this.tableNameOrId = tableNameOrId;
    }

    /**
     * @return Compartment Identifier.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public String id() {
        return this.id;
    }
    public String indexName() {
        return this.indexName;
    }
    public Boolean isIfNotExists() {
        return this.isIfNotExists;
    }
    /**
     * @return A set of keys for a secondary index.
     * 
     */
    public List<GetIndexKey> keys() {
        return this.keys;
    }
    /**
     * @return A message describing the current state in more detail.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Index name.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The state of an index.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return the OCID of the table to which this index belongs.
     * 
     */
    public String tableId() {
        return this.tableId;
    }
    /**
     * @return The name of the table to which this index belongs.
     * 
     */
    public String tableName() {
        return this.tableName;
    }
    public String tableNameOrId() {
        return this.tableNameOrId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIndexResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private String id;
        private String indexName;
        private Boolean isIfNotExists;
        private List<GetIndexKey> keys;
        private String lifecycleDetails;
        private String name;
        private String state;
        private String tableId;
        private String tableName;
        private String tableNameOrId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetIndexResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.id = defaults.id;
    	      this.indexName = defaults.indexName;
    	      this.isIfNotExists = defaults.isIfNotExists;
    	      this.keys = defaults.keys;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.tableId = defaults.tableId;
    	      this.tableName = defaults.tableName;
    	      this.tableNameOrId = defaults.tableNameOrId;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder indexName(String indexName) {
            this.indexName = Objects.requireNonNull(indexName);
            return this;
        }
        public Builder isIfNotExists(Boolean isIfNotExists) {
            this.isIfNotExists = Objects.requireNonNull(isIfNotExists);
            return this;
        }
        public Builder keys(List<GetIndexKey> keys) {
            this.keys = Objects.requireNonNull(keys);
            return this;
        }
        public Builder keys(GetIndexKey... keys) {
            return keys(List.of(keys));
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder tableId(String tableId) {
            this.tableId = Objects.requireNonNull(tableId);
            return this;
        }
        public Builder tableName(String tableName) {
            this.tableName = Objects.requireNonNull(tableName);
            return this;
        }
        public Builder tableNameOrId(String tableNameOrId) {
            this.tableNameOrId = Objects.requireNonNull(tableNameOrId);
            return this;
        }        public GetIndexResult build() {
            return new GetIndexResult(compartmentId, id, indexName, isIfNotExists, keys, lifecycleDetails, name, state, tableId, tableName, tableNameOrId);
        }
    }
}
