// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.util.Objects;


public final class PeerOcpuAllocationParamArgs extends com.pulumi.resources.ResourceArgs {

    public static final PeerOcpuAllocationParamArgs Empty = new PeerOcpuAllocationParamArgs();

    /**
     * (Updatable) Number of OCPU allocation
     * 
     */
    @Import(name="ocpuAllocationNumber", required=true)
    private Output<Double> ocpuAllocationNumber;

    /**
     * @return (Updatable) Number of OCPU allocation
     * 
     */
    public Output<Double> ocpuAllocationNumber() {
        return this.ocpuAllocationNumber;
    }

    private PeerOcpuAllocationParamArgs() {}

    private PeerOcpuAllocationParamArgs(PeerOcpuAllocationParamArgs $) {
        this.ocpuAllocationNumber = $.ocpuAllocationNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PeerOcpuAllocationParamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PeerOcpuAllocationParamArgs $;

        public Builder() {
            $ = new PeerOcpuAllocationParamArgs();
        }

        public Builder(PeerOcpuAllocationParamArgs defaults) {
            $ = new PeerOcpuAllocationParamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ocpuAllocationNumber (Updatable) Number of OCPU allocation
         * 
         * @return builder
         * 
         */
        public Builder ocpuAllocationNumber(Output<Double> ocpuAllocationNumber) {
            $.ocpuAllocationNumber = ocpuAllocationNumber;
            return this;
        }

        /**
         * @param ocpuAllocationNumber (Updatable) Number of OCPU allocation
         * 
         * @return builder
         * 
         */
        public Builder ocpuAllocationNumber(Double ocpuAllocationNumber) {
            return ocpuAllocationNumber(Output.of(ocpuAllocationNumber));
        }

        public PeerOcpuAllocationParamArgs build() {
            $.ocpuAllocationNumber = Objects.requireNonNull($.ocpuAllocationNumber, "expected parameter 'ocpuAllocationNumber' to be non-null");
            return $;
        }
    }

}
