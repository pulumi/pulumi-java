// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ComputeInstanceAgent.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetInstanceAgentPluginArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInstanceAgentPluginArgs Empty = new GetInstanceAgentPluginArgs();

    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The OCID of the instance.
     * 
     */
    @Import(name="instanceagentId", required=true)
    private Output<String> instanceagentId;

    /**
     * @return The OCID of the instance.
     * 
     */
    public Output<String> instanceagentId() {
        return this.instanceagentId;
    }

    /**
     * The name of the plugin.
     * 
     */
    @Import(name="pluginName", required=true)
    private Output<String> pluginName;

    /**
     * @return The name of the plugin.
     * 
     */
    public Output<String> pluginName() {
        return this.pluginName;
    }

    private GetInstanceAgentPluginArgs() {}

    private GetInstanceAgentPluginArgs(GetInstanceAgentPluginArgs $) {
        this.compartmentId = $.compartmentId;
        this.instanceagentId = $.instanceagentId;
        this.pluginName = $.pluginName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInstanceAgentPluginArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInstanceAgentPluginArgs $;

        public Builder() {
            $ = new GetInstanceAgentPluginArgs();
        }

        public Builder(GetInstanceAgentPluginArgs defaults) {
            $ = new GetInstanceAgentPluginArgs(Objects.requireNonNull(defaults));
        }

        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param instanceagentId The OCID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceagentId(Output<String> instanceagentId) {
            $.instanceagentId = instanceagentId;
            return this;
        }

        /**
         * @param instanceagentId The OCID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceagentId(String instanceagentId) {
            return instanceagentId(Output.of(instanceagentId));
        }

        /**
         * @param pluginName The name of the plugin.
         * 
         * @return builder
         * 
         */
        public Builder pluginName(Output<String> pluginName) {
            $.pluginName = pluginName;
            return this;
        }

        /**
         * @param pluginName The name of the plugin.
         * 
         * @return builder
         * 
         */
        public Builder pluginName(String pluginName) {
            return pluginName(Output.of(pluginName));
        }

        public GetInstanceAgentPluginArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.instanceagentId = Objects.requireNonNull($.instanceagentId, "expected parameter 'instanceagentId' to be non-null");
            $.pluginName = Objects.requireNonNull($.pluginName, "expected parameter 'pluginName' to be non-null");
            return $;
        }
    }

}
