// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ManagementAgent.inputs.ManagementAgentPluginListArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagementAgentState extends com.pulumi.resources.ResourceArgs {

    public static final ManagementAgentState Empty = new ManagementAgentState();

    /**
     * The current availability status of managementAgent
     * 
     */
    @Import(name="availabilityStatus")
    private @Nullable Output<String> availabilityStatus;

    /**
     * @return The current availability status of managementAgent
     * 
     */
    public Optional<Output<String>> availabilityStatus() {
        return Optional.ofNullable(this.availabilityStatus);
    }

    /**
     * Compartment Identifier
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return Compartment Identifier
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Plugin Id list
     * 
     */
    @Import(name="deployPluginsIds")
    private @Nullable Output<List<String>> deployPluginsIds;

    /**
     * @return (Updatable) Plugin Id list
     * 
     */
    public Optional<Output<List<String>>> deployPluginsIds() {
        return Optional.ofNullable(this.deployPluginsIds);
    }

    /**
     * (Updatable) New displayName of Agent.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) New displayName of Agent.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Management Agent host machine name
     * 
     */
    @Import(name="host")
    private @Nullable Output<String> host;

    /**
     * @return Management Agent host machine name
     * 
     */
    public Optional<Output<String>> host() {
        return Optional.ofNullable(this.host);
    }

    /**
     * Host resource ocid
     * 
     */
    @Import(name="hostId")
    private @Nullable Output<String> hostId;

    /**
     * @return Host resource ocid
     * 
     */
    public Optional<Output<String>> hostId() {
        return Optional.ofNullable(this.hostId);
    }

    /**
     * agent install key identifier
     * 
     */
    @Import(name="installKeyId")
    private @Nullable Output<String> installKeyId;

    /**
     * @return agent install key identifier
     * 
     */
    public Optional<Output<String>> installKeyId() {
        return Optional.ofNullable(this.installKeyId);
    }

    /**
     * Path where Management Agent is installed
     * 
     */
    @Import(name="installPath")
    private @Nullable Output<String> installPath;

    /**
     * @return Path where Management Agent is installed
     * 
     */
    public Optional<Output<String>> installPath() {
        return Optional.ofNullable(this.installPath);
    }

    /**
     * The install type, either AGENT or GATEWAY
     * 
     */
    @Import(name="installType")
    private @Nullable Output<String> installType;

    /**
     * @return The install type, either AGENT or GATEWAY
     * 
     */
    public Optional<Output<String>> installType() {
        return Optional.ofNullable(this.installType);
    }

    /**
     * true if the agent can be upgraded automatically; false if it must be upgraded manually. This flag is derived from the tenancy level auto upgrade preference.
     * 
     */
    @Import(name="isAgentAutoUpgradable")
    private @Nullable Output<Boolean> isAgentAutoUpgradable;

    /**
     * @return true if the agent can be upgraded automatically; false if it must be upgraded manually. This flag is derived from the tenancy level auto upgrade preference.
     * 
     */
    public Optional<Output<Boolean>> isAgentAutoUpgradable() {
        return Optional.ofNullable(this.isAgentAutoUpgradable);
    }

    /**
     * true, if the agent image is manually downloaded and installed. false, if the agent is deployed as a plugin in Oracle Cloud Agent.
     * 
     */
    @Import(name="isCustomerDeployed")
    private @Nullable Output<Boolean> isCustomerDeployed;

    /**
     * @return true, if the agent image is manually downloaded and installed. false, if the agent is deployed as a plugin in Oracle Cloud Agent.
     * 
     */
    public Optional<Output<Boolean>> isCustomerDeployed() {
        return Optional.ofNullable(this.isCustomerDeployed);
    }

    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * Unique Management Agent identifier
     * 
     */
    @Import(name="managedAgentId")
    private @Nullable Output<String> managedAgentId;

    /**
     * @return Unique Management Agent identifier
     * 
     */
    public Optional<Output<String>> managedAgentId() {
        return Optional.ofNullable(this.managedAgentId);
    }

    /**
     * Platform Name
     * 
     */
    @Import(name="platformName")
    private @Nullable Output<String> platformName;

    /**
     * @return Platform Name
     * 
     */
    public Optional<Output<String>> platformName() {
        return Optional.ofNullable(this.platformName);
    }

    /**
     * Platform Type
     * 
     */
    @Import(name="platformType")
    private @Nullable Output<String> platformType;

    /**
     * @return Platform Type
     * 
     */
    public Optional<Output<String>> platformType() {
        return Optional.ofNullable(this.platformType);
    }

    /**
     * Platform Version
     * 
     */
    @Import(name="platformVersion")
    private @Nullable Output<String> platformVersion;

    /**
     * @return Platform Version
     * 
     */
    public Optional<Output<String>> platformVersion() {
        return Optional.ofNullable(this.platformVersion);
    }

    /**
     * list of managementAgentPlugins associated with the agent
     * 
     */
    @Import(name="pluginLists")
    private @Nullable Output<List<ManagementAgentPluginListArgs>> pluginLists;

    /**
     * @return list of managementAgentPlugins associated with the agent
     * 
     */
    public Optional<Output<List<ManagementAgentPluginListArgs>>> pluginLists() {
        return Optional.ofNullable(this.pluginLists);
    }

    /**
     * Version of the deployment artifact instantiated by this Management Agent. The format for Standalone resourceMode is YYMMDD.HHMM, and the format for other modes (whose artifacts are based upon Standalone but can advance independently) is YYMMDD.HHMM.VVVVVVVVVVVV. VVVVVVVVVVVV is always a numeric value between 000000000000 and 999999999999
     * 
     */
    @Import(name="resourceArtifactVersion")
    private @Nullable Output<String> resourceArtifactVersion;

    /**
     * @return Version of the deployment artifact instantiated by this Management Agent. The format for Standalone resourceMode is YYMMDD.HHMM, and the format for other modes (whose artifacts are based upon Standalone but can advance independently) is YYMMDD.HHMM.VVVVVVVVVVVV. VVVVVVVVVVVV is always a numeric value between 000000000000 and 999999999999
     * 
     */
    public Optional<Output<String>> resourceArtifactVersion() {
        return Optional.ofNullable(this.resourceArtifactVersion);
    }

    /**
     * The current state of managementAgent
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of managementAgent
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The time the Management Agent was created. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the Management Agent was created. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the Management Agent has last recorded its health status in telemetry. This value will be null if the agent has not recorded its health status in last 7 days. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeLastHeartbeat")
    private @Nullable Output<String> timeLastHeartbeat;

    /**
     * @return The time the Management Agent has last recorded its health status in telemetry. This value will be null if the agent has not recorded its health status in last 7 days. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeLastHeartbeat() {
        return Optional.ofNullable(this.timeLastHeartbeat);
    }

    /**
     * The time the Management Agent was last updated. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the Management Agent was last updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * Management Agent Version
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Management Agent Version
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ManagementAgentState() {}

    private ManagementAgentState(ManagementAgentState $) {
        this.availabilityStatus = $.availabilityStatus;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.deployPluginsIds = $.deployPluginsIds;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.host = $.host;
        this.hostId = $.hostId;
        this.installKeyId = $.installKeyId;
        this.installPath = $.installPath;
        this.installType = $.installType;
        this.isAgentAutoUpgradable = $.isAgentAutoUpgradable;
        this.isCustomerDeployed = $.isCustomerDeployed;
        this.lifecycleDetails = $.lifecycleDetails;
        this.managedAgentId = $.managedAgentId;
        this.platformName = $.platformName;
        this.platformType = $.platformType;
        this.platformVersion = $.platformVersion;
        this.pluginLists = $.pluginLists;
        this.resourceArtifactVersion = $.resourceArtifactVersion;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeLastHeartbeat = $.timeLastHeartbeat;
        this.timeUpdated = $.timeUpdated;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagementAgentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagementAgentState $;

        public Builder() {
            $ = new ManagementAgentState();
        }

        public Builder(ManagementAgentState defaults) {
            $ = new ManagementAgentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityStatus The current availability status of managementAgent
         * 
         * @return builder
         * 
         */
        public Builder availabilityStatus(@Nullable Output<String> availabilityStatus) {
            $.availabilityStatus = availabilityStatus;
            return this;
        }

        /**
         * @param availabilityStatus The current availability status of managementAgent
         * 
         * @return builder
         * 
         */
        public Builder availabilityStatus(String availabilityStatus) {
            return availabilityStatus(Output.of(availabilityStatus));
        }

        /**
         * @param compartmentId Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param deployPluginsIds (Updatable) Plugin Id list
         * 
         * @return builder
         * 
         */
        public Builder deployPluginsIds(@Nullable Output<List<String>> deployPluginsIds) {
            $.deployPluginsIds = deployPluginsIds;
            return this;
        }

        /**
         * @param deployPluginsIds (Updatable) Plugin Id list
         * 
         * @return builder
         * 
         */
        public Builder deployPluginsIds(List<String> deployPluginsIds) {
            return deployPluginsIds(Output.of(deployPluginsIds));
        }

        /**
         * @param deployPluginsIds (Updatable) Plugin Id list
         * 
         * @return builder
         * 
         */
        public Builder deployPluginsIds(String... deployPluginsIds) {
            return deployPluginsIds(List.of(deployPluginsIds));
        }

        /**
         * @param displayName (Updatable) New displayName of Agent.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) New displayName of Agent.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param host Management Agent host machine name
         * 
         * @return builder
         * 
         */
        public Builder host(@Nullable Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host Management Agent host machine name
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param hostId Host resource ocid
         * 
         * @return builder
         * 
         */
        public Builder hostId(@Nullable Output<String> hostId) {
            $.hostId = hostId;
            return this;
        }

        /**
         * @param hostId Host resource ocid
         * 
         * @return builder
         * 
         */
        public Builder hostId(String hostId) {
            return hostId(Output.of(hostId));
        }

        /**
         * @param installKeyId agent install key identifier
         * 
         * @return builder
         * 
         */
        public Builder installKeyId(@Nullable Output<String> installKeyId) {
            $.installKeyId = installKeyId;
            return this;
        }

        /**
         * @param installKeyId agent install key identifier
         * 
         * @return builder
         * 
         */
        public Builder installKeyId(String installKeyId) {
            return installKeyId(Output.of(installKeyId));
        }

        /**
         * @param installPath Path where Management Agent is installed
         * 
         * @return builder
         * 
         */
        public Builder installPath(@Nullable Output<String> installPath) {
            $.installPath = installPath;
            return this;
        }

        /**
         * @param installPath Path where Management Agent is installed
         * 
         * @return builder
         * 
         */
        public Builder installPath(String installPath) {
            return installPath(Output.of(installPath));
        }

        /**
         * @param installType The install type, either AGENT or GATEWAY
         * 
         * @return builder
         * 
         */
        public Builder installType(@Nullable Output<String> installType) {
            $.installType = installType;
            return this;
        }

        /**
         * @param installType The install type, either AGENT or GATEWAY
         * 
         * @return builder
         * 
         */
        public Builder installType(String installType) {
            return installType(Output.of(installType));
        }

        /**
         * @param isAgentAutoUpgradable true if the agent can be upgraded automatically; false if it must be upgraded manually. This flag is derived from the tenancy level auto upgrade preference.
         * 
         * @return builder
         * 
         */
        public Builder isAgentAutoUpgradable(@Nullable Output<Boolean> isAgentAutoUpgradable) {
            $.isAgentAutoUpgradable = isAgentAutoUpgradable;
            return this;
        }

        /**
         * @param isAgentAutoUpgradable true if the agent can be upgraded automatically; false if it must be upgraded manually. This flag is derived from the tenancy level auto upgrade preference.
         * 
         * @return builder
         * 
         */
        public Builder isAgentAutoUpgradable(Boolean isAgentAutoUpgradable) {
            return isAgentAutoUpgradable(Output.of(isAgentAutoUpgradable));
        }

        /**
         * @param isCustomerDeployed true, if the agent image is manually downloaded and installed. false, if the agent is deployed as a plugin in Oracle Cloud Agent.
         * 
         * @return builder
         * 
         */
        public Builder isCustomerDeployed(@Nullable Output<Boolean> isCustomerDeployed) {
            $.isCustomerDeployed = isCustomerDeployed;
            return this;
        }

        /**
         * @param isCustomerDeployed true, if the agent image is manually downloaded and installed. false, if the agent is deployed as a plugin in Oracle Cloud Agent.
         * 
         * @return builder
         * 
         */
        public Builder isCustomerDeployed(Boolean isCustomerDeployed) {
            return isCustomerDeployed(Output.of(isCustomerDeployed));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param managedAgentId Unique Management Agent identifier
         * 
         * @return builder
         * 
         */
        public Builder managedAgentId(@Nullable Output<String> managedAgentId) {
            $.managedAgentId = managedAgentId;
            return this;
        }

        /**
         * @param managedAgentId Unique Management Agent identifier
         * 
         * @return builder
         * 
         */
        public Builder managedAgentId(String managedAgentId) {
            return managedAgentId(Output.of(managedAgentId));
        }

        /**
         * @param platformName Platform Name
         * 
         * @return builder
         * 
         */
        public Builder platformName(@Nullable Output<String> platformName) {
            $.platformName = platformName;
            return this;
        }

        /**
         * @param platformName Platform Name
         * 
         * @return builder
         * 
         */
        public Builder platformName(String platformName) {
            return platformName(Output.of(platformName));
        }

        /**
         * @param platformType Platform Type
         * 
         * @return builder
         * 
         */
        public Builder platformType(@Nullable Output<String> platformType) {
            $.platformType = platformType;
            return this;
        }

        /**
         * @param platformType Platform Type
         * 
         * @return builder
         * 
         */
        public Builder platformType(String platformType) {
            return platformType(Output.of(platformType));
        }

        /**
         * @param platformVersion Platform Version
         * 
         * @return builder
         * 
         */
        public Builder platformVersion(@Nullable Output<String> platformVersion) {
            $.platformVersion = platformVersion;
            return this;
        }

        /**
         * @param platformVersion Platform Version
         * 
         * @return builder
         * 
         */
        public Builder platformVersion(String platformVersion) {
            return platformVersion(Output.of(platformVersion));
        }

        /**
         * @param pluginLists list of managementAgentPlugins associated with the agent
         * 
         * @return builder
         * 
         */
        public Builder pluginLists(@Nullable Output<List<ManagementAgentPluginListArgs>> pluginLists) {
            $.pluginLists = pluginLists;
            return this;
        }

        /**
         * @param pluginLists list of managementAgentPlugins associated with the agent
         * 
         * @return builder
         * 
         */
        public Builder pluginLists(List<ManagementAgentPluginListArgs> pluginLists) {
            return pluginLists(Output.of(pluginLists));
        }

        /**
         * @param pluginLists list of managementAgentPlugins associated with the agent
         * 
         * @return builder
         * 
         */
        public Builder pluginLists(ManagementAgentPluginListArgs... pluginLists) {
            return pluginLists(List.of(pluginLists));
        }

        /**
         * @param resourceArtifactVersion Version of the deployment artifact instantiated by this Management Agent. The format for Standalone resourceMode is YYMMDD.HHMM, and the format for other modes (whose artifacts are based upon Standalone but can advance independently) is YYMMDD.HHMM.VVVVVVVVVVVV. VVVVVVVVVVVV is always a numeric value between 000000000000 and 999999999999
         * 
         * @return builder
         * 
         */
        public Builder resourceArtifactVersion(@Nullable Output<String> resourceArtifactVersion) {
            $.resourceArtifactVersion = resourceArtifactVersion;
            return this;
        }

        /**
         * @param resourceArtifactVersion Version of the deployment artifact instantiated by this Management Agent. The format for Standalone resourceMode is YYMMDD.HHMM, and the format for other modes (whose artifacts are based upon Standalone but can advance independently) is YYMMDD.HHMM.VVVVVVVVVVVV. VVVVVVVVVVVV is always a numeric value between 000000000000 and 999999999999
         * 
         * @return builder
         * 
         */
        public Builder resourceArtifactVersion(String resourceArtifactVersion) {
            return resourceArtifactVersion(Output.of(resourceArtifactVersion));
        }

        /**
         * @param state The current state of managementAgent
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of managementAgent
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The time the Management Agent was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the Management Agent was created. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeLastHeartbeat The time the Management Agent has last recorded its health status in telemetry. This value will be null if the agent has not recorded its health status in last 7 days. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeLastHeartbeat(@Nullable Output<String> timeLastHeartbeat) {
            $.timeLastHeartbeat = timeLastHeartbeat;
            return this;
        }

        /**
         * @param timeLastHeartbeat The time the Management Agent has last recorded its health status in telemetry. This value will be null if the agent has not recorded its health status in last 7 days. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeLastHeartbeat(String timeLastHeartbeat) {
            return timeLastHeartbeat(Output.of(timeLastHeartbeat));
        }

        /**
         * @param timeUpdated The time the Management Agent was last updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the Management Agent was last updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param version Management Agent Version
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Management Agent Version
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ManagementAgentState build() {
            return $;
        }
    }

}
