// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Dns.outputs.GetZonesZoneExternalMaster;
import com.pulumi.oci.Dns.outputs.GetZonesZoneNameserver;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetZonesZone {
    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     * 
     */
    private final List<GetZonesZoneExternalMaster> externalMasters;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The OCID of the zone.
     * 
     */
    private final String id;
    /**
     * @return A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    private final Boolean isProtected;
    /**
     * @return A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
     * 
     */
    private final String name;
    /**
     * @return The authoritative nameservers for the zone.
     * 
     */
    private final List<GetZonesZoneNameserver> nameservers;
    /**
     * @return Specifies to operate only on resources that have a matching DNS scope. This value will be null
     * for zones in the global DNS and `PRIVATE` when listing private zones.
     * 
     */
    private final String scope;
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    private final String self;
    /**
     * @return The current serial of the zone. As seen in the zone&#39;s SOA record.
     * 
     */
    private final Integer serial;
    /**
     * @return The state of a resource.
     * 
     */
    private final String state;
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    private final String timeCreated;
    /**
     * @return Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone&#39;s SOA record is derived.
     * 
     */
    private final String version;
    /**
     * @return The OCID of the view the resource is associated with.
     * 
     */
    private final String viewId;
    /**
     * @return Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
     * 
     */
    private final String zoneType;

    @CustomType.Constructor
    private GetZonesZone(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("externalMasters") List<GetZonesZoneExternalMaster> externalMasters,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isProtected") Boolean isProtected,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("nameservers") List<GetZonesZoneNameserver> nameservers,
        @CustomType.Parameter("scope") String scope,
        @CustomType.Parameter("self") String self,
        @CustomType.Parameter("serial") Integer serial,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("version") String version,
        @CustomType.Parameter("viewId") String viewId,
        @CustomType.Parameter("zoneType") String zoneType) {
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.externalMasters = externalMasters;
        this.freeformTags = freeformTags;
        this.id = id;
        this.isProtected = isProtected;
        this.name = name;
        this.nameservers = nameservers;
        this.scope = scope;
        this.self = self;
        this.serial = serial;
        this.state = state;
        this.timeCreated = timeCreated;
        this.version = version;
        this.viewId = viewId;
        this.zoneType = zoneType;
    }

    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return External master servers for the zone. `externalMasters` becomes a required parameter when the `zoneType` value is `SECONDARY`.
     * 
     */
    public List<GetZonesZoneExternalMaster> externalMasters() {
        return this.externalMasters;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the zone.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    public Boolean isProtected() {
        return this.isProtected;
    }
    /**
     * @return A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The authoritative nameservers for the zone.
     * 
     */
    public List<GetZonesZoneNameserver> nameservers() {
        return this.nameservers;
    }
    /**
     * @return Specifies to operate only on resources that have a matching DNS scope. This value will be null
     * for zones in the global DNS and `PRIVATE` when listing private zones.
     * 
     */
    public String scope() {
        return this.scope;
    }
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public String self() {
        return this.self;
    }
    /**
     * @return The current serial of the zone. As seen in the zone&#39;s SOA record.
     * 
     */
    public Integer serial() {
        return this.serial;
    }
    /**
     * @return The state of a resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Version is the never-repeating, totally-orderable, version of the zone, from which the serial field of the zone&#39;s SOA record is derived.
     * 
     */
    public String version() {
        return this.version;
    }
    /**
     * @return The OCID of the view the resource is associated with.
     * 
     */
    public String viewId() {
        return this.viewId;
    }
    /**
     * @return Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
     * 
     */
    public String zoneType() {
        return this.zoneType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZonesZone defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private List<GetZonesZoneExternalMaster> externalMasters;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isProtected;
        private String name;
        private List<GetZonesZoneNameserver> nameservers;
        private String scope;
        private String self;
        private Integer serial;
        private String state;
        private String timeCreated;
        private String version;
        private String viewId;
        private String zoneType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetZonesZone defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.externalMasters = defaults.externalMasters;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isProtected = defaults.isProtected;
    	      this.name = defaults.name;
    	      this.nameservers = defaults.nameservers;
    	      this.scope = defaults.scope;
    	      this.self = defaults.self;
    	      this.serial = defaults.serial;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.version = defaults.version;
    	      this.viewId = defaults.viewId;
    	      this.zoneType = defaults.zoneType;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder externalMasters(List<GetZonesZoneExternalMaster> externalMasters) {
            this.externalMasters = Objects.requireNonNull(externalMasters);
            return this;
        }
        public Builder externalMasters(GetZonesZoneExternalMaster... externalMasters) {
            return externalMasters(List.of(externalMasters));
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isProtected(Boolean isProtected) {
            this.isProtected = Objects.requireNonNull(isProtected);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder nameservers(List<GetZonesZoneNameserver> nameservers) {
            this.nameservers = Objects.requireNonNull(nameservers);
            return this;
        }
        public Builder nameservers(GetZonesZoneNameserver... nameservers) {
            return nameservers(List.of(nameservers));
        }
        public Builder scope(String scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }
        public Builder self(String self) {
            this.self = Objects.requireNonNull(self);
            return this;
        }
        public Builder serial(Integer serial) {
            this.serial = Objects.requireNonNull(serial);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public Builder viewId(String viewId) {
            this.viewId = Objects.requireNonNull(viewId);
            return this;
        }
        public Builder zoneType(String zoneType) {
            this.zoneType = Objects.requireNonNull(zoneType);
            return this;
        }        public GetZonesZone build() {
            return new GetZonesZone(compartmentId, definedTags, externalMasters, freeformTags, id, isProtected, name, nameservers, scope, self, serial, state, timeCreated, version, viewId, zoneType);
        }
    }
}
