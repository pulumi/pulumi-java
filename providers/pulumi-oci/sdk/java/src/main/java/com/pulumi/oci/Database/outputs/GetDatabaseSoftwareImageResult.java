// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDatabaseSoftwareImageResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private final String compartmentId;
    private final String databaseSoftwareImageId;
    /**
     * @return List of one-off patches for Database Homes.
     * 
     */
    private final List<String> databaseSoftwareImageIncludedPatches;
    /**
     * @return List of one-off patches for Database Homes.
     * 
     */
    private final List<String> databaseSoftwareImageOneOffPatches;
    /**
     * @return The database version with which the database software image is to be built.
     * 
     */
    private final String databaseVersion;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The user-friendly name for the database software image. The name does not have to be unique.
     * 
     */
    private final String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database software image.
     * 
     */
    private final String id;
    /**
     * @return To what shape the image is meant for.
     * 
     */
    private final String imageShapeFamily;
    /**
     * @return The type of software image. Can be grid or database.
     * 
     */
    private final String imageType;
    /**
     * @return The patches included in the image and the version of the image
     * 
     */
    private final String includedPatchesSummary;
    /**
     * @return True if this Database software image is supported for Upgrade.
     * 
     */
    private final Boolean isUpgradeSupported;
    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return output from lsinventory which will get passed as a string
     * 
     */
    private final String lsInventory;
    /**
     * @return The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     * 
     */
    private final String patchSet;
    private final String sourceDbHomeId;
    /**
     * @return The current state of the database software image.
     * 
     */
    private final String state;
    /**
     * @return The date and time the database software image was created.
     * 
     */
    private final String timeCreated;

    @CustomType.Constructor
    private GetDatabaseSoftwareImageResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("databaseSoftwareImageId") String databaseSoftwareImageId,
        @CustomType.Parameter("databaseSoftwareImageIncludedPatches") List<String> databaseSoftwareImageIncludedPatches,
        @CustomType.Parameter("databaseSoftwareImageOneOffPatches") List<String> databaseSoftwareImageOneOffPatches,
        @CustomType.Parameter("databaseVersion") String databaseVersion,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("imageShapeFamily") String imageShapeFamily,
        @CustomType.Parameter("imageType") String imageType,
        @CustomType.Parameter("includedPatchesSummary") String includedPatchesSummary,
        @CustomType.Parameter("isUpgradeSupported") Boolean isUpgradeSupported,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("lsInventory") String lsInventory,
        @CustomType.Parameter("patchSet") String patchSet,
        @CustomType.Parameter("sourceDbHomeId") String sourceDbHomeId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated) {
        this.compartmentId = compartmentId;
        this.databaseSoftwareImageId = databaseSoftwareImageId;
        this.databaseSoftwareImageIncludedPatches = databaseSoftwareImageIncludedPatches;
        this.databaseSoftwareImageOneOffPatches = databaseSoftwareImageOneOffPatches;
        this.databaseVersion = databaseVersion;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.imageShapeFamily = imageShapeFamily;
        this.imageType = imageType;
        this.includedPatchesSummary = includedPatchesSummary;
        this.isUpgradeSupported = isUpgradeSupported;
        this.lifecycleDetails = lifecycleDetails;
        this.lsInventory = lsInventory;
        this.patchSet = patchSet;
        this.sourceDbHomeId = sourceDbHomeId;
        this.state = state;
        this.timeCreated = timeCreated;
    }

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public String databaseSoftwareImageId() {
        return this.databaseSoftwareImageId;
    }
    /**
     * @return List of one-off patches for Database Homes.
     * 
     */
    public List<String> databaseSoftwareImageIncludedPatches() {
        return this.databaseSoftwareImageIncludedPatches;
    }
    /**
     * @return List of one-off patches for Database Homes.
     * 
     */
    public List<String> databaseSoftwareImageOneOffPatches() {
        return this.databaseSoftwareImageOneOffPatches;
    }
    /**
     * @return The database version with which the database software image is to be built.
     * 
     */
    public String databaseVersion() {
        return this.databaseVersion;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The user-friendly name for the database software image. The name does not have to be unique.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database software image.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return To what shape the image is meant for.
     * 
     */
    public String imageShapeFamily() {
        return this.imageShapeFamily;
    }
    /**
     * @return The type of software image. Can be grid or database.
     * 
     */
    public String imageType() {
        return this.imageType;
    }
    /**
     * @return The patches included in the image and the version of the image
     * 
     */
    public String includedPatchesSummary() {
        return this.includedPatchesSummary;
    }
    /**
     * @return True if this Database software image is supported for Upgrade.
     * 
     */
    public Boolean isUpgradeSupported() {
        return this.isUpgradeSupported;
    }
    /**
     * @return Detailed message for the lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return output from lsinventory which will get passed as a string
     * 
     */
    public String lsInventory() {
        return this.lsInventory;
    }
    /**
     * @return The PSU or PBP or Release Updates. To get a list of supported versions, use the [ListDbVersions](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/DbVersionSummary/ListDbVersions) operation.
     * 
     */
    public String patchSet() {
        return this.patchSet;
    }
    public String sourceDbHomeId() {
        return this.sourceDbHomeId;
    }
    /**
     * @return The current state of the database software image.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the database software image was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseSoftwareImageResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private String databaseSoftwareImageId;
        private List<String> databaseSoftwareImageIncludedPatches;
        private List<String> databaseSoftwareImageOneOffPatches;
        private String databaseVersion;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String imageShapeFamily;
        private String imageType;
        private String includedPatchesSummary;
        private Boolean isUpgradeSupported;
        private String lifecycleDetails;
        private String lsInventory;
        private String patchSet;
        private String sourceDbHomeId;
        private String state;
        private String timeCreated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDatabaseSoftwareImageResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.databaseSoftwareImageId = defaults.databaseSoftwareImageId;
    	      this.databaseSoftwareImageIncludedPatches = defaults.databaseSoftwareImageIncludedPatches;
    	      this.databaseSoftwareImageOneOffPatches = defaults.databaseSoftwareImageOneOffPatches;
    	      this.databaseVersion = defaults.databaseVersion;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.imageShapeFamily = defaults.imageShapeFamily;
    	      this.imageType = defaults.imageType;
    	      this.includedPatchesSummary = defaults.includedPatchesSummary;
    	      this.isUpgradeSupported = defaults.isUpgradeSupported;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.lsInventory = defaults.lsInventory;
    	      this.patchSet = defaults.patchSet;
    	      this.sourceDbHomeId = defaults.sourceDbHomeId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder databaseSoftwareImageId(String databaseSoftwareImageId) {
            this.databaseSoftwareImageId = Objects.requireNonNull(databaseSoftwareImageId);
            return this;
        }
        public Builder databaseSoftwareImageIncludedPatches(List<String> databaseSoftwareImageIncludedPatches) {
            this.databaseSoftwareImageIncludedPatches = Objects.requireNonNull(databaseSoftwareImageIncludedPatches);
            return this;
        }
        public Builder databaseSoftwareImageIncludedPatches(String... databaseSoftwareImageIncludedPatches) {
            return databaseSoftwareImageIncludedPatches(List.of(databaseSoftwareImageIncludedPatches));
        }
        public Builder databaseSoftwareImageOneOffPatches(List<String> databaseSoftwareImageOneOffPatches) {
            this.databaseSoftwareImageOneOffPatches = Objects.requireNonNull(databaseSoftwareImageOneOffPatches);
            return this;
        }
        public Builder databaseSoftwareImageOneOffPatches(String... databaseSoftwareImageOneOffPatches) {
            return databaseSoftwareImageOneOffPatches(List.of(databaseSoftwareImageOneOffPatches));
        }
        public Builder databaseVersion(String databaseVersion) {
            this.databaseVersion = Objects.requireNonNull(databaseVersion);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder imageShapeFamily(String imageShapeFamily) {
            this.imageShapeFamily = Objects.requireNonNull(imageShapeFamily);
            return this;
        }
        public Builder imageType(String imageType) {
            this.imageType = Objects.requireNonNull(imageType);
            return this;
        }
        public Builder includedPatchesSummary(String includedPatchesSummary) {
            this.includedPatchesSummary = Objects.requireNonNull(includedPatchesSummary);
            return this;
        }
        public Builder isUpgradeSupported(Boolean isUpgradeSupported) {
            this.isUpgradeSupported = Objects.requireNonNull(isUpgradeSupported);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder lsInventory(String lsInventory) {
            this.lsInventory = Objects.requireNonNull(lsInventory);
            return this;
        }
        public Builder patchSet(String patchSet) {
            this.patchSet = Objects.requireNonNull(patchSet);
            return this;
        }
        public Builder sourceDbHomeId(String sourceDbHomeId) {
            this.sourceDbHomeId = Objects.requireNonNull(sourceDbHomeId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }        public GetDatabaseSoftwareImageResult build() {
            return new GetDatabaseSoftwareImageResult(compartmentId, databaseSoftwareImageId, databaseSoftwareImageIncludedPatches, databaseSoftwareImageOneOffPatches, databaseVersion, definedTags, displayName, freeformTags, id, imageShapeFamily, imageType, includedPatchesSummary, isUpgradeSupported, lifecycleDetails, lsInventory, patchSet, sourceDbHomeId, state, timeCreated);
        }
    }
}
