// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DatabaseMigration.ConnectionArgs;
import com.pulumi.oci.DatabaseMigration.inputs.ConnectionState;
import com.pulumi.oci.DatabaseMigration.outputs.ConnectionAdminCredentials;
import com.pulumi.oci.DatabaseMigration.outputs.ConnectionConnectDescriptor;
import com.pulumi.oci.DatabaseMigration.outputs.ConnectionPrivateEndpoint;
import com.pulumi.oci.DatabaseMigration.outputs.ConnectionSshDetails;
import com.pulumi.oci.DatabaseMigration.outputs.ConnectionVaultDetails;
import com.pulumi.oci.Utilities;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Connection resource in Oracle Cloud Infrastructure Database Migration service.
 * 
 * Create a Database Connection resource that contains the details to connect to either a Source or Target Database
 * in the migration.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Connections can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:DatabaseMigration/connection:Connection test_connection &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DatabaseMigration/connection:Connection")
public class Connection extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) Database Administrator Credentials details.
     * 
     */
    @Export(name="adminCredentials", type=ConnectionAdminCredentials.class, parameters={})
    private Output<ConnectionAdminCredentials> adminCredentials;

    /**
     * @return (Updatable) Database Administrator Credentials details.
     * 
     */
    public Output<ConnectionAdminCredentials> adminCredentials() {
        return this.adminCredentials;
    }
    /**
     * (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
     * 
     */
    @Export(name="certificateTdn", type=String.class, parameters={})
    private Output<String> certificateTdn;

    /**
     * @return (Updatable) This name is the distinguished name used while creating the certificate on target database. Requires a TLS wallet to be specified. Not required for source container database connections.
     * 
     */
    public Output<String> certificateTdn() {
        return this.certificateTdn;
    }
    /**
     * (Updatable) OCID of the compartment where the secret containing the credentials will be created.
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return (Updatable) OCID of the compartment where the secret containing the credentials will be created.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
     * 
     */
    @Export(name="connectDescriptor", type=ConnectionConnectDescriptor.class, parameters={})
    private Output<ConnectionConnectDescriptor> connectDescriptor;

    /**
     * @return (Updatable) Connect Descriptor details. Required for Manual and UserManagerOci connection types. If a Private Endpoint was specified for the Connection, the host should contain a valid IP address.
     * 
     */
    public Output<ConnectionConnectDescriptor> connectDescriptor() {
        return this.connectDescriptor;
    }
    /**
     * OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
     * 
     */
    @Export(name="credentialsSecretId", type=String.class, parameters={})
    private Output<String> credentialsSecretId;

    /**
     * @return OCID of the Secret in the Oracle Cloud Infrastructure vault containing the Database Connection credentials.
     * 
     */
    public Output<String> credentialsSecretId() {
        return this.credentialsSecretId;
    }
    /**
     * (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
     * 
     */
    @Export(name="databaseId", type=String.class, parameters={})
    private Output<String> databaseId;

    /**
     * @return (Updatable) The OCID of the cloud database. Required if the database connection type is Autonomous.
     * 
     */
    public Output<String> databaseId() {
        return this.databaseId;
    }
    /**
     * Database connection type.
     * 
     */
    @Export(name="databaseType", type=String.class, parameters={})
    private Output<String> databaseType;

    /**
     * @return Database connection type.
     * 
     */
    public Output<String> databaseType() {
        return this.databaseType;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) Database Connection display name identifier.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return (Updatable) Database Connection display name identifier.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Export(name="lifecycleDetails", type=String.class, parameters={})
    private Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
     * 
     */
    @Export(name="privateEndpoint", type=ConnectionPrivateEndpoint.class, parameters={})
    private Output<ConnectionPrivateEndpoint> privateEndpoint;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Private Endpoint configuration details. Not required for source container database connections, it will default to the specified Source Database Connection Private Endpoint.
     * 
     */
    public Output<ConnectionPrivateEndpoint> privateEndpoint() {
        return this.privateEndpoint;
    }
    /**
     * (Updatable) Details of the SSH key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
     * 
     */
    @Export(name="sshDetails", type=ConnectionSshDetails.class, parameters={})
    private Output<ConnectionSshDetails> sshDetails;

    /**
     * @return (Updatable) Details of the SSH key that will be used. Required for source database Manual and UserManagerOci connection types. Not required for source container database connections.
     * 
     */
    public Output<ConnectionSshDetails> sshDetails() {
        return this.sshDetails;
    }
    /**
     * The current state of the Connection resource.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current state of the Connection resource.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Export(name="systemTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Output<Map<String,Object>> systemTags() {
        return this.systemTags;
    }
    /**
     * The time the Connection resource was created. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    /**
     * @return The time the Connection resource was created. An RFC3339 formatted datetime string.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time of the last Connection resource details update. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeUpdated", type=String.class, parameters={})
    private Output<String> timeUpdated;

    /**
     * @return The time of the last Connection resource details update. An RFC3339 formatted datetime string.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
     * 
     */
    @Export(name="tlsKeystore", type=String.class, parameters={})
    private Output<String> tlsKeystore;

    /**
     * @return (Updatable) keystore.jks file contents; base64 encoded String. Requires a TLS wallet to be specified. Not required for source container database connections.
     * 
     */
    public Output<String> tlsKeystore() {
        return this.tlsKeystore;
    }
    /**
     * (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
     * 
     */
    @Export(name="tlsWallet", type=String.class, parameters={})
    private Output<String> tlsWallet;

    /**
     * @return (Updatable) cwallet.sso containing containing the TCPS/SSL certificate; base64 encoded String. Not required for source container database connections.
     * 
     */
    public Output<String> tlsWallet() {
        return this.tlsWallet;
    }
    /**
     * (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
     * 
     */
    @Export(name="vaultDetails", type=ConnectionVaultDetails.class, parameters={})
    private Output<ConnectionVaultDetails> vaultDetails;

    /**
     * @return (Updatable) Oracle Cloud Infrastructure Vault details to store migration and connection credentials secrets
     * 
     */
    public Output<ConnectionVaultDetails> vaultDetails() {
        return this.vaultDetails;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Connection(String name) {
        this(name, ConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Connection(String name, ConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Connection(String name, ConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DatabaseMigration/connection:Connection", name, args == null ? ConnectionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Connection(String name, Output<String> id, @Nullable ConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DatabaseMigration/connection:Connection", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Connection get(String name, Output<String> id, @Nullable ConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Connection(name, id, state, options);
    }
}
