// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ExadataIormConfigDbPlan {
    /**
     * @return (Updatable) The database name. For the default `DbPlan`, the `dbName` is `default`.
     * 
     */
    private final String dbName;
    /**
     * @return The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
     * 
     */
    private final @Nullable String flashCacheLimit;
    /**
     * @return (Updatable) The relative priority of this database.
     * 
     */
    private final Integer share;

    @CustomType.Constructor
    private ExadataIormConfigDbPlan(
        @CustomType.Parameter("dbName") String dbName,
        @CustomType.Parameter("flashCacheLimit") @Nullable String flashCacheLimit,
        @CustomType.Parameter("share") Integer share) {
        this.dbName = dbName;
        this.flashCacheLimit = flashCacheLimit;
        this.share = share;
    }

    /**
     * @return (Updatable) The database name. For the default `DbPlan`, the `dbName` is `default`.
     * 
     */
    public String dbName() {
        return this.dbName;
    }
    /**
     * @return The flash cache limit for this database. This value is internally configured based on the share value assigned to the database.
     * 
     */
    public Optional<String> flashCacheLimit() {
        return Optional.ofNullable(this.flashCacheLimit);
    }
    /**
     * @return (Updatable) The relative priority of this database.
     * 
     */
    public Integer share() {
        return this.share;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ExadataIormConfigDbPlan defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dbName;
        private @Nullable String flashCacheLimit;
        private Integer share;

        public Builder() {
    	      // Empty
        }

        public Builder(ExadataIormConfigDbPlan defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbName = defaults.dbName;
    	      this.flashCacheLimit = defaults.flashCacheLimit;
    	      this.share = defaults.share;
        }

        public Builder dbName(String dbName) {
            this.dbName = Objects.requireNonNull(dbName);
            return this;
        }
        public Builder flashCacheLimit(@Nullable String flashCacheLimit) {
            this.flashCacheLimit = flashCacheLimit;
            return this;
        }
        public Builder share(Integer share) {
            this.share = Objects.requireNonNull(share);
            return this;
        }        public ExadataIormConfigDbPlan build() {
            return new ExadataIormConfigDbPlan(dbName, flashCacheLimit, share);
        }
    }
}
