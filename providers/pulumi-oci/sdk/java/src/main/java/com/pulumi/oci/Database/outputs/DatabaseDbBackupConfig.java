// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.DatabaseDbBackupConfigBackupDestinationDetail;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseDbBackupConfig {
    /**
     * @return (Updatable) If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     * 
     */
    private final @Nullable Boolean autoBackupEnabled;
    /**
     * @return (Updatable) Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
     * 
     */
    private final @Nullable String autoBackupWindow;
    /**
     * @return Backup destination details.
     * 
     */
    private final @Nullable List<DatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails;
    /**
     * @return (Updatable) Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     * 
     */
    private final @Nullable Integer recoveryWindowInDays;

    @CustomType.Constructor
    private DatabaseDbBackupConfig(
        @CustomType.Parameter("autoBackupEnabled") @Nullable Boolean autoBackupEnabled,
        @CustomType.Parameter("autoBackupWindow") @Nullable String autoBackupWindow,
        @CustomType.Parameter("backupDestinationDetails") @Nullable List<DatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails,
        @CustomType.Parameter("recoveryWindowInDays") @Nullable Integer recoveryWindowInDays) {
        this.autoBackupEnabled = autoBackupEnabled;
        this.autoBackupWindow = autoBackupWindow;
        this.backupDestinationDetails = backupDestinationDetails;
        this.recoveryWindowInDays = recoveryWindowInDays;
    }

    /**
     * @return (Updatable) If set to true, configures automatic backups. If you previously used RMAN or dbcli to configure backups and then you switch to using the Console or the API for backups, a new backup configuration is created and associated with your database. This means that you can no longer rely on your previously configured unmanaged backups to work.
     * 
     */
    public Optional<Boolean> autoBackupEnabled() {
        return Optional.ofNullable(this.autoBackupEnabled);
    }
    /**
     * @return (Updatable) Time window selected for initiating automatic backup for the database system. There are twelve available two-hour time windows. If no option is selected, a start time between 12:00 AM to 7:00 AM in the region of the database is automatically chosen. For example, if the user selects SLOT_TWO from the enum list, the automatic backup job will start in between 2:00 AM (inclusive) to 4:00 AM (exclusive).  Example: `SLOT_TWO`
     * 
     */
    public Optional<String> autoBackupWindow() {
        return Optional.ofNullable(this.autoBackupWindow);
    }
    /**
     * @return Backup destination details.
     * 
     */
    public List<DatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails() {
        return this.backupDestinationDetails == null ? List.of() : this.backupDestinationDetails;
    }
    /**
     * @return (Updatable) Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups only. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     * 
     */
    public Optional<Integer> recoveryWindowInDays() {
        return Optional.ofNullable(this.recoveryWindowInDays);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseDbBackupConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean autoBackupEnabled;
        private @Nullable String autoBackupWindow;
        private @Nullable List<DatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails;
        private @Nullable Integer recoveryWindowInDays;

        public Builder() {
    	      // Empty
        }

        public Builder(DatabaseDbBackupConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoBackupEnabled = defaults.autoBackupEnabled;
    	      this.autoBackupWindow = defaults.autoBackupWindow;
    	      this.backupDestinationDetails = defaults.backupDestinationDetails;
    	      this.recoveryWindowInDays = defaults.recoveryWindowInDays;
        }

        public Builder autoBackupEnabled(@Nullable Boolean autoBackupEnabled) {
            this.autoBackupEnabled = autoBackupEnabled;
            return this;
        }
        public Builder autoBackupWindow(@Nullable String autoBackupWindow) {
            this.autoBackupWindow = autoBackupWindow;
            return this;
        }
        public Builder backupDestinationDetails(@Nullable List<DatabaseDbBackupConfigBackupDestinationDetail> backupDestinationDetails) {
            this.backupDestinationDetails = backupDestinationDetails;
            return this;
        }
        public Builder backupDestinationDetails(DatabaseDbBackupConfigBackupDestinationDetail... backupDestinationDetails) {
            return backupDestinationDetails(List.of(backupDestinationDetails));
        }
        public Builder recoveryWindowInDays(@Nullable Integer recoveryWindowInDays) {
            this.recoveryWindowInDays = recoveryWindowInDays;
            return this;
        }        public DatabaseDbBackupConfig build() {
            return new DatabaseDbBackupConfig(autoBackupEnabled, autoBackupWindow, backupDestinationDetails, recoveryWindowInDays);
        }
    }
}
