// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.GetTagDefaultsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTagDefaultsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTagDefaultsArgs Empty = new GetTagDefaultsArgs();

    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetTagDefaultsFilterArgs>> filters;

    public Optional<Output<List<GetTagDefaultsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to only return resources that match the specified OCID exactly.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return A filter to only return resources that match the specified OCID exactly.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The OCID of the tag definition.
     * 
     */
    @Import(name="tagDefinitionId")
    private @Nullable Output<String> tagDefinitionId;

    /**
     * @return The OCID of the tag definition.
     * 
     */
    public Optional<Output<String>> tagDefinitionId() {
        return Optional.ofNullable(this.tagDefinitionId);
    }

    private GetTagDefaultsArgs() {}

    private GetTagDefaultsArgs(GetTagDefaultsArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.id = $.id;
        this.state = $.state;
        this.tagDefinitionId = $.tagDefinitionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTagDefaultsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTagDefaultsArgs $;

        public Builder() {
            $ = new GetTagDefaultsArgs();
        }

        public Builder(GetTagDefaultsArgs defaults) {
            $ = new GetTagDefaultsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment (remember that the tenancy is simply the root compartment).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment (remember that the tenancy is simply the root compartment).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(@Nullable Output<List<GetTagDefaultsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetTagDefaultsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetTagDefaultsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id A filter to only return resources that match the specified OCID exactly.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id A filter to only return resources that match the specified OCID exactly.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param state A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param tagDefinitionId The OCID of the tag definition.
         * 
         * @return builder
         * 
         */
        public Builder tagDefinitionId(@Nullable Output<String> tagDefinitionId) {
            $.tagDefinitionId = tagDefinitionId;
            return this;
        }

        /**
         * @param tagDefinitionId The OCID of the tag definition.
         * 
         * @return builder
         * 
         */
        public Builder tagDefinitionId(String tagDefinitionId) {
            return tagDefinitionId(Output.of(tagDefinitionId));
        }

        public GetTagDefaultsArgs build() {
            return $;
        }
    }

}
