// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.AuditPolicyAuditConditionEnableCondition;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class AuditPolicyAuditCondition {
    /**
     * @return Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
     * 
     */
    private final @Nullable String auditPolicyName;
    /**
     * @return Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
     * 
     */
    private final @Nullable List<AuditPolicyAuditConditionEnableCondition> enableConditions;
    /**
     * @return Indicates whether the Data Safe user activity on the target database will be audited by the policy.
     * 
     */
    private final @Nullable Boolean isDataSafeServiceAccountAudited;
    /**
     * @return Indicates whether the privileged user list is managed by Data Safe.
     * 
     */
    private final @Nullable Boolean isPrivUsersManagedByDataSafe;

    @CustomType.Constructor
    private AuditPolicyAuditCondition(
        @CustomType.Parameter("auditPolicyName") @Nullable String auditPolicyName,
        @CustomType.Parameter("enableConditions") @Nullable List<AuditPolicyAuditConditionEnableCondition> enableConditions,
        @CustomType.Parameter("isDataSafeServiceAccountAudited") @Nullable Boolean isDataSafeServiceAccountAudited,
        @CustomType.Parameter("isPrivUsersManagedByDataSafe") @Nullable Boolean isPrivUsersManagedByDataSafe) {
        this.auditPolicyName = auditPolicyName;
        this.enableConditions = enableConditions;
        this.isDataSafeServiceAccountAudited = isDataSafeServiceAccountAudited;
        this.isPrivUsersManagedByDataSafe = isPrivUsersManagedByDataSafe;
    }

    /**
     * @return Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
     * 
     */
    public Optional<String> auditPolicyName() {
        return Optional.ofNullable(this.auditPolicyName);
    }
    /**
     * @return Indicates the users/roles in the target database for which the audit policy is enforced, and the success/failure event condition to generate the audit event..
     * 
     */
    public List<AuditPolicyAuditConditionEnableCondition> enableConditions() {
        return this.enableConditions == null ? List.of() : this.enableConditions;
    }
    /**
     * @return Indicates whether the Data Safe user activity on the target database will be audited by the policy.
     * 
     */
    public Optional<Boolean> isDataSafeServiceAccountAudited() {
        return Optional.ofNullable(this.isDataSafeServiceAccountAudited);
    }
    /**
     * @return Indicates whether the privileged user list is managed by Data Safe.
     * 
     */
    public Optional<Boolean> isPrivUsersManagedByDataSafe() {
        return Optional.ofNullable(this.isPrivUsersManagedByDataSafe);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(AuditPolicyAuditCondition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String auditPolicyName;
        private @Nullable List<AuditPolicyAuditConditionEnableCondition> enableConditions;
        private @Nullable Boolean isDataSafeServiceAccountAudited;
        private @Nullable Boolean isPrivUsersManagedByDataSafe;

        public Builder() {
    	      // Empty
        }

        public Builder(AuditPolicyAuditCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditPolicyName = defaults.auditPolicyName;
    	      this.enableConditions = defaults.enableConditions;
    	      this.isDataSafeServiceAccountAudited = defaults.isDataSafeServiceAccountAudited;
    	      this.isPrivUsersManagedByDataSafe = defaults.isPrivUsersManagedByDataSafe;
        }

        public Builder auditPolicyName(@Nullable String auditPolicyName) {
            this.auditPolicyName = auditPolicyName;
            return this;
        }
        public Builder enableConditions(@Nullable List<AuditPolicyAuditConditionEnableCondition> enableConditions) {
            this.enableConditions = enableConditions;
            return this;
        }
        public Builder enableConditions(AuditPolicyAuditConditionEnableCondition... enableConditions) {
            return enableConditions(List.of(enableConditions));
        }
        public Builder isDataSafeServiceAccountAudited(@Nullable Boolean isDataSafeServiceAccountAudited) {
            this.isDataSafeServiceAccountAudited = isDataSafeServiceAccountAudited;
            return this;
        }
        public Builder isPrivUsersManagedByDataSafe(@Nullable Boolean isPrivUsersManagedByDataSafe) {
            this.isPrivUsersManagedByDataSafe = isPrivUsersManagedByDataSafe;
            return this;
        }        public AuditPolicyAuditCondition build() {
            return new AuditPolicyAuditCondition(auditPolicyName, enableConditions, isDataSafeServiceAccountAudited, isPrivUsersManagedByDataSafe);
        }
    }
}
