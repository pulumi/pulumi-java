// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Limits.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Limits.outputs.GetLimitValuesFilter;
import com.pulumi.oci.Limits.outputs.GetLimitValuesLimitValue;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetLimitValuesResult {
    /**
     * @return If present, the returned value is only specific to this availability domain.
     * 
     */
    private final @Nullable String availabilityDomain;
    private final String compartmentId;
    private final @Nullable List<GetLimitValuesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of limit_values.
     * 
     */
    private final List<GetLimitValuesLimitValue> limitValues;
    /**
     * @return The resource limit name. To be used for writing policies (in case of quotas) or other programmatic calls.
     * 
     */
    private final @Nullable String name;
    /**
     * @return The scope type of the limit.
     * 
     */
    private final @Nullable String scopeType;
    private final String serviceName;

    @CustomType.Constructor
    private GetLimitValuesResult(
        @CustomType.Parameter("availabilityDomain") @Nullable String availabilityDomain,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetLimitValuesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("limitValues") List<GetLimitValuesLimitValue> limitValues,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("scopeType") @Nullable String scopeType,
        @CustomType.Parameter("serviceName") String serviceName) {
        this.availabilityDomain = availabilityDomain;
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.limitValues = limitValues;
        this.name = name;
        this.scopeType = scopeType;
        this.serviceName = serviceName;
    }

    /**
     * @return If present, the returned value is only specific to this availability domain.
     * 
     */
    public Optional<String> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetLimitValuesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of limit_values.
     * 
     */
    public List<GetLimitValuesLimitValue> limitValues() {
        return this.limitValues;
    }
    /**
     * @return The resource limit name. To be used for writing policies (in case of quotas) or other programmatic calls.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The scope type of the limit.
     * 
     */
    public Optional<String> scopeType() {
        return Optional.ofNullable(this.scopeType);
    }
    public String serviceName() {
        return this.serviceName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLimitValuesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String availabilityDomain;
        private String compartmentId;
        private @Nullable List<GetLimitValuesFilter> filters;
        private String id;
        private List<GetLimitValuesLimitValue> limitValues;
        private @Nullable String name;
        private @Nullable String scopeType;
        private String serviceName;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLimitValuesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.limitValues = defaults.limitValues;
    	      this.name = defaults.name;
    	      this.scopeType = defaults.scopeType;
    	      this.serviceName = defaults.serviceName;
        }

        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            this.availabilityDomain = availabilityDomain;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetLimitValuesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetLimitValuesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder limitValues(List<GetLimitValuesLimitValue> limitValues) {
            this.limitValues = Objects.requireNonNull(limitValues);
            return this;
        }
        public Builder limitValues(GetLimitValuesLimitValue... limitValues) {
            return limitValues(List.of(limitValues));
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder scopeType(@Nullable String scopeType) {
            this.scopeType = scopeType;
            return this;
        }
        public Builder serviceName(String serviceName) {
            this.serviceName = Objects.requireNonNull(serviceName);
            return this;
        }        public GetLimitValuesResult build() {
            return new GetLimitValuesResult(availabilityDomain, compartmentId, filters, id, limitValues, name, scopeType, serviceName);
        }
    }
}
