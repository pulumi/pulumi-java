// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MaintenanceRunEstimatedPatchingTimeArgs extends com.pulumi.resources.ResourceArgs {

    public static final MaintenanceRunEstimatedPatchingTimeArgs Empty = new MaintenanceRunEstimatedPatchingTimeArgs();

    /**
     * The estimated time required in minutes for database server patching.
     * 
     */
    @Import(name="estimatedDbServerPatchingTime")
    private @Nullable Output<Integer> estimatedDbServerPatchingTime;

    /**
     * @return The estimated time required in minutes for database server patching.
     * 
     */
    public Optional<Output<Integer>> estimatedDbServerPatchingTime() {
        return Optional.ofNullable(this.estimatedDbServerPatchingTime);
    }

    /**
     * The estimated time required in minutes for network switch patching.
     * 
     */
    @Import(name="estimatedNetworkSwitchesPatchingTime")
    private @Nullable Output<Integer> estimatedNetworkSwitchesPatchingTime;

    /**
     * @return The estimated time required in minutes for network switch patching.
     * 
     */
    public Optional<Output<Integer>> estimatedNetworkSwitchesPatchingTime() {
        return Optional.ofNullable(this.estimatedNetworkSwitchesPatchingTime);
    }

    /**
     * The estimated time required in minutes for storage server patching.
     * 
     */
    @Import(name="estimatedStorageServerPatchingTime")
    private @Nullable Output<Integer> estimatedStorageServerPatchingTime;

    /**
     * @return The estimated time required in minutes for storage server patching.
     * 
     */
    public Optional<Output<Integer>> estimatedStorageServerPatchingTime() {
        return Optional.ofNullable(this.estimatedStorageServerPatchingTime);
    }

    /**
     * The estimated total time required in minutes for all patching operations.
     * 
     */
    @Import(name="totalEstimatedPatchingTime")
    private @Nullable Output<Integer> totalEstimatedPatchingTime;

    /**
     * @return The estimated total time required in minutes for all patching operations.
     * 
     */
    public Optional<Output<Integer>> totalEstimatedPatchingTime() {
        return Optional.ofNullable(this.totalEstimatedPatchingTime);
    }

    private MaintenanceRunEstimatedPatchingTimeArgs() {}

    private MaintenanceRunEstimatedPatchingTimeArgs(MaintenanceRunEstimatedPatchingTimeArgs $) {
        this.estimatedDbServerPatchingTime = $.estimatedDbServerPatchingTime;
        this.estimatedNetworkSwitchesPatchingTime = $.estimatedNetworkSwitchesPatchingTime;
        this.estimatedStorageServerPatchingTime = $.estimatedStorageServerPatchingTime;
        this.totalEstimatedPatchingTime = $.totalEstimatedPatchingTime;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MaintenanceRunEstimatedPatchingTimeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MaintenanceRunEstimatedPatchingTimeArgs $;

        public Builder() {
            $ = new MaintenanceRunEstimatedPatchingTimeArgs();
        }

        public Builder(MaintenanceRunEstimatedPatchingTimeArgs defaults) {
            $ = new MaintenanceRunEstimatedPatchingTimeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param estimatedDbServerPatchingTime The estimated time required in minutes for database server patching.
         * 
         * @return builder
         * 
         */
        public Builder estimatedDbServerPatchingTime(@Nullable Output<Integer> estimatedDbServerPatchingTime) {
            $.estimatedDbServerPatchingTime = estimatedDbServerPatchingTime;
            return this;
        }

        /**
         * @param estimatedDbServerPatchingTime The estimated time required in minutes for database server patching.
         * 
         * @return builder
         * 
         */
        public Builder estimatedDbServerPatchingTime(Integer estimatedDbServerPatchingTime) {
            return estimatedDbServerPatchingTime(Output.of(estimatedDbServerPatchingTime));
        }

        /**
         * @param estimatedNetworkSwitchesPatchingTime The estimated time required in minutes for network switch patching.
         * 
         * @return builder
         * 
         */
        public Builder estimatedNetworkSwitchesPatchingTime(@Nullable Output<Integer> estimatedNetworkSwitchesPatchingTime) {
            $.estimatedNetworkSwitchesPatchingTime = estimatedNetworkSwitchesPatchingTime;
            return this;
        }

        /**
         * @param estimatedNetworkSwitchesPatchingTime The estimated time required in minutes for network switch patching.
         * 
         * @return builder
         * 
         */
        public Builder estimatedNetworkSwitchesPatchingTime(Integer estimatedNetworkSwitchesPatchingTime) {
            return estimatedNetworkSwitchesPatchingTime(Output.of(estimatedNetworkSwitchesPatchingTime));
        }

        /**
         * @param estimatedStorageServerPatchingTime The estimated time required in minutes for storage server patching.
         * 
         * @return builder
         * 
         */
        public Builder estimatedStorageServerPatchingTime(@Nullable Output<Integer> estimatedStorageServerPatchingTime) {
            $.estimatedStorageServerPatchingTime = estimatedStorageServerPatchingTime;
            return this;
        }

        /**
         * @param estimatedStorageServerPatchingTime The estimated time required in minutes for storage server patching.
         * 
         * @return builder
         * 
         */
        public Builder estimatedStorageServerPatchingTime(Integer estimatedStorageServerPatchingTime) {
            return estimatedStorageServerPatchingTime(Output.of(estimatedStorageServerPatchingTime));
        }

        /**
         * @param totalEstimatedPatchingTime The estimated total time required in minutes for all patching operations.
         * 
         * @return builder
         * 
         */
        public Builder totalEstimatedPatchingTime(@Nullable Output<Integer> totalEstimatedPatchingTime) {
            $.totalEstimatedPatchingTime = totalEstimatedPatchingTime;
            return this;
        }

        /**
         * @param totalEstimatedPatchingTime The estimated total time required in minutes for all patching operations.
         * 
         * @return builder
         * 
         */
        public Builder totalEstimatedPatchingTime(Integer totalEstimatedPatchingTime) {
            return totalEstimatedPatchingTime(Output.of(totalEstimatedPatchingTime));
        }

        public MaintenanceRunEstimatedPatchingTimeArgs build() {
            return $;
        }
    }

}
