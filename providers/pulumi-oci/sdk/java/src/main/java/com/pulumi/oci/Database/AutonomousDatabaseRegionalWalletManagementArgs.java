// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousDatabaseRegionalWalletManagementArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabaseRegionalWalletManagementArgs Empty = new AutonomousDatabaseRegionalWalletManagementArgs();

    /**
     * (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
     * 
     */
    @Import(name="shouldRotate")
    private @Nullable Output<Boolean> shouldRotate;

    /**
     * @return (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
     * 
     */
    public Optional<Output<Boolean>> shouldRotate() {
        return Optional.ofNullable(this.shouldRotate);
    }

    private AutonomousDatabaseRegionalWalletManagementArgs() {}

    private AutonomousDatabaseRegionalWalletManagementArgs(AutonomousDatabaseRegionalWalletManagementArgs $) {
        this.shouldRotate = $.shouldRotate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabaseRegionalWalletManagementArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabaseRegionalWalletManagementArgs $;

        public Builder() {
            $ = new AutonomousDatabaseRegionalWalletManagementArgs();
        }

        public Builder(AutonomousDatabaseRegionalWalletManagementArgs defaults) {
            $ = new AutonomousDatabaseRegionalWalletManagementArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param shouldRotate (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder shouldRotate(@Nullable Output<Boolean> shouldRotate) {
            $.shouldRotate = shouldRotate;
            return this;
        }

        /**
         * @param shouldRotate (Updatable) Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
         * 
         * @return builder
         * 
         */
        public Builder shouldRotate(Boolean shouldRotate) {
            return shouldRotate(Output.of(shouldRotate));
        }

        public AutonomousDatabaseRegionalWalletManagementArgs build() {
            return $;
        }
    }

}
