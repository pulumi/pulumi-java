// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TagDefaultArgs extends com.pulumi.resources.ResourceArgs {

    public static final TagDefaultArgs Empty = new TagDefaultArgs();

    /**
     * The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
     * * If the `isRequired` flag is set to &#34;true&#34;, the value is set during resource creation.
     * * If the `isRequired` flag is set to &#34;false&#34;, the value you enter is set during resource creation.
     * 
     */
    @Import(name="isRequired")
    private @Nullable Output<Boolean> isRequired;

    /**
     * @return (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
     * * If the `isRequired` flag is set to &#34;true&#34;, the value is set during resource creation.
     * * If the `isRequired` flag is set to &#34;false&#34;, the value you enter is set during resource creation.
     * 
     */
    public Optional<Output<Boolean>> isRequired() {
        return Optional.ofNullable(this.isRequired);
    }

    /**
     * The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
     * 
     */
    @Import(name="tagDefinitionId", required=true)
    private Output<String> tagDefinitionId;

    /**
     * @return The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
     * 
     */
    public Output<String> tagDefinitionId() {
        return this.tagDefinitionId;
    }

    /**
     * (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private TagDefaultArgs() {}

    private TagDefaultArgs(TagDefaultArgs $) {
        this.compartmentId = $.compartmentId;
        this.isRequired = $.isRequired;
        this.tagDefinitionId = $.tagDefinitionId;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TagDefaultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TagDefaultArgs $;

        public Builder() {
            $ = new TagDefaultArgs();
        }

        public Builder(TagDefaultArgs defaults) {
            $ = new TagDefaultArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment. The tag default will be applied to all new resources created in this compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param isRequired (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
         * * If the `isRequired` flag is set to &#34;true&#34;, the value is set during resource creation.
         * * If the `isRequired` flag is set to &#34;false&#34;, the value you enter is set during resource creation.
         * 
         * @return builder
         * 
         */
        public Builder isRequired(@Nullable Output<Boolean> isRequired) {
            $.isRequired = isRequired;
            return this;
        }

        /**
         * @param isRequired (Updatable) If you specify that a value is required, a value is set during resource creation (either by the user creating the resource or another tag defualt). If no value is set, resource creation is blocked.
         * * If the `isRequired` flag is set to &#34;true&#34;, the value is set during resource creation.
         * * If the `isRequired` flag is set to &#34;false&#34;, the value you enter is set during resource creation.
         * 
         * @return builder
         * 
         */
        public Builder isRequired(Boolean isRequired) {
            return isRequired(Output.of(isRequired));
        }

        /**
         * @param tagDefinitionId The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
         * 
         * @return builder
         * 
         */
        public Builder tagDefinitionId(Output<String> tagDefinitionId) {
            $.tagDefinitionId = tagDefinitionId;
            return this;
        }

        /**
         * @param tagDefinitionId The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
         * 
         * @return builder
         * 
         */
        public Builder tagDefinitionId(String tagDefinitionId) {
            return tagDefinitionId(Output.of(tagDefinitionId));
        }

        /**
         * @param value (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value (Updatable) The default value for the tag definition. This will be applied to all new resources created in the compartment.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public TagDefaultArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.tagDefinitionId = Objects.requireNonNull($.tagDefinitionId, "expected parameter 'tagDefinitionId' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
