// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApiGateway.outputs.GetApiDeploymentSpecificationRouteRequestPolicyAuthorization;
import com.pulumi.oci.ApiGateway.outputs.GetApiDeploymentSpecificationRouteRequestPolicyBodyValidation;
import com.pulumi.oci.ApiGateway.outputs.GetApiDeploymentSpecificationRouteRequestPolicyCor;
import com.pulumi.oci.ApiGateway.outputs.GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformation;
import com.pulumi.oci.ApiGateway.outputs.GetApiDeploymentSpecificationRouteRequestPolicyHeaderValidation;
import com.pulumi.oci.ApiGateway.outputs.GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation;
import com.pulumi.oci.ApiGateway.outputs.GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterValidation;
import com.pulumi.oci.ApiGateway.outputs.GetApiDeploymentSpecificationRouteRequestPolicyResponseCacheLookup;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetApiDeploymentSpecificationRouteRequestPolicy {
    /**
     * @return If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
     * 
     */
    private final List<GetApiDeploymentSpecificationRouteRequestPolicyAuthorization> authorizations;
    /**
     * @return Validate the payload body of the incoming API requests on a specific route.
     * 
     */
    private final List<GetApiDeploymentSpecificationRouteRequestPolicyBodyValidation> bodyValidations;
    /**
     * @return Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     * 
     */
    private final List<GetApiDeploymentSpecificationRouteRequestPolicyCor> cors;
    /**
     * @return A set of transformations to apply to HTTP headers that pass through the gateway.
     * 
     */
    private final List<GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformation> headerTransformations;
    /**
     * @return Validate the HTTP headers on the incoming API requests on a specific route.
     * 
     */
    private final List<GetApiDeploymentSpecificationRouteRequestPolicyHeaderValidation> headerValidations;
    /**
     * @return A set of transformations to apply to query parameters that pass through the gateway.
     * 
     */
    private final List<GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation> queryParameterTransformations;
    /**
     * @return Validate the URL query parameters on the incoming API requests on a specific route.
     * 
     */
    private final List<GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterValidation> queryParameterValidations;
    /**
     * @return Base policy for Response Cache lookup.
     * 
     */
    private final List<GetApiDeploymentSpecificationRouteRequestPolicyResponseCacheLookup> responseCacheLookups;

    @CustomType.Constructor
    private GetApiDeploymentSpecificationRouteRequestPolicy(
        @CustomType.Parameter("authorizations") List<GetApiDeploymentSpecificationRouteRequestPolicyAuthorization> authorizations,
        @CustomType.Parameter("bodyValidations") List<GetApiDeploymentSpecificationRouteRequestPolicyBodyValidation> bodyValidations,
        @CustomType.Parameter("cors") List<GetApiDeploymentSpecificationRouteRequestPolicyCor> cors,
        @CustomType.Parameter("headerTransformations") List<GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformation> headerTransformations,
        @CustomType.Parameter("headerValidations") List<GetApiDeploymentSpecificationRouteRequestPolicyHeaderValidation> headerValidations,
        @CustomType.Parameter("queryParameterTransformations") List<GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation> queryParameterTransformations,
        @CustomType.Parameter("queryParameterValidations") List<GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterValidation> queryParameterValidations,
        @CustomType.Parameter("responseCacheLookups") List<GetApiDeploymentSpecificationRouteRequestPolicyResponseCacheLookup> responseCacheLookups) {
        this.authorizations = authorizations;
        this.bodyValidations = bodyValidations;
        this.cors = cors;
        this.headerTransformations = headerTransformations;
        this.headerValidations = headerValidations;
        this.queryParameterTransformations = queryParameterTransformations;
        this.queryParameterValidations = queryParameterValidations;
        this.responseCacheLookups = responseCacheLookups;
    }

    /**
     * @return If authentication has been performed, validate whether the request scope (if any) applies to this route. If no RouteAuthorizationPolicy is defined for a route, a policy with a type of AUTHENTICATION_ONLY is applied.
     * 
     */
    public List<GetApiDeploymentSpecificationRouteRequestPolicyAuthorization> authorizations() {
        return this.authorizations;
    }
    /**
     * @return Validate the payload body of the incoming API requests on a specific route.
     * 
     */
    public List<GetApiDeploymentSpecificationRouteRequestPolicyBodyValidation> bodyValidations() {
        return this.bodyValidations;
    }
    /**
     * @return Enable CORS (Cross-Origin-Resource-Sharing) request handling.
     * 
     */
    public List<GetApiDeploymentSpecificationRouteRequestPolicyCor> cors() {
        return this.cors;
    }
    /**
     * @return A set of transformations to apply to HTTP headers that pass through the gateway.
     * 
     */
    public List<GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformation> headerTransformations() {
        return this.headerTransformations;
    }
    /**
     * @return Validate the HTTP headers on the incoming API requests on a specific route.
     * 
     */
    public List<GetApiDeploymentSpecificationRouteRequestPolicyHeaderValidation> headerValidations() {
        return this.headerValidations;
    }
    /**
     * @return A set of transformations to apply to query parameters that pass through the gateway.
     * 
     */
    public List<GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation> queryParameterTransformations() {
        return this.queryParameterTransformations;
    }
    /**
     * @return Validate the URL query parameters on the incoming API requests on a specific route.
     * 
     */
    public List<GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterValidation> queryParameterValidations() {
        return this.queryParameterValidations;
    }
    /**
     * @return Base policy for Response Cache lookup.
     * 
     */
    public List<GetApiDeploymentSpecificationRouteRequestPolicyResponseCacheLookup> responseCacheLookups() {
        return this.responseCacheLookups;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetApiDeploymentSpecificationRouteRequestPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetApiDeploymentSpecificationRouteRequestPolicyAuthorization> authorizations;
        private List<GetApiDeploymentSpecificationRouteRequestPolicyBodyValidation> bodyValidations;
        private List<GetApiDeploymentSpecificationRouteRequestPolicyCor> cors;
        private List<GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformation> headerTransformations;
        private List<GetApiDeploymentSpecificationRouteRequestPolicyHeaderValidation> headerValidations;
        private List<GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation> queryParameterTransformations;
        private List<GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterValidation> queryParameterValidations;
        private List<GetApiDeploymentSpecificationRouteRequestPolicyResponseCacheLookup> responseCacheLookups;

        public Builder() {
    	      // Empty
        }

        public Builder(GetApiDeploymentSpecificationRouteRequestPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorizations = defaults.authorizations;
    	      this.bodyValidations = defaults.bodyValidations;
    	      this.cors = defaults.cors;
    	      this.headerTransformations = defaults.headerTransformations;
    	      this.headerValidations = defaults.headerValidations;
    	      this.queryParameterTransformations = defaults.queryParameterTransformations;
    	      this.queryParameterValidations = defaults.queryParameterValidations;
    	      this.responseCacheLookups = defaults.responseCacheLookups;
        }

        public Builder authorizations(List<GetApiDeploymentSpecificationRouteRequestPolicyAuthorization> authorizations) {
            this.authorizations = Objects.requireNonNull(authorizations);
            return this;
        }
        public Builder authorizations(GetApiDeploymentSpecificationRouteRequestPolicyAuthorization... authorizations) {
            return authorizations(List.of(authorizations));
        }
        public Builder bodyValidations(List<GetApiDeploymentSpecificationRouteRequestPolicyBodyValidation> bodyValidations) {
            this.bodyValidations = Objects.requireNonNull(bodyValidations);
            return this;
        }
        public Builder bodyValidations(GetApiDeploymentSpecificationRouteRequestPolicyBodyValidation... bodyValidations) {
            return bodyValidations(List.of(bodyValidations));
        }
        public Builder cors(List<GetApiDeploymentSpecificationRouteRequestPolicyCor> cors) {
            this.cors = Objects.requireNonNull(cors);
            return this;
        }
        public Builder cors(GetApiDeploymentSpecificationRouteRequestPolicyCor... cors) {
            return cors(List.of(cors));
        }
        public Builder headerTransformations(List<GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformation> headerTransformations) {
            this.headerTransformations = Objects.requireNonNull(headerTransformations);
            return this;
        }
        public Builder headerTransformations(GetApiDeploymentSpecificationRouteRequestPolicyHeaderTransformation... headerTransformations) {
            return headerTransformations(List.of(headerTransformations));
        }
        public Builder headerValidations(List<GetApiDeploymentSpecificationRouteRequestPolicyHeaderValidation> headerValidations) {
            this.headerValidations = Objects.requireNonNull(headerValidations);
            return this;
        }
        public Builder headerValidations(GetApiDeploymentSpecificationRouteRequestPolicyHeaderValidation... headerValidations) {
            return headerValidations(List.of(headerValidations));
        }
        public Builder queryParameterTransformations(List<GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation> queryParameterTransformations) {
            this.queryParameterTransformations = Objects.requireNonNull(queryParameterTransformations);
            return this;
        }
        public Builder queryParameterTransformations(GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterTransformation... queryParameterTransformations) {
            return queryParameterTransformations(List.of(queryParameterTransformations));
        }
        public Builder queryParameterValidations(List<GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterValidation> queryParameterValidations) {
            this.queryParameterValidations = Objects.requireNonNull(queryParameterValidations);
            return this;
        }
        public Builder queryParameterValidations(GetApiDeploymentSpecificationRouteRequestPolicyQueryParameterValidation... queryParameterValidations) {
            return queryParameterValidations(List.of(queryParameterValidations));
        }
        public Builder responseCacheLookups(List<GetApiDeploymentSpecificationRouteRequestPolicyResponseCacheLookup> responseCacheLookups) {
            this.responseCacheLookups = Objects.requireNonNull(responseCacheLookups);
            return this;
        }
        public Builder responseCacheLookups(GetApiDeploymentSpecificationRouteRequestPolicyResponseCacheLookup... responseCacheLookups) {
            return responseCacheLookups(List.of(responseCacheLookups));
        }        public GetApiDeploymentSpecificationRouteRequestPolicy build() {
            return new GetApiDeploymentSpecificationRouteRequestPolicy(authorizations, bodyValidations, cors, headerTransformations, headerValidations, queryParameterTransformations, queryParameterValidations, responseCacheLookups);
        }
    }
}
