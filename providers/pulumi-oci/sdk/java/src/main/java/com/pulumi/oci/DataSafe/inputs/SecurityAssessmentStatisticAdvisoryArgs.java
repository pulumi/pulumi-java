// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityAssessmentStatisticAdvisoryArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityAssessmentStatisticAdvisoryArgs Empty = new SecurityAssessmentStatisticAdvisoryArgs();

    /**
     * The number of findings in the Auditing category.
     * 
     */
    @Import(name="auditingFindingsCount")
    private @Nullable Output<Integer> auditingFindingsCount;

    /**
     * @return The number of findings in the Auditing category.
     * 
     */
    public Optional<Output<Integer>> auditingFindingsCount() {
        return Optional.ofNullable(this.auditingFindingsCount);
    }

    /**
     * The number of findings in the Authorization Control category.
     * 
     */
    @Import(name="authorizationControlFindingsCount")
    private @Nullable Output<Integer> authorizationControlFindingsCount;

    /**
     * @return The number of findings in the Authorization Control category.
     * 
     */
    public Optional<Output<Integer>> authorizationControlFindingsCount() {
        return Optional.ofNullable(this.authorizationControlFindingsCount);
    }

    /**
     * The number of findings in the Data Encryption category.
     * 
     */
    @Import(name="dataEncryptionFindingsCount")
    private @Nullable Output<Integer> dataEncryptionFindingsCount;

    /**
     * @return The number of findings in the Data Encryption category.
     * 
     */
    public Optional<Output<Integer>> dataEncryptionFindingsCount() {
        return Optional.ofNullable(this.dataEncryptionFindingsCount);
    }

    /**
     * The number of findings in the Database Configuration category.
     * 
     */
    @Import(name="dbConfigurationFindingsCount")
    private @Nullable Output<Integer> dbConfigurationFindingsCount;

    /**
     * @return The number of findings in the Database Configuration category.
     * 
     */
    public Optional<Output<Integer>> dbConfigurationFindingsCount() {
        return Optional.ofNullable(this.dbConfigurationFindingsCount);
    }

    /**
     * The number of findings in the Fine-Grained Access Control category.
     * 
     */
    @Import(name="fineGrainedAccessControlFindingsCount")
    private @Nullable Output<Integer> fineGrainedAccessControlFindingsCount;

    /**
     * @return The number of findings in the Fine-Grained Access Control category.
     * 
     */
    public Optional<Output<Integer>> fineGrainedAccessControlFindingsCount() {
        return Optional.ofNullable(this.fineGrainedAccessControlFindingsCount);
    }

    /**
     * The number of findings in the Privileges and Roles category.
     * 
     */
    @Import(name="privilegesAndRolesFindingsCount")
    private @Nullable Output<Integer> privilegesAndRolesFindingsCount;

    /**
     * @return The number of findings in the Privileges and Roles category.
     * 
     */
    public Optional<Output<Integer>> privilegesAndRolesFindingsCount() {
        return Optional.ofNullable(this.privilegesAndRolesFindingsCount);
    }

    /**
     * The total number of targets in this security assessment.
     * 
     */
    @Import(name="targetsCount")
    private @Nullable Output<Integer> targetsCount;

    /**
     * @return The total number of targets in this security assessment.
     * 
     */
    public Optional<Output<Integer>> targetsCount() {
        return Optional.ofNullable(this.targetsCount);
    }

    /**
     * The number of findings in the User Accounts category.
     * 
     */
    @Import(name="userAccountsFindingsCount")
    private @Nullable Output<Integer> userAccountsFindingsCount;

    /**
     * @return The number of findings in the User Accounts category.
     * 
     */
    public Optional<Output<Integer>> userAccountsFindingsCount() {
        return Optional.ofNullable(this.userAccountsFindingsCount);
    }

    private SecurityAssessmentStatisticAdvisoryArgs() {}

    private SecurityAssessmentStatisticAdvisoryArgs(SecurityAssessmentStatisticAdvisoryArgs $) {
        this.auditingFindingsCount = $.auditingFindingsCount;
        this.authorizationControlFindingsCount = $.authorizationControlFindingsCount;
        this.dataEncryptionFindingsCount = $.dataEncryptionFindingsCount;
        this.dbConfigurationFindingsCount = $.dbConfigurationFindingsCount;
        this.fineGrainedAccessControlFindingsCount = $.fineGrainedAccessControlFindingsCount;
        this.privilegesAndRolesFindingsCount = $.privilegesAndRolesFindingsCount;
        this.targetsCount = $.targetsCount;
        this.userAccountsFindingsCount = $.userAccountsFindingsCount;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityAssessmentStatisticAdvisoryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityAssessmentStatisticAdvisoryArgs $;

        public Builder() {
            $ = new SecurityAssessmentStatisticAdvisoryArgs();
        }

        public Builder(SecurityAssessmentStatisticAdvisoryArgs defaults) {
            $ = new SecurityAssessmentStatisticAdvisoryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditingFindingsCount The number of findings in the Auditing category.
         * 
         * @return builder
         * 
         */
        public Builder auditingFindingsCount(@Nullable Output<Integer> auditingFindingsCount) {
            $.auditingFindingsCount = auditingFindingsCount;
            return this;
        }

        /**
         * @param auditingFindingsCount The number of findings in the Auditing category.
         * 
         * @return builder
         * 
         */
        public Builder auditingFindingsCount(Integer auditingFindingsCount) {
            return auditingFindingsCount(Output.of(auditingFindingsCount));
        }

        /**
         * @param authorizationControlFindingsCount The number of findings in the Authorization Control category.
         * 
         * @return builder
         * 
         */
        public Builder authorizationControlFindingsCount(@Nullable Output<Integer> authorizationControlFindingsCount) {
            $.authorizationControlFindingsCount = authorizationControlFindingsCount;
            return this;
        }

        /**
         * @param authorizationControlFindingsCount The number of findings in the Authorization Control category.
         * 
         * @return builder
         * 
         */
        public Builder authorizationControlFindingsCount(Integer authorizationControlFindingsCount) {
            return authorizationControlFindingsCount(Output.of(authorizationControlFindingsCount));
        }

        /**
         * @param dataEncryptionFindingsCount The number of findings in the Data Encryption category.
         * 
         * @return builder
         * 
         */
        public Builder dataEncryptionFindingsCount(@Nullable Output<Integer> dataEncryptionFindingsCount) {
            $.dataEncryptionFindingsCount = dataEncryptionFindingsCount;
            return this;
        }

        /**
         * @param dataEncryptionFindingsCount The number of findings in the Data Encryption category.
         * 
         * @return builder
         * 
         */
        public Builder dataEncryptionFindingsCount(Integer dataEncryptionFindingsCount) {
            return dataEncryptionFindingsCount(Output.of(dataEncryptionFindingsCount));
        }

        /**
         * @param dbConfigurationFindingsCount The number of findings in the Database Configuration category.
         * 
         * @return builder
         * 
         */
        public Builder dbConfigurationFindingsCount(@Nullable Output<Integer> dbConfigurationFindingsCount) {
            $.dbConfigurationFindingsCount = dbConfigurationFindingsCount;
            return this;
        }

        /**
         * @param dbConfigurationFindingsCount The number of findings in the Database Configuration category.
         * 
         * @return builder
         * 
         */
        public Builder dbConfigurationFindingsCount(Integer dbConfigurationFindingsCount) {
            return dbConfigurationFindingsCount(Output.of(dbConfigurationFindingsCount));
        }

        /**
         * @param fineGrainedAccessControlFindingsCount The number of findings in the Fine-Grained Access Control category.
         * 
         * @return builder
         * 
         */
        public Builder fineGrainedAccessControlFindingsCount(@Nullable Output<Integer> fineGrainedAccessControlFindingsCount) {
            $.fineGrainedAccessControlFindingsCount = fineGrainedAccessControlFindingsCount;
            return this;
        }

        /**
         * @param fineGrainedAccessControlFindingsCount The number of findings in the Fine-Grained Access Control category.
         * 
         * @return builder
         * 
         */
        public Builder fineGrainedAccessControlFindingsCount(Integer fineGrainedAccessControlFindingsCount) {
            return fineGrainedAccessControlFindingsCount(Output.of(fineGrainedAccessControlFindingsCount));
        }

        /**
         * @param privilegesAndRolesFindingsCount The number of findings in the Privileges and Roles category.
         * 
         * @return builder
         * 
         */
        public Builder privilegesAndRolesFindingsCount(@Nullable Output<Integer> privilegesAndRolesFindingsCount) {
            $.privilegesAndRolesFindingsCount = privilegesAndRolesFindingsCount;
            return this;
        }

        /**
         * @param privilegesAndRolesFindingsCount The number of findings in the Privileges and Roles category.
         * 
         * @return builder
         * 
         */
        public Builder privilegesAndRolesFindingsCount(Integer privilegesAndRolesFindingsCount) {
            return privilegesAndRolesFindingsCount(Output.of(privilegesAndRolesFindingsCount));
        }

        /**
         * @param targetsCount The total number of targets in this security assessment.
         * 
         * @return builder
         * 
         */
        public Builder targetsCount(@Nullable Output<Integer> targetsCount) {
            $.targetsCount = targetsCount;
            return this;
        }

        /**
         * @param targetsCount The total number of targets in this security assessment.
         * 
         * @return builder
         * 
         */
        public Builder targetsCount(Integer targetsCount) {
            return targetsCount(Output.of(targetsCount));
        }

        /**
         * @param userAccountsFindingsCount The number of findings in the User Accounts category.
         * 
         * @return builder
         * 
         */
        public Builder userAccountsFindingsCount(@Nullable Output<Integer> userAccountsFindingsCount) {
            $.userAccountsFindingsCount = userAccountsFindingsCount;
            return this;
        }

        /**
         * @param userAccountsFindingsCount The number of findings in the User Accounts category.
         * 
         * @return builder
         * 
         */
        public Builder userAccountsFindingsCount(Integer userAccountsFindingsCount) {
            return userAccountsFindingsCount(Output.of(userAccountsFindingsCount));
        }

        public SecurityAssessmentStatisticAdvisoryArgs build() {
            return $;
        }
    }

}
