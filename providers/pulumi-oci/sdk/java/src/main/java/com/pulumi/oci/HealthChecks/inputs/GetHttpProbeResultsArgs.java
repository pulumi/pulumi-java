// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.HealthChecks.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.HealthChecks.inputs.GetHttpProbeResultsFilterArgs;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetHttpProbeResultsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetHttpProbeResultsArgs Empty = new GetHttpProbeResultsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetHttpProbeResultsFilterArgs>> filters;

    public Optional<Output<List<GetHttpProbeResultsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of a monitor or on-demand probe.
     * 
     */
    @Import(name="probeConfigurationId", required=true)
    private Output<String> probeConfigurationId;

    /**
     * @return The OCID of a monitor or on-demand probe.
     * 
     */
    public Output<String> probeConfigurationId() {
        return this.probeConfigurationId;
    }

    /**
     * Returns results with a `startTime` equal to or greater than the specified value.
     * 
     */
    @Import(name="startTimeGreaterThanOrEqualTo")
    private @Nullable Output<Double> startTimeGreaterThanOrEqualTo;

    /**
     * @return Returns results with a `startTime` equal to or greater than the specified value.
     * 
     */
    public Optional<Output<Double>> startTimeGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.startTimeGreaterThanOrEqualTo);
    }

    /**
     * Returns results with a `startTime` equal to or less than the specified value.
     * 
     */
    @Import(name="startTimeLessThanOrEqualTo")
    private @Nullable Output<Double> startTimeLessThanOrEqualTo;

    /**
     * @return Returns results with a `startTime` equal to or less than the specified value.
     * 
     */
    public Optional<Output<Double>> startTimeLessThanOrEqualTo() {
        return Optional.ofNullable(this.startTimeLessThanOrEqualTo);
    }

    /**
     * Filters results that match the `target`.
     * 
     */
    @Import(name="target")
    private @Nullable Output<String> target;

    /**
     * @return Filters results that match the `target`.
     * 
     */
    public Optional<Output<String>> target() {
        return Optional.ofNullable(this.target);
    }

    private GetHttpProbeResultsArgs() {}

    private GetHttpProbeResultsArgs(GetHttpProbeResultsArgs $) {
        this.filters = $.filters;
        this.probeConfigurationId = $.probeConfigurationId;
        this.startTimeGreaterThanOrEqualTo = $.startTimeGreaterThanOrEqualTo;
        this.startTimeLessThanOrEqualTo = $.startTimeLessThanOrEqualTo;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetHttpProbeResultsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetHttpProbeResultsArgs $;

        public Builder() {
            $ = new GetHttpProbeResultsArgs();
        }

        public Builder(GetHttpProbeResultsArgs defaults) {
            $ = new GetHttpProbeResultsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetHttpProbeResultsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetHttpProbeResultsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetHttpProbeResultsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param probeConfigurationId The OCID of a monitor or on-demand probe.
         * 
         * @return builder
         * 
         */
        public Builder probeConfigurationId(Output<String> probeConfigurationId) {
            $.probeConfigurationId = probeConfigurationId;
            return this;
        }

        /**
         * @param probeConfigurationId The OCID of a monitor or on-demand probe.
         * 
         * @return builder
         * 
         */
        public Builder probeConfigurationId(String probeConfigurationId) {
            return probeConfigurationId(Output.of(probeConfigurationId));
        }

        /**
         * @param startTimeGreaterThanOrEqualTo Returns results with a `startTime` equal to or greater than the specified value.
         * 
         * @return builder
         * 
         */
        public Builder startTimeGreaterThanOrEqualTo(@Nullable Output<Double> startTimeGreaterThanOrEqualTo) {
            $.startTimeGreaterThanOrEqualTo = startTimeGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param startTimeGreaterThanOrEqualTo Returns results with a `startTime` equal to or greater than the specified value.
         * 
         * @return builder
         * 
         */
        public Builder startTimeGreaterThanOrEqualTo(Double startTimeGreaterThanOrEqualTo) {
            return startTimeGreaterThanOrEqualTo(Output.of(startTimeGreaterThanOrEqualTo));
        }

        /**
         * @param startTimeLessThanOrEqualTo Returns results with a `startTime` equal to or less than the specified value.
         * 
         * @return builder
         * 
         */
        public Builder startTimeLessThanOrEqualTo(@Nullable Output<Double> startTimeLessThanOrEqualTo) {
            $.startTimeLessThanOrEqualTo = startTimeLessThanOrEqualTo;
            return this;
        }

        /**
         * @param startTimeLessThanOrEqualTo Returns results with a `startTime` equal to or less than the specified value.
         * 
         * @return builder
         * 
         */
        public Builder startTimeLessThanOrEqualTo(Double startTimeLessThanOrEqualTo) {
            return startTimeLessThanOrEqualTo(Output.of(startTimeLessThanOrEqualTo));
        }

        /**
         * @param target Filters results that match the `target`.
         * 
         * @return builder
         * 
         */
        public Builder target(@Nullable Output<String> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target Filters results that match the `target`.
         * 
         * @return builder
         * 
         */
        public Builder target(String target) {
            return target(Output.of(target));
        }

        public GetHttpProbeResultsArgs build() {
            $.probeConfigurationId = Objects.requireNonNull($.probeConfigurationId, "expected parameter 'probeConfigurationId' to be non-null");
            return $;
        }
    }

}
