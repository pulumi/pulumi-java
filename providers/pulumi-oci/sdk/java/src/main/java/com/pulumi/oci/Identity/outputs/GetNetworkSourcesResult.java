// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetNetworkSourcesFilter;
import com.pulumi.oci.Identity.outputs.GetNetworkSourcesNetworkSource;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNetworkSourcesResult {
    /**
     * @return The OCID of the tenancy containing the network source. The tenancy is the root compartment.
     * 
     */
    private final String compartmentId;
    private final @Nullable List<GetNetworkSourcesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The name you assign to the network source during creation. The name must be unique across the tenancy and cannot be changed.
     * 
     */
    private final @Nullable String name;
    /**
     * @return The list of network_sources.
     * 
     */
    private final List<GetNetworkSourcesNetworkSource> networkSources;
    /**
     * @return The network source object&#39;s current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetNetworkSourcesResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetNetworkSourcesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("networkSources") List<GetNetworkSourcesNetworkSource> networkSources,
        @CustomType.Parameter("state") @Nullable String state) {
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.name = name;
        this.networkSources = networkSources;
        this.state = state;
    }

    /**
     * @return The OCID of the tenancy containing the network source. The tenancy is the root compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetNetworkSourcesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name you assign to the network source during creation. The name must be unique across the tenancy and cannot be changed.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of network_sources.
     * 
     */
    public List<GetNetworkSourcesNetworkSource> networkSources() {
        return this.networkSources;
    }
    /**
     * @return The network source object&#39;s current state. After creating a network source, make sure its `lifecycleState` changes from CREATING to ACTIVE before using it.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNetworkSourcesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetNetworkSourcesFilter> filters;
        private String id;
        private @Nullable String name;
        private List<GetNetworkSourcesNetworkSource> networkSources;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNetworkSourcesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.networkSources = defaults.networkSources;
    	      this.state = defaults.state;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetNetworkSourcesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetNetworkSourcesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder networkSources(List<GetNetworkSourcesNetworkSource> networkSources) {
            this.networkSources = Objects.requireNonNull(networkSources);
            return this;
        }
        public Builder networkSources(GetNetworkSourcesNetworkSource... networkSources) {
            return networkSources(List.of(networkSources));
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetNetworkSourcesResult build() {
            return new GetNetworkSourcesResult(compartmentId, filters, id, name, networkSources, state);
        }
    }
}
