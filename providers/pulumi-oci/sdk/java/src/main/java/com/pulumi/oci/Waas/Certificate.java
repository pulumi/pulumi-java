// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Utilities;
import com.pulumi.oci.Waas.CertificateArgs;
import com.pulumi.oci.Waas.inputs.CertificateState;
import com.pulumi.oci.Waas.outputs.CertificateExtension;
import com.pulumi.oci.Waas.outputs.CertificateIssuerName;
import com.pulumi.oci.Waas.outputs.CertificatePublicKeyInfo;
import com.pulumi.oci.Waas.outputs.CertificateSubjectName;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Certificate resource in Oracle Cloud Infrastructure Web Application Acceleration and Security service.
 * 
 * Allows an SSL certificate to be added to a WAAS policy. The Web Application Firewall terminates SSL connections to inspect requests in runtime, and then re-encrypts requests before sending them to the origin for fulfillment.
 * 
 * For more information, see [WAF Settings](https://docs.cloud.oracle.com/iaas/Content/WAF/Tasks/wafsettings.htm).
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Import is not supported for this resource.
 * 
 */
@ResourceType(type="oci:Waas/certificate:Certificate")
public class Certificate extends com.pulumi.resources.CustomResource {
    /**
     * The data of the SSL certificate.
     * 
     */
    @Export(name="certificateData", type=String.class, parameters={})
    private Output<String> certificateData;

    /**
     * @return The data of the SSL certificate.
     * 
     */
    public Output<String> certificateData() {
        return this.certificateData;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the SSL certificate.
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment in which to create the SSL certificate.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A user-friendly name for the SSL certificate. The name can be changed and does not need to be unique.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name for the SSL certificate. The name can be changed and does not need to be unique.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
     * 
     */
    @Export(name="extensions", type=List.class, parameters={CertificateExtension.class})
    private Output<List<CertificateExtension>> extensions;

    /**
     * @return Additional attributes associated with users or public keys for managing relationships between Certificate Authorities.
     * 
     */
    public Output<List<CertificateExtension>> extensions() {
        return this.extensions;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * Set to `true` if the SSL certificate is self-signed.
     * 
     */
    @Export(name="isTrustVerificationDisabled", type=Boolean.class, parameters={})
    private Output<Boolean> isTrustVerificationDisabled;

    /**
     * @return Set to `true` if the SSL certificate is self-signed.
     * 
     */
    public Output<Boolean> isTrustVerificationDisabled() {
        return this.isTrustVerificationDisabled;
    }
    @Export(name="issuedBy", type=String.class, parameters={})
    private Output<String> issuedBy;

    public Output<String> issuedBy() {
        return this.issuedBy;
    }
    /**
     * The issuer of the certificate.
     * 
     */
    @Export(name="issuerNames", type=List.class, parameters={CertificateIssuerName.class})
    private Output<List<CertificateIssuerName>> issuerNames;

    /**
     * @return The issuer of the certificate.
     * 
     */
    public Output<List<CertificateIssuerName>> issuerNames() {
        return this.issuerNames;
    }
    /**
     * The private key of the SSL certificate.
     * 
     */
    @Export(name="privateKeyData", type=String.class, parameters={})
    private Output<String> privateKeyData;

    /**
     * @return The private key of the SSL certificate.
     * 
     */
    public Output<String> privateKeyData() {
        return this.privateKeyData;
    }
    /**
     * Information about the public key and the algorithm used by the public key.
     * 
     */
    @Export(name="publicKeyInfos", type=List.class, parameters={CertificatePublicKeyInfo.class})
    private Output<List<CertificatePublicKeyInfo>> publicKeyInfos;

    /**
     * @return Information about the public key and the algorithm used by the public key.
     * 
     */
    public Output<List<CertificatePublicKeyInfo>> publicKeyInfos() {
        return this.publicKeyInfos;
    }
    /**
     * A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
     * 
     */
    @Export(name="serialNumber", type=String.class, parameters={})
    private Output<String> serialNumber;

    /**
     * @return A unique, positive integer assigned by the Certificate Authority (CA). The issuer name and serial number identify a unique certificate.
     * 
     */
    public Output<String> serialNumber() {
        return this.serialNumber;
    }
    /**
     * The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
     * 
     */
    @Export(name="signatureAlgorithm", type=String.class, parameters={})
    private Output<String> signatureAlgorithm;

    /**
     * @return The identifier for the cryptographic algorithm used by the Certificate Authority (CA) to sign this certificate.
     * 
     */
    public Output<String> signatureAlgorithm() {
        return this.signatureAlgorithm;
    }
    /**
     * The current lifecycle state of the SSL certificate.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current lifecycle state of the SSL certificate.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The entity to be secured by the certificate.
     * 
     */
    @Export(name="subjectNames", type=List.class, parameters={CertificateSubjectName.class})
    private Output<List<CertificateSubjectName>> subjectNames;

    /**
     * @return The entity to be secured by the certificate.
     * 
     */
    public Output<List<CertificateSubjectName>> subjectNames() {
        return this.subjectNames;
    }
    /**
     * The date and time the certificate was created, expressed in RFC 3339 timestamp format.
     * 
     */
    @Export(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    /**
     * @return The date and time the certificate was created, expressed in RFC 3339 timestamp format.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
     * 
     */
    @Export(name="timeNotValidAfter", type=String.class, parameters={})
    private Output<String> timeNotValidAfter;

    /**
     * @return The date and time the certificate will expire, expressed in RFC 3339 timestamp format.
     * 
     */
    public Output<String> timeNotValidAfter() {
        return this.timeNotValidAfter;
    }
    /**
     * The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
     * 
     */
    @Export(name="timeNotValidBefore", type=String.class, parameters={})
    private Output<String> timeNotValidBefore;

    /**
     * @return The date and time the certificate will become valid, expressed in RFC 3339 timestamp format.
     * 
     */
    public Output<String> timeNotValidBefore() {
        return this.timeNotValidBefore;
    }
    /**
     * The version of the encoded certificate.
     * 
     */
    @Export(name="version", type=Integer.class, parameters={})
    private Output<Integer> version;

    /**
     * @return The version of the encoded certificate.
     * 
     */
    public Output<Integer> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Certificate(String name) {
        this(name, CertificateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Certificate(String name, CertificateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Certificate(String name, CertificateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Waas/certificate:Certificate", name, args == null ? CertificateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Certificate(String name, Output<String> id, @Nullable CertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Waas/certificate:Certificate", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Certificate get(String name, Output<String> id, @Nullable CertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Certificate(name, id, state, options);
    }
}
