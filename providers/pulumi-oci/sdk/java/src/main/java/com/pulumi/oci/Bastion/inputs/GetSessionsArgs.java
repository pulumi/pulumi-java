// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Bastion.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Bastion.inputs.GetSessionsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSessionsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSessionsArgs Empty = new GetSessionsArgs();

    /**
     * The unique identifier (OCID) of the bastion in which to list sessions.
     * 
     */
    @Import(name="bastionId", required=true)
    private Output<String> bastionId;

    /**
     * @return The unique identifier (OCID) of the bastion in which to list sessions.
     * 
     */
    public Output<String> bastionId() {
        return this.bastionId;
    }

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetSessionsFilterArgs>> filters;

    public Optional<Output<List<GetSessionsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The unique identifier (OCID) of the session in which to list resources.
     * 
     */
    @Import(name="sessionId")
    private @Nullable Output<String> sessionId;

    /**
     * @return The unique identifier (OCID) of the session in which to list resources.
     * 
     */
    public Optional<Output<String>> sessionId() {
        return Optional.ofNullable(this.sessionId);
    }

    /**
     * A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    @Import(name="sessionLifecycleState")
    private @Nullable Output<String> sessionLifecycleState;

    /**
     * @return A filter to return only resources their lifecycleState matches the given lifecycleState.
     * 
     */
    public Optional<Output<String>> sessionLifecycleState() {
        return Optional.ofNullable(this.sessionLifecycleState);
    }

    private GetSessionsArgs() {}

    private GetSessionsArgs(GetSessionsArgs $) {
        this.bastionId = $.bastionId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.sessionId = $.sessionId;
        this.sessionLifecycleState = $.sessionLifecycleState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSessionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSessionsArgs $;

        public Builder() {
            $ = new GetSessionsArgs();
        }

        public Builder(GetSessionsArgs defaults) {
            $ = new GetSessionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bastionId The unique identifier (OCID) of the bastion in which to list sessions.
         * 
         * @return builder
         * 
         */
        public Builder bastionId(Output<String> bastionId) {
            $.bastionId = bastionId;
            return this;
        }

        /**
         * @param bastionId The unique identifier (OCID) of the bastion in which to list sessions.
         * 
         * @return builder
         * 
         */
        public Builder bastionId(String bastionId) {
            return bastionId(Output.of(bastionId));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetSessionsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetSessionsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetSessionsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param sessionId The unique identifier (OCID) of the session in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder sessionId(@Nullable Output<String> sessionId) {
            $.sessionId = sessionId;
            return this;
        }

        /**
         * @param sessionId The unique identifier (OCID) of the session in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder sessionId(String sessionId) {
            return sessionId(Output.of(sessionId));
        }

        /**
         * @param sessionLifecycleState A filter to return only resources their lifecycleState matches the given lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder sessionLifecycleState(@Nullable Output<String> sessionLifecycleState) {
            $.sessionLifecycleState = sessionLifecycleState;
            return this;
        }

        /**
         * @param sessionLifecycleState A filter to return only resources their lifecycleState matches the given lifecycleState.
         * 
         * @return builder
         * 
         */
        public Builder sessionLifecycleState(String sessionLifecycleState) {
            return sessionLifecycleState(Output.of(sessionLifecycleState));
        }

        public GetSessionsArgs build() {
            $.bastionId = Objects.requireNonNull($.bastionId, "expected parameter 'bastionId' to be non-null");
            return $;
        }
    }

}
