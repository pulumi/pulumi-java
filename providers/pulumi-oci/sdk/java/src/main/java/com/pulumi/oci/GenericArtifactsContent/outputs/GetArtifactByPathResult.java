// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GenericArtifactsContent.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetArtifactByPathResult {
    private final String artifactId;
    private final String artifactPath;
    private final String compartmentId;
    private final String content;
    private final Map<String,Object> definedTags;
    private final String displayName;
    private final Map<String,Object> freeformTags;
    private final String id;
    private final String repositoryId;
    private final String sha256;
    private final String sizeInBytes;
    private final String source;
    private final String state;
    private final String timeCreated;
    private final String version;

    @CustomType.Constructor
    private GetArtifactByPathResult(
        @CustomType.Parameter("artifactId") String artifactId,
        @CustomType.Parameter("artifactPath") String artifactPath,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("content") String content,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("repositoryId") String repositoryId,
        @CustomType.Parameter("sha256") String sha256,
        @CustomType.Parameter("sizeInBytes") String sizeInBytes,
        @CustomType.Parameter("source") String source,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("version") String version) {
        this.artifactId = artifactId;
        this.artifactPath = artifactPath;
        this.compartmentId = compartmentId;
        this.content = content;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.repositoryId = repositoryId;
        this.sha256 = sha256;
        this.sizeInBytes = sizeInBytes;
        this.source = source;
        this.state = state;
        this.timeCreated = timeCreated;
        this.version = version;
    }

    public String artifactId() {
        return this.artifactId;
    }
    public String artifactPath() {
        return this.artifactPath;
    }
    public String compartmentId() {
        return this.compartmentId;
    }
    public String content() {
        return this.content;
    }
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    public String displayName() {
        return this.displayName;
    }
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    public String id() {
        return this.id;
    }
    public String repositoryId() {
        return this.repositoryId;
    }
    public String sha256() {
        return this.sha256;
    }
    public String sizeInBytes() {
        return this.sizeInBytes;
    }
    public String source() {
        return this.source;
    }
    public String state() {
        return this.state;
    }
    public String timeCreated() {
        return this.timeCreated;
    }
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetArtifactByPathResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String artifactId;
        private String artifactPath;
        private String compartmentId;
        private String content;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String repositoryId;
        private String sha256;
        private String sizeInBytes;
        private String source;
        private String state;
        private String timeCreated;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetArtifactByPathResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.artifactId = defaults.artifactId;
    	      this.artifactPath = defaults.artifactPath;
    	      this.compartmentId = defaults.compartmentId;
    	      this.content = defaults.content;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.repositoryId = defaults.repositoryId;
    	      this.sha256 = defaults.sha256;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.source = defaults.source;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.version = defaults.version;
        }

        public Builder artifactId(String artifactId) {
            this.artifactId = Objects.requireNonNull(artifactId);
            return this;
        }
        public Builder artifactPath(String artifactPath) {
            this.artifactPath = Objects.requireNonNull(artifactPath);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder content(String content) {
            this.content = Objects.requireNonNull(content);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder repositoryId(String repositoryId) {
            this.repositoryId = Objects.requireNonNull(repositoryId);
            return this;
        }
        public Builder sha256(String sha256) {
            this.sha256 = Objects.requireNonNull(sha256);
            return this;
        }
        public Builder sizeInBytes(String sizeInBytes) {
            this.sizeInBytes = Objects.requireNonNull(sizeInBytes);
            return this;
        }
        public Builder source(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }        public GetArtifactByPathResult build() {
            return new GetArtifactByPathResult(artifactId, artifactPath, compartmentId, content, definedTags, displayName, freeformTags, id, repositoryId, sha256, sizeInBytes, source, state, timeCreated, version);
        }
    }
}
