// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Marketplace.outputs.GetListingPublisherLink;
import com.pulumi.oci.Marketplace.outputs.GetListingPublisherLogo;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetListingPublisher {
    /**
     * @return The email address of the publisher.
     * 
     */
    private final String contactEmail;
    /**
     * @return The phone number of the publisher.
     * 
     */
    private final String contactPhone;
    /**
     * @return A description of the screenshot.
     * 
     */
    private final String description;
    /**
     * @return The address of the publisher&#39;s headquarters.
     * 
     */
    private final String hqAddress;
    /**
     * @return The unique identifier for the publisher.
     * 
     */
    private final String id;
    /**
     * @return Reference links.
     * 
     */
    private final List<GetListingPublisherLink> links;
    /**
     * @return The model for upload data for images and icons.
     * 
     */
    private final List<GetListingPublisherLogo> logos;
    /**
     * @return Text that describes the resource.
     * 
     */
    private final String name;
    /**
     * @return The publisher&#39;s website.
     * 
     */
    private final String websiteUrl;
    /**
     * @return The year the publisher&#39;s company or organization was founded.
     * 
     */
    private final String yearFounded;

    @CustomType.Constructor
    private GetListingPublisher(
        @CustomType.Parameter("contactEmail") String contactEmail,
        @CustomType.Parameter("contactPhone") String contactPhone,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("hqAddress") String hqAddress,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("links") List<GetListingPublisherLink> links,
        @CustomType.Parameter("logos") List<GetListingPublisherLogo> logos,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("websiteUrl") String websiteUrl,
        @CustomType.Parameter("yearFounded") String yearFounded) {
        this.contactEmail = contactEmail;
        this.contactPhone = contactPhone;
        this.description = description;
        this.hqAddress = hqAddress;
        this.id = id;
        this.links = links;
        this.logos = logos;
        this.name = name;
        this.websiteUrl = websiteUrl;
        this.yearFounded = yearFounded;
    }

    /**
     * @return The email address of the publisher.
     * 
     */
    public String contactEmail() {
        return this.contactEmail;
    }
    /**
     * @return The phone number of the publisher.
     * 
     */
    public String contactPhone() {
        return this.contactPhone;
    }
    /**
     * @return A description of the screenshot.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The address of the publisher&#39;s headquarters.
     * 
     */
    public String hqAddress() {
        return this.hqAddress;
    }
    /**
     * @return The unique identifier for the publisher.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Reference links.
     * 
     */
    public List<GetListingPublisherLink> links() {
        return this.links;
    }
    /**
     * @return The model for upload data for images and icons.
     * 
     */
    public List<GetListingPublisherLogo> logos() {
        return this.logos;
    }
    /**
     * @return Text that describes the resource.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The publisher&#39;s website.
     * 
     */
    public String websiteUrl() {
        return this.websiteUrl;
    }
    /**
     * @return The year the publisher&#39;s company or organization was founded.
     * 
     */
    public String yearFounded() {
        return this.yearFounded;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListingPublisher defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String contactEmail;
        private String contactPhone;
        private String description;
        private String hqAddress;
        private String id;
        private List<GetListingPublisherLink> links;
        private List<GetListingPublisherLogo> logos;
        private String name;
        private String websiteUrl;
        private String yearFounded;

        public Builder() {
    	      // Empty
        }

        public Builder(GetListingPublisher defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contactEmail = defaults.contactEmail;
    	      this.contactPhone = defaults.contactPhone;
    	      this.description = defaults.description;
    	      this.hqAddress = defaults.hqAddress;
    	      this.id = defaults.id;
    	      this.links = defaults.links;
    	      this.logos = defaults.logos;
    	      this.name = defaults.name;
    	      this.websiteUrl = defaults.websiteUrl;
    	      this.yearFounded = defaults.yearFounded;
        }

        public Builder contactEmail(String contactEmail) {
            this.contactEmail = Objects.requireNonNull(contactEmail);
            return this;
        }
        public Builder contactPhone(String contactPhone) {
            this.contactPhone = Objects.requireNonNull(contactPhone);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder hqAddress(String hqAddress) {
            this.hqAddress = Objects.requireNonNull(hqAddress);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder links(List<GetListingPublisherLink> links) {
            this.links = Objects.requireNonNull(links);
            return this;
        }
        public Builder links(GetListingPublisherLink... links) {
            return links(List.of(links));
        }
        public Builder logos(List<GetListingPublisherLogo> logos) {
            this.logos = Objects.requireNonNull(logos);
            return this;
        }
        public Builder logos(GetListingPublisherLogo... logos) {
            return logos(List.of(logos));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder websiteUrl(String websiteUrl) {
            this.websiteUrl = Objects.requireNonNull(websiteUrl);
            return this;
        }
        public Builder yearFounded(String yearFounded) {
            this.yearFounded = Objects.requireNonNull(yearFounded);
            return this;
        }        public GetListingPublisher build() {
            return new GetListingPublisher(contactEmail, contactPhone, description, hqAddress, id, links, logos, name, websiteUrl, yearFounded);
        }
    }
}
