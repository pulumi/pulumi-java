// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackendSetSessionPersistenceConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackendSetSessionPersistenceConfigurationArgs Empty = new BackendSetSessionPersistenceConfigurationArgs();

    /**
     * (Updatable) The name of the cookie used to detect a session initiated by the backend server. Use &#39;*&#39; to specify that any cookie set by the backend causes the session to persist.  Example: `example_cookie`
     * 
     */
    @Import(name="cookieName", required=true)
    private Output<String> cookieName;

    /**
     * @return (Updatable) The name of the cookie used to detect a session initiated by the backend server. Use &#39;*&#39; to specify that any cookie set by the backend causes the session to persist.  Example: `example_cookie`
     * 
     */
    public Output<String> cookieName() {
        return this.cookieName;
    }

    /**
     * (Updatable) Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
     * 
     */
    @Import(name="disableFallback")
    private @Nullable Output<Boolean> disableFallback;

    /**
     * @return (Updatable) Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
     * 
     */
    public Optional<Output<Boolean>> disableFallback() {
        return Optional.ofNullable(this.disableFallback);
    }

    private BackendSetSessionPersistenceConfigurationArgs() {}

    private BackendSetSessionPersistenceConfigurationArgs(BackendSetSessionPersistenceConfigurationArgs $) {
        this.cookieName = $.cookieName;
        this.disableFallback = $.disableFallback;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackendSetSessionPersistenceConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackendSetSessionPersistenceConfigurationArgs $;

        public Builder() {
            $ = new BackendSetSessionPersistenceConfigurationArgs();
        }

        public Builder(BackendSetSessionPersistenceConfigurationArgs defaults) {
            $ = new BackendSetSessionPersistenceConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cookieName (Updatable) The name of the cookie used to detect a session initiated by the backend server. Use &#39;*&#39; to specify that any cookie set by the backend causes the session to persist.  Example: `example_cookie`
         * 
         * @return builder
         * 
         */
        public Builder cookieName(Output<String> cookieName) {
            $.cookieName = cookieName;
            return this;
        }

        /**
         * @param cookieName (Updatable) The name of the cookie used to detect a session initiated by the backend server. Use &#39;*&#39; to specify that any cookie set by the backend causes the session to persist.  Example: `example_cookie`
         * 
         * @return builder
         * 
         */
        public Builder cookieName(String cookieName) {
            return cookieName(Output.of(cookieName));
        }

        /**
         * @param disableFallback (Updatable) Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
         * 
         * @return builder
         * 
         */
        public Builder disableFallback(@Nullable Output<Boolean> disableFallback) {
            $.disableFallback = disableFallback;
            return this;
        }

        /**
         * @param disableFallback (Updatable) Whether the load balancer is prevented from directing traffic from a persistent session client to a different backend server if the original server is unavailable. Defaults to false.  Example: `false`
         * 
         * @return builder
         * 
         */
        public Builder disableFallback(Boolean disableFallback) {
            return disableFallback(Output.of(disableFallback));
        }

        public BackendSetSessionPersistenceConfigurationArgs build() {
            $.cookieName = Objects.requireNonNull($.cookieName, "expected parameter 'cookieName' to be non-null");
            return $;
        }
    }

}
