// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetIdentityProvidersFilter;
import com.pulumi.oci.Identity.outputs.GetIdentityProvidersIdentityProvider;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIdentityProvidersResult {
    /**
     * @return The OCID of the tenancy containing the `IdentityProvider`.
     * 
     */
    private final String compartmentId;
    private final @Nullable List<GetIdentityProvidersFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of identity_providers.
     * 
     */
    private final List<GetIdentityProvidersIdentityProvider> identityProviders;
    /**
     * @return The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed. This is the name federated users see when choosing which identity provider to use when signing in to the Oracle Cloud Infrastructure Console.
     * 
     */
    private final @Nullable String name;
    /**
     * @return The protocol used for federation. Allowed value: `SAML2`.  Example: `SAML2`
     * 
     */
    private final String protocol;
    /**
     * @return The current state.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetIdentityProvidersResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetIdentityProvidersFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("identityProviders") List<GetIdentityProvidersIdentityProvider> identityProviders,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("protocol") String protocol,
        @CustomType.Parameter("state") @Nullable String state) {
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.identityProviders = identityProviders;
        this.name = name;
        this.protocol = protocol;
        this.state = state;
    }

    /**
     * @return The OCID of the tenancy containing the `IdentityProvider`.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetIdentityProvidersFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of identity_providers.
     * 
     */
    public List<GetIdentityProvidersIdentityProvider> identityProviders() {
        return this.identityProviders;
    }
    /**
     * @return The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed. This is the name federated users see when choosing which identity provider to use when signing in to the Oracle Cloud Infrastructure Console.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The protocol used for federation. Allowed value: `SAML2`.  Example: `SAML2`
     * 
     */
    public String protocol() {
        return this.protocol;
    }
    /**
     * @return The current state.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIdentityProvidersResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetIdentityProvidersFilter> filters;
        private String id;
        private List<GetIdentityProvidersIdentityProvider> identityProviders;
        private @Nullable String name;
        private String protocol;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetIdentityProvidersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.identityProviders = defaults.identityProviders;
    	      this.name = defaults.name;
    	      this.protocol = defaults.protocol;
    	      this.state = defaults.state;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetIdentityProvidersFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetIdentityProvidersFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder identityProviders(List<GetIdentityProvidersIdentityProvider> identityProviders) {
            this.identityProviders = Objects.requireNonNull(identityProviders);
            return this;
        }
        public Builder identityProviders(GetIdentityProvidersIdentityProvider... identityProviders) {
            return identityProviders(List.of(identityProviders));
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder protocol(String protocol) {
            this.protocol = Objects.requireNonNull(protocol);
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetIdentityProvidersResult build() {
            return new GetIdentityProvidersResult(compartmentId, filters, id, identityProviders, name, protocol, state);
        }
    }
}
