// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceAlias;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceCredential;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceDatabaseConnectionDetail;
import com.pulumi.oci.StackMonitoring.outputs.GetMonitoredResourceProperty;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetMonitoredResourceResult {
    /**
     * @return Monitored Resource Alias Credential Details
     * 
     */
    private final List<GetMonitoredResourceAlias> aliases;
    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    private final String compartmentId;
    /**
     * @return Monitored Resource Credential Details
     * 
     */
    private final List<GetMonitoredResourceCredential> credentials;
    /**
     * @return Connection details to connect to the database. HostName, protocol, and port should be specified.
     * 
     */
    private final List<GetMonitoredResourceDatabaseConnectionDetail> databaseConnectionDetails;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Monitored resource display name.
     * 
     */
    private final String displayName;
    private final String externalResourceId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return Monitored resource host name.
     * 
     */
    private final String hostName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored resource.
     * 
     */
    private final String id;
    /**
     * @return Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private final String managementAgentId;
    private final String monitoredResourceId;
    /**
     * @return property name
     * 
     */
    private final String name;
    /**
     * @return List of monitored resource properties
     * 
     */
    private final List<GetMonitoredResourceProperty> properties;
    /**
     * @return Time zone in the form of tz database canonical zone ID.
     * 
     */
    private final String resourceTimeZone;
    /**
     * @return Lifecycle state of the monitored resource.
     * 
     */
    private final String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    private final String tenantId;
    /**
     * @return The time the the resource was created. An RFC3339 formatted datetime string
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the the resource was updated. An RFC3339 formatted datetime string
     * 
     */
    private final String timeUpdated;
    /**
     * @return Monitored resource type
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetMonitoredResourceResult(
        @CustomType.Parameter("aliases") List<GetMonitoredResourceAlias> aliases,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("credentials") List<GetMonitoredResourceCredential> credentials,
        @CustomType.Parameter("databaseConnectionDetails") List<GetMonitoredResourceDatabaseConnectionDetail> databaseConnectionDetails,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("externalResourceId") String externalResourceId,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("hostName") String hostName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("managementAgentId") String managementAgentId,
        @CustomType.Parameter("monitoredResourceId") String monitoredResourceId,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("properties") List<GetMonitoredResourceProperty> properties,
        @CustomType.Parameter("resourceTimeZone") String resourceTimeZone,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("tenantId") String tenantId,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("type") String type) {
        this.aliases = aliases;
        this.compartmentId = compartmentId;
        this.credentials = credentials;
        this.databaseConnectionDetails = databaseConnectionDetails;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.externalResourceId = externalResourceId;
        this.freeformTags = freeformTags;
        this.hostName = hostName;
        this.id = id;
        this.managementAgentId = managementAgentId;
        this.monitoredResourceId = monitoredResourceId;
        this.name = name;
        this.properties = properties;
        this.resourceTimeZone = resourceTimeZone;
        this.state = state;
        this.systemTags = systemTags;
        this.tenantId = tenantId;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
        this.type = type;
    }

    /**
     * @return Monitored Resource Alias Credential Details
     * 
     */
    public List<GetMonitoredResourceAlias> aliases() {
        return this.aliases;
    }
    /**
     * @return Compartment Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Monitored Resource Credential Details
     * 
     */
    public List<GetMonitoredResourceCredential> credentials() {
        return this.credentials;
    }
    /**
     * @return Connection details to connect to the database. HostName, protocol, and port should be specified.
     * 
     */
    public List<GetMonitoredResourceDatabaseConnectionDetail> databaseConnectionDetails() {
        return this.databaseConnectionDetails;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Monitored resource display name.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public String externalResourceId() {
        return this.externalResourceId;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Monitored resource host name.
     * 
     */
    public String hostName() {
        return this.hostName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of monitored resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Management Agent Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String managementAgentId() {
        return this.managementAgentId;
    }
    public String monitoredResourceId() {
        return this.monitoredResourceId;
    }
    /**
     * @return property name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return List of monitored resource properties
     * 
     */
    public List<GetMonitoredResourceProperty> properties() {
        return this.properties;
    }
    /**
     * @return Time zone in the form of tz database canonical zone ID.
     * 
     */
    public String resourceTimeZone() {
        return this.resourceTimeZone;
    }
    /**
     * @return Lifecycle state of the monitored resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Tenancy Identifier [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }
    /**
     * @return The time the the resource was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the the resource was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Monitored resource type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitoredResourceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetMonitoredResourceAlias> aliases;
        private String compartmentId;
        private List<GetMonitoredResourceCredential> credentials;
        private List<GetMonitoredResourceDatabaseConnectionDetail> databaseConnectionDetails;
        private Map<String,Object> definedTags;
        private String displayName;
        private String externalResourceId;
        private Map<String,Object> freeformTags;
        private String hostName;
        private String id;
        private String managementAgentId;
        private String monitoredResourceId;
        private String name;
        private List<GetMonitoredResourceProperty> properties;
        private String resourceTimeZone;
        private String state;
        private Map<String,Object> systemTags;
        private String tenantId;
        private String timeCreated;
        private String timeUpdated;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMonitoredResourceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.aliases = defaults.aliases;
    	      this.compartmentId = defaults.compartmentId;
    	      this.credentials = defaults.credentials;
    	      this.databaseConnectionDetails = defaults.databaseConnectionDetails;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.externalResourceId = defaults.externalResourceId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostName = defaults.hostName;
    	      this.id = defaults.id;
    	      this.managementAgentId = defaults.managementAgentId;
    	      this.monitoredResourceId = defaults.monitoredResourceId;
    	      this.name = defaults.name;
    	      this.properties = defaults.properties;
    	      this.resourceTimeZone = defaults.resourceTimeZone;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.tenantId = defaults.tenantId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.type = defaults.type;
        }

        public Builder aliases(List<GetMonitoredResourceAlias> aliases) {
            this.aliases = Objects.requireNonNull(aliases);
            return this;
        }
        public Builder aliases(GetMonitoredResourceAlias... aliases) {
            return aliases(List.of(aliases));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder credentials(List<GetMonitoredResourceCredential> credentials) {
            this.credentials = Objects.requireNonNull(credentials);
            return this;
        }
        public Builder credentials(GetMonitoredResourceCredential... credentials) {
            return credentials(List.of(credentials));
        }
        public Builder databaseConnectionDetails(List<GetMonitoredResourceDatabaseConnectionDetail> databaseConnectionDetails) {
            this.databaseConnectionDetails = Objects.requireNonNull(databaseConnectionDetails);
            return this;
        }
        public Builder databaseConnectionDetails(GetMonitoredResourceDatabaseConnectionDetail... databaseConnectionDetails) {
            return databaseConnectionDetails(List.of(databaseConnectionDetails));
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder externalResourceId(String externalResourceId) {
            this.externalResourceId = Objects.requireNonNull(externalResourceId);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder hostName(String hostName) {
            this.hostName = Objects.requireNonNull(hostName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder managementAgentId(String managementAgentId) {
            this.managementAgentId = Objects.requireNonNull(managementAgentId);
            return this;
        }
        public Builder monitoredResourceId(String monitoredResourceId) {
            this.monitoredResourceId = Objects.requireNonNull(monitoredResourceId);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder properties(List<GetMonitoredResourceProperty> properties) {
            this.properties = Objects.requireNonNull(properties);
            return this;
        }
        public Builder properties(GetMonitoredResourceProperty... properties) {
            return properties(List.of(properties));
        }
        public Builder resourceTimeZone(String resourceTimeZone) {
            this.resourceTimeZone = Objects.requireNonNull(resourceTimeZone);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetMonitoredResourceResult build() {
            return new GetMonitoredResourceResult(aliases, compartmentId, credentials, databaseConnectionDetails, definedTags, displayName, externalResourceId, freeformTags, hostName, id, managementAgentId, monitoredResourceId, name, properties, resourceTimeZone, state, systemTags, tenantId, timeCreated, timeUpdated, type);
        }
    }
}
