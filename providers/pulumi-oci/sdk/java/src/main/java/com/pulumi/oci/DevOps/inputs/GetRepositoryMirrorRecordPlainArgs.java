// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetRepositoryMirrorRecordPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRepositoryMirrorRecordPlainArgs Empty = new GetRepositoryMirrorRecordPlainArgs();

    /**
     * The field of mirror record type. Only one mirror record type can be provided: current - The current mirror record. lastSuccessful - The last successful mirror record.
     * 
     */
    @Import(name="mirrorRecordType", required=true)
    private String mirrorRecordType;

    /**
     * @return The field of mirror record type. Only one mirror record type can be provided: current - The current mirror record. lastSuccessful - The last successful mirror record.
     * 
     */
    public String mirrorRecordType() {
        return this.mirrorRecordType;
    }

    /**
     * Unique repository identifier.
     * 
     */
    @Import(name="repositoryId", required=true)
    private String repositoryId;

    /**
     * @return Unique repository identifier.
     * 
     */
    public String repositoryId() {
        return this.repositoryId;
    }

    private GetRepositoryMirrorRecordPlainArgs() {}

    private GetRepositoryMirrorRecordPlainArgs(GetRepositoryMirrorRecordPlainArgs $) {
        this.mirrorRecordType = $.mirrorRecordType;
        this.repositoryId = $.repositoryId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRepositoryMirrorRecordPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRepositoryMirrorRecordPlainArgs $;

        public Builder() {
            $ = new GetRepositoryMirrorRecordPlainArgs();
        }

        public Builder(GetRepositoryMirrorRecordPlainArgs defaults) {
            $ = new GetRepositoryMirrorRecordPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param mirrorRecordType The field of mirror record type. Only one mirror record type can be provided: current - The current mirror record. lastSuccessful - The last successful mirror record.
         * 
         * @return builder
         * 
         */
        public Builder mirrorRecordType(String mirrorRecordType) {
            $.mirrorRecordType = mirrorRecordType;
            return this;
        }

        /**
         * @param repositoryId Unique repository identifier.
         * 
         * @return builder
         * 
         */
        public Builder repositoryId(String repositoryId) {
            $.repositoryId = repositoryId;
            return this;
        }

        public GetRepositoryMirrorRecordPlainArgs build() {
            $.mirrorRecordType = Objects.requireNonNull($.mirrorRecordType, "expected parameter 'mirrorRecordType' to be non-null");
            $.repositoryId = Objects.requireNonNull($.repositoryId, "expected parameter 'repositoryId' to be non-null");
            return $;
        }
    }

}
