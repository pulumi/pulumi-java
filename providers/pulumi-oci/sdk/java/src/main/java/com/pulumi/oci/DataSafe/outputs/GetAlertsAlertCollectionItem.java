// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAlertsAlertCollectionItem {
    private final String alertId;
    /**
     * @return Type of the alert. Indicates the Data Safe feature triggering the alert.
     * 
     */
    private final String alertType;
    /**
     * @return A comment for the alert. Entered by the user.
     * 
     */
    private final String comment;
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The description of the alert.
     * 
     */
    private final String description;
    /**
     * @return The display name of the alert.
     * 
     */
    private final String displayName;
    /**
     * @return Map that contains maps of values. Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}`
     * 
     */
    private final Map<String,Object> featureDetails;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return A filter to return alert by it&#39;s OCID.
     * 
     */
    private final String id;
    /**
     * @return The operation (event) that triggered alert.
     * 
     */
    private final String operation;
    /**
     * @return The result of the operation (event) that triggered alert.
     * 
     */
    private final String operationStatus;
    /**
     * @return Creation date and time of the operation that triggered alert, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private final String operationTime;
    /**
     * @return The OCID of the policy that triggered alert.
     * 
     */
    private final String policyId;
    /**
     * @return The resource endpoint that triggered the alert.
     * 
     */
    private final String resourceName;
    /**
     * @return Severity level of the alert.
     * 
     */
    private final String severity;
    /**
     * @return The current state of the alert.
     * 
     */
    private final String state;
    /**
     * @return The status of the alert.
     * 
     */
    private final String status;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return Array of OCIDs of the target database which are associated with the alert.
     * 
     */
    private final List<String> targetIds;
    /**
     * @return Array of names of the target database.
     * 
     */
    private final List<String> targetNames;
    /**
     * @return Creation date and time of the alert, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private final String timeCreated;
    /**
     * @return Last date and time the alert was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetAlertsAlertCollectionItem(
        @CustomType.Parameter("alertId") String alertId,
        @CustomType.Parameter("alertType") String alertType,
        @CustomType.Parameter("comment") String comment,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("featureDetails") Map<String,Object> featureDetails,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("operation") String operation,
        @CustomType.Parameter("operationStatus") String operationStatus,
        @CustomType.Parameter("operationTime") String operationTime,
        @CustomType.Parameter("policyId") String policyId,
        @CustomType.Parameter("resourceName") String resourceName,
        @CustomType.Parameter("severity") String severity,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("targetIds") List<String> targetIds,
        @CustomType.Parameter("targetNames") List<String> targetNames,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.alertId = alertId;
        this.alertType = alertType;
        this.comment = comment;
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.description = description;
        this.displayName = displayName;
        this.featureDetails = featureDetails;
        this.freeformTags = freeformTags;
        this.id = id;
        this.operation = operation;
        this.operationStatus = operationStatus;
        this.operationTime = operationTime;
        this.policyId = policyId;
        this.resourceName = resourceName;
        this.severity = severity;
        this.state = state;
        this.status = status;
        this.systemTags = systemTags;
        this.targetIds = targetIds;
        this.targetNames = targetNames;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    public String alertId() {
        return this.alertId;
    }
    /**
     * @return Type of the alert. Indicates the Data Safe feature triggering the alert.
     * 
     */
    public String alertType() {
        return this.alertType;
    }
    /**
     * @return A comment for the alert. Entered by the user.
     * 
     */
    public String comment() {
        return this.comment;
    }
    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description of the alert.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of the alert.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Map that contains maps of values. Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}`
     * 
     */
    public Map<String,Object> featureDetails() {
        return this.featureDetails;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return A filter to return alert by it&#39;s OCID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The operation (event) that triggered alert.
     * 
     */
    public String operation() {
        return this.operation;
    }
    /**
     * @return The result of the operation (event) that triggered alert.
     * 
     */
    public String operationStatus() {
        return this.operationStatus;
    }
    /**
     * @return Creation date and time of the operation that triggered alert, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String operationTime() {
        return this.operationTime;
    }
    /**
     * @return The OCID of the policy that triggered alert.
     * 
     */
    public String policyId() {
        return this.policyId;
    }
    /**
     * @return The resource endpoint that triggered the alert.
     * 
     */
    public String resourceName() {
        return this.resourceName;
    }
    /**
     * @return Severity level of the alert.
     * 
     */
    public String severity() {
        return this.severity;
    }
    /**
     * @return The current state of the alert.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The status of the alert.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Array of OCIDs of the target database which are associated with the alert.
     * 
     */
    public List<String> targetIds() {
        return this.targetIds;
    }
    /**
     * @return Array of names of the target database.
     * 
     */
    public List<String> targetNames() {
        return this.targetNames;
    }
    /**
     * @return Creation date and time of the alert, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Last date and time the alert was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAlertsAlertCollectionItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String alertId;
        private String alertType;
        private String comment;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Map<String,Object> featureDetails;
        private Map<String,Object> freeformTags;
        private String id;
        private String operation;
        private String operationStatus;
        private String operationTime;
        private String policyId;
        private String resourceName;
        private String severity;
        private String state;
        private String status;
        private Map<String,Object> systemTags;
        private List<String> targetIds;
        private List<String> targetNames;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAlertsAlertCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertId = defaults.alertId;
    	      this.alertType = defaults.alertType;
    	      this.comment = defaults.comment;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.featureDetails = defaults.featureDetails;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.operation = defaults.operation;
    	      this.operationStatus = defaults.operationStatus;
    	      this.operationTime = defaults.operationTime;
    	      this.policyId = defaults.policyId;
    	      this.resourceName = defaults.resourceName;
    	      this.severity = defaults.severity;
    	      this.state = defaults.state;
    	      this.status = defaults.status;
    	      this.systemTags = defaults.systemTags;
    	      this.targetIds = defaults.targetIds;
    	      this.targetNames = defaults.targetNames;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder alertId(String alertId) {
            this.alertId = Objects.requireNonNull(alertId);
            return this;
        }
        public Builder alertType(String alertType) {
            this.alertType = Objects.requireNonNull(alertType);
            return this;
        }
        public Builder comment(String comment) {
            this.comment = Objects.requireNonNull(comment);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder featureDetails(Map<String,Object> featureDetails) {
            this.featureDetails = Objects.requireNonNull(featureDetails);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder operation(String operation) {
            this.operation = Objects.requireNonNull(operation);
            return this;
        }
        public Builder operationStatus(String operationStatus) {
            this.operationStatus = Objects.requireNonNull(operationStatus);
            return this;
        }
        public Builder operationTime(String operationTime) {
            this.operationTime = Objects.requireNonNull(operationTime);
            return this;
        }
        public Builder policyId(String policyId) {
            this.policyId = Objects.requireNonNull(policyId);
            return this;
        }
        public Builder resourceName(String resourceName) {
            this.resourceName = Objects.requireNonNull(resourceName);
            return this;
        }
        public Builder severity(String severity) {
            this.severity = Objects.requireNonNull(severity);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder targetIds(List<String> targetIds) {
            this.targetIds = Objects.requireNonNull(targetIds);
            return this;
        }
        public Builder targetIds(String... targetIds) {
            return targetIds(List.of(targetIds));
        }
        public Builder targetNames(List<String> targetNames) {
            this.targetNames = Objects.requireNonNull(targetNames);
            return this;
        }
        public Builder targetNames(String... targetNames) {
            return targetNames(List.of(targetNames));
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetAlertsAlertCollectionItem build() {
            return new GetAlertsAlertCollectionItem(alertId, alertType, comment, compartmentId, definedTags, description, displayName, featureDetails, freeformTags, id, operation, operationStatus, operationTime, policyId, resourceName, severity, state, status, systemTags, targetIds, targetNames, timeCreated, timeUpdated);
        }
    }
}
