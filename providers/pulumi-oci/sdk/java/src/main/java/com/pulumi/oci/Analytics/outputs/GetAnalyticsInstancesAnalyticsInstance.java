// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Analytics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Analytics.outputs.GetAnalyticsInstancesAnalyticsInstanceCapacity;
import com.pulumi.oci.Analytics.outputs.GetAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetail;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetAnalyticsInstancesAnalyticsInstance {
    /**
     * @return Service instance capacity metadata (e.g.: OLPU count, number of users, ...etc...).
     * 
     */
    private final List<GetAnalyticsInstancesAnalyticsInstanceCapacity> capacities;
    /**
     * @return The OCID of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Description of the vanity url.
     * 
     */
    private final String description;
    /**
     * @return Email address receiving notifications.
     * 
     */
    private final String emailNotification;
    /**
     * @return A filter to only return resources matching the feature set. Values are case-insensitive.
     * 
     */
    private final String featureSet;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The Virtual Cloud Network OCID.
     * 
     */
    private final String id;
    private final String idcsAccessToken;
    /**
     * @return The license used for the service.
     * 
     */
    private final String licenseType;
    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    private final String name;
    /**
     * @return Base representation of a network endpoint.
     * 
     */
    private final List<GetAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetail> networkEndpointDetails;
    /**
     * @return Map of PrivateAccessChannel unique identifier key as KEY and PrivateAccessChannel Object as VALUE.
     * 
     */
    private final Map<String,Object> privateAccessChannels;
    /**
     * @return URL of the Analytics service.
     * 
     */
    private final String serviceUrl;
    /**
     * @return A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
     * 
     */
    private final String state;
    /**
     * @return The date and time the instance was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private final String timeCreated;
    /**
     * @return The date and time the instance was last updated (in the format defined by RFC3339). This timestamp represents updates made through this API. External events do not influence it.
     * 
     */
    private final String timeUpdated;
    /**
     * @return Map of VanityUrl unique identifier key as KEY and VanityUrl Object as VALUE.
     * 
     */
    private final Map<String,Object> vanityUrlDetails;

    @CustomType.Constructor
    private GetAnalyticsInstancesAnalyticsInstance(
        @CustomType.Parameter("capacities") List<GetAnalyticsInstancesAnalyticsInstanceCapacity> capacities,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("emailNotification") String emailNotification,
        @CustomType.Parameter("featureSet") String featureSet,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("idcsAccessToken") String idcsAccessToken,
        @CustomType.Parameter("licenseType") String licenseType,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("networkEndpointDetails") List<GetAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetail> networkEndpointDetails,
        @CustomType.Parameter("privateAccessChannels") Map<String,Object> privateAccessChannels,
        @CustomType.Parameter("serviceUrl") String serviceUrl,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("vanityUrlDetails") Map<String,Object> vanityUrlDetails) {
        this.capacities = capacities;
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.description = description;
        this.emailNotification = emailNotification;
        this.featureSet = featureSet;
        this.freeformTags = freeformTags;
        this.id = id;
        this.idcsAccessToken = idcsAccessToken;
        this.licenseType = licenseType;
        this.name = name;
        this.networkEndpointDetails = networkEndpointDetails;
        this.privateAccessChannels = privateAccessChannels;
        this.serviceUrl = serviceUrl;
        this.state = state;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
        this.vanityUrlDetails = vanityUrlDetails;
    }

    /**
     * @return Service instance capacity metadata (e.g.: OLPU count, number of users, ...etc...).
     * 
     */
    public List<GetAnalyticsInstancesAnalyticsInstanceCapacity> capacities() {
        return this.capacities;
    }
    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description of the vanity url.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Email address receiving notifications.
     * 
     */
    public String emailNotification() {
        return this.emailNotification;
    }
    /**
     * @return A filter to only return resources matching the feature set. Values are case-insensitive.
     * 
     */
    public String featureSet() {
        return this.featureSet;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The Virtual Cloud Network OCID.
     * 
     */
    public String id() {
        return this.id;
    }
    public String idcsAccessToken() {
        return this.idcsAccessToken;
    }
    /**
     * @return The license used for the service.
     * 
     */
    public String licenseType() {
        return this.licenseType;
    }
    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Base representation of a network endpoint.
     * 
     */
    public List<GetAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetail> networkEndpointDetails() {
        return this.networkEndpointDetails;
    }
    /**
     * @return Map of PrivateAccessChannel unique identifier key as KEY and PrivateAccessChannel Object as VALUE.
     * 
     */
    public Map<String,Object> privateAccessChannels() {
        return this.privateAccessChannels;
    }
    /**
     * @return URL of the Analytics service.
     * 
     */
    public String serviceUrl() {
        return this.serviceUrl;
    }
    /**
     * @return A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the instance was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the instance was last updated (in the format defined by RFC3339). This timestamp represents updates made through this API. External events do not influence it.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Map of VanityUrl unique identifier key as KEY and VanityUrl Object as VALUE.
     * 
     */
    public Map<String,Object> vanityUrlDetails() {
        return this.vanityUrlDetails;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAnalyticsInstancesAnalyticsInstance defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetAnalyticsInstancesAnalyticsInstanceCapacity> capacities;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String emailNotification;
        private String featureSet;
        private Map<String,Object> freeformTags;
        private String id;
        private String idcsAccessToken;
        private String licenseType;
        private String name;
        private List<GetAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetail> networkEndpointDetails;
        private Map<String,Object> privateAccessChannels;
        private String serviceUrl;
        private String state;
        private String timeCreated;
        private String timeUpdated;
        private Map<String,Object> vanityUrlDetails;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAnalyticsInstancesAnalyticsInstance defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.capacities = defaults.capacities;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.emailNotification = defaults.emailNotification;
    	      this.featureSet = defaults.featureSet;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.idcsAccessToken = defaults.idcsAccessToken;
    	      this.licenseType = defaults.licenseType;
    	      this.name = defaults.name;
    	      this.networkEndpointDetails = defaults.networkEndpointDetails;
    	      this.privateAccessChannels = defaults.privateAccessChannels;
    	      this.serviceUrl = defaults.serviceUrl;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.vanityUrlDetails = defaults.vanityUrlDetails;
        }

        public Builder capacities(List<GetAnalyticsInstancesAnalyticsInstanceCapacity> capacities) {
            this.capacities = Objects.requireNonNull(capacities);
            return this;
        }
        public Builder capacities(GetAnalyticsInstancesAnalyticsInstanceCapacity... capacities) {
            return capacities(List.of(capacities));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder emailNotification(String emailNotification) {
            this.emailNotification = Objects.requireNonNull(emailNotification);
            return this;
        }
        public Builder featureSet(String featureSet) {
            this.featureSet = Objects.requireNonNull(featureSet);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder idcsAccessToken(String idcsAccessToken) {
            this.idcsAccessToken = Objects.requireNonNull(idcsAccessToken);
            return this;
        }
        public Builder licenseType(String licenseType) {
            this.licenseType = Objects.requireNonNull(licenseType);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder networkEndpointDetails(List<GetAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetail> networkEndpointDetails) {
            this.networkEndpointDetails = Objects.requireNonNull(networkEndpointDetails);
            return this;
        }
        public Builder networkEndpointDetails(GetAnalyticsInstancesAnalyticsInstanceNetworkEndpointDetail... networkEndpointDetails) {
            return networkEndpointDetails(List.of(networkEndpointDetails));
        }
        public Builder privateAccessChannels(Map<String,Object> privateAccessChannels) {
            this.privateAccessChannels = Objects.requireNonNull(privateAccessChannels);
            return this;
        }
        public Builder serviceUrl(String serviceUrl) {
            this.serviceUrl = Objects.requireNonNull(serviceUrl);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder vanityUrlDetails(Map<String,Object> vanityUrlDetails) {
            this.vanityUrlDetails = Objects.requireNonNull(vanityUrlDetails);
            return this;
        }        public GetAnalyticsInstancesAnalyticsInstance build() {
            return new GetAnalyticsInstancesAnalyticsInstance(capacities, compartmentId, definedTags, description, emailNotification, featureSet, freeformTags, id, idcsAccessToken, licenseType, name, networkEndpointDetails, privateAccessChannels, serviceUrl, state, timeCreated, timeUpdated, vanityUrlDetails);
        }
    }
}
