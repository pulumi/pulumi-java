// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Optimizer.outputs.GetProfileLevelsProfileLevelCollectionItemMetric;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProfileLevelsProfileLevelCollectionItem {
    /**
     * @return The default aggregation interval (in days) for profiles using this profile level.
     * 
     */
    private final Integer defaultInterval;
    /**
     * @return The metrics that will be evaluated by profiles using this profile level.
     * 
     */
    private final List<GetProfileLevelsProfileLevelCollectionItemMetric> metrics;
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    private final String name;
    /**
     * @return Optional. A filter that returns results that match the recommendation name specified.
     * 
     */
    private final String recommendationName;
    /**
     * @return The date and time the category details were created, in the format defined by RFC3339.
     * 
     */
    private final String timeCreated;
    /**
     * @return The date and time the category details were last updated, in the format defined by RFC3339.
     * 
     */
    private final String timeUpdated;
    /**
     * @return An array of aggregation intervals (in days) allowed for profiles using this profile level.
     * 
     */
    private final List<Integer> validIntervals;

    @CustomType.Constructor
    private GetProfileLevelsProfileLevelCollectionItem(
        @CustomType.Parameter("defaultInterval") Integer defaultInterval,
        @CustomType.Parameter("metrics") List<GetProfileLevelsProfileLevelCollectionItemMetric> metrics,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("recommendationName") String recommendationName,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("validIntervals") List<Integer> validIntervals) {
        this.defaultInterval = defaultInterval;
        this.metrics = metrics;
        this.name = name;
        this.recommendationName = recommendationName;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
        this.validIntervals = validIntervals;
    }

    /**
     * @return The default aggregation interval (in days) for profiles using this profile level.
     * 
     */
    public Integer defaultInterval() {
        return this.defaultInterval;
    }
    /**
     * @return The metrics that will be evaluated by profiles using this profile level.
     * 
     */
    public List<GetProfileLevelsProfileLevelCollectionItemMetric> metrics() {
        return this.metrics;
    }
    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Optional. A filter that returns results that match the recommendation name specified.
     * 
     */
    public String recommendationName() {
        return this.recommendationName;
    }
    /**
     * @return The date and time the category details were created, in the format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the category details were last updated, in the format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return An array of aggregation intervals (in days) allowed for profiles using this profile level.
     * 
     */
    public List<Integer> validIntervals() {
        return this.validIntervals;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProfileLevelsProfileLevelCollectionItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer defaultInterval;
        private List<GetProfileLevelsProfileLevelCollectionItemMetric> metrics;
        private String name;
        private String recommendationName;
        private String timeCreated;
        private String timeUpdated;
        private List<Integer> validIntervals;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProfileLevelsProfileLevelCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultInterval = defaults.defaultInterval;
    	      this.metrics = defaults.metrics;
    	      this.name = defaults.name;
    	      this.recommendationName = defaults.recommendationName;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.validIntervals = defaults.validIntervals;
        }

        public Builder defaultInterval(Integer defaultInterval) {
            this.defaultInterval = Objects.requireNonNull(defaultInterval);
            return this;
        }
        public Builder metrics(List<GetProfileLevelsProfileLevelCollectionItemMetric> metrics) {
            this.metrics = Objects.requireNonNull(metrics);
            return this;
        }
        public Builder metrics(GetProfileLevelsProfileLevelCollectionItemMetric... metrics) {
            return metrics(List.of(metrics));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder recommendationName(String recommendationName) {
            this.recommendationName = Objects.requireNonNull(recommendationName);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder validIntervals(List<Integer> validIntervals) {
            this.validIntervals = Objects.requireNonNull(validIntervals);
            return this;
        }
        public Builder validIntervals(Integer... validIntervals) {
            return validIntervals(List.of(validIntervals));
        }        public GetProfileLevelsProfileLevelCollectionItem build() {
            return new GetProfileLevelsProfileLevelCollectionItem(defaultInterval, metrics, name, recommendationName, timeCreated, timeUpdated, validIntervals);
        }
    }
}
