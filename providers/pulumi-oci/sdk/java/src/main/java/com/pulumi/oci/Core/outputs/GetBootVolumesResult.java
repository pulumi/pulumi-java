// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetBootVolumesBootVolume;
import com.pulumi.oci.Core.outputs.GetBootVolumesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBootVolumesResult {
    /**
     * @return The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private final String availabilityDomain;
    /**
     * @return The list of boot_volumes.
     * 
     */
    private final List<GetBootVolumesBootVolume> bootVolumes;
    /**
     * @return The OCID of the compartment that contains the boot volume.
     * 
     */
    private final String compartmentId;
    private final @Nullable List<GetBootVolumesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The OCID of the source volume group.
     * 
     */
    private final @Nullable String volumeGroupId;

    @CustomType.Constructor
    private GetBootVolumesResult(
        @CustomType.Parameter("availabilityDomain") String availabilityDomain,
        @CustomType.Parameter("bootVolumes") List<GetBootVolumesBootVolume> bootVolumes,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetBootVolumesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("volumeGroupId") @Nullable String volumeGroupId) {
        this.availabilityDomain = availabilityDomain;
        this.bootVolumes = bootVolumes;
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.volumeGroupId = volumeGroupId;
    }

    /**
     * @return The availability domain of the boot volume replica.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The list of boot_volumes.
     * 
     */
    public List<GetBootVolumesBootVolume> bootVolumes() {
        return this.bootVolumes;
    }
    /**
     * @return The OCID of the compartment that contains the boot volume.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetBootVolumesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the source volume group.
     * 
     */
    public Optional<String> volumeGroupId() {
        return Optional.ofNullable(this.volumeGroupId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBootVolumesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String availabilityDomain;
        private List<GetBootVolumesBootVolume> bootVolumes;
        private String compartmentId;
        private @Nullable List<GetBootVolumesFilter> filters;
        private String id;
        private @Nullable String volumeGroupId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBootVolumesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.bootVolumes = defaults.bootVolumes;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.volumeGroupId = defaults.volumeGroupId;
        }

        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        public Builder bootVolumes(List<GetBootVolumesBootVolume> bootVolumes) {
            this.bootVolumes = Objects.requireNonNull(bootVolumes);
            return this;
        }
        public Builder bootVolumes(GetBootVolumesBootVolume... bootVolumes) {
            return bootVolumes(List.of(bootVolumes));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetBootVolumesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetBootVolumesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder volumeGroupId(@Nullable String volumeGroupId) {
            this.volumeGroupId = volumeGroupId;
            return this;
        }        public GetBootVolumesResult build() {
            return new GetBootVolumesResult(availabilityDomain, bootVolumes, compartmentId, filters, id, volumeGroupId);
        }
    }
}
