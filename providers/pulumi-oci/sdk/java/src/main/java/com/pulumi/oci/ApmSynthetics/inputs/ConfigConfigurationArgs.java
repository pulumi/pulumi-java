// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ApmSynthetics.inputs.ConfigConfigurationNetworkConfigurationArgs;
import com.pulumi.oci.ApmSynthetics.inputs.ConfigConfigurationReqAuthenticationDetailsArgs;
import com.pulumi.oci.ApmSynthetics.inputs.ConfigConfigurationRequestHeaderArgs;
import com.pulumi.oci.ApmSynthetics.inputs.ConfigConfigurationRequestQueryParamArgs;
import com.pulumi.oci.ApmSynthetics.inputs.ConfigConfigurationVerifyTextArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConfigConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConfigConfigurationArgs Empty = new ConfigConfigurationArgs();

    /**
     * (Updatable) Type of configuration.
     * 
     */
    @Import(name="configType")
    private @Nullable Output<String> configType;

    /**
     * @return (Updatable) Type of configuration.
     * 
     */
    public Optional<Output<String>> configType() {
        return Optional.ofNullable(this.configType);
    }

    /**
     * (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
     * 
     */
    @Import(name="isCertificateValidationEnabled")
    private @Nullable Output<Boolean> isCertificateValidationEnabled;

    /**
     * @return (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
     * 
     */
    public Optional<Output<Boolean>> isCertificateValidationEnabled() {
        return Optional.ofNullable(this.isCertificateValidationEnabled);
    }

    /**
     * (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
     * 
     */
    @Import(name="isFailureRetried")
    private @Nullable Output<Boolean> isFailureRetried;

    /**
     * @return (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
     * 
     */
    public Optional<Output<Boolean>> isFailureRetried() {
        return Optional.ofNullable(this.isFailureRetried);
    }

    /**
     * (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
     * 
     */
    @Import(name="isRedirectionEnabled")
    private @Nullable Output<Boolean> isRedirectionEnabled;

    /**
     * @return (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
     * 
     */
    public Optional<Output<Boolean>> isRedirectionEnabled() {
        return Optional.ofNullable(this.isRedirectionEnabled);
    }

    /**
     * (Updatable) Details of the network configuration.
     * 
     */
    @Import(name="networkConfiguration")
    private @Nullable Output<ConfigConfigurationNetworkConfigurationArgs> networkConfiguration;

    /**
     * @return (Updatable) Details of the network configuration.
     * 
     */
    public Optional<Output<ConfigConfigurationNetworkConfigurationArgs>> networkConfiguration() {
        return Optional.ofNullable(this.networkConfiguration);
    }

    /**
     * (Updatable) Details for request HTTP authentication.
     * 
     */
    @Import(name="reqAuthenticationDetails")
    private @Nullable Output<ConfigConfigurationReqAuthenticationDetailsArgs> reqAuthenticationDetails;

    /**
     * @return (Updatable) Details for request HTTP authentication.
     * 
     */
    public Optional<Output<ConfigConfigurationReqAuthenticationDetailsArgs>> reqAuthenticationDetails() {
        return Optional.ofNullable(this.reqAuthenticationDetails);
    }

    /**
     * (Updatable) Request http authentication scheme.
     * 
     */
    @Import(name="reqAuthenticationScheme")
    private @Nullable Output<String> reqAuthenticationScheme;

    /**
     * @return (Updatable) Request http authentication scheme.
     * 
     */
    public Optional<Output<String>> reqAuthenticationScheme() {
        return Optional.ofNullable(this.reqAuthenticationScheme);
    }

    /**
     * (Updatable) List of request headers. Example: `[{&#34;headerName&#34;: &#34;content-type&#34;, &#34;headerValue&#34;:&#34;json&#34;}]`
     * 
     */
    @Import(name="requestHeaders")
    private @Nullable Output<List<ConfigConfigurationRequestHeaderArgs>> requestHeaders;

    /**
     * @return (Updatable) List of request headers. Example: `[{&#34;headerName&#34;: &#34;content-type&#34;, &#34;headerValue&#34;:&#34;json&#34;}]`
     * 
     */
    public Optional<Output<List<ConfigConfigurationRequestHeaderArgs>>> requestHeaders() {
        return Optional.ofNullable(this.requestHeaders);
    }

    /**
     * (Updatable) Request HTTP method.
     * 
     */
    @Import(name="requestMethod")
    private @Nullable Output<String> requestMethod;

    /**
     * @return (Updatable) Request HTTP method.
     * 
     */
    public Optional<Output<String>> requestMethod() {
        return Optional.ofNullable(this.requestMethod);
    }

    /**
     * (Updatable) Request post body content.
     * 
     */
    @Import(name="requestPostBody")
    private @Nullable Output<String> requestPostBody;

    /**
     * @return (Updatable) Request post body content.
     * 
     */
    public Optional<Output<String>> requestPostBody() {
        return Optional.ofNullable(this.requestPostBody);
    }

    /**
     * (Updatable) List of request query params. Example: `[{&#34;paramName&#34;: &#34;sortOrder&#34;, &#34;paramValue&#34;: &#34;asc&#34;}]`
     * 
     */
    @Import(name="requestQueryParams")
    private @Nullable Output<List<ConfigConfigurationRequestQueryParamArgs>> requestQueryParams;

    /**
     * @return (Updatable) List of request query params. Example: `[{&#34;paramName&#34;: &#34;sortOrder&#34;, &#34;paramValue&#34;: &#34;asc&#34;}]`
     * 
     */
    public Optional<Output<List<ConfigConfigurationRequestQueryParamArgs>>> requestQueryParams() {
        return Optional.ofNullable(this.requestQueryParams);
    }

    /**
     * (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
     * 
     */
    @Import(name="verifyResponseCodes")
    private @Nullable Output<List<String>> verifyResponseCodes;

    /**
     * @return (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
     * 
     */
    public Optional<Output<List<String>>> verifyResponseCodes() {
        return Optional.ofNullable(this.verifyResponseCodes);
    }

    /**
     * (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
     * 
     */
    @Import(name="verifyResponseContent")
    private @Nullable Output<String> verifyResponseContent;

    /**
     * @return (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
     * 
     */
    public Optional<Output<String>> verifyResponseContent() {
        return Optional.ofNullable(this.verifyResponseContent);
    }

    /**
     * (Updatable) Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
     * 
     */
    @Import(name="verifyTexts")
    private @Nullable Output<List<ConfigConfigurationVerifyTextArgs>> verifyTexts;

    /**
     * @return (Updatable) Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
     * 
     */
    public Optional<Output<List<ConfigConfigurationVerifyTextArgs>>> verifyTexts() {
        return Optional.ofNullable(this.verifyTexts);
    }

    private ConfigConfigurationArgs() {}

    private ConfigConfigurationArgs(ConfigConfigurationArgs $) {
        this.configType = $.configType;
        this.isCertificateValidationEnabled = $.isCertificateValidationEnabled;
        this.isFailureRetried = $.isFailureRetried;
        this.isRedirectionEnabled = $.isRedirectionEnabled;
        this.networkConfiguration = $.networkConfiguration;
        this.reqAuthenticationDetails = $.reqAuthenticationDetails;
        this.reqAuthenticationScheme = $.reqAuthenticationScheme;
        this.requestHeaders = $.requestHeaders;
        this.requestMethod = $.requestMethod;
        this.requestPostBody = $.requestPostBody;
        this.requestQueryParams = $.requestQueryParams;
        this.verifyResponseCodes = $.verifyResponseCodes;
        this.verifyResponseContent = $.verifyResponseContent;
        this.verifyTexts = $.verifyTexts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConfigConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConfigConfigurationArgs $;

        public Builder() {
            $ = new ConfigConfigurationArgs();
        }

        public Builder(ConfigConfigurationArgs defaults) {
            $ = new ConfigConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configType (Updatable) Type of configuration.
         * 
         * @return builder
         * 
         */
        public Builder configType(@Nullable Output<String> configType) {
            $.configType = configType;
            return this;
        }

        /**
         * @param configType (Updatable) Type of configuration.
         * 
         * @return builder
         * 
         */
        public Builder configType(String configType) {
            return configType(Output.of(configType));
        }

        /**
         * @param isCertificateValidationEnabled (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
         * 
         * @return builder
         * 
         */
        public Builder isCertificateValidationEnabled(@Nullable Output<Boolean> isCertificateValidationEnabled) {
            $.isCertificateValidationEnabled = isCertificateValidationEnabled;
            return this;
        }

        /**
         * @param isCertificateValidationEnabled (Updatable) If certificate validation is enabled, then the call will fail in case of certification errors.
         * 
         * @return builder
         * 
         */
        public Builder isCertificateValidationEnabled(Boolean isCertificateValidationEnabled) {
            return isCertificateValidationEnabled(Output.of(isCertificateValidationEnabled));
        }

        /**
         * @param isFailureRetried (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
         * 
         * @return builder
         * 
         */
        public Builder isFailureRetried(@Nullable Output<Boolean> isFailureRetried) {
            $.isFailureRetried = isFailureRetried;
            return this;
        }

        /**
         * @param isFailureRetried (Updatable) If isFailureRetried is enabled, then a failed call will be retried.
         * 
         * @return builder
         * 
         */
        public Builder isFailureRetried(Boolean isFailureRetried) {
            return isFailureRetried(Output.of(isFailureRetried));
        }

        /**
         * @param isRedirectionEnabled (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
         * 
         * @return builder
         * 
         */
        public Builder isRedirectionEnabled(@Nullable Output<Boolean> isRedirectionEnabled) {
            $.isRedirectionEnabled = isRedirectionEnabled;
            return this;
        }

        /**
         * @param isRedirectionEnabled (Updatable) If redirection enabled, then redirects will be allowed while accessing target URL.
         * 
         * @return builder
         * 
         */
        public Builder isRedirectionEnabled(Boolean isRedirectionEnabled) {
            return isRedirectionEnabled(Output.of(isRedirectionEnabled));
        }

        /**
         * @param networkConfiguration (Updatable) Details of the network configuration.
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(@Nullable Output<ConfigConfigurationNetworkConfigurationArgs> networkConfiguration) {
            $.networkConfiguration = networkConfiguration;
            return this;
        }

        /**
         * @param networkConfiguration (Updatable) Details of the network configuration.
         * 
         * @return builder
         * 
         */
        public Builder networkConfiguration(ConfigConfigurationNetworkConfigurationArgs networkConfiguration) {
            return networkConfiguration(Output.of(networkConfiguration));
        }

        /**
         * @param reqAuthenticationDetails (Updatable) Details for request HTTP authentication.
         * 
         * @return builder
         * 
         */
        public Builder reqAuthenticationDetails(@Nullable Output<ConfigConfigurationReqAuthenticationDetailsArgs> reqAuthenticationDetails) {
            $.reqAuthenticationDetails = reqAuthenticationDetails;
            return this;
        }

        /**
         * @param reqAuthenticationDetails (Updatable) Details for request HTTP authentication.
         * 
         * @return builder
         * 
         */
        public Builder reqAuthenticationDetails(ConfigConfigurationReqAuthenticationDetailsArgs reqAuthenticationDetails) {
            return reqAuthenticationDetails(Output.of(reqAuthenticationDetails));
        }

        /**
         * @param reqAuthenticationScheme (Updatable) Request http authentication scheme.
         * 
         * @return builder
         * 
         */
        public Builder reqAuthenticationScheme(@Nullable Output<String> reqAuthenticationScheme) {
            $.reqAuthenticationScheme = reqAuthenticationScheme;
            return this;
        }

        /**
         * @param reqAuthenticationScheme (Updatable) Request http authentication scheme.
         * 
         * @return builder
         * 
         */
        public Builder reqAuthenticationScheme(String reqAuthenticationScheme) {
            return reqAuthenticationScheme(Output.of(reqAuthenticationScheme));
        }

        /**
         * @param requestHeaders (Updatable) List of request headers. Example: `[{&#34;headerName&#34;: &#34;content-type&#34;, &#34;headerValue&#34;:&#34;json&#34;}]`
         * 
         * @return builder
         * 
         */
        public Builder requestHeaders(@Nullable Output<List<ConfigConfigurationRequestHeaderArgs>> requestHeaders) {
            $.requestHeaders = requestHeaders;
            return this;
        }

        /**
         * @param requestHeaders (Updatable) List of request headers. Example: `[{&#34;headerName&#34;: &#34;content-type&#34;, &#34;headerValue&#34;:&#34;json&#34;}]`
         * 
         * @return builder
         * 
         */
        public Builder requestHeaders(List<ConfigConfigurationRequestHeaderArgs> requestHeaders) {
            return requestHeaders(Output.of(requestHeaders));
        }

        /**
         * @param requestHeaders (Updatable) List of request headers. Example: `[{&#34;headerName&#34;: &#34;content-type&#34;, &#34;headerValue&#34;:&#34;json&#34;}]`
         * 
         * @return builder
         * 
         */
        public Builder requestHeaders(ConfigConfigurationRequestHeaderArgs... requestHeaders) {
            return requestHeaders(List.of(requestHeaders));
        }

        /**
         * @param requestMethod (Updatable) Request HTTP method.
         * 
         * @return builder
         * 
         */
        public Builder requestMethod(@Nullable Output<String> requestMethod) {
            $.requestMethod = requestMethod;
            return this;
        }

        /**
         * @param requestMethod (Updatable) Request HTTP method.
         * 
         * @return builder
         * 
         */
        public Builder requestMethod(String requestMethod) {
            return requestMethod(Output.of(requestMethod));
        }

        /**
         * @param requestPostBody (Updatable) Request post body content.
         * 
         * @return builder
         * 
         */
        public Builder requestPostBody(@Nullable Output<String> requestPostBody) {
            $.requestPostBody = requestPostBody;
            return this;
        }

        /**
         * @param requestPostBody (Updatable) Request post body content.
         * 
         * @return builder
         * 
         */
        public Builder requestPostBody(String requestPostBody) {
            return requestPostBody(Output.of(requestPostBody));
        }

        /**
         * @param requestQueryParams (Updatable) List of request query params. Example: `[{&#34;paramName&#34;: &#34;sortOrder&#34;, &#34;paramValue&#34;: &#34;asc&#34;}]`
         * 
         * @return builder
         * 
         */
        public Builder requestQueryParams(@Nullable Output<List<ConfigConfigurationRequestQueryParamArgs>> requestQueryParams) {
            $.requestQueryParams = requestQueryParams;
            return this;
        }

        /**
         * @param requestQueryParams (Updatable) List of request query params. Example: `[{&#34;paramName&#34;: &#34;sortOrder&#34;, &#34;paramValue&#34;: &#34;asc&#34;}]`
         * 
         * @return builder
         * 
         */
        public Builder requestQueryParams(List<ConfigConfigurationRequestQueryParamArgs> requestQueryParams) {
            return requestQueryParams(Output.of(requestQueryParams));
        }

        /**
         * @param requestQueryParams (Updatable) List of request query params. Example: `[{&#34;paramName&#34;: &#34;sortOrder&#34;, &#34;paramValue&#34;: &#34;asc&#34;}]`
         * 
         * @return builder
         * 
         */
        public Builder requestQueryParams(ConfigConfigurationRequestQueryParamArgs... requestQueryParams) {
            return requestQueryParams(List.of(requestQueryParams));
        }

        /**
         * @param verifyResponseCodes (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
         * 
         * @return builder
         * 
         */
        public Builder verifyResponseCodes(@Nullable Output<List<String>> verifyResponseCodes) {
            $.verifyResponseCodes = verifyResponseCodes;
            return this;
        }

        /**
         * @param verifyResponseCodes (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
         * 
         * @return builder
         * 
         */
        public Builder verifyResponseCodes(List<String> verifyResponseCodes) {
            return verifyResponseCodes(Output.of(verifyResponseCodes));
        }

        /**
         * @param verifyResponseCodes (Updatable) Expected HTTP response codes. For status code range, set values such as 2xx, 3xx.
         * 
         * @return builder
         * 
         */
        public Builder verifyResponseCodes(String... verifyResponseCodes) {
            return verifyResponseCodes(List.of(verifyResponseCodes));
        }

        /**
         * @param verifyResponseContent (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
         * 
         * @return builder
         * 
         */
        public Builder verifyResponseContent(@Nullable Output<String> verifyResponseContent) {
            $.verifyResponseContent = verifyResponseContent;
            return this;
        }

        /**
         * @param verifyResponseContent (Updatable) Verify response content against regular expression based string. If response content does not match the verifyResponseContent value, then it will be considered a failure.
         * 
         * @return builder
         * 
         */
        public Builder verifyResponseContent(String verifyResponseContent) {
            return verifyResponseContent(Output.of(verifyResponseContent));
        }

        /**
         * @param verifyTexts (Updatable) Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
         * 
         * @return builder
         * 
         */
        public Builder verifyTexts(@Nullable Output<List<ConfigConfigurationVerifyTextArgs>> verifyTexts) {
            $.verifyTexts = verifyTexts;
            return this;
        }

        /**
         * @param verifyTexts (Updatable) Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
         * 
         * @return builder
         * 
         */
        public Builder verifyTexts(List<ConfigConfigurationVerifyTextArgs> verifyTexts) {
            return verifyTexts(Output.of(verifyTexts));
        }

        /**
         * @param verifyTexts (Updatable) Verify all the search strings present in response. If any search string is not present in the response, then it will be considered as a failure.
         * 
         * @return builder
         * 
         */
        public Builder verifyTexts(ConfigConfigurationVerifyTextArgs... verifyTexts) {
            return verifyTexts(List.of(verifyTexts));
        }

        public ConfigConfigurationArgs build() {
            return $;
        }
    }

}
