// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Waas.inputs.PolicyWafConfigJsChallengeChallengeSettingsArgs;
import com.pulumi.oci.Waas.inputs.PolicyWafConfigJsChallengeCriteriaArgs;
import com.pulumi.oci.Waas.inputs.PolicyWafConfigJsChallengeSetHttpHeaderArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyWafConfigJsChallengeArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyWafConfigJsChallengeArgs Empty = new PolicyWafConfigJsChallengeArgs();

    /**
     * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     * 
     */
    @Import(name="actionExpirationInSeconds")
    private @Nullable Output<Integer> actionExpirationInSeconds;

    /**
     * @return (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     * 
     */
    public Optional<Output<Integer>> actionExpirationInSeconds() {
        return Optional.ofNullable(this.actionExpirationInSeconds);
    }

    /**
     * (Updatable) When enabled, redirect responses from the origin will also be challenged. This will change HTTP 301/302 responses from origin to HTTP 200 with an HTML body containing JavaScript page redirection.
     * 
     */
    @Import(name="areRedirectsChallenged")
    private @Nullable Output<Boolean> areRedirectsChallenged;

    /**
     * @return (Updatable) When enabled, redirect responses from the origin will also be challenged. This will change HTTP 301/302 responses from origin to HTTP 200 with an HTML body containing JavaScript page redirection.
     * 
     */
    public Optional<Output<Boolean>> areRedirectsChallenged() {
        return Optional.ofNullable(this.areRedirectsChallenged);
    }

    /**
     * (Updatable) The challenge settings if `action` is set to `BLOCK`.
     * 
     */
    @Import(name="challengeSettings")
    private @Nullable Output<PolicyWafConfigJsChallengeChallengeSettingsArgs> challengeSettings;

    /**
     * @return (Updatable) The challenge settings if `action` is set to `BLOCK`.
     * 
     */
    public Optional<Output<PolicyWafConfigJsChallengeChallengeSettingsArgs>> challengeSettings() {
        return Optional.ofNullable(this.challengeSettings);
    }

    /**
     * (Updatable) When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
     * 
     */
    @Import(name="criterias")
    private @Nullable Output<List<PolicyWafConfigJsChallengeCriteriaArgs>> criterias;

    /**
     * @return (Updatable) When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
     * 
     */
    public Optional<Output<List<PolicyWafConfigJsChallengeCriteriaArgs>>> criterias() {
        return Optional.ofNullable(this.criterias);
    }

    /**
     * (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
     * 
     */
    @Import(name="failureThreshold")
    private @Nullable Output<Integer> failureThreshold;

    /**
     * @return (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
     * 
     */
    public Optional<Output<Integer>> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }

    /**
     * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     * 
     */
    @Import(name="isNatEnabled")
    private @Nullable Output<Boolean> isNatEnabled;

    /**
     * @return (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     * 
     */
    public Optional<Output<Boolean>> isNatEnabled() {
        return Optional.ofNullable(this.isNatEnabled);
    }

    /**
     * (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     * 
     */
    @Import(name="setHttpHeader")
    private @Nullable Output<PolicyWafConfigJsChallengeSetHttpHeaderArgs> setHttpHeader;

    /**
     * @return (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     * 
     */
    public Optional<Output<PolicyWafConfigJsChallengeSetHttpHeaderArgs>> setHttpHeader() {
        return Optional.ofNullable(this.setHttpHeader);
    }

    private PolicyWafConfigJsChallengeArgs() {}

    private PolicyWafConfigJsChallengeArgs(PolicyWafConfigJsChallengeArgs $) {
        this.action = $.action;
        this.actionExpirationInSeconds = $.actionExpirationInSeconds;
        this.areRedirectsChallenged = $.areRedirectsChallenged;
        this.challengeSettings = $.challengeSettings;
        this.criterias = $.criterias;
        this.failureThreshold = $.failureThreshold;
        this.isEnabled = $.isEnabled;
        this.isNatEnabled = $.isNatEnabled;
        this.setHttpHeader = $.setHttpHeader;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyWafConfigJsChallengeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyWafConfigJsChallengeArgs $;

        public Builder() {
            $ = new PolicyWafConfigJsChallengeArgs();
        }

        public Builder(PolicyWafConfigJsChallengeArgs defaults) {
            $ = new PolicyWafConfigJsChallengeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param actionExpirationInSeconds (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         * 
         * @return builder
         * 
         */
        public Builder actionExpirationInSeconds(@Nullable Output<Integer> actionExpirationInSeconds) {
            $.actionExpirationInSeconds = actionExpirationInSeconds;
            return this;
        }

        /**
         * @param actionExpirationInSeconds (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         * 
         * @return builder
         * 
         */
        public Builder actionExpirationInSeconds(Integer actionExpirationInSeconds) {
            return actionExpirationInSeconds(Output.of(actionExpirationInSeconds));
        }

        /**
         * @param areRedirectsChallenged (Updatable) When enabled, redirect responses from the origin will also be challenged. This will change HTTP 301/302 responses from origin to HTTP 200 with an HTML body containing JavaScript page redirection.
         * 
         * @return builder
         * 
         */
        public Builder areRedirectsChallenged(@Nullable Output<Boolean> areRedirectsChallenged) {
            $.areRedirectsChallenged = areRedirectsChallenged;
            return this;
        }

        /**
         * @param areRedirectsChallenged (Updatable) When enabled, redirect responses from the origin will also be challenged. This will change HTTP 301/302 responses from origin to HTTP 200 with an HTML body containing JavaScript page redirection.
         * 
         * @return builder
         * 
         */
        public Builder areRedirectsChallenged(Boolean areRedirectsChallenged) {
            return areRedirectsChallenged(Output.of(areRedirectsChallenged));
        }

        /**
         * @param challengeSettings (Updatable) The challenge settings if `action` is set to `BLOCK`.
         * 
         * @return builder
         * 
         */
        public Builder challengeSettings(@Nullable Output<PolicyWafConfigJsChallengeChallengeSettingsArgs> challengeSettings) {
            $.challengeSettings = challengeSettings;
            return this;
        }

        /**
         * @param challengeSettings (Updatable) The challenge settings if `action` is set to `BLOCK`.
         * 
         * @return builder
         * 
         */
        public Builder challengeSettings(PolicyWafConfigJsChallengeChallengeSettingsArgs challengeSettings) {
            return challengeSettings(Output.of(challengeSettings));
        }

        /**
         * @param criterias (Updatable) When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         * 
         * @return builder
         * 
         */
        public Builder criterias(@Nullable Output<List<PolicyWafConfigJsChallengeCriteriaArgs>> criterias) {
            $.criterias = criterias;
            return this;
        }

        /**
         * @param criterias (Updatable) When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         * 
         * @return builder
         * 
         */
        public Builder criterias(List<PolicyWafConfigJsChallengeCriteriaArgs> criterias) {
            return criterias(Output.of(criterias));
        }

        /**
         * @param criterias (Updatable) When defined, the JavaScript Challenge would be applied only for the requests that matched all the listed conditions.
         * 
         * @return builder
         * 
         */
        public Builder criterias(PolicyWafConfigJsChallengeCriteriaArgs... criterias) {
            return criterias(List.of(criterias));
        }

        /**
         * @param failureThreshold (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder failureThreshold(@Nullable Output<Integer> failureThreshold) {
            $.failureThreshold = failureThreshold;
            return this;
        }

        /**
         * @param failureThreshold (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder failureThreshold(Integer failureThreshold) {
            return failureThreshold(Output.of(failureThreshold));
        }

        /**
         * @param isEnabled (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param isNatEnabled (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder isNatEnabled(@Nullable Output<Boolean> isNatEnabled) {
            $.isNatEnabled = isNatEnabled;
            return this;
        }

        /**
         * @param isNatEnabled (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder isNatEnabled(Boolean isNatEnabled) {
            return isNatEnabled(Output.of(isNatEnabled));
        }

        /**
         * @param setHttpHeader (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
         * 
         * @return builder
         * 
         */
        public Builder setHttpHeader(@Nullable Output<PolicyWafConfigJsChallengeSetHttpHeaderArgs> setHttpHeader) {
            $.setHttpHeader = setHttpHeader;
            return this;
        }

        /**
         * @param setHttpHeader (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
         * 
         * @return builder
         * 
         */
        public Builder setHttpHeader(PolicyWafConfigJsChallengeSetHttpHeaderArgs setHttpHeader) {
            return setHttpHeader(Output.of(setHttpHeader));
        }

        public PolicyWafConfigJsChallengeArgs build() {
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            return $;
        }
    }

}
