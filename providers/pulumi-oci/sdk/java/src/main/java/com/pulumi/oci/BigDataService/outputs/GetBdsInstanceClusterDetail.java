// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBdsInstanceClusterDetail {
    /**
     * @return The URL of Ambari
     * 
     */
    private final String ambariUrl;
    /**
     * @return Cloud SQL cell version.
     * 
     */
    private final String bdCellVersion;
    /**
     * @return BDA version installed in the cluster
     * 
     */
    private final String bdaVersion;
    /**
     * @return Big Data Manager version installed in the cluster.
     * 
     */
    private final String bdmVersion;
    /**
     * @return Big Data Service version installed in the cluster.
     * 
     */
    private final String bdsVersion;
    /**
     * @return The URL of Big Data Manager.
     * 
     */
    private final String bigDataManagerUrl;
    /**
     * @return The URL of Cloudera Manager
     * 
     */
    private final String clouderaManagerUrl;
    /**
     * @return Big Data SQL version.
     * 
     */
    private final String csqlCellVersion;
    /**
     * @return Cloud SQL query server database version.
     * 
     */
    private final String dbVersion;
    /**
     * @return The URL of the Hue server.
     * 
     */
    private final String hueServerUrl;
    /**
     * @return Oracle Linux version installed in the cluster.
     * 
     */
    private final String osVersion;
    /**
     * @return The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the cluster was automatically or manually refreshed, shown as an RFC 3339 formatted datetime string.
     * 
     */
    private final String timeRefreshed;

    @CustomType.Constructor
    private GetBdsInstanceClusterDetail(
        @CustomType.Parameter("ambariUrl") String ambariUrl,
        @CustomType.Parameter("bdCellVersion") String bdCellVersion,
        @CustomType.Parameter("bdaVersion") String bdaVersion,
        @CustomType.Parameter("bdmVersion") String bdmVersion,
        @CustomType.Parameter("bdsVersion") String bdsVersion,
        @CustomType.Parameter("bigDataManagerUrl") String bigDataManagerUrl,
        @CustomType.Parameter("clouderaManagerUrl") String clouderaManagerUrl,
        @CustomType.Parameter("csqlCellVersion") String csqlCellVersion,
        @CustomType.Parameter("dbVersion") String dbVersion,
        @CustomType.Parameter("hueServerUrl") String hueServerUrl,
        @CustomType.Parameter("osVersion") String osVersion,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeRefreshed") String timeRefreshed) {
        this.ambariUrl = ambariUrl;
        this.bdCellVersion = bdCellVersion;
        this.bdaVersion = bdaVersion;
        this.bdmVersion = bdmVersion;
        this.bdsVersion = bdsVersion;
        this.bigDataManagerUrl = bigDataManagerUrl;
        this.clouderaManagerUrl = clouderaManagerUrl;
        this.csqlCellVersion = csqlCellVersion;
        this.dbVersion = dbVersion;
        this.hueServerUrl = hueServerUrl;
        this.osVersion = osVersion;
        this.timeCreated = timeCreated;
        this.timeRefreshed = timeRefreshed;
    }

    /**
     * @return The URL of Ambari
     * 
     */
    public String ambariUrl() {
        return this.ambariUrl;
    }
    /**
     * @return Cloud SQL cell version.
     * 
     */
    public String bdCellVersion() {
        return this.bdCellVersion;
    }
    /**
     * @return BDA version installed in the cluster
     * 
     */
    public String bdaVersion() {
        return this.bdaVersion;
    }
    /**
     * @return Big Data Manager version installed in the cluster.
     * 
     */
    public String bdmVersion() {
        return this.bdmVersion;
    }
    /**
     * @return Big Data Service version installed in the cluster.
     * 
     */
    public String bdsVersion() {
        return this.bdsVersion;
    }
    /**
     * @return The URL of Big Data Manager.
     * 
     */
    public String bigDataManagerUrl() {
        return this.bigDataManagerUrl;
    }
    /**
     * @return The URL of Cloudera Manager
     * 
     */
    public String clouderaManagerUrl() {
        return this.clouderaManagerUrl;
    }
    /**
     * @return Big Data SQL version.
     * 
     */
    public String csqlCellVersion() {
        return this.csqlCellVersion;
    }
    /**
     * @return Cloud SQL query server database version.
     * 
     */
    public String dbVersion() {
        return this.dbVersion;
    }
    /**
     * @return The URL of the Hue server.
     * 
     */
    public String hueServerUrl() {
        return this.hueServerUrl;
    }
    /**
     * @return Oracle Linux version installed in the cluster.
     * 
     */
    public String osVersion() {
        return this.osVersion;
    }
    /**
     * @return The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the cluster was automatically or manually refreshed, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public String timeRefreshed() {
        return this.timeRefreshed;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceClusterDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String ambariUrl;
        private String bdCellVersion;
        private String bdaVersion;
        private String bdmVersion;
        private String bdsVersion;
        private String bigDataManagerUrl;
        private String clouderaManagerUrl;
        private String csqlCellVersion;
        private String dbVersion;
        private String hueServerUrl;
        private String osVersion;
        private String timeCreated;
        private String timeRefreshed;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBdsInstanceClusterDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ambariUrl = defaults.ambariUrl;
    	      this.bdCellVersion = defaults.bdCellVersion;
    	      this.bdaVersion = defaults.bdaVersion;
    	      this.bdmVersion = defaults.bdmVersion;
    	      this.bdsVersion = defaults.bdsVersion;
    	      this.bigDataManagerUrl = defaults.bigDataManagerUrl;
    	      this.clouderaManagerUrl = defaults.clouderaManagerUrl;
    	      this.csqlCellVersion = defaults.csqlCellVersion;
    	      this.dbVersion = defaults.dbVersion;
    	      this.hueServerUrl = defaults.hueServerUrl;
    	      this.osVersion = defaults.osVersion;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeRefreshed = defaults.timeRefreshed;
        }

        public Builder ambariUrl(String ambariUrl) {
            this.ambariUrl = Objects.requireNonNull(ambariUrl);
            return this;
        }
        public Builder bdCellVersion(String bdCellVersion) {
            this.bdCellVersion = Objects.requireNonNull(bdCellVersion);
            return this;
        }
        public Builder bdaVersion(String bdaVersion) {
            this.bdaVersion = Objects.requireNonNull(bdaVersion);
            return this;
        }
        public Builder bdmVersion(String bdmVersion) {
            this.bdmVersion = Objects.requireNonNull(bdmVersion);
            return this;
        }
        public Builder bdsVersion(String bdsVersion) {
            this.bdsVersion = Objects.requireNonNull(bdsVersion);
            return this;
        }
        public Builder bigDataManagerUrl(String bigDataManagerUrl) {
            this.bigDataManagerUrl = Objects.requireNonNull(bigDataManagerUrl);
            return this;
        }
        public Builder clouderaManagerUrl(String clouderaManagerUrl) {
            this.clouderaManagerUrl = Objects.requireNonNull(clouderaManagerUrl);
            return this;
        }
        public Builder csqlCellVersion(String csqlCellVersion) {
            this.csqlCellVersion = Objects.requireNonNull(csqlCellVersion);
            return this;
        }
        public Builder dbVersion(String dbVersion) {
            this.dbVersion = Objects.requireNonNull(dbVersion);
            return this;
        }
        public Builder hueServerUrl(String hueServerUrl) {
            this.hueServerUrl = Objects.requireNonNull(hueServerUrl);
            return this;
        }
        public Builder osVersion(String osVersion) {
            this.osVersion = Objects.requireNonNull(osVersion);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeRefreshed(String timeRefreshed) {
            this.timeRefreshed = Objects.requireNonNull(timeRefreshed);
            return this;
        }        public GetBdsInstanceClusterDetail build() {
            return new GetBdsInstanceClusterDetail(ambariUrl, bdCellVersion, bdaVersion, bdmVersion, bdsVersion, bigDataManagerUrl, clouderaManagerUrl, csqlCellVersion, dbVersion, hueServerUrl, osVersion, timeCreated, timeRefreshed);
        }
    }
}
