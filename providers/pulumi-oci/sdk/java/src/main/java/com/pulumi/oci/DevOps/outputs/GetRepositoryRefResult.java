// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetRepositoryRefResult {
    /**
     * @return Commit ID pointed to by the new branch.
     * 
     */
    private final String commitId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return Unique full reference name inside a repository.
     * 
     */
    private final String fullRefName;
    private final String id;
    /**
     * @return SHA-1 hash value of the object pointed to by the tag.
     * 
     */
    private final String objectId;
    /**
     * @return Unique reference name inside a repository.
     * 
     */
    private final String refName;
    /**
     * @return The type of reference (BRANCH or TAG).
     * 
     */
    private final String refType;
    /**
     * @return The OCID of the repository containing the reference.
     * 
     */
    private final String repositoryId;

    @CustomType.Constructor
    private GetRepositoryRefResult(
        @CustomType.Parameter("commitId") String commitId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("fullRefName") String fullRefName,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("objectId") String objectId,
        @CustomType.Parameter("refName") String refName,
        @CustomType.Parameter("refType") String refType,
        @CustomType.Parameter("repositoryId") String repositoryId) {
        this.commitId = commitId;
        this.definedTags = definedTags;
        this.freeformTags = freeformTags;
        this.fullRefName = fullRefName;
        this.id = id;
        this.objectId = objectId;
        this.refName = refName;
        this.refType = refType;
        this.repositoryId = repositoryId;
    }

    /**
     * @return Commit ID pointed to by the new branch.
     * 
     */
    public String commitId() {
        return this.commitId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique full reference name inside a repository.
     * 
     */
    public String fullRefName() {
        return this.fullRefName;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return SHA-1 hash value of the object pointed to by the tag.
     * 
     */
    public String objectId() {
        return this.objectId;
    }
    /**
     * @return Unique reference name inside a repository.
     * 
     */
    public String refName() {
        return this.refName;
    }
    /**
     * @return The type of reference (BRANCH or TAG).
     * 
     */
    public String refType() {
        return this.refType;
    }
    /**
     * @return The OCID of the repository containing the reference.
     * 
     */
    public String repositoryId() {
        return this.repositoryId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryRefResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String commitId;
        private Map<String,Object> definedTags;
        private Map<String,Object> freeformTags;
        private String fullRefName;
        private String id;
        private String objectId;
        private String refName;
        private String refType;
        private String repositoryId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRepositoryRefResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.commitId = defaults.commitId;
    	      this.definedTags = defaults.definedTags;
    	      this.freeformTags = defaults.freeformTags;
    	      this.fullRefName = defaults.fullRefName;
    	      this.id = defaults.id;
    	      this.objectId = defaults.objectId;
    	      this.refName = defaults.refName;
    	      this.refType = defaults.refType;
    	      this.repositoryId = defaults.repositoryId;
        }

        public Builder commitId(String commitId) {
            this.commitId = Objects.requireNonNull(commitId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder fullRefName(String fullRefName) {
            this.fullRefName = Objects.requireNonNull(fullRefName);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder objectId(String objectId) {
            this.objectId = Objects.requireNonNull(objectId);
            return this;
        }
        public Builder refName(String refName) {
            this.refName = Objects.requireNonNull(refName);
            return this;
        }
        public Builder refType(String refType) {
            this.refType = Objects.requireNonNull(refType);
            return this;
        }
        public Builder repositoryId(String repositoryId) {
            this.repositoryId = Objects.requireNonNull(repositoryId);
            return this;
        }        public GetRepositoryRefResult build() {
            return new GetRepositoryRefResult(commitId, definedTags, freeformTags, fullRefName, id, objectId, refName, refType, repositoryId);
        }
    }
}
