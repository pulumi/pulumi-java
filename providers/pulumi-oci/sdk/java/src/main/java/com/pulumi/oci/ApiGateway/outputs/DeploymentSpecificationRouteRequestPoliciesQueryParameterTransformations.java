// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters;
import com.pulumi.oci.ApiGateway.outputs.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations {
    /**
     * @return (Updatable) Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
     * 
     */
    private final @Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters filterQueryParameters;
    /**
     * @return (Updatable) Rename parameters on the query string as they pass through the gateway.
     * 
     */
    private final @Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters renameQueryParameters;
    /**
     * @return (Updatable) Set parameters on the query string as they pass through the gateway.
     * 
     */
    private final @Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters setQueryParameters;

    @CustomType.Constructor
    private DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations(
        @CustomType.Parameter("filterQueryParameters") @Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters filterQueryParameters,
        @CustomType.Parameter("renameQueryParameters") @Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters renameQueryParameters,
        @CustomType.Parameter("setQueryParameters") @Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters setQueryParameters) {
        this.filterQueryParameters = filterQueryParameters;
        this.renameQueryParameters = renameQueryParameters;
        this.setQueryParameters = setQueryParameters;
    }

    /**
     * @return (Updatable) Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
     * 
     */
    public Optional<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters> filterQueryParameters() {
        return Optional.ofNullable(this.filterQueryParameters);
    }
    /**
     * @return (Updatable) Rename parameters on the query string as they pass through the gateway.
     * 
     */
    public Optional<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters> renameQueryParameters() {
        return Optional.ofNullable(this.renameQueryParameters);
    }
    /**
     * @return (Updatable) Set parameters on the query string as they pass through the gateway.
     * 
     */
    public Optional<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters> setQueryParameters() {
        return Optional.ofNullable(this.setQueryParameters);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters filterQueryParameters;
        private @Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters renameQueryParameters;
        private @Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters setQueryParameters;

        public Builder() {
    	      // Empty
        }

        public Builder(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filterQueryParameters = defaults.filterQueryParameters;
    	      this.renameQueryParameters = defaults.renameQueryParameters;
    	      this.setQueryParameters = defaults.setQueryParameters;
        }

        public Builder filterQueryParameters(@Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParameters filterQueryParameters) {
            this.filterQueryParameters = filterQueryParameters;
            return this;
        }
        public Builder renameQueryParameters(@Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParameters renameQueryParameters) {
            this.renameQueryParameters = renameQueryParameters;
            return this;
        }
        public Builder setQueryParameters(@Nullable DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParameters setQueryParameters) {
            this.setQueryParameters = setQueryParameters;
            return this;
        }        public DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations build() {
            return new DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformations(filterQueryParameters, renameQueryParameters, setQueryParameters);
        }
    }
}
