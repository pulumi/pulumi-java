// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetUserAssessmentsFilter;
import com.pulumi.oci.DataSafe.outputs.GetUserAssessmentsIgnoredTarget;
import com.pulumi.oci.DataSafe.outputs.GetUserAssessmentsUserAssessment;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetUserAssessmentsResult {
    private final @Nullable String accessLevel;
    /**
     * @return The OCID of the compartment that contains the user assessment.
     * 
     */
    private final String compartmentId;
    private final @Nullable Boolean compartmentIdInSubtree;
    /**
     * @return The display name of the user assessment.
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetUserAssessmentsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return List containing maps as values. Example: `{&#34;Operations&#34;: [ {&#34;CostCenter&#34;: &#34;42&#34;} ] }`
     * 
     */
    private final List<GetUserAssessmentsIgnoredTarget> ignoredTargets;
    /**
     * @return Indicates if the user assessment is set as a baseline. This is applicable only to saved user assessments.
     * 
     */
    private final @Nullable Boolean isBaseline;
    private final @Nullable Boolean isScheduleAssessment;
    private final @Nullable String scheduleUserAssessmentId;
    /**
     * @return The current state of the user assessment.
     * 
     */
    private final @Nullable String state;
    private final @Nullable String targetId;
    private final @Nullable String timeCreatedGreaterThanOrEqualTo;
    private final @Nullable String timeCreatedLessThan;
    /**
     * @return Indicates whether the user assessment was created by system or user.
     * 
     */
    private final @Nullable String triggeredBy;
    /**
     * @return Type of user assessment. The possible types are:
     * 
     */
    private final @Nullable String type;
    /**
     * @return The list of user_assessments.
     * 
     */
    private final List<GetUserAssessmentsUserAssessment> userAssessments;

    @CustomType.Constructor
    private GetUserAssessmentsResult(
        @CustomType.Parameter("accessLevel") @Nullable String accessLevel,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("compartmentIdInSubtree") @Nullable Boolean compartmentIdInSubtree,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetUserAssessmentsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("ignoredTargets") List<GetUserAssessmentsIgnoredTarget> ignoredTargets,
        @CustomType.Parameter("isBaseline") @Nullable Boolean isBaseline,
        @CustomType.Parameter("isScheduleAssessment") @Nullable Boolean isScheduleAssessment,
        @CustomType.Parameter("scheduleUserAssessmentId") @Nullable String scheduleUserAssessmentId,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("targetId") @Nullable String targetId,
        @CustomType.Parameter("timeCreatedGreaterThanOrEqualTo") @Nullable String timeCreatedGreaterThanOrEqualTo,
        @CustomType.Parameter("timeCreatedLessThan") @Nullable String timeCreatedLessThan,
        @CustomType.Parameter("triggeredBy") @Nullable String triggeredBy,
        @CustomType.Parameter("type") @Nullable String type,
        @CustomType.Parameter("userAssessments") List<GetUserAssessmentsUserAssessment> userAssessments) {
        this.accessLevel = accessLevel;
        this.compartmentId = compartmentId;
        this.compartmentIdInSubtree = compartmentIdInSubtree;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.ignoredTargets = ignoredTargets;
        this.isBaseline = isBaseline;
        this.isScheduleAssessment = isScheduleAssessment;
        this.scheduleUserAssessmentId = scheduleUserAssessmentId;
        this.state = state;
        this.targetId = targetId;
        this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
        this.timeCreatedLessThan = timeCreatedLessThan;
        this.triggeredBy = triggeredBy;
        this.type = type;
        this.userAssessments = userAssessments;
    }

    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }
    /**
     * @return The OCID of the compartment that contains the user assessment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    /**
     * @return The display name of the user assessment.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetUserAssessmentsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List containing maps as values. Example: `{&#34;Operations&#34;: [ {&#34;CostCenter&#34;: &#34;42&#34;} ] }`
     * 
     */
    public List<GetUserAssessmentsIgnoredTarget> ignoredTargets() {
        return this.ignoredTargets;
    }
    /**
     * @return Indicates if the user assessment is set as a baseline. This is applicable only to saved user assessments.
     * 
     */
    public Optional<Boolean> isBaseline() {
        return Optional.ofNullable(this.isBaseline);
    }
    public Optional<Boolean> isScheduleAssessment() {
        return Optional.ofNullable(this.isScheduleAssessment);
    }
    public Optional<String> scheduleUserAssessmentId() {
        return Optional.ofNullable(this.scheduleUserAssessmentId);
    }
    /**
     * @return The current state of the user assessment.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }
    /**
     * @return Indicates whether the user assessment was created by system or user.
     * 
     */
    public Optional<String> triggeredBy() {
        return Optional.ofNullable(this.triggeredBy);
    }
    /**
     * @return Type of user assessment. The possible types are:
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    /**
     * @return The list of user_assessments.
     * 
     */
    public List<GetUserAssessmentsUserAssessment> userAssessments() {
        return this.userAssessments;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserAssessmentsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accessLevel;
        private String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable String displayName;
        private @Nullable List<GetUserAssessmentsFilter> filters;
        private String id;
        private List<GetUserAssessmentsIgnoredTarget> ignoredTargets;
        private @Nullable Boolean isBaseline;
        private @Nullable Boolean isScheduleAssessment;
        private @Nullable String scheduleUserAssessmentId;
        private @Nullable String state;
        private @Nullable String targetId;
        private @Nullable String timeCreatedGreaterThanOrEqualTo;
        private @Nullable String timeCreatedLessThan;
        private @Nullable String triggeredBy;
        private @Nullable String type;
        private List<GetUserAssessmentsUserAssessment> userAssessments;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUserAssessmentsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.ignoredTargets = defaults.ignoredTargets;
    	      this.isBaseline = defaults.isBaseline;
    	      this.isScheduleAssessment = defaults.isScheduleAssessment;
    	      this.scheduleUserAssessmentId = defaults.scheduleUserAssessmentId;
    	      this.state = defaults.state;
    	      this.targetId = defaults.targetId;
    	      this.timeCreatedGreaterThanOrEqualTo = defaults.timeCreatedGreaterThanOrEqualTo;
    	      this.timeCreatedLessThan = defaults.timeCreatedLessThan;
    	      this.triggeredBy = defaults.triggeredBy;
    	      this.type = defaults.type;
    	      this.userAssessments = defaults.userAssessments;
        }

        public Builder accessLevel(@Nullable String accessLevel) {
            this.accessLevel = accessLevel;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetUserAssessmentsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetUserAssessmentsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder ignoredTargets(List<GetUserAssessmentsIgnoredTarget> ignoredTargets) {
            this.ignoredTargets = Objects.requireNonNull(ignoredTargets);
            return this;
        }
        public Builder ignoredTargets(GetUserAssessmentsIgnoredTarget... ignoredTargets) {
            return ignoredTargets(List.of(ignoredTargets));
        }
        public Builder isBaseline(@Nullable Boolean isBaseline) {
            this.isBaseline = isBaseline;
            return this;
        }
        public Builder isScheduleAssessment(@Nullable Boolean isScheduleAssessment) {
            this.isScheduleAssessment = isScheduleAssessment;
            return this;
        }
        public Builder scheduleUserAssessmentId(@Nullable String scheduleUserAssessmentId) {
            this.scheduleUserAssessmentId = scheduleUserAssessmentId;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder targetId(@Nullable String targetId) {
            this.targetId = targetId;
            return this;
        }
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {
            this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {
            this.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }
        public Builder triggeredBy(@Nullable String triggeredBy) {
            this.triggeredBy = triggeredBy;
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public Builder userAssessments(List<GetUserAssessmentsUserAssessment> userAssessments) {
            this.userAssessments = Objects.requireNonNull(userAssessments);
            return this;
        }
        public Builder userAssessments(GetUserAssessmentsUserAssessment... userAssessments) {
            return userAssessments(List.of(userAssessments));
        }        public GetUserAssessmentsResult build() {
            return new GetUserAssessmentsResult(accessLevel, compartmentId, compartmentIdInSubtree, displayName, filters, id, ignoredTargets, isBaseline, isScheduleAssessment, scheduleUserAssessmentId, state, targetId, timeCreatedGreaterThanOrEqualTo, timeCreatedLessThan, triggeredBy, type, userAssessments);
        }
    }
}
