// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetAutonomousDatabasesAutonomousDatabase;
import com.pulumi.oci.Database.outputs.GetAutonomousDatabasesFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAutonomousDatabasesResult {
    /**
     * @return The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private final @Nullable String autonomousContainerDatabaseId;
    /**
     * @return The list of autonomous_databases.
     * 
     */
    private final List<GetAutonomousDatabasesAutonomousDatabase> autonomousDatabases;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return A valid Oracle Database version for Autonomous Database.
     * 
     */
    private final @Nullable String dbVersion;
    /**
     * @return The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     */
    private final @Nullable String dbWorkload;
    /**
     * @return The user-friendly name for the Autonomous Database. The name does not have to be unique.
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetAutonomousDatabasesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The infrastructure type this resource belongs to.
     * 
     */
    private final @Nullable String infrastructureType;
    /**
     * @return Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to  Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
     * 
     */
    private final @Nullable Boolean isDataGuardEnabled;
    /**
     * @return Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
     * 
     */
    private final @Nullable Boolean isFreeTier;
    /**
     * @return Indicates whether the Autonomous Database is a refreshable clone.
     * 
     */
    private final @Nullable Boolean isRefreshableClone;
    /**
     * @return The current state of the Autonomous Database.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetAutonomousDatabasesResult(
        @CustomType.Parameter("autonomousContainerDatabaseId") @Nullable String autonomousContainerDatabaseId,
        @CustomType.Parameter("autonomousDatabases") List<GetAutonomousDatabasesAutonomousDatabase> autonomousDatabases,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("dbVersion") @Nullable String dbVersion,
        @CustomType.Parameter("dbWorkload") @Nullable String dbWorkload,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetAutonomousDatabasesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("infrastructureType") @Nullable String infrastructureType,
        @CustomType.Parameter("isDataGuardEnabled") @Nullable Boolean isDataGuardEnabled,
        @CustomType.Parameter("isFreeTier") @Nullable Boolean isFreeTier,
        @CustomType.Parameter("isRefreshableClone") @Nullable Boolean isRefreshableClone,
        @CustomType.Parameter("state") @Nullable String state) {
        this.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
        this.autonomousDatabases = autonomousDatabases;
        this.compartmentId = compartmentId;
        this.dbVersion = dbVersion;
        this.dbWorkload = dbWorkload;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.infrastructureType = infrastructureType;
        this.isDataGuardEnabled = isDataGuardEnabled;
        this.isFreeTier = isFreeTier;
        this.isRefreshableClone = isRefreshableClone;
        this.state = state;
    }

    /**
     * @return The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<String> autonomousContainerDatabaseId() {
        return Optional.ofNullable(this.autonomousContainerDatabaseId);
    }
    /**
     * @return The list of autonomous_databases.
     * 
     */
    public List<GetAutonomousDatabasesAutonomousDatabase> autonomousDatabases() {
        return this.autonomousDatabases;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A valid Oracle Database version for Autonomous Database.
     * 
     */
    public Optional<String> dbVersion() {
        return Optional.ofNullable(this.dbVersion);
    }
    /**
     * @return The Autonomous Database workload type. The following values are valid:
     * * OLTP - indicates an Autonomous Transaction Processing database
     * * DW - indicates an Autonomous Data Warehouse database
     * * AJD - indicates an Autonomous JSON Database
     * * APEX - indicates an Autonomous Database with the Oracle APEX Application Development workload type.
     * 
     */
    public Optional<String> dbWorkload() {
        return Optional.ofNullable(this.dbWorkload);
    }
    /**
     * @return The user-friendly name for the Autonomous Database. The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetAutonomousDatabasesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The infrastructure type this resource belongs to.
     * 
     */
    public Optional<String> infrastructureType() {
        return Optional.ofNullable(this.infrastructureType);
    }
    /**
     * @return Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to  Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
     * 
     */
    public Optional<Boolean> isDataGuardEnabled() {
        return Optional.ofNullable(this.isDataGuardEnabled);
    }
    /**
     * @return Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
     * 
     */
    public Optional<Boolean> isFreeTier() {
        return Optional.ofNullable(this.isFreeTier);
    }
    /**
     * @return Indicates whether the Autonomous Database is a refreshable clone.
     * 
     */
    public Optional<Boolean> isRefreshableClone() {
        return Optional.ofNullable(this.isRefreshableClone);
    }
    /**
     * @return The current state of the Autonomous Database.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDatabasesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String autonomousContainerDatabaseId;
        private List<GetAutonomousDatabasesAutonomousDatabase> autonomousDatabases;
        private String compartmentId;
        private @Nullable String dbVersion;
        private @Nullable String dbWorkload;
        private @Nullable String displayName;
        private @Nullable List<GetAutonomousDatabasesFilter> filters;
        private String id;
        private @Nullable String infrastructureType;
        private @Nullable Boolean isDataGuardEnabled;
        private @Nullable Boolean isFreeTier;
        private @Nullable Boolean isRefreshableClone;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAutonomousDatabasesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousContainerDatabaseId = defaults.autonomousContainerDatabaseId;
    	      this.autonomousDatabases = defaults.autonomousDatabases;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dbVersion = defaults.dbVersion;
    	      this.dbWorkload = defaults.dbWorkload;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.infrastructureType = defaults.infrastructureType;
    	      this.isDataGuardEnabled = defaults.isDataGuardEnabled;
    	      this.isFreeTier = defaults.isFreeTier;
    	      this.isRefreshableClone = defaults.isRefreshableClone;
    	      this.state = defaults.state;
        }

        public Builder autonomousContainerDatabaseId(@Nullable String autonomousContainerDatabaseId) {
            this.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            return this;
        }
        public Builder autonomousDatabases(List<GetAutonomousDatabasesAutonomousDatabase> autonomousDatabases) {
            this.autonomousDatabases = Objects.requireNonNull(autonomousDatabases);
            return this;
        }
        public Builder autonomousDatabases(GetAutonomousDatabasesAutonomousDatabase... autonomousDatabases) {
            return autonomousDatabases(List.of(autonomousDatabases));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder dbVersion(@Nullable String dbVersion) {
            this.dbVersion = dbVersion;
            return this;
        }
        public Builder dbWorkload(@Nullable String dbWorkload) {
            this.dbWorkload = dbWorkload;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetAutonomousDatabasesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetAutonomousDatabasesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder infrastructureType(@Nullable String infrastructureType) {
            this.infrastructureType = infrastructureType;
            return this;
        }
        public Builder isDataGuardEnabled(@Nullable Boolean isDataGuardEnabled) {
            this.isDataGuardEnabled = isDataGuardEnabled;
            return this;
        }
        public Builder isFreeTier(@Nullable Boolean isFreeTier) {
            this.isFreeTier = isFreeTier;
            return this;
        }
        public Builder isRefreshableClone(@Nullable Boolean isRefreshableClone) {
            this.isRefreshableClone = isRefreshableClone;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetAutonomousDatabasesResult build() {
            return new GetAutonomousDatabasesResult(autonomousContainerDatabaseId, autonomousDatabases, compartmentId, dbVersion, dbWorkload, displayName, filters, id, infrastructureType, isDataGuardEnabled, isFreeTier, isRefreshableClone, state);
        }
    }
}
