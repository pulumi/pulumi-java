// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.RepositoryMirrorRepositoryConfigTriggerSchedule;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class RepositoryMirrorRepositoryConfig {
    /**
     * @return (Updatable) Upstream git repository connection identifer.
     * 
     */
    private final @Nullable String connectorId;
    /**
     * @return (Updatable) URL of external repository you want to mirror.
     * 
     */
    private final @Nullable String repositoryUrl;
    /**
     * @return (Updatable) Specifies a trigger schedule. Timing information for when to initiate automated syncs.
     * 
     */
    private final @Nullable RepositoryMirrorRepositoryConfigTriggerSchedule triggerSchedule;

    @CustomType.Constructor
    private RepositoryMirrorRepositoryConfig(
        @CustomType.Parameter("connectorId") @Nullable String connectorId,
        @CustomType.Parameter("repositoryUrl") @Nullable String repositoryUrl,
        @CustomType.Parameter("triggerSchedule") @Nullable RepositoryMirrorRepositoryConfigTriggerSchedule triggerSchedule) {
        this.connectorId = connectorId;
        this.repositoryUrl = repositoryUrl;
        this.triggerSchedule = triggerSchedule;
    }

    /**
     * @return (Updatable) Upstream git repository connection identifer.
     * 
     */
    public Optional<String> connectorId() {
        return Optional.ofNullable(this.connectorId);
    }
    /**
     * @return (Updatable) URL of external repository you want to mirror.
     * 
     */
    public Optional<String> repositoryUrl() {
        return Optional.ofNullable(this.repositoryUrl);
    }
    /**
     * @return (Updatable) Specifies a trigger schedule. Timing information for when to initiate automated syncs.
     * 
     */
    public Optional<RepositoryMirrorRepositoryConfigTriggerSchedule> triggerSchedule() {
        return Optional.ofNullable(this.triggerSchedule);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(RepositoryMirrorRepositoryConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String connectorId;
        private @Nullable String repositoryUrl;
        private @Nullable RepositoryMirrorRepositoryConfigTriggerSchedule triggerSchedule;

        public Builder() {
    	      // Empty
        }

        public Builder(RepositoryMirrorRepositoryConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectorId = defaults.connectorId;
    	      this.repositoryUrl = defaults.repositoryUrl;
    	      this.triggerSchedule = defaults.triggerSchedule;
        }

        public Builder connectorId(@Nullable String connectorId) {
            this.connectorId = connectorId;
            return this;
        }
        public Builder repositoryUrl(@Nullable String repositoryUrl) {
            this.repositoryUrl = repositoryUrl;
            return this;
        }
        public Builder triggerSchedule(@Nullable RepositoryMirrorRepositoryConfigTriggerSchedule triggerSchedule) {
            this.triggerSchedule = triggerSchedule;
            return this;
        }        public RepositoryMirrorRepositoryConfig build() {
            return new RepositoryMirrorRepositoryConfig(connectorId, repositoryUrl, triggerSchedule);
        }
    }
}
