// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeployStageLoadBalancerConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeployStageLoadBalancerConfigArgs Empty = new DeployStageLoadBalancerConfigArgs();

    /**
     * (Updatable) Listen port for the backend server.
     * 
     */
    @Import(name="backendPort")
    private @Nullable Output<Integer> backendPort;

    /**
     * @return (Updatable) Listen port for the backend server.
     * 
     */
    public Optional<Output<Integer>> backendPort() {
        return Optional.ofNullable(this.backendPort);
    }

    /**
     * (Updatable) Name of the load balancer listener.
     * 
     */
    @Import(name="listenerName")
    private @Nullable Output<String> listenerName;

    /**
     * @return (Updatable) Name of the load balancer listener.
     * 
     */
    public Optional<Output<String>> listenerName() {
        return Optional.ofNullable(this.listenerName);
    }

    /**
     * (Updatable) The OCID of the load balancer.
     * 
     */
    @Import(name="loadBalancerId")
    private @Nullable Output<String> loadBalancerId;

    /**
     * @return (Updatable) The OCID of the load balancer.
     * 
     */
    public Optional<Output<String>> loadBalancerId() {
        return Optional.ofNullable(this.loadBalancerId);
    }

    /**
     * The current state of the deployment stage.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the deployment stage.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private DeployStageLoadBalancerConfigArgs() {}

    private DeployStageLoadBalancerConfigArgs(DeployStageLoadBalancerConfigArgs $) {
        this.backendPort = $.backendPort;
        this.listenerName = $.listenerName;
        this.loadBalancerId = $.loadBalancerId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeployStageLoadBalancerConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeployStageLoadBalancerConfigArgs $;

        public Builder() {
            $ = new DeployStageLoadBalancerConfigArgs();
        }

        public Builder(DeployStageLoadBalancerConfigArgs defaults) {
            $ = new DeployStageLoadBalancerConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backendPort (Updatable) Listen port for the backend server.
         * 
         * @return builder
         * 
         */
        public Builder backendPort(@Nullable Output<Integer> backendPort) {
            $.backendPort = backendPort;
            return this;
        }

        /**
         * @param backendPort (Updatable) Listen port for the backend server.
         * 
         * @return builder
         * 
         */
        public Builder backendPort(Integer backendPort) {
            return backendPort(Output.of(backendPort));
        }

        /**
         * @param listenerName (Updatable) Name of the load balancer listener.
         * 
         * @return builder
         * 
         */
        public Builder listenerName(@Nullable Output<String> listenerName) {
            $.listenerName = listenerName;
            return this;
        }

        /**
         * @param listenerName (Updatable) Name of the load balancer listener.
         * 
         * @return builder
         * 
         */
        public Builder listenerName(String listenerName) {
            return listenerName(Output.of(listenerName));
        }

        /**
         * @param loadBalancerId (Updatable) The OCID of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(@Nullable Output<String> loadBalancerId) {
            $.loadBalancerId = loadBalancerId;
            return this;
        }

        /**
         * @param loadBalancerId (Updatable) The OCID of the load balancer.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerId(String loadBalancerId) {
            return loadBalancerId(Output.of(loadBalancerId));
        }

        /**
         * @param state The current state of the deployment stage.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the deployment stage.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public DeployStageLoadBalancerConfigArgs build() {
            return $;
        }
    }

}
