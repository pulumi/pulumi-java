// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.LoadBalancer.inputs.LoadBalancerIpAddressDetailReservedIpArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LoadBalancerIpAddressDetailArgs extends com.pulumi.resources.ResourceArgs {

    public static final LoadBalancerIpAddressDetailArgs Empty = new LoadBalancerIpAddressDetailArgs();

    /**
     * An IP address.  Example: `192.168.0.3`
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return An IP address.  Example: `192.168.0.3`
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * Whether the IP address is public or private.
     * 
     */
    @Import(name="isPublic")
    private @Nullable Output<Boolean> isPublic;

    /**
     * @return Whether the IP address is public or private.
     * 
     */
    public Optional<Output<Boolean>> isPublic() {
        return Optional.ofNullable(this.isPublic);
    }

    /**
     * Pre-created public IP that will be used as the IP of this load balancer. This reserved IP will not be deleted when load balancer is deleted. This ip should not be already mapped to any other resource.
     * 
     */
    @Import(name="reservedIps")
    private @Nullable Output<List<LoadBalancerIpAddressDetailReservedIpArgs>> reservedIps;

    /**
     * @return Pre-created public IP that will be used as the IP of this load balancer. This reserved IP will not be deleted when load balancer is deleted. This ip should not be already mapped to any other resource.
     * 
     */
    public Optional<Output<List<LoadBalancerIpAddressDetailReservedIpArgs>>> reservedIps() {
        return Optional.ofNullable(this.reservedIps);
    }

    private LoadBalancerIpAddressDetailArgs() {}

    private LoadBalancerIpAddressDetailArgs(LoadBalancerIpAddressDetailArgs $) {
        this.ipAddress = $.ipAddress;
        this.isPublic = $.isPublic;
        this.reservedIps = $.reservedIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LoadBalancerIpAddressDetailArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LoadBalancerIpAddressDetailArgs $;

        public Builder() {
            $ = new LoadBalancerIpAddressDetailArgs();
        }

        public Builder(LoadBalancerIpAddressDetailArgs defaults) {
            $ = new LoadBalancerIpAddressDetailArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipAddress An IP address.  Example: `192.168.0.3`
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress An IP address.  Example: `192.168.0.3`
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param isPublic Whether the IP address is public or private.
         * 
         * @return builder
         * 
         */
        public Builder isPublic(@Nullable Output<Boolean> isPublic) {
            $.isPublic = isPublic;
            return this;
        }

        /**
         * @param isPublic Whether the IP address is public or private.
         * 
         * @return builder
         * 
         */
        public Builder isPublic(Boolean isPublic) {
            return isPublic(Output.of(isPublic));
        }

        /**
         * @param reservedIps Pre-created public IP that will be used as the IP of this load balancer. This reserved IP will not be deleted when load balancer is deleted. This ip should not be already mapped to any other resource.
         * 
         * @return builder
         * 
         */
        public Builder reservedIps(@Nullable Output<List<LoadBalancerIpAddressDetailReservedIpArgs>> reservedIps) {
            $.reservedIps = reservedIps;
            return this;
        }

        /**
         * @param reservedIps Pre-created public IP that will be used as the IP of this load balancer. This reserved IP will not be deleted when load balancer is deleted. This ip should not be already mapped to any other resource.
         * 
         * @return builder
         * 
         */
        public Builder reservedIps(List<LoadBalancerIpAddressDetailReservedIpArgs> reservedIps) {
            return reservedIps(Output.of(reservedIps));
        }

        /**
         * @param reservedIps Pre-created public IP that will be used as the IP of this load balancer. This reserved IP will not be deleted when load balancer is deleted. This ip should not be already mapped to any other resource.
         * 
         * @return builder
         * 
         */
        public Builder reservedIps(LoadBalancerIpAddressDetailReservedIpArgs... reservedIps) {
            return reservedIps(List.of(reservedIps));
        }

        public LoadBalancerIpAddressDetailArgs build() {
            return $;
        }
    }

}
