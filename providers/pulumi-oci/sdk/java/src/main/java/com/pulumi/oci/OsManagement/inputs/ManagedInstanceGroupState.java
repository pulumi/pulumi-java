// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsManagement.inputs.ManagedInstanceGroupManagedInstanceArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ManagedInstanceGroupState extends com.pulumi.resources.ResourceArgs {

    public static final ManagedInstanceGroupState Empty = new ManagedInstanceGroupState();

    /**
     * (Updatable) OCID for the Compartment
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) OCID for the Compartment
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Information specified by the user about the managed instance group
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Information specified by the user about the managed instance group
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Managed Instance Group identifier
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Managed Instance Group identifier
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    @Import(name="managedInstanceCount")
    private @Nullable Output<Integer> managedInstanceCount;

    public Optional<Output<Integer>> managedInstanceCount() {
        return Optional.ofNullable(this.managedInstanceCount);
    }

    /**
     * list of Managed Instances in the group
     * 
     */
    @Import(name="managedInstances")
    private @Nullable Output<List<ManagedInstanceGroupManagedInstanceArgs>> managedInstances;

    /**
     * @return list of Managed Instances in the group
     * 
     */
    public Optional<Output<List<ManagedInstanceGroupManagedInstanceArgs>>> managedInstances() {
        return Optional.ofNullable(this.managedInstances);
    }

    /**
     * The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
     * 
     */
    @Import(name="osFamily")
    private @Nullable Output<String> osFamily;

    /**
     * @return The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
     * 
     */
    public Optional<Output<String>> osFamily() {
        return Optional.ofNullable(this.osFamily);
    }

    /**
     * The current state of the Software Source.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the Software Source.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private ManagedInstanceGroupState() {}

    private ManagedInstanceGroupState(ManagedInstanceGroupState $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.managedInstanceCount = $.managedInstanceCount;
        this.managedInstances = $.managedInstances;
        this.osFamily = $.osFamily;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ManagedInstanceGroupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ManagedInstanceGroupState $;

        public Builder() {
            $ = new ManagedInstanceGroupState();
        }

        public Builder(ManagedInstanceGroupState defaults) {
            $ = new ManagedInstanceGroupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) OCID for the Compartment
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) OCID for the Compartment
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Information specified by the user about the managed instance group
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Information specified by the user about the managed instance group
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName (Updatable) Managed Instance Group identifier
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Managed Instance Group identifier
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        public Builder managedInstanceCount(@Nullable Output<Integer> managedInstanceCount) {
            $.managedInstanceCount = managedInstanceCount;
            return this;
        }

        public Builder managedInstanceCount(Integer managedInstanceCount) {
            return managedInstanceCount(Output.of(managedInstanceCount));
        }

        /**
         * @param managedInstances list of Managed Instances in the group
         * 
         * @return builder
         * 
         */
        public Builder managedInstances(@Nullable Output<List<ManagedInstanceGroupManagedInstanceArgs>> managedInstances) {
            $.managedInstances = managedInstances;
            return this;
        }

        /**
         * @param managedInstances list of Managed Instances in the group
         * 
         * @return builder
         * 
         */
        public Builder managedInstances(List<ManagedInstanceGroupManagedInstanceArgs> managedInstances) {
            return managedInstances(Output.of(managedInstances));
        }

        /**
         * @param managedInstances list of Managed Instances in the group
         * 
         * @return builder
         * 
         */
        public Builder managedInstances(ManagedInstanceGroupManagedInstanceArgs... managedInstances) {
            return managedInstances(List.of(managedInstances));
        }

        /**
         * @param osFamily The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(@Nullable Output<String> osFamily) {
            $.osFamily = osFamily;
            return this;
        }

        /**
         * @param osFamily The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
         * 
         * @return builder
         * 
         */
        public Builder osFamily(String osFamily) {
            return osFamily(Output.of(osFamily));
        }

        /**
         * @param state The current state of the Software Source.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the Software Source.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public ManagedInstanceGroupState build() {
            return $;
        }
    }

}
