// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Analytics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Analytics.AnalyticsInstancePrivateAccessChannelArgs;
import com.pulumi.oci.Analytics.inputs.AnalyticsInstancePrivateAccessChannelState;
import com.pulumi.oci.Analytics.outputs.AnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone;
import com.pulumi.oci.Utilities;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This resource provides the Analytics Instance Private Access Channel resource in Oracle Cloud Infrastructure Analytics service.
 * 
 * Create a Private access Channel for the Analytics instance. The operation is long-running
 * and creates a new WorkRequest.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * AnalyticsInstancePrivateAccessChannels can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Analytics/analyticsInstancePrivateAccessChannel:AnalyticsInstancePrivateAccessChannel test_analytics_instance_private_access_channel &#34;analyticsInstances/{analyticsInstanceId}/privateAccessChannels/{privateAccessChannelKey}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Analytics/analyticsInstancePrivateAccessChannel:AnalyticsInstancePrivateAccessChannel")
public class AnalyticsInstancePrivateAccessChannel extends com.pulumi.resources.CustomResource {
    /**
     * The OCID of the AnalyticsInstance.
     * 
     */
    @Export(name="analyticsInstanceId", type=String.class, parameters={})
    private Output<String> analyticsInstanceId;

    /**
     * @return The OCID of the AnalyticsInstance.
     * 
     */
    public Output<String> analyticsInstanceId() {
        return this.analyticsInstanceId;
    }
    /**
     * (Updatable) Display Name of the Private Access Channel.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return (Updatable) Display Name of the Private Access Channel.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * The list of IP addresses from the customer subnet connected to private access channel, used as a source Ip by Private Access Channel for network traffic from the AnalyticsInstance to Private Sources.
     * 
     */
    @Export(name="egressSourceIpAddresses", type=List.class, parameters={String.class})
    private Output<List<String>> egressSourceIpAddresses;

    /**
     * @return The list of IP addresses from the customer subnet connected to private access channel, used as a source Ip by Private Access Channel for network traffic from the AnalyticsInstance to Private Sources.
     * 
     */
    public Output<List<String>> egressSourceIpAddresses() {
        return this.egressSourceIpAddresses;
    }
    /**
     * IP Address of the Private Access channel.
     * 
     */
    @Export(name="ipAddress", type=String.class, parameters={})
    private Output<String> ipAddress;

    /**
     * @return IP Address of the Private Access channel.
     * 
     */
    public Output<String> ipAddress() {
        return this.ipAddress;
    }
    /**
     * Private Access Channel unique identifier key.
     * 
     */
    @Export(name="key", type=String.class, parameters={})
    private Output<String> key;

    /**
     * @return Private Access Channel unique identifier key.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * (Updatable) List of Private Source DNS zones registered with Private Access Channel, where datasource hostnames from these dns zones / domains will be resolved in the peered VCN for access from Analytics Instance. Min of 1 is required and Max of 30 Private Source DNS zones can be registered.
     * 
     */
    @Export(name="privateSourceDnsZones", type=List.class, parameters={AnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone.class})
    private Output<List<AnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone>> privateSourceDnsZones;

    /**
     * @return (Updatable) List of Private Source DNS zones registered with Private Access Channel, where datasource hostnames from these dns zones / domains will be resolved in the peered VCN for access from Analytics Instance. Min of 1 is required and Max of 30 Private Source DNS zones can be registered.
     * 
     */
    public Output<List<AnalyticsInstancePrivateAccessChannelPrivateSourceDnsZone>> privateSourceDnsZones() {
        return this.privateSourceDnsZones;
    }
    /**
     * (Updatable) OCID of the customer subnet connected to private access channel.
     * 
     */
    @Export(name="subnetId", type=String.class, parameters={})
    private Output<String> subnetId;

    /**
     * @return (Updatable) OCID of the customer subnet connected to private access channel.
     * 
     */
    public Output<String> subnetId() {
        return this.subnetId;
    }
    /**
     * (Updatable) OCID of the customer VCN peered with private access channel.
     * 
     */
    @Export(name="vcnId", type=String.class, parameters={})
    private Output<String> vcnId;

    /**
     * @return (Updatable) OCID of the customer VCN peered with private access channel.
     * 
     */
    public Output<String> vcnId() {
        return this.vcnId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AnalyticsInstancePrivateAccessChannel(String name) {
        this(name, AnalyticsInstancePrivateAccessChannelArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AnalyticsInstancePrivateAccessChannel(String name, AnalyticsInstancePrivateAccessChannelArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AnalyticsInstancePrivateAccessChannel(String name, AnalyticsInstancePrivateAccessChannelArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Analytics/analyticsInstancePrivateAccessChannel:AnalyticsInstancePrivateAccessChannel", name, args == null ? AnalyticsInstancePrivateAccessChannelArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AnalyticsInstancePrivateAccessChannel(String name, Output<String> id, @Nullable AnalyticsInstancePrivateAccessChannelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Analytics/analyticsInstancePrivateAccessChannel:AnalyticsInstancePrivateAccessChannel", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AnalyticsInstancePrivateAccessChannel get(String name, Output<String> id, @Nullable AnalyticsInstancePrivateAccessChannelState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AnalyticsInstancePrivateAccessChannel(name, id, state, options);
    }
}
