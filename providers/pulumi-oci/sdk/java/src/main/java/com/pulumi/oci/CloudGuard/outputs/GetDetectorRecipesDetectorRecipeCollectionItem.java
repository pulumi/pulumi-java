// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudGuard.outputs.GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule;
import com.pulumi.oci.CloudGuard.outputs.GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDetectorRecipesDetectorRecipeCollectionItem {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Description for DetectorRecipeDetectorRule
     * 
     */
    private final String description;
    /**
     * @return detector for the rule
     * 
     */
    private final String detector;
    /**
     * @return List of detector rules for the detector type for recipe - user input
     * 
     */
    private final List<GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule> detectorRules;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private final String displayName;
    /**
     * @return List of effective detector rules for the detector type for recipe after applying defaults
     * 
     */
    private final List<GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule> effectiveDetectorRules;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return Ocid for detector recipe
     * 
     */
    private final String id;
    /**
     * @return Owner of detector recipe
     * 
     */
    private final String owner;
    /**
     * @return Recipe Ocid of the Source Recipe to be cloned
     * 
     */
    private final String sourceDetectorRecipeId;
    /**
     * @return The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     * 
     */
    private final String state;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The date and time the detector recipe was created. Format defined by RFC3339.
     * 
     */
    private final String timeCreated;
    /**
     * @return The date and time the detector recipe was updated. Format defined by RFC3339.
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetDetectorRecipesDetectorRecipeCollectionItem(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("detector") String detector,
        @CustomType.Parameter("detectorRules") List<GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule> detectorRules,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("effectiveDetectorRules") List<GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule> effectiveDetectorRules,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("owner") String owner,
        @CustomType.Parameter("sourceDetectorRecipeId") String sourceDetectorRecipeId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.description = description;
        this.detector = detector;
        this.detectorRules = detectorRules;
        this.displayName = displayName;
        this.effectiveDetectorRules = effectiveDetectorRules;
        this.freeformTags = freeformTags;
        this.id = id;
        this.owner = owner;
        this.sourceDetectorRecipeId = sourceDetectorRecipeId;
        this.state = state;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Description for DetectorRecipeDetectorRule
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return detector for the rule
     * 
     */
    public String detector() {
        return this.detector;
    }
    /**
     * @return List of detector rules for the detector type for recipe - user input
     * 
     */
    public List<GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule> detectorRules() {
        return this.detectorRules;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return List of effective detector rules for the detector type for recipe after applying defaults
     * 
     */
    public List<GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule> effectiveDetectorRules() {
        return this.effectiveDetectorRules;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Ocid for detector recipe
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Owner of detector recipe
     * 
     */
    public String owner() {
        return this.owner;
    }
    /**
     * @return Recipe Ocid of the Source Recipe to be cloned
     * 
     */
    public String sourceDetectorRecipeId() {
        return this.sourceDetectorRecipeId;
    }
    /**
     * @return The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). System tags can be viewed by users, but can only be created by the system.  Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The date and time the detector recipe was created. Format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the detector recipe was updated. Format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDetectorRecipesDetectorRecipeCollectionItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private String detector;
        private List<GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule> detectorRules;
        private String displayName;
        private List<GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule> effectiveDetectorRules;
        private Map<String,Object> freeformTags;
        private String id;
        private String owner;
        private String sourceDetectorRecipeId;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDetectorRecipesDetectorRecipeCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.detector = defaults.detector;
    	      this.detectorRules = defaults.detectorRules;
    	      this.displayName = defaults.displayName;
    	      this.effectiveDetectorRules = defaults.effectiveDetectorRules;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.owner = defaults.owner;
    	      this.sourceDetectorRecipeId = defaults.sourceDetectorRecipeId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder detector(String detector) {
            this.detector = Objects.requireNonNull(detector);
            return this;
        }
        public Builder detectorRules(List<GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule> detectorRules) {
            this.detectorRules = Objects.requireNonNull(detectorRules);
            return this;
        }
        public Builder detectorRules(GetDetectorRecipesDetectorRecipeCollectionItemDetectorRule... detectorRules) {
            return detectorRules(List.of(detectorRules));
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder effectiveDetectorRules(List<GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule> effectiveDetectorRules) {
            this.effectiveDetectorRules = Objects.requireNonNull(effectiveDetectorRules);
            return this;
        }
        public Builder effectiveDetectorRules(GetDetectorRecipesDetectorRecipeCollectionItemEffectiveDetectorRule... effectiveDetectorRules) {
            return effectiveDetectorRules(List.of(effectiveDetectorRules));
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder owner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }
        public Builder sourceDetectorRecipeId(String sourceDetectorRecipeId) {
            this.sourceDetectorRecipeId = Objects.requireNonNull(sourceDetectorRecipeId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetDetectorRecipesDetectorRecipeCollectionItem build() {
            return new GetDetectorRecipesDetectorRecipeCollectionItem(compartmentId, definedTags, description, detector, detectorRules, displayName, effectiveDetectorRules, freeformTags, id, owner, sourceDetectorRecipeId, state, systemTags, timeCreated, timeUpdated);
        }
    }
}
