// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ModelProvenanceState extends com.pulumi.resources.ResourceArgs {

    public static final ModelProvenanceState Empty = new ModelProvenanceState();

    /**
     * (Updatable) For model reproducibility purposes. Branch of the git repository associated with model training.
     * 
     */
    @Import(name="gitBranch")
    private @Nullable Output<String> gitBranch;

    /**
     * @return (Updatable) For model reproducibility purposes. Branch of the git repository associated with model training.
     * 
     */
    public Optional<Output<String>> gitBranch() {
        return Optional.ofNullable(this.gitBranch);
    }

    /**
     * (Updatable) For model reproducibility purposes. Commit ID of the git repository associated with model training.
     * 
     */
    @Import(name="gitCommit")
    private @Nullable Output<String> gitCommit;

    /**
     * @return (Updatable) For model reproducibility purposes. Commit ID of the git repository associated with model training.
     * 
     */
    public Optional<Output<String>> gitCommit() {
        return Optional.ofNullable(this.gitCommit);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
     * 
     */
    @Import(name="modelId")
    private @Nullable Output<String> modelId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
     * 
     */
    public Optional<Output<String>> modelId() {
        return Optional.ofNullable(this.modelId);
    }

    /**
     * (Updatable) For model reproducibility purposes. URL of the git repository associated with model training.
     * 
     */
    @Import(name="repositoryUrl")
    private @Nullable Output<String> repositoryUrl;

    /**
     * @return (Updatable) For model reproducibility purposes. URL of the git repository associated with model training.
     * 
     */
    public Optional<Output<String>> repositoryUrl() {
        return Optional.ofNullable(this.repositoryUrl);
    }

    /**
     * (Updatable) For model reproducibility purposes. Path to model artifacts.
     * 
     */
    @Import(name="scriptDir")
    private @Nullable Output<String> scriptDir;

    /**
     * @return (Updatable) For model reproducibility purposes. Path to model artifacts.
     * 
     */
    public Optional<Output<String>> scriptDir() {
        return Optional.ofNullable(this.scriptDir);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a training session(Job or NotebookSession) in which the model was trained. It is used for model reproducibility purposes.
     * 
     */
    @Import(name="trainingId")
    private @Nullable Output<String> trainingId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a training session(Job or NotebookSession) in which the model was trained. It is used for model reproducibility purposes.
     * 
     */
    public Optional<Output<String>> trainingId() {
        return Optional.ofNullable(this.trainingId);
    }

    /**
     * (Updatable) For model reproducibility purposes. Path to the python script or notebook in which the model was trained.&#34;
     * 
     */
    @Import(name="trainingScript")
    private @Nullable Output<String> trainingScript;

    /**
     * @return (Updatable) For model reproducibility purposes. Path to the python script or notebook in which the model was trained.&#34;
     * 
     */
    public Optional<Output<String>> trainingScript() {
        return Optional.ofNullable(this.trainingScript);
    }

    private ModelProvenanceState() {}

    private ModelProvenanceState(ModelProvenanceState $) {
        this.gitBranch = $.gitBranch;
        this.gitCommit = $.gitCommit;
        this.modelId = $.modelId;
        this.repositoryUrl = $.repositoryUrl;
        this.scriptDir = $.scriptDir;
        this.trainingId = $.trainingId;
        this.trainingScript = $.trainingScript;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ModelProvenanceState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ModelProvenanceState $;

        public Builder() {
            $ = new ModelProvenanceState();
        }

        public Builder(ModelProvenanceState defaults) {
            $ = new ModelProvenanceState(Objects.requireNonNull(defaults));
        }

        /**
         * @param gitBranch (Updatable) For model reproducibility purposes. Branch of the git repository associated with model training.
         * 
         * @return builder
         * 
         */
        public Builder gitBranch(@Nullable Output<String> gitBranch) {
            $.gitBranch = gitBranch;
            return this;
        }

        /**
         * @param gitBranch (Updatable) For model reproducibility purposes. Branch of the git repository associated with model training.
         * 
         * @return builder
         * 
         */
        public Builder gitBranch(String gitBranch) {
            return gitBranch(Output.of(gitBranch));
        }

        /**
         * @param gitCommit (Updatable) For model reproducibility purposes. Commit ID of the git repository associated with model training.
         * 
         * @return builder
         * 
         */
        public Builder gitCommit(@Nullable Output<String> gitCommit) {
            $.gitCommit = gitCommit;
            return this;
        }

        /**
         * @param gitCommit (Updatable) For model reproducibility purposes. Commit ID of the git repository associated with model training.
         * 
         * @return builder
         * 
         */
        public Builder gitCommit(String gitCommit) {
            return gitCommit(Output.of(gitCommit));
        }

        /**
         * @param modelId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
         * 
         * @return builder
         * 
         */
        public Builder modelId(@Nullable Output<String> modelId) {
            $.modelId = modelId;
            return this;
        }

        /**
         * @param modelId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the model.
         * 
         * @return builder
         * 
         */
        public Builder modelId(String modelId) {
            return modelId(Output.of(modelId));
        }

        /**
         * @param repositoryUrl (Updatable) For model reproducibility purposes. URL of the git repository associated with model training.
         * 
         * @return builder
         * 
         */
        public Builder repositoryUrl(@Nullable Output<String> repositoryUrl) {
            $.repositoryUrl = repositoryUrl;
            return this;
        }

        /**
         * @param repositoryUrl (Updatable) For model reproducibility purposes. URL of the git repository associated with model training.
         * 
         * @return builder
         * 
         */
        public Builder repositoryUrl(String repositoryUrl) {
            return repositoryUrl(Output.of(repositoryUrl));
        }

        /**
         * @param scriptDir (Updatable) For model reproducibility purposes. Path to model artifacts.
         * 
         * @return builder
         * 
         */
        public Builder scriptDir(@Nullable Output<String> scriptDir) {
            $.scriptDir = scriptDir;
            return this;
        }

        /**
         * @param scriptDir (Updatable) For model reproducibility purposes. Path to model artifacts.
         * 
         * @return builder
         * 
         */
        public Builder scriptDir(String scriptDir) {
            return scriptDir(Output.of(scriptDir));
        }

        /**
         * @param trainingId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a training session(Job or NotebookSession) in which the model was trained. It is used for model reproducibility purposes.
         * 
         * @return builder
         * 
         */
        public Builder trainingId(@Nullable Output<String> trainingId) {
            $.trainingId = trainingId;
            return this;
        }

        /**
         * @param trainingId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a training session(Job or NotebookSession) in which the model was trained. It is used for model reproducibility purposes.
         * 
         * @return builder
         * 
         */
        public Builder trainingId(String trainingId) {
            return trainingId(Output.of(trainingId));
        }

        /**
         * @param trainingScript (Updatable) For model reproducibility purposes. Path to the python script or notebook in which the model was trained.&#34;
         * 
         * @return builder
         * 
         */
        public Builder trainingScript(@Nullable Output<String> trainingScript) {
            $.trainingScript = trainingScript;
            return this;
        }

        /**
         * @param trainingScript (Updatable) For model reproducibility purposes. Path to the python script or notebook in which the model was trained.&#34;
         * 
         * @return builder
         * 
         */
        public Builder trainingScript(String trainingScript) {
            return trainingScript(Output.of(trainingScript));
        }

        public ModelProvenanceState build() {
            return $;
        }
    }

}
