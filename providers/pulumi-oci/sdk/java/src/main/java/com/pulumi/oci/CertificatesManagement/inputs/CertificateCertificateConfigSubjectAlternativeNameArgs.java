// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class CertificateCertificateConfigSubjectAlternativeNameArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateCertificateConfigSubjectAlternativeNameArgs Empty = new CertificateCertificateConfigSubjectAlternativeNameArgs();

    /**
     * The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * The subject alternative name.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return The subject alternative name.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private CertificateCertificateConfigSubjectAlternativeNameArgs() {}

    private CertificateCertificateConfigSubjectAlternativeNameArgs(CertificateCertificateConfigSubjectAlternativeNameArgs $) {
        this.type = $.type;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateCertificateConfigSubjectAlternativeNameArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateCertificateConfigSubjectAlternativeNameArgs $;

        public Builder() {
            $ = new CertificateCertificateConfigSubjectAlternativeNameArgs();
        }

        public Builder(CertificateCertificateConfigSubjectAlternativeNameArgs defaults) {
            $ = new CertificateCertificateConfigSubjectAlternativeNameArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param type The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The subject alternative name type. Currently only DNS domain or host names and IP addresses are supported.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param value The subject alternative name.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value The subject alternative name.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public CertificateCertificateConfigSubjectAlternativeNameArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.value = Objects.requireNonNull($.value, "expected parameter 'value' to be non-null");
            return $;
        }
    }

}
