// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceCatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrivateApplicationPackageDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrivateApplicationPackageDetailsArgs Empty = new PrivateApplicationPackageDetailsArgs();

    /**
     * The package&#39;s type.
     * 
     */
    @Import(name="packageType", required=true)
    private Output<String> packageType;

    /**
     * @return The package&#39;s type.
     * 
     */
    public Output<String> packageType() {
        return this.packageType;
    }

    /**
     * The package version.
     * 
     */
    @Import(name="version", required=true)
    private Output<String> version;

    /**
     * @return The package version.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    @Import(name="zipFileBase64encoded")
    private @Nullable Output<String> zipFileBase64encoded;

    public Optional<Output<String>> zipFileBase64encoded() {
        return Optional.ofNullable(this.zipFileBase64encoded);
    }

    private PrivateApplicationPackageDetailsArgs() {}

    private PrivateApplicationPackageDetailsArgs(PrivateApplicationPackageDetailsArgs $) {
        this.packageType = $.packageType;
        this.version = $.version;
        this.zipFileBase64encoded = $.zipFileBase64encoded;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrivateApplicationPackageDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrivateApplicationPackageDetailsArgs $;

        public Builder() {
            $ = new PrivateApplicationPackageDetailsArgs();
        }

        public Builder(PrivateApplicationPackageDetailsArgs defaults) {
            $ = new PrivateApplicationPackageDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param packageType The package&#39;s type.
         * 
         * @return builder
         * 
         */
        public Builder packageType(Output<String> packageType) {
            $.packageType = packageType;
            return this;
        }

        /**
         * @param packageType The package&#39;s type.
         * 
         * @return builder
         * 
         */
        public Builder packageType(String packageType) {
            return packageType(Output.of(packageType));
        }

        /**
         * @param version The package version.
         * 
         * @return builder
         * 
         */
        public Builder version(Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The package version.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public Builder zipFileBase64encoded(@Nullable Output<String> zipFileBase64encoded) {
            $.zipFileBase64encoded = zipFileBase64encoded;
            return this;
        }

        public Builder zipFileBase64encoded(String zipFileBase64encoded) {
            return zipFileBase64encoded(Output.of(zipFileBase64encoded));
        }

        public PrivateApplicationPackageDetailsArgs build() {
            $.packageType = Objects.requireNonNull($.packageType, "expected parameter 'packageType' to be non-null");
            $.version = Objects.requireNonNull($.version, "expected parameter 'version' to be non-null");
            return $;
        }
    }

}
