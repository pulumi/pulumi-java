// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Mysql.outputs.MysqlDbSystemChannelSourceSslCaCertificate;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MysqlDbSystemChannelSource {
    /**
     * @return The network address of the DB System.
     * 
     */
    private final @Nullable String hostname;
    /**
     * @return The port for primary endpoint of the DB System to listen on.
     * 
     */
    private final @Nullable Integer port;
    /**
     * @return The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
     * 
     */
    private final @Nullable String sourceType;
    /**
     * @return The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
     * 
     */
    private final @Nullable List<MysqlDbSystemChannelSourceSslCaCertificate> sslCaCertificates;
    /**
     * @return The SSL mode of the Channel.
     * 
     */
    private final @Nullable String sslMode;
    /**
     * @return The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
     * 
     */
    private final @Nullable String username;

    @CustomType.Constructor
    private MysqlDbSystemChannelSource(
        @CustomType.Parameter("hostname") @Nullable String hostname,
        @CustomType.Parameter("port") @Nullable Integer port,
        @CustomType.Parameter("sourceType") @Nullable String sourceType,
        @CustomType.Parameter("sslCaCertificates") @Nullable List<MysqlDbSystemChannelSourceSslCaCertificate> sslCaCertificates,
        @CustomType.Parameter("sslMode") @Nullable String sslMode,
        @CustomType.Parameter("username") @Nullable String username) {
        this.hostname = hostname;
        this.port = port;
        this.sourceType = sourceType;
        this.sslCaCertificates = sslCaCertificates;
        this.sslMode = sslMode;
        this.username = username;
    }

    /**
     * @return The network address of the DB System.
     * 
     */
    public Optional<String> hostname() {
        return Optional.ofNullable(this.hostname);
    }
    /**
     * @return The port for primary endpoint of the DB System to listen on.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
     * 
     */
    public Optional<String> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }
    /**
     * @return The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
     * 
     */
    public List<MysqlDbSystemChannelSourceSslCaCertificate> sslCaCertificates() {
        return this.sslCaCertificates == null ? List.of() : this.sslCaCertificates;
    }
    /**
     * @return The SSL mode of the Channel.
     * 
     */
    public Optional<String> sslMode() {
        return Optional.ofNullable(this.sslMode);
    }
    /**
     * @return The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
     * 
     */
    public Optional<String> username() {
        return Optional.ofNullable(this.username);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MysqlDbSystemChannelSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String hostname;
        private @Nullable Integer port;
        private @Nullable String sourceType;
        private @Nullable List<MysqlDbSystemChannelSourceSslCaCertificate> sslCaCertificates;
        private @Nullable String sslMode;
        private @Nullable String username;

        public Builder() {
    	      // Empty
        }

        public Builder(MysqlDbSystemChannelSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.port = defaults.port;
    	      this.sourceType = defaults.sourceType;
    	      this.sslCaCertificates = defaults.sslCaCertificates;
    	      this.sslMode = defaults.sslMode;
    	      this.username = defaults.username;
        }

        public Builder hostname(@Nullable String hostname) {
            this.hostname = hostname;
            return this;
        }
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        public Builder sourceType(@Nullable String sourceType) {
            this.sourceType = sourceType;
            return this;
        }
        public Builder sslCaCertificates(@Nullable List<MysqlDbSystemChannelSourceSslCaCertificate> sslCaCertificates) {
            this.sslCaCertificates = sslCaCertificates;
            return this;
        }
        public Builder sslCaCertificates(MysqlDbSystemChannelSourceSslCaCertificate... sslCaCertificates) {
            return sslCaCertificates(List.of(sslCaCertificates));
        }
        public Builder sslMode(@Nullable String sslMode) {
            this.sslMode = sslMode;
            return this;
        }
        public Builder username(@Nullable String username) {
            this.username = username;
            return this;
        }        public MysqlDbSystemChannelSource build() {
            return new MysqlDbSystemChannelSource(hostname, port, sourceType, sslCaCertificates, sslMode, username);
        }
    }
}
