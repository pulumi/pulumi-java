// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.LogAnalytics.LogAnalyticsObjectCollectionRuleArgs;
import com.pulumi.oci.LogAnalytics.inputs.LogAnalyticsObjectCollectionRuleState;
import com.pulumi.oci.LogAnalytics.outputs.LogAnalyticsObjectCollectionRuleOverride;
import com.pulumi.oci.Utilities;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Log Analytics Object Collection Rule resource in Oracle Cloud Infrastructure Log Analytics service.
 * 
 * Create a configuration to collect logs from object storage bucket.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * LogAnalyticsObjectCollectionRules can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule test_log_analytics_object_collection_rule &#34;namespaces/{namespaceName}/logAnalyticsObjectCollectionRules/{logAnalyticsObjectCollectionRuleId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule")
public class LogAnalyticsObjectCollectionRule extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     * 
     */
    @Export(name="charEncoding", type=String.class, parameters={})
    private Output<String> charEncoding;

    /**
     * @return (Updatable) An optional character encoding to aid in detecting the character encoding of the contents of the objects while processing. It is recommended to set this value as ISO_8589_1 when configuring content of the objects having more numeric characters, and very few alphabets. For e.g. this applies when configuring VCN Flow Logs.
     * 
     */
    public Output<String> charEncoding() {
        return this.charEncoding;
    }
    /**
     * The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     * 
     */
    @Export(name="collectionType", type=String.class, parameters={})
    private Output<String> collectionType;

    /**
     * @return The type of collection. Supported collection types: LIVE, HISTORIC, HISTORIC_LIVE
     * 
     */
    public Output<String> collectionType() {
        return this.collectionType;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to which this rule belongs.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return (Updatable) A string that describes the details of the rule. It does not have to be unique, and can be changed. Avoid entering confidential information.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
     * 
     */
    @Export(name="entityId", type=String.class, parameters={})
    private Output<String> entityId;

    /**
     * @return (Updatable) Logging Analytics entity OCID. Associates the processed logs with the given entity (optional).
     * 
     */
    public Output<String> entityId() {
        return this.entityId;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * A detailed status of the life cycle state.
     * 
     */
    @Export(name="lifecycleDetails", type=String.class, parameters={})
    private Output<String> lifecycleDetails;

    /**
     * @return A detailed status of the life cycle state.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
     * 
     */
    @Export(name="logGroupId", type=String.class, parameters={})
    private Output<String> logGroupId;

    /**
     * @return (Updatable) Logging Analytics Log group OCID to associate the processed logs with.
     * 
     */
    public Output<String> logGroupId() {
        return this.logGroupId;
    }
    /**
     * (Updatable) Name of the Logging Analytics Source to use for the processing.
     * 
     */
    @Export(name="logSourceName", type=String.class, parameters={})
    private Output<String> logSourceName;

    /**
     * @return (Updatable) Name of the Logging Analytics Source to use for the processing.
     * 
     */
    public Output<String> logSourceName() {
        return this.logSourceName;
    }
    /**
     * A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return A unique name given to the rule. The name must be unique within the tenancy, and cannot be modified.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The Logging Analytics namespace used for the request.
     * 
     */
    @Export(name="namespace", type=String.class, parameters={})
    private Output<String> namespace;

    /**
     * @return The Logging Analytics namespace used for the request.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }
    /**
     * (Updatable) When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard &#34;*&#34;. For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
     * 
     */
    @Export(name="objectNameFilters", type=List.class, parameters={String.class})
    private Output</* @Nullable */ List<String>> objectNameFilters;

    /**
     * @return (Updatable) When the filters are provided, only the objects matching the filters are picked up for processing. The matchType supported is exact match and accommodates wildcard &#34;*&#34;. For more information on filters, see [Event Filters](https://docs.oracle.com/en-us/iaas/Content/Events/Concepts/filterevents.htm).
     * 
     */
    public Output<Optional<List<String>>> objectNameFilters() {
        return Codegen.optional(this.objectNameFilters);
    }
    /**
     * Name of the Object Storage bucket.
     * 
     */
    @Export(name="osBucketName", type=String.class, parameters={})
    private Output<String> osBucketName;

    /**
     * @return Name of the Object Storage bucket.
     * 
     */
    public Output<String> osBucketName() {
        return this.osBucketName;
    }
    /**
     * Object Storage namespace.
     * 
     */
    @Export(name="osNamespace", type=String.class, parameters={})
    private Output<String> osNamespace;

    /**
     * @return Object Storage namespace.
     * 
     */
    public Output<String> osNamespace() {
        return this.osNamespace;
    }
    /**
     * (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are &#34;contains&#34;.
     * 
     */
    @Export(name="overrides", type=List.class, parameters={LogAnalyticsObjectCollectionRuleOverride.class})
    private Output<List<LogAnalyticsObjectCollectionRuleOverride>> overrides;

    /**
     * @return (Updatable) The override is used to modify some important configuration properties for objects matching a specific pattern inside the bucket. Supported propeties for override are - logSourceName, charEncoding. Supported matchType for override are &#34;contains&#34;.
     * 
     */
    public Output<List<LogAnalyticsObjectCollectionRuleOverride>> overrides() {
        return this.overrides;
    }
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     * 
     */
    @Export(name="pollSince", type=String.class, parameters={})
    private Output<String> pollSince;

    /**
     * @return The oldest time of the file in the bucket to consider for collection. Accepted values are: BEGINNING or CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollSince value other than CURRENT_TIME will result in error.
     * 
     */
    public Output<String> pollSince() {
        return this.pollSince;
    }
    /**
     * The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
     * 
     */
    @Export(name="pollTill", type=String.class, parameters={})
    private Output<String> pollTill;

    /**
     * @return The oldest time of the file in the bucket to consider for collection. Accepted values are: CURRENT_TIME or RFC3339 formatted datetime string. When collectionType is LIVE, specifying pollTill will result in error.
     * 
     */
    public Output<String> pollTill() {
        return this.pollTill;
    }
    /**
     * The current state of the rule.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current state of the rule.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The time when this rule was created. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    /**
     * @return The time when this rule was created. An RFC3339 formatted datetime string.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The time when this rule was last updated. An RFC3339 formatted datetime string.
     * 
     */
    @Export(name="timeUpdated", type=String.class, parameters={})
    private Output<String> timeUpdated;

    /**
     * @return The time when this rule was last updated. An RFC3339 formatted datetime string.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public LogAnalyticsObjectCollectionRule(String name) {
        this(name, LogAnalyticsObjectCollectionRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public LogAnalyticsObjectCollectionRule(String name, LogAnalyticsObjectCollectionRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public LogAnalyticsObjectCollectionRule(String name, LogAnalyticsObjectCollectionRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule", name, args == null ? LogAnalyticsObjectCollectionRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private LogAnalyticsObjectCollectionRule(String name, Output<String> id, @Nullable LogAnalyticsObjectCollectionRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:LogAnalytics/logAnalyticsObjectCollectionRule:LogAnalyticsObjectCollectionRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static LogAnalyticsObjectCollectionRule get(String name, Output<String> id, @Nullable LogAnalyticsObjectCollectionRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new LogAnalyticsObjectCollectionRule(name, id, state, options);
    }
}
