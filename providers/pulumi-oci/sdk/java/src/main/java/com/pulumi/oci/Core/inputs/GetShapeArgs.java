// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.GetShapeFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetShapeArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetShapeArgs Empty = new GetShapeArgs();

    @Import(name="availabilityDomain")
    private Output</* @Nullable */ String> availabilityDomain;

    public Output</* @Nullable */ String> availabilityDomain() {
        return this.availabilityDomain;
    }

    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private Output</* @Nullable */ List<GetShapeFilter>> filters;

    public Output</* @Nullable */ List<GetShapeFilter>> filters() {
        return this.filters;
    }

    @Import(name="imageId")
    private Output</* @Nullable */ String> imageId;

    public Output</* @Nullable */ String> imageId() {
        return this.imageId;
    }

    private GetShapeArgs() {}

    private GetShapeArgs(GetShapeArgs $) {
        this.availabilityDomain = $.availabilityDomain;
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.imageId = $.imageId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetShapeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetShapeArgs $;

        public Builder() {
            $ = new GetShapeArgs();
        }

        public Builder(GetShapeArgs defaults) {
            $ = new GetShapeArgs(Objects.requireNonNull(defaults));
        }

        public Builder availabilityDomain(Output</* @Nullable */ String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(Output</* @Nullable */ List<GetShapeFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetShapeFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetShapeFilter... filters) {
            return filters(List.of(filters));
        }

        public Builder imageId(Output</* @Nullable */ String> imageId) {
            $.imageId = imageId;
            return this;
        }

        public Builder imageId(@Nullable String imageId) {
            return imageId(Output.of(imageId));
        }

        public GetShapeArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
