// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemDbHome;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemDbSystemOption;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemIormConfigCach;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemMaintenanceWindow;
import com.pulumi.oci.Database.outputs.GetDbSystemsDbSystemMaintenanceWindowDetail;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDbSystemsDbSystem {
    /**
     * @return A filter to return only resources that match the given availability domain exactly.
     * 
     */
    private final String availabilityDomain;
    /**
     * @return A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
     * 
     */
    private final List<String> backupNetworkNsgIds;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet the DB system is associated with. Applicable only to Exadata DB systems.
     * 
     */
    private final String backupSubnetId;
    /**
     * @return The cluster name for Exadata and 2-node RAC virtual machine DB systems. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
     * 
     */
    private final String clusterName;
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private final String compartmentId;
    /**
     * @return The number of CPU cores enabled on the DB system.
     * 
     */
    private final Integer cpuCoreCount;
    /**
     * @return The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 40 and 80. The default is 80 percent assigned to DATA storage. Not applicable for virtual machine DB systems. Required for BMDBs.
     * 
     */
    private final Integer dataStoragePercentage;
    /**
     * @return The data storage size, in gigabytes, that is currently available to the DB system. Applies only for virtual machine DB systems. Required for VMDBs.
     * 
     */
    private final Integer dataStorageSizeInGb;
    /**
     * @return The Oracle Database edition that applies to all the databases on the DB system.
     * 
     */
    private final String databaseEdition;
    private final List<GetDbSystemsDbSystemDbHome> dbHomes;
    /**
     * @return The DB system options.
     * 
     */
    private final List<GetDbSystemsDbSystemDbSystemOption> dbSystemOptions;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The type of redundancy configured for the DB system. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
     * 
     */
    private final String diskRedundancy;
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    private final String displayName;
    /**
     * @return The domain name for the DB system.
     * 
     */
    private final String domain;
    /**
     * @return List of the Fault Domains in which this DB system is provisioned.
     * 
     */
    private final List<String> faultDomains;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The hostname for the DB system.
     * 
     */
    private final String hostname;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    private final String id;
    private final List<GetDbSystemsDbSystemIormConfigCach> iormConfigCaches;
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    private final String kmsKeyId;
    private final String kmsKeyVersionId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    private final String lastMaintenanceRunId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     * 
     */
    private final String lastPatchHistoryEntryId;
    /**
     * @return The Oracle license model that applies to all the databases on the DB system. The default is LICENSE_INCLUDED.
     * 
     */
    private final String licenseModel;
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return The port number configured for the listener on the DB system.
     * 
     */
    private final Integer listenerPort;
    private final List<GetDbSystemsDbSystemMaintenanceWindowDetail> maintenanceWindowDetails;
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    private final List<GetDbSystemsDbSystemMaintenanceWindow> maintenanceWindows;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    private final String nextMaintenanceRunId;
    /**
     * @return The number of nodes in the DB system. For RAC DB systems, the value is greater than 1.
     * 
     */
    private final Integer nodeCount;
    /**
     * @return A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that this resource belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * Autonomous Databases with private access require at least 1 Network Security Group (NSG). The nsgIds array cannot be empty.
     * 
     */
    private final List<String> nsgIds;
    /**
     * @return The point in time for a cloned database system when the data disks were cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    private final String pointInTimeDataDiskCloneTimestamp;
    private final String privateIp;
    /**
     * @return The RECO/REDO storage size, in gigabytes, that is currently allocated to the DB system. Applies only for virtual machine DB systems.
     * 
     */
    private final Integer recoStorageSizeInGb;
    /**
     * @return The FQDN of the DNS record for the SCAN IP addresses that are associated with the DB system.
     * 
     */
    private final String scanDnsName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the DB system.
     * 
     */
    private final String scanDnsRecordId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IP addresses associated with the DB system. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     * 
     */
    private final List<String> scanIpIds;
    /**
     * @return The shape of the DB system. The shape determines resources to allocate to the DB system.
     * * For virtual machine shapes, the number of CPU cores and memory
     * * For bare metal and Exadata shapes, the number of CPU cores, storage, and memory
     * 
     */
    private final String shape;
    private final String source;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    private final String sourceDbSystemId;
    /**
     * @return True, if Sparse Diskgroup is configured for Exadata dbsystem, False, if Sparse diskgroup was not configured. Only applied for Exadata shape.
     * 
     */
    private final Boolean sparseDiskgroup;
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the DB system.
     * 
     */
    private final List<String> sshPublicKeys;
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    private final String state;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the DB system is associated with.
     * 
     */
    private final String subnetId;
    /**
     * @return The date and time the DB system was created.
     * 
     */
    private final String timeCreated;
    /**
     * @return The time zone of the DB system. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    private final String timeZone;
    /**
     * @return The Oracle Database version of the DB system.
     * 
     */
    private final String version;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the DB system. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the DB system to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     * 
     */
    private final List<String> vipIds;
    /**
     * @return The OCID of the zone the DB system is associated with.
     * 
     */
    private final String zoneId;

    @CustomType.Constructor
    private GetDbSystemsDbSystem(
        @CustomType.Parameter("availabilityDomain") String availabilityDomain,
        @CustomType.Parameter("backupNetworkNsgIds") List<String> backupNetworkNsgIds,
        @CustomType.Parameter("backupSubnetId") String backupSubnetId,
        @CustomType.Parameter("clusterName") String clusterName,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("cpuCoreCount") Integer cpuCoreCount,
        @CustomType.Parameter("dataStoragePercentage") Integer dataStoragePercentage,
        @CustomType.Parameter("dataStorageSizeInGb") Integer dataStorageSizeInGb,
        @CustomType.Parameter("databaseEdition") String databaseEdition,
        @CustomType.Parameter("dbHomes") List<GetDbSystemsDbSystemDbHome> dbHomes,
        @CustomType.Parameter("dbSystemOptions") List<GetDbSystemsDbSystemDbSystemOption> dbSystemOptions,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("diskRedundancy") String diskRedundancy,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("domain") String domain,
        @CustomType.Parameter("faultDomains") List<String> faultDomains,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("hostname") String hostname,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("iormConfigCaches") List<GetDbSystemsDbSystemIormConfigCach> iormConfigCaches,
        @CustomType.Parameter("kmsKeyId") String kmsKeyId,
        @CustomType.Parameter("kmsKeyVersionId") String kmsKeyVersionId,
        @CustomType.Parameter("lastMaintenanceRunId") String lastMaintenanceRunId,
        @CustomType.Parameter("lastPatchHistoryEntryId") String lastPatchHistoryEntryId,
        @CustomType.Parameter("licenseModel") String licenseModel,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("listenerPort") Integer listenerPort,
        @CustomType.Parameter("maintenanceWindowDetails") List<GetDbSystemsDbSystemMaintenanceWindowDetail> maintenanceWindowDetails,
        @CustomType.Parameter("maintenanceWindows") List<GetDbSystemsDbSystemMaintenanceWindow> maintenanceWindows,
        @CustomType.Parameter("nextMaintenanceRunId") String nextMaintenanceRunId,
        @CustomType.Parameter("nodeCount") Integer nodeCount,
        @CustomType.Parameter("nsgIds") List<String> nsgIds,
        @CustomType.Parameter("pointInTimeDataDiskCloneTimestamp") String pointInTimeDataDiskCloneTimestamp,
        @CustomType.Parameter("privateIp") String privateIp,
        @CustomType.Parameter("recoStorageSizeInGb") Integer recoStorageSizeInGb,
        @CustomType.Parameter("scanDnsName") String scanDnsName,
        @CustomType.Parameter("scanDnsRecordId") String scanDnsRecordId,
        @CustomType.Parameter("scanIpIds") List<String> scanIpIds,
        @CustomType.Parameter("shape") String shape,
        @CustomType.Parameter("source") String source,
        @CustomType.Parameter("sourceDbSystemId") String sourceDbSystemId,
        @CustomType.Parameter("sparseDiskgroup") Boolean sparseDiskgroup,
        @CustomType.Parameter("sshPublicKeys") List<String> sshPublicKeys,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("subnetId") String subnetId,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeZone") String timeZone,
        @CustomType.Parameter("version") String version,
        @CustomType.Parameter("vipIds") List<String> vipIds,
        @CustomType.Parameter("zoneId") String zoneId) {
        this.availabilityDomain = availabilityDomain;
        this.backupNetworkNsgIds = backupNetworkNsgIds;
        this.backupSubnetId = backupSubnetId;
        this.clusterName = clusterName;
        this.compartmentId = compartmentId;
        this.cpuCoreCount = cpuCoreCount;
        this.dataStoragePercentage = dataStoragePercentage;
        this.dataStorageSizeInGb = dataStorageSizeInGb;
        this.databaseEdition = databaseEdition;
        this.dbHomes = dbHomes;
        this.dbSystemOptions = dbSystemOptions;
        this.definedTags = definedTags;
        this.diskRedundancy = diskRedundancy;
        this.displayName = displayName;
        this.domain = domain;
        this.faultDomains = faultDomains;
        this.freeformTags = freeformTags;
        this.hostname = hostname;
        this.id = id;
        this.iormConfigCaches = iormConfigCaches;
        this.kmsKeyId = kmsKeyId;
        this.kmsKeyVersionId = kmsKeyVersionId;
        this.lastMaintenanceRunId = lastMaintenanceRunId;
        this.lastPatchHistoryEntryId = lastPatchHistoryEntryId;
        this.licenseModel = licenseModel;
        this.lifecycleDetails = lifecycleDetails;
        this.listenerPort = listenerPort;
        this.maintenanceWindowDetails = maintenanceWindowDetails;
        this.maintenanceWindows = maintenanceWindows;
        this.nextMaintenanceRunId = nextMaintenanceRunId;
        this.nodeCount = nodeCount;
        this.nsgIds = nsgIds;
        this.pointInTimeDataDiskCloneTimestamp = pointInTimeDataDiskCloneTimestamp;
        this.privateIp = privateIp;
        this.recoStorageSizeInGb = recoStorageSizeInGb;
        this.scanDnsName = scanDnsName;
        this.scanDnsRecordId = scanDnsRecordId;
        this.scanIpIds = scanIpIds;
        this.shape = shape;
        this.source = source;
        this.sourceDbSystemId = sourceDbSystemId;
        this.sparseDiskgroup = sparseDiskgroup;
        this.sshPublicKeys = sshPublicKeys;
        this.state = state;
        this.subnetId = subnetId;
        this.timeCreated = timeCreated;
        this.timeZone = timeZone;
        this.version = version;
        this.vipIds = vipIds;
        this.zoneId = zoneId;
    }

    /**
     * @return A filter to return only resources that match the given availability domain exactly.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that the backup network of this DB system belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). Applicable only to Exadata systems.
     * 
     */
    public List<String> backupNetworkNsgIds() {
        return this.backupNetworkNsgIds;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup network subnet the DB system is associated with. Applicable only to Exadata DB systems.
     * 
     */
    public String backupSubnetId() {
        return this.backupSubnetId;
    }
    /**
     * @return The cluster name for Exadata and 2-node RAC virtual machine DB systems. The cluster name must begin with an alphabetic character, and may contain hyphens (-). Underscores (_) are not permitted. The cluster name can be no longer than 11 characters and is not case sensitive.
     * 
     */
    public String clusterName() {
        return this.clusterName;
    }
    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The number of CPU cores enabled on the DB system.
     * 
     */
    public Integer cpuCoreCount() {
        return this.cpuCoreCount;
    }
    /**
     * @return The percentage assigned to DATA storage (user data and database files). The remaining percentage is assigned to RECO storage (database redo logs, archive logs, and recovery manager backups). Accepted values are 40 and 80. The default is 80 percent assigned to DATA storage. Not applicable for virtual machine DB systems. Required for BMDBs.
     * 
     */
    public Integer dataStoragePercentage() {
        return this.dataStoragePercentage;
    }
    /**
     * @return The data storage size, in gigabytes, that is currently available to the DB system. Applies only for virtual machine DB systems. Required for VMDBs.
     * 
     */
    public Integer dataStorageSizeInGb() {
        return this.dataStorageSizeInGb;
    }
    /**
     * @return The Oracle Database edition that applies to all the databases on the DB system.
     * 
     */
    public String databaseEdition() {
        return this.databaseEdition;
    }
    public List<GetDbSystemsDbSystemDbHome> dbHomes() {
        return this.dbHomes;
    }
    /**
     * @return The DB system options.
     * 
     */
    public List<GetDbSystemsDbSystemDbSystemOption> dbSystemOptions() {
        return this.dbSystemOptions;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The type of redundancy configured for the DB system. NORMAL is 2-way redundancy. HIGH is 3-way redundancy.
     * 
     */
    public String diskRedundancy() {
        return this.diskRedundancy;
    }
    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The domain name for the DB system.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return List of the Fault Domains in which this DB system is provisioned.
     * 
     */
    public List<String> faultDomains() {
        return this.faultDomains;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The hostname for the DB system.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    public String id() {
        return this.id;
    }
    public List<GetDbSystemsDbSystemIormConfigCach> iormConfigCaches() {
        return this.iormConfigCaches;
    }
    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    public String kmsKeyId() {
        return this.kmsKeyId;
    }
    public String kmsKeyVersionId() {
        return this.kmsKeyVersionId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last maintenance run.
     * 
     */
    public String lastMaintenanceRunId() {
        return this.lastMaintenanceRunId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the last patch history. This value is updated as soon as a patch operation starts.
     * 
     */
    public String lastPatchHistoryEntryId() {
        return this.lastPatchHistoryEntryId;
    }
    /**
     * @return The Oracle license model that applies to all the databases on the DB system. The default is LICENSE_INCLUDED.
     * 
     */
    public String licenseModel() {
        return this.licenseModel;
    }
    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The port number configured for the listener on the DB system.
     * 
     */
    public Integer listenerPort() {
        return this.listenerPort;
    }
    public List<GetDbSystemsDbSystemMaintenanceWindowDetail> maintenanceWindowDetails() {
        return this.maintenanceWindowDetails;
    }
    /**
     * @return The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public List<GetDbSystemsDbSystemMaintenanceWindow> maintenanceWindows() {
        return this.maintenanceWindows;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next maintenance run.
     * 
     */
    public String nextMaintenanceRunId() {
        return this.nextMaintenanceRunId;
    }
    /**
     * @return The number of nodes in the DB system. For RAC DB systems, the value is greater than 1.
     * 
     */
    public Integer nodeCount() {
        return this.nodeCount;
    }
    /**
     * @return A list of the [OCIDs](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the network security groups (NSGs) that this resource belongs to. Setting this to an empty array after the list is created removes the resource from all NSGs. For more information about NSGs, see [Security Rules](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/securityrules.htm). **NsgIds restrictions:**
     * * Autonomous Databases with private access require at least 1 Network Security Group (NSG). The nsgIds array cannot be empty.
     * 
     */
    public List<String> nsgIds() {
        return this.nsgIds;
    }
    /**
     * @return The point in time for a cloned database system when the data disks were cloned from the source database system, as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    public String pointInTimeDataDiskCloneTimestamp() {
        return this.pointInTimeDataDiskCloneTimestamp;
    }
    public String privateIp() {
        return this.privateIp;
    }
    /**
     * @return The RECO/REDO storage size, in gigabytes, that is currently allocated to the DB system. Applies only for virtual machine DB systems.
     * 
     */
    public Integer recoStorageSizeInGb() {
        return this.recoStorageSizeInGb;
    }
    /**
     * @return The FQDN of the DNS record for the SCAN IP addresses that are associated with the DB system.
     * 
     */
    public String scanDnsName() {
        return this.scanDnsName;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DNS record for the SCAN IP addresses that are associated with the DB system.
     * 
     */
    public String scanDnsRecordId() {
        return this.scanDnsRecordId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Single Client Access Name (SCAN) IP addresses associated with the DB system. SCAN IP addresses are typically used for load balancing and are not assigned to any interface. Oracle Clusterware directs the requests to the appropriate nodes in the cluster.
     * 
     */
    public List<String> scanIpIds() {
        return this.scanIpIds;
    }
    /**
     * @return The shape of the DB system. The shape determines resources to allocate to the DB system.
     * * For virtual machine shapes, the number of CPU cores and memory
     * * For bare metal and Exadata shapes, the number of CPU cores, storage, and memory
     * 
     */
    public String shape() {
        return this.shape;
    }
    public String source() {
        return this.source;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DB system.
     * 
     */
    public String sourceDbSystemId() {
        return this.sourceDbSystemId;
    }
    /**
     * @return True, if Sparse Diskgroup is configured for Exadata dbsystem, False, if Sparse diskgroup was not configured. Only applied for Exadata shape.
     * 
     */
    public Boolean sparseDiskgroup() {
        return this.sparseDiskgroup;
    }
    /**
     * @return The public key portion of one or more key pairs used for SSH access to the DB system.
     * 
     */
    public List<String> sshPublicKeys() {
        return this.sshPublicKeys;
    }
    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet the DB system is associated with.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }
    /**
     * @return The date and time the DB system was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time zone of the DB system. For details, see [DB System Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    public String timeZone() {
        return this.timeZone;
    }
    /**
     * @return The Oracle Database version of the DB system.
     * 
     */
    public String version() {
        return this.version;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual IP (VIP) addresses associated with the DB system. The Cluster Ready Services (CRS) creates and maintains one VIP address for each node in the DB system to enable failover. If one node fails, the VIP is reassigned to another active node in the cluster.
     * 
     */
    public List<String> vipIds() {
        return this.vipIds;
    }
    /**
     * @return The OCID of the zone the DB system is associated with.
     * 
     */
    public String zoneId() {
        return this.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDbSystemsDbSystem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String availabilityDomain;
        private List<String> backupNetworkNsgIds;
        private String backupSubnetId;
        private String clusterName;
        private String compartmentId;
        private Integer cpuCoreCount;
        private Integer dataStoragePercentage;
        private Integer dataStorageSizeInGb;
        private String databaseEdition;
        private List<GetDbSystemsDbSystemDbHome> dbHomes;
        private List<GetDbSystemsDbSystemDbSystemOption> dbSystemOptions;
        private Map<String,Object> definedTags;
        private String diskRedundancy;
        private String displayName;
        private String domain;
        private List<String> faultDomains;
        private Map<String,Object> freeformTags;
        private String hostname;
        private String id;
        private List<GetDbSystemsDbSystemIormConfigCach> iormConfigCaches;
        private String kmsKeyId;
        private String kmsKeyVersionId;
        private String lastMaintenanceRunId;
        private String lastPatchHistoryEntryId;
        private String licenseModel;
        private String lifecycleDetails;
        private Integer listenerPort;
        private List<GetDbSystemsDbSystemMaintenanceWindowDetail> maintenanceWindowDetails;
        private List<GetDbSystemsDbSystemMaintenanceWindow> maintenanceWindows;
        private String nextMaintenanceRunId;
        private Integer nodeCount;
        private List<String> nsgIds;
        private String pointInTimeDataDiskCloneTimestamp;
        private String privateIp;
        private Integer recoStorageSizeInGb;
        private String scanDnsName;
        private String scanDnsRecordId;
        private List<String> scanIpIds;
        private String shape;
        private String source;
        private String sourceDbSystemId;
        private Boolean sparseDiskgroup;
        private List<String> sshPublicKeys;
        private String state;
        private String subnetId;
        private String timeCreated;
        private String timeZone;
        private String version;
        private List<String> vipIds;
        private String zoneId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDbSystemsDbSystem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.backupNetworkNsgIds = defaults.backupNetworkNsgIds;
    	      this.backupSubnetId = defaults.backupSubnetId;
    	      this.clusterName = defaults.clusterName;
    	      this.compartmentId = defaults.compartmentId;
    	      this.cpuCoreCount = defaults.cpuCoreCount;
    	      this.dataStoragePercentage = defaults.dataStoragePercentage;
    	      this.dataStorageSizeInGb = defaults.dataStorageSizeInGb;
    	      this.databaseEdition = defaults.databaseEdition;
    	      this.dbHomes = defaults.dbHomes;
    	      this.dbSystemOptions = defaults.dbSystemOptions;
    	      this.definedTags = defaults.definedTags;
    	      this.diskRedundancy = defaults.diskRedundancy;
    	      this.displayName = defaults.displayName;
    	      this.domain = defaults.domain;
    	      this.faultDomains = defaults.faultDomains;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostname = defaults.hostname;
    	      this.id = defaults.id;
    	      this.iormConfigCaches = defaults.iormConfigCaches;
    	      this.kmsKeyId = defaults.kmsKeyId;
    	      this.kmsKeyVersionId = defaults.kmsKeyVersionId;
    	      this.lastMaintenanceRunId = defaults.lastMaintenanceRunId;
    	      this.lastPatchHistoryEntryId = defaults.lastPatchHistoryEntryId;
    	      this.licenseModel = defaults.licenseModel;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.listenerPort = defaults.listenerPort;
    	      this.maintenanceWindowDetails = defaults.maintenanceWindowDetails;
    	      this.maintenanceWindows = defaults.maintenanceWindows;
    	      this.nextMaintenanceRunId = defaults.nextMaintenanceRunId;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nsgIds = defaults.nsgIds;
    	      this.pointInTimeDataDiskCloneTimestamp = defaults.pointInTimeDataDiskCloneTimestamp;
    	      this.privateIp = defaults.privateIp;
    	      this.recoStorageSizeInGb = defaults.recoStorageSizeInGb;
    	      this.scanDnsName = defaults.scanDnsName;
    	      this.scanDnsRecordId = defaults.scanDnsRecordId;
    	      this.scanIpIds = defaults.scanIpIds;
    	      this.shape = defaults.shape;
    	      this.source = defaults.source;
    	      this.sourceDbSystemId = defaults.sourceDbSystemId;
    	      this.sparseDiskgroup = defaults.sparseDiskgroup;
    	      this.sshPublicKeys = defaults.sshPublicKeys;
    	      this.state = defaults.state;
    	      this.subnetId = defaults.subnetId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeZone = defaults.timeZone;
    	      this.version = defaults.version;
    	      this.vipIds = defaults.vipIds;
    	      this.zoneId = defaults.zoneId;
        }

        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        public Builder backupNetworkNsgIds(List<String> backupNetworkNsgIds) {
            this.backupNetworkNsgIds = Objects.requireNonNull(backupNetworkNsgIds);
            return this;
        }
        public Builder backupNetworkNsgIds(String... backupNetworkNsgIds) {
            return backupNetworkNsgIds(List.of(backupNetworkNsgIds));
        }
        public Builder backupSubnetId(String backupSubnetId) {
            this.backupSubnetId = Objects.requireNonNull(backupSubnetId);
            return this;
        }
        public Builder clusterName(String clusterName) {
            this.clusterName = Objects.requireNonNull(clusterName);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder cpuCoreCount(Integer cpuCoreCount) {
            this.cpuCoreCount = Objects.requireNonNull(cpuCoreCount);
            return this;
        }
        public Builder dataStoragePercentage(Integer dataStoragePercentage) {
            this.dataStoragePercentage = Objects.requireNonNull(dataStoragePercentage);
            return this;
        }
        public Builder dataStorageSizeInGb(Integer dataStorageSizeInGb) {
            this.dataStorageSizeInGb = Objects.requireNonNull(dataStorageSizeInGb);
            return this;
        }
        public Builder databaseEdition(String databaseEdition) {
            this.databaseEdition = Objects.requireNonNull(databaseEdition);
            return this;
        }
        public Builder dbHomes(List<GetDbSystemsDbSystemDbHome> dbHomes) {
            this.dbHomes = Objects.requireNonNull(dbHomes);
            return this;
        }
        public Builder dbHomes(GetDbSystemsDbSystemDbHome... dbHomes) {
            return dbHomes(List.of(dbHomes));
        }
        public Builder dbSystemOptions(List<GetDbSystemsDbSystemDbSystemOption> dbSystemOptions) {
            this.dbSystemOptions = Objects.requireNonNull(dbSystemOptions);
            return this;
        }
        public Builder dbSystemOptions(GetDbSystemsDbSystemDbSystemOption... dbSystemOptions) {
            return dbSystemOptions(List.of(dbSystemOptions));
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder diskRedundancy(String diskRedundancy) {
            this.diskRedundancy = Objects.requireNonNull(diskRedundancy);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder domain(String domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }
        public Builder faultDomains(List<String> faultDomains) {
            this.faultDomains = Objects.requireNonNull(faultDomains);
            return this;
        }
        public Builder faultDomains(String... faultDomains) {
            return faultDomains(List.of(faultDomains));
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder iormConfigCaches(List<GetDbSystemsDbSystemIormConfigCach> iormConfigCaches) {
            this.iormConfigCaches = Objects.requireNonNull(iormConfigCaches);
            return this;
        }
        public Builder iormConfigCaches(GetDbSystemsDbSystemIormConfigCach... iormConfigCaches) {
            return iormConfigCaches(List.of(iormConfigCaches));
        }
        public Builder kmsKeyId(String kmsKeyId) {
            this.kmsKeyId = Objects.requireNonNull(kmsKeyId);
            return this;
        }
        public Builder kmsKeyVersionId(String kmsKeyVersionId) {
            this.kmsKeyVersionId = Objects.requireNonNull(kmsKeyVersionId);
            return this;
        }
        public Builder lastMaintenanceRunId(String lastMaintenanceRunId) {
            this.lastMaintenanceRunId = Objects.requireNonNull(lastMaintenanceRunId);
            return this;
        }
        public Builder lastPatchHistoryEntryId(String lastPatchHistoryEntryId) {
            this.lastPatchHistoryEntryId = Objects.requireNonNull(lastPatchHistoryEntryId);
            return this;
        }
        public Builder licenseModel(String licenseModel) {
            this.licenseModel = Objects.requireNonNull(licenseModel);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder listenerPort(Integer listenerPort) {
            this.listenerPort = Objects.requireNonNull(listenerPort);
            return this;
        }
        public Builder maintenanceWindowDetails(List<GetDbSystemsDbSystemMaintenanceWindowDetail> maintenanceWindowDetails) {
            this.maintenanceWindowDetails = Objects.requireNonNull(maintenanceWindowDetails);
            return this;
        }
        public Builder maintenanceWindowDetails(GetDbSystemsDbSystemMaintenanceWindowDetail... maintenanceWindowDetails) {
            return maintenanceWindowDetails(List.of(maintenanceWindowDetails));
        }
        public Builder maintenanceWindows(List<GetDbSystemsDbSystemMaintenanceWindow> maintenanceWindows) {
            this.maintenanceWindows = Objects.requireNonNull(maintenanceWindows);
            return this;
        }
        public Builder maintenanceWindows(GetDbSystemsDbSystemMaintenanceWindow... maintenanceWindows) {
            return maintenanceWindows(List.of(maintenanceWindows));
        }
        public Builder nextMaintenanceRunId(String nextMaintenanceRunId) {
            this.nextMaintenanceRunId = Objects.requireNonNull(nextMaintenanceRunId);
            return this;
        }
        public Builder nodeCount(Integer nodeCount) {
            this.nodeCount = Objects.requireNonNull(nodeCount);
            return this;
        }
        public Builder nsgIds(List<String> nsgIds) {
            this.nsgIds = Objects.requireNonNull(nsgIds);
            return this;
        }
        public Builder nsgIds(String... nsgIds) {
            return nsgIds(List.of(nsgIds));
        }
        public Builder pointInTimeDataDiskCloneTimestamp(String pointInTimeDataDiskCloneTimestamp) {
            this.pointInTimeDataDiskCloneTimestamp = Objects.requireNonNull(pointInTimeDataDiskCloneTimestamp);
            return this;
        }
        public Builder privateIp(String privateIp) {
            this.privateIp = Objects.requireNonNull(privateIp);
            return this;
        }
        public Builder recoStorageSizeInGb(Integer recoStorageSizeInGb) {
            this.recoStorageSizeInGb = Objects.requireNonNull(recoStorageSizeInGb);
            return this;
        }
        public Builder scanDnsName(String scanDnsName) {
            this.scanDnsName = Objects.requireNonNull(scanDnsName);
            return this;
        }
        public Builder scanDnsRecordId(String scanDnsRecordId) {
            this.scanDnsRecordId = Objects.requireNonNull(scanDnsRecordId);
            return this;
        }
        public Builder scanIpIds(List<String> scanIpIds) {
            this.scanIpIds = Objects.requireNonNull(scanIpIds);
            return this;
        }
        public Builder scanIpIds(String... scanIpIds) {
            return scanIpIds(List.of(scanIpIds));
        }
        public Builder shape(String shape) {
            this.shape = Objects.requireNonNull(shape);
            return this;
        }
        public Builder source(String source) {
            this.source = Objects.requireNonNull(source);
            return this;
        }
        public Builder sourceDbSystemId(String sourceDbSystemId) {
            this.sourceDbSystemId = Objects.requireNonNull(sourceDbSystemId);
            return this;
        }
        public Builder sparseDiskgroup(Boolean sparseDiskgroup) {
            this.sparseDiskgroup = Objects.requireNonNull(sparseDiskgroup);
            return this;
        }
        public Builder sshPublicKeys(List<String> sshPublicKeys) {
            this.sshPublicKeys = Objects.requireNonNull(sshPublicKeys);
            return this;
        }
        public Builder sshPublicKeys(String... sshPublicKeys) {
            return sshPublicKeys(List.of(sshPublicKeys));
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeZone(String timeZone) {
            this.timeZone = Objects.requireNonNull(timeZone);
            return this;
        }
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }
        public Builder vipIds(List<String> vipIds) {
            this.vipIds = Objects.requireNonNull(vipIds);
            return this;
        }
        public Builder vipIds(String... vipIds) {
            return vipIds(List.of(vipIds));
        }
        public Builder zoneId(String zoneId) {
            this.zoneId = Objects.requireNonNull(zoneId);
            return this;
        }        public GetDbSystemsDbSystem build() {
            return new GetDbSystemsDbSystem(availabilityDomain, backupNetworkNsgIds, backupSubnetId, clusterName, compartmentId, cpuCoreCount, dataStoragePercentage, dataStorageSizeInGb, databaseEdition, dbHomes, dbSystemOptions, definedTags, diskRedundancy, displayName, domain, faultDomains, freeformTags, hostname, id, iormConfigCaches, kmsKeyId, kmsKeyVersionId, lastMaintenanceRunId, lastPatchHistoryEntryId, licenseModel, lifecycleDetails, listenerPort, maintenanceWindowDetails, maintenanceWindows, nextMaintenanceRunId, nodeCount, nsgIds, pointInTimeDataDiskCloneTimestamp, privateIp, recoStorageSizeInGb, scanDnsName, scanDnsRecordId, scanIpIds, shape, source, sourceDbSystemId, sparseDiskgroup, sshPublicKeys, state, subnetId, timeCreated, timeZone, version, vipIds, zoneId);
        }
    }
}
