// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs Empty = new SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs();

    /**
     * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
     * 
     */
    @Import(name="max", required=true)
    private Output<Integer> max;

    /**
     * @return (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
     * 
     */
    public Output<Integer> max() {
        return this.max;
    }

    /**
     * (Updatable) The minimum port number, which must not be greater than the maximum port number.
     * 
     */
    @Import(name="min", required=true)
    private Output<Integer> min;

    /**
     * @return (Updatable) The minimum port number, which must not be greater than the maximum port number.
     * 
     */
    public Output<Integer> min() {
        return this.min;
    }

    private SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs() {}

    private SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs(SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs $) {
        this.max = $.max;
        this.min = $.min;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs $;

        public Builder() {
            $ = new SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs();
        }

        public Builder(SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs defaults) {
            $ = new SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param max (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         * 
         * @return builder
         * 
         */
        public Builder max(Output<Integer> max) {
            $.max = max;
            return this;
        }

        /**
         * @param max (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         * 
         * @return builder
         * 
         */
        public Builder max(Integer max) {
            return max(Output.of(max));
        }

        /**
         * @param min (Updatable) The minimum port number, which must not be greater than the maximum port number.
         * 
         * @return builder
         * 
         */
        public Builder min(Output<Integer> min) {
            $.min = min;
            return this;
        }

        /**
         * @param min (Updatable) The minimum port number, which must not be greater than the maximum port number.
         * 
         * @return builder
         * 
         */
        public Builder min(Integer min) {
            return min(Output.of(min));
        }

        public SecurityListEgressSecurityRuleUdpOptionsSourcePortRangeArgs build() {
            $.max = Objects.requireNonNull($.max, "expected parameter 'max' to be non-null");
            $.min = Objects.requireNonNull($.min, "expected parameter 'min' to be non-null");
            return $;
        }
    }

}
