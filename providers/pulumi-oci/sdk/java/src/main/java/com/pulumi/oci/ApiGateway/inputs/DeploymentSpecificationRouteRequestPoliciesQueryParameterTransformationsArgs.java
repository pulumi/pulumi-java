// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersArgs;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersArgs;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs Empty = new DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs();

    /**
     * (Updatable) Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
     * 
     */
    @Import(name="filterQueryParameters")
    private @Nullable Output<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersArgs> filterQueryParameters;

    /**
     * @return (Updatable) Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
     * 
     */
    public Optional<Output<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersArgs>> filterQueryParameters() {
        return Optional.ofNullable(this.filterQueryParameters);
    }

    /**
     * (Updatable) Rename parameters on the query string as they pass through the gateway.
     * 
     */
    @Import(name="renameQueryParameters")
    private @Nullable Output<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersArgs> renameQueryParameters;

    /**
     * @return (Updatable) Rename parameters on the query string as they pass through the gateway.
     * 
     */
    public Optional<Output<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersArgs>> renameQueryParameters() {
        return Optional.ofNullable(this.renameQueryParameters);
    }

    /**
     * (Updatable) Set parameters on the query string as they pass through the gateway.
     * 
     */
    @Import(name="setQueryParameters")
    private @Nullable Output<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersArgs> setQueryParameters;

    /**
     * @return (Updatable) Set parameters on the query string as they pass through the gateway.
     * 
     */
    public Optional<Output<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersArgs>> setQueryParameters() {
        return Optional.ofNullable(this.setQueryParameters);
    }

    private DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs() {}

    private DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs $) {
        this.filterQueryParameters = $.filterQueryParameters;
        this.renameQueryParameters = $.renameQueryParameters;
        this.setQueryParameters = $.setQueryParameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs $;

        public Builder() {
            $ = new DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs();
        }

        public Builder(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs defaults) {
            $ = new DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filterQueryParameters (Updatable) Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
         * 
         * @return builder
         * 
         */
        public Builder filterQueryParameters(@Nullable Output<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersArgs> filterQueryParameters) {
            $.filterQueryParameters = filterQueryParameters;
            return this;
        }

        /**
         * @param filterQueryParameters (Updatable) Filter parameters from the query string as they pass through the gateway.  The gateway applies filters after other transformations, so any parameters set or renamed must also be listed here when using an ALLOW type policy.
         * 
         * @return builder
         * 
         */
        public Builder filterQueryParameters(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsFilterQueryParametersArgs filterQueryParameters) {
            return filterQueryParameters(Output.of(filterQueryParameters));
        }

        /**
         * @param renameQueryParameters (Updatable) Rename parameters on the query string as they pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder renameQueryParameters(@Nullable Output<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersArgs> renameQueryParameters) {
            $.renameQueryParameters = renameQueryParameters;
            return this;
        }

        /**
         * @param renameQueryParameters (Updatable) Rename parameters on the query string as they pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder renameQueryParameters(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsRenameQueryParametersArgs renameQueryParameters) {
            return renameQueryParameters(Output.of(renameQueryParameters));
        }

        /**
         * @param setQueryParameters (Updatable) Set parameters on the query string as they pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder setQueryParameters(@Nullable Output<DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersArgs> setQueryParameters) {
            $.setQueryParameters = setQueryParameters;
            return this;
        }

        /**
         * @param setQueryParameters (Updatable) Set parameters on the query string as they pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder setQueryParameters(DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsSetQueryParametersArgs setQueryParameters) {
            return setQueryParameters(Output.of(setQueryParameters));
        }

        public DeploymentSpecificationRouteRequestPoliciesQueryParameterTransformationsArgs build() {
            return $;
        }
    }

}
