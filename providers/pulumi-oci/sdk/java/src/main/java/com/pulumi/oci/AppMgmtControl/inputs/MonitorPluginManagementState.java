// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AppMgmtControl.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorPluginManagementState extends com.pulumi.resources.ResourceArgs {

    public static final MonitorPluginManagementState Empty = new MonitorPluginManagementState();

    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="monitoredInstanceDescription")
    private @Nullable Output<String> monitoredInstanceDescription;

    public Optional<Output<String>> monitoredInstanceDescription() {
        return Optional.ofNullable(this.monitoredInstanceDescription);
    }

    @Import(name="monitoredInstanceDisplayName")
    private @Nullable Output<String> monitoredInstanceDisplayName;

    public Optional<Output<String>> monitoredInstanceDisplayName() {
        return Optional.ofNullable(this.monitoredInstanceDisplayName);
    }

    /**
     * OCID of monitored instance.
     * 
     */
    @Import(name="monitoredInstanceId")
    private @Nullable Output<String> monitoredInstanceId;

    /**
     * @return OCID of monitored instance.
     * 
     */
    public Optional<Output<String>> monitoredInstanceId() {
        return Optional.ofNullable(this.monitoredInstanceId);
    }

    @Import(name="monitoredInstanceManagementAgentId")
    private @Nullable Output<String> monitoredInstanceManagementAgentId;

    public Optional<Output<String>> monitoredInstanceManagementAgentId() {
        return Optional.ofNullable(this.monitoredInstanceManagementAgentId);
    }

    @Import(name="state")
    private @Nullable Output<String> state;

    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private MonitorPluginManagementState() {}

    private MonitorPluginManagementState(MonitorPluginManagementState $) {
        this.compartmentId = $.compartmentId;
        this.monitoredInstanceDescription = $.monitoredInstanceDescription;
        this.monitoredInstanceDisplayName = $.monitoredInstanceDisplayName;
        this.monitoredInstanceId = $.monitoredInstanceId;
        this.monitoredInstanceManagementAgentId = $.monitoredInstanceManagementAgentId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorPluginManagementState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorPluginManagementState $;

        public Builder() {
            $ = new MonitorPluginManagementState();
        }

        public Builder(MonitorPluginManagementState defaults) {
            $ = new MonitorPluginManagementState(Objects.requireNonNull(defaults));
        }

        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder monitoredInstanceDescription(@Nullable Output<String> monitoredInstanceDescription) {
            $.monitoredInstanceDescription = monitoredInstanceDescription;
            return this;
        }

        public Builder monitoredInstanceDescription(String monitoredInstanceDescription) {
            return monitoredInstanceDescription(Output.of(monitoredInstanceDescription));
        }

        public Builder monitoredInstanceDisplayName(@Nullable Output<String> monitoredInstanceDisplayName) {
            $.monitoredInstanceDisplayName = monitoredInstanceDisplayName;
            return this;
        }

        public Builder monitoredInstanceDisplayName(String monitoredInstanceDisplayName) {
            return monitoredInstanceDisplayName(Output.of(monitoredInstanceDisplayName));
        }

        /**
         * @param monitoredInstanceId OCID of monitored instance.
         * 
         * @return builder
         * 
         */
        public Builder monitoredInstanceId(@Nullable Output<String> monitoredInstanceId) {
            $.monitoredInstanceId = monitoredInstanceId;
            return this;
        }

        /**
         * @param monitoredInstanceId OCID of monitored instance.
         * 
         * @return builder
         * 
         */
        public Builder monitoredInstanceId(String monitoredInstanceId) {
            return monitoredInstanceId(Output.of(monitoredInstanceId));
        }

        public Builder monitoredInstanceManagementAgentId(@Nullable Output<String> monitoredInstanceManagementAgentId) {
            $.monitoredInstanceManagementAgentId = monitoredInstanceManagementAgentId;
            return this;
        }

        public Builder monitoredInstanceManagementAgentId(String monitoredInstanceManagementAgentId) {
            return monitoredInstanceManagementAgentId(Output.of(monitoredInstanceManagementAgentId));
        }

        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        public Builder state(String state) {
            return state(Output.of(state));
        }

        public MonitorPluginManagementState build() {
            return $;
        }
    }

}
