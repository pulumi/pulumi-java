// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ContainerEngine.outputs.GetNodePoolsFilter;
import com.pulumi.oci.ContainerEngine.outputs.GetNodePoolsNodePool;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetNodePoolsResult {
    /**
     * @return The OCID of the cluster to which this node pool is attached.
     * 
     */
    private final @Nullable String clusterId;
    /**
     * @return The OCID of the compartment in which the node pool exists.
     * 
     */
    private final String compartmentId;
    private final @Nullable List<GetNodePoolsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The name of the node.
     * 
     */
    private final @Nullable String name;
    /**
     * @return The list of node_pools.
     * 
     */
    private final List<GetNodePoolsNodePool> nodePools;

    @CustomType.Constructor
    private GetNodePoolsResult(
        @CustomType.Parameter("clusterId") @Nullable String clusterId,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetNodePoolsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("nodePools") List<GetNodePoolsNodePool> nodePools) {
        this.clusterId = clusterId;
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.name = name;
        this.nodePools = nodePools;
    }

    /**
     * @return The OCID of the cluster to which this node pool is attached.
     * 
     */
    public Optional<String> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }
    /**
     * @return The OCID of the compartment in which the node pool exists.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetNodePoolsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the node.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of node_pools.
     * 
     */
    public List<GetNodePoolsNodePool> nodePools() {
        return this.nodePools;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNodePoolsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String clusterId;
        private String compartmentId;
        private @Nullable List<GetNodePoolsFilter> filters;
        private String id;
        private @Nullable String name;
        private List<GetNodePoolsNodePool> nodePools;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNodePoolsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterId = defaults.clusterId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.nodePools = defaults.nodePools;
        }

        public Builder clusterId(@Nullable String clusterId) {
            this.clusterId = clusterId;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetNodePoolsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetNodePoolsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder nodePools(List<GetNodePoolsNodePool> nodePools) {
            this.nodePools = Objects.requireNonNull(nodePools);
            return this;
        }
        public Builder nodePools(GetNodePoolsNodePool... nodePools) {
            return nodePools(List.of(nodePools));
        }        public GetNodePoolsResult build() {
            return new GetNodePoolsResult(clusterId, compartmentId, filters, id, name, nodePools);
        }
    }
}
