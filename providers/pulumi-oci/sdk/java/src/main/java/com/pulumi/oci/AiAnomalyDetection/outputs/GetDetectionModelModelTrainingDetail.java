// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiAnomalyDetection.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDetectionModelModelTrainingDetail {
    /**
     * @return The list of OCIDs of the data assets to train the model. The dataAssets have to be in the same project where the ai model would reside.
     * 
     */
    private final List<String> dataAssetIds;
    /**
     * @return A target model accuracy metric user provides as their requirement
     * 
     */
    private final Double targetFap;
    /**
     * @return Fraction of total data that is used for training the model. The remaining is used for validation of the model.
     * 
     */
    private final Double trainingFraction;

    @CustomType.Constructor
    private GetDetectionModelModelTrainingDetail(
        @CustomType.Parameter("dataAssetIds") List<String> dataAssetIds,
        @CustomType.Parameter("targetFap") Double targetFap,
        @CustomType.Parameter("trainingFraction") Double trainingFraction) {
        this.dataAssetIds = dataAssetIds;
        this.targetFap = targetFap;
        this.trainingFraction = trainingFraction;
    }

    /**
     * @return The list of OCIDs of the data assets to train the model. The dataAssets have to be in the same project where the ai model would reside.
     * 
     */
    public List<String> dataAssetIds() {
        return this.dataAssetIds;
    }
    /**
     * @return A target model accuracy metric user provides as their requirement
     * 
     */
    public Double targetFap() {
        return this.targetFap;
    }
    /**
     * @return Fraction of total data that is used for training the model. The remaining is used for validation of the model.
     * 
     */
    public Double trainingFraction() {
        return this.trainingFraction;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDetectionModelModelTrainingDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> dataAssetIds;
        private Double targetFap;
        private Double trainingFraction;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDetectionModelModelTrainingDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataAssetIds = defaults.dataAssetIds;
    	      this.targetFap = defaults.targetFap;
    	      this.trainingFraction = defaults.trainingFraction;
        }

        public Builder dataAssetIds(List<String> dataAssetIds) {
            this.dataAssetIds = Objects.requireNonNull(dataAssetIds);
            return this;
        }
        public Builder dataAssetIds(String... dataAssetIds) {
            return dataAssetIds(List.of(dataAssetIds));
        }
        public Builder targetFap(Double targetFap) {
            this.targetFap = Objects.requireNonNull(targetFap);
            return this;
        }
        public Builder trainingFraction(Double trainingFraction) {
            this.trainingFraction = Objects.requireNonNull(trainingFraction);
            return this;
        }        public GetDetectionModelModelTrainingDetail build() {
            return new GetDetectionModelModelTrainingDetail(dataAssetIds, targetFap, trainingFraction);
        }
    }
}
