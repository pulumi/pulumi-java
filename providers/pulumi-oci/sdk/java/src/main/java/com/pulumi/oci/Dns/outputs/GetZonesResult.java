// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Dns.outputs.GetZonesFilter;
import com.pulumi.oci.Dns.outputs.GetZonesZone;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetZonesResult {
    /**
     * @return The OCID of the compartment containing the zone.
     * 
     */
    private final String compartmentId;
    private final @Nullable List<GetZonesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The name of the zone.
     * 
     */
    private final @Nullable String name;
    private final @Nullable String nameContains;
    /**
     * @return The scope of the zone.
     * 
     */
    private final @Nullable String scope;
    private final @Nullable String sortBy;
    private final @Nullable String sortOrder;
    /**
     * @return The current state of the zone resource.
     * 
     */
    private final @Nullable String state;
    private final @Nullable String timeCreatedGreaterThanOrEqualTo;
    private final @Nullable String timeCreatedLessThan;
    /**
     * @return The OCID of the TSIG key.
     * 
     */
    private final @Nullable String tsigKeyId;
    /**
     * @return The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
     * 
     */
    private final @Nullable String viewId;
    /**
     * @return The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     * 
     */
    private final @Nullable String zoneType;
    /**
     * @return The list of zones.
     * 
     */
    private final List<GetZonesZone> zones;

    @CustomType.Constructor
    private GetZonesResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetZonesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("nameContains") @Nullable String nameContains,
        @CustomType.Parameter("scope") @Nullable String scope,
        @CustomType.Parameter("sortBy") @Nullable String sortBy,
        @CustomType.Parameter("sortOrder") @Nullable String sortOrder,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("timeCreatedGreaterThanOrEqualTo") @Nullable String timeCreatedGreaterThanOrEqualTo,
        @CustomType.Parameter("timeCreatedLessThan") @Nullable String timeCreatedLessThan,
        @CustomType.Parameter("tsigKeyId") @Nullable String tsigKeyId,
        @CustomType.Parameter("viewId") @Nullable String viewId,
        @CustomType.Parameter("zoneType") @Nullable String zoneType,
        @CustomType.Parameter("zones") List<GetZonesZone> zones) {
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.name = name;
        this.nameContains = nameContains;
        this.scope = scope;
        this.sortBy = sortBy;
        this.sortOrder = sortOrder;
        this.state = state;
        this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
        this.timeCreatedLessThan = timeCreatedLessThan;
        this.tsigKeyId = tsigKeyId;
        this.viewId = viewId;
        this.zoneType = zoneType;
        this.zones = zones;
    }

    /**
     * @return The OCID of the compartment containing the zone.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetZonesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the zone.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> nameContains() {
        return Optional.ofNullable(this.nameContains);
    }
    /**
     * @return The scope of the zone.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }
    public Optional<String> sortBy() {
        return Optional.ofNullable(this.sortBy);
    }
    public Optional<String> sortOrder() {
        return Optional.ofNullable(this.sortOrder);
    }
    /**
     * @return The current state of the zone resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }
    /**
     * @return The OCID of the TSIG key.
     * 
     */
    public Optional<String> tsigKeyId() {
        return Optional.ofNullable(this.tsigKeyId);
    }
    /**
     * @return The OCID of the private view containing the zone. This value will be null for zones in the global DNS, which are publicly resolvable and not part of a private view.
     * 
     */
    public Optional<String> viewId() {
        return Optional.ofNullable(this.viewId);
    }
    /**
     * @return The type of the zone. Must be either `PRIMARY` or `SECONDARY`. `SECONDARY` is only supported for GLOBAL zones.
     * 
     */
    public Optional<String> zoneType() {
        return Optional.ofNullable(this.zoneType);
    }
    /**
     * @return The list of zones.
     * 
     */
    public List<GetZonesZone> zones() {
        return this.zones;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetZonesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetZonesFilter> filters;
        private String id;
        private @Nullable String name;
        private @Nullable String nameContains;
        private @Nullable String scope;
        private @Nullable String sortBy;
        private @Nullable String sortOrder;
        private @Nullable String state;
        private @Nullable String timeCreatedGreaterThanOrEqualTo;
        private @Nullable String timeCreatedLessThan;
        private @Nullable String tsigKeyId;
        private @Nullable String viewId;
        private @Nullable String zoneType;
        private List<GetZonesZone> zones;

        public Builder() {
    	      // Empty
        }

        public Builder(GetZonesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.nameContains = defaults.nameContains;
    	      this.scope = defaults.scope;
    	      this.sortBy = defaults.sortBy;
    	      this.sortOrder = defaults.sortOrder;
    	      this.state = defaults.state;
    	      this.timeCreatedGreaterThanOrEqualTo = defaults.timeCreatedGreaterThanOrEqualTo;
    	      this.timeCreatedLessThan = defaults.timeCreatedLessThan;
    	      this.tsigKeyId = defaults.tsigKeyId;
    	      this.viewId = defaults.viewId;
    	      this.zoneType = defaults.zoneType;
    	      this.zones = defaults.zones;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetZonesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetZonesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder nameContains(@Nullable String nameContains) {
            this.nameContains = nameContains;
            return this;
        }
        public Builder scope(@Nullable String scope) {
            this.scope = scope;
            return this;
        }
        public Builder sortBy(@Nullable String sortBy) {
            this.sortBy = sortBy;
            return this;
        }
        public Builder sortOrder(@Nullable String sortOrder) {
            this.sortOrder = sortOrder;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {
            this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {
            this.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }
        public Builder tsigKeyId(@Nullable String tsigKeyId) {
            this.tsigKeyId = tsigKeyId;
            return this;
        }
        public Builder viewId(@Nullable String viewId) {
            this.viewId = viewId;
            return this;
        }
        public Builder zoneType(@Nullable String zoneType) {
            this.zoneType = zoneType;
            return this;
        }
        public Builder zones(List<GetZonesZone> zones) {
            this.zones = Objects.requireNonNull(zones);
            return this;
        }
        public Builder zones(GetZonesZone... zones) {
            return zones(List.of(zones));
        }        public GetZonesResult build() {
            return new GetZonesResult(compartmentId, filters, id, name, nameContains, scope, sortBy, sortOrder, state, timeCreatedGreaterThanOrEqualTo, timeCreatedLessThan, tsigKeyId, viewId, zoneType, zones);
        }
    }
}
