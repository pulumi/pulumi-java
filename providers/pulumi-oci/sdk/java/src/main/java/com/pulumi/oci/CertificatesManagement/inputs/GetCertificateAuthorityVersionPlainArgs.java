// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetCertificateAuthorityVersionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCertificateAuthorityVersionPlainArgs Empty = new GetCertificateAuthorityVersionPlainArgs();

    /**
     * The OCID of the certificate authority (CA).
     * 
     */
    @Import(name="certificateAuthorityId", required=true)
    private String certificateAuthorityId;

    /**
     * @return The OCID of the certificate authority (CA).
     * 
     */
    public String certificateAuthorityId() {
        return this.certificateAuthorityId;
    }

    @Import(name="certificateAuthorityVersionNumber", required=true)
    private String certificateAuthorityVersionNumber;

    public String certificateAuthorityVersionNumber() {
        return this.certificateAuthorityVersionNumber;
    }

    private GetCertificateAuthorityVersionPlainArgs() {}

    private GetCertificateAuthorityVersionPlainArgs(GetCertificateAuthorityVersionPlainArgs $) {
        this.certificateAuthorityId = $.certificateAuthorityId;
        this.certificateAuthorityVersionNumber = $.certificateAuthorityVersionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCertificateAuthorityVersionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCertificateAuthorityVersionPlainArgs $;

        public Builder() {
            $ = new GetCertificateAuthorityVersionPlainArgs();
        }

        public Builder(GetCertificateAuthorityVersionPlainArgs defaults) {
            $ = new GetCertificateAuthorityVersionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateAuthorityId The OCID of the certificate authority (CA).
         * 
         * @return builder
         * 
         */
        public Builder certificateAuthorityId(String certificateAuthorityId) {
            $.certificateAuthorityId = certificateAuthorityId;
            return this;
        }

        public Builder certificateAuthorityVersionNumber(String certificateAuthorityVersionNumber) {
            $.certificateAuthorityVersionNumber = certificateAuthorityVersionNumber;
            return this;
        }

        public GetCertificateAuthorityVersionPlainArgs build() {
            $.certificateAuthorityId = Objects.requireNonNull($.certificateAuthorityId, "expected parameter 'certificateAuthorityId' to be non-null");
            $.certificateAuthorityVersionNumber = Objects.requireNonNull($.certificateAuthorityVersionNumber, "expected parameter 'certificateAuthorityVersionNumber' to be non-null");
            return $;
        }
    }

}
