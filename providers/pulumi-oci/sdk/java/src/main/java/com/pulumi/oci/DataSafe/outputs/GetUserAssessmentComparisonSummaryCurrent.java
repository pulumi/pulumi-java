// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetUserAssessmentComparisonSummaryCurrent {
    private final String targetId;
    /**
     * @return The OCID of the user assessment.
     * 
     */
    private final String userAssessmentId;

    @CustomType.Constructor
    private GetUserAssessmentComparisonSummaryCurrent(
        @CustomType.Parameter("targetId") String targetId,
        @CustomType.Parameter("userAssessmentId") String userAssessmentId) {
        this.targetId = targetId;
        this.userAssessmentId = userAssessmentId;
    }

    public String targetId() {
        return this.targetId;
    }
    /**
     * @return The OCID of the user assessment.
     * 
     */
    public String userAssessmentId() {
        return this.userAssessmentId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetUserAssessmentComparisonSummaryCurrent defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String targetId;
        private String userAssessmentId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetUserAssessmentComparisonSummaryCurrent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.targetId = defaults.targetId;
    	      this.userAssessmentId = defaults.userAssessmentId;
        }

        public Builder targetId(String targetId) {
            this.targetId = Objects.requireNonNull(targetId);
            return this;
        }
        public Builder userAssessmentId(String userAssessmentId) {
            this.userAssessmentId = Objects.requireNonNull(userAssessmentId);
            return this;
        }        public GetUserAssessmentComparisonSummaryCurrent build() {
            return new GetUserAssessmentComparisonSummaryCurrent(targetId, userAssessmentId);
        }
    }
}
