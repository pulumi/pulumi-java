// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataCatalog;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DataCatalog.DataAssetArgs;
import com.pulumi.oci.DataCatalog.inputs.DataAssetState;
import com.pulumi.oci.Utilities;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Data Asset resource in Oracle Cloud Infrastructure Data Catalog service.
 * 
 * Create a new data asset.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * DataAssets can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:DataCatalog/dataAsset:DataAsset test_data_asset &#34;catalogs/{catalogId}/dataAssets/{dataAssetKey}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DataCatalog/dataAsset:DataAsset")
public class DataAsset extends com.pulumi.resources.CustomResource {
    /**
     * Unique catalog identifier.
     * 
     */
    @Export(name="catalogId", type=String.class, parameters={})
    private Output<String> catalogId;

    /**
     * @return Unique catalog identifier.
     * 
     */
    public Output<String> catalogId() {
        return this.catalogId;
    }
    /**
     * OCID of the user who created the data asset.
     * 
     */
    @Export(name="createdById", type=String.class, parameters={})
    private Output<String> createdById;

    /**
     * @return OCID of the user who created the data asset.
     * 
     */
    public Output<String> createdById() {
        return this.createdById;
    }
    /**
     * (Updatable) Detailed description of the data asset.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return (Updatable) Detailed description of the data asset.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) A user-friendly display name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly display name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * External URI that can be used to reference the object. Format will differ based on the type of object.
     * 
     */
    @Export(name="externalKey", type=String.class, parameters={})
    private Output<String> externalKey;

    /**
     * @return External URI that can be used to reference the object. Format will differ based on the type of object.
     * 
     */
    public Output<String> externalKey() {
        return this.externalKey;
    }
    /**
     * Unique data asset key that is immutable.
     * 
     */
    @Export(name="key", type=String.class, parameters={})
    private Output<String> key;

    /**
     * @return Unique data asset key that is immutable.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * A map of maps that contains the properties which are specific to the asset type. Each data asset type definition defines it&#39;s set of required and optional properties. The map keys are category names and the values are maps of property name to property value. Every property is contained inside of a category. Most data assets have required properties within the &#34;default&#34; category. Example: `{&#34;properties&#34;: { &#34;default&#34;: { &#34;host&#34;: &#34;host1&#34;, &#34;port&#34;: &#34;1521&#34;, &#34;database&#34;: &#34;orcl&#34;}}}`
     * 
     */
    @Export(name="properties", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> properties;

    /**
     * @return A map of maps that contains the properties which are specific to the asset type. Each data asset type definition defines it&#39;s set of required and optional properties. The map keys are category names and the values are maps of property name to property value. Every property is contained inside of a category. Most data assets have required properties within the &#34;default&#34; category. Example: `{&#34;properties&#34;: { &#34;default&#34;: { &#34;host&#34;: &#34;host1&#34;, &#34;port&#34;: &#34;1521&#34;, &#34;database&#34;: &#34;orcl&#34;}}}`
     * 
     */
    public Output<Map<String,Object>> properties() {
        return this.properties;
    }
    /**
     * The current state of the data asset.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current state of the data asset.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The date and time the data asset was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2019-03-25T21:10:29.600Z`
     * 
     */
    @Export(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    /**
     * @return The date and time the data asset was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Example: `2019-03-25T21:10:29.600Z`
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * The last time that a harvest was performed on the data asset. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    @Export(name="timeHarvested", type=String.class, parameters={})
    private Output<String> timeHarvested;

    /**
     * @return The last time that a harvest was performed on the data asset. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    public Output<String> timeHarvested() {
        return this.timeHarvested;
    }
    /**
     * The last time that any change was made to the data asset. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    @Export(name="timeUpdated", type=String.class, parameters={})
    private Output<String> timeUpdated;

    /**
     * @return The last time that any change was made to the data asset. An [RFC3339](https://tools.ietf.org/html/rfc3339) formatted datetime string.
     * 
     */
    public Output<String> timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * The key of the data asset type. This can be obtained via the &#39;/types&#39; endpoint.
     * 
     */
    @Export(name="typeKey", type=String.class, parameters={})
    private Output<String> typeKey;

    /**
     * @return The key of the data asset type. This can be obtained via the &#39;/types&#39; endpoint.
     * 
     */
    public Output<String> typeKey() {
        return this.typeKey;
    }
    /**
     * OCID of the user who last modified the data asset.
     * 
     */
    @Export(name="updatedById", type=String.class, parameters={})
    private Output<String> updatedById;

    /**
     * @return OCID of the user who last modified the data asset.
     * 
     */
    public Output<String> updatedById() {
        return this.updatedById;
    }
    /**
     * URI to the data asset instance in the API.
     * 
     */
    @Export(name="uri", type=String.class, parameters={})
    private Output<String> uri;

    /**
     * @return URI to the data asset instance in the API.
     * 
     */
    public Output<String> uri() {
        return this.uri;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DataAsset(String name) {
        this(name, DataAssetArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DataAsset(String name, DataAssetArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DataAsset(String name, DataAssetArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataCatalog/dataAsset:DataAsset", name, args == null ? DataAssetArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DataAsset(String name, Output<String> id, @Nullable DataAssetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataCatalog/dataAsset:DataAsset", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DataAsset get(String name, Output<String> id, @Nullable DataAssetState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DataAsset(name, id, state, options);
    }
}
