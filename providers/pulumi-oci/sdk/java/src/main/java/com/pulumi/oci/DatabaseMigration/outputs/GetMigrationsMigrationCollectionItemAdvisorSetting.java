// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetMigrationsMigrationCollectionItemAdvisorSetting {
    /**
     * @return True to not interrupt migration execution due to Pre-Migration Advisor errors. Default is false.
     * 
     */
    private final Boolean isIgnoreErrors;
    /**
     * @return True to skip the Pre-Migration Advisor execution. Default is false.
     * 
     */
    private final Boolean isSkipAdvisor;

    @CustomType.Constructor
    private GetMigrationsMigrationCollectionItemAdvisorSetting(
        @CustomType.Parameter("isIgnoreErrors") Boolean isIgnoreErrors,
        @CustomType.Parameter("isSkipAdvisor") Boolean isSkipAdvisor) {
        this.isIgnoreErrors = isIgnoreErrors;
        this.isSkipAdvisor = isSkipAdvisor;
    }

    /**
     * @return True to not interrupt migration execution due to Pre-Migration Advisor errors. Default is false.
     * 
     */
    public Boolean isIgnoreErrors() {
        return this.isIgnoreErrors;
    }
    /**
     * @return True to skip the Pre-Migration Advisor execution. Default is false.
     * 
     */
    public Boolean isSkipAdvisor() {
        return this.isSkipAdvisor;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMigrationsMigrationCollectionItemAdvisorSetting defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean isIgnoreErrors;
        private Boolean isSkipAdvisor;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMigrationsMigrationCollectionItemAdvisorSetting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isIgnoreErrors = defaults.isIgnoreErrors;
    	      this.isSkipAdvisor = defaults.isSkipAdvisor;
        }

        public Builder isIgnoreErrors(Boolean isIgnoreErrors) {
            this.isIgnoreErrors = Objects.requireNonNull(isIgnoreErrors);
            return this;
        }
        public Builder isSkipAdvisor(Boolean isSkipAdvisor) {
            this.isSkipAdvisor = Objects.requireNonNull(isSkipAdvisor);
            return this;
        }        public GetMigrationsMigrationCollectionItemAdvisorSetting build() {
            return new GetMigrationsMigrationCollectionItemAdvisorSetting(isIgnoreErrors, isSkipAdvisor);
        }
    }
}
