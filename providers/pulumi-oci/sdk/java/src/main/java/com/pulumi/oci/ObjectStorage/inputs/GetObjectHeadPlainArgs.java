// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetObjectHeadPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetObjectHeadPlainArgs Empty = new GetObjectHeadPlainArgs();

    /**
     * The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    @Import(name="bucket", required=true)
    private String bucket;

    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    public String bucket() {
        return this.bucket;
    }

    /**
     * The top-level namespace used for the request.
     * 
     */
    @Import(name="namespace", required=true)
    private String namespace;

    /**
     * @return The top-level namespace used for the request.
     * 
     */
    public String namespace() {
        return this.namespace;
    }

    /**
     * The name of the object. Avoid entering confidential information. Example: `test/object1.log`
     * 
     */
    @Import(name="object", required=true)
    private String object;

    /**
     * @return The name of the object. Avoid entering confidential information. Example: `test/object1.log`
     * 
     */
    public String object() {
        return this.object;
    }

    private GetObjectHeadPlainArgs() {}

    private GetObjectHeadPlainArgs(GetObjectHeadPlainArgs $) {
        this.bucket = $.bucket;
        this.namespace = $.namespace;
        this.object = $.object;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetObjectHeadPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetObjectHeadPlainArgs $;

        public Builder() {
            $ = new GetObjectHeadPlainArgs();
        }

        public Builder(GetObjectHeadPlainArgs defaults) {
            $ = new GetObjectHeadPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param namespace The top-level namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param object The name of the object. Avoid entering confidential information. Example: `test/object1.log`
         * 
         * @return builder
         * 
         */
        public Builder object(String object) {
            $.object = object;
            return this;
        }

        public GetObjectHeadPlainArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            $.object = Objects.requireNonNull($.object, "expected parameter 'object' to be non-null");
            return $;
        }
    }

}
