// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MysqlDbSystemSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final MysqlDbSystemSourceArgs Empty = new MysqlDbSystemSourceArgs();

    /**
     * The OCID of the backup to be used as the source for the new DB System.
     * 
     */
    @Import(name="backupId")
    private @Nullable Output<String> backupId;

    /**
     * @return The OCID of the backup to be used as the source for the new DB System.
     * 
     */
    public Optional<Output<String>> backupId() {
        return Optional.ofNullable(this.backupId);
    }

    /**
     * The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
     * 
     */
    @Import(name="sourceType", required=true)
    private Output<String> sourceType;

    /**
     * @return The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
     * 
     */
    public Output<String> sourceType() {
        return this.sourceType;
    }

    private MysqlDbSystemSourceArgs() {}

    private MysqlDbSystemSourceArgs(MysqlDbSystemSourceArgs $) {
        this.backupId = $.backupId;
        this.sourceType = $.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MysqlDbSystemSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MysqlDbSystemSourceArgs $;

        public Builder() {
            $ = new MysqlDbSystemSourceArgs();
        }

        public Builder(MysqlDbSystemSourceArgs defaults) {
            $ = new MysqlDbSystemSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupId The OCID of the backup to be used as the source for the new DB System.
         * 
         * @return builder
         * 
         */
        public Builder backupId(@Nullable Output<String> backupId) {
            $.backupId = backupId;
            return this;
        }

        /**
         * @param backupId The OCID of the backup to be used as the source for the new DB System.
         * 
         * @return builder
         * 
         */
        public Builder backupId(String backupId) {
            return backupId(Output.of(backupId));
        }

        /**
         * @param sourceType The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        /**
         * @param sourceType The specific source identifier. Use `BACKUP` for creating a new database by restoring from a backup.
         * 
         * @return builder
         * 
         */
        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public MysqlDbSystemSourceArgs build() {
            $.sourceType = Objects.requireNonNull($.sourceType, "expected parameter 'sourceType' to be non-null");
            return $;
        }
    }

}
