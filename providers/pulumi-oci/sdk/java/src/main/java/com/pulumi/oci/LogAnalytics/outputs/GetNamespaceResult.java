// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetNamespaceResult {
    /**
     * @return The is the tenancy ID
     * 
     */
    private final String compartmentId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return This indicates if the tenancy is onboarded to Logging Analytics
     * 
     */
    private final Boolean isOnboarded;
    /**
     * @return This is the namespace name of a tenancy
     * 
     */
    private final String namespace;

    @CustomType.Constructor
    private GetNamespaceResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isOnboarded") Boolean isOnboarded,
        @CustomType.Parameter("namespace") String namespace) {
        this.compartmentId = compartmentId;
        this.id = id;
        this.isOnboarded = isOnboarded;
        this.namespace = namespace;
    }

    /**
     * @return The is the tenancy ID
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return This indicates if the tenancy is onboarded to Logging Analytics
     * 
     */
    public Boolean isOnboarded() {
        return this.isOnboarded;
    }
    /**
     * @return This is the namespace name of a tenancy
     * 
     */
    public String namespace() {
        return this.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNamespaceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private String id;
        private Boolean isOnboarded;
        private String namespace;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNamespaceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.id = defaults.id;
    	      this.isOnboarded = defaults.isOnboarded;
    	      this.namespace = defaults.namespace;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isOnboarded(Boolean isOnboarded) {
            this.isOnboarded = Objects.requireNonNull(isOnboarded);
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }        public GetNamespaceResult build() {
            return new GetNamespaceResult(compartmentId, id, isOnboarded, namespace);
        }
    }
}
