// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.StackMonitoring.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.StackMonitoring.inputs.GetDiscoveryJobLogsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDiscoveryJobLogsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDiscoveryJobLogsPlainArgs Empty = new GetDiscoveryJobLogsPlainArgs();

    /**
     * The Discovery Job ID
     * 
     */
    @Import(name="discoveryJobId", required=true)
    private String discoveryJobId;

    /**
     * @return The Discovery Job ID
     * 
     */
    public String discoveryJobId() {
        return this.discoveryJobId;
    }

    @Import(name="filters")
    private @Nullable List<GetDiscoveryJobLogsFilter> filters;

    public Optional<List<GetDiscoveryJobLogsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The log type like INFO, WARNING, ERROR, SUCCESS
     * 
     */
    @Import(name="logType")
    private @Nullable String logType;

    /**
     * @return The log type like INFO, WARNING, ERROR, SUCCESS
     * 
     */
    public Optional<String> logType() {
        return Optional.ofNullable(this.logType);
    }

    private GetDiscoveryJobLogsPlainArgs() {}

    private GetDiscoveryJobLogsPlainArgs(GetDiscoveryJobLogsPlainArgs $) {
        this.discoveryJobId = $.discoveryJobId;
        this.filters = $.filters;
        this.logType = $.logType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDiscoveryJobLogsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDiscoveryJobLogsPlainArgs $;

        public Builder() {
            $ = new GetDiscoveryJobLogsPlainArgs();
        }

        public Builder(GetDiscoveryJobLogsPlainArgs defaults) {
            $ = new GetDiscoveryJobLogsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param discoveryJobId The Discovery Job ID
         * 
         * @return builder
         * 
         */
        public Builder discoveryJobId(String discoveryJobId) {
            $.discoveryJobId = discoveryJobId;
            return this;
        }

        public Builder filters(@Nullable List<GetDiscoveryJobLogsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetDiscoveryJobLogsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param logType The log type like INFO, WARNING, ERROR, SUCCESS
         * 
         * @return builder
         * 
         */
        public Builder logType(@Nullable String logType) {
            $.logType = logType;
            return this;
        }

        public GetDiscoveryJobLogsPlainArgs build() {
            $.discoveryJobId = Objects.requireNonNull($.discoveryJobId, "expected parameter 'discoveryJobId' to be non-null");
            return $;
        }
    }

}
