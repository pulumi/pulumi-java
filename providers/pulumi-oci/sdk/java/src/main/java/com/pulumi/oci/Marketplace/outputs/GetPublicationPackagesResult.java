// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Marketplace.outputs.GetPublicationPackagesFilter;
import com.pulumi.oci.Marketplace.outputs.GetPublicationPackagesPublicationPackage;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPublicationPackagesResult {
    private final @Nullable List<GetPublicationPackagesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The specified package&#39;s type.
     * 
     */
    private final @Nullable String packageType;
    private final @Nullable String packageVersion;
    private final String publicationId;
    /**
     * @return The list of publication_packages.
     * 
     */
    private final List<GetPublicationPackagesPublicationPackage> publicationPackages;

    @CustomType.Constructor
    private GetPublicationPackagesResult(
        @CustomType.Parameter("filters") @Nullable List<GetPublicationPackagesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("packageType") @Nullable String packageType,
        @CustomType.Parameter("packageVersion") @Nullable String packageVersion,
        @CustomType.Parameter("publicationId") String publicationId,
        @CustomType.Parameter("publicationPackages") List<GetPublicationPackagesPublicationPackage> publicationPackages) {
        this.filters = filters;
        this.id = id;
        this.packageType = packageType;
        this.packageVersion = packageVersion;
        this.publicationId = publicationId;
        this.publicationPackages = publicationPackages;
    }

    public List<GetPublicationPackagesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The specified package&#39;s type.
     * 
     */
    public Optional<String> packageType() {
        return Optional.ofNullable(this.packageType);
    }
    public Optional<String> packageVersion() {
        return Optional.ofNullable(this.packageVersion);
    }
    public String publicationId() {
        return this.publicationId;
    }
    /**
     * @return The list of publication_packages.
     * 
     */
    public List<GetPublicationPackagesPublicationPackage> publicationPackages() {
        return this.publicationPackages;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPublicationPackagesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<GetPublicationPackagesFilter> filters;
        private String id;
        private @Nullable String packageType;
        private @Nullable String packageVersion;
        private String publicationId;
        private List<GetPublicationPackagesPublicationPackage> publicationPackages;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPublicationPackagesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.packageType = defaults.packageType;
    	      this.packageVersion = defaults.packageVersion;
    	      this.publicationId = defaults.publicationId;
    	      this.publicationPackages = defaults.publicationPackages;
        }

        public Builder filters(@Nullable List<GetPublicationPackagesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetPublicationPackagesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder packageType(@Nullable String packageType) {
            this.packageType = packageType;
            return this;
        }
        public Builder packageVersion(@Nullable String packageVersion) {
            this.packageVersion = packageVersion;
            return this;
        }
        public Builder publicationId(String publicationId) {
            this.publicationId = Objects.requireNonNull(publicationId);
            return this;
        }
        public Builder publicationPackages(List<GetPublicationPackagesPublicationPackage> publicationPackages) {
            this.publicationPackages = Objects.requireNonNull(publicationPackages);
            return this;
        }
        public Builder publicationPackages(GetPublicationPackagesPublicationPackage... publicationPackages) {
            return publicationPackages(List.of(publicationPackages));
        }        public GetPublicationPackagesResult build() {
            return new GetPublicationPackagesResult(filters, id, packageType, packageVersion, publicationId, publicationPackages);
        }
    }
}
