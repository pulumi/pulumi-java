// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetReportDefinitionColumnFilter;
import com.pulumi.oci.DataSafe.outputs.GetReportDefinitionColumnInfo;
import com.pulumi.oci.DataSafe.outputs.GetReportDefinitionColumnSorting;
import com.pulumi.oci.DataSafe.outputs.GetReportDefinitionSummary;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetReportDefinitionResult {
    /**
     * @return Specifies the name of the category that this report belongs to.
     * 
     */
    private final String category;
    /**
     * @return An array of column filter objects. A column Filter object stores all information about a column filter including field name, an operator, one or more expressions, if the filter is enabled, or if the filter is hidden.
     * 
     */
    private final List<GetReportDefinitionColumnFilter> columnFilters;
    /**
     * @return An array of column objects in the order (left to right) displayed in the report. A column object stores all information about a column, including the name displayed on the UI, corresponding field name in the data source, data type of the column, and column visibility (if the column is visible to the user).
     * 
     */
    private final List<GetReportDefinitionColumnInfo> columnInfos;
    /**
     * @return An array of column sorting objects. Each column sorting object stores the column name to be sorted and if the sorting is in ascending order; sorting is done by the first column in the array, then by the second column in the array, etc.
     * 
     */
    private final List<GetReportDefinitionColumnSorting> columnSortings;
    /**
     * @return The OCID of the compartment containing the report definition.
     * 
     */
    private final String compartmentId;
    /**
     * @return Specifies the name of a resource that provides data for the report. For example alerts, events.
     * 
     */
    private final String dataSource;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return A description of the report definition.
     * 
     */
    private final String description;
    /**
     * @return Name of the report definition.
     * 
     */
    private final String displayName;
    /**
     * @return Specifies the order in which the summary must be displayed.
     * 
     */
    private final Integer displayOrder;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The OCID of the report definition.
     * 
     */
    private final String id;
    /**
     * @return Signifies whether the definition is seeded or user defined. Values can either be &#39;true&#39; or &#39;false&#39;.
     * 
     */
    private final Boolean isSeeded;
    /**
     * @return The OCID of the parent report definition. In the case of seeded report definition, this is same as definition OCID.
     * 
     */
    private final String parentId;
    private final String reportDefinitionId;
    /**
     * @return Additional scim filters used to get the specific summary.
     * 
     */
    private final String scimFilter;
    /**
     * @return The current state of the report.
     * 
     */
    private final String state;
    /**
     * @return An array of report summary objects in the order (left to right)  displayed in the report.  A  report summary object stores all information about summary of report to be displayed, including the name displayed on UI, the display order, corresponding group by and count of values, summary visibility (if the summary is visible to user).
     * 
     */
    private final List<GetReportDefinitionSummary> summaries;
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return Specifies the time at which the report definition was created.
     * 
     */
    private final String timeCreated;
    /**
     * @return The date and time of the report definition update in Data Safe.
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetReportDefinitionResult(
        @CustomType.Parameter("category") String category,
        @CustomType.Parameter("columnFilters") List<GetReportDefinitionColumnFilter> columnFilters,
        @CustomType.Parameter("columnInfos") List<GetReportDefinitionColumnInfo> columnInfos,
        @CustomType.Parameter("columnSortings") List<GetReportDefinitionColumnSorting> columnSortings,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("dataSource") String dataSource,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("displayOrder") Integer displayOrder,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isSeeded") Boolean isSeeded,
        @CustomType.Parameter("parentId") String parentId,
        @CustomType.Parameter("reportDefinitionId") String reportDefinitionId,
        @CustomType.Parameter("scimFilter") String scimFilter,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("summaries") List<GetReportDefinitionSummary> summaries,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.category = category;
        this.columnFilters = columnFilters;
        this.columnInfos = columnInfos;
        this.columnSortings = columnSortings;
        this.compartmentId = compartmentId;
        this.dataSource = dataSource;
        this.definedTags = definedTags;
        this.description = description;
        this.displayName = displayName;
        this.displayOrder = displayOrder;
        this.freeformTags = freeformTags;
        this.id = id;
        this.isSeeded = isSeeded;
        this.parentId = parentId;
        this.reportDefinitionId = reportDefinitionId;
        this.scimFilter = scimFilter;
        this.state = state;
        this.summaries = summaries;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return Specifies the name of the category that this report belongs to.
     * 
     */
    public String category() {
        return this.category;
    }
    /**
     * @return An array of column filter objects. A column Filter object stores all information about a column filter including field name, an operator, one or more expressions, if the filter is enabled, or if the filter is hidden.
     * 
     */
    public List<GetReportDefinitionColumnFilter> columnFilters() {
        return this.columnFilters;
    }
    /**
     * @return An array of column objects in the order (left to right) displayed in the report. A column object stores all information about a column, including the name displayed on the UI, corresponding field name in the data source, data type of the column, and column visibility (if the column is visible to the user).
     * 
     */
    public List<GetReportDefinitionColumnInfo> columnInfos() {
        return this.columnInfos;
    }
    /**
     * @return An array of column sorting objects. Each column sorting object stores the column name to be sorted and if the sorting is in ascending order; sorting is done by the first column in the array, then by the second column in the array, etc.
     * 
     */
    public List<GetReportDefinitionColumnSorting> columnSortings() {
        return this.columnSortings;
    }
    /**
     * @return The OCID of the compartment containing the report definition.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Specifies the name of a resource that provides data for the report. For example alerts, events.
     * 
     */
    public String dataSource() {
        return this.dataSource;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A description of the report definition.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Name of the report definition.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Specifies the order in which the summary must be displayed.
     * 
     */
    public Integer displayOrder() {
        return this.displayOrder;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm)  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the report definition.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Signifies whether the definition is seeded or user defined. Values can either be &#39;true&#39; or &#39;false&#39;.
     * 
     */
    public Boolean isSeeded() {
        return this.isSeeded;
    }
    /**
     * @return The OCID of the parent report definition. In the case of seeded report definition, this is same as definition OCID.
     * 
     */
    public String parentId() {
        return this.parentId;
    }
    public String reportDefinitionId() {
        return this.reportDefinitionId;
    }
    /**
     * @return Additional scim filters used to get the specific summary.
     * 
     */
    public String scimFilter() {
        return this.scimFilter;
    }
    /**
     * @return The current state of the report.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return An array of report summary objects in the order (left to right)  displayed in the report.  A  report summary object stores all information about summary of report to be displayed, including the name displayed on UI, the display order, corresponding group by and count of values, summary visibility (if the summary is visible to user).
     * 
     */
    public List<GetReportDefinitionSummary> summaries() {
        return this.summaries;
    }
    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Specifies the time at which the report definition was created.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time of the report definition update in Data Safe.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetReportDefinitionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String category;
        private List<GetReportDefinitionColumnFilter> columnFilters;
        private List<GetReportDefinitionColumnInfo> columnInfos;
        private List<GetReportDefinitionColumnSorting> columnSortings;
        private String compartmentId;
        private String dataSource;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private Integer displayOrder;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isSeeded;
        private String parentId;
        private String reportDefinitionId;
        private String scimFilter;
        private String state;
        private List<GetReportDefinitionSummary> summaries;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetReportDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.category = defaults.category;
    	      this.columnFilters = defaults.columnFilters;
    	      this.columnInfos = defaults.columnInfos;
    	      this.columnSortings = defaults.columnSortings;
    	      this.compartmentId = defaults.compartmentId;
    	      this.dataSource = defaults.dataSource;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.displayOrder = defaults.displayOrder;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isSeeded = defaults.isSeeded;
    	      this.parentId = defaults.parentId;
    	      this.reportDefinitionId = defaults.reportDefinitionId;
    	      this.scimFilter = defaults.scimFilter;
    	      this.state = defaults.state;
    	      this.summaries = defaults.summaries;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder category(String category) {
            this.category = Objects.requireNonNull(category);
            return this;
        }
        public Builder columnFilters(List<GetReportDefinitionColumnFilter> columnFilters) {
            this.columnFilters = Objects.requireNonNull(columnFilters);
            return this;
        }
        public Builder columnFilters(GetReportDefinitionColumnFilter... columnFilters) {
            return columnFilters(List.of(columnFilters));
        }
        public Builder columnInfos(List<GetReportDefinitionColumnInfo> columnInfos) {
            this.columnInfos = Objects.requireNonNull(columnInfos);
            return this;
        }
        public Builder columnInfos(GetReportDefinitionColumnInfo... columnInfos) {
            return columnInfos(List.of(columnInfos));
        }
        public Builder columnSortings(List<GetReportDefinitionColumnSorting> columnSortings) {
            this.columnSortings = Objects.requireNonNull(columnSortings);
            return this;
        }
        public Builder columnSortings(GetReportDefinitionColumnSorting... columnSortings) {
            return columnSortings(List.of(columnSortings));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder dataSource(String dataSource) {
            this.dataSource = Objects.requireNonNull(dataSource);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder displayOrder(Integer displayOrder) {
            this.displayOrder = Objects.requireNonNull(displayOrder);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isSeeded(Boolean isSeeded) {
            this.isSeeded = Objects.requireNonNull(isSeeded);
            return this;
        }
        public Builder parentId(String parentId) {
            this.parentId = Objects.requireNonNull(parentId);
            return this;
        }
        public Builder reportDefinitionId(String reportDefinitionId) {
            this.reportDefinitionId = Objects.requireNonNull(reportDefinitionId);
            return this;
        }
        public Builder scimFilter(String scimFilter) {
            this.scimFilter = Objects.requireNonNull(scimFilter);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder summaries(List<GetReportDefinitionSummary> summaries) {
            this.summaries = Objects.requireNonNull(summaries);
            return this;
        }
        public Builder summaries(GetReportDefinitionSummary... summaries) {
            return summaries(List.of(summaries));
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetReportDefinitionResult build() {
            return new GetReportDefinitionResult(category, columnFilters, columnInfos, columnSortings, compartmentId, dataSource, definedTags, description, displayName, displayOrder, freeformTags, id, isSeeded, parentId, reportDefinitionId, scimFilter, state, summaries, systemTags, timeCreated, timeUpdated);
        }
    }
}
