// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ManagementAgentPluginList {
    /**
     * @return flag indicating whether the plugin is in enabled mode or disabled mode.
     * 
     */
    private final @Nullable Boolean isEnabled;
    /**
     * @return Management Agent Plugin Identifier, can be renamed
     * 
     */
    private final @Nullable String pluginDisplayName;
    /**
     * @return Plugin Id
     * 
     */
    private final @Nullable String pluginId;
    /**
     * @return Management Agent Plugin Name
     * 
     */
    private final @Nullable String pluginName;
    /**
     * @return Plugin Version
     * 
     */
    private final @Nullable String pluginVersion;

    @CustomType.Constructor
    private ManagementAgentPluginList(
        @CustomType.Parameter("isEnabled") @Nullable Boolean isEnabled,
        @CustomType.Parameter("pluginDisplayName") @Nullable String pluginDisplayName,
        @CustomType.Parameter("pluginId") @Nullable String pluginId,
        @CustomType.Parameter("pluginName") @Nullable String pluginName,
        @CustomType.Parameter("pluginVersion") @Nullable String pluginVersion) {
        this.isEnabled = isEnabled;
        this.pluginDisplayName = pluginDisplayName;
        this.pluginId = pluginId;
        this.pluginName = pluginName;
        this.pluginVersion = pluginVersion;
    }

    /**
     * @return flag indicating whether the plugin is in enabled mode or disabled mode.
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return Management Agent Plugin Identifier, can be renamed
     * 
     */
    public Optional<String> pluginDisplayName() {
        return Optional.ofNullable(this.pluginDisplayName);
    }
    /**
     * @return Plugin Id
     * 
     */
    public Optional<String> pluginId() {
        return Optional.ofNullable(this.pluginId);
    }
    /**
     * @return Management Agent Plugin Name
     * 
     */
    public Optional<String> pluginName() {
        return Optional.ofNullable(this.pluginName);
    }
    /**
     * @return Plugin Version
     * 
     */
    public Optional<String> pluginVersion() {
        return Optional.ofNullable(this.pluginVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ManagementAgentPluginList defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean isEnabled;
        private @Nullable String pluginDisplayName;
        private @Nullable String pluginId;
        private @Nullable String pluginName;
        private @Nullable String pluginVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(ManagementAgentPluginList defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isEnabled = defaults.isEnabled;
    	      this.pluginDisplayName = defaults.pluginDisplayName;
    	      this.pluginId = defaults.pluginId;
    	      this.pluginName = defaults.pluginName;
    	      this.pluginVersion = defaults.pluginVersion;
        }

        public Builder isEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }
        public Builder pluginDisplayName(@Nullable String pluginDisplayName) {
            this.pluginDisplayName = pluginDisplayName;
            return this;
        }
        public Builder pluginId(@Nullable String pluginId) {
            this.pluginId = pluginId;
            return this;
        }
        public Builder pluginName(@Nullable String pluginName) {
            this.pluginName = pluginName;
            return this;
        }
        public Builder pluginVersion(@Nullable String pluginVersion) {
            this.pluginVersion = pluginVersion;
            return this;
        }        public ManagementAgentPluginList build() {
            return new ManagementAgentPluginList(isEnabled, pluginDisplayName, pluginId, pluginName, pluginVersion);
        }
    }
}
