// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceCatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetPrivateApplicationPackageArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPrivateApplicationPackageArgs Empty = new GetPrivateApplicationPackageArgs();

    /**
     * The unique identifier for the private application package.
     * 
     */
    @Import(name="privateApplicationPackageId", required=true)
    private Output<String> privateApplicationPackageId;

    /**
     * @return The unique identifier for the private application package.
     * 
     */
    public Output<String> privateApplicationPackageId() {
        return this.privateApplicationPackageId;
    }

    private GetPrivateApplicationPackageArgs() {}

    private GetPrivateApplicationPackageArgs(GetPrivateApplicationPackageArgs $) {
        this.privateApplicationPackageId = $.privateApplicationPackageId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPrivateApplicationPackageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPrivateApplicationPackageArgs $;

        public Builder() {
            $ = new GetPrivateApplicationPackageArgs();
        }

        public Builder(GetPrivateApplicationPackageArgs defaults) {
            $ = new GetPrivateApplicationPackageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param privateApplicationPackageId The unique identifier for the private application package.
         * 
         * @return builder
         * 
         */
        public Builder privateApplicationPackageId(Output<String> privateApplicationPackageId) {
            $.privateApplicationPackageId = privateApplicationPackageId;
            return this;
        }

        /**
         * @param privateApplicationPackageId The unique identifier for the private application package.
         * 
         * @return builder
         * 
         */
        public Builder privateApplicationPackageId(String privateApplicationPackageId) {
            return privateApplicationPackageId(Output.of(privateApplicationPackageId));
        }

        public GetPrivateApplicationPackageArgs build() {
            $.privateApplicationPackageId = Objects.requireNonNull($.privateApplicationPackageId, "expected parameter 'privateApplicationPackageId' to be non-null");
            return $;
        }
    }

}
