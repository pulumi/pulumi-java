// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Dns.inputs.GetZonesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetZonesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetZonesPlainArgs Empty = new GetZonesPlainArgs();

    /**
     * The OCID of the compartment the resource belongs to.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the compartment the resource belongs to.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private @Nullable List<GetZonesFilter> filters;

    public Optional<List<GetZonesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Search by zone name. Will match any zone whose name (case-insensitive) contains the provided value.
     * 
     */
    @Import(name="nameContains")
    private @Nullable String nameContains;

    /**
     * @return Search by zone name. Will match any zone whose name (case-insensitive) contains the provided value.
     * 
     */
    public Optional<String> nameContains() {
        return Optional.ofNullable(this.nameContains);
    }

    /**
     * Specifies to operate only on resources that have a matching DNS scope. This value will be null
     * for zones in the global DNS and `PRIVATE` when listing private zones.
     * 
     */
    @Import(name="scope")
    private @Nullable String scope;

    /**
     * @return Specifies to operate only on resources that have a matching DNS scope. This value will be null
     * for zones in the global DNS and `PRIVATE` when listing private zones.
     * 
     */
    public Optional<String> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * The field by which to sort zones. Allowed values are: name|zoneType|timeCreated
     * 
     */
    @Import(name="sortBy")
    private @Nullable String sortBy;

    /**
     * @return The field by which to sort zones. Allowed values are: name|zoneType|timeCreated
     * 
     */
    public Optional<String> sortBy() {
        return Optional.ofNullable(this.sortBy);
    }

    /**
     * The order to sort the resources. Allowed values are: ASC|DESC
     * 
     */
    @Import(name="sortOrder")
    private @Nullable String sortOrder;

    /**
     * @return The order to sort the resources. Allowed values are: ASC|DESC
     * 
     */
    public Optional<String> sortOrder() {
        return Optional.ofNullable(this.sortOrder);
    }

    /**
     * The state of a resource.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The state of a resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created on or after the indicated time.
     * 
     */
    @Import(name="timeCreatedGreaterThanOrEqualTo")
    private @Nullable String timeCreatedGreaterThanOrEqualTo;

    /**
     * @return An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created on or after the indicated time.
     * 
     */
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }

    /**
     * An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created before the indicated time.
     * 
     */
    @Import(name="timeCreatedLessThan")
    private @Nullable String timeCreatedLessThan;

    /**
     * @return An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created before the indicated time.
     * 
     */
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }

    /**
     * Search for zones that are associated with a TSIG key.
     * 
     */
    @Import(name="tsigKeyId")
    private @Nullable String tsigKeyId;

    /**
     * @return Search for zones that are associated with a TSIG key.
     * 
     */
    public Optional<String> tsigKeyId() {
        return Optional.ofNullable(this.tsigKeyId);
    }

    /**
     * The OCID of the view the resource is associated with.
     * 
     */
    @Import(name="viewId")
    private @Nullable String viewId;

    /**
     * @return The OCID of the view the resource is associated with.
     * 
     */
    public Optional<String> viewId() {
        return Optional.ofNullable(this.viewId);
    }

    /**
     * Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
     * 
     */
    @Import(name="zoneType")
    private @Nullable String zoneType;

    /**
     * @return Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
     * 
     */
    public Optional<String> zoneType() {
        return Optional.ofNullable(this.zoneType);
    }

    private GetZonesPlainArgs() {}

    private GetZonesPlainArgs(GetZonesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.name = $.name;
        this.nameContains = $.nameContains;
        this.scope = $.scope;
        this.sortBy = $.sortBy;
        this.sortOrder = $.sortOrder;
        this.state = $.state;
        this.timeCreatedGreaterThanOrEqualTo = $.timeCreatedGreaterThanOrEqualTo;
        this.timeCreatedLessThan = $.timeCreatedLessThan;
        this.tsigKeyId = $.tsigKeyId;
        this.viewId = $.viewId;
        this.zoneType = $.zoneType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetZonesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetZonesPlainArgs $;

        public Builder() {
            $ = new GetZonesPlainArgs();
        }

        public Builder(GetZonesPlainArgs defaults) {
            $ = new GetZonesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment the resource belongs to.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetZonesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetZonesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name A case-sensitive filter for zone names. Will match any zone with a name that equals the provided value.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param nameContains Search by zone name. Will match any zone whose name (case-insensitive) contains the provided value.
         * 
         * @return builder
         * 
         */
        public Builder nameContains(@Nullable String nameContains) {
            $.nameContains = nameContains;
            return this;
        }

        /**
         * @param scope Specifies to operate only on resources that have a matching DNS scope. This value will be null
         * for zones in the global DNS and `PRIVATE` when listing private zones.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable String scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param sortBy The field by which to sort zones. Allowed values are: name|zoneType|timeCreated
         * 
         * @return builder
         * 
         */
        public Builder sortBy(@Nullable String sortBy) {
            $.sortBy = sortBy;
            return this;
        }

        /**
         * @param sortOrder The order to sort the resources. Allowed values are: ASC|DESC
         * 
         * @return builder
         * 
         */
        public Builder sortOrder(@Nullable String sortOrder) {
            $.sortOrder = sortOrder;
            return this;
        }

        /**
         * @param state The state of a resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param timeCreatedGreaterThanOrEqualTo An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created on or after the indicated time.
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {
            $.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeCreatedLessThan An [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) timestamp that states all returned resources were created before the indicated time.
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {
            $.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }

        /**
         * @param tsigKeyId Search for zones that are associated with a TSIG key.
         * 
         * @return builder
         * 
         */
        public Builder tsigKeyId(@Nullable String tsigKeyId) {
            $.tsigKeyId = tsigKeyId;
            return this;
        }

        /**
         * @param viewId The OCID of the view the resource is associated with.
         * 
         * @return builder
         * 
         */
        public Builder viewId(@Nullable String viewId) {
            $.viewId = viewId;
            return this;
        }

        /**
         * @param zoneType Search by zone type, `PRIMARY` or `SECONDARY`. Will match any zone whose type equals the provided value.
         * 
         * @return builder
         * 
         */
        public Builder zoneType(@Nullable String zoneType) {
            $.zoneType = zoneType;
            return this;
        }

        public GetZonesPlainArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
