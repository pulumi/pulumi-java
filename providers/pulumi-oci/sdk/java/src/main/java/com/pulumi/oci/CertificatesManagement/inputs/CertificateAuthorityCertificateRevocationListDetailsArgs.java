// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.CertificatesManagement.inputs.CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateAuthorityCertificateRevocationListDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateAuthorityCertificateRevocationListDetailsArgs Empty = new CertificateAuthorityCertificateRevocationListDetailsArgs();

    /**
     * (Updatable) Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
     * 
     */
    @Import(name="customFormattedUrls")
    private @Nullable Output<List<String>> customFormattedUrls;

    /**
     * @return (Updatable) Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
     * 
     */
    public Optional<Output<List<String>>> customFormattedUrls() {
        return Optional.ofNullable(this.customFormattedUrls);
    }

    /**
     * (Updatable) The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
     * 
     */
    @Import(name="objectStorageConfig", required=true)
    private Output<CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs> objectStorageConfig;

    /**
     * @return (Updatable) The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
     * 
     */
    public Output<CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs> objectStorageConfig() {
        return this.objectStorageConfig;
    }

    private CertificateAuthorityCertificateRevocationListDetailsArgs() {}

    private CertificateAuthorityCertificateRevocationListDetailsArgs(CertificateAuthorityCertificateRevocationListDetailsArgs $) {
        this.customFormattedUrls = $.customFormattedUrls;
        this.objectStorageConfig = $.objectStorageConfig;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateAuthorityCertificateRevocationListDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateAuthorityCertificateRevocationListDetailsArgs $;

        public Builder() {
            $ = new CertificateAuthorityCertificateRevocationListDetailsArgs();
        }

        public Builder(CertificateAuthorityCertificateRevocationListDetailsArgs defaults) {
            $ = new CertificateAuthorityCertificateRevocationListDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customFormattedUrls (Updatable) Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         * 
         * @return builder
         * 
         */
        public Builder customFormattedUrls(@Nullable Output<List<String>> customFormattedUrls) {
            $.customFormattedUrls = customFormattedUrls;
            return this;
        }

        /**
         * @param customFormattedUrls (Updatable) Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         * 
         * @return builder
         * 
         */
        public Builder customFormattedUrls(List<String> customFormattedUrls) {
            return customFormattedUrls(Output.of(customFormattedUrls));
        }

        /**
         * @param customFormattedUrls (Updatable) Optional CRL access points, expressed using a format where the version number of the issuing CA is inserted wherever you include a pair of curly braces. This versioning scheme helps avoid collisions when new CA versions are created. For example, myCrlFileIssuedFromCAVersion{}.crl becomes myCrlFileIssuedFromCAVersion2.crl for CA version 2.
         * 
         * @return builder
         * 
         */
        public Builder customFormattedUrls(String... customFormattedUrls) {
            return customFormattedUrls(List.of(customFormattedUrls));
        }

        /**
         * @param objectStorageConfig (Updatable) The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
         * 
         * @return builder
         * 
         */
        public Builder objectStorageConfig(Output<CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs> objectStorageConfig) {
            $.objectStorageConfig = objectStorageConfig;
            return this;
        }

        /**
         * @param objectStorageConfig (Updatable) The details of the Object Storage bucket configured to store the certificate revocation list (CRL).
         * 
         * @return builder
         * 
         */
        public Builder objectStorageConfig(CertificateAuthorityCertificateRevocationListDetailsObjectStorageConfigArgs objectStorageConfig) {
            return objectStorageConfig(Output.of(objectStorageConfig));
        }

        public CertificateAuthorityCertificateRevocationListDetailsArgs build() {
            $.objectStorageConfig = Objects.requireNonNull($.objectStorageConfig, "expected parameter 'objectStorageConfig' to be non-null");
            return $;
        }
    }

}
