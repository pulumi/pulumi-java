// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Database.inputs.AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailArgs;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs Empty = new AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs();

    /**
     * Backup destination details.
     * 
     */
    @Import(name="backupDestinationDetails")
    private @Nullable Output<List<AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailArgs>> backupDestinationDetails;

    /**
     * @return Backup destination details.
     * 
     */
    public Optional<Output<List<AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailArgs>>> backupDestinationDetails() {
        return Optional.ofNullable(this.backupDestinationDetails);
    }

    /**
     * Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     * 
     */
    @Import(name="recoveryWindowInDays")
    private @Nullable Output<Integer> recoveryWindowInDays;

    /**
     * @return Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
     * 
     */
    public Optional<Output<Integer>> recoveryWindowInDays() {
        return Optional.ofNullable(this.recoveryWindowInDays);
    }

    private AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs() {}

    private AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs(AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs $) {
        this.backupDestinationDetails = $.backupDestinationDetails;
        this.recoveryWindowInDays = $.recoveryWindowInDays;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs $;

        public Builder() {
            $ = new AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs();
        }

        public Builder(AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs defaults) {
            $ = new AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param backupDestinationDetails Backup destination details.
         * 
         * @return builder
         * 
         */
        public Builder backupDestinationDetails(@Nullable Output<List<AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailArgs>> backupDestinationDetails) {
            $.backupDestinationDetails = backupDestinationDetails;
            return this;
        }

        /**
         * @param backupDestinationDetails Backup destination details.
         * 
         * @return builder
         * 
         */
        public Builder backupDestinationDetails(List<AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailArgs> backupDestinationDetails) {
            return backupDestinationDetails(Output.of(backupDestinationDetails));
        }

        /**
         * @param backupDestinationDetails Backup destination details.
         * 
         * @return builder
         * 
         */
        public Builder backupDestinationDetails(AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigBackupDestinationDetailArgs... backupDestinationDetails) {
            return backupDestinationDetails(List.of(backupDestinationDetails));
        }

        /**
         * @param recoveryWindowInDays Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         * 
         * @return builder
         * 
         */
        public Builder recoveryWindowInDays(@Nullable Output<Integer> recoveryWindowInDays) {
            $.recoveryWindowInDays = recoveryWindowInDays;
            return this;
        }

        /**
         * @param recoveryWindowInDays Number of days between the current and the earliest point of recoverability covered by automatic backups. This value applies to automatic backups. After a new automatic backup has been created, Oracle removes old automatic backups that are created before the window. When the value is updated, it is applied to all existing automatic backups.
         * 
         * @return builder
         * 
         */
        public Builder recoveryWindowInDays(Integer recoveryWindowInDays) {
            return recoveryWindowInDays(Output.of(recoveryWindowInDays));
        }

        public AutonomousContainerDatabasePeerAutonomousContainerDatabaseBackupConfigArgs build() {
            return $;
        }
    }

}
