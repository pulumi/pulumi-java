// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetObjectArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetObjectArgs Empty = new GetObjectArgs();

    @Import(name="base64EncodeContent")
    private @Nullable Output<Boolean> base64EncodeContent;

    public Optional<Output<Boolean>> base64EncodeContent() {
        return Optional.ofNullable(this.base64EncodeContent);
    }

    /**
     * The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * The limit of the content length of the object body to download from the object store. The default is 1Mb.
     * 
     */
    @Import(name="contentLengthLimit")
    private @Nullable Output<Integer> contentLengthLimit;

    /**
     * @return The limit of the content length of the object body to download from the object store. The default is 1Mb.
     * 
     */
    public Optional<Output<Integer>> contentLengthLimit() {
        return Optional.ofNullable(this.contentLengthLimit);
    }

    /**
     * Specify this query parameter to override the Cache-Control response header in the GetObject response.
     * 
     */
    @Import(name="httpResponseCacheControl")
    private @Nullable Output<String> httpResponseCacheControl;

    /**
     * @return Specify this query parameter to override the Cache-Control response header in the GetObject response.
     * 
     */
    public Optional<Output<String>> httpResponseCacheControl() {
        return Optional.ofNullable(this.httpResponseCacheControl);
    }

    /**
     * Specify this query parameter to override the value of the Content-Disposition response header in the GetObject response.
     * 
     */
    @Import(name="httpResponseContentDisposition")
    private @Nullable Output<String> httpResponseContentDisposition;

    /**
     * @return Specify this query parameter to override the value of the Content-Disposition response header in the GetObject response.
     * 
     */
    public Optional<Output<String>> httpResponseContentDisposition() {
        return Optional.ofNullable(this.httpResponseContentDisposition);
    }

    /**
     * Specify this query parameter to override the Content-Encoding response header in the GetObject response.
     * 
     */
    @Import(name="httpResponseContentEncoding")
    private @Nullable Output<String> httpResponseContentEncoding;

    /**
     * @return Specify this query parameter to override the Content-Encoding response header in the GetObject response.
     * 
     */
    public Optional<Output<String>> httpResponseContentEncoding() {
        return Optional.ofNullable(this.httpResponseContentEncoding);
    }

    /**
     * Specify this query parameter to override the Content-Language response header in the GetObject response.
     * 
     */
    @Import(name="httpResponseContentLanguage")
    private @Nullable Output<String> httpResponseContentLanguage;

    /**
     * @return Specify this query parameter to override the Content-Language response header in the GetObject response.
     * 
     */
    public Optional<Output<String>> httpResponseContentLanguage() {
        return Optional.ofNullable(this.httpResponseContentLanguage);
    }

    /**
     * Specify this query parameter to override the Content-Type response header in the GetObject response.
     * 
     */
    @Import(name="httpResponseContentType")
    private @Nullable Output<String> httpResponseContentType;

    /**
     * @return Specify this query parameter to override the Content-Type response header in the GetObject response.
     * 
     */
    public Optional<Output<String>> httpResponseContentType() {
        return Optional.ofNullable(this.httpResponseContentType);
    }

    /**
     * Specify this query parameter to override the Expires response header in the GetObject response.
     * 
     */
    @Import(name="httpResponseExpires")
    private @Nullable Output<String> httpResponseExpires;

    /**
     * @return Specify this query parameter to override the Expires response header in the GetObject response.
     * 
     */
    public Optional<Output<String>> httpResponseExpires() {
        return Optional.ofNullable(this.httpResponseExpires);
    }

    /**
     * The Object Storage namespace used for the request.
     * 
     */
    @Import(name="namespace", required=true)
    private Output<String> namespace;

    /**
     * @return The Object Storage namespace used for the request.
     * 
     */
    public Output<String> namespace() {
        return this.namespace;
    }

    /**
     * The name of the object. Avoid entering confidential information. Example: `test/object1.log`
     * 
     */
    @Import(name="object", required=true)
    private Output<String> object;

    /**
     * @return The name of the object. Avoid entering confidential information. Example: `test/object1.log`
     * 
     */
    public Output<String> object() {
        return this.object;
    }

    /**
     * VersionId used to identify a particular version of the object
     * 
     */
    @Import(name="versionId")
    private @Nullable Output<String> versionId;

    /**
     * @return VersionId used to identify a particular version of the object
     * 
     */
    public Optional<Output<String>> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    private GetObjectArgs() {}

    private GetObjectArgs(GetObjectArgs $) {
        this.base64EncodeContent = $.base64EncodeContent;
        this.bucket = $.bucket;
        this.contentLengthLimit = $.contentLengthLimit;
        this.httpResponseCacheControl = $.httpResponseCacheControl;
        this.httpResponseContentDisposition = $.httpResponseContentDisposition;
        this.httpResponseContentEncoding = $.httpResponseContentEncoding;
        this.httpResponseContentLanguage = $.httpResponseContentLanguage;
        this.httpResponseContentType = $.httpResponseContentType;
        this.httpResponseExpires = $.httpResponseExpires;
        this.namespace = $.namespace;
        this.object = $.object;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetObjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetObjectArgs $;

        public Builder() {
            $ = new GetObjectArgs();
        }

        public Builder(GetObjectArgs defaults) {
            $ = new GetObjectArgs(Objects.requireNonNull(defaults));
        }

        public Builder base64EncodeContent(@Nullable Output<Boolean> base64EncodeContent) {
            $.base64EncodeContent = base64EncodeContent;
            return this;
        }

        public Builder base64EncodeContent(Boolean base64EncodeContent) {
            return base64EncodeContent(Output.of(base64EncodeContent));
        }

        /**
         * @param bucket The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param contentLengthLimit The limit of the content length of the object body to download from the object store. The default is 1Mb.
         * 
         * @return builder
         * 
         */
        public Builder contentLengthLimit(@Nullable Output<Integer> contentLengthLimit) {
            $.contentLengthLimit = contentLengthLimit;
            return this;
        }

        /**
         * @param contentLengthLimit The limit of the content length of the object body to download from the object store. The default is 1Mb.
         * 
         * @return builder
         * 
         */
        public Builder contentLengthLimit(Integer contentLengthLimit) {
            return contentLengthLimit(Output.of(contentLengthLimit));
        }

        /**
         * @param httpResponseCacheControl Specify this query parameter to override the Cache-Control response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseCacheControl(@Nullable Output<String> httpResponseCacheControl) {
            $.httpResponseCacheControl = httpResponseCacheControl;
            return this;
        }

        /**
         * @param httpResponseCacheControl Specify this query parameter to override the Cache-Control response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseCacheControl(String httpResponseCacheControl) {
            return httpResponseCacheControl(Output.of(httpResponseCacheControl));
        }

        /**
         * @param httpResponseContentDisposition Specify this query parameter to override the value of the Content-Disposition response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseContentDisposition(@Nullable Output<String> httpResponseContentDisposition) {
            $.httpResponseContentDisposition = httpResponseContentDisposition;
            return this;
        }

        /**
         * @param httpResponseContentDisposition Specify this query parameter to override the value of the Content-Disposition response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseContentDisposition(String httpResponseContentDisposition) {
            return httpResponseContentDisposition(Output.of(httpResponseContentDisposition));
        }

        /**
         * @param httpResponseContentEncoding Specify this query parameter to override the Content-Encoding response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseContentEncoding(@Nullable Output<String> httpResponseContentEncoding) {
            $.httpResponseContentEncoding = httpResponseContentEncoding;
            return this;
        }

        /**
         * @param httpResponseContentEncoding Specify this query parameter to override the Content-Encoding response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseContentEncoding(String httpResponseContentEncoding) {
            return httpResponseContentEncoding(Output.of(httpResponseContentEncoding));
        }

        /**
         * @param httpResponseContentLanguage Specify this query parameter to override the Content-Language response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseContentLanguage(@Nullable Output<String> httpResponseContentLanguage) {
            $.httpResponseContentLanguage = httpResponseContentLanguage;
            return this;
        }

        /**
         * @param httpResponseContentLanguage Specify this query parameter to override the Content-Language response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseContentLanguage(String httpResponseContentLanguage) {
            return httpResponseContentLanguage(Output.of(httpResponseContentLanguage));
        }

        /**
         * @param httpResponseContentType Specify this query parameter to override the Content-Type response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseContentType(@Nullable Output<String> httpResponseContentType) {
            $.httpResponseContentType = httpResponseContentType;
            return this;
        }

        /**
         * @param httpResponseContentType Specify this query parameter to override the Content-Type response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseContentType(String httpResponseContentType) {
            return httpResponseContentType(Output.of(httpResponseContentType));
        }

        /**
         * @param httpResponseExpires Specify this query parameter to override the Expires response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseExpires(@Nullable Output<String> httpResponseExpires) {
            $.httpResponseExpires = httpResponseExpires;
            return this;
        }

        /**
         * @param httpResponseExpires Specify this query parameter to override the Expires response header in the GetObject response.
         * 
         * @return builder
         * 
         */
        public Builder httpResponseExpires(String httpResponseExpires) {
            return httpResponseExpires(Output.of(httpResponseExpires));
        }

        /**
         * @param namespace The Object Storage namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Object Storage namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param object The name of the object. Avoid entering confidential information. Example: `test/object1.log`
         * 
         * @return builder
         * 
         */
        public Builder object(Output<String> object) {
            $.object = object;
            return this;
        }

        /**
         * @param object The name of the object. Avoid entering confidential information. Example: `test/object1.log`
         * 
         * @return builder
         * 
         */
        public Builder object(String object) {
            return object(Output.of(object));
        }

        /**
         * @param versionId VersionId used to identify a particular version of the object
         * 
         * @return builder
         * 
         */
        public Builder versionId(@Nullable Output<String> versionId) {
            $.versionId = versionId;
            return this;
        }

        /**
         * @param versionId VersionId used to identify a particular version of the object
         * 
         * @return builder
         * 
         */
        public Builder versionId(String versionId) {
            return versionId(Output.of(versionId));
        }

        public GetObjectArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            $.object = Objects.requireNonNull($.object, "expected parameter 'object' to be non-null");
            return $;
        }
    }

}
