// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.GetVirtualCircuitPublicPrefixesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVirtualCircuitPublicPrefixesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVirtualCircuitPublicPrefixesArgs Empty = new GetVirtualCircuitPublicPrefixesArgs();

    @Import(name="filters")
    private @Nullable List<GetVirtualCircuitPublicPrefixesFilter> filters;

    public Optional<List<GetVirtualCircuitPublicPrefixesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to only return resources that match the given verification state.
     * 
     */
    @Import(name="verificationState")
    private @Nullable String verificationState;

    /**
     * @return A filter to only return resources that match the given verification state.
     * 
     */
    public Optional<String> verificationState() {
        return Optional.ofNullable(this.verificationState);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual circuit.
     * 
     */
    @Import(name="virtualCircuitId", required=true)
    private String virtualCircuitId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual circuit.
     * 
     */
    public String virtualCircuitId() {
        return this.virtualCircuitId;
    }

    private GetVirtualCircuitPublicPrefixesArgs() {}

    private GetVirtualCircuitPublicPrefixesArgs(GetVirtualCircuitPublicPrefixesArgs $) {
        this.filters = $.filters;
        this.verificationState = $.verificationState;
        this.virtualCircuitId = $.virtualCircuitId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVirtualCircuitPublicPrefixesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVirtualCircuitPublicPrefixesArgs $;

        public Builder() {
            $ = new GetVirtualCircuitPublicPrefixesArgs();
        }

        public Builder(GetVirtualCircuitPublicPrefixesArgs defaults) {
            $ = new GetVirtualCircuitPublicPrefixesArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetVirtualCircuitPublicPrefixesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetVirtualCircuitPublicPrefixesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param verificationState A filter to only return resources that match the given verification state.
         * 
         * @return builder
         * 
         */
        public Builder verificationState(@Nullable String verificationState) {
            $.verificationState = verificationState;
            return this;
        }

        /**
         * @param virtualCircuitId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the virtual circuit.
         * 
         * @return builder
         * 
         */
        public Builder virtualCircuitId(String virtualCircuitId) {
            $.virtualCircuitId = virtualCircuitId;
            return this;
        }

        public GetVirtualCircuitPublicPrefixesArgs build() {
            $.virtualCircuitId = Objects.requireNonNull($.virtualCircuitId, "expected parameter 'virtualCircuitId' to be non-null");
            return $;
        }
    }

}
