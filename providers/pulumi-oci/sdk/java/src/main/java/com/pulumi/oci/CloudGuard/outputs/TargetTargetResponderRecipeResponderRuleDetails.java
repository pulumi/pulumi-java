// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudGuard.outputs.TargetTargetResponderRecipeResponderRuleDetailsConfiguration;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TargetTargetResponderRecipeResponderRuleDetails {
    /**
     * @return (Updatable)
     * 
     */
    private final @Nullable String condition;
    /**
     * @return (Updatable) Configurations associated with the ResponderRule
     * 
     */
    private final @Nullable List<TargetTargetResponderRecipeResponderRuleDetailsConfiguration> configurations;
    /**
     * @return Identifies state for ResponderRule
     * 
     */
    private final @Nullable Boolean isEnabled;
    /**
     * @return (Updatable) Execution Mode for ResponderRule
     * 
     */
    private final @Nullable String mode;

    @CustomType.Constructor
    private TargetTargetResponderRecipeResponderRuleDetails(
        @CustomType.Parameter("condition") @Nullable String condition,
        @CustomType.Parameter("configurations") @Nullable List<TargetTargetResponderRecipeResponderRuleDetailsConfiguration> configurations,
        @CustomType.Parameter("isEnabled") @Nullable Boolean isEnabled,
        @CustomType.Parameter("mode") @Nullable String mode) {
        this.condition = condition;
        this.configurations = configurations;
        this.isEnabled = isEnabled;
        this.mode = mode;
    }

    /**
     * @return (Updatable)
     * 
     */
    public Optional<String> condition() {
        return Optional.ofNullable(this.condition);
    }
    /**
     * @return (Updatable) Configurations associated with the ResponderRule
     * 
     */
    public List<TargetTargetResponderRecipeResponderRuleDetailsConfiguration> configurations() {
        return this.configurations == null ? List.of() : this.configurations;
    }
    /**
     * @return Identifies state for ResponderRule
     * 
     */
    public Optional<Boolean> isEnabled() {
        return Optional.ofNullable(this.isEnabled);
    }
    /**
     * @return (Updatable) Execution Mode for ResponderRule
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TargetTargetResponderRecipeResponderRuleDetails defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String condition;
        private @Nullable List<TargetTargetResponderRecipeResponderRuleDetailsConfiguration> configurations;
        private @Nullable Boolean isEnabled;
        private @Nullable String mode;

        public Builder() {
    	      // Empty
        }

        public Builder(TargetTargetResponderRecipeResponderRuleDetails defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.condition = defaults.condition;
    	      this.configurations = defaults.configurations;
    	      this.isEnabled = defaults.isEnabled;
    	      this.mode = defaults.mode;
        }

        public Builder condition(@Nullable String condition) {
            this.condition = condition;
            return this;
        }
        public Builder configurations(@Nullable List<TargetTargetResponderRecipeResponderRuleDetailsConfiguration> configurations) {
            this.configurations = configurations;
            return this;
        }
        public Builder configurations(TargetTargetResponderRecipeResponderRuleDetailsConfiguration... configurations) {
            return configurations(List.of(configurations));
        }
        public Builder isEnabled(@Nullable Boolean isEnabled) {
            this.isEnabled = isEnabled;
            return this;
        }
        public Builder mode(@Nullable String mode) {
            this.mode = mode;
            return this;
        }        public TargetTargetResponderRecipeResponderRuleDetails build() {
            return new TargetTargetResponderRecipeResponderRuleDetails(condition, configurations, isEnabled, mode);
        }
    }
}
