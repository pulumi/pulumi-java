// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DevOps.inputs.DeploymentDeployArtifactOverrideArgumentsArgs;
import com.pulumi.oci.DevOps.inputs.DeploymentDeployPipelineArtifactArgs;
import com.pulumi.oci.DevOps.inputs.DeploymentDeployPipelineEnvironmentArgs;
import com.pulumi.oci.DevOps.inputs.DeploymentDeploymentArgumentsArgs;
import com.pulumi.oci.DevOps.inputs.DeploymentDeploymentExecutionProgressArgs;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentState extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentState Empty = new DeploymentState();

    /**
     * The OCID of a compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of a compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * Specifies the list of artifact override arguments at the time of deployment.
     * 
     */
    @Import(name="deployArtifactOverrideArguments")
    private @Nullable Output<DeploymentDeployArtifactOverrideArgumentsArgs> deployArtifactOverrideArguments;

    /**
     * @return Specifies the list of artifact override arguments at the time of deployment.
     * 
     */
    public Optional<Output<DeploymentDeployArtifactOverrideArgumentsArgs>> deployArtifactOverrideArguments() {
        return Optional.ofNullable(this.deployArtifactOverrideArguments);
    }

    /**
     * List of all artifacts used in the pipeline.
     * 
     */
    @Import(name="deployPipelineArtifacts")
    private @Nullable Output<List<DeploymentDeployPipelineArtifactArgs>> deployPipelineArtifacts;

    /**
     * @return List of all artifacts used in the pipeline.
     * 
     */
    public Optional<Output<List<DeploymentDeployPipelineArtifactArgs>>> deployPipelineArtifacts() {
        return Optional.ofNullable(this.deployPipelineArtifacts);
    }

    /**
     * List of all environments used in the pipeline.
     * 
     */
    @Import(name="deployPipelineEnvironments")
    private @Nullable Output<List<DeploymentDeployPipelineEnvironmentArgs>> deployPipelineEnvironments;

    /**
     * @return List of all environments used in the pipeline.
     * 
     */
    public Optional<Output<List<DeploymentDeployPipelineEnvironmentArgs>>> deployPipelineEnvironments() {
        return Optional.ofNullable(this.deployPipelineEnvironments);
    }

    /**
     * The OCID of a pipeline.
     * 
     */
    @Import(name="deployPipelineId")
    private @Nullable Output<String> deployPipelineId;

    /**
     * @return The OCID of a pipeline.
     * 
     */
    public Optional<Output<String>> deployPipelineId() {
        return Optional.ofNullable(this.deployPipelineId);
    }

    /**
     * Specifies the OCID of the stage to be redeployed.
     * 
     */
    @Import(name="deployStageId")
    private @Nullable Output<String> deployStageId;

    /**
     * @return Specifies the OCID of the stage to be redeployed.
     * 
     */
    public Optional<Output<String>> deployStageId() {
        return Optional.ofNullable(this.deployStageId);
    }

    /**
     * Specifies list of arguments passed along with the deployment.
     * 
     */
    @Import(name="deploymentArguments")
    private @Nullable Output<DeploymentDeploymentArgumentsArgs> deploymentArguments;

    /**
     * @return Specifies list of arguments passed along with the deployment.
     * 
     */
    public Optional<Output<DeploymentDeploymentArgumentsArgs>> deploymentArguments() {
        return Optional.ofNullable(this.deploymentArguments);
    }

    /**
     * The execution progress details of a deployment.
     * 
     */
    @Import(name="deploymentExecutionProgresses")
    private @Nullable Output<List<DeploymentDeploymentExecutionProgressArgs>> deploymentExecutionProgresses;

    /**
     * @return The execution progress details of a deployment.
     * 
     */
    public Optional<Output<List<DeploymentDeploymentExecutionProgressArgs>>> deploymentExecutionProgresses() {
        return Optional.ofNullable(this.deploymentExecutionProgresses);
    }

    /**
     * (Updatable) Specifies type for this deployment.
     * 
     */
    @Import(name="deploymentType")
    private @Nullable Output<String> deploymentType;

    /**
     * @return (Updatable) Specifies type for this deployment.
     * 
     */
    public Optional<Output<String>> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }

    /**
     * (Updatable) Deployment display name. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Deployment display name. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * Specifies the OCID of the previous deployment to be redeployed.
     * 
     */
    @Import(name="previousDeploymentId")
    private @Nullable Output<String> previousDeploymentId;

    /**
     * @return Specifies the OCID of the previous deployment to be redeployed.
     * 
     */
    public Optional<Output<String>> previousDeploymentId() {
        return Optional.ofNullable(this.previousDeploymentId);
    }

    /**
     * The OCID of a project.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The OCID of a project.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The current state of the deployment.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the deployment.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private DeploymentState() {}

    private DeploymentState(DeploymentState $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.deployArtifactOverrideArguments = $.deployArtifactOverrideArguments;
        this.deployPipelineArtifacts = $.deployPipelineArtifacts;
        this.deployPipelineEnvironments = $.deployPipelineEnvironments;
        this.deployPipelineId = $.deployPipelineId;
        this.deployStageId = $.deployStageId;
        this.deploymentArguments = $.deploymentArguments;
        this.deploymentExecutionProgresses = $.deploymentExecutionProgresses;
        this.deploymentType = $.deploymentType;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.lifecycleDetails = $.lifecycleDetails;
        this.previousDeploymentId = $.previousDeploymentId;
        this.projectId = $.projectId;
        this.state = $.state;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentState $;

        public Builder() {
            $ = new DeploymentState();
        }

        public Builder(DeploymentState defaults) {
            $ = new DeploymentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of a compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of a compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param deployArtifactOverrideArguments Specifies the list of artifact override arguments at the time of deployment.
         * 
         * @return builder
         * 
         */
        public Builder deployArtifactOverrideArguments(@Nullable Output<DeploymentDeployArtifactOverrideArgumentsArgs> deployArtifactOverrideArguments) {
            $.deployArtifactOverrideArguments = deployArtifactOverrideArguments;
            return this;
        }

        /**
         * @param deployArtifactOverrideArguments Specifies the list of artifact override arguments at the time of deployment.
         * 
         * @return builder
         * 
         */
        public Builder deployArtifactOverrideArguments(DeploymentDeployArtifactOverrideArgumentsArgs deployArtifactOverrideArguments) {
            return deployArtifactOverrideArguments(Output.of(deployArtifactOverrideArguments));
        }

        /**
         * @param deployPipelineArtifacts List of all artifacts used in the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder deployPipelineArtifacts(@Nullable Output<List<DeploymentDeployPipelineArtifactArgs>> deployPipelineArtifacts) {
            $.deployPipelineArtifacts = deployPipelineArtifacts;
            return this;
        }

        /**
         * @param deployPipelineArtifacts List of all artifacts used in the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder deployPipelineArtifacts(List<DeploymentDeployPipelineArtifactArgs> deployPipelineArtifacts) {
            return deployPipelineArtifacts(Output.of(deployPipelineArtifacts));
        }

        /**
         * @param deployPipelineArtifacts List of all artifacts used in the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder deployPipelineArtifacts(DeploymentDeployPipelineArtifactArgs... deployPipelineArtifacts) {
            return deployPipelineArtifacts(List.of(deployPipelineArtifacts));
        }

        /**
         * @param deployPipelineEnvironments List of all environments used in the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder deployPipelineEnvironments(@Nullable Output<List<DeploymentDeployPipelineEnvironmentArgs>> deployPipelineEnvironments) {
            $.deployPipelineEnvironments = deployPipelineEnvironments;
            return this;
        }

        /**
         * @param deployPipelineEnvironments List of all environments used in the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder deployPipelineEnvironments(List<DeploymentDeployPipelineEnvironmentArgs> deployPipelineEnvironments) {
            return deployPipelineEnvironments(Output.of(deployPipelineEnvironments));
        }

        /**
         * @param deployPipelineEnvironments List of all environments used in the pipeline.
         * 
         * @return builder
         * 
         */
        public Builder deployPipelineEnvironments(DeploymentDeployPipelineEnvironmentArgs... deployPipelineEnvironments) {
            return deployPipelineEnvironments(List.of(deployPipelineEnvironments));
        }

        /**
         * @param deployPipelineId The OCID of a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder deployPipelineId(@Nullable Output<String> deployPipelineId) {
            $.deployPipelineId = deployPipelineId;
            return this;
        }

        /**
         * @param deployPipelineId The OCID of a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder deployPipelineId(String deployPipelineId) {
            return deployPipelineId(Output.of(deployPipelineId));
        }

        /**
         * @param deployStageId Specifies the OCID of the stage to be redeployed.
         * 
         * @return builder
         * 
         */
        public Builder deployStageId(@Nullable Output<String> deployStageId) {
            $.deployStageId = deployStageId;
            return this;
        }

        /**
         * @param deployStageId Specifies the OCID of the stage to be redeployed.
         * 
         * @return builder
         * 
         */
        public Builder deployStageId(String deployStageId) {
            return deployStageId(Output.of(deployStageId));
        }

        /**
         * @param deploymentArguments Specifies list of arguments passed along with the deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentArguments(@Nullable Output<DeploymentDeploymentArgumentsArgs> deploymentArguments) {
            $.deploymentArguments = deploymentArguments;
            return this;
        }

        /**
         * @param deploymentArguments Specifies list of arguments passed along with the deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentArguments(DeploymentDeploymentArgumentsArgs deploymentArguments) {
            return deploymentArguments(Output.of(deploymentArguments));
        }

        /**
         * @param deploymentExecutionProgresses The execution progress details of a deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentExecutionProgresses(@Nullable Output<List<DeploymentDeploymentExecutionProgressArgs>> deploymentExecutionProgresses) {
            $.deploymentExecutionProgresses = deploymentExecutionProgresses;
            return this;
        }

        /**
         * @param deploymentExecutionProgresses The execution progress details of a deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentExecutionProgresses(List<DeploymentDeploymentExecutionProgressArgs> deploymentExecutionProgresses) {
            return deploymentExecutionProgresses(Output.of(deploymentExecutionProgresses));
        }

        /**
         * @param deploymentExecutionProgresses The execution progress details of a deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentExecutionProgresses(DeploymentDeploymentExecutionProgressArgs... deploymentExecutionProgresses) {
            return deploymentExecutionProgresses(List.of(deploymentExecutionProgresses));
        }

        /**
         * @param deploymentType (Updatable) Specifies type for this deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(@Nullable Output<String> deploymentType) {
            $.deploymentType = deploymentType;
            return this;
        }

        /**
         * @param deploymentType (Updatable) Specifies type for this deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(String deploymentType) {
            return deploymentType(Output.of(deploymentType));
        }

        /**
         * @param displayName (Updatable) Deployment display name. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Deployment display name. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param previousDeploymentId Specifies the OCID of the previous deployment to be redeployed.
         * 
         * @return builder
         * 
         */
        public Builder previousDeploymentId(@Nullable Output<String> previousDeploymentId) {
            $.previousDeploymentId = previousDeploymentId;
            return this;
        }

        /**
         * @param previousDeploymentId Specifies the OCID of the previous deployment to be redeployed.
         * 
         * @return builder
         * 
         */
        public Builder previousDeploymentId(String previousDeploymentId) {
            return previousDeploymentId(Output.of(previousDeploymentId));
        }

        /**
         * @param projectId The OCID of a project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The OCID of a project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param state The current state of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the deployment.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public DeploymentState build() {
            return $;
        }
    }

}
