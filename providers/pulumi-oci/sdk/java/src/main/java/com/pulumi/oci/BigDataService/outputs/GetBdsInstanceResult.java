// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceCloudSqlDetail;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceClusterDetail;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceMasterNode;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceNetworkConfig;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceNode;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceUtilNode;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceWorkerNode;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBdsInstanceResult {
    private final String bdsInstanceId;
    /**
     * @return The information about added Cloud SQL capability
     * 
     */
    private final List<GetBdsInstanceCloudSqlDetail> cloudSqlDetails;
    private final String clusterAdminPassword;
    /**
     * @return Specific info about a Hadoop cluster
     * 
     */
    private final List<GetBdsInstanceClusterDetail> clusterDetails;
    private final String clusterPublicKey;
    /**
     * @return Version of the Hadoop distribution.
     * 
     */
    private final String clusterVersion;
    /**
     * @return The OCID of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return The user who created the cluster.
     * 
     */
    private final String createdBy;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{&#34;foo-namespace&#34;: {&#34;bar-key&#34;: &#34;value&#34;}}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The name of the node.
     * 
     */
    private final String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The OCID of the Big Data Service resource.
     * 
     */
    private final String id;
    /**
     * @return Boolean flag specifying whether or not Cloud SQL should be configured.
     * 
     */
    private final Boolean isCloudSqlConfigured;
    /**
     * @return Boolean flag specifying whether or not the cluster is highly available (HA)
     * 
     */
    private final Boolean isHighAvailability;
    /**
     * @return Boolean flag specifying whether or not the cluster should be set up as secure.
     * 
     */
    private final Boolean isSecure;
    private final List<GetBdsInstanceMasterNode> masterNodes;
    /**
     * @return Additional configuration of the user&#39;s network.
     * 
     */
    private final List<GetBdsInstanceNetworkConfig> networkConfigs;
    /**
     * @return The list of nodes in the cluster.
     * 
     */
    private final List<GetBdsInstanceNode> nodes;
    /**
     * @return The number of nodes that form the cluster.
     * 
     */
    private final Integer numberOfNodes;
    /**
     * @return The state of the cluster.
     * 
     */
    private final String state;
    /**
     * @return The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    private final String timeUpdated;
    private final List<GetBdsInstanceUtilNode> utilNodes;
    private final List<GetBdsInstanceWorkerNode> workerNodes;

    @CustomType.Constructor
    private GetBdsInstanceResult(
        @CustomType.Parameter("bdsInstanceId") String bdsInstanceId,
        @CustomType.Parameter("cloudSqlDetails") List<GetBdsInstanceCloudSqlDetail> cloudSqlDetails,
        @CustomType.Parameter("clusterAdminPassword") String clusterAdminPassword,
        @CustomType.Parameter("clusterDetails") List<GetBdsInstanceClusterDetail> clusterDetails,
        @CustomType.Parameter("clusterPublicKey") String clusterPublicKey,
        @CustomType.Parameter("clusterVersion") String clusterVersion,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("createdBy") String createdBy,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isCloudSqlConfigured") Boolean isCloudSqlConfigured,
        @CustomType.Parameter("isHighAvailability") Boolean isHighAvailability,
        @CustomType.Parameter("isSecure") Boolean isSecure,
        @CustomType.Parameter("masterNodes") List<GetBdsInstanceMasterNode> masterNodes,
        @CustomType.Parameter("networkConfigs") List<GetBdsInstanceNetworkConfig> networkConfigs,
        @CustomType.Parameter("nodes") List<GetBdsInstanceNode> nodes,
        @CustomType.Parameter("numberOfNodes") Integer numberOfNodes,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("utilNodes") List<GetBdsInstanceUtilNode> utilNodes,
        @CustomType.Parameter("workerNodes") List<GetBdsInstanceWorkerNode> workerNodes) {
        this.bdsInstanceId = bdsInstanceId;
        this.cloudSqlDetails = cloudSqlDetails;
        this.clusterAdminPassword = clusterAdminPassword;
        this.clusterDetails = clusterDetails;
        this.clusterPublicKey = clusterPublicKey;
        this.clusterVersion = clusterVersion;
        this.compartmentId = compartmentId;
        this.createdBy = createdBy;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.isCloudSqlConfigured = isCloudSqlConfigured;
        this.isHighAvailability = isHighAvailability;
        this.isSecure = isSecure;
        this.masterNodes = masterNodes;
        this.networkConfigs = networkConfigs;
        this.nodes = nodes;
        this.numberOfNodes = numberOfNodes;
        this.state = state;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
        this.utilNodes = utilNodes;
        this.workerNodes = workerNodes;
    }

    public String bdsInstanceId() {
        return this.bdsInstanceId;
    }
    /**
     * @return The information about added Cloud SQL capability
     * 
     */
    public List<GetBdsInstanceCloudSqlDetail> cloudSqlDetails() {
        return this.cloudSqlDetails;
    }
    public String clusterAdminPassword() {
        return this.clusterAdminPassword;
    }
    /**
     * @return Specific info about a Hadoop cluster
     * 
     */
    public List<GetBdsInstanceClusterDetail> clusterDetails() {
        return this.clusterDetails;
    }
    public String clusterPublicKey() {
        return this.clusterPublicKey;
    }
    /**
     * @return Version of the Hadoop distribution.
     * 
     */
    public String clusterVersion() {
        return this.clusterVersion;
    }
    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The user who created the cluster.
     * 
     */
    public String createdBy() {
        return this.createdBy;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For example, `{&#34;foo-namespace&#34;: {&#34;bar-key&#34;: &#34;value&#34;}}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The name of the node.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. For example, `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the Big Data Service resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Boolean flag specifying whether or not Cloud SQL should be configured.
     * 
     */
    public Boolean isCloudSqlConfigured() {
        return this.isCloudSqlConfigured;
    }
    /**
     * @return Boolean flag specifying whether or not the cluster is highly available (HA)
     * 
     */
    public Boolean isHighAvailability() {
        return this.isHighAvailability;
    }
    /**
     * @return Boolean flag specifying whether or not the cluster should be set up as secure.
     * 
     */
    public Boolean isSecure() {
        return this.isSecure;
    }
    public List<GetBdsInstanceMasterNode> masterNodes() {
        return this.masterNodes;
    }
    /**
     * @return Additional configuration of the user&#39;s network.
     * 
     */
    public List<GetBdsInstanceNetworkConfig> networkConfigs() {
        return this.networkConfigs;
    }
    /**
     * @return The list of nodes in the cluster.
     * 
     */
    public List<GetBdsInstanceNode> nodes() {
        return this.nodes;
    }
    /**
     * @return The number of nodes that form the cluster.
     * 
     */
    public Integer numberOfNodes() {
        return this.numberOfNodes;
    }
    /**
     * @return The state of the cluster.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The time the cluster was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the cluster was updated, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    public List<GetBdsInstanceUtilNode> utilNodes() {
        return this.utilNodes;
    }
    public List<GetBdsInstanceWorkerNode> workerNodes() {
        return this.workerNodes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bdsInstanceId;
        private List<GetBdsInstanceCloudSqlDetail> cloudSqlDetails;
        private String clusterAdminPassword;
        private List<GetBdsInstanceClusterDetail> clusterDetails;
        private String clusterPublicKey;
        private String clusterVersion;
        private String compartmentId;
        private String createdBy;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isCloudSqlConfigured;
        private Boolean isHighAvailability;
        private Boolean isSecure;
        private List<GetBdsInstanceMasterNode> masterNodes;
        private List<GetBdsInstanceNetworkConfig> networkConfigs;
        private List<GetBdsInstanceNode> nodes;
        private Integer numberOfNodes;
        private String state;
        private String timeCreated;
        private String timeUpdated;
        private List<GetBdsInstanceUtilNode> utilNodes;
        private List<GetBdsInstanceWorkerNode> workerNodes;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBdsInstanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bdsInstanceId = defaults.bdsInstanceId;
    	      this.cloudSqlDetails = defaults.cloudSqlDetails;
    	      this.clusterAdminPassword = defaults.clusterAdminPassword;
    	      this.clusterDetails = defaults.clusterDetails;
    	      this.clusterPublicKey = defaults.clusterPublicKey;
    	      this.clusterVersion = defaults.clusterVersion;
    	      this.compartmentId = defaults.compartmentId;
    	      this.createdBy = defaults.createdBy;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isCloudSqlConfigured = defaults.isCloudSqlConfigured;
    	      this.isHighAvailability = defaults.isHighAvailability;
    	      this.isSecure = defaults.isSecure;
    	      this.masterNodes = defaults.masterNodes;
    	      this.networkConfigs = defaults.networkConfigs;
    	      this.nodes = defaults.nodes;
    	      this.numberOfNodes = defaults.numberOfNodes;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.utilNodes = defaults.utilNodes;
    	      this.workerNodes = defaults.workerNodes;
        }

        public Builder bdsInstanceId(String bdsInstanceId) {
            this.bdsInstanceId = Objects.requireNonNull(bdsInstanceId);
            return this;
        }
        public Builder cloudSqlDetails(List<GetBdsInstanceCloudSqlDetail> cloudSqlDetails) {
            this.cloudSqlDetails = Objects.requireNonNull(cloudSqlDetails);
            return this;
        }
        public Builder cloudSqlDetails(GetBdsInstanceCloudSqlDetail... cloudSqlDetails) {
            return cloudSqlDetails(List.of(cloudSqlDetails));
        }
        public Builder clusterAdminPassword(String clusterAdminPassword) {
            this.clusterAdminPassword = Objects.requireNonNull(clusterAdminPassword);
            return this;
        }
        public Builder clusterDetails(List<GetBdsInstanceClusterDetail> clusterDetails) {
            this.clusterDetails = Objects.requireNonNull(clusterDetails);
            return this;
        }
        public Builder clusterDetails(GetBdsInstanceClusterDetail... clusterDetails) {
            return clusterDetails(List.of(clusterDetails));
        }
        public Builder clusterPublicKey(String clusterPublicKey) {
            this.clusterPublicKey = Objects.requireNonNull(clusterPublicKey);
            return this;
        }
        public Builder clusterVersion(String clusterVersion) {
            this.clusterVersion = Objects.requireNonNull(clusterVersion);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder createdBy(String createdBy) {
            this.createdBy = Objects.requireNonNull(createdBy);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isCloudSqlConfigured(Boolean isCloudSqlConfigured) {
            this.isCloudSqlConfigured = Objects.requireNonNull(isCloudSqlConfigured);
            return this;
        }
        public Builder isHighAvailability(Boolean isHighAvailability) {
            this.isHighAvailability = Objects.requireNonNull(isHighAvailability);
            return this;
        }
        public Builder isSecure(Boolean isSecure) {
            this.isSecure = Objects.requireNonNull(isSecure);
            return this;
        }
        public Builder masterNodes(List<GetBdsInstanceMasterNode> masterNodes) {
            this.masterNodes = Objects.requireNonNull(masterNodes);
            return this;
        }
        public Builder masterNodes(GetBdsInstanceMasterNode... masterNodes) {
            return masterNodes(List.of(masterNodes));
        }
        public Builder networkConfigs(List<GetBdsInstanceNetworkConfig> networkConfigs) {
            this.networkConfigs = Objects.requireNonNull(networkConfigs);
            return this;
        }
        public Builder networkConfigs(GetBdsInstanceNetworkConfig... networkConfigs) {
            return networkConfigs(List.of(networkConfigs));
        }
        public Builder nodes(List<GetBdsInstanceNode> nodes) {
            this.nodes = Objects.requireNonNull(nodes);
            return this;
        }
        public Builder nodes(GetBdsInstanceNode... nodes) {
            return nodes(List.of(nodes));
        }
        public Builder numberOfNodes(Integer numberOfNodes) {
            this.numberOfNodes = Objects.requireNonNull(numberOfNodes);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder utilNodes(List<GetBdsInstanceUtilNode> utilNodes) {
            this.utilNodes = Objects.requireNonNull(utilNodes);
            return this;
        }
        public Builder utilNodes(GetBdsInstanceUtilNode... utilNodes) {
            return utilNodes(List.of(utilNodes));
        }
        public Builder workerNodes(List<GetBdsInstanceWorkerNode> workerNodes) {
            this.workerNodes = Objects.requireNonNull(workerNodes);
            return this;
        }
        public Builder workerNodes(GetBdsInstanceWorkerNode... workerNodes) {
            return workerNodes(List.of(workerNodes));
        }        public GetBdsInstanceResult build() {
            return new GetBdsInstanceResult(bdsInstanceId, cloudSqlDetails, clusterAdminPassword, clusterDetails, clusterPublicKey, clusterVersion, compartmentId, createdBy, definedTags, displayName, freeformTags, id, isCloudSqlConfigured, isHighAvailability, isSecure, masterNodes, networkConfigs, nodes, numberOfNodes, state, timeCreated, timeUpdated, utilNodes, workerNodes);
        }
    }
}
