// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.CertificatesManagement.inputs.GetAssociationsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAssociationsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAssociationsPlainArgs Empty = new GetAssociationsPlainArgs();

    /**
     * A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
     * 
     */
    @Import(name="associatedResourceId")
    private @Nullable String associatedResourceId;

    /**
     * @return A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
     * 
     */
    public Optional<String> associatedResourceId() {
        return Optional.ofNullable(this.associatedResourceId);
    }

    /**
     * The OCID of the association. If the parameter is set to null, the service lists all associations.
     * 
     */
    @Import(name="associationId")
    private @Nullable String associationId;

    /**
     * @return The OCID of the association. If the parameter is set to null, the service lists all associations.
     * 
     */
    public Optional<String> associationId() {
        return Optional.ofNullable(this.associationId);
    }

    /**
     * Type of associations to list. If the parameter is set to null, the service lists all types of associations.
     * 
     */
    @Import(name="associationType")
    private @Nullable String associationType;

    /**
     * @return Type of associations to list. If the parameter is set to null, the service lists all types of associations.
     * 
     */
    public Optional<String> associationType() {
        return Optional.ofNullable(this.associationType);
    }

    /**
     * A filter that returns only resources that match the given OCID of a certificate-related resource.
     * 
     */
    @Import(name="certificatesResourceId")
    private @Nullable String certificatesResourceId;

    /**
     * @return A filter that returns only resources that match the given OCID of a certificate-related resource.
     * 
     */
    public Optional<String> certificatesResourceId() {
        return Optional.ofNullable(this.certificatesResourceId);
    }

    /**
     * A filter that returns only resources that match the given compartment OCID.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return A filter that returns only resources that match the given compartment OCID.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable List<GetAssociationsFilter> filters;

    public Optional<List<GetAssociationsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter that returns only resources that match the specified name.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return A filter that returns only resources that match the specified name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetAssociationsPlainArgs() {}

    private GetAssociationsPlainArgs(GetAssociationsPlainArgs $) {
        this.associatedResourceId = $.associatedResourceId;
        this.associationId = $.associationId;
        this.associationType = $.associationType;
        this.certificatesResourceId = $.certificatesResourceId;
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAssociationsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAssociationsPlainArgs $;

        public Builder() {
            $ = new GetAssociationsPlainArgs();
        }

        public Builder(GetAssociationsPlainArgs defaults) {
            $ = new GetAssociationsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param associatedResourceId A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
         * 
         * @return builder
         * 
         */
        public Builder associatedResourceId(@Nullable String associatedResourceId) {
            $.associatedResourceId = associatedResourceId;
            return this;
        }

        /**
         * @param associationId The OCID of the association. If the parameter is set to null, the service lists all associations.
         * 
         * @return builder
         * 
         */
        public Builder associationId(@Nullable String associationId) {
            $.associationId = associationId;
            return this;
        }

        /**
         * @param associationType Type of associations to list. If the parameter is set to null, the service lists all types of associations.
         * 
         * @return builder
         * 
         */
        public Builder associationType(@Nullable String associationType) {
            $.associationType = associationType;
            return this;
        }

        /**
         * @param certificatesResourceId A filter that returns only resources that match the given OCID of a certificate-related resource.
         * 
         * @return builder
         * 
         */
        public Builder certificatesResourceId(@Nullable String certificatesResourceId) {
            $.certificatesResourceId = certificatesResourceId;
            return this;
        }

        /**
         * @param compartmentId A filter that returns only resources that match the given compartment OCID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetAssociationsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetAssociationsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name A filter that returns only resources that match the specified name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetAssociationsPlainArgs build() {
            return $;
        }
    }

}
