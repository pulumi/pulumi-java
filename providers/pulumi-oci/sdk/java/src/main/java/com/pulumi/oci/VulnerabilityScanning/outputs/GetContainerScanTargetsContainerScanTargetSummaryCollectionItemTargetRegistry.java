// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.VulnerabilityScanning.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private final String compartmentId;
    /**
     * @return List of repositories to scan images in. If left empty, the target defaults to scanning all repos in the compartmentId
     * 
     */
    private final List<String> repositories;
    /**
     * @return The scan level
     * 
     */
    private final String type;
    /**
     * @return URL of the registry.
     * 
     */
    private final String url;

    @CustomType.Constructor
    private GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("repositories") List<String> repositories,
        @CustomType.Parameter("type") String type,
        @CustomType.Parameter("url") String url) {
        this.compartmentId = compartmentId;
        this.repositories = repositories;
        this.type = type;
        this.url = url;
    }

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return List of repositories to scan images in. If left empty, the target defaults to scanning all repos in the compartmentId
     * 
     */
    public List<String> repositories() {
        return this.repositories;
    }
    /**
     * @return The scan level
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return URL of the registry.
     * 
     */
    public String url() {
        return this.url;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private List<String> repositories;
        private String type;
        private String url;

        public Builder() {
    	      // Empty
        }

        public Builder(GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.repositories = defaults.repositories;
    	      this.type = defaults.type;
    	      this.url = defaults.url;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder repositories(List<String> repositories) {
            this.repositories = Objects.requireNonNull(repositories);
            return this;
        }
        public Builder repositories(String... repositories) {
            return repositories(List.of(repositories));
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public Builder url(String url) {
            this.url = Objects.requireNonNull(url);
            return this;
        }        public GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry build() {
            return new GetContainerScanTargetsContainerScanTargetSummaryCollectionItemTargetRegistry(compartmentId, repositories, type, url);
        }
    }
}
