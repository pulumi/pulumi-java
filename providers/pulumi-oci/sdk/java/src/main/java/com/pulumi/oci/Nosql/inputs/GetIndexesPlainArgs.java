// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Nosql.inputs.GetIndexesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIndexesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIndexesPlainArgs Empty = new GetIndexesPlainArgs();

    /**
     * The ID of a table&#39;s compartment. When a table is identified by name, the compartmentId is often needed to provide context for interpreting the name.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable String compartmentId;

    /**
     * @return The ID of a table&#39;s compartment. When a table is identified by name, the compartmentId is often needed to provide context for interpreting the name.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable List<GetIndexesFilter> filters;

    public Optional<List<GetIndexesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A shell-globbing-style (*?[]) filter for names.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return A shell-globbing-style (*?[]) filter for names.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Filter list by the lifecycle state of the item.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return Filter list by the lifecycle state of the item.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * A table name within the compartment, or a table OCID.
     * 
     */
    @Import(name="tableNameOrId", required=true)
    private String tableNameOrId;

    /**
     * @return A table name within the compartment, or a table OCID.
     * 
     */
    public String tableNameOrId() {
        return this.tableNameOrId;
    }

    private GetIndexesPlainArgs() {}

    private GetIndexesPlainArgs(GetIndexesPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.name = $.name;
        this.state = $.state;
        this.tableNameOrId = $.tableNameOrId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIndexesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIndexesPlainArgs $;

        public Builder() {
            $ = new GetIndexesPlainArgs();
        }

        public Builder(GetIndexesPlainArgs defaults) {
            $ = new GetIndexesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of a table&#39;s compartment. When a table is identified by name, the compartmentId is often needed to provide context for interpreting the name.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        public Builder filters(@Nullable List<GetIndexesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetIndexesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name A shell-globbing-style (*?[]) filter for names.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param state Filter list by the lifecycle state of the item.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param tableNameOrId A table name within the compartment, or a table OCID.
         * 
         * @return builder
         * 
         */
        public Builder tableNameOrId(String tableNameOrId) {
            $.tableNameOrId = tableNameOrId;
            return this;
        }

        public GetIndexesPlainArgs build() {
            $.tableNameOrId = Objects.requireNonNull($.tableNameOrId, "expected parameter 'tableNameOrId' to be non-null");
            return $;
        }
    }

}
