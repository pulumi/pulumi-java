// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.GetIdpGroupMappingsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIdpGroupMappingsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIdpGroupMappingsPlainArgs Empty = new GetIdpGroupMappingsPlainArgs();

    @Import(name="filters")
    private @Nullable List<GetIdpGroupMappingsFilter> filters;

    public Optional<List<GetIdpGroupMappingsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of the identity provider.
     * 
     */
    @Import(name="identityProviderId", required=true)
    private String identityProviderId;

    /**
     * @return The OCID of the identity provider.
     * 
     */
    public String identityProviderId() {
        return this.identityProviderId;
    }

    private GetIdpGroupMappingsPlainArgs() {}

    private GetIdpGroupMappingsPlainArgs(GetIdpGroupMappingsPlainArgs $) {
        this.filters = $.filters;
        this.identityProviderId = $.identityProviderId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIdpGroupMappingsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIdpGroupMappingsPlainArgs $;

        public Builder() {
            $ = new GetIdpGroupMappingsPlainArgs();
        }

        public Builder(GetIdpGroupMappingsPlainArgs defaults) {
            $ = new GetIdpGroupMappingsPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetIdpGroupMappingsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetIdpGroupMappingsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param identityProviderId The OCID of the identity provider.
         * 
         * @return builder
         * 
         */
        public Builder identityProviderId(String identityProviderId) {
            $.identityProviderId = identityProviderId;
            return this;
        }

        public GetIdpGroupMappingsPlainArgs build() {
            $.identityProviderId = Objects.requireNonNull($.identityProviderId, "expected parameter 'identityProviderId' to be non-null");
            return $;
        }
    }

}
