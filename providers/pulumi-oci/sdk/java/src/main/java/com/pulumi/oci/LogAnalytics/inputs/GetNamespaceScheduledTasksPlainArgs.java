// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.LogAnalytics.inputs.GetNamespaceScheduledTasksFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNamespaceScheduledTasksPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetNamespaceScheduledTasksPlainArgs Empty = new GetNamespaceScheduledTasksPlainArgs();

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only resources that match the given display name exactly.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetNamespaceScheduledTasksFilter> filters;

    public Optional<List<GetNamespaceScheduledTasksFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The Logging Analytics namespace used for the request.
     * 
     */
    @Import(name="namespace", required=true)
    private String namespace;

    /**
     * @return The Logging Analytics namespace used for the request.
     * 
     */
    public String namespace() {
        return this.namespace;
    }

    /**
     * Required parameter to specify schedule task type.
     * 
     */
    @Import(name="taskType", required=true)
    private String taskType;

    /**
     * @return Required parameter to specify schedule task type.
     * 
     */
    public String taskType() {
        return this.taskType;
    }

    private GetNamespaceScheduledTasksPlainArgs() {}

    private GetNamespaceScheduledTasksPlainArgs(GetNamespaceScheduledTasksPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.namespace = $.namespace;
        this.taskType = $.taskType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNamespaceScheduledTasksPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNamespaceScheduledTasksPlainArgs $;

        public Builder() {
            $ = new GetNamespaceScheduledTasksPlainArgs();
        }

        public Builder(GetNamespaceScheduledTasksPlainArgs defaults) {
            $ = new GetNamespaceScheduledTasksPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the given display name exactly.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetNamespaceScheduledTasksFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetNamespaceScheduledTasksFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param namespace The Logging Analytics namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param taskType Required parameter to specify schedule task type.
         * 
         * @return builder
         * 
         */
        public Builder taskType(String taskType) {
            $.taskType = taskType;
            return this;
        }

        public GetNamespaceScheduledTasksPlainArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            $.taskType = Objects.requireNonNull($.taskType, "expected parameter 'taskType' to be non-null");
            return $;
        }
    }

}
