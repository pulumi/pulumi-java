// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceCatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ServiceCatalog.outputs.GetServiceCatalogAssociationsFilter;
import com.pulumi.oci.ServiceCatalog.outputs.GetServiceCatalogAssociationsServiceCatalogAssociationCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceCatalogAssociationsResult {
    /**
     * @return Identifier of the entity being associated with service catalog.
     * 
     */
    private final @Nullable String entityId;
    /**
     * @return The type of the entity that is associated with the service catalog.
     * 
     */
    private final @Nullable String entityType;
    private final @Nullable List<GetServiceCatalogAssociationsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of service_catalog_association_collection.
     * 
     */
    private final List<GetServiceCatalogAssociationsServiceCatalogAssociationCollection> serviceCatalogAssociationCollections;
    private final @Nullable String serviceCatalogAssociationId;
    /**
     * @return Identifier of the service catalog.
     * 
     */
    private final @Nullable String serviceCatalogId;

    @CustomType.Constructor
    private GetServiceCatalogAssociationsResult(
        @CustomType.Parameter("entityId") @Nullable String entityId,
        @CustomType.Parameter("entityType") @Nullable String entityType,
        @CustomType.Parameter("filters") @Nullable List<GetServiceCatalogAssociationsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("serviceCatalogAssociationCollections") List<GetServiceCatalogAssociationsServiceCatalogAssociationCollection> serviceCatalogAssociationCollections,
        @CustomType.Parameter("serviceCatalogAssociationId") @Nullable String serviceCatalogAssociationId,
        @CustomType.Parameter("serviceCatalogId") @Nullable String serviceCatalogId) {
        this.entityId = entityId;
        this.entityType = entityType;
        this.filters = filters;
        this.id = id;
        this.serviceCatalogAssociationCollections = serviceCatalogAssociationCollections;
        this.serviceCatalogAssociationId = serviceCatalogAssociationId;
        this.serviceCatalogId = serviceCatalogId;
    }

    /**
     * @return Identifier of the entity being associated with service catalog.
     * 
     */
    public Optional<String> entityId() {
        return Optional.ofNullable(this.entityId);
    }
    /**
     * @return The type of the entity that is associated with the service catalog.
     * 
     */
    public Optional<String> entityType() {
        return Optional.ofNullable(this.entityType);
    }
    public List<GetServiceCatalogAssociationsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of service_catalog_association_collection.
     * 
     */
    public List<GetServiceCatalogAssociationsServiceCatalogAssociationCollection> serviceCatalogAssociationCollections() {
        return this.serviceCatalogAssociationCollections;
    }
    public Optional<String> serviceCatalogAssociationId() {
        return Optional.ofNullable(this.serviceCatalogAssociationId);
    }
    /**
     * @return Identifier of the service catalog.
     * 
     */
    public Optional<String> serviceCatalogId() {
        return Optional.ofNullable(this.serviceCatalogId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceCatalogAssociationsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String entityId;
        private @Nullable String entityType;
        private @Nullable List<GetServiceCatalogAssociationsFilter> filters;
        private String id;
        private List<GetServiceCatalogAssociationsServiceCatalogAssociationCollection> serviceCatalogAssociationCollections;
        private @Nullable String serviceCatalogAssociationId;
        private @Nullable String serviceCatalogId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceCatalogAssociationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entityId = defaults.entityId;
    	      this.entityType = defaults.entityType;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.serviceCatalogAssociationCollections = defaults.serviceCatalogAssociationCollections;
    	      this.serviceCatalogAssociationId = defaults.serviceCatalogAssociationId;
    	      this.serviceCatalogId = defaults.serviceCatalogId;
        }

        public Builder entityId(@Nullable String entityId) {
            this.entityId = entityId;
            return this;
        }
        public Builder entityType(@Nullable String entityType) {
            this.entityType = entityType;
            return this;
        }
        public Builder filters(@Nullable List<GetServiceCatalogAssociationsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetServiceCatalogAssociationsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder serviceCatalogAssociationCollections(List<GetServiceCatalogAssociationsServiceCatalogAssociationCollection> serviceCatalogAssociationCollections) {
            this.serviceCatalogAssociationCollections = Objects.requireNonNull(serviceCatalogAssociationCollections);
            return this;
        }
        public Builder serviceCatalogAssociationCollections(GetServiceCatalogAssociationsServiceCatalogAssociationCollection... serviceCatalogAssociationCollections) {
            return serviceCatalogAssociationCollections(List.of(serviceCatalogAssociationCollections));
        }
        public Builder serviceCatalogAssociationId(@Nullable String serviceCatalogAssociationId) {
            this.serviceCatalogAssociationId = serviceCatalogAssociationId;
            return this;
        }
        public Builder serviceCatalogId(@Nullable String serviceCatalogId) {
            this.serviceCatalogId = serviceCatalogId;
            return this;
        }        public GetServiceCatalogAssociationsResult build() {
            return new GetServiceCatalogAssociationsResult(entityId, entityType, filters, id, serviceCatalogAssociationCollections, serviceCatalogAssociationId, serviceCatalogId);
        }
    }
}
