// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.DefaultSecurityListIngressSecurityRuleIcmpOptionsArgs;
import com.pulumi.oci.Core.inputs.DefaultSecurityListIngressSecurityRuleTcpOptionsArgs;
import com.pulumi.oci.Core.inputs.DefaultSecurityListIngressSecurityRuleUdpOptionsArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DefaultSecurityListIngressSecurityRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final DefaultSecurityListIngressSecurityRuleArgs Empty = new DefaultSecurityListIngressSecurityRuleArgs();

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="icmpOptions")
    private @Nullable Output<DefaultSecurityListIngressSecurityRuleIcmpOptionsArgs> icmpOptions;

    public Optional<Output<DefaultSecurityListIngressSecurityRuleIcmpOptionsArgs>> icmpOptions() {
        return Optional.ofNullable(this.icmpOptions);
    }

    @Import(name="protocol", required=true)
    private Output<String> protocol;

    public Output<String> protocol() {
        return this.protocol;
    }

    @Import(name="source", required=true)
    private Output<String> source;

    public Output<String> source() {
        return this.source;
    }

    @Import(name="sourceType")
    private @Nullable Output<String> sourceType;

    public Optional<Output<String>> sourceType() {
        return Optional.ofNullable(this.sourceType);
    }

    @Import(name="stateless")
    private @Nullable Output<Boolean> stateless;

    public Optional<Output<Boolean>> stateless() {
        return Optional.ofNullable(this.stateless);
    }

    @Import(name="tcpOptions")
    private @Nullable Output<DefaultSecurityListIngressSecurityRuleTcpOptionsArgs> tcpOptions;

    public Optional<Output<DefaultSecurityListIngressSecurityRuleTcpOptionsArgs>> tcpOptions() {
        return Optional.ofNullable(this.tcpOptions);
    }

    @Import(name="udpOptions")
    private @Nullable Output<DefaultSecurityListIngressSecurityRuleUdpOptionsArgs> udpOptions;

    public Optional<Output<DefaultSecurityListIngressSecurityRuleUdpOptionsArgs>> udpOptions() {
        return Optional.ofNullable(this.udpOptions);
    }

    private DefaultSecurityListIngressSecurityRuleArgs() {}

    private DefaultSecurityListIngressSecurityRuleArgs(DefaultSecurityListIngressSecurityRuleArgs $) {
        this.description = $.description;
        this.icmpOptions = $.icmpOptions;
        this.protocol = $.protocol;
        this.source = $.source;
        this.sourceType = $.sourceType;
        this.stateless = $.stateless;
        this.tcpOptions = $.tcpOptions;
        this.udpOptions = $.udpOptions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DefaultSecurityListIngressSecurityRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DefaultSecurityListIngressSecurityRuleArgs $;

        public Builder() {
            $ = new DefaultSecurityListIngressSecurityRuleArgs();
        }

        public Builder(DefaultSecurityListIngressSecurityRuleArgs defaults) {
            $ = new DefaultSecurityListIngressSecurityRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder icmpOptions(@Nullable Output<DefaultSecurityListIngressSecurityRuleIcmpOptionsArgs> icmpOptions) {
            $.icmpOptions = icmpOptions;
            return this;
        }

        public Builder icmpOptions(DefaultSecurityListIngressSecurityRuleIcmpOptionsArgs icmpOptions) {
            return icmpOptions(Output.of(icmpOptions));
        }

        public Builder protocol(Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public Builder source(Output<String> source) {
            $.source = source;
            return this;
        }

        public Builder source(String source) {
            return source(Output.of(source));
        }

        public Builder sourceType(@Nullable Output<String> sourceType) {
            $.sourceType = sourceType;
            return this;
        }

        public Builder sourceType(String sourceType) {
            return sourceType(Output.of(sourceType));
        }

        public Builder stateless(@Nullable Output<Boolean> stateless) {
            $.stateless = stateless;
            return this;
        }

        public Builder stateless(Boolean stateless) {
            return stateless(Output.of(stateless));
        }

        public Builder tcpOptions(@Nullable Output<DefaultSecurityListIngressSecurityRuleTcpOptionsArgs> tcpOptions) {
            $.tcpOptions = tcpOptions;
            return this;
        }

        public Builder tcpOptions(DefaultSecurityListIngressSecurityRuleTcpOptionsArgs tcpOptions) {
            return tcpOptions(Output.of(tcpOptions));
        }

        public Builder udpOptions(@Nullable Output<DefaultSecurityListIngressSecurityRuleUdpOptionsArgs> udpOptions) {
            $.udpOptions = udpOptions;
            return this;
        }

        public Builder udpOptions(DefaultSecurityListIngressSecurityRuleUdpOptionsArgs udpOptions) {
            return udpOptions(Output.of(udpOptions));
        }

        public DefaultSecurityListIngressSecurityRuleArgs build() {
            $.protocol = Objects.requireNonNull($.protocol, "expected parameter 'protocol' to be non-null");
            $.source = Objects.requireNonNull($.source, "expected parameter 'source' to be non-null");
            return $;
        }
    }

}
