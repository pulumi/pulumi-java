// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetManagementAgentPluginCountPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagementAgentPluginCountPlainArgs Empty = new GetManagementAgentPluginCountPlainArgs();

    /**
     * The OCID of the compartment to which a request will be scoped.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the compartment to which a request will be scoped.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * The field by which to group Management Agent Plugins
     * 
     */
    @Import(name="groupBy", required=true)
    private String groupBy;

    /**
     * @return The field by which to group Management Agent Plugins
     * 
     */
    public String groupBy() {
        return this.groupBy;
    }

    private GetManagementAgentPluginCountPlainArgs() {}

    private GetManagementAgentPluginCountPlainArgs(GetManagementAgentPluginCountPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.groupBy = $.groupBy;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagementAgentPluginCountPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagementAgentPluginCountPlainArgs $;

        public Builder() {
            $ = new GetManagementAgentPluginCountPlainArgs();
        }

        public Builder(GetManagementAgentPluginCountPlainArgs defaults) {
            $ = new GetManagementAgentPluginCountPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment to which a request will be scoped.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param groupBy The field by which to group Management Agent Plugins
         * 
         * @return builder
         * 
         */
        public Builder groupBy(String groupBy) {
            $.groupBy = groupBy;
            return this;
        }

        public GetManagementAgentPluginCountPlainArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.groupBy = Objects.requireNonNull($.groupBy, "expected parameter 'groupBy' to be non-null");
            return $;
        }
    }

}
