// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetClusterKubeConfigPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetClusterKubeConfigPlainArgs Empty = new GetClusterKubeConfigPlainArgs();

    /**
     * The OCID of the cluster.
     * 
     */
    @Import(name="clusterId", required=true)
    private String clusterId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public String clusterId() {
        return this.clusterId;
    }

    /**
     * The endpoint to target. A cluster may have multiple endpoints exposed but the kubeconfig can only target one at a time.
     * 
     */
    @Import(name="endpoint")
    private @Nullable String endpoint;

    /**
     * @return The endpoint to target. A cluster may have multiple endpoints exposed but the kubeconfig can only target one at a time.
     * 
     */
    public Optional<String> endpoint() {
        return Optional.ofNullable(this.endpoint);
    }

    /**
     * Deprecated. This field is no longer used.
     * 
     */
    @Import(name="expiration")
    private @Nullable Integer expiration;

    /**
     * @return Deprecated. This field is no longer used.
     * 
     */
    public Optional<Integer> expiration() {
        return Optional.ofNullable(this.expiration);
    }

    /**
     * The version of the kubeconfig token. Supported value 2.0.0
     * 
     */
    @Import(name="tokenVersion")
    private @Nullable String tokenVersion;

    /**
     * @return The version of the kubeconfig token. Supported value 2.0.0
     * 
     */
    public Optional<String> tokenVersion() {
        return Optional.ofNullable(this.tokenVersion);
    }

    private GetClusterKubeConfigPlainArgs() {}

    private GetClusterKubeConfigPlainArgs(GetClusterKubeConfigPlainArgs $) {
        this.clusterId = $.clusterId;
        this.endpoint = $.endpoint;
        this.expiration = $.expiration;
        this.tokenVersion = $.tokenVersion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetClusterKubeConfigPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetClusterKubeConfigPlainArgs $;

        public Builder() {
            $ = new GetClusterKubeConfigPlainArgs();
        }

        public Builder(GetClusterKubeConfigPlainArgs defaults) {
            $ = new GetClusterKubeConfigPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param endpoint The endpoint to target. A cluster may have multiple endpoints exposed but the kubeconfig can only target one at a time.
         * 
         * @return builder
         * 
         */
        public Builder endpoint(@Nullable String endpoint) {
            $.endpoint = endpoint;
            return this;
        }

        /**
         * @param expiration Deprecated. This field is no longer used.
         * 
         * @return builder
         * 
         */
        public Builder expiration(@Nullable Integer expiration) {
            $.expiration = expiration;
            return this;
        }

        /**
         * @param tokenVersion The version of the kubeconfig token. Supported value 2.0.0
         * 
         * @return builder
         * 
         */
        public Builder tokenVersion(@Nullable String tokenVersion) {
            $.tokenVersion = tokenVersion;
            return this;
        }

        public GetClusterKubeConfigPlainArgs build() {
            $.clusterId = Objects.requireNonNull($.clusterId, "expected parameter 'clusterId' to be non-null");
            return $;
        }
    }

}
