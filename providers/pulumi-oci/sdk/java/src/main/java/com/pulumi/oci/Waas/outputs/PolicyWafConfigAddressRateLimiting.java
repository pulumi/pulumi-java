// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PolicyWafConfigAddressRateLimiting {
    /**
     * @return (Updatable) The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
     * 
     */
    private final @Nullable Integer allowedRatePerAddress;
    /**
     * @return (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     * 
     */
    private final @Nullable Integer blockResponseCode;
    /**
     * @return (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    private final Boolean isEnabled;
    /**
     * @return (Updatable) The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
     * 
     */
    private final @Nullable Integer maxDelayedCountPerAddress;

    @CustomType.Constructor
    private PolicyWafConfigAddressRateLimiting(
        @CustomType.Parameter("allowedRatePerAddress") @Nullable Integer allowedRatePerAddress,
        @CustomType.Parameter("blockResponseCode") @Nullable Integer blockResponseCode,
        @CustomType.Parameter("isEnabled") Boolean isEnabled,
        @CustomType.Parameter("maxDelayedCountPerAddress") @Nullable Integer maxDelayedCountPerAddress) {
        this.allowedRatePerAddress = allowedRatePerAddress;
        this.blockResponseCode = blockResponseCode;
        this.isEnabled = isEnabled;
        this.maxDelayedCountPerAddress = maxDelayedCountPerAddress;
    }

    /**
     * @return (Updatable) The number of allowed requests per second from one IP address. If unspecified, defaults to `1`.
     * 
     */
    public Optional<Integer> allowedRatePerAddress() {
        return Optional.ofNullable(this.allowedRatePerAddress);
    }
    /**
     * @return (Updatable) The response code returned when `action` is set to `BLOCK`, `blockAction` is set to `SET_RESPONSE_CODE`, and the traffic is detected as malicious by a protection rule. If unspecified, defaults to `403`. The list of available response codes: `400`, `401`, `403`, `405`, `409`, `411`, `412`, `413`, `414`, `415`, `416`, `500`, `501`, `502`, `503`, `504`, `507`.
     * 
     */
    public Optional<Integer> blockResponseCode() {
        return Optional.ofNullable(this.blockResponseCode);
    }
    /**
     * @return (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return (Updatable) The maximum number of requests allowed to be queued before subsequent requests are dropped. If unspecified, defaults to `10`.
     * 
     */
    public Optional<Integer> maxDelayedCountPerAddress() {
        return Optional.ofNullable(this.maxDelayedCountPerAddress);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyWafConfigAddressRateLimiting defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer allowedRatePerAddress;
        private @Nullable Integer blockResponseCode;
        private Boolean isEnabled;
        private @Nullable Integer maxDelayedCountPerAddress;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyWafConfigAddressRateLimiting defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowedRatePerAddress = defaults.allowedRatePerAddress;
    	      this.blockResponseCode = defaults.blockResponseCode;
    	      this.isEnabled = defaults.isEnabled;
    	      this.maxDelayedCountPerAddress = defaults.maxDelayedCountPerAddress;
        }

        public Builder allowedRatePerAddress(@Nullable Integer allowedRatePerAddress) {
            this.allowedRatePerAddress = allowedRatePerAddress;
            return this;
        }
        public Builder blockResponseCode(@Nullable Integer blockResponseCode) {
            this.blockResponseCode = blockResponseCode;
            return this;
        }
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        public Builder maxDelayedCountPerAddress(@Nullable Integer maxDelayedCountPerAddress) {
            this.maxDelayedCountPerAddress = maxDelayedCountPerAddress;
            return this;
        }        public PolicyWafConfigAddressRateLimiting build() {
            return new PolicyWafConfigAddressRateLimiting(allowedRatePerAddress, blockResponseCode, isEnabled, maxDelayedCountPerAddress);
        }
    }
}
