// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApmSynthetics.outputs.GetScriptsScriptCollectionItemParameterScriptParameter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetScriptsScriptCollectionItemParameter {
    /**
     * @return If parameter value is default or overwritten.
     * 
     */
    private final Boolean isOverwritten;
    /**
     * @return If the parameter value is secret and should be kept confidential, then set isSecret to true.
     * 
     */
    private final Boolean isSecret;
    /**
     * @return Name of the parameter.
     * 
     */
    private final String paramName;
    /**
     * @return Value of the parameter.
     * 
     */
    private final String paramValue;
    /**
     * @return Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
     * 
     */
    private final List<GetScriptsScriptCollectionItemParameterScriptParameter> scriptParameters;

    @CustomType.Constructor
    private GetScriptsScriptCollectionItemParameter(
        @CustomType.Parameter("isOverwritten") Boolean isOverwritten,
        @CustomType.Parameter("isSecret") Boolean isSecret,
        @CustomType.Parameter("paramName") String paramName,
        @CustomType.Parameter("paramValue") String paramValue,
        @CustomType.Parameter("scriptParameters") List<GetScriptsScriptCollectionItemParameterScriptParameter> scriptParameters) {
        this.isOverwritten = isOverwritten;
        this.isSecret = isSecret;
        this.paramName = paramName;
        this.paramValue = paramValue;
        this.scriptParameters = scriptParameters;
    }

    /**
     * @return If parameter value is default or overwritten.
     * 
     */
    public Boolean isOverwritten() {
        return this.isOverwritten;
    }
    /**
     * @return If the parameter value is secret and should be kept confidential, then set isSecret to true.
     * 
     */
    public Boolean isSecret() {
        return this.isSecret;
    }
    /**
     * @return Name of the parameter.
     * 
     */
    public String paramName() {
        return this.paramName;
    }
    /**
     * @return Value of the parameter.
     * 
     */
    public String paramValue() {
        return this.paramValue;
    }
    /**
     * @return Details of the script parameters, paramName must be from the script content and these details can be used to overwrite the default parameter present in the script content.
     * 
     */
    public List<GetScriptsScriptCollectionItemParameterScriptParameter> scriptParameters() {
        return this.scriptParameters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetScriptsScriptCollectionItemParameter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean isOverwritten;
        private Boolean isSecret;
        private String paramName;
        private String paramValue;
        private List<GetScriptsScriptCollectionItemParameterScriptParameter> scriptParameters;

        public Builder() {
    	      // Empty
        }

        public Builder(GetScriptsScriptCollectionItemParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isOverwritten = defaults.isOverwritten;
    	      this.isSecret = defaults.isSecret;
    	      this.paramName = defaults.paramName;
    	      this.paramValue = defaults.paramValue;
    	      this.scriptParameters = defaults.scriptParameters;
        }

        public Builder isOverwritten(Boolean isOverwritten) {
            this.isOverwritten = Objects.requireNonNull(isOverwritten);
            return this;
        }
        public Builder isSecret(Boolean isSecret) {
            this.isSecret = Objects.requireNonNull(isSecret);
            return this;
        }
        public Builder paramName(String paramName) {
            this.paramName = Objects.requireNonNull(paramName);
            return this;
        }
        public Builder paramValue(String paramValue) {
            this.paramValue = Objects.requireNonNull(paramValue);
            return this;
        }
        public Builder scriptParameters(List<GetScriptsScriptCollectionItemParameterScriptParameter> scriptParameters) {
            this.scriptParameters = Objects.requireNonNull(scriptParameters);
            return this;
        }
        public Builder scriptParameters(GetScriptsScriptCollectionItemParameterScriptParameter... scriptParameters) {
            return scriptParameters(List.of(scriptParameters));
        }        public GetScriptsScriptCollectionItemParameter build() {
            return new GetScriptsScriptCollectionItemParameter(isOverwritten, isSecret, paramName, paramValue, scriptParameters);
        }
    }
}
