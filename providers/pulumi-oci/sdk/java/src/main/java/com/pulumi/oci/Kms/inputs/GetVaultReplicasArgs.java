// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Kms.inputs.GetVaultReplicasFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetVaultReplicasArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetVaultReplicasArgs Empty = new GetVaultReplicasArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetVaultReplicasFilterArgs>> filters;

    public Optional<Output<List<GetVaultReplicasFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of the vault.
     * 
     */
    @Import(name="vaultId", required=true)
    private Output<String> vaultId;

    /**
     * @return The OCID of the vault.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    private GetVaultReplicasArgs() {}

    private GetVaultReplicasArgs(GetVaultReplicasArgs $) {
        this.filters = $.filters;
        this.vaultId = $.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetVaultReplicasArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetVaultReplicasArgs $;

        public Builder() {
            $ = new GetVaultReplicasArgs();
        }

        public Builder(GetVaultReplicasArgs defaults) {
            $ = new GetVaultReplicasArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetVaultReplicasFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetVaultReplicasFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetVaultReplicasFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param vaultId The OCID of the vault.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(Output<String> vaultId) {
            $.vaultId = vaultId;
            return this;
        }

        /**
         * @param vaultId The OCID of the vault.
         * 
         * @return builder
         * 
         */
        public Builder vaultId(String vaultId) {
            return vaultId(Output.of(vaultId));
        }

        public GetVaultReplicasArgs build() {
            $.vaultId = Objects.requireNonNull($.vaultId, "expected parameter 'vaultId' to be non-null");
            return $;
        }
    }

}
