// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.VolumeAttachmentMultipathDeviceArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final VolumeAttachmentState Empty = new VolumeAttachmentState();

    /**
     * The type of volume. The only supported values are &#34;iscsi&#34; and &#34;paravirtualized&#34;.
     * 
     */
    @Import(name="attachmentType")
    private @Nullable Output<String> attachmentType;

    /**
     * @return The type of volume. The only supported values are &#34;iscsi&#34; and &#34;paravirtualized&#34;.
     * 
     */
    public Optional<Output<String>> attachmentType() {
        return Optional.ofNullable(this.attachmentType);
    }

    /**
     * The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    @Import(name="availabilityDomain")
    private @Nullable Output<String> availabilityDomain;

    /**
     * @return The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Optional<Output<String>> availabilityDomain() {
        return Optional.ofNullable(this.availabilityDomain);
    }

    /**
     * The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name. (Also called the &#34;CHAP password&#34;.)
     * 
     */
    @Import(name="chapSecret")
    private @Nullable Output<String> chapSecret;

    /**
     * @return The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name. (Also called the &#34;CHAP password&#34;.)
     * 
     */
    public Optional<Output<String>> chapSecret() {
        return Optional.ofNullable(this.chapSecret);
    }

    /**
     * The volume&#39;s system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name. See [RFC 1994](https://tools.ietf.org/html/rfc1994) for more on CHAP.  Example: `ocid1.volume.oc1.phx.&lt;unique_ID&gt;`
     * 
     */
    @Import(name="chapUsername")
    private @Nullable Output<String> chapUsername;

    /**
     * @return The volume&#39;s system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name. See [RFC 1994](https://tools.ietf.org/html/rfc1994) for more on CHAP.  Example: `ocid1.volume.oc1.phx.&lt;unique_ID&gt;`
     * 
     */
    public Optional<Output<String>> chapUsername() {
        return Optional.ofNullable(this.chapUsername);
    }

    /**
     * The OCID of the compartment.
     * 
     * @deprecated
     * The &#39;compartment_id&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'compartment_id' field has been deprecated and may be removed in a future version. Do not use this field. */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment.
     * 
     * @deprecated
     * The &#39;compartment_id&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'compartment_id' field has been deprecated and may be removed in a future version. Do not use this field. */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The device name. To retrieve a list of devices for a given instance, see [ListInstanceDevices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Device/ListInstanceDevices).
     * 
     */
    @Import(name="device")
    private @Nullable Output<String> device;

    /**
     * @return The device name. To retrieve a list of devices for a given instance, see [ListInstanceDevices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Device/ListInstanceDevices).
     * 
     */
    public Optional<Output<String>> device() {
        return Optional.ofNullable(this.device);
    }

    /**
     * A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     * 
     */
    @Import(name="encryptionInTransitType")
    private @Nullable Output<String> encryptionInTransitType;

    /**
     * @return Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     * 
     */
    public Optional<Output<String>> encryptionInTransitType() {
        return Optional.ofNullable(this.encryptionInTransitType);
    }

    /**
     * The OCID of the instance.
     * 
     */
    @Import(name="instanceId")
    private @Nullable Output<String> instanceId;

    /**
     * @return The OCID of the instance.
     * 
     */
    public Optional<Output<String>> instanceId() {
        return Optional.ofNullable(this.instanceId);
    }

    /**
     * The volume&#39;s iSCSI IP address.  Example: `169.254.2.2`
     * 
     */
    @Import(name="ipv4")
    private @Nullable Output<String> ipv4;

    /**
     * @return The volume&#39;s iSCSI IP address.  Example: `169.254.2.2`
     * 
     */
    public Optional<Output<String>> ipv4() {
        return Optional.ofNullable(this.ipv4);
    }

    /**
     * The target volume&#39;s iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
     * 
     */
    @Import(name="iqn")
    private @Nullable Output<String> iqn;

    /**
     * @return The target volume&#39;s iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
     * 
     */
    public Optional<Output<String>> iqn() {
        return Optional.ofNullable(this.iqn);
    }

    /**
     * Whether the Iscsi or Paravirtualized attachment is multipath or not, it is not applicable to NVMe attachment.
     * 
     */
    @Import(name="isMultipath")
    private @Nullable Output<Boolean> isMultipath;

    /**
     * @return Whether the Iscsi or Paravirtualized attachment is multipath or not, it is not applicable to NVMe attachment.
     * 
     */
    public Optional<Output<Boolean>> isMultipath() {
        return Optional.ofNullable(this.isMultipath);
    }

    /**
     * Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. The default value is false.
     * 
     */
    @Import(name="isPvEncryptionInTransitEnabled")
    private @Nullable Output<Boolean> isPvEncryptionInTransitEnabled;

    /**
     * @return Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. The default value is false.
     * 
     */
    public Optional<Output<Boolean>> isPvEncryptionInTransitEnabled() {
        return Optional.ofNullable(this.isPvEncryptionInTransitEnabled);
    }

    /**
     * Whether the attachment was created in read-only mode.
     * 
     */
    @Import(name="isReadOnly")
    private @Nullable Output<Boolean> isReadOnly;

    /**
     * @return Whether the attachment was created in read-only mode.
     * 
     */
    public Optional<Output<Boolean>> isReadOnly() {
        return Optional.ofNullable(this.isReadOnly);
    }

    /**
     * Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
     * 
     */
    @Import(name="isShareable")
    private @Nullable Output<Boolean> isShareable;

    /**
     * @return Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
     * 
     */
    public Optional<Output<Boolean>> isShareable() {
        return Optional.ofNullable(this.isShareable);
    }

    /**
     * The iscsi login state of the volume attachment. For a Iscsi volume attachment, all iscsi sessions need to be all logged-in or logged-out to be in logged-in or logged-out state.
     * 
     */
    @Import(name="iscsiLoginState")
    private @Nullable Output<String> iscsiLoginState;

    /**
     * @return The iscsi login state of the volume attachment. For a Iscsi volume attachment, all iscsi sessions need to be all logged-in or logged-out to be in logged-in or logged-out state.
     * 
     */
    public Optional<Output<String>> iscsiLoginState() {
        return Optional.ofNullable(this.iscsiLoginState);
    }

    /**
     * A list of secondary multipath devices
     * 
     */
    @Import(name="multipathDevices")
    private @Nullable Output<List<VolumeAttachmentMultipathDeviceArgs>> multipathDevices;

    /**
     * @return A list of secondary multipath devices
     * 
     */
    public Optional<Output<List<VolumeAttachmentMultipathDeviceArgs>>> multipathDevices() {
        return Optional.ofNullable(this.multipathDevices);
    }

    /**
     * The volume&#39;s iSCSI port, usually port 860 or 3260.  Example: `3260`
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return The volume&#39;s iSCSI port, usually port 860 or 3260.  Example: `3260`
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    /**
     * The current state of the volume attachment.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the volume attachment.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The date and time the volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * Whether to use CHAP authentication for the volume attachment. Defaults to false.
     * 
     */
    @Import(name="useChap")
    private @Nullable Output<Boolean> useChap;

    /**
     * @return Whether to use CHAP authentication for the volume attachment. Defaults to false.
     * 
     */
    public Optional<Output<Boolean>> useChap() {
        return Optional.ofNullable(this.useChap);
    }

    /**
     * The OCID of the volume.
     * 
     */
    @Import(name="volumeId")
    private @Nullable Output<String> volumeId;

    /**
     * @return The OCID of the volume.
     * 
     */
    public Optional<Output<String>> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }

    private VolumeAttachmentState() {}

    private VolumeAttachmentState(VolumeAttachmentState $) {
        this.attachmentType = $.attachmentType;
        this.availabilityDomain = $.availabilityDomain;
        this.chapSecret = $.chapSecret;
        this.chapUsername = $.chapUsername;
        this.compartmentId = $.compartmentId;
        this.device = $.device;
        this.displayName = $.displayName;
        this.encryptionInTransitType = $.encryptionInTransitType;
        this.instanceId = $.instanceId;
        this.ipv4 = $.ipv4;
        this.iqn = $.iqn;
        this.isMultipath = $.isMultipath;
        this.isPvEncryptionInTransitEnabled = $.isPvEncryptionInTransitEnabled;
        this.isReadOnly = $.isReadOnly;
        this.isShareable = $.isShareable;
        this.iscsiLoginState = $.iscsiLoginState;
        this.multipathDevices = $.multipathDevices;
        this.port = $.port;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.useChap = $.useChap;
        this.volumeId = $.volumeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeAttachmentState $;

        public Builder() {
            $ = new VolumeAttachmentState();
        }

        public Builder(VolumeAttachmentState defaults) {
            $ = new VolumeAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param attachmentType The type of volume. The only supported values are &#34;iscsi&#34; and &#34;paravirtualized&#34;.
         * 
         * @return builder
         * 
         */
        public Builder attachmentType(@Nullable Output<String> attachmentType) {
            $.attachmentType = attachmentType;
            return this;
        }

        /**
         * @param attachmentType The type of volume. The only supported values are &#34;iscsi&#34; and &#34;paravirtualized&#34;.
         * 
         * @return builder
         * 
         */
        public Builder attachmentType(String attachmentType) {
            return attachmentType(Output.of(attachmentType));
        }

        /**
         * @param availabilityDomain The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable Output<String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain The availability domain of an instance.  Example: `Uocm:PHX-AD-1`
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        /**
         * @param chapSecret The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name. (Also called the &#34;CHAP password&#34;.)
         * 
         * @return builder
         * 
         */
        public Builder chapSecret(@Nullable Output<String> chapSecret) {
            $.chapSecret = chapSecret;
            return this;
        }

        /**
         * @param chapSecret The Challenge-Handshake-Authentication-Protocol (CHAP) secret valid for the associated CHAP user name. (Also called the &#34;CHAP password&#34;.)
         * 
         * @return builder
         * 
         */
        public Builder chapSecret(String chapSecret) {
            return chapSecret(Output.of(chapSecret));
        }

        /**
         * @param chapUsername The volume&#39;s system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name. See [RFC 1994](https://tools.ietf.org/html/rfc1994) for more on CHAP.  Example: `ocid1.volume.oc1.phx.&lt;unique_ID&gt;`
         * 
         * @return builder
         * 
         */
        public Builder chapUsername(@Nullable Output<String> chapUsername) {
            $.chapUsername = chapUsername;
            return this;
        }

        /**
         * @param chapUsername The volume&#39;s system-generated Challenge-Handshake-Authentication-Protocol (CHAP) user name. See [RFC 1994](https://tools.ietf.org/html/rfc1994) for more on CHAP.  Example: `ocid1.volume.oc1.phx.&lt;unique_ID&gt;`
         * 
         * @return builder
         * 
         */
        public Builder chapUsername(String chapUsername) {
            return chapUsername(Output.of(chapUsername));
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         * @deprecated
         * The &#39;compartment_id&#39; field has been deprecated and may be removed in a future version. Do not use this field.
         * 
         */
        @Deprecated /* The 'compartment_id' field has been deprecated and may be removed in a future version. Do not use this field. */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         * @deprecated
         * The &#39;compartment_id&#39; field has been deprecated and may be removed in a future version. Do not use this field.
         * 
         */
        @Deprecated /* The 'compartment_id' field has been deprecated and may be removed in a future version. Do not use this field. */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param device The device name. To retrieve a list of devices for a given instance, see [ListInstanceDevices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Device/ListInstanceDevices).
         * 
         * @return builder
         * 
         */
        public Builder device(@Nullable Output<String> device) {
            $.device = device;
            return this;
        }

        /**
         * @param device The device name. To retrieve a list of devices for a given instance, see [ListInstanceDevices](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/Device/ListInstanceDevices).
         * 
         * @return builder
         * 
         */
        public Builder device(String device) {
            return device(Output.of(device));
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param encryptionInTransitType Refer the top-level definition of encryptionInTransitType. The default value is NONE.
         * 
         * @return builder
         * 
         */
        public Builder encryptionInTransitType(@Nullable Output<String> encryptionInTransitType) {
            $.encryptionInTransitType = encryptionInTransitType;
            return this;
        }

        /**
         * @param encryptionInTransitType Refer the top-level definition of encryptionInTransitType. The default value is NONE.
         * 
         * @return builder
         * 
         */
        public Builder encryptionInTransitType(String encryptionInTransitType) {
            return encryptionInTransitType(Output.of(encryptionInTransitType));
        }

        /**
         * @param instanceId The OCID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(@Nullable Output<String> instanceId) {
            $.instanceId = instanceId;
            return this;
        }

        /**
         * @param instanceId The OCID of the instance.
         * 
         * @return builder
         * 
         */
        public Builder instanceId(String instanceId) {
            return instanceId(Output.of(instanceId));
        }

        /**
         * @param ipv4 The volume&#39;s iSCSI IP address.  Example: `169.254.2.2`
         * 
         * @return builder
         * 
         */
        public Builder ipv4(@Nullable Output<String> ipv4) {
            $.ipv4 = ipv4;
            return this;
        }

        /**
         * @param ipv4 The volume&#39;s iSCSI IP address.  Example: `169.254.2.2`
         * 
         * @return builder
         * 
         */
        public Builder ipv4(String ipv4) {
            return ipv4(Output.of(ipv4));
        }

        /**
         * @param iqn The target volume&#39;s iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
         * 
         * @return builder
         * 
         */
        public Builder iqn(@Nullable Output<String> iqn) {
            $.iqn = iqn;
            return this;
        }

        /**
         * @param iqn The target volume&#39;s iSCSI Qualified Name in the format defined by [RFC 3720](https://tools.ietf.org/html/rfc3720#page-32).  Example: `iqn.2015-12.com.oracleiaas:40b7ee03-883f-46c6-a951-63d2841d2195`
         * 
         * @return builder
         * 
         */
        public Builder iqn(String iqn) {
            return iqn(Output.of(iqn));
        }

        /**
         * @param isMultipath Whether the Iscsi or Paravirtualized attachment is multipath or not, it is not applicable to NVMe attachment.
         * 
         * @return builder
         * 
         */
        public Builder isMultipath(@Nullable Output<Boolean> isMultipath) {
            $.isMultipath = isMultipath;
            return this;
        }

        /**
         * @param isMultipath Whether the Iscsi or Paravirtualized attachment is multipath or not, it is not applicable to NVMe attachment.
         * 
         * @return builder
         * 
         */
        public Builder isMultipath(Boolean isMultipath) {
            return isMultipath(Output.of(isMultipath));
        }

        /**
         * @param isPvEncryptionInTransitEnabled Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. The default value is false.
         * 
         * @return builder
         * 
         */
        public Builder isPvEncryptionInTransitEnabled(@Nullable Output<Boolean> isPvEncryptionInTransitEnabled) {
            $.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
            return this;
        }

        /**
         * @param isPvEncryptionInTransitEnabled Whether to enable in-transit encryption for the data volume&#39;s paravirtualized attachment. The default value is false.
         * 
         * @return builder
         * 
         */
        public Builder isPvEncryptionInTransitEnabled(Boolean isPvEncryptionInTransitEnabled) {
            return isPvEncryptionInTransitEnabled(Output.of(isPvEncryptionInTransitEnabled));
        }

        /**
         * @param isReadOnly Whether the attachment was created in read-only mode.
         * 
         * @return builder
         * 
         */
        public Builder isReadOnly(@Nullable Output<Boolean> isReadOnly) {
            $.isReadOnly = isReadOnly;
            return this;
        }

        /**
         * @param isReadOnly Whether the attachment was created in read-only mode.
         * 
         * @return builder
         * 
         */
        public Builder isReadOnly(Boolean isReadOnly) {
            return isReadOnly(Output.of(isReadOnly));
        }

        /**
         * @param isShareable Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
         * 
         * @return builder
         * 
         */
        public Builder isShareable(@Nullable Output<Boolean> isShareable) {
            $.isShareable = isShareable;
            return this;
        }

        /**
         * @param isShareable Whether the attachment should be created in shareable mode. If an attachment is created in shareable mode, then other instances can attach the same volume, provided that they also create their attachments in shareable mode. Only certain volume types can be attached in shareable mode. Defaults to false if not specified.
         * 
         * @return builder
         * 
         */
        public Builder isShareable(Boolean isShareable) {
            return isShareable(Output.of(isShareable));
        }

        /**
         * @param iscsiLoginState The iscsi login state of the volume attachment. For a Iscsi volume attachment, all iscsi sessions need to be all logged-in or logged-out to be in logged-in or logged-out state.
         * 
         * @return builder
         * 
         */
        public Builder iscsiLoginState(@Nullable Output<String> iscsiLoginState) {
            $.iscsiLoginState = iscsiLoginState;
            return this;
        }

        /**
         * @param iscsiLoginState The iscsi login state of the volume attachment. For a Iscsi volume attachment, all iscsi sessions need to be all logged-in or logged-out to be in logged-in or logged-out state.
         * 
         * @return builder
         * 
         */
        public Builder iscsiLoginState(String iscsiLoginState) {
            return iscsiLoginState(Output.of(iscsiLoginState));
        }

        /**
         * @param multipathDevices A list of secondary multipath devices
         * 
         * @return builder
         * 
         */
        public Builder multipathDevices(@Nullable Output<List<VolumeAttachmentMultipathDeviceArgs>> multipathDevices) {
            $.multipathDevices = multipathDevices;
            return this;
        }

        /**
         * @param multipathDevices A list of secondary multipath devices
         * 
         * @return builder
         * 
         */
        public Builder multipathDevices(List<VolumeAttachmentMultipathDeviceArgs> multipathDevices) {
            return multipathDevices(Output.of(multipathDevices));
        }

        /**
         * @param multipathDevices A list of secondary multipath devices
         * 
         * @return builder
         * 
         */
        public Builder multipathDevices(VolumeAttachmentMultipathDeviceArgs... multipathDevices) {
            return multipathDevices(List.of(multipathDevices));
        }

        /**
         * @param port The volume&#39;s iSCSI port, usually port 860 or 3260.  Example: `3260`
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port The volume&#39;s iSCSI port, usually port 860 or 3260.  Example: `3260`
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param state The current state of the volume attachment.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the volume attachment.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The date and time the volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param useChap Whether to use CHAP authentication for the volume attachment. Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder useChap(@Nullable Output<Boolean> useChap) {
            $.useChap = useChap;
            return this;
        }

        /**
         * @param useChap Whether to use CHAP authentication for the volume attachment. Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder useChap(Boolean useChap) {
            return useChap(Output.of(useChap));
        }

        /**
         * @param volumeId The OCID of the volume.
         * 
         * @return builder
         * 
         */
        public Builder volumeId(@Nullable Output<String> volumeId) {
            $.volumeId = volumeId;
            return this;
        }

        /**
         * @param volumeId The OCID of the volume.
         * 
         * @return builder
         * 
         */
        public Builder volumeId(String volumeId) {
            return volumeId(Output.of(volumeId));
        }

        public VolumeAttachmentState build() {
            return $;
        }
    }

}
