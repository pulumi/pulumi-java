// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Bastion;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BastionArgs extends com.pulumi.resources.ResourceArgs {

    public static final BastionArgs Empty = new BastionArgs();

    /**
     * The type of bastion. Use `standard`.
     * 
     */
    @Import(name="bastionType", required=true)
    private Output<String> bastionType;

    /**
     * @return The type of bastion. Use `standard`.
     * 
     */
    public Output<String> bastionType() {
        return this.bastionType;
    }

    /**
     * (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
     * 
     */
    @Import(name="clientCidrBlockAllowLists")
    private @Nullable Output<List<String>> clientCidrBlockAllowLists;

    /**
     * @return (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
     * 
     */
    public Optional<Output<List<String>>> clientCidrBlockAllowLists() {
        return Optional.ofNullable(this.clientCidrBlockAllowLists);
    }

    /**
     * (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The maximum amount of time that any session on the bastion can remain active.
     * 
     */
    @Import(name="maxSessionTtlInSeconds")
    private @Nullable Output<Integer> maxSessionTtlInSeconds;

    /**
     * @return (Updatable) The maximum amount of time that any session on the bastion can remain active.
     * 
     */
    public Optional<Output<Integer>> maxSessionTtlInSeconds() {
        return Optional.ofNullable(this.maxSessionTtlInSeconds);
    }

    /**
     * The name of the bastion, which can&#39;t be changed after creation.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the bastion, which can&#39;t be changed after creation.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The phonebook entry of the customer&#39;s team, which can&#39;t be changed after creation. Not applicable to `standard` bastions.
     * 
     */
    @Import(name="phoneBookEntry")
    private @Nullable Output<String> phoneBookEntry;

    /**
     * @return The phonebook entry of the customer&#39;s team, which can&#39;t be changed after creation. Not applicable to `standard` bastions.
     * 
     */
    public Optional<Output<String>> phoneBookEntry() {
        return Optional.ofNullable(this.phoneBookEntry);
    }

    /**
     * (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
     * 
     */
    @Import(name="staticJumpHostIpAddresses")
    private @Nullable Output<List<String>> staticJumpHostIpAddresses;

    /**
     * @return (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
     * 
     */
    public Optional<Output<List<String>>> staticJumpHostIpAddresses() {
        return Optional.ofNullable(this.staticJumpHostIpAddresses);
    }

    /**
     * The unique identifier (OCID) of the subnet that the bastion connects to.
     * 
     */
    @Import(name="targetSubnetId", required=true)
    private Output<String> targetSubnetId;

    /**
     * @return The unique identifier (OCID) of the subnet that the bastion connects to.
     * 
     */
    public Output<String> targetSubnetId() {
        return this.targetSubnetId;
    }

    private BastionArgs() {}

    private BastionArgs(BastionArgs $) {
        this.bastionType = $.bastionType;
        this.clientCidrBlockAllowLists = $.clientCidrBlockAllowLists;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.freeformTags = $.freeformTags;
        this.maxSessionTtlInSeconds = $.maxSessionTtlInSeconds;
        this.name = $.name;
        this.phoneBookEntry = $.phoneBookEntry;
        this.staticJumpHostIpAddresses = $.staticJumpHostIpAddresses;
        this.targetSubnetId = $.targetSubnetId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BastionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BastionArgs $;

        public Builder() {
            $ = new BastionArgs();
        }

        public Builder(BastionArgs defaults) {
            $ = new BastionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bastionType The type of bastion. Use `standard`.
         * 
         * @return builder
         * 
         */
        public Builder bastionType(Output<String> bastionType) {
            $.bastionType = bastionType;
            return this;
        }

        /**
         * @param bastionType The type of bastion. Use `standard`.
         * 
         * @return builder
         * 
         */
        public Builder bastionType(String bastionType) {
            return bastionType(Output.of(bastionType));
        }

        /**
         * @param clientCidrBlockAllowLists (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
         * 
         * @return builder
         * 
         */
        public Builder clientCidrBlockAllowLists(@Nullable Output<List<String>> clientCidrBlockAllowLists) {
            $.clientCidrBlockAllowLists = clientCidrBlockAllowLists;
            return this;
        }

        /**
         * @param clientCidrBlockAllowLists (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
         * 
         * @return builder
         * 
         */
        public Builder clientCidrBlockAllowLists(List<String> clientCidrBlockAllowLists) {
            return clientCidrBlockAllowLists(Output.of(clientCidrBlockAllowLists));
        }

        /**
         * @param clientCidrBlockAllowLists (Updatable) A list of address ranges in CIDR notation that you want to allow to connect to sessions hosted by this bastion.
         * 
         * @return builder
         * 
         */
        public Builder clientCidrBlockAllowLists(String... clientCidrBlockAllowLists) {
            return clientCidrBlockAllowLists(List.of(clientCidrBlockAllowLists));
        }

        /**
         * @param compartmentId (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The unique identifier (OCID) of the compartment where the bastion is located.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param maxSessionTtlInSeconds (Updatable) The maximum amount of time that any session on the bastion can remain active.
         * 
         * @return builder
         * 
         */
        public Builder maxSessionTtlInSeconds(@Nullable Output<Integer> maxSessionTtlInSeconds) {
            $.maxSessionTtlInSeconds = maxSessionTtlInSeconds;
            return this;
        }

        /**
         * @param maxSessionTtlInSeconds (Updatable) The maximum amount of time that any session on the bastion can remain active.
         * 
         * @return builder
         * 
         */
        public Builder maxSessionTtlInSeconds(Integer maxSessionTtlInSeconds) {
            return maxSessionTtlInSeconds(Output.of(maxSessionTtlInSeconds));
        }

        /**
         * @param name The name of the bastion, which can&#39;t be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the bastion, which can&#39;t be changed after creation.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param phoneBookEntry The phonebook entry of the customer&#39;s team, which can&#39;t be changed after creation. Not applicable to `standard` bastions.
         * 
         * @return builder
         * 
         */
        public Builder phoneBookEntry(@Nullable Output<String> phoneBookEntry) {
            $.phoneBookEntry = phoneBookEntry;
            return this;
        }

        /**
         * @param phoneBookEntry The phonebook entry of the customer&#39;s team, which can&#39;t be changed after creation. Not applicable to `standard` bastions.
         * 
         * @return builder
         * 
         */
        public Builder phoneBookEntry(String phoneBookEntry) {
            return phoneBookEntry(Output.of(phoneBookEntry));
        }

        /**
         * @param staticJumpHostIpAddresses (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
         * 
         * @return builder
         * 
         */
        public Builder staticJumpHostIpAddresses(@Nullable Output<List<String>> staticJumpHostIpAddresses) {
            $.staticJumpHostIpAddresses = staticJumpHostIpAddresses;
            return this;
        }

        /**
         * @param staticJumpHostIpAddresses (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
         * 
         * @return builder
         * 
         */
        public Builder staticJumpHostIpAddresses(List<String> staticJumpHostIpAddresses) {
            return staticJumpHostIpAddresses(Output.of(staticJumpHostIpAddresses));
        }

        /**
         * @param staticJumpHostIpAddresses (Updatable) A list of IP addresses of the hosts that the bastion has access to. Not applicable to `standard` bastions.
         * 
         * @return builder
         * 
         */
        public Builder staticJumpHostIpAddresses(String... staticJumpHostIpAddresses) {
            return staticJumpHostIpAddresses(List.of(staticJumpHostIpAddresses));
        }

        /**
         * @param targetSubnetId The unique identifier (OCID) of the subnet that the bastion connects to.
         * 
         * @return builder
         * 
         */
        public Builder targetSubnetId(Output<String> targetSubnetId) {
            $.targetSubnetId = targetSubnetId;
            return this;
        }

        /**
         * @param targetSubnetId The unique identifier (OCID) of the subnet that the bastion connects to.
         * 
         * @return builder
         * 
         */
        public Builder targetSubnetId(String targetSubnetId) {
            return targetSubnetId(Output.of(targetSubnetId));
        }

        public BastionArgs build() {
            $.bastionType = Objects.requireNonNull($.bastionType, "expected parameter 'bastionType' to be non-null");
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.targetSubnetId = Objects.requireNonNull($.targetSubnetId, "expected parameter 'targetSubnetId' to be non-null");
            return $;
        }
    }

}
