// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CertificatesManagement.outputs.GetAssociationsAssociationCollection;
import com.pulumi.oci.CertificatesManagement.outputs.GetAssociationsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAssociationsResult {
    /**
     * @return The OCID of the associated resource.
     * 
     */
    private final @Nullable String associatedResourceId;
    /**
     * @return The list of association_collection.
     * 
     */
    private final List<GetAssociationsAssociationCollection> associationCollections;
    private final @Nullable String associationId;
    /**
     * @return Type of the association.
     * 
     */
    private final @Nullable String associationType;
    /**
     * @return The OCID of the certificate-related resource associated with another Oracle Cloud Infrastructure resource.
     * 
     */
    private final @Nullable String certificatesResourceId;
    /**
     * @return The compartment OCID of the association, which is strongly tied to the compartment OCID of the certificate-related resource.
     * 
     */
    private final @Nullable String compartmentId;
    private final @Nullable List<GetAssociationsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return A user-friendly name generated by the service for the association, expressed in a format that follows the pattern: [certificatesResourceEntityType]-[associatedResourceEntityType]-UUID.
     * 
     */
    private final @Nullable String name;

    @CustomType.Constructor
    private GetAssociationsResult(
        @CustomType.Parameter("associatedResourceId") @Nullable String associatedResourceId,
        @CustomType.Parameter("associationCollections") List<GetAssociationsAssociationCollection> associationCollections,
        @CustomType.Parameter("associationId") @Nullable String associationId,
        @CustomType.Parameter("associationType") @Nullable String associationType,
        @CustomType.Parameter("certificatesResourceId") @Nullable String certificatesResourceId,
        @CustomType.Parameter("compartmentId") @Nullable String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetAssociationsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") @Nullable String name) {
        this.associatedResourceId = associatedResourceId;
        this.associationCollections = associationCollections;
        this.associationId = associationId;
        this.associationType = associationType;
        this.certificatesResourceId = certificatesResourceId;
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.name = name;
    }

    /**
     * @return The OCID of the associated resource.
     * 
     */
    public Optional<String> associatedResourceId() {
        return Optional.ofNullable(this.associatedResourceId);
    }
    /**
     * @return The list of association_collection.
     * 
     */
    public List<GetAssociationsAssociationCollection> associationCollections() {
        return this.associationCollections;
    }
    public Optional<String> associationId() {
        return Optional.ofNullable(this.associationId);
    }
    /**
     * @return Type of the association.
     * 
     */
    public Optional<String> associationType() {
        return Optional.ofNullable(this.associationType);
    }
    /**
     * @return The OCID of the certificate-related resource associated with another Oracle Cloud Infrastructure resource.
     * 
     */
    public Optional<String> certificatesResourceId() {
        return Optional.ofNullable(this.certificatesResourceId);
    }
    /**
     * @return The compartment OCID of the association, which is strongly tied to the compartment OCID of the certificate-related resource.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public List<GetAssociationsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A user-friendly name generated by the service for the association, expressed in a format that follows the pattern: [certificatesResourceEntityType]-[associatedResourceEntityType]-UUID.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAssociationsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String associatedResourceId;
        private List<GetAssociationsAssociationCollection> associationCollections;
        private @Nullable String associationId;
        private @Nullable String associationType;
        private @Nullable String certificatesResourceId;
        private @Nullable String compartmentId;
        private @Nullable List<GetAssociationsFilter> filters;
        private String id;
        private @Nullable String name;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAssociationsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedResourceId = defaults.associatedResourceId;
    	      this.associationCollections = defaults.associationCollections;
    	      this.associationId = defaults.associationId;
    	      this.associationType = defaults.associationType;
    	      this.certificatesResourceId = defaults.certificatesResourceId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
        }

        public Builder associatedResourceId(@Nullable String associatedResourceId) {
            this.associatedResourceId = associatedResourceId;
            return this;
        }
        public Builder associationCollections(List<GetAssociationsAssociationCollection> associationCollections) {
            this.associationCollections = Objects.requireNonNull(associationCollections);
            return this;
        }
        public Builder associationCollections(GetAssociationsAssociationCollection... associationCollections) {
            return associationCollections(List.of(associationCollections));
        }
        public Builder associationId(@Nullable String associationId) {
            this.associationId = associationId;
            return this;
        }
        public Builder associationType(@Nullable String associationType) {
            this.associationType = associationType;
            return this;
        }
        public Builder certificatesResourceId(@Nullable String certificatesResourceId) {
            this.certificatesResourceId = certificatesResourceId;
            return this;
        }
        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        public Builder filters(@Nullable List<GetAssociationsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetAssociationsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }        public GetAssociationsResult build() {
            return new GetAssociationsResult(associatedResourceId, associationCollections, associationId, associationType, certificatesResourceId, compartmentId, filters, id, name);
        }
    }
}
