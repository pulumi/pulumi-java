// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Oce;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InstanceArgs extends com.pulumi.resources.ResourceArgs {

    public static final InstanceArgs Empty = new InstanceArgs();

    /**
     * (Updatable) a list of add-on features for the ocm instance
     * 
     */
    @Import(name="addOnFeatures")
    private @Nullable Output<List<String>> addOnFeatures;

    /**
     * @return (Updatable) a list of add-on features for the ocm instance
     * 
     */
    public Optional<Output<List<String>>> addOnFeatures() {
        return Optional.ofNullable(this.addOnFeatures);
    }

    /**
     * Admin Email for Notification
     * 
     */
    @Import(name="adminEmail", required=true)
    private Output<String> adminEmail;

    /**
     * @return Admin Email for Notification
     * 
     */
    public Output<String> adminEmail() {
        return this.adminEmail;
    }

    /**
     * (Updatable) Compartment Identifier
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) OceInstance description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) OceInstance description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Identity Cloud Service access token identifying a stripe and service administrator user
     * 
     */
    @Import(name="idcsAccessToken", required=true)
    private Output<String> idcsAccessToken;

    /**
     * @return Identity Cloud Service access token identifying a stripe and service administrator user
     * 
     */
    public Output<String> idcsAccessToken() {
        return this.idcsAccessToken;
    }

    /**
     * Flag indicating whether the instance access is private or public
     * 
     */
    @Import(name="instanceAccessType")
    private @Nullable Output<String> instanceAccessType;

    /**
     * @return Flag indicating whether the instance access is private or public
     * 
     */
    public Optional<Output<String>> instanceAccessType() {
        return Optional.ofNullable(this.instanceAccessType);
    }

    /**
     * (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
     * 
     */
    @Import(name="instanceLicenseType")
    private @Nullable Output<String> instanceLicenseType;

    /**
     * @return (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
     * 
     */
    public Optional<Output<String>> instanceLicenseType() {
        return Optional.ofNullable(this.instanceLicenseType);
    }

    /**
     * (Updatable) Instance type based on its usage
     * 
     */
    @Import(name="instanceUsageType")
    private @Nullable Output<String> instanceUsageType;

    /**
     * @return (Updatable) Instance type based on its usage
     * 
     */
    public Optional<Output<String>> instanceUsageType() {
        return Optional.ofNullable(this.instanceUsageType);
    }

    /**
     * OceInstance Name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return OceInstance Name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Object Storage Namespace of Tenancy
     * 
     */
    @Import(name="objectStorageNamespace", required=true)
    private Output<String> objectStorageNamespace;

    /**
     * @return Object Storage Namespace of Tenancy
     * 
     */
    public Output<String> objectStorageNamespace() {
        return this.objectStorageNamespace;
    }

    /**
     * Tenancy Identifier
     * 
     */
    @Import(name="tenancyId", required=true)
    private Output<String> tenancyId;

    /**
     * @return Tenancy Identifier
     * 
     */
    public Output<String> tenancyId() {
        return this.tenancyId;
    }

    /**
     * Tenancy Name
     * 
     */
    @Import(name="tenancyName", required=true)
    private Output<String> tenancyName;

    /**
     * @return Tenancy Name
     * 
     */
    public Output<String> tenancyName() {
        return this.tenancyName;
    }

    /**
     * Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
     * 
     */
    @Import(name="upgradeSchedule")
    private @Nullable Output<String> upgradeSchedule;

    /**
     * @return Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
     * 
     */
    public Optional<Output<String>> upgradeSchedule() {
        return Optional.ofNullable(this.upgradeSchedule);
    }

    /**
     * (Updatable) Web Application Firewall(WAF) primary domain
     * 
     */
    @Import(name="wafPrimaryDomain")
    private @Nullable Output<String> wafPrimaryDomain;

    /**
     * @return (Updatable) Web Application Firewall(WAF) primary domain
     * 
     */
    public Optional<Output<String>> wafPrimaryDomain() {
        return Optional.ofNullable(this.wafPrimaryDomain);
    }

    private InstanceArgs() {}

    private InstanceArgs(InstanceArgs $) {
        this.addOnFeatures = $.addOnFeatures;
        this.adminEmail = $.adminEmail;
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.freeformTags = $.freeformTags;
        this.idcsAccessToken = $.idcsAccessToken;
        this.instanceAccessType = $.instanceAccessType;
        this.instanceLicenseType = $.instanceLicenseType;
        this.instanceUsageType = $.instanceUsageType;
        this.name = $.name;
        this.objectStorageNamespace = $.objectStorageNamespace;
        this.tenancyId = $.tenancyId;
        this.tenancyName = $.tenancyName;
        this.upgradeSchedule = $.upgradeSchedule;
        this.wafPrimaryDomain = $.wafPrimaryDomain;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InstanceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InstanceArgs $;

        public Builder() {
            $ = new InstanceArgs();
        }

        public Builder(InstanceArgs defaults) {
            $ = new InstanceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addOnFeatures (Updatable) a list of add-on features for the ocm instance
         * 
         * @return builder
         * 
         */
        public Builder addOnFeatures(@Nullable Output<List<String>> addOnFeatures) {
            $.addOnFeatures = addOnFeatures;
            return this;
        }

        /**
         * @param addOnFeatures (Updatable) a list of add-on features for the ocm instance
         * 
         * @return builder
         * 
         */
        public Builder addOnFeatures(List<String> addOnFeatures) {
            return addOnFeatures(Output.of(addOnFeatures));
        }

        /**
         * @param addOnFeatures (Updatable) a list of add-on features for the ocm instance
         * 
         * @return builder
         * 
         */
        public Builder addOnFeatures(String... addOnFeatures) {
            return addOnFeatures(List.of(addOnFeatures));
        }

        /**
         * @param adminEmail Admin Email for Notification
         * 
         * @return builder
         * 
         */
        public Builder adminEmail(Output<String> adminEmail) {
            $.adminEmail = adminEmail;
            return this;
        }

        /**
         * @param adminEmail Admin Email for Notification
         * 
         * @return builder
         * 
         */
        public Builder adminEmail(String adminEmail) {
            return adminEmail(Output.of(adminEmail));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Usage of predefined tag keys. These predefined keys are scoped to namespaces. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) OceInstance description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) OceInstance description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param idcsAccessToken Identity Cloud Service access token identifying a stripe and service administrator user
         * 
         * @return builder
         * 
         */
        public Builder idcsAccessToken(Output<String> idcsAccessToken) {
            $.idcsAccessToken = idcsAccessToken;
            return this;
        }

        /**
         * @param idcsAccessToken Identity Cloud Service access token identifying a stripe and service administrator user
         * 
         * @return builder
         * 
         */
        public Builder idcsAccessToken(String idcsAccessToken) {
            return idcsAccessToken(Output.of(idcsAccessToken));
        }

        /**
         * @param instanceAccessType Flag indicating whether the instance access is private or public
         * 
         * @return builder
         * 
         */
        public Builder instanceAccessType(@Nullable Output<String> instanceAccessType) {
            $.instanceAccessType = instanceAccessType;
            return this;
        }

        /**
         * @param instanceAccessType Flag indicating whether the instance access is private or public
         * 
         * @return builder
         * 
         */
        public Builder instanceAccessType(String instanceAccessType) {
            return instanceAccessType(Output.of(instanceAccessType));
        }

        /**
         * @param instanceLicenseType (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
         * 
         * @return builder
         * 
         */
        public Builder instanceLicenseType(@Nullable Output<String> instanceLicenseType) {
            $.instanceLicenseType = instanceLicenseType;
            return this;
        }

        /**
         * @param instanceLicenseType (Updatable) Flag indicating whether the instance license is new cloud or bring your own license
         * 
         * @return builder
         * 
         */
        public Builder instanceLicenseType(String instanceLicenseType) {
            return instanceLicenseType(Output.of(instanceLicenseType));
        }

        /**
         * @param instanceUsageType (Updatable) Instance type based on its usage
         * 
         * @return builder
         * 
         */
        public Builder instanceUsageType(@Nullable Output<String> instanceUsageType) {
            $.instanceUsageType = instanceUsageType;
            return this;
        }

        /**
         * @param instanceUsageType (Updatable) Instance type based on its usage
         * 
         * @return builder
         * 
         */
        public Builder instanceUsageType(String instanceUsageType) {
            return instanceUsageType(Output.of(instanceUsageType));
        }

        /**
         * @param name OceInstance Name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name OceInstance Name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param objectStorageNamespace Object Storage Namespace of Tenancy
         * 
         * @return builder
         * 
         */
        public Builder objectStorageNamespace(Output<String> objectStorageNamespace) {
            $.objectStorageNamespace = objectStorageNamespace;
            return this;
        }

        /**
         * @param objectStorageNamespace Object Storage Namespace of Tenancy
         * 
         * @return builder
         * 
         */
        public Builder objectStorageNamespace(String objectStorageNamespace) {
            return objectStorageNamespace(Output.of(objectStorageNamespace));
        }

        /**
         * @param tenancyId Tenancy Identifier
         * 
         * @return builder
         * 
         */
        public Builder tenancyId(Output<String> tenancyId) {
            $.tenancyId = tenancyId;
            return this;
        }

        /**
         * @param tenancyId Tenancy Identifier
         * 
         * @return builder
         * 
         */
        public Builder tenancyId(String tenancyId) {
            return tenancyId(Output.of(tenancyId));
        }

        /**
         * @param tenancyName Tenancy Name
         * 
         * @return builder
         * 
         */
        public Builder tenancyName(Output<String> tenancyName) {
            $.tenancyName = tenancyName;
            return this;
        }

        /**
         * @param tenancyName Tenancy Name
         * 
         * @return builder
         * 
         */
        public Builder tenancyName(String tenancyName) {
            return tenancyName(Output.of(tenancyName));
        }

        /**
         * @param upgradeSchedule Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
         * 
         * @return builder
         * 
         */
        public Builder upgradeSchedule(@Nullable Output<String> upgradeSchedule) {
            $.upgradeSchedule = upgradeSchedule;
            return this;
        }

        /**
         * @param upgradeSchedule Upgrade schedule type representing service to be upgraded immediately whenever latest version is released or delay upgrade of the service to previous released version
         * 
         * @return builder
         * 
         */
        public Builder upgradeSchedule(String upgradeSchedule) {
            return upgradeSchedule(Output.of(upgradeSchedule));
        }

        /**
         * @param wafPrimaryDomain (Updatable) Web Application Firewall(WAF) primary domain
         * 
         * @return builder
         * 
         */
        public Builder wafPrimaryDomain(@Nullable Output<String> wafPrimaryDomain) {
            $.wafPrimaryDomain = wafPrimaryDomain;
            return this;
        }

        /**
         * @param wafPrimaryDomain (Updatable) Web Application Firewall(WAF) primary domain
         * 
         * @return builder
         * 
         */
        public Builder wafPrimaryDomain(String wafPrimaryDomain) {
            return wafPrimaryDomain(Output.of(wafPrimaryDomain));
        }

        public InstanceArgs build() {
            $.adminEmail = Objects.requireNonNull($.adminEmail, "expected parameter 'adminEmail' to be non-null");
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.idcsAccessToken = Objects.requireNonNull($.idcsAccessToken, "expected parameter 'idcsAccessToken' to be non-null");
            $.objectStorageNamespace = Objects.requireNonNull($.objectStorageNamespace, "expected parameter 'objectStorageNamespace' to be non-null");
            $.tenancyId = Objects.requireNonNull($.tenancyId, "expected parameter 'tenancyId' to be non-null");
            $.tenancyName = Objects.requireNonNull($.tenancyName, "expected parameter 'tenancyName' to be non-null");
            return $;
        }
    }

}
