// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigAccessRule;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigAddressRateLimiting;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigCachingRule;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigCaptcha;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigCustomProtectionRule;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigDeviceFingerprintChallenge;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigHumanInteractionChallenge;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigJsChallenge;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigProtectionSettings;
import com.pulumi.oci.Waas.outputs.PolicyWafConfigWhitelist;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PolicyWafConfig {
    /**
     * @return (Updatable) The access rules applied to the Web Application Firewall. Access rules allow custom content access policies to be defined and `ALLOW`, `DETECT`, or `BLOCK` actions to be taken on a request when specified criteria are met.
     * 
     */
    private final @Nullable List<PolicyWafConfigAccessRule> accessRules;
    /**
     * @return (Updatable) The settings used to limit the number of requests from an IP address.
     * 
     */
    private final @Nullable PolicyWafConfigAddressRateLimiting addressRateLimiting;
    /**
     * @return (Updatable) A list of caching rules applied to the web application.
     * 
     */
    private final @Nullable List<PolicyWafConfigCachingRule> cachingRules;
    /**
     * @return (Updatable) A list of CAPTCHA challenge settings. CAPTCHAs challenge requests to ensure a human is attempting to reach the specified URL and not a bot.
     * 
     */
    private final @Nullable List<PolicyWafConfigCaptcha> captchas;
    /**
     * @return (Updatable) A list of the custom protection rule OCIDs and their actions.
     * 
     */
    private final @Nullable List<PolicyWafConfigCustomProtectionRule> customProtectionRules;
    /**
     * @return (Updatable) The device fingerprint challenge settings. Blocks bots based on unique device fingerprint information.
     * 
     */
    private final @Nullable PolicyWafConfigDeviceFingerprintChallenge deviceFingerprintChallenge;
    /**
     * @return (Updatable) The human interaction challenge settings. Detects natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
     * 
     */
    private final @Nullable PolicyWafConfigHumanInteractionChallenge humanInteractionChallenge;
    /**
     * @return (Updatable) The JavaScript challenge settings. Blocks bots by challenging requests from browsers that have no JavaScript support.
     * 
     */
    private final @Nullable PolicyWafConfigJsChallenge jsChallenge;
    /**
     * @return (Updatable) The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but is not required upon updating the configuration.
     * 
     */
    private final @Nullable String origin;
    /**
     * @return (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
     * 
     */
    private final @Nullable List<String> originGroups;
    /**
     * @return (Updatable) The settings applied to protection rules.
     * 
     */
    private final @Nullable PolicyWafConfigProtectionSettings protectionSettings;
    /**
     * @return (Updatable) A list of IP addresses that bypass the Web Application Firewall.
     * 
     */
    private final @Nullable List<PolicyWafConfigWhitelist> whitelists;

    @CustomType.Constructor
    private PolicyWafConfig(
        @CustomType.Parameter("accessRules") @Nullable List<PolicyWafConfigAccessRule> accessRules,
        @CustomType.Parameter("addressRateLimiting") @Nullable PolicyWafConfigAddressRateLimiting addressRateLimiting,
        @CustomType.Parameter("cachingRules") @Nullable List<PolicyWafConfigCachingRule> cachingRules,
        @CustomType.Parameter("captchas") @Nullable List<PolicyWafConfigCaptcha> captchas,
        @CustomType.Parameter("customProtectionRules") @Nullable List<PolicyWafConfigCustomProtectionRule> customProtectionRules,
        @CustomType.Parameter("deviceFingerprintChallenge") @Nullable PolicyWafConfigDeviceFingerprintChallenge deviceFingerprintChallenge,
        @CustomType.Parameter("humanInteractionChallenge") @Nullable PolicyWafConfigHumanInteractionChallenge humanInteractionChallenge,
        @CustomType.Parameter("jsChallenge") @Nullable PolicyWafConfigJsChallenge jsChallenge,
        @CustomType.Parameter("origin") @Nullable String origin,
        @CustomType.Parameter("originGroups") @Nullable List<String> originGroups,
        @CustomType.Parameter("protectionSettings") @Nullable PolicyWafConfigProtectionSettings protectionSettings,
        @CustomType.Parameter("whitelists") @Nullable List<PolicyWafConfigWhitelist> whitelists) {
        this.accessRules = accessRules;
        this.addressRateLimiting = addressRateLimiting;
        this.cachingRules = cachingRules;
        this.captchas = captchas;
        this.customProtectionRules = customProtectionRules;
        this.deviceFingerprintChallenge = deviceFingerprintChallenge;
        this.humanInteractionChallenge = humanInteractionChallenge;
        this.jsChallenge = jsChallenge;
        this.origin = origin;
        this.originGroups = originGroups;
        this.protectionSettings = protectionSettings;
        this.whitelists = whitelists;
    }

    /**
     * @return (Updatable) The access rules applied to the Web Application Firewall. Access rules allow custom content access policies to be defined and `ALLOW`, `DETECT`, or `BLOCK` actions to be taken on a request when specified criteria are met.
     * 
     */
    public List<PolicyWafConfigAccessRule> accessRules() {
        return this.accessRules == null ? List.of() : this.accessRules;
    }
    /**
     * @return (Updatable) The settings used to limit the number of requests from an IP address.
     * 
     */
    public Optional<PolicyWafConfigAddressRateLimiting> addressRateLimiting() {
        return Optional.ofNullable(this.addressRateLimiting);
    }
    /**
     * @return (Updatable) A list of caching rules applied to the web application.
     * 
     */
    public List<PolicyWafConfigCachingRule> cachingRules() {
        return this.cachingRules == null ? List.of() : this.cachingRules;
    }
    /**
     * @return (Updatable) A list of CAPTCHA challenge settings. CAPTCHAs challenge requests to ensure a human is attempting to reach the specified URL and not a bot.
     * 
     */
    public List<PolicyWafConfigCaptcha> captchas() {
        return this.captchas == null ? List.of() : this.captchas;
    }
    /**
     * @return (Updatable) A list of the custom protection rule OCIDs and their actions.
     * 
     */
    public List<PolicyWafConfigCustomProtectionRule> customProtectionRules() {
        return this.customProtectionRules == null ? List.of() : this.customProtectionRules;
    }
    /**
     * @return (Updatable) The device fingerprint challenge settings. Blocks bots based on unique device fingerprint information.
     * 
     */
    public Optional<PolicyWafConfigDeviceFingerprintChallenge> deviceFingerprintChallenge() {
        return Optional.ofNullable(this.deviceFingerprintChallenge);
    }
    /**
     * @return (Updatable) The human interaction challenge settings. Detects natural human interactions such as mouse movements, time on site, and page scrolling to identify bots.
     * 
     */
    public Optional<PolicyWafConfigHumanInteractionChallenge> humanInteractionChallenge() {
        return Optional.ofNullable(this.humanInteractionChallenge);
    }
    /**
     * @return (Updatable) The JavaScript challenge settings. Blocks bots by challenging requests from browsers that have no JavaScript support.
     * 
     */
    public Optional<PolicyWafConfigJsChallenge> jsChallenge() {
        return Optional.ofNullable(this.jsChallenge);
    }
    /**
     * @return (Updatable) The key in the map of origins referencing the origin used for the Web Application Firewall. The origin must already be included in `Origins`. Required when creating the `WafConfig` resource, but is not required upon updating the configuration.
     * 
     */
    public Optional<String> origin() {
        return Optional.ofNullable(this.origin);
    }
    /**
     * @return (Updatable) The map of origin groups and their keys used to associate origins to the `wafConfig`. Origin groups allow you to apply weights to groups of origins for load balancing purposes. Origins with higher weights will receive larger proportions of client requests. To add additional origins to your WAAS policy, update the `origins` field of a `UpdateWaasPolicy` request.
     * 
     */
    public List<String> originGroups() {
        return this.originGroups == null ? List.of() : this.originGroups;
    }
    /**
     * @return (Updatable) The settings applied to protection rules.
     * 
     */
    public Optional<PolicyWafConfigProtectionSettings> protectionSettings() {
        return Optional.ofNullable(this.protectionSettings);
    }
    /**
     * @return (Updatable) A list of IP addresses that bypass the Web Application Firewall.
     * 
     */
    public List<PolicyWafConfigWhitelist> whitelists() {
        return this.whitelists == null ? List.of() : this.whitelists;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PolicyWafConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<PolicyWafConfigAccessRule> accessRules;
        private @Nullable PolicyWafConfigAddressRateLimiting addressRateLimiting;
        private @Nullable List<PolicyWafConfigCachingRule> cachingRules;
        private @Nullable List<PolicyWafConfigCaptcha> captchas;
        private @Nullable List<PolicyWafConfigCustomProtectionRule> customProtectionRules;
        private @Nullable PolicyWafConfigDeviceFingerprintChallenge deviceFingerprintChallenge;
        private @Nullable PolicyWafConfigHumanInteractionChallenge humanInteractionChallenge;
        private @Nullable PolicyWafConfigJsChallenge jsChallenge;
        private @Nullable String origin;
        private @Nullable List<String> originGroups;
        private @Nullable PolicyWafConfigProtectionSettings protectionSettings;
        private @Nullable List<PolicyWafConfigWhitelist> whitelists;

        public Builder() {
    	      // Empty
        }

        public Builder(PolicyWafConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessRules = defaults.accessRules;
    	      this.addressRateLimiting = defaults.addressRateLimiting;
    	      this.cachingRules = defaults.cachingRules;
    	      this.captchas = defaults.captchas;
    	      this.customProtectionRules = defaults.customProtectionRules;
    	      this.deviceFingerprintChallenge = defaults.deviceFingerprintChallenge;
    	      this.humanInteractionChallenge = defaults.humanInteractionChallenge;
    	      this.jsChallenge = defaults.jsChallenge;
    	      this.origin = defaults.origin;
    	      this.originGroups = defaults.originGroups;
    	      this.protectionSettings = defaults.protectionSettings;
    	      this.whitelists = defaults.whitelists;
        }

        public Builder accessRules(@Nullable List<PolicyWafConfigAccessRule> accessRules) {
            this.accessRules = accessRules;
            return this;
        }
        public Builder accessRules(PolicyWafConfigAccessRule... accessRules) {
            return accessRules(List.of(accessRules));
        }
        public Builder addressRateLimiting(@Nullable PolicyWafConfigAddressRateLimiting addressRateLimiting) {
            this.addressRateLimiting = addressRateLimiting;
            return this;
        }
        public Builder cachingRules(@Nullable List<PolicyWafConfigCachingRule> cachingRules) {
            this.cachingRules = cachingRules;
            return this;
        }
        public Builder cachingRules(PolicyWafConfigCachingRule... cachingRules) {
            return cachingRules(List.of(cachingRules));
        }
        public Builder captchas(@Nullable List<PolicyWafConfigCaptcha> captchas) {
            this.captchas = captchas;
            return this;
        }
        public Builder captchas(PolicyWafConfigCaptcha... captchas) {
            return captchas(List.of(captchas));
        }
        public Builder customProtectionRules(@Nullable List<PolicyWafConfigCustomProtectionRule> customProtectionRules) {
            this.customProtectionRules = customProtectionRules;
            return this;
        }
        public Builder customProtectionRules(PolicyWafConfigCustomProtectionRule... customProtectionRules) {
            return customProtectionRules(List.of(customProtectionRules));
        }
        public Builder deviceFingerprintChallenge(@Nullable PolicyWafConfigDeviceFingerprintChallenge deviceFingerprintChallenge) {
            this.deviceFingerprintChallenge = deviceFingerprintChallenge;
            return this;
        }
        public Builder humanInteractionChallenge(@Nullable PolicyWafConfigHumanInteractionChallenge humanInteractionChallenge) {
            this.humanInteractionChallenge = humanInteractionChallenge;
            return this;
        }
        public Builder jsChallenge(@Nullable PolicyWafConfigJsChallenge jsChallenge) {
            this.jsChallenge = jsChallenge;
            return this;
        }
        public Builder origin(@Nullable String origin) {
            this.origin = origin;
            return this;
        }
        public Builder originGroups(@Nullable List<String> originGroups) {
            this.originGroups = originGroups;
            return this;
        }
        public Builder originGroups(String... originGroups) {
            return originGroups(List.of(originGroups));
        }
        public Builder protectionSettings(@Nullable PolicyWafConfigProtectionSettings protectionSettings) {
            this.protectionSettings = protectionSettings;
            return this;
        }
        public Builder whitelists(@Nullable List<PolicyWafConfigWhitelist> whitelists) {
            this.whitelists = whitelists;
            return this;
        }
        public Builder whitelists(PolicyWafConfigWhitelist... whitelists) {
            return whitelists(List.of(whitelists));
        }        public PolicyWafConfig build() {
            return new PolicyWafConfig(accessRules, addressRateLimiting, cachingRules, captchas, customProtectionRules, deviceFingerprintChallenge, humanInteractionChallenge, jsChallenge, origin, originGroups, protectionSettings, whitelists);
        }
    }
}
