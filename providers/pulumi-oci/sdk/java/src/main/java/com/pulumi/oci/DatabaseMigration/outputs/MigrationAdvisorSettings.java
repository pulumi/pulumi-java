// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MigrationAdvisorSettings {
    /**
     * @return (Updatable) True to not interrupt migration execution due to Pre-Migration Advisor errors. Default is false.
     * 
     */
    private final @Nullable Boolean isIgnoreErrors;
    /**
     * @return (Updatable) True to skip the Pre-Migration Advisor execution. Default is false.
     * 
     */
    private final @Nullable Boolean isSkipAdvisor;

    @CustomType.Constructor
    private MigrationAdvisorSettings(
        @CustomType.Parameter("isIgnoreErrors") @Nullable Boolean isIgnoreErrors,
        @CustomType.Parameter("isSkipAdvisor") @Nullable Boolean isSkipAdvisor) {
        this.isIgnoreErrors = isIgnoreErrors;
        this.isSkipAdvisor = isSkipAdvisor;
    }

    /**
     * @return (Updatable) True to not interrupt migration execution due to Pre-Migration Advisor errors. Default is false.
     * 
     */
    public Optional<Boolean> isIgnoreErrors() {
        return Optional.ofNullable(this.isIgnoreErrors);
    }
    /**
     * @return (Updatable) True to skip the Pre-Migration Advisor execution. Default is false.
     * 
     */
    public Optional<Boolean> isSkipAdvisor() {
        return Optional.ofNullable(this.isSkipAdvisor);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrationAdvisorSettings defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean isIgnoreErrors;
        private @Nullable Boolean isSkipAdvisor;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrationAdvisorSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isIgnoreErrors = defaults.isIgnoreErrors;
    	      this.isSkipAdvisor = defaults.isSkipAdvisor;
        }

        public Builder isIgnoreErrors(@Nullable Boolean isIgnoreErrors) {
            this.isIgnoreErrors = isIgnoreErrors;
            return this;
        }
        public Builder isSkipAdvisor(@Nullable Boolean isSkipAdvisor) {
            this.isSkipAdvisor = isSkipAdvisor;
            return this;
        }        public MigrationAdvisorSettings build() {
            return new MigrationAdvisorSettings(isIgnoreErrors, isSkipAdvisor);
        }
    }
}
