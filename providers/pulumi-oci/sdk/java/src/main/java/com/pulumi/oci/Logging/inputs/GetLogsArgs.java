// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Logging.inputs.GetLogsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetLogsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetLogsArgs Empty = new GetLogsArgs();

    /**
     * Resource name
     * 
     */
    @Import(name="displayName")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Resource name
     * 
     */
    public Output</* @Nullable */ String> displayName() {
        return this.displayName;
    }

    @Import(name="filters")
    private Output</* @Nullable */ List<GetLogsFilter>> filters;

    public Output</* @Nullable */ List<GetLogsFilter>> filters() {
        return this.filters;
    }

    /**
     * OCID of a log group to work with.
     * 
     */
    @Import(name="logGroupId", required=true)
    private Output<String> logGroupId;

    /**
     * @return OCID of a log group to work with.
     * 
     */
    public Output<String> logGroupId() {
        return this.logGroupId;
    }

    /**
     * The logType that the log object is for, whether custom or service.
     * 
     */
    @Import(name="logType")
    private Output</* @Nullable */ String> logType;

    /**
     * @return The logType that the log object is for, whether custom or service.
     * 
     */
    public Output</* @Nullable */ String> logType() {
        return this.logType;
    }

    /**
     * Log object resource.
     * 
     */
    @Import(name="sourceResource")
    private Output</* @Nullable */ String> sourceResource;

    /**
     * @return Log object resource.
     * 
     */
    public Output</* @Nullable */ String> sourceResource() {
        return this.sourceResource;
    }

    /**
     * Service that created the log object.
     * 
     */
    @Import(name="sourceService")
    private Output</* @Nullable */ String> sourceService;

    /**
     * @return Service that created the log object.
     * 
     */
    public Output</* @Nullable */ String> sourceService() {
        return this.sourceService;
    }

    /**
     * Lifecycle state of the log object
     * 
     */
    @Import(name="state")
    private Output</* @Nullable */ String> state;

    /**
     * @return Lifecycle state of the log object
     * 
     */
    public Output</* @Nullable */ String> state() {
        return this.state;
    }

    private GetLogsArgs() {}

    private GetLogsArgs(GetLogsArgs $) {
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.logGroupId = $.logGroupId;
        this.logType = $.logType;
        this.sourceResource = $.sourceResource;
        this.sourceService = $.sourceService;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetLogsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetLogsArgs $;

        public Builder() {
            $ = new GetLogsArgs();
        }

        public Builder(GetLogsArgs defaults) {
            $ = new GetLogsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayName Resource name
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output</* @Nullable */ String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Resource name
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(Output</* @Nullable */ List<GetLogsFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetLogsFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetLogsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param logGroupId OCID of a log group to work with.
         * 
         * @return builder
         * 
         */
        public Builder logGroupId(Output<String> logGroupId) {
            $.logGroupId = logGroupId;
            return this;
        }

        /**
         * @param logGroupId OCID of a log group to work with.
         * 
         * @return builder
         * 
         */
        public Builder logGroupId(String logGroupId) {
            return logGroupId(Output.of(logGroupId));
        }

        /**
         * @param logType The logType that the log object is for, whether custom or service.
         * 
         * @return builder
         * 
         */
        public Builder logType(Output</* @Nullable */ String> logType) {
            $.logType = logType;
            return this;
        }

        /**
         * @param logType The logType that the log object is for, whether custom or service.
         * 
         * @return builder
         * 
         */
        public Builder logType(@Nullable String logType) {
            return logType(Output.of(logType));
        }

        /**
         * @param sourceResource Log object resource.
         * 
         * @return builder
         * 
         */
        public Builder sourceResource(Output</* @Nullable */ String> sourceResource) {
            $.sourceResource = sourceResource;
            return this;
        }

        /**
         * @param sourceResource Log object resource.
         * 
         * @return builder
         * 
         */
        public Builder sourceResource(@Nullable String sourceResource) {
            return sourceResource(Output.of(sourceResource));
        }

        /**
         * @param sourceService Service that created the log object.
         * 
         * @return builder
         * 
         */
        public Builder sourceService(Output</* @Nullable */ String> sourceService) {
            $.sourceService = sourceService;
            return this;
        }

        /**
         * @param sourceService Service that created the log object.
         * 
         * @return builder
         * 
         */
        public Builder sourceService(@Nullable String sourceService) {
            return sourceService(Output.of(sourceService));
        }

        /**
         * @param state Lifecycle state of the log object
         * 
         * @return builder
         * 
         */
        public Builder state(Output</* @Nullable */ String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Lifecycle state of the log object
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            return state(Output.of(state));
        }

        public GetLogsArgs build() {
            $.logGroupId = Objects.requireNonNull($.logGroupId, "expected parameter 'logGroupId' to be non-null");
            return $;
        }
    }

}
