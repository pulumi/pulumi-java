// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmConfig.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ApmConfig.inputs.GetConfigsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConfigsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConfigsArgs Empty = new GetConfigsArgs();

    /**
     * The APM Domain Id the request is intended for.
     * 
     */
    @Import(name="apmDomainId", required=true)
    private Output<String> apmDomainId;

    /**
     * @return The APM Domain Id the request is intended for.
     * 
     */
    public Output<String> apmDomainId() {
        return this.apmDomainId;
    }

    /**
     * A filter to match only configuration items of the given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
     * 
     */
    @Import(name="configType")
    private @Nullable Output<String> configType;

    /**
     * @return A filter to match only configuration items of the given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
     * 
     */
    public Optional<Output<String>> configType() {
        return Optional.ofNullable(this.configType);
    }

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetConfigsFilterArgs>> filters;

    public Optional<Output<List<GetConfigsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    private GetConfigsArgs() {}

    private GetConfigsArgs(GetConfigsArgs $) {
        this.apmDomainId = $.apmDomainId;
        this.configType = $.configType;
        this.displayName = $.displayName;
        this.filters = $.filters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConfigsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConfigsArgs $;

        public Builder() {
            $ = new GetConfigsArgs();
        }

        public Builder(GetConfigsArgs defaults) {
            $ = new GetConfigsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apmDomainId The APM Domain Id the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(Output<String> apmDomainId) {
            $.apmDomainId = apmDomainId;
            return this;
        }

        /**
         * @param apmDomainId The APM Domain Id the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(String apmDomainId) {
            return apmDomainId(Output.of(apmDomainId));
        }

        /**
         * @param configType A filter to match only configuration items of the given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
         * 
         * @return builder
         * 
         */
        public Builder configType(@Nullable Output<String> configType) {
            $.configType = configType;
            return this;
        }

        /**
         * @param configType A filter to match only configuration items of the given type. Supported values are SPAN_FILTER, METRIC_GROUP, and APDEX.
         * 
         * @return builder
         * 
         */
        public Builder configType(String configType) {
            return configType(Output.of(configType));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetConfigsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetConfigsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetConfigsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public GetConfigsArgs build() {
            $.apmDomainId = Objects.requireNonNull($.apmDomainId, "expected parameter 'apmDomainId' to be non-null");
            return $;
        }
    }

}
