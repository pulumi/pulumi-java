// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceCatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ServiceCatalog.outputs.GetServiceCatalogsFilter;
import com.pulumi.oci.ServiceCatalog.outputs.GetServiceCatalogsServiceCatalogCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceCatalogsResult {
    /**
     * @return The Compartment id where the service catalog exists
     * 
     */
    private final String compartmentId;
    /**
     * @return The name of the service catalog.
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetServiceCatalogsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of service_catalog_collection.
     * 
     */
    private final List<GetServiceCatalogsServiceCatalogCollection> serviceCatalogCollections;
    private final @Nullable String serviceCatalogId;

    @CustomType.Constructor
    private GetServiceCatalogsResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetServiceCatalogsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("serviceCatalogCollections") List<GetServiceCatalogsServiceCatalogCollection> serviceCatalogCollections,
        @CustomType.Parameter("serviceCatalogId") @Nullable String serviceCatalogId) {
        this.compartmentId = compartmentId;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.serviceCatalogCollections = serviceCatalogCollections;
        this.serviceCatalogId = serviceCatalogId;
    }

    /**
     * @return The Compartment id where the service catalog exists
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The name of the service catalog.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetServiceCatalogsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of service_catalog_collection.
     * 
     */
    public List<GetServiceCatalogsServiceCatalogCollection> serviceCatalogCollections() {
        return this.serviceCatalogCollections;
    }
    public Optional<String> serviceCatalogId() {
        return Optional.ofNullable(this.serviceCatalogId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceCatalogsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetServiceCatalogsFilter> filters;
        private String id;
        private List<GetServiceCatalogsServiceCatalogCollection> serviceCatalogCollections;
        private @Nullable String serviceCatalogId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetServiceCatalogsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.serviceCatalogCollections = defaults.serviceCatalogCollections;
    	      this.serviceCatalogId = defaults.serviceCatalogId;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetServiceCatalogsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetServiceCatalogsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder serviceCatalogCollections(List<GetServiceCatalogsServiceCatalogCollection> serviceCatalogCollections) {
            this.serviceCatalogCollections = Objects.requireNonNull(serviceCatalogCollections);
            return this;
        }
        public Builder serviceCatalogCollections(GetServiceCatalogsServiceCatalogCollection... serviceCatalogCollections) {
            return serviceCatalogCollections(List.of(serviceCatalogCollections));
        }
        public Builder serviceCatalogId(@Nullable String serviceCatalogId) {
            this.serviceCatalogId = serviceCatalogId;
            return this;
        }        public GetServiceCatalogsResult build() {
            return new GetServiceCatalogsResult(compartmentId, displayName, filters, id, serviceCatalogCollections, serviceCatalogId);
        }
    }
}
