// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Database.inputs.ExadataInfrastructureContactArgs;
import com.pulumi.oci.Database.inputs.ExadataInfrastructureMaintenanceWindowArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ExadataInfrastructureState extends com.pulumi.resources.ResourceArgs {

    public static final ExadataInfrastructureState Empty = new ExadataInfrastructureState();

    /**
     * The requested number of additional storage servers activated for the Exadata infrastructure.
     * 
     */
    @Import(name="activatedStorageCount")
    private @Nullable Output<Integer> activatedStorageCount;

    /**
     * @return The requested number of additional storage servers activated for the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> activatedStorageCount() {
        return Optional.ofNullable(this.activatedStorageCount);
    }

    /**
     * (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
     * 
     */
    @Import(name="activationFile")
    private @Nullable Output<String> activationFile;

    /**
     * @return (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
     * 
     */
    public Optional<Output<String>> activationFile() {
        return Optional.ofNullable(this.activationFile);
    }

    /**
     * The requested number of additional storage servers for the Exadata infrastructure.
     * 
     */
    @Import(name="additionalStorageCount")
    private @Nullable Output<Integer> additionalStorageCount;

    /**
     * @return The requested number of additional storage servers for the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> additionalStorageCount() {
        return Optional.ofNullable(this.additionalStorageCount);
    }

    /**
     * (Updatable) The CIDR block for the Exadata administration network.
     * 
     */
    @Import(name="adminNetworkCidr")
    private @Nullable Output<String> adminNetworkCidr;

    /**
     * @return (Updatable) The CIDR block for the Exadata administration network.
     * 
     */
    public Optional<Output<String>> adminNetworkCidr() {
        return Optional.ofNullable(this.adminNetworkCidr);
    }

    /**
     * (Updatable) The IP address for the first control plane server.
     * 
     */
    @Import(name="cloudControlPlaneServer1")
    private @Nullable Output<String> cloudControlPlaneServer1;

    /**
     * @return (Updatable) The IP address for the first control plane server.
     * 
     */
    public Optional<Output<String>> cloudControlPlaneServer1() {
        return Optional.ofNullable(this.cloudControlPlaneServer1);
    }

    /**
     * (Updatable) The IP address for the second control plane server.
     * 
     */
    @Import(name="cloudControlPlaneServer2")
    private @Nullable Output<String> cloudControlPlaneServer2;

    /**
     * @return (Updatable) The IP address for the second control plane server.
     * 
     */
    public Optional<Output<String>> cloudControlPlaneServer2() {
        return Optional.ofNullable(this.cloudControlPlaneServer2);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The number of compute servers for the Exadata infrastructure.
     * 
     */
    @Import(name="computeCount")
    private @Nullable Output<Integer> computeCount;

    /**
     * @return The number of compute servers for the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> computeCount() {
        return Optional.ofNullable(this.computeCount);
    }

    /**
     * (Updatable) The list of contacts for the Exadata infrastructure.
     * 
     */
    @Import(name="contacts")
    private @Nullable Output<List<ExadataInfrastructureContactArgs>> contacts;

    /**
     * @return (Updatable) The list of contacts for the Exadata infrastructure.
     * 
     */
    public Optional<Output<List<ExadataInfrastructureContactArgs>>> contacts() {
        return Optional.ofNullable(this.contacts);
    }

    /**
     * (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
     * 
     */
    @Import(name="corporateProxy")
    private @Nullable Output<String> corporateProxy;

    /**
     * @return (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
     * 
     */
    public Optional<Output<String>> corporateProxy() {
        return Optional.ofNullable(this.corporateProxy);
    }

    /**
     * The number of enabled CPU cores.
     * 
     */
    @Import(name="cpusEnabled")
    private @Nullable Output<Integer> cpusEnabled;

    /**
     * @return The number of enabled CPU cores.
     * 
     */
    public Optional<Output<Integer>> cpusEnabled() {
        return Optional.ofNullable(this.cpusEnabled);
    }

    @Import(name="createAsync")
    private @Nullable Output<Boolean> createAsync;

    public Optional<Output<Boolean>> createAsync() {
        return Optional.ofNullable(this.createAsync);
    }

    /**
     * The CSI Number of the Exadata infrastructure.
     * 
     */
    @Import(name="csiNumber")
    private @Nullable Output<String> csiNumber;

    /**
     * @return The CSI Number of the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> csiNumber() {
        return Optional.ofNullable(this.csiNumber);
    }

    /**
     * Size, in terabytes, of the DATA disk group.
     * 
     */
    @Import(name="dataStorageSizeInTbs")
    private @Nullable Output<Double> dataStorageSizeInTbs;

    /**
     * @return Size, in terabytes, of the DATA disk group.
     * 
     */
    public Optional<Output<Double>> dataStorageSizeInTbs() {
        return Optional.ofNullable(this.dataStorageSizeInTbs);
    }

    /**
     * The local node storage allocated in GBs.
     * 
     */
    @Import(name="dbNodeStorageSizeInGbs")
    private @Nullable Output<Integer> dbNodeStorageSizeInGbs;

    /**
     * @return The local node storage allocated in GBs.
     * 
     */
    public Optional<Output<Integer>> dbNodeStorageSizeInGbs() {
        return Optional.ofNullable(this.dbNodeStorageSizeInGbs);
    }

    /**
     * The software version of the database servers (dom0) in the Exadata infrastructure.
     * 
     */
    @Import(name="dbServerVersion")
    private @Nullable Output<String> dbServerVersion;

    /**
     * @return The software version of the database servers (dom0) in the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> dbServerVersion() {
        return Optional.ofNullable(this.dbServerVersion);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
     * 
     */
    @Import(name="dnsServers")
    private @Nullable Output<List<String>> dnsServers;

    /**
     * @return (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
     * 
     */
    public Optional<Output<List<String>>> dnsServers() {
        return Optional.ofNullable(this.dnsServers);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The gateway for the control plane network.
     * 
     */
    @Import(name="gateway")
    private @Nullable Output<String> gateway;

    /**
     * @return (Updatable) The gateway for the control plane network.
     * 
     */
    public Optional<Output<String>> gateway() {
        return Optional.ofNullable(this.gateway);
    }

    /**
     * (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
     * 
     */
    @Import(name="infiniBandNetworkCidr")
    private @Nullable Output<String> infiniBandNetworkCidr;

    /**
     * @return (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
     * 
     */
    public Optional<Output<String>> infiniBandNetworkCidr() {
        return Optional.ofNullable(this.infiniBandNetworkCidr);
    }

    /**
     * Additional information about the current lifecycle state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
     * 
     */
    @Import(name="maintenanceSloStatus")
    private @Nullable Output<String> maintenanceSloStatus;

    /**
     * @return A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
     * 
     */
    public Optional<Output<String>> maintenanceSloStatus() {
        return Optional.ofNullable(this.maintenanceSloStatus);
    }

    /**
     * (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    @Import(name="maintenanceWindow")
    private @Nullable Output<ExadataInfrastructureMaintenanceWindowArgs> maintenanceWindow;

    /**
     * @return (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
     * 
     */
    public Optional<Output<ExadataInfrastructureMaintenanceWindowArgs>> maintenanceWindow() {
        return Optional.ofNullable(this.maintenanceWindow);
    }

    /**
     * The total number of CPU cores available.
     * 
     */
    @Import(name="maxCpuCount")
    private @Nullable Output<Integer> maxCpuCount;

    /**
     * @return The total number of CPU cores available.
     * 
     */
    public Optional<Output<Integer>> maxCpuCount() {
        return Optional.ofNullable(this.maxCpuCount);
    }

    /**
     * The total available DATA disk group size.
     * 
     */
    @Import(name="maxDataStorageInTbs")
    private @Nullable Output<Double> maxDataStorageInTbs;

    /**
     * @return The total available DATA disk group size.
     * 
     */
    public Optional<Output<Double>> maxDataStorageInTbs() {
        return Optional.ofNullable(this.maxDataStorageInTbs);
    }

    /**
     * The total local node storage available in GBs.
     * 
     */
    @Import(name="maxDbNodeStorageInGbs")
    private @Nullable Output<Integer> maxDbNodeStorageInGbs;

    /**
     * @return The total local node storage available in GBs.
     * 
     */
    public Optional<Output<Integer>> maxDbNodeStorageInGbs() {
        return Optional.ofNullable(this.maxDbNodeStorageInGbs);
    }

    /**
     * The total memory available in GBs.
     * 
     */
    @Import(name="maxMemoryInGbs")
    private @Nullable Output<Integer> maxMemoryInGbs;

    /**
     * @return The total memory available in GBs.
     * 
     */
    public Optional<Output<Integer>> maxMemoryInGbs() {
        return Optional.ofNullable(this.maxMemoryInGbs);
    }

    /**
     * The memory allocated in GBs.
     * 
     */
    @Import(name="memorySizeInGbs")
    private @Nullable Output<Integer> memorySizeInGbs;

    /**
     * @return The memory allocated in GBs.
     * 
     */
    public Optional<Output<Integer>> memorySizeInGbs() {
        return Optional.ofNullable(this.memorySizeInGbs);
    }

    /**
     * (Updatable) The netmask for the control plane network.
     * 
     */
    @Import(name="netmask")
    private @Nullable Output<String> netmask;

    /**
     * @return (Updatable) The netmask for the control plane network.
     * 
     */
    public Optional<Output<String>> netmask() {
        return Optional.ofNullable(this.netmask);
    }

    /**
     * (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
     * 
     */
    @Import(name="ntpServers")
    private @Nullable Output<List<String>> ntpServers;

    /**
     * @return (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
     * 
     */
    public Optional<Output<List<String>>> ntpServers() {
        return Optional.ofNullable(this.ntpServers);
    }

    /**
     * The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     * 
     */
    @Import(name="shape")
    private @Nullable Output<String> shape;

    /**
     * @return The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
     * 
     */
    public Optional<Output<String>> shape() {
        return Optional.ofNullable(this.shape);
    }

    /**
     * The current lifecycle state of the Exadata infrastructure.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current lifecycle state of the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The number of storage servers for the Exadata infrastructure.
     * 
     */
    @Import(name="storageCount")
    private @Nullable Output<Integer> storageCount;

    /**
     * @return The number of storage servers for the Exadata infrastructure.
     * 
     */
    public Optional<Output<Integer>> storageCount() {
        return Optional.ofNullable(this.storageCount);
    }

    /**
     * The software version of the storage servers (cells) in the Exadata infrastructure.
     * 
     */
    @Import(name="storageServerVersion")
    private @Nullable Output<String> storageServerVersion;

    /**
     * @return The software version of the storage servers (cells) in the Exadata infrastructure.
     * 
     */
    public Optional<Output<String>> storageServerVersion() {
        return Optional.ofNullable(this.storageServerVersion);
    }

    /**
     * The date and time the Exadata infrastructure was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the Exadata infrastructure was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    @Import(name="timeZone")
    private @Nullable Output<String> timeZone;

    /**
     * @return (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
     * 
     */
    public Optional<Output<String>> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    private ExadataInfrastructureState() {}

    private ExadataInfrastructureState(ExadataInfrastructureState $) {
        this.activatedStorageCount = $.activatedStorageCount;
        this.activationFile = $.activationFile;
        this.additionalStorageCount = $.additionalStorageCount;
        this.adminNetworkCidr = $.adminNetworkCidr;
        this.cloudControlPlaneServer1 = $.cloudControlPlaneServer1;
        this.cloudControlPlaneServer2 = $.cloudControlPlaneServer2;
        this.compartmentId = $.compartmentId;
        this.computeCount = $.computeCount;
        this.contacts = $.contacts;
        this.corporateProxy = $.corporateProxy;
        this.cpusEnabled = $.cpusEnabled;
        this.createAsync = $.createAsync;
        this.csiNumber = $.csiNumber;
        this.dataStorageSizeInTbs = $.dataStorageSizeInTbs;
        this.dbNodeStorageSizeInGbs = $.dbNodeStorageSizeInGbs;
        this.dbServerVersion = $.dbServerVersion;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.dnsServers = $.dnsServers;
        this.freeformTags = $.freeformTags;
        this.gateway = $.gateway;
        this.infiniBandNetworkCidr = $.infiniBandNetworkCidr;
        this.lifecycleDetails = $.lifecycleDetails;
        this.maintenanceSloStatus = $.maintenanceSloStatus;
        this.maintenanceWindow = $.maintenanceWindow;
        this.maxCpuCount = $.maxCpuCount;
        this.maxDataStorageInTbs = $.maxDataStorageInTbs;
        this.maxDbNodeStorageInGbs = $.maxDbNodeStorageInGbs;
        this.maxMemoryInGbs = $.maxMemoryInGbs;
        this.memorySizeInGbs = $.memorySizeInGbs;
        this.netmask = $.netmask;
        this.ntpServers = $.ntpServers;
        this.shape = $.shape;
        this.state = $.state;
        this.storageCount = $.storageCount;
        this.storageServerVersion = $.storageServerVersion;
        this.timeCreated = $.timeCreated;
        this.timeZone = $.timeZone;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ExadataInfrastructureState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ExadataInfrastructureState $;

        public Builder() {
            $ = new ExadataInfrastructureState();
        }

        public Builder(ExadataInfrastructureState defaults) {
            $ = new ExadataInfrastructureState(Objects.requireNonNull(defaults));
        }

        /**
         * @param activatedStorageCount The requested number of additional storage servers activated for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder activatedStorageCount(@Nullable Output<Integer> activatedStorageCount) {
            $.activatedStorageCount = activatedStorageCount;
            return this;
        }

        /**
         * @param activatedStorageCount The requested number of additional storage servers activated for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder activatedStorageCount(Integer activatedStorageCount) {
            return activatedStorageCount(Output.of(activatedStorageCount));
        }

        /**
         * @param activationFile (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder activationFile(@Nullable Output<String> activationFile) {
            $.activationFile = activationFile;
            return this;
        }

        /**
         * @param activationFile (Updatable) The activation zip file. If provided in config, exadata infrastructure will be activated after creation. Updates are not allowed on activated exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder activationFile(String activationFile) {
            return activationFile(Output.of(activationFile));
        }

        /**
         * @param additionalStorageCount The requested number of additional storage servers for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder additionalStorageCount(@Nullable Output<Integer> additionalStorageCount) {
            $.additionalStorageCount = additionalStorageCount;
            return this;
        }

        /**
         * @param additionalStorageCount The requested number of additional storage servers for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder additionalStorageCount(Integer additionalStorageCount) {
            return additionalStorageCount(Output.of(additionalStorageCount));
        }

        /**
         * @param adminNetworkCidr (Updatable) The CIDR block for the Exadata administration network.
         * 
         * @return builder
         * 
         */
        public Builder adminNetworkCidr(@Nullable Output<String> adminNetworkCidr) {
            $.adminNetworkCidr = adminNetworkCidr;
            return this;
        }

        /**
         * @param adminNetworkCidr (Updatable) The CIDR block for the Exadata administration network.
         * 
         * @return builder
         * 
         */
        public Builder adminNetworkCidr(String adminNetworkCidr) {
            return adminNetworkCidr(Output.of(adminNetworkCidr));
        }

        /**
         * @param cloudControlPlaneServer1 (Updatable) The IP address for the first control plane server.
         * 
         * @return builder
         * 
         */
        public Builder cloudControlPlaneServer1(@Nullable Output<String> cloudControlPlaneServer1) {
            $.cloudControlPlaneServer1 = cloudControlPlaneServer1;
            return this;
        }

        /**
         * @param cloudControlPlaneServer1 (Updatable) The IP address for the first control plane server.
         * 
         * @return builder
         * 
         */
        public Builder cloudControlPlaneServer1(String cloudControlPlaneServer1) {
            return cloudControlPlaneServer1(Output.of(cloudControlPlaneServer1));
        }

        /**
         * @param cloudControlPlaneServer2 (Updatable) The IP address for the second control plane server.
         * 
         * @return builder
         * 
         */
        public Builder cloudControlPlaneServer2(@Nullable Output<String> cloudControlPlaneServer2) {
            $.cloudControlPlaneServer2 = cloudControlPlaneServer2;
            return this;
        }

        /**
         * @param cloudControlPlaneServer2 (Updatable) The IP address for the second control plane server.
         * 
         * @return builder
         * 
         */
        public Builder cloudControlPlaneServer2(String cloudControlPlaneServer2) {
            return cloudControlPlaneServer2(Output.of(cloudControlPlaneServer2));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param computeCount The number of compute servers for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(@Nullable Output<Integer> computeCount) {
            $.computeCount = computeCount;
            return this;
        }

        /**
         * @param computeCount The number of compute servers for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder computeCount(Integer computeCount) {
            return computeCount(Output.of(computeCount));
        }

        /**
         * @param contacts (Updatable) The list of contacts for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder contacts(@Nullable Output<List<ExadataInfrastructureContactArgs>> contacts) {
            $.contacts = contacts;
            return this;
        }

        /**
         * @param contacts (Updatable) The list of contacts for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder contacts(List<ExadataInfrastructureContactArgs> contacts) {
            return contacts(Output.of(contacts));
        }

        /**
         * @param contacts (Updatable) The list of contacts for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder contacts(ExadataInfrastructureContactArgs... contacts) {
            return contacts(List.of(contacts));
        }

        /**
         * @param corporateProxy (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
         * 
         * @return builder
         * 
         */
        public Builder corporateProxy(@Nullable Output<String> corporateProxy) {
            $.corporateProxy = corporateProxy;
            return this;
        }

        /**
         * @param corporateProxy (Updatable) The corporate network proxy for access to the control plane network. Oracle recommends using an HTTPS proxy when possible for enhanced security.
         * 
         * @return builder
         * 
         */
        public Builder corporateProxy(String corporateProxy) {
            return corporateProxy(Output.of(corporateProxy));
        }

        /**
         * @param cpusEnabled The number of enabled CPU cores.
         * 
         * @return builder
         * 
         */
        public Builder cpusEnabled(@Nullable Output<Integer> cpusEnabled) {
            $.cpusEnabled = cpusEnabled;
            return this;
        }

        /**
         * @param cpusEnabled The number of enabled CPU cores.
         * 
         * @return builder
         * 
         */
        public Builder cpusEnabled(Integer cpusEnabled) {
            return cpusEnabled(Output.of(cpusEnabled));
        }

        public Builder createAsync(@Nullable Output<Boolean> createAsync) {
            $.createAsync = createAsync;
            return this;
        }

        public Builder createAsync(Boolean createAsync) {
            return createAsync(Output.of(createAsync));
        }

        /**
         * @param csiNumber The CSI Number of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder csiNumber(@Nullable Output<String> csiNumber) {
            $.csiNumber = csiNumber;
            return this;
        }

        /**
         * @param csiNumber The CSI Number of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder csiNumber(String csiNumber) {
            return csiNumber(Output.of(csiNumber));
        }

        /**
         * @param dataStorageSizeInTbs Size, in terabytes, of the DATA disk group.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(@Nullable Output<Double> dataStorageSizeInTbs) {
            $.dataStorageSizeInTbs = dataStorageSizeInTbs;
            return this;
        }

        /**
         * @param dataStorageSizeInTbs Size, in terabytes, of the DATA disk group.
         * 
         * @return builder
         * 
         */
        public Builder dataStorageSizeInTbs(Double dataStorageSizeInTbs) {
            return dataStorageSizeInTbs(Output.of(dataStorageSizeInTbs));
        }

        /**
         * @param dbNodeStorageSizeInGbs The local node storage allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(@Nullable Output<Integer> dbNodeStorageSizeInGbs) {
            $.dbNodeStorageSizeInGbs = dbNodeStorageSizeInGbs;
            return this;
        }

        /**
         * @param dbNodeStorageSizeInGbs The local node storage allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder dbNodeStorageSizeInGbs(Integer dbNodeStorageSizeInGbs) {
            return dbNodeStorageSizeInGbs(Output.of(dbNodeStorageSizeInGbs));
        }

        /**
         * @param dbServerVersion The software version of the database servers (dom0) in the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder dbServerVersion(@Nullable Output<String> dbServerVersion) {
            $.dbServerVersion = dbServerVersion;
            return this;
        }

        /**
         * @param dbServerVersion The software version of the database servers (dom0) in the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder dbServerVersion(String dbServerVersion) {
            return dbServerVersion(Output.of(dbServerVersion));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The user-friendly name for the Exadata infrastructure. The name does not need to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param dnsServers (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(@Nullable Output<List<String>> dnsServers) {
            $.dnsServers = dnsServers;
            return this;
        }

        /**
         * @param dnsServers (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(List<String> dnsServers) {
            return dnsServers(Output.of(dnsServers));
        }

        /**
         * @param dnsServers (Updatable) The list of DNS server IP addresses. Maximum of 3 allowed.
         * 
         * @return builder
         * 
         */
        public Builder dnsServers(String... dnsServers) {
            return dnsServers(List.of(dnsServers));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param gateway (Updatable) The gateway for the control plane network.
         * 
         * @return builder
         * 
         */
        public Builder gateway(@Nullable Output<String> gateway) {
            $.gateway = gateway;
            return this;
        }

        /**
         * @param gateway (Updatable) The gateway for the control plane network.
         * 
         * @return builder
         * 
         */
        public Builder gateway(String gateway) {
            return gateway(Output.of(gateway));
        }

        /**
         * @param infiniBandNetworkCidr (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
         * 
         * @return builder
         * 
         */
        public Builder infiniBandNetworkCidr(@Nullable Output<String> infiniBandNetworkCidr) {
            $.infiniBandNetworkCidr = infiniBandNetworkCidr;
            return this;
        }

        /**
         * @param infiniBandNetworkCidr (Updatable) The CIDR block for the Exadata InfiniBand interconnect.
         * 
         * @return builder
         * 
         */
        public Builder infiniBandNetworkCidr(String infiniBandNetworkCidr) {
            return infiniBandNetworkCidr(Output.of(infiniBandNetworkCidr));
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param maintenanceSloStatus A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceSloStatus(@Nullable Output<String> maintenanceSloStatus) {
            $.maintenanceSloStatus = maintenanceSloStatus;
            return this;
        }

        /**
         * @param maintenanceSloStatus A field to capture ‘Maintenance SLO Status’ for the Exadata infrastructure with values ‘OK’, ‘DEGRADED’. Default is ‘OK’ when the infrastructure is provisioned.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceSloStatus(String maintenanceSloStatus) {
            return maintenanceSloStatus(Output.of(maintenanceSloStatus));
        }

        /**
         * @param maintenanceWindow (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(@Nullable Output<ExadataInfrastructureMaintenanceWindowArgs> maintenanceWindow) {
            $.maintenanceWindow = maintenanceWindow;
            return this;
        }

        /**
         * @param maintenanceWindow (Updatable) The scheduling details for the quarterly maintenance window. Patching and system updates take place during the maintenance window.
         * 
         * @return builder
         * 
         */
        public Builder maintenanceWindow(ExadataInfrastructureMaintenanceWindowArgs maintenanceWindow) {
            return maintenanceWindow(Output.of(maintenanceWindow));
        }

        /**
         * @param maxCpuCount The total number of CPU cores available.
         * 
         * @return builder
         * 
         */
        public Builder maxCpuCount(@Nullable Output<Integer> maxCpuCount) {
            $.maxCpuCount = maxCpuCount;
            return this;
        }

        /**
         * @param maxCpuCount The total number of CPU cores available.
         * 
         * @return builder
         * 
         */
        public Builder maxCpuCount(Integer maxCpuCount) {
            return maxCpuCount(Output.of(maxCpuCount));
        }

        /**
         * @param maxDataStorageInTbs The total available DATA disk group size.
         * 
         * @return builder
         * 
         */
        public Builder maxDataStorageInTbs(@Nullable Output<Double> maxDataStorageInTbs) {
            $.maxDataStorageInTbs = maxDataStorageInTbs;
            return this;
        }

        /**
         * @param maxDataStorageInTbs The total available DATA disk group size.
         * 
         * @return builder
         * 
         */
        public Builder maxDataStorageInTbs(Double maxDataStorageInTbs) {
            return maxDataStorageInTbs(Output.of(maxDataStorageInTbs));
        }

        /**
         * @param maxDbNodeStorageInGbs The total local node storage available in GBs.
         * 
         * @return builder
         * 
         */
        public Builder maxDbNodeStorageInGbs(@Nullable Output<Integer> maxDbNodeStorageInGbs) {
            $.maxDbNodeStorageInGbs = maxDbNodeStorageInGbs;
            return this;
        }

        /**
         * @param maxDbNodeStorageInGbs The total local node storage available in GBs.
         * 
         * @return builder
         * 
         */
        public Builder maxDbNodeStorageInGbs(Integer maxDbNodeStorageInGbs) {
            return maxDbNodeStorageInGbs(Output.of(maxDbNodeStorageInGbs));
        }

        /**
         * @param maxMemoryInGbs The total memory available in GBs.
         * 
         * @return builder
         * 
         */
        public Builder maxMemoryInGbs(@Nullable Output<Integer> maxMemoryInGbs) {
            $.maxMemoryInGbs = maxMemoryInGbs;
            return this;
        }

        /**
         * @param maxMemoryInGbs The total memory available in GBs.
         * 
         * @return builder
         * 
         */
        public Builder maxMemoryInGbs(Integer maxMemoryInGbs) {
            return maxMemoryInGbs(Output.of(maxMemoryInGbs));
        }

        /**
         * @param memorySizeInGbs The memory allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(@Nullable Output<Integer> memorySizeInGbs) {
            $.memorySizeInGbs = memorySizeInGbs;
            return this;
        }

        /**
         * @param memorySizeInGbs The memory allocated in GBs.
         * 
         * @return builder
         * 
         */
        public Builder memorySizeInGbs(Integer memorySizeInGbs) {
            return memorySizeInGbs(Output.of(memorySizeInGbs));
        }

        /**
         * @param netmask (Updatable) The netmask for the control plane network.
         * 
         * @return builder
         * 
         */
        public Builder netmask(@Nullable Output<String> netmask) {
            $.netmask = netmask;
            return this;
        }

        /**
         * @param netmask (Updatable) The netmask for the control plane network.
         * 
         * @return builder
         * 
         */
        public Builder netmask(String netmask) {
            return netmask(Output.of(netmask));
        }

        /**
         * @param ntpServers (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
         * 
         * @return builder
         * 
         */
        public Builder ntpServers(@Nullable Output<List<String>> ntpServers) {
            $.ntpServers = ntpServers;
            return this;
        }

        /**
         * @param ntpServers (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
         * 
         * @return builder
         * 
         */
        public Builder ntpServers(List<String> ntpServers) {
            return ntpServers(Output.of(ntpServers));
        }

        /**
         * @param ntpServers (Updatable) The list of NTP server IP addresses. Maximum of 3 allowed.
         * 
         * @return builder
         * 
         */
        public Builder ntpServers(String... ntpServers) {
            return ntpServers(List.of(ntpServers));
        }

        /**
         * @param shape The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
         * 
         * @return builder
         * 
         */
        public Builder shape(@Nullable Output<String> shape) {
            $.shape = shape;
            return this;
        }

        /**
         * @param shape The shape of the Exadata infrastructure. The shape determines the amount of CPU, storage, and memory resources allocated to the instance.
         * 
         * @return builder
         * 
         */
        public Builder shape(String shape) {
            return shape(Output.of(shape));
        }

        /**
         * @param state The current lifecycle state of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current lifecycle state of the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param storageCount The number of storage servers for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder storageCount(@Nullable Output<Integer> storageCount) {
            $.storageCount = storageCount;
            return this;
        }

        /**
         * @param storageCount The number of storage servers for the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder storageCount(Integer storageCount) {
            return storageCount(Output.of(storageCount));
        }

        /**
         * @param storageServerVersion The software version of the storage servers (cells) in the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder storageServerVersion(@Nullable Output<String> storageServerVersion) {
            $.storageServerVersion = storageServerVersion;
            return this;
        }

        /**
         * @param storageServerVersion The software version of the storage servers (cells) in the Exadata infrastructure.
         * 
         * @return builder
         * 
         */
        public Builder storageServerVersion(String storageServerVersion) {
            return storageServerVersion(Output.of(storageServerVersion));
        }

        /**
         * @param timeCreated The date and time the Exadata infrastructure was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the Exadata infrastructure was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeZone (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
         * 
         * @return builder
         * 
         */
        public Builder timeZone(@Nullable Output<String> timeZone) {
            $.timeZone = timeZone;
            return this;
        }

        /**
         * @param timeZone (Updatable) The time zone of the Exadata infrastructure. For details, see [Exadata Infrastructure Time Zones](https://docs.cloud.oracle.com/iaas/Content/Database/References/timezones.htm).
         * 
         * @return builder
         * 
         */
        public Builder timeZone(String timeZone) {
            return timeZone(Output.of(timeZone));
        }

        public ExadataInfrastructureState build() {
            return $;
        }
    }

}
