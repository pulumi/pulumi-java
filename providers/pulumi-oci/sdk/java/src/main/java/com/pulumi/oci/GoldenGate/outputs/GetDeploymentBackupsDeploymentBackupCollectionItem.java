// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDeploymentBackupsDeploymentBackupCollectionItem {
    /**
     * @return Possible Deployment backup types.
     * 
     */
    private final String backupType;
    /**
     * @return Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    private final String bucket;
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private final String compartmentId;
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The ID of the deployment in which to list resources.
     * 
     */
    private final String deploymentId;
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    private final String displayName;
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    private final String id;
    /**
     * @return True if this object is automatically created
     * 
     */
    private final Boolean isAutomatic;
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return Name of namespace that serves as a container for all of your buckets
     * 
     */
    private final String namespace;
    /**
     * @return Name of the object to be uploaded to object storage
     * 
     */
    private final String object;
    /**
     * @return Version of OGG
     * 
     */
    private final String oggVersion;
    /**
     * @return The size of the backup stored in object storage (in bytes)
     * 
     */
    private final Double sizeInBytes;
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleState&#39; given.
     * 
     */
    private final String state;
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The time of the resource backup finish. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private final String timeBackupFinished;
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private final String timeCreated;
    /**
     * @return The time of the resource backup. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private final String timeOfBackup;
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetDeploymentBackupsDeploymentBackupCollectionItem(
        @CustomType.Parameter("backupType") String backupType,
        @CustomType.Parameter("bucket") String bucket,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("deploymentId") String deploymentId,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isAutomatic") Boolean isAutomatic,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("namespace") String namespace,
        @CustomType.Parameter("object") String object,
        @CustomType.Parameter("oggVersion") String oggVersion,
        @CustomType.Parameter("sizeInBytes") Double sizeInBytes,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeBackupFinished") String timeBackupFinished,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeOfBackup") String timeOfBackup,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.backupType = backupType;
        this.bucket = bucket;
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.deploymentId = deploymentId;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.isAutomatic = isAutomatic;
        this.lifecycleDetails = lifecycleDetails;
        this.namespace = namespace;
        this.object = object;
        this.oggVersion = oggVersion;
        this.sizeInBytes = sizeInBytes;
        this.state = state;
        this.systemTags = systemTags;
        this.timeBackupFinished = timeBackupFinished;
        this.timeCreated = timeCreated;
        this.timeOfBackup = timeOfBackup;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return Possible Deployment backup types.
     * 
     */
    public String backupType() {
        return this.backupType;
    }
    /**
     * @return Name of the bucket where the object is to be uploaded in the object storage
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Tags defined for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The ID of the deployment in which to list resources.
     * 
     */
    public String deploymentId() {
        return this.deploymentId;
    }
    /**
     * @return A filter to return only the resources that match the entire &#39;displayName&#39; given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return A simple key-value pair that is applied without any predefined name, type, or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the backup being referenced.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return True if this object is automatically created
     * 
     */
    public Boolean isAutomatic() {
        return this.isAutomatic;
    }
    /**
     * @return Describes the object&#39;s current state in detail. For example, it can be used to provide actionable information for a resource in a Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Name of namespace that serves as a container for all of your buckets
     * 
     */
    public String namespace() {
        return this.namespace;
    }
    /**
     * @return Name of the object to be uploaded to object storage
     * 
     */
    public String object() {
        return this.object;
    }
    /**
     * @return Version of OGG
     * 
     */
    public String oggVersion() {
        return this.oggVersion;
    }
    /**
     * @return The size of the backup stored in object storage (in bytes)
     * 
     */
    public Double sizeInBytes() {
        return this.sizeInBytes;
    }
    /**
     * @return A filter to return only the resources that match the &#39;lifecycleState&#39; given.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The system tags associated with this resource, if any. The system tags are set by Oracle Cloud Infrastructure services. Each key is predefined and scoped to namespaces.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{orcl-cloud: {free-tier-retain: true}}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time of the resource backup finish. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeBackupFinished() {
        return this.timeBackupFinished;
    }
    /**
     * @return The time the resource was created. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time of the resource backup. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeOfBackup() {
        return this.timeOfBackup;
    }
    /**
     * @return The time the resource was last updated. The format is defined by [RFC3339](https://tools.ietf.org/html/rfc3339), such as `2016-08-25T21:10:29.600Z`.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentBackupsDeploymentBackupCollectionItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String backupType;
        private String bucket;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String deploymentId;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isAutomatic;
        private String lifecycleDetails;
        private String namespace;
        private String object;
        private String oggVersion;
        private Double sizeInBytes;
        private String state;
        private Map<String,Object> systemTags;
        private String timeBackupFinished;
        private String timeCreated;
        private String timeOfBackup;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDeploymentBackupsDeploymentBackupCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backupType = defaults.backupType;
    	      this.bucket = defaults.bucket;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.deploymentId = defaults.deploymentId;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isAutomatic = defaults.isAutomatic;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.namespace = defaults.namespace;
    	      this.object = defaults.object;
    	      this.oggVersion = defaults.oggVersion;
    	      this.sizeInBytes = defaults.sizeInBytes;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeBackupFinished = defaults.timeBackupFinished;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfBackup = defaults.timeOfBackup;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder backupType(String backupType) {
            this.backupType = Objects.requireNonNull(backupType);
            return this;
        }
        public Builder bucket(String bucket) {
            this.bucket = Objects.requireNonNull(bucket);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder deploymentId(String deploymentId) {
            this.deploymentId = Objects.requireNonNull(deploymentId);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isAutomatic(Boolean isAutomatic) {
            this.isAutomatic = Objects.requireNonNull(isAutomatic);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }
        public Builder object(String object) {
            this.object = Objects.requireNonNull(object);
            return this;
        }
        public Builder oggVersion(String oggVersion) {
            this.oggVersion = Objects.requireNonNull(oggVersion);
            return this;
        }
        public Builder sizeInBytes(Double sizeInBytes) {
            this.sizeInBytes = Objects.requireNonNull(sizeInBytes);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeBackupFinished(String timeBackupFinished) {
            this.timeBackupFinished = Objects.requireNonNull(timeBackupFinished);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeOfBackup(String timeOfBackup) {
            this.timeOfBackup = Objects.requireNonNull(timeOfBackup);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetDeploymentBackupsDeploymentBackupCollectionItem build() {
            return new GetDeploymentBackupsDeploymentBackupCollectionItem(backupType, bucket, compartmentId, definedTags, deploymentId, displayName, freeformTags, id, isAutomatic, lifecycleDetails, namespace, object, oggVersion, sizeInBytes, state, systemTags, timeBackupFinished, timeCreated, timeOfBackup, timeUpdated);
        }
    }
}
