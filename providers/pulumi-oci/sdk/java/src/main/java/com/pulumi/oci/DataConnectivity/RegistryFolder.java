// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataConnectivity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DataConnectivity.RegistryFolderArgs;
import com.pulumi.oci.DataConnectivity.inputs.RegistryFolderState;
import com.pulumi.oci.DataConnectivity.outputs.RegistryFolderDataAsset;
import com.pulumi.oci.DataConnectivity.outputs.RegistryFolderParentRef;
import com.pulumi.oci.Utilities;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This resource provides the Registry Folder resource in Oracle Cloud Infrastructure Data Connectivity service.
 * 
 * Creates a folder under a specefied registry.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * RegistryFolders can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:DataConnectivity/registryFolder:RegistryFolder test_registry_folder &#34;registries/{registryId}/folders/{folderKey}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DataConnectivity/registryFolder:RegistryFolder")
public class RegistryFolder extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) List of data assets which belongs to this folder
     * 
     */
    @Export(name="dataAssets", type=List.class, parameters={RegistryFolderDataAsset.class})
    private Output<List<RegistryFolderDataAsset>> dataAssets;

    /**
     * @return (Updatable) List of data assets which belongs to this folder
     * 
     */
    public Output<List<RegistryFolderDataAsset>> dataAssets() {
        return this.dataAssets;
    }
    /**
     * (Updatable) User-defined description for the folder.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return (Updatable) User-defined description for the folder.
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    @Export(name="identifier", type=String.class, parameters={})
    private Output<String> identifier;

    /**
     * @return (Updatable) Value can only contain upper case letters, underscore, and numbers. It should begin with upper case letter or underscore. The value can be modified.
     * 
     */
    public Output<String> identifier() {
        return this.identifier;
    }
    /**
     * (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
     * 
     */
    @Export(name="key", type=String.class, parameters={})
    private Output<String> key;

    /**
     * @return (Updatable) Generated key that can be used in API calls to identify folder. On scenarios where reference to the folder is needed, a value can be passed in create.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * (Updatable) The type of the folder.
     * 
     */
    @Export(name="modelType", type=String.class, parameters={})
    private Output<String> modelType;

    /**
     * @return (Updatable) The type of the folder.
     * 
     */
    public Output<String> modelType() {
        return this.modelType;
    }
    /**
     * (Updatable) The model version of an object.
     * 
     */
    @Export(name="modelVersion", type=String.class, parameters={})
    private Output<String> modelVersion;

    /**
     * @return (Updatable) The model version of an object.
     * 
     */
    public Output<String> modelVersion() {
        return this.modelVersion;
    }
    /**
     * (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return (Updatable) Free form text without any restriction on permitted characters. Name can have letters, numbers, and special characters. The value is editable and is restricted to 1000 characters.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    @Export(name="objectStatus", type=Integer.class, parameters={})
    private Output<Integer> objectStatus;

    /**
     * @return (Updatable) The status of an object that can be set to value 1 for shallow references across objects, other values reserved.
     * 
     */
    public Output<Integer> objectStatus() {
        return this.objectStatus;
    }
    /**
     * (Updatable) The version of the object that is used to track changes in the object instance.
     * 
     */
    @Export(name="objectVersion", type=Integer.class, parameters={})
    private Output<Integer> objectVersion;

    /**
     * @return (Updatable) The version of the object that is used to track changes in the object instance.
     * 
     */
    public Output<Integer> objectVersion() {
        return this.objectVersion;
    }
    /**
     * (Updatable) A reference to the object&#39;s parent.
     * 
     */
    @Export(name="parentRef", type=RegistryFolderParentRef.class, parameters={})
    private Output<RegistryFolderParentRef> parentRef;

    /**
     * @return (Updatable) A reference to the object&#39;s parent.
     * 
     */
    public Output<RegistryFolderParentRef> parentRef() {
        return this.parentRef;
    }
    /**
     * The registry Ocid.
     * 
     */
    @Export(name="registryId", type=String.class, parameters={})
    private Output<String> registryId;

    /**
     * @return The registry Ocid.
     * 
     */
    public Output<String> registryId() {
        return this.registryId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RegistryFolder(String name) {
        this(name, RegistryFolderArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RegistryFolder(String name, RegistryFolderArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RegistryFolder(String name, RegistryFolderArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataConnectivity/registryFolder:RegistryFolder", name, args == null ? RegistryFolderArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private RegistryFolder(String name, Output<String> id, @Nullable RegistryFolderState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataConnectivity/registryFolder:RegistryFolder", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RegistryFolder get(String name, Output<String> id, @Nullable RegistryFolderState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RegistryFolder(name, id, state, options);
    }
}
