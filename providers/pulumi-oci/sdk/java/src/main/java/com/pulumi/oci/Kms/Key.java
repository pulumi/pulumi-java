// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Kms.KeyArgs;
import com.pulumi.oci.Kms.inputs.KeyState;
import com.pulumi.oci.Kms.outputs.KeyKeyShape;
import com.pulumi.oci.Kms.outputs.KeyReplicaDetail;
import com.pulumi.oci.Kms.outputs.KeyRestoreFromFile;
import com.pulumi.oci.Kms.outputs.KeyRestoreFromObjectStore;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Key resource in Oracle Cloud Infrastructure Kms service.
 * 
 * Creates a new master encryption key.
 * 
 * As a management operation, this call is subject to a Key Management limit that applies to the total
 * number of requests across all management write operations. Key Management might throttle this call
 * to reject an otherwise valid request when the total rate of management write operations exceeds 10
 * requests per second for a given tenancy.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Keys can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Kms/key:Key test_key &#34;managementEndpoint/{managementEndpoint}/keys/{keyId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Kms/key:Key")
public class Key extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The OCID of the compartment where you want to create the master encryption key.
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment where you want to create the master encryption key.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
     * 
     */
    @Export(name="currentKeyVersion", type=String.class, parameters={})
    private Output<String> currentKeyVersion;

    /**
     * @return The OCID of the key version used in cryptographic operations. During key rotation, the service might be in a transitional state where this or a newer key version are used intermittently. The `currentKeyVersion` property is updated when the service is guaranteed to use the new key version for all subsequent encryption operations.
     * 
     */
    public Output<String> currentKeyVersion() {
        return this.currentKeyVersion;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) Desired state of the key. Possible values : `ENABLED` or `DISABLED`
     * 
     */
    @Export(name="desiredState", type=String.class, parameters={})
    private Output<String> desiredState;

    /**
     * @return (Updatable) Desired state of the key. Possible values : `ENABLED` or `DISABLED`
     * 
     */
    public Output<String> desiredState() {
        return this.desiredState;
    }
    /**
     * (Updatable) A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name for the key. It does not have to be unique, and it is changeable. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * A boolean that will be true when key is primary, and will be false when key is a replica from a primary key.
     * 
     */
    @Export(name="isPrimary", type=Boolean.class, parameters={})
    private Output<Boolean> isPrimary;

    /**
     * @return A boolean that will be true when key is primary, and will be false when key is a replica from a primary key.
     * 
     */
    public Output<Boolean> isPrimary() {
        return this.isPrimary;
    }
    /**
     * The cryptographic properties of a key.
     * 
     */
    @Export(name="keyShape", type=KeyKeyShape.class, parameters={})
    private Output<KeyKeyShape> keyShape;

    /**
     * @return The cryptographic properties of a key.
     * 
     */
    public Output<KeyKeyShape> keyShape() {
        return this.keyShape;
    }
    /**
     * The service endpoint to perform management operations against. Management operations include &#39;Create,&#39; &#39;Update,&#39; &#39;List,&#39; &#39;Get,&#39; and &#39;Delete&#39; operations. See Vault Management endpoint.
     * 
     */
    @Export(name="managementEndpoint", type=String.class, parameters={})
    private Output<String> managementEndpoint;

    /**
     * @return The service endpoint to perform management operations against. Management operations include &#39;Create,&#39; &#39;Update,&#39; &#39;List,&#39; &#39;Get,&#39; and &#39;Delete&#39; operations. See Vault Management endpoint.
     * 
     */
    public Output<String> managementEndpoint() {
        return this.managementEndpoint;
    }
    /**
     * The key&#39;s protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault&#39;s RSA wrapping key which persists  on the HSM. All cryptographic operations that use a key with a protection mode of `SOFTWARE` are performed on the server. By default,  a key&#39;s protection mode is set to `HSM`. You can&#39;t change a key&#39;s protection mode after the key is created or imported.
     * 
     */
    @Export(name="protectionMode", type=String.class, parameters={})
    private Output<String> protectionMode;

    /**
     * @return The key&#39;s protection mode indicates how the key persists and where cryptographic operations that use the key are performed. A protection mode of `HSM` means that the key persists on a hardware security module (HSM) and all cryptographic operations are performed inside the HSM. A protection mode of `SOFTWARE` means that the key persists on the server, protected by the vault&#39;s RSA wrapping key which persists  on the HSM. All cryptographic operations that use a key with a protection mode of `SOFTWARE` are performed on the server. By default,  a key&#39;s protection mode is set to `HSM`. You can&#39;t change a key&#39;s protection mode after the key is created or imported.
     * 
     */
    public Output<String> protectionMode() {
        return this.protectionMode;
    }
    /**
     * Key replica details
     * 
     */
    @Export(name="replicaDetails", type=List.class, parameters={KeyReplicaDetail.class})
    private Output<List<KeyReplicaDetail>> replicaDetails;

    /**
     * @return Key replica details
     * 
     */
    public Output<List<KeyReplicaDetail>> replicaDetails() {
        return this.replicaDetails;
    }
    /**
     * (Updatable) Details where key was backed up.
     * 
     */
    @Export(name="restoreFromFile", type=KeyRestoreFromFile.class, parameters={})
    private Output</* @Nullable */ KeyRestoreFromFile> restoreFromFile;

    /**
     * @return (Updatable) Details where key was backed up.
     * 
     */
    public Output<Optional<KeyRestoreFromFile>> restoreFromFile() {
        return Codegen.optional(this.restoreFromFile);
    }
    /**
     * (Updatable) Details where key was backed up
     * 
     */
    @Export(name="restoreFromObjectStore", type=KeyRestoreFromObjectStore.class, parameters={})
    private Output</* @Nullable */ KeyRestoreFromObjectStore> restoreFromObjectStore;

    /**
     * @return (Updatable) Details where key was backed up
     * 
     */
    public Output<Optional<KeyRestoreFromObjectStore>> restoreFromObjectStore() {
        return Codegen.optional(this.restoreFromObjectStore);
    }
    /**
     * (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
     * 
     */
    @Export(name="restoreTrigger", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> restoreTrigger;

    /**
     * @return (Updatable) An optional property when flipped triggers restore from restore option provided in config file.
     * 
     */
    public Output<Optional<Boolean>> restoreTrigger() {
        return Codegen.optional(this.restoreTrigger);
    }
    /**
     * The OCID of the key from which this key was restored.
     * 
     */
    @Export(name="restoredFromKeyId", type=String.class, parameters={})
    private Output<String> restoredFromKeyId;

    /**
     * @return The OCID of the key from which this key was restored.
     * 
     */
    public Output<String> restoredFromKeyId() {
        return this.restoredFromKeyId;
    }
    /**
     * The key&#39;s current lifecycle state.  Example: `ENABLED`
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The key&#39;s current lifecycle state.  Example: `ENABLED`
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    @Export(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    /**
     * @return The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.  Example: `2018-04-03T21:10:29.600Z`
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * (Updatable) An optional property for the deletion time of the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    @Export(name="timeOfDeletion", type=String.class, parameters={})
    private Output<String> timeOfDeletion;

    /**
     * @return (Updatable) An optional property for the deletion time of the key, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public Output<String> timeOfDeletion() {
        return this.timeOfDeletion;
    }
    /**
     * The OCID of the vault that contains this key.
     * 
     */
    @Export(name="vaultId", type=String.class, parameters={})
    private Output<String> vaultId;

    /**
     * @return The OCID of the vault that contains this key.
     * 
     */
    public Output<String> vaultId() {
        return this.vaultId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Key(String name) {
        this(name, KeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Key(String name, KeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Key(String name, KeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Kms/key:Key", name, args == null ? KeyArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Key(String name, Output<String> id, @Nullable KeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Kms/key:Key", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Key get(String name, Output<String> id, @Nullable KeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Key(name, id, state, options);
    }
}
