// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApmSynthetics.outputs.GetMonitorsFilter;
import com.pulumi.oci.ApmSynthetics.outputs.GetMonitorsMonitorCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMonitorsResult {
    private final String apmDomainId;
    /**
     * @return Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetMonitorsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of monitor_collection.
     * 
     */
    private final List<GetMonitorsMonitorCollection> monitorCollections;
    /**
     * @return Type of the monitor.
     * 
     */
    private final @Nullable String monitorType;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
     * 
     */
    private final @Nullable String scriptId;
    /**
     * @return Enables or disables the monitor.
     * 
     */
    private final @Nullable String status;

    @CustomType.Constructor
    private GetMonitorsResult(
        @CustomType.Parameter("apmDomainId") String apmDomainId,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetMonitorsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("monitorCollections") List<GetMonitorsMonitorCollection> monitorCollections,
        @CustomType.Parameter("monitorType") @Nullable String monitorType,
        @CustomType.Parameter("scriptId") @Nullable String scriptId,
        @CustomType.Parameter("status") @Nullable String status) {
        this.apmDomainId = apmDomainId;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.monitorCollections = monitorCollections;
        this.monitorType = monitorType;
        this.scriptId = scriptId;
        this.status = status;
    }

    public String apmDomainId() {
        return this.apmDomainId;
    }
    /**
     * @return Unique name that can be edited. The name should not contain any confidential information.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetMonitorsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of monitor_collection.
     * 
     */
    public List<GetMonitorsMonitorCollection> monitorCollections() {
        return this.monitorCollections;
    }
    /**
     * @return Type of the monitor.
     * 
     */
    public Optional<String> monitorType() {
        return Optional.ofNullable(this.monitorType);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the script. scriptId is mandatory for creation of SCRIPTED_BROWSER and SCRIPTED_REST monitor types. For other monitor types, it should be set to null.
     * 
     */
    public Optional<String> scriptId() {
        return Optional.ofNullable(this.scriptId);
    }
    /**
     * @return Enables or disables the monitor.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMonitorsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String apmDomainId;
        private @Nullable String displayName;
        private @Nullable List<GetMonitorsFilter> filters;
        private String id;
        private List<GetMonitorsMonitorCollection> monitorCollections;
        private @Nullable String monitorType;
        private @Nullable String scriptId;
        private @Nullable String status;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMonitorsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apmDomainId = defaults.apmDomainId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.monitorCollections = defaults.monitorCollections;
    	      this.monitorType = defaults.monitorType;
    	      this.scriptId = defaults.scriptId;
    	      this.status = defaults.status;
        }

        public Builder apmDomainId(String apmDomainId) {
            this.apmDomainId = Objects.requireNonNull(apmDomainId);
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetMonitorsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetMonitorsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder monitorCollections(List<GetMonitorsMonitorCollection> monitorCollections) {
            this.monitorCollections = Objects.requireNonNull(monitorCollections);
            return this;
        }
        public Builder monitorCollections(GetMonitorsMonitorCollection... monitorCollections) {
            return monitorCollections(List.of(monitorCollections));
        }
        public Builder monitorType(@Nullable String monitorType) {
            this.monitorType = monitorType;
            return this;
        }
        public Builder scriptId(@Nullable String scriptId) {
            this.scriptId = scriptId;
            return this;
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }        public GetMonitorsResult build() {
            return new GetMonitorsResult(apmDomainId, displayName, filters, id, monitorCollections, monitorType, scriptId, status);
        }
    }
}
