// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Functions.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InvokeFunctionState extends com.pulumi.resources.ResourceArgs {

    public static final InvokeFunctionState Empty = new InvokeFunctionState();

    @Import(name="base64EncodeContent")
    private @Nullable Output<Boolean> base64EncodeContent;

    public Optional<Output<Boolean>> base64EncodeContent() {
        return Optional.ofNullable(this.base64EncodeContent);
    }

    /**
     * Content of the response string, if any. If `base64_encode_content` is set to `true`, then this content will be base64 encoded.
     * 
     */
    @Import(name="content")
    private @Nullable Output<String> content;

    /**
     * @return Content of the response string, if any. If `base64_encode_content` is set to `true`, then this content will be base64 encoded.
     * 
     */
    public Optional<Output<String>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. &#39;httprequest&#39;, &#39;cloudevent&#39;.
     * 
     */
    @Import(name="fnIntent")
    private @Nullable Output<String> fnIntent;

    /**
     * @return An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. &#39;httprequest&#39;, &#39;cloudevent&#39;.
     * 
     */
    public Optional<Output<String>> fnIntent() {
        return Optional.ofNullable(this.fnIntent);
    }

    /**
     * Indicates whether the functions platform should execute the request directly and return the result (&#39;sync&#39;) or whether the platform should enqueue the request for later processing and acknowledge that it has been processed (&#39;detached&#39;).
     * 
     */
    @Import(name="fnInvokeType")
    private @Nullable Output<String> fnInvokeType;

    /**
     * @return Indicates whether the functions platform should execute the request directly and return the result (&#39;sync&#39;) or whether the platform should enqueue the request for later processing and acknowledge that it has been processed (&#39;detached&#39;).
     * 
     */
    public Optional<Output<String>> fnInvokeType() {
        return Optional.ofNullable(this.fnInvokeType);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
     * 
     */
    @Import(name="functionId")
    private @Nullable Output<String> functionId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
     * 
     */
    public Optional<Output<String>> functionId() {
        return Optional.ofNullable(this.functionId);
    }

    /**
     * An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invoke_function_body` or `invoke_function_body_base64_encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
     * 
     */
    @Import(name="inputBodySourcePath")
    private @Nullable Output<String> inputBodySourcePath;

    /**
     * @return An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invoke_function_body` or `invoke_function_body_base64_encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
     * 
     */
    public Optional<Output<String>> inputBodySourcePath() {
        return Optional.ofNullable(this.inputBodySourcePath);
    }

    @Import(name="invokeEndpoint")
    private @Nullable Output<String> invokeEndpoint;

    public Optional<Output<String>> invokeEndpoint() {
        return Optional.ofNullable(this.invokeEndpoint);
    }

    /**
     * The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `input_body_source_path` or `invoke_function_body_base64_encoded` is defined.
     * 
     */
    @Import(name="invokeFunctionBody")
    private @Nullable Output<String> invokeFunctionBody;

    /**
     * @return The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `input_body_source_path` or `invoke_function_body_base64_encoded` is defined.
     * 
     */
    public Optional<Output<String>> invokeFunctionBody() {
        return Optional.ofNullable(this.invokeFunctionBody);
    }

    @Import(name="invokeFunctionBodyBase64Encoded")
    private @Nullable Output<String> invokeFunctionBodyBase64Encoded;

    public Optional<Output<String>> invokeFunctionBodyBase64Encoded() {
        return Optional.ofNullable(this.invokeFunctionBodyBase64Encoded);
    }

    private InvokeFunctionState() {}

    private InvokeFunctionState(InvokeFunctionState $) {
        this.base64EncodeContent = $.base64EncodeContent;
        this.content = $.content;
        this.fnIntent = $.fnIntent;
        this.fnInvokeType = $.fnInvokeType;
        this.functionId = $.functionId;
        this.inputBodySourcePath = $.inputBodySourcePath;
        this.invokeEndpoint = $.invokeEndpoint;
        this.invokeFunctionBody = $.invokeFunctionBody;
        this.invokeFunctionBodyBase64Encoded = $.invokeFunctionBodyBase64Encoded;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InvokeFunctionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InvokeFunctionState $;

        public Builder() {
            $ = new InvokeFunctionState();
        }

        public Builder(InvokeFunctionState defaults) {
            $ = new InvokeFunctionState(Objects.requireNonNull(defaults));
        }

        public Builder base64EncodeContent(@Nullable Output<Boolean> base64EncodeContent) {
            $.base64EncodeContent = base64EncodeContent;
            return this;
        }

        public Builder base64EncodeContent(Boolean base64EncodeContent) {
            return base64EncodeContent(Output.of(base64EncodeContent));
        }

        /**
         * @param content Content of the response string, if any. If `base64_encode_content` is set to `true`, then this content will be base64 encoded.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content Content of the response string, if any. If `base64_encode_content` is set to `true`, then this content will be base64 encoded.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param fnIntent An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. &#39;httprequest&#39;, &#39;cloudevent&#39;.
         * 
         * @return builder
         * 
         */
        public Builder fnIntent(@Nullable Output<String> fnIntent) {
            $.fnIntent = fnIntent;
            return this;
        }

        /**
         * @param fnIntent An optional intent header that indicates to the FDK the way the event should be interpreted. E.g. &#39;httprequest&#39;, &#39;cloudevent&#39;.
         * 
         * @return builder
         * 
         */
        public Builder fnIntent(String fnIntent) {
            return fnIntent(Output.of(fnIntent));
        }

        /**
         * @param fnInvokeType Indicates whether the functions platform should execute the request directly and return the result (&#39;sync&#39;) or whether the platform should enqueue the request for later processing and acknowledge that it has been processed (&#39;detached&#39;).
         * 
         * @return builder
         * 
         */
        public Builder fnInvokeType(@Nullable Output<String> fnInvokeType) {
            $.fnInvokeType = fnInvokeType;
            return this;
        }

        /**
         * @param fnInvokeType Indicates whether the functions platform should execute the request directly and return the result (&#39;sync&#39;) or whether the platform should enqueue the request for later processing and acknowledge that it has been processed (&#39;detached&#39;).
         * 
         * @return builder
         * 
         */
        public Builder fnInvokeType(String fnInvokeType) {
            return fnInvokeType(Output.of(fnInvokeType));
        }

        /**
         * @param functionId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
         * 
         * @return builder
         * 
         */
        public Builder functionId(@Nullable Output<String> functionId) {
            $.functionId = functionId;
            return this;
        }

        /**
         * @param functionId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of this function.
         * 
         * @return builder
         * 
         */
        public Builder functionId(String functionId) {
            return functionId(Output.of(functionId));
        }

        /**
         * @param inputBodySourcePath An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invoke_function_body` or `invoke_function_body_base64_encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
         * 
         * @return builder
         * 
         */
        public Builder inputBodySourcePath(@Nullable Output<String> inputBodySourcePath) {
            $.inputBodySourcePath = inputBodySourcePath;
            return this;
        }

        /**
         * @param inputBodySourcePath An absolute path to a file on the local system that contains the input to be provided to the function. Cannot be defined if `invoke_function_body` or `invoke_function_body_base64_encoded` is defined. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit.
         * 
         * @return builder
         * 
         */
        public Builder inputBodySourcePath(String inputBodySourcePath) {
            return inputBodySourcePath(Output.of(inputBodySourcePath));
        }

        public Builder invokeEndpoint(@Nullable Output<String> invokeEndpoint) {
            $.invokeEndpoint = invokeEndpoint;
            return this;
        }

        public Builder invokeEndpoint(String invokeEndpoint) {
            return invokeEndpoint(Output.of(invokeEndpoint));
        }

        /**
         * @param invokeFunctionBody The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `input_body_source_path` or `invoke_function_body_base64_encoded` is defined.
         * 
         * @return builder
         * 
         */
        public Builder invokeFunctionBody(@Nullable Output<String> invokeFunctionBody) {
            $.invokeFunctionBody = invokeFunctionBody;
            return this;
        }

        /**
         * @param invokeFunctionBody The body of the function invocation. Note: The maximum size of the request is limited. This limit is currently 6MB and the endpoint will not accept requests that are bigger than this limit. Cannot be defined if `input_body_source_path` or `invoke_function_body_base64_encoded` is defined.
         * 
         * @return builder
         * 
         */
        public Builder invokeFunctionBody(String invokeFunctionBody) {
            return invokeFunctionBody(Output.of(invokeFunctionBody));
        }

        public Builder invokeFunctionBodyBase64Encoded(@Nullable Output<String> invokeFunctionBodyBase64Encoded) {
            $.invokeFunctionBodyBase64Encoded = invokeFunctionBodyBase64Encoded;
            return this;
        }

        public Builder invokeFunctionBodyBase64Encoded(String invokeFunctionBodyBase64Encoded) {
            return invokeFunctionBodyBase64Encoded(Output.of(invokeFunctionBodyBase64Encoded));
        }

        public InvokeFunctionState build() {
            return $;
        }
    }

}
