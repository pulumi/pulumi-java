// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LogAnalytics.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLogAnalyticsLogGroupsSummaryResult {
    private final String compartmentId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final Integer logGroupCount;
    private final String namespace;

    @CustomType.Constructor
    private GetLogAnalyticsLogGroupsSummaryResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("logGroupCount") Integer logGroupCount,
        @CustomType.Parameter("namespace") String namespace) {
        this.compartmentId = compartmentId;
        this.id = id;
        this.logGroupCount = logGroupCount;
        this.namespace = namespace;
    }

    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Integer logGroupCount() {
        return this.logGroupCount;
    }
    public String namespace() {
        return this.namespace;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLogAnalyticsLogGroupsSummaryResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private String id;
        private Integer logGroupCount;
        private String namespace;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLogAnalyticsLogGroupsSummaryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.id = defaults.id;
    	      this.logGroupCount = defaults.logGroupCount;
    	      this.namespace = defaults.namespace;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder logGroupCount(Integer logGroupCount) {
            this.logGroupCount = Objects.requireNonNull(logGroupCount);
            return this;
        }
        public Builder namespace(String namespace) {
            this.namespace = Objects.requireNonNull(namespace);
            return this;
        }        public GetLogAnalyticsLogGroupsSummaryResult build() {
            return new GetLogAnalyticsLogGroupsSummaryResult(compartmentId, id, logGroupCount, namespace);
        }
    }
}
