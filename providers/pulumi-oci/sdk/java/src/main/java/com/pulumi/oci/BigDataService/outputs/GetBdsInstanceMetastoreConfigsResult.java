// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration;
import com.pulumi.oci.BigDataService.outputs.GetBdsInstanceMetastoreConfigsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBdsInstanceMetastoreConfigsResult {
    /**
     * @return The ID of BDS API Key used for metastore configuration. Set only if metastore&#39;s type is EXTERNAL.
     * 
     */
    private final @Nullable String bdsApiKeyId;
    private final String bdsInstanceId;
    /**
     * @return The list of bds_metastore_configurations.
     * 
     */
    private final List<GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration> bdsMetastoreConfigurations;
    /**
     * @return The display name of metastore configuration
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetBdsInstanceMetastoreConfigsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The OCID of the Data Catalog metastore. Set only if metastore&#39;s type is EXTERNAL.
     * 
     */
    private final @Nullable String metastoreId;
    /**
     * @return The type of the metastore in the metastore configuration.
     * 
     */
    private final @Nullable String metastoreType;
    /**
     * @return the lifecycle state of the metastore configuration.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetBdsInstanceMetastoreConfigsResult(
        @CustomType.Parameter("bdsApiKeyId") @Nullable String bdsApiKeyId,
        @CustomType.Parameter("bdsInstanceId") String bdsInstanceId,
        @CustomType.Parameter("bdsMetastoreConfigurations") List<GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration> bdsMetastoreConfigurations,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetBdsInstanceMetastoreConfigsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("metastoreId") @Nullable String metastoreId,
        @CustomType.Parameter("metastoreType") @Nullable String metastoreType,
        @CustomType.Parameter("state") @Nullable String state) {
        this.bdsApiKeyId = bdsApiKeyId;
        this.bdsInstanceId = bdsInstanceId;
        this.bdsMetastoreConfigurations = bdsMetastoreConfigurations;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.metastoreId = metastoreId;
        this.metastoreType = metastoreType;
        this.state = state;
    }

    /**
     * @return The ID of BDS API Key used for metastore configuration. Set only if metastore&#39;s type is EXTERNAL.
     * 
     */
    public Optional<String> bdsApiKeyId() {
        return Optional.ofNullable(this.bdsApiKeyId);
    }
    public String bdsInstanceId() {
        return this.bdsInstanceId;
    }
    /**
     * @return The list of bds_metastore_configurations.
     * 
     */
    public List<GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration> bdsMetastoreConfigurations() {
        return this.bdsMetastoreConfigurations;
    }
    /**
     * @return The display name of metastore configuration
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetBdsInstanceMetastoreConfigsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the Data Catalog metastore. Set only if metastore&#39;s type is EXTERNAL.
     * 
     */
    public Optional<String> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }
    /**
     * @return The type of the metastore in the metastore configuration.
     * 
     */
    public Optional<String> metastoreType() {
        return Optional.ofNullable(this.metastoreType);
    }
    /**
     * @return the lifecycle state of the metastore configuration.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceMetastoreConfigsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String bdsApiKeyId;
        private String bdsInstanceId;
        private List<GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration> bdsMetastoreConfigurations;
        private @Nullable String displayName;
        private @Nullable List<GetBdsInstanceMetastoreConfigsFilter> filters;
        private String id;
        private @Nullable String metastoreId;
        private @Nullable String metastoreType;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBdsInstanceMetastoreConfigsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bdsApiKeyId = defaults.bdsApiKeyId;
    	      this.bdsInstanceId = defaults.bdsInstanceId;
    	      this.bdsMetastoreConfigurations = defaults.bdsMetastoreConfigurations;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.metastoreId = defaults.metastoreId;
    	      this.metastoreType = defaults.metastoreType;
    	      this.state = defaults.state;
        }

        public Builder bdsApiKeyId(@Nullable String bdsApiKeyId) {
            this.bdsApiKeyId = bdsApiKeyId;
            return this;
        }
        public Builder bdsInstanceId(String bdsInstanceId) {
            this.bdsInstanceId = Objects.requireNonNull(bdsInstanceId);
            return this;
        }
        public Builder bdsMetastoreConfigurations(List<GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration> bdsMetastoreConfigurations) {
            this.bdsMetastoreConfigurations = Objects.requireNonNull(bdsMetastoreConfigurations);
            return this;
        }
        public Builder bdsMetastoreConfigurations(GetBdsInstanceMetastoreConfigsBdsMetastoreConfiguration... bdsMetastoreConfigurations) {
            return bdsMetastoreConfigurations(List.of(bdsMetastoreConfigurations));
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetBdsInstanceMetastoreConfigsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetBdsInstanceMetastoreConfigsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder metastoreId(@Nullable String metastoreId) {
            this.metastoreId = metastoreId;
            return this;
        }
        public Builder metastoreType(@Nullable String metastoreType) {
            this.metastoreType = metastoreType;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetBdsInstanceMetastoreConfigsResult build() {
            return new GetBdsInstanceMetastoreConfigsResult(bdsApiKeyId, bdsInstanceId, bdsMetastoreConfigurations, displayName, filters, id, metastoreId, metastoreType, state);
        }
    }
}
