// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Dns.inputs.ResolverAttachedViewArgs;
import com.pulumi.oci.Dns.inputs.ResolverEndpointArgs;
import com.pulumi.oci.Dns.inputs.ResolverRuleArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResolverState extends com.pulumi.resources.ResourceArgs {

    public static final ResolverState Empty = new ResolverState();

    /**
     * The OCID of the attached VCN.
     * 
     */
    @Import(name="attachedVcnId")
    private @Nullable Output<String> attachedVcnId;

    /**
     * @return The OCID of the attached VCN.
     * 
     */
    public Optional<Output<String>> attachedVcnId() {
        return Optional.ofNullable(this.attachedVcnId);
    }

    /**
     * (Updatable) The attached views. Views are evaluated in order.
     * 
     */
    @Import(name="attachedViews")
    private @Nullable Output<List<ResolverAttachedViewArgs>> attachedViews;

    /**
     * @return (Updatable) The attached views. Views are evaluated in order.
     * 
     */
    public Optional<Output<List<ResolverAttachedViewArgs>>> attachedViews() {
        return Optional.ofNullable(this.attachedViews);
    }

    /**
     * (Updatable) The OCID of the owning compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the owning compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The OCID of the default view.
     * 
     */
    @Import(name="defaultViewId")
    private @Nullable Output<String> defaultViewId;

    /**
     * @return The OCID of the default view.
     * 
     */
    public Optional<Output<String>> defaultViewId() {
        return Optional.ofNullable(this.defaultViewId);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The display name of the resolver.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) The display name of the resolver.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Read-only array of endpoints for the resolver.
     * 
     */
    @Import(name="endpoints")
    private @Nullable Output<List<ResolverEndpointArgs>> endpoints;

    /**
     * @return Read-only array of endpoints for the resolver.
     * 
     */
    public Optional<Output<List<ResolverEndpointArgs>>> endpoints() {
        return Optional.ofNullable(this.endpoints);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    @Import(name="isProtected")
    private @Nullable Output<Boolean> isProtected;

    /**
     * @return A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    public Optional<Output<Boolean>> isProtected() {
        return Optional.ofNullable(this.isProtected);
    }

    /**
     * The OCID of the target resolver.
     * 
     */
    @Import(name="resolverId")
    private @Nullable Output<String> resolverId;

    /**
     * @return The OCID of the target resolver.
     * 
     */
    public Optional<Output<String>> resolverId() {
        return Optional.ofNullable(this.resolverId);
    }

    /**
     * (Updatable) Rules for the resolver. Rules are evaluated in order.
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<ResolverRuleArgs>> rules;

    /**
     * @return (Updatable) Rules for the resolver. Rules are evaluated in order.
     * 
     */
    public Optional<Output<List<ResolverRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    /**
     * Value must be `PRIVATE` when creating private name resolvers.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return Value must be `PRIVATE` when creating private name resolvers.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * The canonical absolute URL of the resource.
     * 
     */
    @Import(name="self")
    private @Nullable Output<String> self;

    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public Optional<Output<String>> self() {
        return Optional.ofNullable(this.self);
    }

    /**
     * The current state of the resource.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the resource.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private ResolverState() {}

    private ResolverState(ResolverState $) {
        this.attachedVcnId = $.attachedVcnId;
        this.attachedViews = $.attachedViews;
        this.compartmentId = $.compartmentId;
        this.defaultViewId = $.defaultViewId;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.endpoints = $.endpoints;
        this.freeformTags = $.freeformTags;
        this.isProtected = $.isProtected;
        this.resolverId = $.resolverId;
        this.rules = $.rules;
        this.scope = $.scope;
        this.self = $.self;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResolverState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResolverState $;

        public Builder() {
            $ = new ResolverState();
        }

        public Builder(ResolverState defaults) {
            $ = new ResolverState(Objects.requireNonNull(defaults));
        }

        /**
         * @param attachedVcnId The OCID of the attached VCN.
         * 
         * @return builder
         * 
         */
        public Builder attachedVcnId(@Nullable Output<String> attachedVcnId) {
            $.attachedVcnId = attachedVcnId;
            return this;
        }

        /**
         * @param attachedVcnId The OCID of the attached VCN.
         * 
         * @return builder
         * 
         */
        public Builder attachedVcnId(String attachedVcnId) {
            return attachedVcnId(Output.of(attachedVcnId));
        }

        /**
         * @param attachedViews (Updatable) The attached views. Views are evaluated in order.
         * 
         * @return builder
         * 
         */
        public Builder attachedViews(@Nullable Output<List<ResolverAttachedViewArgs>> attachedViews) {
            $.attachedViews = attachedViews;
            return this;
        }

        /**
         * @param attachedViews (Updatable) The attached views. Views are evaluated in order.
         * 
         * @return builder
         * 
         */
        public Builder attachedViews(List<ResolverAttachedViewArgs> attachedViews) {
            return attachedViews(Output.of(attachedViews));
        }

        /**
         * @param attachedViews (Updatable) The attached views. Views are evaluated in order.
         * 
         * @return builder
         * 
         */
        public Builder attachedViews(ResolverAttachedViewArgs... attachedViews) {
            return attachedViews(List.of(attachedViews));
        }

        /**
         * @param compartmentId (Updatable) The OCID of the owning compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of the owning compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param defaultViewId The OCID of the default view.
         * 
         * @return builder
         * 
         */
        public Builder defaultViewId(@Nullable Output<String> defaultViewId) {
            $.defaultViewId = defaultViewId;
            return this;
        }

        /**
         * @param defaultViewId The OCID of the default view.
         * 
         * @return builder
         * 
         */
        public Builder defaultViewId(String defaultViewId) {
            return defaultViewId(Output.of(defaultViewId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) The display name of the resolver.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) The display name of the resolver.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param endpoints Read-only array of endpoints for the resolver.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(@Nullable Output<List<ResolverEndpointArgs>> endpoints) {
            $.endpoints = endpoints;
            return this;
        }

        /**
         * @param endpoints Read-only array of endpoints for the resolver.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(List<ResolverEndpointArgs> endpoints) {
            return endpoints(Output.of(endpoints));
        }

        /**
         * @param endpoints Read-only array of endpoints for the resolver.
         * 
         * @return builder
         * 
         */
        public Builder endpoints(ResolverEndpointArgs... endpoints) {
            return endpoints(List.of(endpoints));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isProtected A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
         * 
         * @return builder
         * 
         */
        public Builder isProtected(@Nullable Output<Boolean> isProtected) {
            $.isProtected = isProtected;
            return this;
        }

        /**
         * @param isProtected A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
         * 
         * @return builder
         * 
         */
        public Builder isProtected(Boolean isProtected) {
            return isProtected(Output.of(isProtected));
        }

        /**
         * @param resolverId The OCID of the target resolver.
         * 
         * @return builder
         * 
         */
        public Builder resolverId(@Nullable Output<String> resolverId) {
            $.resolverId = resolverId;
            return this;
        }

        /**
         * @param resolverId The OCID of the target resolver.
         * 
         * @return builder
         * 
         */
        public Builder resolverId(String resolverId) {
            return resolverId(Output.of(resolverId));
        }

        /**
         * @param rules (Updatable) Rules for the resolver. Rules are evaluated in order.
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<ResolverRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules (Updatable) Rules for the resolver. Rules are evaluated in order.
         * 
         * @return builder
         * 
         */
        public Builder rules(List<ResolverRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules (Updatable) Rules for the resolver. Rules are evaluated in order.
         * 
         * @return builder
         * 
         */
        public Builder rules(ResolverRuleArgs... rules) {
            return rules(List.of(rules));
        }

        /**
         * @param scope Value must be `PRIVATE` when creating private name resolvers.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Value must be `PRIVATE` when creating private name resolvers.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param self The canonical absolute URL of the resource.
         * 
         * @return builder
         * 
         */
        public Builder self(@Nullable Output<String> self) {
            $.self = self;
            return this;
        }

        /**
         * @param self The canonical absolute URL of the resource.
         * 
         * @return builder
         * 
         */
        public Builder self(String self) {
            return self(Output.of(self));
        }

        /**
         * @param state The current state of the resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the resource.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public ResolverState build() {
            return $;
        }
    }

}
