// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Analytics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Analytics.inputs.GetAnalyticsInstancesFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAnalyticsInstancesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAnalyticsInstancesArgs Empty = new GetAnalyticsInstancesArgs();

    /**
     * A filter to only return resources matching the capacity type enum. Values are case-insensitive.
     * 
     */
    @Import(name="capacityType")
    private @Nullable Output<String> capacityType;

    /**
     * @return A filter to only return resources matching the capacity type enum. Values are case-insensitive.
     * 
     */
    public Optional<Output<String>> capacityType() {
        return Optional.ofNullable(this.capacityType);
    }

    /**
     * The OCID of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to only return resources matching the feature set. Values are case-insensitive.
     * 
     */
    @Import(name="featureSet")
    private @Nullable Output<String> featureSet;

    /**
     * @return A filter to only return resources matching the feature set. Values are case-insensitive.
     * 
     */
    public Optional<Output<String>> featureSet() {
        return Optional.ofNullable(this.featureSet);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetAnalyticsInstancesFilterArgs>> filters;

    public Optional<Output<List<GetAnalyticsInstancesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only resources that match the given name exactly.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private GetAnalyticsInstancesArgs() {}

    private GetAnalyticsInstancesArgs(GetAnalyticsInstancesArgs $) {
        this.capacityType = $.capacityType;
        this.compartmentId = $.compartmentId;
        this.featureSet = $.featureSet;
        this.filters = $.filters;
        this.name = $.name;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAnalyticsInstancesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAnalyticsInstancesArgs $;

        public Builder() {
            $ = new GetAnalyticsInstancesArgs();
        }

        public Builder(GetAnalyticsInstancesArgs defaults) {
            $ = new GetAnalyticsInstancesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacityType A filter to only return resources matching the capacity type enum. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder capacityType(@Nullable Output<String> capacityType) {
            $.capacityType = capacityType;
            return this;
        }

        /**
         * @param capacityType A filter to only return resources matching the capacity type enum. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder capacityType(String capacityType) {
            return capacityType(Output.of(capacityType));
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param featureSet A filter to only return resources matching the feature set. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder featureSet(@Nullable Output<String> featureSet) {
            $.featureSet = featureSet;
            return this;
        }

        /**
         * @param featureSet A filter to only return resources matching the feature set. Values are case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder featureSet(String featureSet) {
            return featureSet(Output.of(featureSet));
        }

        public Builder filters(@Nullable Output<List<GetAnalyticsInstancesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetAnalyticsInstancesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetAnalyticsInstancesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name A filter to return only resources that match the given name exactly.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A filter to return only resources that match the given name exactly.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param state A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to only return resources matching the lifecycle state. The state value is case-insensitive.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public GetAnalyticsInstancesArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
