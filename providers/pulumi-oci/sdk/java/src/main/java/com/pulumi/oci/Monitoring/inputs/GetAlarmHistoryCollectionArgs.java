// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Monitoring.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetAlarmHistoryCollectionArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAlarmHistoryCollectionArgs Empty = new GetAlarmHistoryCollectionArgs();

    /**
     * The type of history entries to retrieve. State history (STATE_HISTORY) or state transition history (STATE_TRANSITION_HISTORY). If not specified, entries of both types are retrieved.  Example: `STATE_HISTORY`
     * 
     */
    @Import(name="alarmHistorytype")
    private Output</* @Nullable */ String> alarmHistorytype;

    /**
     * @return The type of history entries to retrieve. State history (STATE_HISTORY) or state transition history (STATE_TRANSITION_HISTORY). If not specified, entries of both types are retrieved.  Example: `STATE_HISTORY`
     * 
     */
    public Output</* @Nullable */ String> alarmHistorytype() {
        return this.alarmHistorytype;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of an alarm.
     * 
     */
    @Import(name="alarmId", required=true)
    private Output<String> alarmId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of an alarm.
     * 
     */
    public Output<String> alarmId() {
        return this.alarmId;
    }

    /**
     * A filter to return only alarm history entries with timestamps occurring on or after the specified date and time. Format defined by RFC3339.  Example: `2019-01-01T01:00:00.789Z`
     * 
     */
    @Import(name="timestampGreaterThanOrEqualTo")
    private Output</* @Nullable */ String> timestampGreaterThanOrEqualTo;

    /**
     * @return A filter to return only alarm history entries with timestamps occurring on or after the specified date and time. Format defined by RFC3339.  Example: `2019-01-01T01:00:00.789Z`
     * 
     */
    public Output</* @Nullable */ String> timestampGreaterThanOrEqualTo() {
        return this.timestampGreaterThanOrEqualTo;
    }

    /**
     * A filter to return only alarm history entries with timestamps occurring before the specified date and time. Format defined by RFC3339.  Example: `2019-01-02T01:00:00.789Z`
     * 
     */
    @Import(name="timestampLessThan")
    private Output</* @Nullable */ String> timestampLessThan;

    /**
     * @return A filter to return only alarm history entries with timestamps occurring before the specified date and time. Format defined by RFC3339.  Example: `2019-01-02T01:00:00.789Z`
     * 
     */
    public Output</* @Nullable */ String> timestampLessThan() {
        return this.timestampLessThan;
    }

    private GetAlarmHistoryCollectionArgs() {}

    private GetAlarmHistoryCollectionArgs(GetAlarmHistoryCollectionArgs $) {
        this.alarmHistorytype = $.alarmHistorytype;
        this.alarmId = $.alarmId;
        this.timestampGreaterThanOrEqualTo = $.timestampGreaterThanOrEqualTo;
        this.timestampLessThan = $.timestampLessThan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAlarmHistoryCollectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAlarmHistoryCollectionArgs $;

        public Builder() {
            $ = new GetAlarmHistoryCollectionArgs();
        }

        public Builder(GetAlarmHistoryCollectionArgs defaults) {
            $ = new GetAlarmHistoryCollectionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param alarmHistorytype The type of history entries to retrieve. State history (STATE_HISTORY) or state transition history (STATE_TRANSITION_HISTORY). If not specified, entries of both types are retrieved.  Example: `STATE_HISTORY`
         * 
         * @return builder
         * 
         */
        public Builder alarmHistorytype(Output</* @Nullable */ String> alarmHistorytype) {
            $.alarmHistorytype = alarmHistorytype;
            return this;
        }

        /**
         * @param alarmHistorytype The type of history entries to retrieve. State history (STATE_HISTORY) or state transition history (STATE_TRANSITION_HISTORY). If not specified, entries of both types are retrieved.  Example: `STATE_HISTORY`
         * 
         * @return builder
         * 
         */
        public Builder alarmHistorytype(@Nullable String alarmHistorytype) {
            return alarmHistorytype(Output.of(alarmHistorytype));
        }

        /**
         * @param alarmId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of an alarm.
         * 
         * @return builder
         * 
         */
        public Builder alarmId(Output<String> alarmId) {
            $.alarmId = alarmId;
            return this;
        }

        /**
         * @param alarmId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of an alarm.
         * 
         * @return builder
         * 
         */
        public Builder alarmId(String alarmId) {
            return alarmId(Output.of(alarmId));
        }

        /**
         * @param timestampGreaterThanOrEqualTo A filter to return only alarm history entries with timestamps occurring on or after the specified date and time. Format defined by RFC3339.  Example: `2019-01-01T01:00:00.789Z`
         * 
         * @return builder
         * 
         */
        public Builder timestampGreaterThanOrEqualTo(Output</* @Nullable */ String> timestampGreaterThanOrEqualTo) {
            $.timestampGreaterThanOrEqualTo = timestampGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timestampGreaterThanOrEqualTo A filter to return only alarm history entries with timestamps occurring on or after the specified date and time. Format defined by RFC3339.  Example: `2019-01-01T01:00:00.789Z`
         * 
         * @return builder
         * 
         */
        public Builder timestampGreaterThanOrEqualTo(@Nullable String timestampGreaterThanOrEqualTo) {
            return timestampGreaterThanOrEqualTo(Output.of(timestampGreaterThanOrEqualTo));
        }

        /**
         * @param timestampLessThan A filter to return only alarm history entries with timestamps occurring before the specified date and time. Format defined by RFC3339.  Example: `2019-01-02T01:00:00.789Z`
         * 
         * @return builder
         * 
         */
        public Builder timestampLessThan(Output</* @Nullable */ String> timestampLessThan) {
            $.timestampLessThan = timestampLessThan;
            return this;
        }

        /**
         * @param timestampLessThan A filter to return only alarm history entries with timestamps occurring before the specified date and time. Format defined by RFC3339.  Example: `2019-01-02T01:00:00.789Z`
         * 
         * @return builder
         * 
         */
        public Builder timestampLessThan(@Nullable String timestampLessThan) {
            return timestampLessThan(Output.of(timestampLessThan));
        }

        public GetAlarmHistoryCollectionArgs build() {
            $.alarmId = Objects.requireNonNull($.alarmId, "expected parameter 'alarmId' to be non-null");
            return $;
        }
    }

}
