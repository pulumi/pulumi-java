// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.GetOnpremConnectorsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOnpremConnectorsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOnpremConnectorsPlainArgs Empty = new GetOnpremConnectorsPlainArgs();

    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    @Import(name="accessLevel")
    private @Nullable String accessLevel;

    /**
     * @return Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }

    /**
     * A filter to return only resources that match the specified compartment OCID.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private @Nullable Boolean compartmentIdInSubtree;

    /**
     * @return Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    /**
     * A filter to return only resources that match the specified display name.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetOnpremConnectorsFilter> filters;

    public Optional<List<GetOnpremConnectorsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only the on-premises connector that matches the specified id.
     * 
     */
    @Import(name="onPremConnectorId")
    private @Nullable String onPremConnectorId;

    /**
     * @return A filter to return only the on-premises connector that matches the specified id.
     * 
     */
    public Optional<String> onPremConnectorId() {
        return Optional.ofNullable(this.onPremConnectorId);
    }

    /**
     * A filter to return only on-premises connector resources that match the specified lifecycle state.
     * 
     */
    @Import(name="onPremConnectorLifecycleState")
    private @Nullable String onPremConnectorLifecycleState;

    /**
     * @return A filter to return only on-premises connector resources that match the specified lifecycle state.
     * 
     */
    public Optional<String> onPremConnectorLifecycleState() {
        return Optional.ofNullable(this.onPremConnectorLifecycleState);
    }

    private GetOnpremConnectorsPlainArgs() {}

    private GetOnpremConnectorsPlainArgs(GetOnpremConnectorsPlainArgs $) {
        this.accessLevel = $.accessLevel;
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.onPremConnectorId = $.onPremConnectorId;
        this.onPremConnectorLifecycleState = $.onPremConnectorLifecycleState;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOnpremConnectorsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOnpremConnectorsPlainArgs $;

        public Builder() {
            $ = new GetOnpremConnectorsPlainArgs();
        }

        public Builder(GetOnpremConnectorsPlainArgs defaults) {
            $ = new GetOnpremConnectorsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessLevel Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
         * 
         * @return builder
         * 
         */
        public Builder accessLevel(@Nullable String accessLevel) {
            $.accessLevel = accessLevel;
            return this;
        }

        /**
         * @param compartmentId A filter to return only resources that match the specified compartment OCID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the specified display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetOnpremConnectorsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetOnpremConnectorsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param onPremConnectorId A filter to return only the on-premises connector that matches the specified id.
         * 
         * @return builder
         * 
         */
        public Builder onPremConnectorId(@Nullable String onPremConnectorId) {
            $.onPremConnectorId = onPremConnectorId;
            return this;
        }

        /**
         * @param onPremConnectorLifecycleState A filter to return only on-premises connector resources that match the specified lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder onPremConnectorLifecycleState(@Nullable String onPremConnectorLifecycleState) {
            $.onPremConnectorLifecycleState = onPremConnectorLifecycleState;
            return this;
        }

        public GetOnpremConnectorsPlainArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
