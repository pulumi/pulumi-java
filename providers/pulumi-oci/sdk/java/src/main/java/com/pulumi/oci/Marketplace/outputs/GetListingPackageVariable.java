// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetListingPackageVariable {
    /**
     * @return The data type of the variable.
     * 
     */
    private final String dataType;
    /**
     * @return The variable&#39;s default value.
     * 
     */
    private final String defaultValue;
    /**
     * @return A description of the variable.
     * 
     */
    private final String description;
    /**
     * @return A brief textual description that helps to explain the variable.
     * 
     */
    private final String hintMessage;
    /**
     * @return Whether the variable is mandatory.
     * 
     */
    private final Boolean isMandatory;
    /**
     * @return The name of the variable.
     * 
     */
    private final String name;

    @CustomType.Constructor
    private GetListingPackageVariable(
        @CustomType.Parameter("dataType") String dataType,
        @CustomType.Parameter("defaultValue") String defaultValue,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("hintMessage") String hintMessage,
        @CustomType.Parameter("isMandatory") Boolean isMandatory,
        @CustomType.Parameter("name") String name) {
        this.dataType = dataType;
        this.defaultValue = defaultValue;
        this.description = description;
        this.hintMessage = hintMessage;
        this.isMandatory = isMandatory;
        this.name = name;
    }

    /**
     * @return The data type of the variable.
     * 
     */
    public String dataType() {
        return this.dataType;
    }
    /**
     * @return The variable&#39;s default value.
     * 
     */
    public String defaultValue() {
        return this.defaultValue;
    }
    /**
     * @return A description of the variable.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A brief textual description that helps to explain the variable.
     * 
     */
    public String hintMessage() {
        return this.hintMessage;
    }
    /**
     * @return Whether the variable is mandatory.
     * 
     */
    public Boolean isMandatory() {
        return this.isMandatory;
    }
    /**
     * @return The name of the variable.
     * 
     */
    public String name() {
        return this.name;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListingPackageVariable defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dataType;
        private String defaultValue;
        private String description;
        private String hintMessage;
        private Boolean isMandatory;
        private String name;

        public Builder() {
    	      // Empty
        }

        public Builder(GetListingPackageVariable defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataType = defaults.dataType;
    	      this.defaultValue = defaults.defaultValue;
    	      this.description = defaults.description;
    	      this.hintMessage = defaults.hintMessage;
    	      this.isMandatory = defaults.isMandatory;
    	      this.name = defaults.name;
        }

        public Builder dataType(String dataType) {
            this.dataType = Objects.requireNonNull(dataType);
            return this;
        }
        public Builder defaultValue(String defaultValue) {
            this.defaultValue = Objects.requireNonNull(defaultValue);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder hintMessage(String hintMessage) {
            this.hintMessage = Objects.requireNonNull(hintMessage);
            return this;
        }
        public Builder isMandatory(Boolean isMandatory) {
            this.isMandatory = Objects.requireNonNull(isMandatory);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }        public GetListingPackageVariable build() {
            return new GetListingPackageVariable(dataType, defaultValue, description, hintMessage, isMandatory, name);
        }
    }
}
