// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetExternalDatabaseConnectorArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetExternalDatabaseConnectorArgs Empty = new GetExternalDatabaseConnectorArgs();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database connector resource (`ExternalDatabaseConnectorId`).
     * 
     */
    @Import(name="externalDatabaseConnectorId", required=true)
    private String externalDatabaseConnectorId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database connector resource (`ExternalDatabaseConnectorId`).
     * 
     */
    public String externalDatabaseConnectorId() {
        return this.externalDatabaseConnectorId;
    }

    private GetExternalDatabaseConnectorArgs() {}

    private GetExternalDatabaseConnectorArgs(GetExternalDatabaseConnectorArgs $) {
        this.externalDatabaseConnectorId = $.externalDatabaseConnectorId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetExternalDatabaseConnectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetExternalDatabaseConnectorArgs $;

        public Builder() {
            $ = new GetExternalDatabaseConnectorArgs();
        }

        public Builder(GetExternalDatabaseConnectorArgs defaults) {
            $ = new GetExternalDatabaseConnectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param externalDatabaseConnectorId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the external database connector resource (`ExternalDatabaseConnectorId`).
         * 
         * @return builder
         * 
         */
        public Builder externalDatabaseConnectorId(String externalDatabaseConnectorId) {
            $.externalDatabaseConnectorId = externalDatabaseConnectorId;
            return this;
        }

        public GetExternalDatabaseConnectorArgs build() {
            $.externalDatabaseConnectorId = Objects.requireNonNull($.externalDatabaseConnectorId, "expected parameter 'externalDatabaseConnectorId' to be non-null");
            return $;
        }
    }

}
