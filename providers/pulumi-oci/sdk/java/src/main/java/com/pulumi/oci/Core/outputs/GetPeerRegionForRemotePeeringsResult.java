// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetPeerRegionForRemotePeeringsFilter;
import com.pulumi.oci.Core.outputs.GetPeerRegionForRemotePeeringsPeerRegionForRemotePeering;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetPeerRegionForRemotePeeringsResult {
    private final @Nullable List<GetPeerRegionForRemotePeeringsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of peer_region_for_remote_peerings.
     * 
     */
    private final List<GetPeerRegionForRemotePeeringsPeerRegionForRemotePeering> peerRegionForRemotePeerings;

    @CustomType.Constructor
    private GetPeerRegionForRemotePeeringsResult(
        @CustomType.Parameter("filters") @Nullable List<GetPeerRegionForRemotePeeringsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("peerRegionForRemotePeerings") List<GetPeerRegionForRemotePeeringsPeerRegionForRemotePeering> peerRegionForRemotePeerings) {
        this.filters = filters;
        this.id = id;
        this.peerRegionForRemotePeerings = peerRegionForRemotePeerings;
    }

    public List<GetPeerRegionForRemotePeeringsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of peer_region_for_remote_peerings.
     * 
     */
    public List<GetPeerRegionForRemotePeeringsPeerRegionForRemotePeering> peerRegionForRemotePeerings() {
        return this.peerRegionForRemotePeerings;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPeerRegionForRemotePeeringsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<GetPeerRegionForRemotePeeringsFilter> filters;
        private String id;
        private List<GetPeerRegionForRemotePeeringsPeerRegionForRemotePeering> peerRegionForRemotePeerings;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPeerRegionForRemotePeeringsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.peerRegionForRemotePeerings = defaults.peerRegionForRemotePeerings;
        }

        public Builder filters(@Nullable List<GetPeerRegionForRemotePeeringsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetPeerRegionForRemotePeeringsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder peerRegionForRemotePeerings(List<GetPeerRegionForRemotePeeringsPeerRegionForRemotePeering> peerRegionForRemotePeerings) {
            this.peerRegionForRemotePeerings = Objects.requireNonNull(peerRegionForRemotePeerings);
            return this;
        }
        public Builder peerRegionForRemotePeerings(GetPeerRegionForRemotePeeringsPeerRegionForRemotePeering... peerRegionForRemotePeerings) {
            return peerRegionForRemotePeerings(List.of(peerRegionForRemotePeerings));
        }        public GetPeerRegionForRemotePeeringsResult build() {
            return new GetPeerRegionForRemotePeeringsResult(filters, id, peerRegionForRemotePeerings);
        }
    }
}
