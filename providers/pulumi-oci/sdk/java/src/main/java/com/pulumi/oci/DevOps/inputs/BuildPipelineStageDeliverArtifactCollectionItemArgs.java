// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildPipelineStageDeliverArtifactCollectionItemArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildPipelineStageDeliverArtifactCollectionItemArgs Empty = new BuildPipelineStageDeliverArtifactCollectionItemArgs();

    /**
     * (Updatable) Artifact identifier that contains the artifact definition.
     * 
     */
    @Import(name="artifactId")
    private @Nullable Output<String> artifactId;

    /**
     * @return (Updatable) Artifact identifier that contains the artifact definition.
     * 
     */
    public Optional<Output<String>> artifactId() {
        return Optional.ofNullable(this.artifactId);
    }

    /**
     * (Updatable) Name of the artifact specified in the build_spec.yaml file.
     * 
     */
    @Import(name="artifactName")
    private @Nullable Output<String> artifactName;

    /**
     * @return (Updatable) Name of the artifact specified in the build_spec.yaml file.
     * 
     */
    public Optional<Output<String>> artifactName() {
        return Optional.ofNullable(this.artifactName);
    }

    private BuildPipelineStageDeliverArtifactCollectionItemArgs() {}

    private BuildPipelineStageDeliverArtifactCollectionItemArgs(BuildPipelineStageDeliverArtifactCollectionItemArgs $) {
        this.artifactId = $.artifactId;
        this.artifactName = $.artifactName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildPipelineStageDeliverArtifactCollectionItemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildPipelineStageDeliverArtifactCollectionItemArgs $;

        public Builder() {
            $ = new BuildPipelineStageDeliverArtifactCollectionItemArgs();
        }

        public Builder(BuildPipelineStageDeliverArtifactCollectionItemArgs defaults) {
            $ = new BuildPipelineStageDeliverArtifactCollectionItemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param artifactId (Updatable) Artifact identifier that contains the artifact definition.
         * 
         * @return builder
         * 
         */
        public Builder artifactId(@Nullable Output<String> artifactId) {
            $.artifactId = artifactId;
            return this;
        }

        /**
         * @param artifactId (Updatable) Artifact identifier that contains the artifact definition.
         * 
         * @return builder
         * 
         */
        public Builder artifactId(String artifactId) {
            return artifactId(Output.of(artifactId));
        }

        /**
         * @param artifactName (Updatable) Name of the artifact specified in the build_spec.yaml file.
         * 
         * @return builder
         * 
         */
        public Builder artifactName(@Nullable Output<String> artifactName) {
            $.artifactName = artifactName;
            return this;
        }

        /**
         * @param artifactName (Updatable) Name of the artifact specified in the build_spec.yaml file.
         * 
         * @return builder
         * 
         */
        public Builder artifactName(String artifactName) {
            return artifactName(Output.of(artifactName));
        }

        public BuildPipelineStageDeliverArtifactCollectionItemArgs build() {
            return $;
        }
    }

}
