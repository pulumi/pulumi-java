// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetTagDefaultsFilter;
import com.pulumi.oci.Identity.outputs.GetTagDefaultsTagDefault;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTagDefaultsResult {
    /**
     * @return The OCID of the compartment. The tag default applies to all new resources that get created in the compartment. Resources that existed before the tag default was created are not tagged.
     * 
     */
    private final @Nullable String compartmentId;
    private final @Nullable List<GetTagDefaultsFilter> filters;
    /**
     * @return The OCID of the tag default.
     * 
     */
    private final @Nullable String id;
    /**
     * @return The tag default&#39;s current state. After creating a `TagDefault`, make sure its `lifecycleState` is ACTIVE before using it.
     * 
     */
    private final @Nullable String state;
    /**
     * @return The list of tag_defaults.
     * 
     */
    private final List<GetTagDefaultsTagDefault> tagDefaults;
    /**
     * @return The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
     * 
     */
    private final @Nullable String tagDefinitionId;

    @CustomType.Constructor
    private GetTagDefaultsResult(
        @CustomType.Parameter("compartmentId") @Nullable String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetTagDefaultsFilter> filters,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("tagDefaults") List<GetTagDefaultsTagDefault> tagDefaults,
        @CustomType.Parameter("tagDefinitionId") @Nullable String tagDefinitionId) {
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.state = state;
        this.tagDefaults = tagDefaults;
        this.tagDefinitionId = tagDefinitionId;
    }

    /**
     * @return The OCID of the compartment. The tag default applies to all new resources that get created in the compartment. Resources that existed before the tag default was created are not tagged.
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public List<GetTagDefaultsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The OCID of the tag default.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The tag default&#39;s current state. After creating a `TagDefault`, make sure its `lifecycleState` is ACTIVE before using it.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The list of tag_defaults.
     * 
     */
    public List<GetTagDefaultsTagDefault> tagDefaults() {
        return this.tagDefaults;
    }
    /**
     * @return The OCID of the tag definition. The tag default will always assign a default value for this tag definition.
     * 
     */
    public Optional<String> tagDefinitionId() {
        return Optional.ofNullable(this.tagDefinitionId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTagDefaultsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable List<GetTagDefaultsFilter> filters;
        private @Nullable String id;
        private @Nullable String state;
        private List<GetTagDefaultsTagDefault> tagDefaults;
        private @Nullable String tagDefinitionId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTagDefaultsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.tagDefaults = defaults.tagDefaults;
    	      this.tagDefinitionId = defaults.tagDefinitionId;
        }

        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        public Builder filters(@Nullable List<GetTagDefaultsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetTagDefaultsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder tagDefaults(List<GetTagDefaultsTagDefault> tagDefaults) {
            this.tagDefaults = Objects.requireNonNull(tagDefaults);
            return this;
        }
        public Builder tagDefaults(GetTagDefaultsTagDefault... tagDefaults) {
            return tagDefaults(List.of(tagDefaults));
        }
        public Builder tagDefinitionId(@Nullable String tagDefinitionId) {
            this.tagDefinitionId = tagDefinitionId;
            return this;
        }        public GetTagDefaultsResult build() {
            return new GetTagDefaultsResult(compartmentId, filters, id, state, tagDefaults, tagDefinitionId);
        }
    }
}
