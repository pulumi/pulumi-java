// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Database.outputs.GetExternalPluggableDatabasesExternalPluggableDatabase;
import com.pulumi.oci.Database.outputs.GetExternalPluggableDatabasesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetExternalPluggableDatabasesResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return The user-friendly name for the external database. The name does not have to be unique.
     * 
     */
    private final @Nullable String displayName;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalContainerDatabaseDetails) that contains the specified [external pluggable database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalPluggableDatabaseDetails) resource.
     * 
     */
    private final @Nullable String externalContainerDatabaseId;
    /**
     * @return The list of external_pluggable_databases.
     * 
     */
    private final List<GetExternalPluggableDatabasesExternalPluggableDatabase> externalPluggableDatabases;
    private final @Nullable List<GetExternalPluggableDatabasesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The current state of the Oracle Cloud Infrastructure external database resource.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetExternalPluggableDatabasesResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("externalContainerDatabaseId") @Nullable String externalContainerDatabaseId,
        @CustomType.Parameter("externalPluggableDatabases") List<GetExternalPluggableDatabasesExternalPluggableDatabase> externalPluggableDatabases,
        @CustomType.Parameter("filters") @Nullable List<GetExternalPluggableDatabasesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("state") @Nullable String state) {
        this.compartmentId = compartmentId;
        this.displayName = displayName;
        this.externalContainerDatabaseId = externalContainerDatabaseId;
        this.externalPluggableDatabases = externalPluggableDatabases;
        this.filters = filters;
        this.id = id;
        this.state = state;
    }

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The user-friendly name for the external database. The name does not have to be unique.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the [external container database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalContainerDatabaseDetails) that contains the specified [external pluggable database](https://docs.cloud.oracle.com/iaas/api/#/en/database/latest/datatypes/CreateExternalPluggableDatabaseDetails) resource.
     * 
     */
    public Optional<String> externalContainerDatabaseId() {
        return Optional.ofNullable(this.externalContainerDatabaseId);
    }
    /**
     * @return The list of external_pluggable_databases.
     * 
     */
    public List<GetExternalPluggableDatabasesExternalPluggableDatabase> externalPluggableDatabases() {
        return this.externalPluggableDatabases;
    }
    public List<GetExternalPluggableDatabasesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The current state of the Oracle Cloud Infrastructure external database resource.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetExternalPluggableDatabasesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable String externalContainerDatabaseId;
        private List<GetExternalPluggableDatabasesExternalPluggableDatabase> externalPluggableDatabases;
        private @Nullable List<GetExternalPluggableDatabasesFilter> filters;
        private String id;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetExternalPluggableDatabasesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.externalContainerDatabaseId = defaults.externalContainerDatabaseId;
    	      this.externalPluggableDatabases = defaults.externalPluggableDatabases;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder externalContainerDatabaseId(@Nullable String externalContainerDatabaseId) {
            this.externalContainerDatabaseId = externalContainerDatabaseId;
            return this;
        }
        public Builder externalPluggableDatabases(List<GetExternalPluggableDatabasesExternalPluggableDatabase> externalPluggableDatabases) {
            this.externalPluggableDatabases = Objects.requireNonNull(externalPluggableDatabases);
            return this;
        }
        public Builder externalPluggableDatabases(GetExternalPluggableDatabasesExternalPluggableDatabase... externalPluggableDatabases) {
            return externalPluggableDatabases(List.of(externalPluggableDatabases));
        }
        public Builder filters(@Nullable List<GetExternalPluggableDatabasesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetExternalPluggableDatabasesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetExternalPluggableDatabasesResult build() {
            return new GetExternalPluggableDatabasesResult(compartmentId, displayName, externalContainerDatabaseId, externalPluggableDatabases, filters, id, state);
        }
    }
}
