// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.UsageProxy.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.UsageProxy.outputs.GetSubscriptionProductItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSubscriptionProductResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of product rewards summaries.
     * 
     */
    private final List<GetSubscriptionProductItem> items;
    private final @Nullable String producttype;
    private final String subscriptionId;
    private final String tenancyId;
    private final String usagePeriodKey;

    @CustomType.Constructor
    private GetSubscriptionProductResult(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("items") List<GetSubscriptionProductItem> items,
        @CustomType.Parameter("producttype") @Nullable String producttype,
        @CustomType.Parameter("subscriptionId") String subscriptionId,
        @CustomType.Parameter("tenancyId") String tenancyId,
        @CustomType.Parameter("usagePeriodKey") String usagePeriodKey) {
        this.id = id;
        this.items = items;
        this.producttype = producttype;
        this.subscriptionId = subscriptionId;
        this.tenancyId = tenancyId;
        this.usagePeriodKey = usagePeriodKey;
    }

    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of product rewards summaries.
     * 
     */
    public List<GetSubscriptionProductItem> items() {
        return this.items;
    }
    public Optional<String> producttype() {
        return Optional.ofNullable(this.producttype);
    }
    public String subscriptionId() {
        return this.subscriptionId;
    }
    public String tenancyId() {
        return this.tenancyId;
    }
    public String usagePeriodKey() {
        return this.usagePeriodKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionProductResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private List<GetSubscriptionProductItem> items;
        private @Nullable String producttype;
        private String subscriptionId;
        private String tenancyId;
        private String usagePeriodKey;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSubscriptionProductResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.producttype = defaults.producttype;
    	      this.subscriptionId = defaults.subscriptionId;
    	      this.tenancyId = defaults.tenancyId;
    	      this.usagePeriodKey = defaults.usagePeriodKey;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder items(List<GetSubscriptionProductItem> items) {
            this.items = Objects.requireNonNull(items);
            return this;
        }
        public Builder items(GetSubscriptionProductItem... items) {
            return items(List.of(items));
        }
        public Builder producttype(@Nullable String producttype) {
            this.producttype = producttype;
            return this;
        }
        public Builder subscriptionId(String subscriptionId) {
            this.subscriptionId = Objects.requireNonNull(subscriptionId);
            return this;
        }
        public Builder tenancyId(String tenancyId) {
            this.tenancyId = Objects.requireNonNull(tenancyId);
            return this;
        }
        public Builder usagePeriodKey(String usagePeriodKey) {
            this.usagePeriodKey = Objects.requireNonNull(usagePeriodKey);
            return this;
        }        public GetSubscriptionProductResult build() {
            return new GetSubscriptionProductResult(id, items, producttype, subscriptionId, tenancyId, usagePeriodKey);
        }
    }
}
