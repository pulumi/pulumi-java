// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Blockchain.inputs.BlockchainPlatformReplicasArgs;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BlockchainPlatformArgs extends com.pulumi.resources.ResourceArgs {

    public static final BlockchainPlatformArgs Empty = new BlockchainPlatformArgs();

    /**
     * Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file. The Archive file is a zip file containing third part CA Certificates, the ca key and certificate files used when issuing enrollment certificates (ECerts) and transaction certificates (TCerts). The chainfile (if it exists) contains the certificate chain which should be trusted for this CA, where the 1st in the chain is always the root CA certificate. File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
     * 
     */
    @Import(name="caCertArchiveText")
    private @Nullable Output<String> caCertArchiveText;

    /**
     * @return Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file. The Archive file is a zip file containing third part CA Certificates, the ca key and certificate files used when issuing enrollment certificates (ECerts) and transaction certificates (TCerts). The chainfile (if it exists) contains the certificate chain which should be trusted for this CA, where the 1st in the chain is always the root CA certificate. File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
     * 
     */
    public Optional<Output<String>> caCertArchiveText() {
        return Optional.ofNullable(this.caCertArchiveText);
    }

    /**
     * (Updatable) Compartment Identifier
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
     * 
     */
    @Import(name="computeShape", required=true)
    private Output<String> computeShape;

    /**
     * @return Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
     * 
     */
    public Output<String> computeShape() {
        return this.computeShape;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Platform Instance Description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return (Updatable) Platform Instance Description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Platform Instance Display name, can be renamed
     * 
     */
    @Import(name="displayName", required=true)
    private Output<String> displayName;

    /**
     * @return Platform Instance Display name, can be renamed
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }

    /**
     * Identifier for a federated user
     * 
     */
    @Import(name="federatedUserId")
    private @Nullable Output<String> federatedUserId;

    /**
     * @return Identifier for a federated user
     * 
     */
    public Optional<Output<String>> federatedUserId() {
        return Optional.ofNullable(this.federatedUserId);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * IDCS access token with Identity Domain Administrator role
     * 
     */
    @Import(name="idcsAccessToken", required=true)
    private Output<String> idcsAccessToken;

    /**
     * @return IDCS access token with Identity Domain Administrator role
     * 
     */
    public Output<String> idcsAccessToken() {
        return this.idcsAccessToken;
    }

    /**
     * Bring your own license
     * 
     */
    @Import(name="isByol")
    private @Nullable Output<Boolean> isByol;

    /**
     * @return Bring your own license
     * 
     */
    public Optional<Output<Boolean>> isByol() {
        return Optional.ofNullable(this.isByol);
    }

    /**
     * (Updatable) Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     * 
     */
    @Import(name="loadBalancerShape")
    private @Nullable Output<String> loadBalancerShape;

    /**
     * @return (Updatable) Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     * 
     */
    public Optional<Output<String>> loadBalancerShape() {
        return Optional.ofNullable(this.loadBalancerShape);
    }

    /**
     * Role of platform - founder or participant
     * 
     */
    @Import(name="platformRole", required=true)
    private Output<String> platformRole;

    /**
     * @return Role of platform - founder or participant
     * 
     */
    public Output<String> platformRole() {
        return this.platformRole;
    }

    /**
     * Platform version
     * 
     */
    @Import(name="platformVersion")
    private @Nullable Output<String> platformVersion;

    /**
     * @return Platform version
     * 
     */
    public Optional<Output<String>> platformVersion() {
        return Optional.ofNullable(this.platformVersion);
    }

    /**
     * Number of replicas of service components like Rest Proxy, CA and Console
     * 
     */
    @Import(name="replicas")
    private @Nullable Output<BlockchainPlatformReplicasArgs> replicas;

    /**
     * @return Number of replicas of service components like Rest Proxy, CA and Console
     * 
     */
    public Optional<Output<BlockchainPlatformReplicasArgs>> replicas() {
        return Optional.ofNullable(this.replicas);
    }

    /**
     * Storage size in TBs
     * 
     */
    @Import(name="storageSizeInTbs")
    private @Nullable Output<Double> storageSizeInTbs;

    /**
     * @return Storage size in TBs
     * 
     */
    public Optional<Output<Double>> storageSizeInTbs() {
        return Optional.ofNullable(this.storageSizeInTbs);
    }

    /**
     * Number of total OCPUs allocated to the platform cluster
     * 
     */
    @Import(name="totalOcpuCapacity")
    private @Nullable Output<Integer> totalOcpuCapacity;

    /**
     * @return Number of total OCPUs allocated to the platform cluster
     * 
     */
    public Optional<Output<Integer>> totalOcpuCapacity() {
        return Optional.ofNullable(this.totalOcpuCapacity);
    }

    private BlockchainPlatformArgs() {}

    private BlockchainPlatformArgs(BlockchainPlatformArgs $) {
        this.caCertArchiveText = $.caCertArchiveText;
        this.compartmentId = $.compartmentId;
        this.computeShape = $.computeShape;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.displayName = $.displayName;
        this.federatedUserId = $.federatedUserId;
        this.freeformTags = $.freeformTags;
        this.idcsAccessToken = $.idcsAccessToken;
        this.isByol = $.isByol;
        this.loadBalancerShape = $.loadBalancerShape;
        this.platformRole = $.platformRole;
        this.platformVersion = $.platformVersion;
        this.replicas = $.replicas;
        this.storageSizeInTbs = $.storageSizeInTbs;
        this.totalOcpuCapacity = $.totalOcpuCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlockchainPlatformArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlockchainPlatformArgs $;

        public Builder() {
            $ = new BlockchainPlatformArgs();
        }

        public Builder(BlockchainPlatformArgs defaults) {
            $ = new BlockchainPlatformArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param caCertArchiveText Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file. The Archive file is a zip file containing third part CA Certificates, the ca key and certificate files used when issuing enrollment certificates (ECerts) and transaction certificates (TCerts). The chainfile (if it exists) contains the certificate chain which should be trusted for this CA, where the 1st in the chain is always the root CA certificate. File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
         * 
         * @return builder
         * 
         */
        public Builder caCertArchiveText(@Nullable Output<String> caCertArchiveText) {
            $.caCertArchiveText = caCertArchiveText;
            return this;
        }

        /**
         * @param caCertArchiveText Base64 encoded text in ASCII character set of a Thirdparty CA Certificates archive file. The Archive file is a zip file containing third part CA Certificates, the ca key and certificate files used when issuing enrollment certificates (ECerts) and transaction certificates (TCerts). The chainfile (if it exists) contains the certificate chain which should be trusted for this CA, where the 1st in the chain is always the root CA certificate. File list in zip file [ca-cert.pem,ca-key.pem,ca-chain.pem(optional)].
         * 
         * @return builder
         * 
         */
        public Builder caCertArchiveText(String caCertArchiveText) {
            return caCertArchiveText(Output.of(caCertArchiveText));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param computeShape Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
         * 
         * @return builder
         * 
         */
        public Builder computeShape(Output<String> computeShape) {
            $.computeShape = computeShape;
            return this;
        }

        /**
         * @param computeShape Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE
         * 
         * @return builder
         * 
         */
        public Builder computeShape(String computeShape) {
            return computeShape(Output.of(computeShape));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) Platform Instance Description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) Platform Instance Description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param displayName Platform Instance Display name, can be renamed
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Platform Instance Display name, can be renamed
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param federatedUserId Identifier for a federated user
         * 
         * @return builder
         * 
         */
        public Builder federatedUserId(@Nullable Output<String> federatedUserId) {
            $.federatedUserId = federatedUserId;
            return this;
        }

        /**
         * @param federatedUserId Identifier for a federated user
         * 
         * @return builder
         * 
         */
        public Builder federatedUserId(String federatedUserId) {
            return federatedUserId(Output.of(federatedUserId));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param idcsAccessToken IDCS access token with Identity Domain Administrator role
         * 
         * @return builder
         * 
         */
        public Builder idcsAccessToken(Output<String> idcsAccessToken) {
            $.idcsAccessToken = idcsAccessToken;
            return this;
        }

        /**
         * @param idcsAccessToken IDCS access token with Identity Domain Administrator role
         * 
         * @return builder
         * 
         */
        public Builder idcsAccessToken(String idcsAccessToken) {
            return idcsAccessToken(Output.of(idcsAccessToken));
        }

        /**
         * @param isByol Bring your own license
         * 
         * @return builder
         * 
         */
        public Builder isByol(@Nullable Output<Boolean> isByol) {
            $.isByol = isByol;
            return this;
        }

        /**
         * @param isByol Bring your own license
         * 
         * @return builder
         * 
         */
        public Builder isByol(Boolean isByol) {
            return isByol(Output.of(isByol));
        }

        /**
         * @param loadBalancerShape (Updatable) Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerShape(@Nullable Output<String> loadBalancerShape) {
            $.loadBalancerShape = loadBalancerShape;
            return this;
        }

        /**
         * @param loadBalancerShape (Updatable) Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
         * 
         * @return builder
         * 
         */
        public Builder loadBalancerShape(String loadBalancerShape) {
            return loadBalancerShape(Output.of(loadBalancerShape));
        }

        /**
         * @param platformRole Role of platform - founder or participant
         * 
         * @return builder
         * 
         */
        public Builder platformRole(Output<String> platformRole) {
            $.platformRole = platformRole;
            return this;
        }

        /**
         * @param platformRole Role of platform - founder or participant
         * 
         * @return builder
         * 
         */
        public Builder platformRole(String platformRole) {
            return platformRole(Output.of(platformRole));
        }

        /**
         * @param platformVersion Platform version
         * 
         * @return builder
         * 
         */
        public Builder platformVersion(@Nullable Output<String> platformVersion) {
            $.platformVersion = platformVersion;
            return this;
        }

        /**
         * @param platformVersion Platform version
         * 
         * @return builder
         * 
         */
        public Builder platformVersion(String platformVersion) {
            return platformVersion(Output.of(platformVersion));
        }

        /**
         * @param replicas Number of replicas of service components like Rest Proxy, CA and Console
         * 
         * @return builder
         * 
         */
        public Builder replicas(@Nullable Output<BlockchainPlatformReplicasArgs> replicas) {
            $.replicas = replicas;
            return this;
        }

        /**
         * @param replicas Number of replicas of service components like Rest Proxy, CA and Console
         * 
         * @return builder
         * 
         */
        public Builder replicas(BlockchainPlatformReplicasArgs replicas) {
            return replicas(Output.of(replicas));
        }

        /**
         * @param storageSizeInTbs Storage size in TBs
         * 
         * @return builder
         * 
         */
        public Builder storageSizeInTbs(@Nullable Output<Double> storageSizeInTbs) {
            $.storageSizeInTbs = storageSizeInTbs;
            return this;
        }

        /**
         * @param storageSizeInTbs Storage size in TBs
         * 
         * @return builder
         * 
         */
        public Builder storageSizeInTbs(Double storageSizeInTbs) {
            return storageSizeInTbs(Output.of(storageSizeInTbs));
        }

        /**
         * @param totalOcpuCapacity Number of total OCPUs allocated to the platform cluster
         * 
         * @return builder
         * 
         */
        public Builder totalOcpuCapacity(@Nullable Output<Integer> totalOcpuCapacity) {
            $.totalOcpuCapacity = totalOcpuCapacity;
            return this;
        }

        /**
         * @param totalOcpuCapacity Number of total OCPUs allocated to the platform cluster
         * 
         * @return builder
         * 
         */
        public Builder totalOcpuCapacity(Integer totalOcpuCapacity) {
            return totalOcpuCapacity(Output.of(totalOcpuCapacity));
        }

        public BlockchainPlatformArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.computeShape = Objects.requireNonNull($.computeShape, "expected parameter 'computeShape' to be non-null");
            $.displayName = Objects.requireNonNull($.displayName, "expected parameter 'displayName' to be non-null");
            $.idcsAccessToken = Objects.requireNonNull($.idcsAccessToken, "expected parameter 'idcsAccessToken' to be non-null");
            $.platformRole = Objects.requireNonNull($.platformRole, "expected parameter 'platformRole' to be non-null");
            return $;
        }
    }

}
