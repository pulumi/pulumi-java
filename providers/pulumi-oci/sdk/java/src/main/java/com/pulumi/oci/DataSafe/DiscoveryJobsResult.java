// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.DataSafe.DiscoveryJobsResultArgs;
import com.pulumi.oci.DataSafe.inputs.DiscoveryJobsResultState;
import com.pulumi.oci.DataSafe.outputs.DiscoveryJobsResultModifiedAttribute;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * This resource provides the Discovery Jobs Result resource in Oracle Cloud Infrastructure Data Safe service.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * DiscoveryJobsResults can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:DataSafe/discoveryJobsResult:DiscoveryJobsResult test_discovery_jobs_result &#34;discoveryJobs/{discoveryJobId}/results/{resultKey}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:DataSafe/discoveryJobsResult:DiscoveryJobsResult")
public class DiscoveryJobsResult extends com.pulumi.resources.CustomResource {
    /**
     * Unique keys identifying the columns that are application-level (non-dictionary) children of the sensitive column.
     * 
     */
    @Export(name="appDefinedChildColumnKeys", type=List.class, parameters={String.class})
    private Output<List<String>> appDefinedChildColumnKeys;

    /**
     * @return Unique keys identifying the columns that are application-level (non-dictionary) children of the sensitive column.
     * 
     */
    public Output<List<String>> appDefinedChildColumnKeys() {
        return this.appDefinedChildColumnKeys;
    }
    /**
     * The name of the application. An application is an entity that is identified by a schema and stores sensitive information for that schema. Its value will be same as schemaName, if no value is passed.
     * 
     */
    @Export(name="appName", type=String.class, parameters={})
    private Output<String> appName;

    /**
     * @return The name of the application. An application is an entity that is identified by a schema and stores sensitive information for that schema. Its value will be same as schemaName, if no value is passed.
     * 
     */
    public Output<String> appName() {
        return this.appName;
    }
    /**
     * The name of the sensitive column.
     * 
     */
    @Export(name="columnName", type=String.class, parameters={})
    private Output<String> columnName;

    /**
     * @return The name of the sensitive column.
     * 
     */
    public Output<String> columnName() {
        return this.columnName;
    }
    /**
     * The data type of the sensitive column.
     * 
     */
    @Export(name="dataType", type=String.class, parameters={})
    private Output<String> dataType;

    /**
     * @return The data type of the sensitive column.
     * 
     */
    public Output<String> dataType() {
        return this.dataType;
    }
    /**
     * Unique keys identifying the columns that are database-level (dictionary-defined) children of the sensitive column.
     * 
     */
    @Export(name="dbDefinedChildColumnKeys", type=List.class, parameters={String.class})
    private Output<List<String>> dbDefinedChildColumnKeys;

    /**
     * @return Unique keys identifying the columns that are database-level (dictionary-defined) children of the sensitive column.
     * 
     */
    public Output<List<String>> dbDefinedChildColumnKeys() {
        return this.dbDefinedChildColumnKeys;
    }
    @Export(name="discoveryJobId", type=String.class, parameters={})
    private Output<String> discoveryJobId;

    public Output<String> discoveryJobId() {
        return this.discoveryJobId;
    }
    /**
     * The type of the discovery result. It can be one of the following three types: NEW: A new sensitive column in the target database that is not in the sensitive data model. DELETED: A column that is present in the sensitive data model but has been deleted from the target database. MODIFIED: A column that is present in the target database as well as the sensitive data model but some of its attributes have been modified.
     * 
     */
    @Export(name="discoveryType", type=String.class, parameters={})
    private Output<String> discoveryType;

    /**
     * @return The type of the discovery result. It can be one of the following three types: NEW: A new sensitive column in the target database that is not in the sensitive data model. DELETED: A column that is present in the sensitive data model but has been deleted from the target database. MODIFIED: A column that is present in the target database as well as the sensitive data model but some of its attributes have been modified.
     * 
     */
    public Output<String> discoveryType() {
        return this.discoveryType;
    }
    /**
     * The estimated number of data values the column has in the associated database.
     * 
     */
    @Export(name="estimatedDataValueCount", type=String.class, parameters={})
    private Output<String> estimatedDataValueCount;

    /**
     * @return The estimated number of data values the column has in the associated database.
     * 
     */
    public Output<String> estimatedDataValueCount() {
        return this.estimatedDataValueCount;
    }
    /**
     * Indicates if the discovery result has been processed. You can update this attribute using the PatchDiscoveryJobResults operation to track whether the discovery result has already been processed and applied to the sensitive data model.
     * 
     */
    @Export(name="isResultApplied", type=Boolean.class, parameters={})
    private Output<Boolean> isResultApplied;

    /**
     * @return Indicates if the discovery result has been processed. You can update this attribute using the PatchDiscoveryJobResults operation to track whether the discovery result has already been processed and applied to the sensitive data model.
     * 
     */
    public Output<Boolean> isResultApplied() {
        return this.isResultApplied;
    }
    /**
     * The unique key that identifies the discovery result.
     * 
     */
    @Export(name="key", type=String.class, parameters={})
    private Output<String> key;

    /**
     * @return The unique key that identifies the discovery result.
     * 
     */
    public Output<String> key() {
        return this.key;
    }
    /**
     * The attributes of a sensitive column that have been modified in the target database. It&#39;s populated only in the case of MODIFIED discovery results and shows the new values of the modified attributes.
     * 
     */
    @Export(name="modifiedAttributes", type=List.class, parameters={DiscoveryJobsResultModifiedAttribute.class})
    private Output<List<DiscoveryJobsResultModifiedAttribute>> modifiedAttributes;

    /**
     * @return The attributes of a sensitive column that have been modified in the target database. It&#39;s populated only in the case of MODIFIED discovery results and shows the new values of the modified attributes.
     * 
     */
    public Output<List<DiscoveryJobsResultModifiedAttribute>> modifiedAttributes() {
        return this.modifiedAttributes;
    }
    /**
     * The database object that contains the sensitive column.
     * 
     */
    @Export(name="object", type=String.class, parameters={})
    private Output<String> object;

    /**
     * @return The database object that contains the sensitive column.
     * 
     */
    public Output<String> object() {
        return this.object;
    }
    /**
     * The type of the database object that contains the sensitive column.
     * 
     */
    @Export(name="objectType", type=String.class, parameters={})
    private Output<String> objectType;

    /**
     * @return The type of the database object that contains the sensitive column.
     * 
     */
    public Output<String> objectType() {
        return this.objectType;
    }
    /**
     * Unique keys identifying the columns that are parents of the sensitive column. At present, it tracks a single parent only.
     * 
     */
    @Export(name="parentColumnKeys", type=List.class, parameters={String.class})
    private Output<List<String>> parentColumnKeys;

    /**
     * @return Unique keys identifying the columns that are parents of the sensitive column. At present, it tracks a single parent only.
     * 
     */
    public Output<List<String>> parentColumnKeys() {
        return this.parentColumnKeys;
    }
    /**
     * Specifies how to process the discovery result. It&#39;s set to NONE by default. Use the PatchDiscoveryJobResults operation to update this attribute. You can choose one of the following options: ACCEPT: To accept the discovery result and update the sensitive data model to reflect the changes. REJECT: To reject the discovery result so that it doesn&#39;t change the sensitive data model. INVALIDATE: To invalidate a newly discovered column. It adds the column to the sensitive data model but marks it as invalid. It helps track false positives and ensure that they aren&#39;t reported by future discovery jobs. After specifying the planned action, you can use the ApplyDiscoveryJobResults operation to automatically process the discovery results.
     * 
     */
    @Export(name="plannedAction", type=String.class, parameters={})
    private Output<String> plannedAction;

    /**
     * @return Specifies how to process the discovery result. It&#39;s set to NONE by default. Use the PatchDiscoveryJobResults operation to update this attribute. You can choose one of the following options: ACCEPT: To accept the discovery result and update the sensitive data model to reflect the changes. REJECT: To reject the discovery result so that it doesn&#39;t change the sensitive data model. INVALIDATE: To invalidate a newly discovered column. It adds the column to the sensitive data model but marks it as invalid. It helps track false positives and ensure that they aren&#39;t reported by future discovery jobs. After specifying the planned action, you can use the ApplyDiscoveryJobResults operation to automatically process the discovery results.
     * 
     */
    public Output<String> plannedAction() {
        return this.plannedAction;
    }
    /**
     * The type of referential relationship the sensitive column has with its parent. NONE indicates that the sensitive column does not have a parent. DB_DEFINED indicates that the relationship is defined in the database dictionary. APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
     * 
     */
    @Export(name="relationType", type=String.class, parameters={})
    private Output<String> relationType;

    /**
     * @return The type of referential relationship the sensitive column has with its parent. NONE indicates that the sensitive column does not have a parent. DB_DEFINED indicates that the relationship is defined in the database dictionary. APP_DEFINED indicates that the relationship is defined at the application level and not in the database dictionary.
     * 
     */
    public Output<String> relationType() {
        return this.relationType;
    }
    /**
     * Original data values collected for the sensitive column from the associated database. Sample data helps review the column and ensure that it actually contains sensitive data. Note that sample data is retrieved by a data discovery job only if the isSampleDataCollectionEnabled attribute is set to true. At present, only one data value is collected per sensitive column.
     * 
     */
    @Export(name="sampleDataValues", type=List.class, parameters={String.class})
    private Output<List<String>> sampleDataValues;

    /**
     * @return Original data values collected for the sensitive column from the associated database. Sample data helps review the column and ensure that it actually contains sensitive data. Note that sample data is retrieved by a data discovery job only if the isSampleDataCollectionEnabled attribute is set to true. At present, only one data value is collected per sensitive column.
     * 
     */
    public Output<List<String>> sampleDataValues() {
        return this.sampleDataValues;
    }
    /**
     * The database schema that contains the sensitive column.
     * 
     */
    @Export(name="schemaName", type=String.class, parameters={})
    private Output<String> schemaName;

    /**
     * @return The database schema that contains the sensitive column.
     * 
     */
    public Output<String> schemaName() {
        return this.schemaName;
    }
    /**
     * The unique key that identifies the sensitive column represented by the discovery result.
     * 
     */
    @Export(name="sensitiveColumnkey", type=String.class, parameters={})
    private Output<String> sensitiveColumnkey;

    /**
     * @return The unique key that identifies the sensitive column represented by the discovery result.
     * 
     */
    public Output<String> sensitiveColumnkey() {
        return this.sensitiveColumnkey;
    }
    /**
     * The OCID of the sensitive type associated with the sensitive column.
     * 
     */
    @Export(name="sensitiveTypeId", type=String.class, parameters={})
    private Output<String> sensitiveTypeId;

    /**
     * @return The OCID of the sensitive type associated with the sensitive column.
     * 
     */
    public Output<String> sensitiveTypeId() {
        return this.sensitiveTypeId;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DiscoveryJobsResult(String name) {
        this(name, DiscoveryJobsResultArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DiscoveryJobsResult(String name, DiscoveryJobsResultArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DiscoveryJobsResult(String name, DiscoveryJobsResultArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataSafe/discoveryJobsResult:DiscoveryJobsResult", name, args == null ? DiscoveryJobsResultArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DiscoveryJobsResult(String name, Output<String> id, @Nullable DiscoveryJobsResultState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:DataSafe/discoveryJobsResult:DiscoveryJobsResult", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DiscoveryJobsResult get(String name, Output<String> id, @Nullable DiscoveryJobsResultState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DiscoveryJobsResult(name, id, state, options);
    }
}
