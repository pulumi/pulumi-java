// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.HealthChecks.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.HealthChecks.outputs.GetPingMonitorsFilter;
import com.pulumi.oci.HealthChecks.outputs.GetPingMonitorsPingMonitor;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPingMonitorsResult {
    /**
     * @return The OCID of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return A user-friendly and mutable name suitable for display in a user interface.
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetPingMonitorsFilter> filters;
    /**
     * @return The region where updates must be made and where results must be fetched from.
     * 
     */
    private final @Nullable String homeRegion;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of ping_monitors.
     * 
     */
    private final List<GetPingMonitorsPingMonitor> pingMonitors;

    @CustomType.Constructor
    private GetPingMonitorsResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetPingMonitorsFilter> filters,
        @CustomType.Parameter("homeRegion") @Nullable String homeRegion,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("pingMonitors") List<GetPingMonitorsPingMonitor> pingMonitors) {
        this.compartmentId = compartmentId;
        this.displayName = displayName;
        this.filters = filters;
        this.homeRegion = homeRegion;
        this.id = id;
        this.pingMonitors = pingMonitors;
    }

    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A user-friendly and mutable name suitable for display in a user interface.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetPingMonitorsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The region where updates must be made and where results must be fetched from.
     * 
     */
    public Optional<String> homeRegion() {
        return Optional.ofNullable(this.homeRegion);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of ping_monitors.
     * 
     */
    public List<GetPingMonitorsPingMonitor> pingMonitors() {
        return this.pingMonitors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPingMonitorsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable String displayName;
        private @Nullable List<GetPingMonitorsFilter> filters;
        private @Nullable String homeRegion;
        private String id;
        private List<GetPingMonitorsPingMonitor> pingMonitors;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPingMonitorsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.homeRegion = defaults.homeRegion;
    	      this.id = defaults.id;
    	      this.pingMonitors = defaults.pingMonitors;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetPingMonitorsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetPingMonitorsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder homeRegion(@Nullable String homeRegion) {
            this.homeRegion = homeRegion;
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder pingMonitors(List<GetPingMonitorsPingMonitor> pingMonitors) {
            this.pingMonitors = Objects.requireNonNull(pingMonitors);
            return this;
        }
        public Builder pingMonitors(GetPingMonitorsPingMonitor... pingMonitors) {
            return pingMonitors(List.of(pingMonitors));
        }        public GetPingMonitorsResult build() {
            return new GetPingMonitorsResult(compartmentId, displayName, filters, homeRegion, id, pingMonitors);
        }
    }
}
