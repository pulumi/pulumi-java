// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.CertificatesManagement.CertificateArgs;
import com.pulumi.oci.CertificatesManagement.inputs.CertificateState;
import com.pulumi.oci.CertificatesManagement.outputs.CertificateCertificateConfig;
import com.pulumi.oci.CertificatesManagement.outputs.CertificateCertificateRevocationListDetail;
import com.pulumi.oci.CertificatesManagement.outputs.CertificateCertificateRule;
import com.pulumi.oci.CertificatesManagement.outputs.CertificateCurrentVersion;
import com.pulumi.oci.CertificatesManagement.outputs.CertificateSubject;
import com.pulumi.oci.Utilities;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Certificate resource in Oracle Cloud Infrastructure Certificates Management service.
 * 
 * Creates a new certificate according to the details of the request.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Certificates can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:CertificatesManagement/certificate:Certificate test_certificate &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:CertificatesManagement/certificate:Certificate")
public class Certificate extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The details of the contents of the certificate and certificate metadata.
     * 
     */
    @Export(name="certificateConfig", type=CertificateCertificateConfig.class, parameters={})
    private Output<CertificateCertificateConfig> certificateConfig;

    /**
     * @return (Updatable) The details of the contents of the certificate and certificate metadata.
     * 
     */
    public Output<CertificateCertificateConfig> certificateConfig() {
        return this.certificateConfig;
    }
    /**
     * The name of the profile used to create the certificate, which depends on the type of certificate you need.
     * 
     */
    @Export(name="certificateProfileType", type=String.class, parameters={})
    private Output<String> certificateProfileType;

    /**
     * @return The name of the profile used to create the certificate, which depends on the type of certificate you need.
     * 
     */
    public Output<String> certificateProfileType() {
        return this.certificateProfileType;
    }
    /**
     * The details of the certificate revocation list (CRL).
     * 
     */
    @Export(name="certificateRevocationListDetails", type=List.class, parameters={CertificateCertificateRevocationListDetail.class})
    private Output<List<CertificateCertificateRevocationListDetail>> certificateRevocationListDetails;

    /**
     * @return The details of the certificate revocation list (CRL).
     * 
     */
    public Output<List<CertificateCertificateRevocationListDetail>> certificateRevocationListDetails() {
        return this.certificateRevocationListDetails;
    }
    /**
     * (Updatable) An optional list of rules that control how the certificate is used and managed.
     * 
     */
    @Export(name="certificateRules", type=List.class, parameters={CertificateCertificateRule.class})
    private Output</* @Nullable */ List<CertificateCertificateRule>> certificateRules;

    /**
     * @return (Updatable) An optional list of rules that control how the certificate is used and managed.
     * 
     */
    public Output<Optional<List<CertificateCertificateRule>>> certificateRules() {
        return Codegen.optional(this.certificateRules);
    }
    /**
     * (Updatable) The OCID of the compartment where you want to create the certificate.
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment where you want to create the certificate.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) The origin of the certificate.
     * 
     */
    @Export(name="configType", type=String.class, parameters={})
    private Output<String> configType;

    /**
     * @return (Updatable) The origin of the certificate.
     * 
     */
    public Output<String> configType() {
        return this.configType;
    }
    /**
     * The details of the certificate version. This object does not contain the certificate contents.
     * 
     */
    @Export(name="currentVersions", type=List.class, parameters={CertificateCurrentVersion.class})
    private Output<List<CertificateCurrentVersion>> currentVersions;

    /**
     * @return The details of the certificate version. This object does not contain the certificate contents.
     * 
     */
    public Output<List<CertificateCurrentVersion>> currentVersions() {
        return this.currentVersions;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A brief description of the certificate. Avoid entering confidential information.
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output</* @Nullable */ String> description;

    /**
     * @return (Updatable) A brief description of the certificate. Avoid entering confidential information.
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * The OCID of the private CA.
     * 
     */
    @Export(name="issuerCertificateAuthorityId", type=String.class, parameters={})
    private Output<String> issuerCertificateAuthorityId;

    /**
     * @return The OCID of the private CA.
     * 
     */
    public Output<String> issuerCertificateAuthorityId() {
        return this.issuerCertificateAuthorityId;
    }
    /**
     * The algorithm to use to create key pairs.
     * 
     */
    @Export(name="keyAlgorithm", type=String.class, parameters={})
    private Output<String> keyAlgorithm;

    /**
     * @return The algorithm to use to create key pairs.
     * 
     */
    public Output<String> keyAlgorithm() {
        return this.keyAlgorithm;
    }
    /**
     * Additional information about the current lifecycle state of the certificate.
     * 
     */
    @Export(name="lifecycleDetails", type=String.class, parameters={})
    private Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycle state of the certificate.
     * 
     */
    public Output<String> lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return A user-friendly name for the certificate. Names are unique within a compartment. Avoid entering confidential information. Valid characters are uppercase or lowercase letters, numbers, hyphens, underscores, and periods.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The algorithm to use to sign the public key certificate.
     * 
     */
    @Export(name="signatureAlgorithm", type=String.class, parameters={})
    private Output<String> signatureAlgorithm;

    /**
     * @return The algorithm to use to sign the public key certificate.
     * 
     */
    public Output<String> signatureAlgorithm() {
        return this.signatureAlgorithm;
    }
    /**
     * The current lifecycle state of the certificate.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current lifecycle state of the certificate.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
     * 
     */
    @Export(name="subjects", type=List.class, parameters={CertificateSubject.class})
    private Output<List<CertificateSubject>> subjects;

    /**
     * @return The subject of the certificate, which is a distinguished name that identifies the entity that owns the public key in the certificate.
     * 
     */
    public Output<List<CertificateSubject>> subjects() {
        return this.subjects;
    }
    /**
     * A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    @Export(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    /**
     * @return A property indicating when the certificate was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    @Export(name="timeOfDeletion", type=String.class, parameters={})
    private Output<String> timeOfDeletion;

    /**
     * @return An optional property indicating when to delete the certificate version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public Output<String> timeOfDeletion() {
        return this.timeOfDeletion;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Certificate(String name) {
        this(name, CertificateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Certificate(String name, CertificateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Certificate(String name, CertificateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:CertificatesManagement/certificate:Certificate", name, args == null ? CertificateArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Certificate(String name, Output<String> id, @Nullable CertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:CertificatesManagement/certificate:Certificate", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Certificate get(String name, Output<String> id, @Nullable CertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Certificate(name, id, state, options);
    }
}
