// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Kms.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetEncryptedDataResult {
    private final @Nullable Map<String,Object> associatedData;
    /**
     * @return The encrypted data.
     * 
     */
    private final String ciphertext;
    private final String cryptoEndpoint;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String keyId;
    private final String plaintext;

    @CustomType.Constructor
    private GetEncryptedDataResult(
        @CustomType.Parameter("associatedData") @Nullable Map<String,Object> associatedData,
        @CustomType.Parameter("ciphertext") String ciphertext,
        @CustomType.Parameter("cryptoEndpoint") String cryptoEndpoint,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("keyId") String keyId,
        @CustomType.Parameter("plaintext") String plaintext) {
        this.associatedData = associatedData;
        this.ciphertext = ciphertext;
        this.cryptoEndpoint = cryptoEndpoint;
        this.id = id;
        this.keyId = keyId;
        this.plaintext = plaintext;
    }

    public Map<String,Object> associatedData() {
        return this.associatedData == null ? Map.of() : this.associatedData;
    }
    /**
     * @return The encrypted data.
     * 
     */
    public String ciphertext() {
        return this.ciphertext;
    }
    public String cryptoEndpoint() {
        return this.cryptoEndpoint;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String keyId() {
        return this.keyId;
    }
    public String plaintext() {
        return this.plaintext;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEncryptedDataResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Map<String,Object> associatedData;
        private String ciphertext;
        private String cryptoEndpoint;
        private String id;
        private String keyId;
        private String plaintext;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEncryptedDataResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.associatedData = defaults.associatedData;
    	      this.ciphertext = defaults.ciphertext;
    	      this.cryptoEndpoint = defaults.cryptoEndpoint;
    	      this.id = defaults.id;
    	      this.keyId = defaults.keyId;
    	      this.plaintext = defaults.plaintext;
        }

        public Builder associatedData(@Nullable Map<String,Object> associatedData) {
            this.associatedData = associatedData;
            return this;
        }
        public Builder ciphertext(String ciphertext) {
            this.ciphertext = Objects.requireNonNull(ciphertext);
            return this;
        }
        public Builder cryptoEndpoint(String cryptoEndpoint) {
            this.cryptoEndpoint = Objects.requireNonNull(cryptoEndpoint);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder keyId(String keyId) {
            this.keyId = Objects.requireNonNull(keyId);
            return this;
        }
        public Builder plaintext(String plaintext) {
            this.plaintext = Objects.requireNonNull(plaintext);
            return this;
        }        public GetEncryptedDataResult build() {
            return new GetEncryptedDataResult(associatedData, ciphertext, cryptoEndpoint, id, keyId, plaintext);
        }
    }
}
