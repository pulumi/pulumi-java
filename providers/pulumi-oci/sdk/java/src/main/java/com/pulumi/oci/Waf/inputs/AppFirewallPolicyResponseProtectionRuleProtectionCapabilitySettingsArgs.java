// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waf.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs Empty = new AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs();

    /**
     * (Updatable) List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
     * 
     */
    @Import(name="allowedHttpMethods")
    private @Nullable Output<List<String>> allowedHttpMethods;

    /**
     * @return (Updatable) List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
     * 
     */
    public Optional<Output<List<String>>> allowedHttpMethods() {
        return Optional.ofNullable(this.allowedHttpMethods);
    }

    /**
     * (Updatable) Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
     * 
     */
    @Import(name="maxHttpRequestHeaderLength")
    private @Nullable Output<Integer> maxHttpRequestHeaderLength;

    /**
     * @return (Updatable) Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
     * 
     */
    public Optional<Output<Integer>> maxHttpRequestHeaderLength() {
        return Optional.ofNullable(this.maxHttpRequestHeaderLength);
    }

    /**
     * (Updatable) Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
     * 
     */
    @Import(name="maxHttpRequestHeaders")
    private @Nullable Output<Integer> maxHttpRequestHeaders;

    /**
     * @return (Updatable) Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
     * 
     */
    public Optional<Output<Integer>> maxHttpRequestHeaders() {
        return Optional.ofNullable(this.maxHttpRequestHeaders);
    }

    /**
     * (Updatable) Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
     * 
     */
    @Import(name="maxNumberOfArguments")
    private @Nullable Output<Integer> maxNumberOfArguments;

    /**
     * @return (Updatable) Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
     * 
     */
    public Optional<Output<Integer>> maxNumberOfArguments() {
        return Optional.ofNullable(this.maxNumberOfArguments);
    }

    /**
     * (Updatable) Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
     * 
     */
    @Import(name="maxSingleArgumentLength")
    private @Nullable Output<Integer> maxSingleArgumentLength;

    /**
     * @return (Updatable) Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
     * 
     */
    public Optional<Output<Integer>> maxSingleArgumentLength() {
        return Optional.ofNullable(this.maxSingleArgumentLength);
    }

    /**
     * (Updatable) Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
     * 
     */
    @Import(name="maxTotalArgumentLength")
    private @Nullable Output<Integer> maxTotalArgumentLength;

    /**
     * @return (Updatable) Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
     * 
     */
    public Optional<Output<Integer>> maxTotalArgumentLength() {
        return Optional.ofNullable(this.maxTotalArgumentLength);
    }

    private AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs() {}

    private AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs(AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs $) {
        this.allowedHttpMethods = $.allowedHttpMethods;
        this.maxHttpRequestHeaderLength = $.maxHttpRequestHeaderLength;
        this.maxHttpRequestHeaders = $.maxHttpRequestHeaders;
        this.maxNumberOfArguments = $.maxNumberOfArguments;
        this.maxSingleArgumentLength = $.maxSingleArgumentLength;
        this.maxTotalArgumentLength = $.maxTotalArgumentLength;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs $;

        public Builder() {
            $ = new AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs();
        }

        public Builder(AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs defaults) {
            $ = new AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowedHttpMethods (Updatable) List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
         * 
         * @return builder
         * 
         */
        public Builder allowedHttpMethods(@Nullable Output<List<String>> allowedHttpMethods) {
            $.allowedHttpMethods = allowedHttpMethods;
            return this;
        }

        /**
         * @param allowedHttpMethods (Updatable) List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
         * 
         * @return builder
         * 
         */
        public Builder allowedHttpMethods(List<String> allowedHttpMethods) {
            return allowedHttpMethods(Output.of(allowedHttpMethods));
        }

        /**
         * @param allowedHttpMethods (Updatable) List of allowed HTTP methods. Each value as a RFC7230 formated token string. Used in protection capability 911100: Restrict HTTP Request Methods.
         * 
         * @return builder
         * 
         */
        public Builder allowedHttpMethods(String... allowedHttpMethods) {
            return allowedHttpMethods(List.of(allowedHttpMethods));
        }

        /**
         * @param maxHttpRequestHeaderLength (Updatable) Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
         * 
         * @return builder
         * 
         */
        public Builder maxHttpRequestHeaderLength(@Nullable Output<Integer> maxHttpRequestHeaderLength) {
            $.maxHttpRequestHeaderLength = maxHttpRequestHeaderLength;
            return this;
        }

        /**
         * @param maxHttpRequestHeaderLength (Updatable) Maximum allowed length of headers in an HTTP request. Used in protection capability: 9200024: Limit length of request header size.
         * 
         * @return builder
         * 
         */
        public Builder maxHttpRequestHeaderLength(Integer maxHttpRequestHeaderLength) {
            return maxHttpRequestHeaderLength(Output.of(maxHttpRequestHeaderLength));
        }

        /**
         * @param maxHttpRequestHeaders (Updatable) Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
         * 
         * @return builder
         * 
         */
        public Builder maxHttpRequestHeaders(@Nullable Output<Integer> maxHttpRequestHeaders) {
            $.maxHttpRequestHeaders = maxHttpRequestHeaders;
            return this;
        }

        /**
         * @param maxHttpRequestHeaders (Updatable) Maximum number of headers allowed in an HTTP request. Used in protection capability 9200014: Limit Number of Request Headers.
         * 
         * @return builder
         * 
         */
        public Builder maxHttpRequestHeaders(Integer maxHttpRequestHeaders) {
            return maxHttpRequestHeaders(Output.of(maxHttpRequestHeaders));
        }

        /**
         * @param maxNumberOfArguments (Updatable) Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
         * 
         * @return builder
         * 
         */
        public Builder maxNumberOfArguments(@Nullable Output<Integer> maxNumberOfArguments) {
            $.maxNumberOfArguments = maxNumberOfArguments;
            return this;
        }

        /**
         * @param maxNumberOfArguments (Updatable) Maximum number of arguments allowed. Used in protection capability 920380: Number of Arguments Limits.
         * 
         * @return builder
         * 
         */
        public Builder maxNumberOfArguments(Integer maxNumberOfArguments) {
            return maxNumberOfArguments(Output.of(maxNumberOfArguments));
        }

        /**
         * @param maxSingleArgumentLength (Updatable) Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
         * 
         * @return builder
         * 
         */
        public Builder maxSingleArgumentLength(@Nullable Output<Integer> maxSingleArgumentLength) {
            $.maxSingleArgumentLength = maxSingleArgumentLength;
            return this;
        }

        /**
         * @param maxSingleArgumentLength (Updatable) Maximum allowed length of a single argument. Used in protection capability 920370: Limit argument value length.
         * 
         * @return builder
         * 
         */
        public Builder maxSingleArgumentLength(Integer maxSingleArgumentLength) {
            return maxSingleArgumentLength(Output.of(maxSingleArgumentLength));
        }

        /**
         * @param maxTotalArgumentLength (Updatable) Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
         * 
         * @return builder
         * 
         */
        public Builder maxTotalArgumentLength(@Nullable Output<Integer> maxTotalArgumentLength) {
            $.maxTotalArgumentLength = maxTotalArgumentLength;
            return this;
        }

        /**
         * @param maxTotalArgumentLength (Updatable) Maximum allowed total length of all arguments. Used in protection capability 920390: Limit arguments total length.
         * 
         * @return builder
         * 
         */
        public Builder maxTotalArgumentLength(Integer maxTotalArgumentLength) {
            return maxTotalArgumentLength(Output.of(maxTotalArgumentLength));
        }

        public AppFirewallPolicyResponseProtectionRuleProtectionCapabilitySettingsArgs build() {
            return $;
        }
    }

}
