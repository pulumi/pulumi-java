// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VirtualCircuitCrossConnectMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final VirtualCircuitCrossConnectMappingArgs Empty = new VirtualCircuitCrossConnectMappingArgs();

    /**
     * (Updatable) The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don&#39;t use BGP MD5 authentication.
     * 
     */
    @Import(name="bgpMd5authKey")
    private @Nullable Output<String> bgpMd5authKey;

    /**
     * @return (Updatable) The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don&#39;t use BGP MD5 authentication.
     * 
     */
    public Optional<Output<String>> bgpMd5authKey() {
        return Optional.ofNullable(this.bgpMd5authKey);
    }

    /**
     * (Updatable) The OCID of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
     * 
     */
    @Import(name="crossConnectOrCrossConnectGroupId")
    private @Nullable Output<String> crossConnectOrCrossConnectGroupId;

    /**
     * @return (Updatable) The OCID of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
     * 
     */
    public Optional<Output<String>> crossConnectOrCrossConnectGroupId() {
        return Optional.ofNullable(this.crossConnectOrCrossConnectGroupId);
    }

    /**
     * (Updatable) The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider&#39;s edge router. Must use a /30 or /31 subnet mask.
     * 
     */
    @Import(name="customerBgpPeeringIp")
    private @Nullable Output<String> customerBgpPeeringIp;

    /**
     * @return (Updatable) The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider&#39;s edge router. Must use a /30 or /31 subnet mask.
     * 
     */
    public Optional<Output<String>> customerBgpPeeringIp() {
        return Optional.ofNullable(this.customerBgpPeeringIp);
    }

    /**
     * (Updatable) IPv6 is currently supported only in the Government Cloud. The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider&#39;s edge router. Only subnet masks from /64 up to /127 are allowed.
     * 
     */
    @Import(name="customerBgpPeeringIpv6")
    private @Nullable Output<String> customerBgpPeeringIpv6;

    /**
     * @return (Updatable) IPv6 is currently supported only in the Government Cloud. The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider&#39;s edge router. Only subnet masks from /64 up to /127 are allowed.
     * 
     */
    public Optional<Output<String>> customerBgpPeeringIpv6() {
        return Optional.ofNullable(this.customerBgpPeeringIpv6);
    }

    /**
     * (Updatable) The IPv4 address for Oracle&#39;s end of the BGP session. Must use a /30 or /31 subnet mask. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
     * 
     */
    @Import(name="oracleBgpPeeringIp")
    private @Nullable Output<String> oracleBgpPeeringIp;

    /**
     * @return (Updatable) The IPv4 address for Oracle&#39;s end of the BGP session. Must use a /30 or /31 subnet mask. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
     * 
     */
    public Optional<Output<String>> oracleBgpPeeringIp() {
        return Optional.ofNullable(this.oracleBgpPeeringIp);
    }

    /**
     * (Updatable) IPv6 is currently supported only in the Government Cloud. The IPv6 address for Oracle&#39;s end of the BGP session.  Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
     * 
     */
    @Import(name="oracleBgpPeeringIpv6")
    private @Nullable Output<String> oracleBgpPeeringIpv6;

    /**
     * @return (Updatable) IPv6 is currently supported only in the Government Cloud. The IPv6 address for Oracle&#39;s end of the BGP session.  Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
     * 
     */
    public Optional<Output<String>> oracleBgpPeeringIpv6() {
        return Optional.ofNullable(this.oracleBgpPeeringIpv6);
    }

    /**
     * (Updatable) The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
     * 
     */
    @Import(name="vlan")
    private @Nullable Output<Integer> vlan;

    /**
     * @return (Updatable) The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
     * 
     */
    public Optional<Output<Integer>> vlan() {
        return Optional.ofNullable(this.vlan);
    }

    private VirtualCircuitCrossConnectMappingArgs() {}

    private VirtualCircuitCrossConnectMappingArgs(VirtualCircuitCrossConnectMappingArgs $) {
        this.bgpMd5authKey = $.bgpMd5authKey;
        this.crossConnectOrCrossConnectGroupId = $.crossConnectOrCrossConnectGroupId;
        this.customerBgpPeeringIp = $.customerBgpPeeringIp;
        this.customerBgpPeeringIpv6 = $.customerBgpPeeringIpv6;
        this.oracleBgpPeeringIp = $.oracleBgpPeeringIp;
        this.oracleBgpPeeringIpv6 = $.oracleBgpPeeringIpv6;
        this.vlan = $.vlan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VirtualCircuitCrossConnectMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VirtualCircuitCrossConnectMappingArgs $;

        public Builder() {
            $ = new VirtualCircuitCrossConnectMappingArgs();
        }

        public Builder(VirtualCircuitCrossConnectMappingArgs defaults) {
            $ = new VirtualCircuitCrossConnectMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bgpMd5authKey (Updatable) The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don&#39;t use BGP MD5 authentication.
         * 
         * @return builder
         * 
         */
        public Builder bgpMd5authKey(@Nullable Output<String> bgpMd5authKey) {
            $.bgpMd5authKey = bgpMd5authKey;
            return this;
        }

        /**
         * @param bgpMd5authKey (Updatable) The key for BGP MD5 authentication. Only applicable if your system requires MD5 authentication. If empty or not set (null), that means you don&#39;t use BGP MD5 authentication.
         * 
         * @return builder
         * 
         */
        public Builder bgpMd5authKey(String bgpMd5authKey) {
            return bgpMd5authKey(Output.of(bgpMd5authKey));
        }

        /**
         * @param crossConnectOrCrossConnectGroupId (Updatable) The OCID of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
         * 
         * @return builder
         * 
         */
        public Builder crossConnectOrCrossConnectGroupId(@Nullable Output<String> crossConnectOrCrossConnectGroupId) {
            $.crossConnectOrCrossConnectGroupId = crossConnectOrCrossConnectGroupId;
            return this;
        }

        /**
         * @param crossConnectOrCrossConnectGroupId (Updatable) The OCID of the cross-connect or cross-connect group for this mapping. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).
         * 
         * @return builder
         * 
         */
        public Builder crossConnectOrCrossConnectGroupId(String crossConnectOrCrossConnectGroupId) {
            return crossConnectOrCrossConnectGroupId(Output.of(crossConnectOrCrossConnectGroupId));
        }

        /**
         * @param customerBgpPeeringIp (Updatable) The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider&#39;s edge router. Must use a /30 or /31 subnet mask.
         * 
         * @return builder
         * 
         */
        public Builder customerBgpPeeringIp(@Nullable Output<String> customerBgpPeeringIp) {
            $.customerBgpPeeringIp = customerBgpPeeringIp;
            return this;
        }

        /**
         * @param customerBgpPeeringIp (Updatable) The BGP IPv4 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv4 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv4 address of the provider&#39;s edge router. Must use a /30 or /31 subnet mask.
         * 
         * @return builder
         * 
         */
        public Builder customerBgpPeeringIp(String customerBgpPeeringIp) {
            return customerBgpPeeringIp(Output.of(customerBgpPeeringIp));
        }

        /**
         * @param customerBgpPeeringIpv6 (Updatable) IPv6 is currently supported only in the Government Cloud. The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider&#39;s edge router. Only subnet masks from /64 up to /127 are allowed.
         * 
         * @return builder
         * 
         */
        public Builder customerBgpPeeringIpv6(@Nullable Output<String> customerBgpPeeringIpv6) {
            $.customerBgpPeeringIpv6 = customerBgpPeeringIpv6;
            return this;
        }

        /**
         * @param customerBgpPeeringIpv6 (Updatable) IPv6 is currently supported only in the Government Cloud. The BGP IPv6 address for the router on the other end of the BGP session from Oracle. Specified by the owner of that router. If the session goes from Oracle to a customer, this is the BGP IPv6 address of the customer&#39;s edge router. If the session goes from Oracle to a provider, this is the BGP IPv6 address of the provider&#39;s edge router. Only subnet masks from /64 up to /127 are allowed.
         * 
         * @return builder
         * 
         */
        public Builder customerBgpPeeringIpv6(String customerBgpPeeringIpv6) {
            return customerBgpPeeringIpv6(Output.of(customerBgpPeeringIpv6));
        }

        /**
         * @param oracleBgpPeeringIp (Updatable) The IPv4 address for Oracle&#39;s end of the BGP session. Must use a /30 or /31 subnet mask. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
         * 
         * @return builder
         * 
         */
        public Builder oracleBgpPeeringIp(@Nullable Output<String> oracleBgpPeeringIp) {
            $.oracleBgpPeeringIp = oracleBgpPeeringIp;
            return this;
        }

        /**
         * @param oracleBgpPeeringIp (Updatable) The IPv4 address for Oracle&#39;s end of the BGP session. Must use a /30 or /31 subnet mask. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
         * 
         * @return builder
         * 
         */
        public Builder oracleBgpPeeringIp(String oracleBgpPeeringIp) {
            return oracleBgpPeeringIp(Output.of(oracleBgpPeeringIp));
        }

        /**
         * @param oracleBgpPeeringIpv6 (Updatable) IPv6 is currently supported only in the Government Cloud. The IPv6 address for Oracle&#39;s end of the BGP session.  Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
         * 
         * @return builder
         * 
         */
        public Builder oracleBgpPeeringIpv6(@Nullable Output<String> oracleBgpPeeringIpv6) {
            $.oracleBgpPeeringIpv6 = oracleBgpPeeringIpv6;
            return this;
        }

        /**
         * @param oracleBgpPeeringIpv6 (Updatable) IPv6 is currently supported only in the Government Cloud. The IPv6 address for Oracle&#39;s end of the BGP session.  Only subnet masks from /64 up to /127 are allowed. If the session goes from Oracle to a customer&#39;s edge router, the customer specifies this information. If the session goes from Oracle to a provider&#39;s edge router, the provider specifies this.
         * 
         * @return builder
         * 
         */
        public Builder oracleBgpPeeringIpv6(String oracleBgpPeeringIpv6) {
            return oracleBgpPeeringIpv6(Output.of(oracleBgpPeeringIpv6));
        }

        /**
         * @param vlan (Updatable) The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
         * 
         * @return builder
         * 
         */
        public Builder vlan(@Nullable Output<Integer> vlan) {
            $.vlan = vlan;
            return this;
        }

        /**
         * @param vlan (Updatable) The number of the specific VLAN (on the cross-connect or cross-connect group) that is assigned to this virtual circuit. Specified by the owner of the cross-connect or cross-connect group (the customer if the customer is colocated with Oracle, or the provider if the customer is connecting via provider).  Example: `200`
         * 
         * @return builder
         * 
         */
        public Builder vlan(Integer vlan) {
            return vlan(Output.of(vlan));
        }

        public VirtualCircuitCrossConnectMappingArgs build() {
            return $;
        }
    }

}
