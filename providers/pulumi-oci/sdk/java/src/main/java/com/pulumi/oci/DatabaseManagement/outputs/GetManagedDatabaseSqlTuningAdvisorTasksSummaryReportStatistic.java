// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticStatementCount;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatistic {
    /**
     * @return The benefits of the findings in the SQL Tuning Advisor summary report.
     * 
     */
    private final List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit> findingBenefits;
    /**
     * @return The number of findings in the SQL Tuning Advisor summary report.
     * 
     */
    private final List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount> findingCounts;
    /**
     * @return The number of statements in the SQL Tuning Advisor summary report.
     * 
     */
    private final List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticStatementCount> statementCounts;

    @CustomType.Constructor
    private GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatistic(
        @CustomType.Parameter("findingBenefits") List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit> findingBenefits,
        @CustomType.Parameter("findingCounts") List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount> findingCounts,
        @CustomType.Parameter("statementCounts") List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticStatementCount> statementCounts) {
        this.findingBenefits = findingBenefits;
        this.findingCounts = findingCounts;
        this.statementCounts = statementCounts;
    }

    /**
     * @return The benefits of the findings in the SQL Tuning Advisor summary report.
     * 
     */
    public List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit> findingBenefits() {
        return this.findingBenefits;
    }
    /**
     * @return The number of findings in the SQL Tuning Advisor summary report.
     * 
     */
    public List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount> findingCounts() {
        return this.findingCounts;
    }
    /**
     * @return The number of statements in the SQL Tuning Advisor summary report.
     * 
     */
    public List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticStatementCount> statementCounts() {
        return this.statementCounts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatistic defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit> findingBenefits;
        private List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount> findingCounts;
        private List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticStatementCount> statementCounts;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatistic defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.findingBenefits = defaults.findingBenefits;
    	      this.findingCounts = defaults.findingCounts;
    	      this.statementCounts = defaults.statementCounts;
        }

        public Builder findingBenefits(List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit> findingBenefits) {
            this.findingBenefits = Objects.requireNonNull(findingBenefits);
            return this;
        }
        public Builder findingBenefits(GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingBenefit... findingBenefits) {
            return findingBenefits(List.of(findingBenefits));
        }
        public Builder findingCounts(List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount> findingCounts) {
            this.findingCounts = Objects.requireNonNull(findingCounts);
            return this;
        }
        public Builder findingCounts(GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticFindingCount... findingCounts) {
            return findingCounts(List.of(findingCounts));
        }
        public Builder statementCounts(List<GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticStatementCount> statementCounts) {
            this.statementCounts = Objects.requireNonNull(statementCounts);
            return this;
        }
        public Builder statementCounts(GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatisticStatementCount... statementCounts) {
            return statementCounts(List.of(statementCounts));
        }        public GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatistic build() {
            return new GetManagedDatabaseSqlTuningAdvisorTasksSummaryReportStatistic(findingBenefits, findingCounts, statementCounts);
        }
    }
}
