// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Limits.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetLimitValuesLimitValue {
    /**
     * @return Filter entries by availability domain. This implies that only AD-specific values are returned.
     * 
     */
    private final String availabilityDomain;
    /**
     * @return Optional field, can be used to see a specific resource limit value.
     * 
     */
    private final String name;
    /**
     * @return Filter entries by scope type.
     * 
     */
    private final String scopeType;
    /**
     * @return The resource limit value.
     * 
     */
    private final String value;

    @CustomType.Constructor
    private GetLimitValuesLimitValue(
        @CustomType.Parameter("availabilityDomain") String availabilityDomain,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("scopeType") String scopeType,
        @CustomType.Parameter("value") String value) {
        this.availabilityDomain = availabilityDomain;
        this.name = name;
        this.scopeType = scopeType;
        this.value = value;
    }

    /**
     * @return Filter entries by availability domain. This implies that only AD-specific values are returned.
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return Optional field, can be used to see a specific resource limit value.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Filter entries by scope type.
     * 
     */
    public String scopeType() {
        return this.scopeType;
    }
    /**
     * @return The resource limit value.
     * 
     */
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLimitValuesLimitValue defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String availabilityDomain;
        private String name;
        private String scopeType;
        private String value;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLimitValuesLimitValue defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.name = defaults.name;
    	      this.scopeType = defaults.scopeType;
    	      this.value = defaults.value;
        }

        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder scopeType(String scopeType) {
            this.scopeType = Objects.requireNonNull(scopeType);
            return this;
        }
        public Builder value(String value) {
            this.value = Objects.requireNonNull(value);
            return this;
        }        public GetLimitValuesLimitValue build() {
            return new GetLimitValuesLimitValue(availabilityDomain, name, scopeType, value);
        }
    }
}
