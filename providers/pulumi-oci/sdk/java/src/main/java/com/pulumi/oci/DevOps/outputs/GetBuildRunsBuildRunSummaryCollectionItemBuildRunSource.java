// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfo;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBuildRunsBuildRunSummaryCollectionItemBuildRunSource {
    /**
     * @return The DevOps code repository identifier that invoked the build run.
     * 
     */
    private final String repositoryId;
    /**
     * @return The source from which the build run is triggered.
     * 
     */
    private final String sourceType;
    /**
     * @return Trigger details that need to be used for the BuildRun
     * 
     */
    private final List<GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfo> triggerInfos;

    @CustomType.Constructor
    private GetBuildRunsBuildRunSummaryCollectionItemBuildRunSource(
        @CustomType.Parameter("repositoryId") String repositoryId,
        @CustomType.Parameter("sourceType") String sourceType,
        @CustomType.Parameter("triggerInfos") List<GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfo> triggerInfos) {
        this.repositoryId = repositoryId;
        this.sourceType = sourceType;
        this.triggerInfos = triggerInfos;
    }

    /**
     * @return The DevOps code repository identifier that invoked the build run.
     * 
     */
    public String repositoryId() {
        return this.repositoryId;
    }
    /**
     * @return The source from which the build run is triggered.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return Trigger details that need to be used for the BuildRun
     * 
     */
    public List<GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfo> triggerInfos() {
        return this.triggerInfos;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBuildRunsBuildRunSummaryCollectionItemBuildRunSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String repositoryId;
        private String sourceType;
        private List<GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfo> triggerInfos;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBuildRunsBuildRunSummaryCollectionItemBuildRunSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.repositoryId = defaults.repositoryId;
    	      this.sourceType = defaults.sourceType;
    	      this.triggerInfos = defaults.triggerInfos;
        }

        public Builder repositoryId(String repositoryId) {
            this.repositoryId = Objects.requireNonNull(repositoryId);
            return this;
        }
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public Builder triggerInfos(List<GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfo> triggerInfos) {
            this.triggerInfos = Objects.requireNonNull(triggerInfos);
            return this;
        }
        public Builder triggerInfos(GetBuildRunsBuildRunSummaryCollectionItemBuildRunSourceTriggerInfo... triggerInfos) {
            return triggerInfos(List.of(triggerInfos));
        }        public GetBuildRunsBuildRunSummaryCollectionItemBuildRunSource build() {
            return new GetBuildRunsBuildRunSummaryCollectionItemBuildRunSource(repositoryId, sourceType, triggerInfos);
        }
    }
}
