// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataFlow.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataFlow.inputs.GetRunLogsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRunLogsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRunLogsArgs Empty = new GetRunLogsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetRunLogsFilterArgs>> filters;

    public Optional<Output<List<GetRunLogsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The unique ID for the run
     * 
     */
    @Import(name="runId", required=true)
    private Output<String> runId;

    /**
     * @return The unique ID for the run
     * 
     */
    public Output<String> runId() {
        return this.runId;
    }

    private GetRunLogsArgs() {}

    private GetRunLogsArgs(GetRunLogsArgs $) {
        this.filters = $.filters;
        this.runId = $.runId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRunLogsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRunLogsArgs $;

        public Builder() {
            $ = new GetRunLogsArgs();
        }

        public Builder(GetRunLogsArgs defaults) {
            $ = new GetRunLogsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetRunLogsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetRunLogsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetRunLogsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param runId The unique ID for the run
         * 
         * @return builder
         * 
         */
        public Builder runId(Output<String> runId) {
            $.runId = runId;
            return this;
        }

        /**
         * @param runId The unique ID for the run
         * 
         * @return builder
         * 
         */
        public Builder runId(String runId) {
            return runId(Output.of(runId));
        }

        public GetRunLogsArgs build() {
            $.runId = Objects.requireNonNull($.runId, "expected parameter 'runId' to be non-null");
            return $;
        }
    }

}
