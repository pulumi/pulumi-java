// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Marketplace.inputs.PublicationPackageDetailsArgs;
import com.pulumi.oci.Marketplace.inputs.PublicationSupportContactArgs;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PublicationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PublicationArgs Empty = new PublicationArgs();

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
     * 
     */
    @Import(name="isAgreementAcknowledged", required=true)
    private Output<Boolean> isAgreementAcknowledged;

    /**
     * @return Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
     * 
     */
    public Output<Boolean> isAgreementAcknowledged() {
        return this.isAgreementAcknowledged;
    }

    /**
     * The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
     * 
     */
    @Import(name="listingType", required=true)
    private Output<String> listingType;

    /**
     * @return The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
     * 
     */
    public Output<String> listingType() {
        return this.listingType;
    }

    /**
     * (Updatable) A long description of the publication to use in the listing.
     * 
     */
    @Import(name="longDescription")
    private @Nullable Output<String> longDescription;

    /**
     * @return (Updatable) A long description of the publication to use in the listing.
     * 
     */
    public Optional<Output<String>> longDescription() {
        return Optional.ofNullable(this.longDescription);
    }

    /**
     * (Updatable) The name of the contact.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) The name of the contact.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * A base object for creating a publication package.
     * 
     */
    @Import(name="packageDetails", required=true)
    private Output<PublicationPackageDetailsArgs> packageDetails;

    /**
     * @return A base object for creating a publication package.
     * 
     */
    public Output<PublicationPackageDetailsArgs> packageDetails() {
        return this.packageDetails;
    }

    /**
     * (Updatable) A short description of the publication to use in the listing.
     * 
     */
    @Import(name="shortDescription", required=true)
    private Output<String> shortDescription;

    /**
     * @return (Updatable) A short description of the publication to use in the listing.
     * 
     */
    public Output<String> shortDescription() {
        return this.shortDescription;
    }

    /**
     * (Updatable) Contact information for getting support from the publisher for the listing.
     * 
     */
    @Import(name="supportContacts", required=true)
    private Output<List<PublicationSupportContactArgs>> supportContacts;

    /**
     * @return (Updatable) Contact information for getting support from the publisher for the listing.
     * 
     */
    public Output<List<PublicationSupportContactArgs>> supportContacts() {
        return this.supportContacts;
    }

    private PublicationArgs() {}

    private PublicationArgs(PublicationArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.freeformTags = $.freeformTags;
        this.isAgreementAcknowledged = $.isAgreementAcknowledged;
        this.listingType = $.listingType;
        this.longDescription = $.longDescription;
        this.name = $.name;
        this.packageDetails = $.packageDetails;
        this.shortDescription = $.shortDescription;
        this.supportContacts = $.supportContacts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicationArgs $;

        public Builder() {
            $ = new PublicationArgs();
        }

        public Builder(PublicationArgs defaults) {
            $ = new PublicationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment where you want to create the publication.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) The defined tags associated with this resource, if any. Each key is predefined and scoped to namespaces. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param freeformTags (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) The freeform tags associated with this resource, if any. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param isAgreementAcknowledged Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
         * 
         * @return builder
         * 
         */
        public Builder isAgreementAcknowledged(Output<Boolean> isAgreementAcknowledged) {
            $.isAgreementAcknowledged = isAgreementAcknowledged;
            return this;
        }

        /**
         * @param isAgreementAcknowledged Whether the publisher acknowledged that they have the right and authority to share the contents of the publication and that they accepted the Oracle terms of use agreements required to create a publication.
         * 
         * @return builder
         * 
         */
        public Builder isAgreementAcknowledged(Boolean isAgreementAcknowledged) {
            return isAgreementAcknowledged(Output.of(isAgreementAcknowledged));
        }

        /**
         * @param listingType The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
         * 
         * @return builder
         * 
         */
        public Builder listingType(Output<String> listingType) {
            $.listingType = listingType;
            return this;
        }

        /**
         * @param listingType The publisher category to which the publication belongs. The publisher category informs where the listing appears for use.
         * 
         * @return builder
         * 
         */
        public Builder listingType(String listingType) {
            return listingType(Output.of(listingType));
        }

        /**
         * @param longDescription (Updatable) A long description of the publication to use in the listing.
         * 
         * @return builder
         * 
         */
        public Builder longDescription(@Nullable Output<String> longDescription) {
            $.longDescription = longDescription;
            return this;
        }

        /**
         * @param longDescription (Updatable) A long description of the publication to use in the listing.
         * 
         * @return builder
         * 
         */
        public Builder longDescription(String longDescription) {
            return longDescription(Output.of(longDescription));
        }

        /**
         * @param name (Updatable) The name of the contact.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) The name of the contact.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param packageDetails A base object for creating a publication package.
         * 
         * @return builder
         * 
         */
        public Builder packageDetails(Output<PublicationPackageDetailsArgs> packageDetails) {
            $.packageDetails = packageDetails;
            return this;
        }

        /**
         * @param packageDetails A base object for creating a publication package.
         * 
         * @return builder
         * 
         */
        public Builder packageDetails(PublicationPackageDetailsArgs packageDetails) {
            return packageDetails(Output.of(packageDetails));
        }

        /**
         * @param shortDescription (Updatable) A short description of the publication to use in the listing.
         * 
         * @return builder
         * 
         */
        public Builder shortDescription(Output<String> shortDescription) {
            $.shortDescription = shortDescription;
            return this;
        }

        /**
         * @param shortDescription (Updatable) A short description of the publication to use in the listing.
         * 
         * @return builder
         * 
         */
        public Builder shortDescription(String shortDescription) {
            return shortDescription(Output.of(shortDescription));
        }

        /**
         * @param supportContacts (Updatable) Contact information for getting support from the publisher for the listing.
         * 
         * @return builder
         * 
         */
        public Builder supportContacts(Output<List<PublicationSupportContactArgs>> supportContacts) {
            $.supportContacts = supportContacts;
            return this;
        }

        /**
         * @param supportContacts (Updatable) Contact information for getting support from the publisher for the listing.
         * 
         * @return builder
         * 
         */
        public Builder supportContacts(List<PublicationSupportContactArgs> supportContacts) {
            return supportContacts(Output.of(supportContacts));
        }

        /**
         * @param supportContacts (Updatable) Contact information for getting support from the publisher for the listing.
         * 
         * @return builder
         * 
         */
        public Builder supportContacts(PublicationSupportContactArgs... supportContacts) {
            return supportContacts(List.of(supportContacts));
        }

        public PublicationArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.isAgreementAcknowledged = Objects.requireNonNull($.isAgreementAcknowledged, "expected parameter 'isAgreementAcknowledged' to be non-null");
            $.listingType = Objects.requireNonNull($.listingType, "expected parameter 'listingType' to be non-null");
            $.packageDetails = Objects.requireNonNull($.packageDetails, "expected parameter 'packageDetails' to be non-null");
            $.shortDescription = Objects.requireNonNull($.shortDescription, "expected parameter 'shortDescription' to be non-null");
            $.supportContacts = Objects.requireNonNull($.supportContacts, "expected parameter 'supportContacts' to be non-null");
            return $;
        }
    }

}
