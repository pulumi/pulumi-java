// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.GetDedicatedVmHostsFilter;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetDedicatedVmHostsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDedicatedVmHostsArgs Empty = new GetDedicatedVmHostsArgs();

    /**
     * The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    @Import(name="availabilityDomain")
    private Output</* @Nullable */ String> availabilityDomain;

    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public Output</* @Nullable */ String> availabilityDomain() {
        return this.availabilityDomain;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only resources that match the given display name exactly.
     * 
     */
    @Import(name="displayName")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public Output</* @Nullable */ String> displayName() {
        return this.displayName;
    }

    @Import(name="filters")
    private Output</* @Nullable */ List<GetDedicatedVmHostsFilter>> filters;

    public Output</* @Nullable */ List<GetDedicatedVmHostsFilter>> filters() {
        return this.filters;
    }

    /**
     * The name for the instance&#39;s shape.
     * 
     */
    @Import(name="instanceShapeName")
    private Output</* @Nullable */ String> instanceShapeName;

    /**
     * @return The name for the instance&#39;s shape.
     * 
     */
    public Output</* @Nullable */ String> instanceShapeName() {
        return this.instanceShapeName;
    }

    /**
     * The remaining memory of the dedicated VM host, in GBs.
     * 
     */
    @Import(name="remainingMemoryInGbsGreaterThanOrEqualTo")
    private Output</* @Nullable */ Double> remainingMemoryInGbsGreaterThanOrEqualTo;

    /**
     * @return The remaining memory of the dedicated VM host, in GBs.
     * 
     */
    public Output</* @Nullable */ Double> remainingMemoryInGbsGreaterThanOrEqualTo() {
        return this.remainingMemoryInGbsGreaterThanOrEqualTo;
    }

    /**
     * The available OCPUs of the dedicated VM host.
     * 
     */
    @Import(name="remainingOcpusGreaterThanOrEqualTo")
    private Output</* @Nullable */ Double> remainingOcpusGreaterThanOrEqualTo;

    /**
     * @return The available OCPUs of the dedicated VM host.
     * 
     */
    public Output</* @Nullable */ Double> remainingOcpusGreaterThanOrEqualTo() {
        return this.remainingOcpusGreaterThanOrEqualTo;
    }

    /**
     * A filter to only return resources that match the given lifecycle state.
     * 
     */
    @Import(name="state")
    private Output</* @Nullable */ String> state;

    /**
     * @return A filter to only return resources that match the given lifecycle state.
     * 
     */
    public Output</* @Nullable */ String> state() {
        return this.state;
    }

    private GetDedicatedVmHostsArgs() {}

    private GetDedicatedVmHostsArgs(GetDedicatedVmHostsArgs $) {
        this.availabilityDomain = $.availabilityDomain;
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.instanceShapeName = $.instanceShapeName;
        this.remainingMemoryInGbsGreaterThanOrEqualTo = $.remainingMemoryInGbsGreaterThanOrEqualTo;
        this.remainingOcpusGreaterThanOrEqualTo = $.remainingOcpusGreaterThanOrEqualTo;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDedicatedVmHostsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDedicatedVmHostsArgs $;

        public Builder() {
            $ = new GetDedicatedVmHostsArgs();
        }

        public Builder(GetDedicatedVmHostsArgs defaults) {
            $ = new GetDedicatedVmHostsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param availabilityDomain The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(Output</* @Nullable */ String> availabilityDomain) {
            $.availabilityDomain = availabilityDomain;
            return this;
        }

        /**
         * @param availabilityDomain The name of the availability domain.  Example: `Uocm:PHX-AD-1`
         * 
         * @return builder
         * 
         */
        public Builder availabilityDomain(@Nullable String availabilityDomain) {
            return availabilityDomain(Output.of(availabilityDomain));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A filter to return only resources that match the given display name exactly.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output</* @Nullable */ String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the given display name exactly.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(Output</* @Nullable */ List<GetDedicatedVmHostsFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetDedicatedVmHostsFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetDedicatedVmHostsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param instanceShapeName The name for the instance&#39;s shape.
         * 
         * @return builder
         * 
         */
        public Builder instanceShapeName(Output</* @Nullable */ String> instanceShapeName) {
            $.instanceShapeName = instanceShapeName;
            return this;
        }

        /**
         * @param instanceShapeName The name for the instance&#39;s shape.
         * 
         * @return builder
         * 
         */
        public Builder instanceShapeName(@Nullable String instanceShapeName) {
            return instanceShapeName(Output.of(instanceShapeName));
        }

        /**
         * @param remainingMemoryInGbsGreaterThanOrEqualTo The remaining memory of the dedicated VM host, in GBs.
         * 
         * @return builder
         * 
         */
        public Builder remainingMemoryInGbsGreaterThanOrEqualTo(Output</* @Nullable */ Double> remainingMemoryInGbsGreaterThanOrEqualTo) {
            $.remainingMemoryInGbsGreaterThanOrEqualTo = remainingMemoryInGbsGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param remainingMemoryInGbsGreaterThanOrEqualTo The remaining memory of the dedicated VM host, in GBs.
         * 
         * @return builder
         * 
         */
        public Builder remainingMemoryInGbsGreaterThanOrEqualTo(@Nullable Double remainingMemoryInGbsGreaterThanOrEqualTo) {
            return remainingMemoryInGbsGreaterThanOrEqualTo(Output.of(remainingMemoryInGbsGreaterThanOrEqualTo));
        }

        /**
         * @param remainingOcpusGreaterThanOrEqualTo The available OCPUs of the dedicated VM host.
         * 
         * @return builder
         * 
         */
        public Builder remainingOcpusGreaterThanOrEqualTo(Output</* @Nullable */ Double> remainingOcpusGreaterThanOrEqualTo) {
            $.remainingOcpusGreaterThanOrEqualTo = remainingOcpusGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param remainingOcpusGreaterThanOrEqualTo The available OCPUs of the dedicated VM host.
         * 
         * @return builder
         * 
         */
        public Builder remainingOcpusGreaterThanOrEqualTo(@Nullable Double remainingOcpusGreaterThanOrEqualTo) {
            return remainingOcpusGreaterThanOrEqualTo(Output.of(remainingOcpusGreaterThanOrEqualTo));
        }

        /**
         * @param state A filter to only return resources that match the given lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(Output</* @Nullable */ String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to only return resources that match the given lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            return state(Output.of(state));
        }

        public GetDedicatedVmHostsArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
