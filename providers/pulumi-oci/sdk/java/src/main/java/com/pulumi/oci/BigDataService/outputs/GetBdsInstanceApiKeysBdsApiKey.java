// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBdsInstanceApiKeysBdsApiKey {
    /**
     * @return The OCID of the cluster.
     * 
     */
    private final String bdsInstanceId;
    /**
     * @return The name of the region to establish the Object Storage endpoint which was set as part of key creation operation. If no region was provided this will be set to be the same region where the cluster lives. Example us-phoenix-1 .
     * 
     */
    private final String defaultRegion;
    /**
     * @return The fingerprint that corresponds to the public API key requested.
     * 
     */
    private final String fingerprint;
    /**
     * @return Identifier of the user&#39;s API key.
     * 
     */
    private final String id;
    /**
     * @return User friendly identifier used to uniquely differentiate between different API keys. Only ASCII alphanumeric characters with no spaces allowed.
     * 
     */
    private final String keyAlias;
    private final String passphrase;
    /**
     * @return The full path and file name of the private key used for authentication. This location will be automatically selected on the BDS local file system.
     * 
     */
    private final String pemfilepath;
    /**
     * @return The current status of the API key.
     * 
     */
    private final String state;
    /**
     * @return The OCID of your tenancy.
     * 
     */
    private final String tenantId;
    /**
     * @return The time the API key was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    private final String timeCreated;
    /**
     * @return The user OCID for which this API key was created.
     * 
     */
    private final String userId;

    @CustomType.Constructor
    private GetBdsInstanceApiKeysBdsApiKey(
        @CustomType.Parameter("bdsInstanceId") String bdsInstanceId,
        @CustomType.Parameter("defaultRegion") String defaultRegion,
        @CustomType.Parameter("fingerprint") String fingerprint,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("keyAlias") String keyAlias,
        @CustomType.Parameter("passphrase") String passphrase,
        @CustomType.Parameter("pemfilepath") String pemfilepath,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("tenantId") String tenantId,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("userId") String userId) {
        this.bdsInstanceId = bdsInstanceId;
        this.defaultRegion = defaultRegion;
        this.fingerprint = fingerprint;
        this.id = id;
        this.keyAlias = keyAlias;
        this.passphrase = passphrase;
        this.pemfilepath = pemfilepath;
        this.state = state;
        this.tenantId = tenantId;
        this.timeCreated = timeCreated;
        this.userId = userId;
    }

    /**
     * @return The OCID of the cluster.
     * 
     */
    public String bdsInstanceId() {
        return this.bdsInstanceId;
    }
    /**
     * @return The name of the region to establish the Object Storage endpoint which was set as part of key creation operation. If no region was provided this will be set to be the same region where the cluster lives. Example us-phoenix-1 .
     * 
     */
    public String defaultRegion() {
        return this.defaultRegion;
    }
    /**
     * @return The fingerprint that corresponds to the public API key requested.
     * 
     */
    public String fingerprint() {
        return this.fingerprint;
    }
    /**
     * @return Identifier of the user&#39;s API key.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return User friendly identifier used to uniquely differentiate between different API keys. Only ASCII alphanumeric characters with no spaces allowed.
     * 
     */
    public String keyAlias() {
        return this.keyAlias;
    }
    public String passphrase() {
        return this.passphrase;
    }
    /**
     * @return The full path and file name of the private key used for authentication. This location will be automatically selected on the BDS local file system.
     * 
     */
    public String pemfilepath() {
        return this.pemfilepath;
    }
    /**
     * @return The current status of the API key.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The OCID of your tenancy.
     * 
     */
    public String tenantId() {
        return this.tenantId;
    }
    /**
     * @return The time the API key was created, shown as an RFC 3339 formatted datetime string.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The user OCID for which this API key was created.
     * 
     */
    public String userId() {
        return this.userId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBdsInstanceApiKeysBdsApiKey defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bdsInstanceId;
        private String defaultRegion;
        private String fingerprint;
        private String id;
        private String keyAlias;
        private String passphrase;
        private String pemfilepath;
        private String state;
        private String tenantId;
        private String timeCreated;
        private String userId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBdsInstanceApiKeysBdsApiKey defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bdsInstanceId = defaults.bdsInstanceId;
    	      this.defaultRegion = defaults.defaultRegion;
    	      this.fingerprint = defaults.fingerprint;
    	      this.id = defaults.id;
    	      this.keyAlias = defaults.keyAlias;
    	      this.passphrase = defaults.passphrase;
    	      this.pemfilepath = defaults.pemfilepath;
    	      this.state = defaults.state;
    	      this.tenantId = defaults.tenantId;
    	      this.timeCreated = defaults.timeCreated;
    	      this.userId = defaults.userId;
        }

        public Builder bdsInstanceId(String bdsInstanceId) {
            this.bdsInstanceId = Objects.requireNonNull(bdsInstanceId);
            return this;
        }
        public Builder defaultRegion(String defaultRegion) {
            this.defaultRegion = Objects.requireNonNull(defaultRegion);
            return this;
        }
        public Builder fingerprint(String fingerprint) {
            this.fingerprint = Objects.requireNonNull(fingerprint);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder keyAlias(String keyAlias) {
            this.keyAlias = Objects.requireNonNull(keyAlias);
            return this;
        }
        public Builder passphrase(String passphrase) {
            this.passphrase = Objects.requireNonNull(passphrase);
            return this;
        }
        public Builder pemfilepath(String pemfilepath) {
            this.pemfilepath = Objects.requireNonNull(pemfilepath);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder tenantId(String tenantId) {
            this.tenantId = Objects.requireNonNull(tenantId);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder userId(String userId) {
            this.userId = Objects.requireNonNull(userId);
            return this;
        }        public GetBdsInstanceApiKeysBdsApiKey build() {
            return new GetBdsInstanceApiKeysBdsApiKey(bdsInstanceId, defaultRegion, fingerprint, id, keyAlias, passphrase, pemfilepath, state, tenantId, timeCreated, userId);
        }
    }
}
