// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Mysql.outputs.GetAnalyticsClusterClusterNode;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAnalyticsClusterResult {
    /**
     * @return An Analytics Cluster Node is a compute host that is part of an Analytics Cluster.
     * 
     */
    private final List<GetAnalyticsClusterClusterNode> clusterNodes;
    /**
     * @return The number of analytics-processing compute instances, of the specified shape, in the Analytics Cluster.
     * 
     */
    private final Integer clusterSize;
    /**
     * @return The OCID of the parent DB System this Analytics Cluster is attached to.
     * 
     */
    private final String dbSystemId;
    private final String id;
    /**
     * @return Additional information about the current lifecycleState.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return The shape determines resources to allocate to the Analytics Cluster nodes - CPU cores, memory.
     * 
     */
    private final String shapeName;
    /**
     * @return The current state of the Analytics Cluster.
     * 
     */
    private final String state;
    /**
     * @return The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetAnalyticsClusterResult(
        @CustomType.Parameter("clusterNodes") List<GetAnalyticsClusterClusterNode> clusterNodes,
        @CustomType.Parameter("clusterSize") Integer clusterSize,
        @CustomType.Parameter("dbSystemId") String dbSystemId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("shapeName") String shapeName,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.clusterNodes = clusterNodes;
        this.clusterSize = clusterSize;
        this.dbSystemId = dbSystemId;
        this.id = id;
        this.lifecycleDetails = lifecycleDetails;
        this.shapeName = shapeName;
        this.state = state;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return An Analytics Cluster Node is a compute host that is part of an Analytics Cluster.
     * 
     */
    public List<GetAnalyticsClusterClusterNode> clusterNodes() {
        return this.clusterNodes;
    }
    /**
     * @return The number of analytics-processing compute instances, of the specified shape, in the Analytics Cluster.
     * 
     */
    public Integer clusterSize() {
        return this.clusterSize;
    }
    /**
     * @return The OCID of the parent DB System this Analytics Cluster is attached to.
     * 
     */
    public String dbSystemId() {
        return this.dbSystemId;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return Additional information about the current lifecycleState.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The shape determines resources to allocate to the Analytics Cluster nodes - CPU cores, memory.
     * 
     */
    public String shapeName() {
        return this.shapeName;
    }
    /**
     * @return The current state of the Analytics Cluster.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the Analytics Cluster was created, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the Analytics Cluster was last updated, as described by [RFC 3339](https://tools.ietf.org/rfc/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAnalyticsClusterResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetAnalyticsClusterClusterNode> clusterNodes;
        private Integer clusterSize;
        private String dbSystemId;
        private String id;
        private String lifecycleDetails;
        private String shapeName;
        private String state;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAnalyticsClusterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.clusterNodes = defaults.clusterNodes;
    	      this.clusterSize = defaults.clusterSize;
    	      this.dbSystemId = defaults.dbSystemId;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.shapeName = defaults.shapeName;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder clusterNodes(List<GetAnalyticsClusterClusterNode> clusterNodes) {
            this.clusterNodes = Objects.requireNonNull(clusterNodes);
            return this;
        }
        public Builder clusterNodes(GetAnalyticsClusterClusterNode... clusterNodes) {
            return clusterNodes(List.of(clusterNodes));
        }
        public Builder clusterSize(Integer clusterSize) {
            this.clusterSize = Objects.requireNonNull(clusterSize);
            return this;
        }
        public Builder dbSystemId(String dbSystemId) {
            this.dbSystemId = Objects.requireNonNull(dbSystemId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder shapeName(String shapeName) {
            this.shapeName = Objects.requireNonNull(shapeName);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetAnalyticsClusterResult build() {
            return new GetAnalyticsClusterResult(clusterNodes, clusterSize, dbSystemId, id, lifecycleDetails, shapeName, state, timeCreated, timeUpdated);
        }
    }
}
