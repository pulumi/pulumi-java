// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.GetRepositoryAuthorItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRepositoryAuthorResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return List of author objects.
     * 
     */
    private final List<GetRepositoryAuthorItem> items;
    private final @Nullable String refName;
    private final String repositoryId;

    @CustomType.Constructor
    private GetRepositoryAuthorResult(
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("items") List<GetRepositoryAuthorItem> items,
        @CustomType.Parameter("refName") @Nullable String refName,
        @CustomType.Parameter("repositoryId") String repositoryId) {
        this.id = id;
        this.items = items;
        this.refName = refName;
        this.repositoryId = repositoryId;
    }

    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of author objects.
     * 
     */
    public List<GetRepositoryAuthorItem> items() {
        return this.items;
    }
    public Optional<String> refName() {
        return Optional.ofNullable(this.refName);
    }
    public String repositoryId() {
        return this.repositoryId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRepositoryAuthorResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String id;
        private List<GetRepositoryAuthorItem> items;
        private @Nullable String refName;
        private String repositoryId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRepositoryAuthorResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.refName = defaults.refName;
    	      this.repositoryId = defaults.repositoryId;
        }

        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder items(List<GetRepositoryAuthorItem> items) {
            this.items = Objects.requireNonNull(items);
            return this;
        }
        public Builder items(GetRepositoryAuthorItem... items) {
            return items(List.of(items));
        }
        public Builder refName(@Nullable String refName) {
            this.refName = refName;
            return this;
        }
        public Builder repositoryId(String repositoryId) {
            this.repositoryId = Objects.requireNonNull(repositoryId);
            return this;
        }        public GetRepositoryAuthorResult build() {
            return new GetRepositoryAuthorResult(id, items, refName, repositoryId);
        }
    }
}
