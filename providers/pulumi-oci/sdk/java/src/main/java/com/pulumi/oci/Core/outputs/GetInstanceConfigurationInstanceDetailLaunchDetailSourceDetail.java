// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail {
    /**
     * @return The OCID of the boot volume used to boot the instance.
     * 
     */
    private final String bootVolumeId;
    /**
     * @return The size of the boot volume in GBs. The minimum value is 50 GB and the maximum value is 32,768 GB (32 TB).
     * 
     */
    private final String bootVolumeSizeInGbs;
    /**
     * @return The OCID of the image used to boot the instance.
     * 
     */
    private final String imageId;
    /**
     * @return The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     * 
     */
    private final String sourceType;

    @CustomType.Constructor
    private GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail(
        @CustomType.Parameter("bootVolumeId") String bootVolumeId,
        @CustomType.Parameter("bootVolumeSizeInGbs") String bootVolumeSizeInGbs,
        @CustomType.Parameter("imageId") String imageId,
        @CustomType.Parameter("sourceType") String sourceType) {
        this.bootVolumeId = bootVolumeId;
        this.bootVolumeSizeInGbs = bootVolumeSizeInGbs;
        this.imageId = imageId;
        this.sourceType = sourceType;
    }

    /**
     * @return The OCID of the boot volume used to boot the instance.
     * 
     */
    public String bootVolumeId() {
        return this.bootVolumeId;
    }
    /**
     * @return The size of the boot volume in GBs. The minimum value is 50 GB and the maximum value is 32,768 GB (32 TB).
     * 
     */
    public String bootVolumeSizeInGbs() {
        return this.bootVolumeSizeInGbs;
    }
    /**
     * @return The OCID of the image used to boot the instance.
     * 
     */
    public String imageId() {
        return this.imageId;
    }
    /**
     * @return The source type for the instance. Use `image` when specifying the image OCID. Use `bootVolume` when specifying the boot volume OCID.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String bootVolumeId;
        private String bootVolumeSizeInGbs;
        private String imageId;
        private String sourceType;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bootVolumeId = defaults.bootVolumeId;
    	      this.bootVolumeSizeInGbs = defaults.bootVolumeSizeInGbs;
    	      this.imageId = defaults.imageId;
    	      this.sourceType = defaults.sourceType;
        }

        public Builder bootVolumeId(String bootVolumeId) {
            this.bootVolumeId = Objects.requireNonNull(bootVolumeId);
            return this;
        }
        public Builder bootVolumeSizeInGbs(String bootVolumeSizeInGbs) {
            this.bootVolumeSizeInGbs = Objects.requireNonNull(bootVolumeSizeInGbs);
            return this;
        }
        public Builder imageId(String imageId) {
            this.imageId = Objects.requireNonNull(imageId);
            return this;
        }
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }        public GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail build() {
            return new GetInstanceConfigurationInstanceDetailLaunchDetailSourceDetail(bootVolumeId, bootVolumeSizeInGbs, imageId, sourceType);
        }
    }
}
