// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CertificateAuthorityCertificateAuthorityRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateAuthorityCertificateAuthorityRuleArgs Empty = new CertificateAuthorityCertificateAuthorityRuleArgs();

    /**
     * (Updatable) A property indicating the maximum validity duration, in days, of subordinate CA&#39;s issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    @Import(name="certificateAuthorityMaxValidityDuration")
    private @Nullable Output<String> certificateAuthorityMaxValidityDuration;

    /**
     * @return (Updatable) A property indicating the maximum validity duration, in days, of subordinate CA&#39;s issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    public Optional<Output<String>> certificateAuthorityMaxValidityDuration() {
        return Optional.ofNullable(this.certificateAuthorityMaxValidityDuration);
    }

    /**
     * (Updatable) A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    @Import(name="leafCertificateMaxValidityDuration")
    private @Nullable Output<String> leafCertificateMaxValidityDuration;

    /**
     * @return (Updatable) A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    public Optional<Output<String>> leafCertificateMaxValidityDuration() {
        return Optional.ofNullable(this.leafCertificateMaxValidityDuration);
    }

    /**
     * (Updatable) The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
     * 
     */
    @Import(name="ruleType", required=true)
    private Output<String> ruleType;

    /**
     * @return (Updatable) The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
     * 
     */
    public Output<String> ruleType() {
        return this.ruleType;
    }

    private CertificateAuthorityCertificateAuthorityRuleArgs() {}

    private CertificateAuthorityCertificateAuthorityRuleArgs(CertificateAuthorityCertificateAuthorityRuleArgs $) {
        this.certificateAuthorityMaxValidityDuration = $.certificateAuthorityMaxValidityDuration;
        this.leafCertificateMaxValidityDuration = $.leafCertificateMaxValidityDuration;
        this.ruleType = $.ruleType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateAuthorityCertificateAuthorityRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateAuthorityCertificateAuthorityRuleArgs $;

        public Builder() {
            $ = new CertificateAuthorityCertificateAuthorityRuleArgs();
        }

        public Builder(CertificateAuthorityCertificateAuthorityRuleArgs defaults) {
            $ = new CertificateAuthorityCertificateAuthorityRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateAuthorityMaxValidityDuration (Updatable) A property indicating the maximum validity duration, in days, of subordinate CA&#39;s issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         * 
         * @return builder
         * 
         */
        public Builder certificateAuthorityMaxValidityDuration(@Nullable Output<String> certificateAuthorityMaxValidityDuration) {
            $.certificateAuthorityMaxValidityDuration = certificateAuthorityMaxValidityDuration;
            return this;
        }

        /**
         * @param certificateAuthorityMaxValidityDuration (Updatable) A property indicating the maximum validity duration, in days, of subordinate CA&#39;s issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         * 
         * @return builder
         * 
         */
        public Builder certificateAuthorityMaxValidityDuration(String certificateAuthorityMaxValidityDuration) {
            return certificateAuthorityMaxValidityDuration(Output.of(certificateAuthorityMaxValidityDuration));
        }

        /**
         * @param leafCertificateMaxValidityDuration (Updatable) A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         * 
         * @return builder
         * 
         */
        public Builder leafCertificateMaxValidityDuration(@Nullable Output<String> leafCertificateMaxValidityDuration) {
            $.leafCertificateMaxValidityDuration = leafCertificateMaxValidityDuration;
            return this;
        }

        /**
         * @param leafCertificateMaxValidityDuration (Updatable) A property indicating the maximum validity duration, in days, of leaf certificates issued by this CA. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         * 
         * @return builder
         * 
         */
        public Builder leafCertificateMaxValidityDuration(String leafCertificateMaxValidityDuration) {
            return leafCertificateMaxValidityDuration(Output.of(leafCertificateMaxValidityDuration));
        }

        /**
         * @param ruleType (Updatable) The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(Output<String> ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        /**
         * @param ruleType (Updatable) The type of rule, whether a renewal rule regarding when to renew the CA or an issuance expiry rule that governs how long the certificates and CAs issued by the CA are valid. (For internal use only) An internal issuance rule defines the number and type of certificates that the CA can issue.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(String ruleType) {
            return ruleType(Output.of(ruleType));
        }

        public CertificateAuthorityCertificateAuthorityRuleArgs build() {
            $.ruleType = Objects.requireNonNull($.ruleType, "expected parameter 'ruleType' to be non-null");
            return $;
        }
    }

}
