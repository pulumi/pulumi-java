// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetMaskingReportsMaskedColumnItem;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMaskingReportsMaskedColumnResult {
    /**
     * @return The name of the masked column.
     * 
     */
    private final @Nullable List<String> columnNames;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return An array of masking column summary objects.
     * 
     */
    private final List<GetMaskingReportsMaskedColumnItem> items;
    /**
     * @return The masking group of the masked column.
     * 
     */
    private final @Nullable List<String> maskingColumnGroups;
    private final String maskingReportId;
    /**
     * @return The type of the object (table or editioning view) that contains the masked column.
     * 
     */
    private final @Nullable List<String> objectTypes;
    /**
     * @return The name of the object (table or editioning view) that contains the masked column.
     * 
     */
    private final @Nullable List<String> objects;
    /**
     * @return The name of the schema that contains the masked column.
     * 
     */
    private final @Nullable List<String> schemaNames;
    /**
     * @return The OCID of the sensitive type associated with the masked column.
     * 
     */
    private final @Nullable String sensitiveTypeId;

    @CustomType.Constructor
    private GetMaskingReportsMaskedColumnResult(
        @CustomType.Parameter("columnNames") @Nullable List<String> columnNames,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("items") List<GetMaskingReportsMaskedColumnItem> items,
        @CustomType.Parameter("maskingColumnGroups") @Nullable List<String> maskingColumnGroups,
        @CustomType.Parameter("maskingReportId") String maskingReportId,
        @CustomType.Parameter("objectTypes") @Nullable List<String> objectTypes,
        @CustomType.Parameter("objects") @Nullable List<String> objects,
        @CustomType.Parameter("schemaNames") @Nullable List<String> schemaNames,
        @CustomType.Parameter("sensitiveTypeId") @Nullable String sensitiveTypeId) {
        this.columnNames = columnNames;
        this.id = id;
        this.items = items;
        this.maskingColumnGroups = maskingColumnGroups;
        this.maskingReportId = maskingReportId;
        this.objectTypes = objectTypes;
        this.objects = objects;
        this.schemaNames = schemaNames;
        this.sensitiveTypeId = sensitiveTypeId;
    }

    /**
     * @return The name of the masked column.
     * 
     */
    public List<String> columnNames() {
        return this.columnNames == null ? List.of() : this.columnNames;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return An array of masking column summary objects.
     * 
     */
    public List<GetMaskingReportsMaskedColumnItem> items() {
        return this.items;
    }
    /**
     * @return The masking group of the masked column.
     * 
     */
    public List<String> maskingColumnGroups() {
        return this.maskingColumnGroups == null ? List.of() : this.maskingColumnGroups;
    }
    public String maskingReportId() {
        return this.maskingReportId;
    }
    /**
     * @return The type of the object (table or editioning view) that contains the masked column.
     * 
     */
    public List<String> objectTypes() {
        return this.objectTypes == null ? List.of() : this.objectTypes;
    }
    /**
     * @return The name of the object (table or editioning view) that contains the masked column.
     * 
     */
    public List<String> objects() {
        return this.objects == null ? List.of() : this.objects;
    }
    /**
     * @return The name of the schema that contains the masked column.
     * 
     */
    public List<String> schemaNames() {
        return this.schemaNames == null ? List.of() : this.schemaNames;
    }
    /**
     * @return The OCID of the sensitive type associated with the masked column.
     * 
     */
    public Optional<String> sensitiveTypeId() {
        return Optional.ofNullable(this.sensitiveTypeId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMaskingReportsMaskedColumnResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> columnNames;
        private String id;
        private List<GetMaskingReportsMaskedColumnItem> items;
        private @Nullable List<String> maskingColumnGroups;
        private String maskingReportId;
        private @Nullable List<String> objectTypes;
        private @Nullable List<String> objects;
        private @Nullable List<String> schemaNames;
        private @Nullable String sensitiveTypeId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMaskingReportsMaskedColumnResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnNames = defaults.columnNames;
    	      this.id = defaults.id;
    	      this.items = defaults.items;
    	      this.maskingColumnGroups = defaults.maskingColumnGroups;
    	      this.maskingReportId = defaults.maskingReportId;
    	      this.objectTypes = defaults.objectTypes;
    	      this.objects = defaults.objects;
    	      this.schemaNames = defaults.schemaNames;
    	      this.sensitiveTypeId = defaults.sensitiveTypeId;
        }

        public Builder columnNames(@Nullable List<String> columnNames) {
            this.columnNames = columnNames;
            return this;
        }
        public Builder columnNames(String... columnNames) {
            return columnNames(List.of(columnNames));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder items(List<GetMaskingReportsMaskedColumnItem> items) {
            this.items = Objects.requireNonNull(items);
            return this;
        }
        public Builder items(GetMaskingReportsMaskedColumnItem... items) {
            return items(List.of(items));
        }
        public Builder maskingColumnGroups(@Nullable List<String> maskingColumnGroups) {
            this.maskingColumnGroups = maskingColumnGroups;
            return this;
        }
        public Builder maskingColumnGroups(String... maskingColumnGroups) {
            return maskingColumnGroups(List.of(maskingColumnGroups));
        }
        public Builder maskingReportId(String maskingReportId) {
            this.maskingReportId = Objects.requireNonNull(maskingReportId);
            return this;
        }
        public Builder objectTypes(@Nullable List<String> objectTypes) {
            this.objectTypes = objectTypes;
            return this;
        }
        public Builder objectTypes(String... objectTypes) {
            return objectTypes(List.of(objectTypes));
        }
        public Builder objects(@Nullable List<String> objects) {
            this.objects = objects;
            return this;
        }
        public Builder objects(String... objects) {
            return objects(List.of(objects));
        }
        public Builder schemaNames(@Nullable List<String> schemaNames) {
            this.schemaNames = schemaNames;
            return this;
        }
        public Builder schemaNames(String... schemaNames) {
            return schemaNames(List.of(schemaNames));
        }
        public Builder sensitiveTypeId(@Nullable String sensitiveTypeId) {
            this.sensitiveTypeId = sensitiveTypeId;
            return this;
        }        public GetMaskingReportsMaskedColumnResult build() {
            return new GetMaskingReportsMaskedColumnResult(columnNames, id, items, maskingColumnGroups, maskingReportId, objectTypes, objects, schemaNames, sensitiveTypeId);
        }
    }
}
