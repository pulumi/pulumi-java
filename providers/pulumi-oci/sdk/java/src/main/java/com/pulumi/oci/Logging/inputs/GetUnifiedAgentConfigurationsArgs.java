// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Logging.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Logging.inputs.GetUnifiedAgentConfigurationsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetUnifiedAgentConfigurationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUnifiedAgentConfigurationsArgs Empty = new GetUnifiedAgentConfigurationsArgs();

    /**
     * Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * Resource name
     * 
     */
    @Import(name="displayName")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return Resource name
     * 
     */
    public Output</* @Nullable */ String> displayName() {
        return this.displayName;
    }

    @Import(name="filters")
    private Output</* @Nullable */ List<GetUnifiedAgentConfigurationsFilter>> filters;

    public Output</* @Nullable */ List<GetUnifiedAgentConfigurationsFilter>> filters() {
        return this.filters;
    }

    /**
     * The OCID of a group or a dynamic group.
     * 
     */
    @Import(name="groupId")
    private Output</* @Nullable */ String> groupId;

    /**
     * @return The OCID of a group or a dynamic group.
     * 
     */
    public Output</* @Nullable */ String> groupId() {
        return this.groupId;
    }

    /**
     * Specifies whether or not nested compartments should be traversed. Defaults to false.
     * 
     */
    @Import(name="isCompartmentIdInSubtree")
    private Output</* @Nullable */ Boolean> isCompartmentIdInSubtree;

    /**
     * @return Specifies whether or not nested compartments should be traversed. Defaults to false.
     * 
     */
    public Output</* @Nullable */ Boolean> isCompartmentIdInSubtree() {
        return this.isCompartmentIdInSubtree;
    }

    /**
     * Custom log OCID to list resources with the log as destination.
     * 
     */
    @Import(name="logId")
    private Output</* @Nullable */ String> logId;

    /**
     * @return Custom log OCID to list resources with the log as destination.
     * 
     */
    public Output</* @Nullable */ String> logId() {
        return this.logId;
    }

    /**
     * Lifecycle state of the log object
     * 
     */
    @Import(name="state")
    private Output</* @Nullable */ String> state;

    /**
     * @return Lifecycle state of the log object
     * 
     */
    public Output</* @Nullable */ String> state() {
        return this.state;
    }

    private GetUnifiedAgentConfigurationsArgs() {}

    private GetUnifiedAgentConfigurationsArgs(GetUnifiedAgentConfigurationsArgs $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.groupId = $.groupId;
        this.isCompartmentIdInSubtree = $.isCompartmentIdInSubtree;
        this.logId = $.logId;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUnifiedAgentConfigurationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUnifiedAgentConfigurationsArgs $;

        public Builder() {
            $ = new GetUnifiedAgentConfigurationsArgs();
        }

        public Builder(GetUnifiedAgentConfigurationsArgs defaults) {
            $ = new GetUnifiedAgentConfigurationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId Compartment OCID to list resources in. See compartmentIdInSubtree for nested compartments traversal.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName Resource name
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output</* @Nullable */ String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName Resource name
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(Output</* @Nullable */ List<GetUnifiedAgentConfigurationsFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetUnifiedAgentConfigurationsFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetUnifiedAgentConfigurationsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param groupId The OCID of a group or a dynamic group.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Output</* @Nullable */ String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The OCID of a group or a dynamic group.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param isCompartmentIdInSubtree Specifies whether or not nested compartments should be traversed. Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder isCompartmentIdInSubtree(Output</* @Nullable */ Boolean> isCompartmentIdInSubtree) {
            $.isCompartmentIdInSubtree = isCompartmentIdInSubtree;
            return this;
        }

        /**
         * @param isCompartmentIdInSubtree Specifies whether or not nested compartments should be traversed. Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder isCompartmentIdInSubtree(@Nullable Boolean isCompartmentIdInSubtree) {
            return isCompartmentIdInSubtree(Output.of(isCompartmentIdInSubtree));
        }

        /**
         * @param logId Custom log OCID to list resources with the log as destination.
         * 
         * @return builder
         * 
         */
        public Builder logId(Output</* @Nullable */ String> logId) {
            $.logId = logId;
            return this;
        }

        /**
         * @param logId Custom log OCID to list resources with the log as destination.
         * 
         * @return builder
         * 
         */
        public Builder logId(@Nullable String logId) {
            return logId(Output.of(logId));
        }

        /**
         * @param state Lifecycle state of the log object
         * 
         * @return builder
         * 
         */
        public Builder state(Output</* @Nullable */ String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Lifecycle state of the log object
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            return state(Output.of(state));
        }

        public GetUnifiedAgentConfigurationsArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
