// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waf.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Waf.inputs.AppFirewallPolicyRequestProtectionRuleProtectionCapabilityArgs;
import com.pulumi.oci.Waf.inputs.AppFirewallPolicyRequestProtectionRuleProtectionCapabilitySettingsArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppFirewallPolicyRequestProtectionRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppFirewallPolicyRequestProtectionRuleArgs Empty = new AppFirewallPolicyRequestProtectionRuleArgs();

    /**
     * (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
     * 
     */
    @Import(name="actionName", required=true)
    private Output<String> actionName;

    /**
     * @return (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
     * 
     */
    public Output<String> actionName() {
        return this.actionName;
    }

    /**
     * (Updatable) An expression that determines whether or not the rule action should be executed.
     * 
     */
    @Import(name="condition")
    private @Nullable Output<String> condition;

    /**
     * @return (Updatable) An expression that determines whether or not the rule action should be executed.
     * 
     */
    public Optional<Output<String>> condition() {
        return Optional.ofNullable(this.condition);
    }

    /**
     * (Updatable) The language used to parse condition from field `condition`. Available languages:
     * * **JMESPATH** an extended JMESPath language syntax.
     * 
     */
    @Import(name="conditionLanguage")
    private @Nullable Output<String> conditionLanguage;

    /**
     * @return (Updatable) The language used to parse condition from field `condition`. Available languages:
     * * **JMESPATH** an extended JMESPath language syntax.
     * 
     */
    public Optional<Output<String>> conditionLanguage() {
        return Optional.ofNullable(this.conditionLanguage);
    }

    /**
     * (Updatable) Rule name. Must be unique within the module.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return (Updatable) Rule name. Must be unique within the module.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are executed in order of appearance. The array cannot contain entries with the same pair of capability key and version more than once.
     * 
     */
    @Import(name="protectionCapabilities", required=true)
    private Output<List<AppFirewallPolicyRequestProtectionRuleProtectionCapabilityArgs>> protectionCapabilities;

    /**
     * @return (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are executed in order of appearance. The array cannot contain entries with the same pair of capability key and version more than once.
     * 
     */
    public Output<List<AppFirewallPolicyRequestProtectionRuleProtectionCapabilityArgs>> protectionCapabilities() {
        return this.protectionCapabilities;
    }

    /**
     * (Updatable) Settings for protection capabilities
     * 
     */
    @Import(name="protectionCapabilitySettings")
    private @Nullable Output<AppFirewallPolicyRequestProtectionRuleProtectionCapabilitySettingsArgs> protectionCapabilitySettings;

    /**
     * @return (Updatable) Settings for protection capabilities
     * 
     */
    public Optional<Output<AppFirewallPolicyRequestProtectionRuleProtectionCapabilitySettingsArgs>> protectionCapabilitySettings() {
        return Optional.ofNullable(this.protectionCapabilitySettings);
    }

    /**
     * (Updatable) Type of WebAppFirewallPolicyRule.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) Type of WebAppFirewallPolicyRule.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AppFirewallPolicyRequestProtectionRuleArgs() {}

    private AppFirewallPolicyRequestProtectionRuleArgs(AppFirewallPolicyRequestProtectionRuleArgs $) {
        this.actionName = $.actionName;
        this.condition = $.condition;
        this.conditionLanguage = $.conditionLanguage;
        this.name = $.name;
        this.protectionCapabilities = $.protectionCapabilities;
        this.protectionCapabilitySettings = $.protectionCapabilitySettings;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppFirewallPolicyRequestProtectionRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppFirewallPolicyRequestProtectionRuleArgs $;

        public Builder() {
            $ = new AppFirewallPolicyRequestProtectionRuleArgs();
        }

        public Builder(AppFirewallPolicyRequestProtectionRuleArgs defaults) {
            $ = new AppFirewallPolicyRequestProtectionRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionName (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         * 
         * @return builder
         * 
         */
        public Builder actionName(Output<String> actionName) {
            $.actionName = actionName;
            return this;
        }

        /**
         * @param actionName (Updatable) Override action to take if capability was triggered, defined in Protection Rule for this capability. Only actions of type CHECK are allowed.
         * 
         * @return builder
         * 
         */
        public Builder actionName(String actionName) {
            return actionName(Output.of(actionName));
        }

        /**
         * @param condition (Updatable) An expression that determines whether or not the rule action should be executed.
         * 
         * @return builder
         * 
         */
        public Builder condition(@Nullable Output<String> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition (Updatable) An expression that determines whether or not the rule action should be executed.
         * 
         * @return builder
         * 
         */
        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param conditionLanguage (Updatable) The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         * 
         * @return builder
         * 
         */
        public Builder conditionLanguage(@Nullable Output<String> conditionLanguage) {
            $.conditionLanguage = conditionLanguage;
            return this;
        }

        /**
         * @param conditionLanguage (Updatable) The language used to parse condition from field `condition`. Available languages:
         * * **JMESPATH** an extended JMESPath language syntax.
         * 
         * @return builder
         * 
         */
        public Builder conditionLanguage(String conditionLanguage) {
            return conditionLanguage(Output.of(conditionLanguage));
        }

        /**
         * @param name (Updatable) Rule name. Must be unique within the module.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) Rule name. Must be unique within the module.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param protectionCapabilities (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are executed in order of appearance. The array cannot contain entries with the same pair of capability key and version more than once.
         * 
         * @return builder
         * 
         */
        public Builder protectionCapabilities(Output<List<AppFirewallPolicyRequestProtectionRuleProtectionCapabilityArgs>> protectionCapabilities) {
            $.protectionCapabilities = protectionCapabilities;
            return this;
        }

        /**
         * @param protectionCapabilities (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are executed in order of appearance. The array cannot contain entries with the same pair of capability key and version more than once.
         * 
         * @return builder
         * 
         */
        public Builder protectionCapabilities(List<AppFirewallPolicyRequestProtectionRuleProtectionCapabilityArgs> protectionCapabilities) {
            return protectionCapabilities(Output.of(protectionCapabilities));
        }

        /**
         * @param protectionCapabilities (Updatable) An ordered list that references OCI-managed protection capabilities. Referenced protection capabilities are executed in order of appearance. The array cannot contain entries with the same pair of capability key and version more than once.
         * 
         * @return builder
         * 
         */
        public Builder protectionCapabilities(AppFirewallPolicyRequestProtectionRuleProtectionCapabilityArgs... protectionCapabilities) {
            return protectionCapabilities(List.of(protectionCapabilities));
        }

        /**
         * @param protectionCapabilitySettings (Updatable) Settings for protection capabilities
         * 
         * @return builder
         * 
         */
        public Builder protectionCapabilitySettings(@Nullable Output<AppFirewallPolicyRequestProtectionRuleProtectionCapabilitySettingsArgs> protectionCapabilitySettings) {
            $.protectionCapabilitySettings = protectionCapabilitySettings;
            return this;
        }

        /**
         * @param protectionCapabilitySettings (Updatable) Settings for protection capabilities
         * 
         * @return builder
         * 
         */
        public Builder protectionCapabilitySettings(AppFirewallPolicyRequestProtectionRuleProtectionCapabilitySettingsArgs protectionCapabilitySettings) {
            return protectionCapabilitySettings(Output.of(protectionCapabilitySettings));
        }

        /**
         * @param type (Updatable) Type of WebAppFirewallPolicyRule.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) Type of WebAppFirewallPolicyRule.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AppFirewallPolicyRequestProtectionRuleArgs build() {
            $.actionName = Objects.requireNonNull($.actionName, "expected parameter 'actionName' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.protectionCapabilities = Objects.requireNonNull($.protectionCapabilities, "expected parameter 'protectionCapabilities' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
