// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubSubscription.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetCommitmentArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetCommitmentArgs Empty = new GetCommitmentArgs();

    /**
     * The Commitment Id
     * 
     */
    @Import(name="commitmentId", required=true)
    private Output<String> commitmentId;

    /**
     * @return The Commitment Id
     * 
     */
    public Output<String> commitmentId() {
        return this.commitmentId;
    }

    /**
     * This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
     * 
     */
    @Import(name="xOneGatewaySubscriptionId")
    private @Nullable Output<String> xOneGatewaySubscriptionId;

    /**
     * @return This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
     * 
     */
    public Optional<Output<String>> xOneGatewaySubscriptionId() {
        return Optional.ofNullable(this.xOneGatewaySubscriptionId);
    }

    /**
     * The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
     * 
     */
    @Import(name="xOneOriginRegion")
    private @Nullable Output<String> xOneOriginRegion;

    /**
     * @return The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
     * 
     */
    public Optional<Output<String>> xOneOriginRegion() {
        return Optional.ofNullable(this.xOneOriginRegion);
    }

    private GetCommitmentArgs() {}

    private GetCommitmentArgs(GetCommitmentArgs $) {
        this.commitmentId = $.commitmentId;
        this.xOneGatewaySubscriptionId = $.xOneGatewaySubscriptionId;
        this.xOneOriginRegion = $.xOneOriginRegion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetCommitmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetCommitmentArgs $;

        public Builder() {
            $ = new GetCommitmentArgs();
        }

        public Builder(GetCommitmentArgs defaults) {
            $ = new GetCommitmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param commitmentId The Commitment Id
         * 
         * @return builder
         * 
         */
        public Builder commitmentId(Output<String> commitmentId) {
            $.commitmentId = commitmentId;
            return this;
        }

        /**
         * @param commitmentId The Commitment Id
         * 
         * @return builder
         * 
         */
        public Builder commitmentId(String commitmentId) {
            return commitmentId(Output.of(commitmentId));
        }

        /**
         * @param xOneGatewaySubscriptionId This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
         * 
         * @return builder
         * 
         */
        public Builder xOneGatewaySubscriptionId(@Nullable Output<String> xOneGatewaySubscriptionId) {
            $.xOneGatewaySubscriptionId = xOneGatewaySubscriptionId;
            return this;
        }

        /**
         * @param xOneGatewaySubscriptionId This header is meant to be used only for internal purposes and will be ignored on any public request. The purpose of this header is  to help on Gateway to API calls identification.
         * 
         * @return builder
         * 
         */
        public Builder xOneGatewaySubscriptionId(String xOneGatewaySubscriptionId) {
            return xOneGatewaySubscriptionId(Output.of(xOneGatewaySubscriptionId));
        }

        /**
         * @param xOneOriginRegion The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
         * 
         * @return builder
         * 
         */
        public Builder xOneOriginRegion(@Nullable Output<String> xOneOriginRegion) {
            $.xOneOriginRegion = xOneOriginRegion;
            return this;
        }

        /**
         * @param xOneOriginRegion The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
         * 
         * @return builder
         * 
         */
        public Builder xOneOriginRegion(String xOneOriginRegion) {
            return xOneOriginRegion(Output.of(xOneOriginRegion));
        }

        public GetCommitmentArgs build() {
            $.commitmentId = Objects.requireNonNull($.commitmentId, "expected parameter 'commitmentId' to be non-null");
            return $;
        }
    }

}
