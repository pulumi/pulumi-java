// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BdsInstanceNodeAttachedBlockVolumeArgs extends com.pulumi.resources.ResourceArgs {

    public static final BdsInstanceNodeAttachedBlockVolumeArgs Empty = new BdsInstanceNodeAttachedBlockVolumeArgs();

    /**
     * The OCID of the volume attachment.
     * 
     */
    @Import(name="volumeAttachmentId")
    private @Nullable Output<String> volumeAttachmentId;

    /**
     * @return The OCID of the volume attachment.
     * 
     */
    public Optional<Output<String>> volumeAttachmentId() {
        return Optional.ofNullable(this.volumeAttachmentId);
    }

    /**
     * The size of the volume in GBs.
     * 
     */
    @Import(name="volumeSizeInGbs")
    private @Nullable Output<String> volumeSizeInGbs;

    /**
     * @return The size of the volume in GBs.
     * 
     */
    public Optional<Output<String>> volumeSizeInGbs() {
        return Optional.ofNullable(this.volumeSizeInGbs);
    }

    private BdsInstanceNodeAttachedBlockVolumeArgs() {}

    private BdsInstanceNodeAttachedBlockVolumeArgs(BdsInstanceNodeAttachedBlockVolumeArgs $) {
        this.volumeAttachmentId = $.volumeAttachmentId;
        this.volumeSizeInGbs = $.volumeSizeInGbs;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BdsInstanceNodeAttachedBlockVolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BdsInstanceNodeAttachedBlockVolumeArgs $;

        public Builder() {
            $ = new BdsInstanceNodeAttachedBlockVolumeArgs();
        }

        public Builder(BdsInstanceNodeAttachedBlockVolumeArgs defaults) {
            $ = new BdsInstanceNodeAttachedBlockVolumeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param volumeAttachmentId The OCID of the volume attachment.
         * 
         * @return builder
         * 
         */
        public Builder volumeAttachmentId(@Nullable Output<String> volumeAttachmentId) {
            $.volumeAttachmentId = volumeAttachmentId;
            return this;
        }

        /**
         * @param volumeAttachmentId The OCID of the volume attachment.
         * 
         * @return builder
         * 
         */
        public Builder volumeAttachmentId(String volumeAttachmentId) {
            return volumeAttachmentId(Output.of(volumeAttachmentId));
        }

        /**
         * @param volumeSizeInGbs The size of the volume in GBs.
         * 
         * @return builder
         * 
         */
        public Builder volumeSizeInGbs(@Nullable Output<String> volumeSizeInGbs) {
            $.volumeSizeInGbs = volumeSizeInGbs;
            return this;
        }

        /**
         * @param volumeSizeInGbs The size of the volume in GBs.
         * 
         * @return builder
         * 
         */
        public Builder volumeSizeInGbs(String volumeSizeInGbs) {
            return volumeSizeInGbs(Output.of(volumeSizeInGbs));
        }

        public BdsInstanceNodeAttachedBlockVolumeArgs build() {
            return $;
        }
    }

}
