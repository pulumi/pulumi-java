// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.FileStorage.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.FileStorage.outputs.GetFileSystemsFileSystem;
import com.pulumi.oci.FileStorage.outputs.GetFileSystemsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetFileSystemsResult {
    /**
     * @return The availability domain the file system is in. May be unset as a blank or NULL value.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private final String availabilityDomain;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the file system.
     * 
     */
    private final String compartmentId;
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My file system`
     * 
     */
    private final @Nullable String displayName;
    /**
     * @return The list of file_systems.
     * 
     */
    private final List<GetFileSystemsFileSystem> fileSystems;
    private final @Nullable List<GetFileSystemsFilter> filters;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     * 
     */
    private final @Nullable String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system that contains the source snapshot of a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     * 
     */
    private final @Nullable String parentFileSystemId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     * 
     */
    private final @Nullable String sourceSnapshotId;
    /**
     * @return The current state of the file system.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetFileSystemsResult(
        @CustomType.Parameter("availabilityDomain") String availabilityDomain,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("fileSystems") List<GetFileSystemsFileSystem> fileSystems,
        @CustomType.Parameter("filters") @Nullable List<GetFileSystemsFilter> filters,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("parentFileSystemId") @Nullable String parentFileSystemId,
        @CustomType.Parameter("sourceSnapshotId") @Nullable String sourceSnapshotId,
        @CustomType.Parameter("state") @Nullable String state) {
        this.availabilityDomain = availabilityDomain;
        this.compartmentId = compartmentId;
        this.displayName = displayName;
        this.fileSystems = fileSystems;
        this.filters = filters;
        this.id = id;
        this.parentFileSystemId = parentFileSystemId;
        this.sourceSnapshotId = sourceSnapshotId;
        this.state = state;
    }

    /**
     * @return The availability domain the file system is in. May be unset as a blank or NULL value.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the file system.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information.  Example: `My file system`
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The list of file_systems.
     * 
     */
    public List<GetFileSystemsFileSystem> fileSystems() {
        return this.fileSystems;
    }
    public List<GetFileSystemsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the file system that contains the source snapshot of a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     * 
     */
    public Optional<String> parentFileSystemId() {
        return Optional.ofNullable(this.parentFileSystemId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the source snapshot used to create a cloned file system. See [Cloning a File System](https://docs.cloud.oracle.com/iaas/Content/File/Tasks/cloningafilesystem.htm).
     * 
     */
    public Optional<String> sourceSnapshotId() {
        return Optional.ofNullable(this.sourceSnapshotId);
    }
    /**
     * @return The current state of the file system.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetFileSystemsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String availabilityDomain;
        private String compartmentId;
        private @Nullable String displayName;
        private List<GetFileSystemsFileSystem> fileSystems;
        private @Nullable List<GetFileSystemsFilter> filters;
        private @Nullable String id;
        private @Nullable String parentFileSystemId;
        private @Nullable String sourceSnapshotId;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetFileSystemsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.fileSystems = defaults.fileSystems;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.parentFileSystemId = defaults.parentFileSystemId;
    	      this.sourceSnapshotId = defaults.sourceSnapshotId;
    	      this.state = defaults.state;
        }

        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder fileSystems(List<GetFileSystemsFileSystem> fileSystems) {
            this.fileSystems = Objects.requireNonNull(fileSystems);
            return this;
        }
        public Builder fileSystems(GetFileSystemsFileSystem... fileSystems) {
            return fileSystems(List.of(fileSystems));
        }
        public Builder filters(@Nullable List<GetFileSystemsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetFileSystemsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder parentFileSystemId(@Nullable String parentFileSystemId) {
            this.parentFileSystemId = parentFileSystemId;
            return this;
        }
        public Builder sourceSnapshotId(@Nullable String sourceSnapshotId) {
            this.sourceSnapshotId = sourceSnapshotId;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetFileSystemsResult build() {
            return new GetFileSystemsResult(availabilityDomain, compartmentId, displayName, fileSystems, filters, id, parentFileSystemId, sourceSnapshotId, state);
        }
    }
}
