// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.BigDataService.inputs.AutoScalingConfigurationPolicyRuleMetricThresholdArgs;
import java.lang.String;
import java.util.Objects;


public final class AutoScalingConfigurationPolicyRuleMetricArgs extends com.pulumi.resources.ResourceArgs {

    public static final AutoScalingConfigurationPolicyRuleMetricArgs Empty = new AutoScalingConfigurationPolicyRuleMetricArgs();

    /**
     * (Updatable) Allowed value is CPU_UTILIZATION.
     * 
     */
    @Import(name="metricType", required=true)
    private Output<String> metricType;

    /**
     * @return (Updatable) Allowed value is CPU_UTILIZATION.
     * 
     */
    public Output<String> metricType() {
        return this.metricType;
    }

    /**
     * (Updatable) An autoscale action is triggered when a performance metric meets or exceeds a threshold.
     * 
     */
    @Import(name="threshold", required=true)
    private Output<AutoScalingConfigurationPolicyRuleMetricThresholdArgs> threshold;

    /**
     * @return (Updatable) An autoscale action is triggered when a performance metric meets or exceeds a threshold.
     * 
     */
    public Output<AutoScalingConfigurationPolicyRuleMetricThresholdArgs> threshold() {
        return this.threshold;
    }

    private AutoScalingConfigurationPolicyRuleMetricArgs() {}

    private AutoScalingConfigurationPolicyRuleMetricArgs(AutoScalingConfigurationPolicyRuleMetricArgs $) {
        this.metricType = $.metricType;
        this.threshold = $.threshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutoScalingConfigurationPolicyRuleMetricArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutoScalingConfigurationPolicyRuleMetricArgs $;

        public Builder() {
            $ = new AutoScalingConfigurationPolicyRuleMetricArgs();
        }

        public Builder(AutoScalingConfigurationPolicyRuleMetricArgs defaults) {
            $ = new AutoScalingConfigurationPolicyRuleMetricArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metricType (Updatable) Allowed value is CPU_UTILIZATION.
         * 
         * @return builder
         * 
         */
        public Builder metricType(Output<String> metricType) {
            $.metricType = metricType;
            return this;
        }

        /**
         * @param metricType (Updatable) Allowed value is CPU_UTILIZATION.
         * 
         * @return builder
         * 
         */
        public Builder metricType(String metricType) {
            return metricType(Output.of(metricType));
        }

        /**
         * @param threshold (Updatable) An autoscale action is triggered when a performance metric meets or exceeds a threshold.
         * 
         * @return builder
         * 
         */
        public Builder threshold(Output<AutoScalingConfigurationPolicyRuleMetricThresholdArgs> threshold) {
            $.threshold = threshold;
            return this;
        }

        /**
         * @param threshold (Updatable) An autoscale action is triggered when a performance metric meets or exceeds a threshold.
         * 
         * @return builder
         * 
         */
        public Builder threshold(AutoScalingConfigurationPolicyRuleMetricThresholdArgs threshold) {
            return threshold(Output.of(threshold));
        }

        public AutoScalingConfigurationPolicyRuleMetricArgs build() {
            $.metricType = Objects.requireNonNull($.metricType, "expected parameter 'metricType' to be non-null");
            $.threshold = Objects.requireNonNull($.threshold, "expected parameter 'threshold' to be non-null");
            return $;
        }
    }

}
