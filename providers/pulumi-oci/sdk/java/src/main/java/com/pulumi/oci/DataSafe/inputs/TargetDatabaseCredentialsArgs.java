// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class TargetDatabaseCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetDatabaseCredentialsArgs Empty = new TargetDatabaseCredentialsArgs();

    /**
     * (Updatable) The password of the database user.
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return (Updatable) The password of the database user.
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    /**
     * (Updatable) The database user name.
     * 
     */
    @Import(name="userName", required=true)
    private Output<String> userName;

    /**
     * @return (Updatable) The database user name.
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }

    private TargetDatabaseCredentialsArgs() {}

    private TargetDatabaseCredentialsArgs(TargetDatabaseCredentialsArgs $) {
        this.password = $.password;
        this.userName = $.userName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetDatabaseCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetDatabaseCredentialsArgs $;

        public Builder() {
            $ = new TargetDatabaseCredentialsArgs();
        }

        public Builder(TargetDatabaseCredentialsArgs defaults) {
            $ = new TargetDatabaseCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param password (Updatable) The password of the database user.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password (Updatable) The password of the database user.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param userName (Updatable) The database user name.
         * 
         * @return builder
         * 
         */
        public Builder userName(Output<String> userName) {
            $.userName = userName;
            return this;
        }

        /**
         * @param userName (Updatable) The database user name.
         * 
         * @return builder
         * 
         */
        public Builder userName(String userName) {
            return userName(Output.of(userName));
        }

        public TargetDatabaseCredentialsArgs build() {
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.userName = Objects.requireNonNull($.userName, "expected parameter 'userName' to be non-null");
            return $;
        }
    }

}
