// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPublicIpPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPublicIpPlainArgs Empty = new GetPublicIpPlainArgs();

    /**
     * The OCID of the public IP.
     * 
     */
    @Import(name="id")
    private @Nullable String id;

    /**
     * @return The OCID of the public IP.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * Gets the public IP based on the public IP address (for example, 129.146.2.1).
     * 
     */
    @Import(name="ipAddress")
    private @Nullable String ipAddress;

    /**
     * @return Gets the public IP based on the public IP address (for example, 129.146.2.1).
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * Gets the public IP assigned to the specified private IP. You must specify the OCID of the private IP. If no public IP is assigned, a 404 is returned.
     * 
     */
    @Import(name="privateIpId")
    private @Nullable String privateIpId;

    /**
     * @return Gets the public IP assigned to the specified private IP. You must specify the OCID of the private IP. If no public IP is assigned, a 404 is returned.
     * 
     */
    public Optional<String> privateIpId() {
        return Optional.ofNullable(this.privateIpId);
    }

    private GetPublicIpPlainArgs() {}

    private GetPublicIpPlainArgs(GetPublicIpPlainArgs $) {
        this.id = $.id;
        this.ipAddress = $.ipAddress;
        this.privateIpId = $.privateIpId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPublicIpPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPublicIpPlainArgs $;

        public Builder() {
            $ = new GetPublicIpPlainArgs();
        }

        public Builder(GetPublicIpPlainArgs defaults) {
            $ = new GetPublicIpPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The OCID of the public IP.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable String id) {
            $.id = id;
            return this;
        }

        /**
         * @param ipAddress Gets the public IP based on the public IP address (for example, 129.146.2.1).
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable String ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param privateIpId Gets the public IP assigned to the specified private IP. You must specify the OCID of the private IP. If no public IP is assigned, a 404 is returned.
         * 
         * @return builder
         * 
         */
        public Builder privateIpId(@Nullable String privateIpId) {
            $.privateIpId = privateIpId;
            return this;
        }

        public GetPublicIpPlainArgs build() {
            return $;
        }
    }

}
