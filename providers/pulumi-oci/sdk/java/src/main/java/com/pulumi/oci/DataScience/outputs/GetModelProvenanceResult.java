// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetModelProvenanceResult {
    /**
     * @return For model reproducibility purposes. Branch of the git repository associated with model training.
     * 
     */
    private final String gitBranch;
    /**
     * @return For model reproducibility purposes. Commit ID of the git repository associated with model training.
     * 
     */
    private final String gitCommit;
    private final String id;
    private final String modelId;
    /**
     * @return For model reproducibility purposes. URL of the git repository associated with model training.
     * 
     */
    private final String repositoryUrl;
    /**
     * @return For model reproducibility purposes. Path to model artifacts.
     * 
     */
    private final String scriptDir;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a training session(Job or NotebookSession) in which the model was trained. It is used for model reproducibility purposes.
     * 
     */
    private final String trainingId;
    /**
     * @return For model reproducibility purposes. Path to the python script or notebook in which the model was trained.&#34;
     * 
     */
    private final String trainingScript;

    @CustomType.Constructor
    private GetModelProvenanceResult(
        @CustomType.Parameter("gitBranch") String gitBranch,
        @CustomType.Parameter("gitCommit") String gitCommit,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("modelId") String modelId,
        @CustomType.Parameter("repositoryUrl") String repositoryUrl,
        @CustomType.Parameter("scriptDir") String scriptDir,
        @CustomType.Parameter("trainingId") String trainingId,
        @CustomType.Parameter("trainingScript") String trainingScript) {
        this.gitBranch = gitBranch;
        this.gitCommit = gitCommit;
        this.id = id;
        this.modelId = modelId;
        this.repositoryUrl = repositoryUrl;
        this.scriptDir = scriptDir;
        this.trainingId = trainingId;
        this.trainingScript = trainingScript;
    }

    /**
     * @return For model reproducibility purposes. Branch of the git repository associated with model training.
     * 
     */
    public String gitBranch() {
        return this.gitBranch;
    }
    /**
     * @return For model reproducibility purposes. Commit ID of the git repository associated with model training.
     * 
     */
    public String gitCommit() {
        return this.gitCommit;
    }
    public String id() {
        return this.id;
    }
    public String modelId() {
        return this.modelId;
    }
    /**
     * @return For model reproducibility purposes. URL of the git repository associated with model training.
     * 
     */
    public String repositoryUrl() {
        return this.repositoryUrl;
    }
    /**
     * @return For model reproducibility purposes. Path to model artifacts.
     * 
     */
    public String scriptDir() {
        return this.scriptDir;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of a training session(Job or NotebookSession) in which the model was trained. It is used for model reproducibility purposes.
     * 
     */
    public String trainingId() {
        return this.trainingId;
    }
    /**
     * @return For model reproducibility purposes. Path to the python script or notebook in which the model was trained.&#34;
     * 
     */
    public String trainingScript() {
        return this.trainingScript;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetModelProvenanceResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String gitBranch;
        private String gitCommit;
        private String id;
        private String modelId;
        private String repositoryUrl;
        private String scriptDir;
        private String trainingId;
        private String trainingScript;

        public Builder() {
    	      // Empty
        }

        public Builder(GetModelProvenanceResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gitBranch = defaults.gitBranch;
    	      this.gitCommit = defaults.gitCommit;
    	      this.id = defaults.id;
    	      this.modelId = defaults.modelId;
    	      this.repositoryUrl = defaults.repositoryUrl;
    	      this.scriptDir = defaults.scriptDir;
    	      this.trainingId = defaults.trainingId;
    	      this.trainingScript = defaults.trainingScript;
        }

        public Builder gitBranch(String gitBranch) {
            this.gitBranch = Objects.requireNonNull(gitBranch);
            return this;
        }
        public Builder gitCommit(String gitCommit) {
            this.gitCommit = Objects.requireNonNull(gitCommit);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder modelId(String modelId) {
            this.modelId = Objects.requireNonNull(modelId);
            return this;
        }
        public Builder repositoryUrl(String repositoryUrl) {
            this.repositoryUrl = Objects.requireNonNull(repositoryUrl);
            return this;
        }
        public Builder scriptDir(String scriptDir) {
            this.scriptDir = Objects.requireNonNull(scriptDir);
            return this;
        }
        public Builder trainingId(String trainingId) {
            this.trainingId = Objects.requireNonNull(trainingId);
            return this;
        }
        public Builder trainingScript(String trainingScript) {
            this.trainingScript = Objects.requireNonNull(trainingScript);
            return this;
        }        public GetModelProvenanceResult build() {
            return new GetModelProvenanceResult(gitBranch, gitCommit, id, modelId, repositoryUrl, scriptDir, trainingId, trainingScript);
        }
    }
}
