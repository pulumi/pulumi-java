// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Waas.outputs.GetProtectionRuleExclusion;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetProtectionRuleResult {
    /**
     * @return The action to take when the traffic is detected as malicious. If unspecified, defaults to `OFF`.
     * 
     */
    private final String action;
    /**
     * @return The description of the protection rule.
     * 
     */
    private final String description;
    /**
     * @return An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     * 
     */
    private final List<GetProtectionRuleExclusion> exclusions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The unique key of the protection rule.
     * 
     */
    private final String key;
    /**
     * @return The list of labels for the protection rule.
     * 
     */
    private final List<String> labels;
    /**
     * @return The list of the ModSecurity rule IDs that apply to this protection rule. For more information about ModSecurity&#39;s open source WAF rules, see [Mod Security&#39;s documentation](https://www.modsecurity.org/CRS/Documentation/index.html).
     * 
     */
    private final List<String> modSecurityRuleIds;
    /**
     * @return The name of the protection rule.
     * 
     */
    private final String name;
    private final String protectionRuleKey;
    private final String waasPolicyId;

    @CustomType.Constructor
    private GetProtectionRuleResult(
        @CustomType.Parameter("action") String action,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("exclusions") List<GetProtectionRuleExclusion> exclusions,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("labels") List<String> labels,
        @CustomType.Parameter("modSecurityRuleIds") List<String> modSecurityRuleIds,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("protectionRuleKey") String protectionRuleKey,
        @CustomType.Parameter("waasPolicyId") String waasPolicyId) {
        this.action = action;
        this.description = description;
        this.exclusions = exclusions;
        this.id = id;
        this.key = key;
        this.labels = labels;
        this.modSecurityRuleIds = modSecurityRuleIds;
        this.name = name;
        this.protectionRuleKey = protectionRuleKey;
        this.waasPolicyId = waasPolicyId;
    }

    /**
     * @return The action to take when the traffic is detected as malicious. If unspecified, defaults to `OFF`.
     * 
     */
    public String action() {
        return this.action;
    }
    /**
     * @return The description of the protection rule.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return An array of The target property of a request that would allow it to bypass the protection rule. For example, when `target` is `REQUEST_COOKIE_NAMES`, the list may include names of cookies to exclude from the protection rule. When the target is `ARGS`, the list may include strings of URL query parameters and values from form-urlencoded XML, JSON, AMP, or POST payloads to exclude from the protection rule. `Exclusions` properties must not contain whitespace, comma or |. **Note:** If protection rules have been enabled that utilize the `maxArgumentCount` or `maxTotalNameLengthOfArguments` properties, and the `target` property has been set to `ARGS`, it is important that the `exclusions` properties be defined to honor those protection rule settings in a consistent manner.
     * 
     */
    public List<GetProtectionRuleExclusion> exclusions() {
        return this.exclusions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The unique key of the protection rule.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return The list of labels for the protection rule.
     * 
     */
    public List<String> labels() {
        return this.labels;
    }
    /**
     * @return The list of the ModSecurity rule IDs that apply to this protection rule. For more information about ModSecurity&#39;s open source WAF rules, see [Mod Security&#39;s documentation](https://www.modsecurity.org/CRS/Documentation/index.html).
     * 
     */
    public List<String> modSecurityRuleIds() {
        return this.modSecurityRuleIds;
    }
    /**
     * @return The name of the protection rule.
     * 
     */
    public String name() {
        return this.name;
    }
    public String protectionRuleKey() {
        return this.protectionRuleKey;
    }
    public String waasPolicyId() {
        return this.waasPolicyId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetProtectionRuleResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String action;
        private String description;
        private List<GetProtectionRuleExclusion> exclusions;
        private String id;
        private String key;
        private List<String> labels;
        private List<String> modSecurityRuleIds;
        private String name;
        private String protectionRuleKey;
        private String waasPolicyId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetProtectionRuleResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.action = defaults.action;
    	      this.description = defaults.description;
    	      this.exclusions = defaults.exclusions;
    	      this.id = defaults.id;
    	      this.key = defaults.key;
    	      this.labels = defaults.labels;
    	      this.modSecurityRuleIds = defaults.modSecurityRuleIds;
    	      this.name = defaults.name;
    	      this.protectionRuleKey = defaults.protectionRuleKey;
    	      this.waasPolicyId = defaults.waasPolicyId;
        }

        public Builder action(String action) {
            this.action = Objects.requireNonNull(action);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder exclusions(List<GetProtectionRuleExclusion> exclusions) {
            this.exclusions = Objects.requireNonNull(exclusions);
            return this;
        }
        public Builder exclusions(GetProtectionRuleExclusion... exclusions) {
            return exclusions(List.of(exclusions));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder labels(List<String> labels) {
            this.labels = Objects.requireNonNull(labels);
            return this;
        }
        public Builder labels(String... labels) {
            return labels(List.of(labels));
        }
        public Builder modSecurityRuleIds(List<String> modSecurityRuleIds) {
            this.modSecurityRuleIds = Objects.requireNonNull(modSecurityRuleIds);
            return this;
        }
        public Builder modSecurityRuleIds(String... modSecurityRuleIds) {
            return modSecurityRuleIds(List.of(modSecurityRuleIds));
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder protectionRuleKey(String protectionRuleKey) {
            this.protectionRuleKey = Objects.requireNonNull(protectionRuleKey);
            return this;
        }
        public Builder waasPolicyId(String waasPolicyId) {
            this.waasPolicyId = Objects.requireNonNull(waasPolicyId);
            return this;
        }        public GetProtectionRuleResult build() {
            return new GetProtectionRuleResult(action, description, exclusions, id, key, labels, modSecurityRuleIds, name, protectionRuleKey, waasPolicyId);
        }
    }
}
