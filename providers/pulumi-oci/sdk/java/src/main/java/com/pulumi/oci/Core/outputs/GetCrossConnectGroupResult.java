// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetCrossConnectGroupMacsecProperty;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetCrossConnectGroupResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the cross-connect group.
     * 
     */
    private final String compartmentId;
    private final String crossConnectGroupId;
    /**
     * @return A reference name or identifier for the physical fiber connection that this cross-connect group uses.
     * 
     */
    private final String customerReferenceName;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private final String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The cross-connect group&#39;s Oracle ID (OCID).
     * 
     */
    private final String id;
    /**
     * @return Properties used for MACsec (if capable).
     * 
     */
    private final List<GetCrossConnectGroupMacsecProperty> macsecProperties;
    /**
     * @return The FastConnect device that terminates the logical connection. This device might be different than the device that terminates the physical connection.
     * 
     */
    private final String ociLogicalDeviceName;
    /**
     * @return The FastConnect device that terminates the physical connection.
     * 
     */
    private final String ociPhysicalDeviceName;
    /**
     * @return The cross-connect group&#39;s current state.
     * 
     */
    private final String state;
    /**
     * @return The date and time the cross-connect group was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private final String timeCreated;

    @CustomType.Constructor
    private GetCrossConnectGroupResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("crossConnectGroupId") String crossConnectGroupId,
        @CustomType.Parameter("customerReferenceName") String customerReferenceName,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("macsecProperties") List<GetCrossConnectGroupMacsecProperty> macsecProperties,
        @CustomType.Parameter("ociLogicalDeviceName") String ociLogicalDeviceName,
        @CustomType.Parameter("ociPhysicalDeviceName") String ociPhysicalDeviceName,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated) {
        this.compartmentId = compartmentId;
        this.crossConnectGroupId = crossConnectGroupId;
        this.customerReferenceName = customerReferenceName;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.macsecProperties = macsecProperties;
        this.ociLogicalDeviceName = ociLogicalDeviceName;
        this.ociPhysicalDeviceName = ociPhysicalDeviceName;
        this.state = state;
        this.timeCreated = timeCreated;
    }

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment containing the cross-connect group.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public String crossConnectGroupId() {
        return this.crossConnectGroupId;
    }
    /**
     * @return A reference name or identifier for the physical fiber connection that this cross-connect group uses.
     * 
     */
    public String customerReferenceName() {
        return this.customerReferenceName;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The cross-connect group&#39;s Oracle ID (OCID).
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Properties used for MACsec (if capable).
     * 
     */
    public List<GetCrossConnectGroupMacsecProperty> macsecProperties() {
        return this.macsecProperties;
    }
    /**
     * @return The FastConnect device that terminates the logical connection. This device might be different than the device that terminates the physical connection.
     * 
     */
    public String ociLogicalDeviceName() {
        return this.ociLogicalDeviceName;
    }
    /**
     * @return The FastConnect device that terminates the physical connection.
     * 
     */
    public String ociPhysicalDeviceName() {
        return this.ociPhysicalDeviceName;
    }
    /**
     * @return The cross-connect group&#39;s current state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the cross-connect group was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCrossConnectGroupResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private String crossConnectGroupId;
        private String customerReferenceName;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private List<GetCrossConnectGroupMacsecProperty> macsecProperties;
        private String ociLogicalDeviceName;
        private String ociPhysicalDeviceName;
        private String state;
        private String timeCreated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCrossConnectGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.crossConnectGroupId = defaults.crossConnectGroupId;
    	      this.customerReferenceName = defaults.customerReferenceName;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.macsecProperties = defaults.macsecProperties;
    	      this.ociLogicalDeviceName = defaults.ociLogicalDeviceName;
    	      this.ociPhysicalDeviceName = defaults.ociPhysicalDeviceName;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder crossConnectGroupId(String crossConnectGroupId) {
            this.crossConnectGroupId = Objects.requireNonNull(crossConnectGroupId);
            return this;
        }
        public Builder customerReferenceName(String customerReferenceName) {
            this.customerReferenceName = Objects.requireNonNull(customerReferenceName);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder macsecProperties(List<GetCrossConnectGroupMacsecProperty> macsecProperties) {
            this.macsecProperties = Objects.requireNonNull(macsecProperties);
            return this;
        }
        public Builder macsecProperties(GetCrossConnectGroupMacsecProperty... macsecProperties) {
            return macsecProperties(List.of(macsecProperties));
        }
        public Builder ociLogicalDeviceName(String ociLogicalDeviceName) {
            this.ociLogicalDeviceName = Objects.requireNonNull(ociLogicalDeviceName);
            return this;
        }
        public Builder ociPhysicalDeviceName(String ociPhysicalDeviceName) {
            this.ociPhysicalDeviceName = Objects.requireNonNull(ociPhysicalDeviceName);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }        public GetCrossConnectGroupResult build() {
            return new GetCrossConnectGroupResult(compartmentId, crossConnectGroupId, customerReferenceName, definedTags, displayName, freeformTags, id, macsecProperties, ociLogicalDeviceName, ociPhysicalDeviceName, state, timeCreated);
        }
    }
}
