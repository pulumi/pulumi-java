// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceCatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CatalogAssociationState extends com.pulumi.resources.ResourceArgs {

    public static final CatalogAssociationState Empty = new CatalogAssociationState();

    /**
     * Identifier of the entity being associated with service catalog.
     * 
     */
    @Import(name="entityId")
    private @Nullable Output<String> entityId;

    /**
     * @return Identifier of the entity being associated with service catalog.
     * 
     */
    public Optional<Output<String>> entityId() {
        return Optional.ofNullable(this.entityId);
    }

    /**
     * The type of the entity that is associated with the service catalog.
     * 
     */
    @Import(name="entityType")
    private @Nullable Output<String> entityType;

    /**
     * @return The type of the entity that is associated with the service catalog.
     * 
     */
    public Optional<Output<String>> entityType() {
        return Optional.ofNullable(this.entityType);
    }

    /**
     * Identifier of the service catalog.
     * 
     */
    @Import(name="serviceCatalogId")
    private @Nullable Output<String> serviceCatalogId;

    /**
     * @return Identifier of the service catalog.
     * 
     */
    public Optional<Output<String>> serviceCatalogId() {
        return Optional.ofNullable(this.serviceCatalogId);
    }

    /**
     * Timestamp of when the resource was associated with service catalog.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return Timestamp of when the resource was associated with service catalog.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    private CatalogAssociationState() {}

    private CatalogAssociationState(CatalogAssociationState $) {
        this.entityId = $.entityId;
        this.entityType = $.entityType;
        this.serviceCatalogId = $.serviceCatalogId;
        this.timeCreated = $.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CatalogAssociationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CatalogAssociationState $;

        public Builder() {
            $ = new CatalogAssociationState();
        }

        public Builder(CatalogAssociationState defaults) {
            $ = new CatalogAssociationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param entityId Identifier of the entity being associated with service catalog.
         * 
         * @return builder
         * 
         */
        public Builder entityId(@Nullable Output<String> entityId) {
            $.entityId = entityId;
            return this;
        }

        /**
         * @param entityId Identifier of the entity being associated with service catalog.
         * 
         * @return builder
         * 
         */
        public Builder entityId(String entityId) {
            return entityId(Output.of(entityId));
        }

        /**
         * @param entityType The type of the entity that is associated with the service catalog.
         * 
         * @return builder
         * 
         */
        public Builder entityType(@Nullable Output<String> entityType) {
            $.entityType = entityType;
            return this;
        }

        /**
         * @param entityType The type of the entity that is associated with the service catalog.
         * 
         * @return builder
         * 
         */
        public Builder entityType(String entityType) {
            return entityType(Output.of(entityType));
        }

        /**
         * @param serviceCatalogId Identifier of the service catalog.
         * 
         * @return builder
         * 
         */
        public Builder serviceCatalogId(@Nullable Output<String> serviceCatalogId) {
            $.serviceCatalogId = serviceCatalogId;
            return this;
        }

        /**
         * @param serviceCatalogId Identifier of the service catalog.
         * 
         * @return builder
         * 
         */
        public Builder serviceCatalogId(String serviceCatalogId) {
            return serviceCatalogId(Output.of(serviceCatalogId));
        }

        /**
         * @param timeCreated Timestamp of when the resource was associated with service catalog.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated Timestamp of when the resource was associated with service catalog.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        public CatalogAssociationState build() {
            return $;
        }
    }

}
