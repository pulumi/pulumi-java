// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetLocalPeeringGatewaysLocalPeeringGateway {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private final String displayName;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The LPG&#39;s Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     * 
     */
    private final String id;
    /**
     * @return Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
     * 
     */
    private final Boolean isCrossTenancyPeering;
    /**
     * @return The smallest aggregate CIDR that contains all the CIDR routes advertised by the VCN at the other end of the peering from this LPG. See `peerAdvertisedCidrDetails` for the individual CIDRs. The value is `null` if the LPG is not peered.  Example: `192.168.0.0/16`, or if aggregated with `172.16.0.0/24` then `128.0.0.0/1`
     * 
     */
    private final String peerAdvertisedCidr;
    /**
     * @return The specific ranges of IP addresses available on or via the VCN at the other end of the peering from this LPG. The value is `null` if the LPG is not peered. You can use these as destination CIDRs for route rules to route a subnet&#39;s traffic to this LPG.  Example: [`192.168.0.0/16`, `172.16.0.0/24`]
     * 
     */
    private final List<String> peerAdvertisedCidrDetails;
    /**
     * @return The OCID of the peered LPG
     * 
     */
    private final String peerId;
    /**
     * @return Whether the LPG is peered with another LPG. `NEW` means the LPG has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the LPG at the other end of the peering has been deleted.
     * 
     */
    private final String peeringStatus;
    /**
     * @return Additional information regarding the peering status, if applicable.
     * 
     */
    private final String peeringStatusDetails;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the LPG is using.
     * 
     */
    private final String routeTableId;
    /**
     * @return The LPG&#39;s current lifecycle state.
     * 
     */
    private final String state;
    /**
     * @return The date and time the LPG was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private final String timeCreated;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     * 
     */
    private final String vcnId;

    @CustomType.Constructor
    private GetLocalPeeringGatewaysLocalPeeringGateway(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isCrossTenancyPeering") Boolean isCrossTenancyPeering,
        @CustomType.Parameter("peerAdvertisedCidr") String peerAdvertisedCidr,
        @CustomType.Parameter("peerAdvertisedCidrDetails") List<String> peerAdvertisedCidrDetails,
        @CustomType.Parameter("peerId") String peerId,
        @CustomType.Parameter("peeringStatus") String peeringStatus,
        @CustomType.Parameter("peeringStatusDetails") String peeringStatusDetails,
        @CustomType.Parameter("routeTableId") String routeTableId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("vcnId") String vcnId) {
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.isCrossTenancyPeering = isCrossTenancyPeering;
        this.peerAdvertisedCidr = peerAdvertisedCidr;
        this.peerAdvertisedCidrDetails = peerAdvertisedCidrDetails;
        this.peerId = peerId;
        this.peeringStatus = peeringStatus;
        this.peeringStatusDetails = peeringStatusDetails;
        this.routeTableId = routeTableId;
        this.state = state;
        this.timeCreated = timeCreated;
        this.vcnId = vcnId;
    }

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The LPG&#39;s Oracle ID ([OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm)).
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Whether the VCN at the other end of the peering is in a different tenancy.  Example: `false`
     * 
     */
    public Boolean isCrossTenancyPeering() {
        return this.isCrossTenancyPeering;
    }
    /**
     * @return The smallest aggregate CIDR that contains all the CIDR routes advertised by the VCN at the other end of the peering from this LPG. See `peerAdvertisedCidrDetails` for the individual CIDRs. The value is `null` if the LPG is not peered.  Example: `192.168.0.0/16`, or if aggregated with `172.16.0.0/24` then `128.0.0.0/1`
     * 
     */
    public String peerAdvertisedCidr() {
        return this.peerAdvertisedCidr;
    }
    /**
     * @return The specific ranges of IP addresses available on or via the VCN at the other end of the peering from this LPG. The value is `null` if the LPG is not peered. You can use these as destination CIDRs for route rules to route a subnet&#39;s traffic to this LPG.  Example: [`192.168.0.0/16`, `172.16.0.0/24`]
     * 
     */
    public List<String> peerAdvertisedCidrDetails() {
        return this.peerAdvertisedCidrDetails;
    }
    /**
     * @return The OCID of the peered LPG
     * 
     */
    public String peerId() {
        return this.peerId;
    }
    /**
     * @return Whether the LPG is peered with another LPG. `NEW` means the LPG has not yet been peered. `PENDING` means the peering is being established. `REVOKED` means the LPG at the other end of the peering has been deleted.
     * 
     */
    public String peeringStatus() {
        return this.peeringStatus;
    }
    /**
     * @return Additional information regarding the peering status, if applicable.
     * 
     */
    public String peeringStatusDetails() {
        return this.peeringStatusDetails;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the route table the LPG is using.
     * 
     */
    public String routeTableId() {
        return this.routeTableId;
    }
    /**
     * @return The LPG&#39;s current lifecycle state.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the LPG was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VCN.
     * 
     */
    public String vcnId() {
        return this.vcnId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetLocalPeeringGatewaysLocalPeeringGateway defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isCrossTenancyPeering;
        private String peerAdvertisedCidr;
        private List<String> peerAdvertisedCidrDetails;
        private String peerId;
        private String peeringStatus;
        private String peeringStatusDetails;
        private String routeTableId;
        private String state;
        private String timeCreated;
        private String vcnId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetLocalPeeringGatewaysLocalPeeringGateway defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isCrossTenancyPeering = defaults.isCrossTenancyPeering;
    	      this.peerAdvertisedCidr = defaults.peerAdvertisedCidr;
    	      this.peerAdvertisedCidrDetails = defaults.peerAdvertisedCidrDetails;
    	      this.peerId = defaults.peerId;
    	      this.peeringStatus = defaults.peeringStatus;
    	      this.peeringStatusDetails = defaults.peeringStatusDetails;
    	      this.routeTableId = defaults.routeTableId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.vcnId = defaults.vcnId;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isCrossTenancyPeering(Boolean isCrossTenancyPeering) {
            this.isCrossTenancyPeering = Objects.requireNonNull(isCrossTenancyPeering);
            return this;
        }
        public Builder peerAdvertisedCidr(String peerAdvertisedCidr) {
            this.peerAdvertisedCidr = Objects.requireNonNull(peerAdvertisedCidr);
            return this;
        }
        public Builder peerAdvertisedCidrDetails(List<String> peerAdvertisedCidrDetails) {
            this.peerAdvertisedCidrDetails = Objects.requireNonNull(peerAdvertisedCidrDetails);
            return this;
        }
        public Builder peerAdvertisedCidrDetails(String... peerAdvertisedCidrDetails) {
            return peerAdvertisedCidrDetails(List.of(peerAdvertisedCidrDetails));
        }
        public Builder peerId(String peerId) {
            this.peerId = Objects.requireNonNull(peerId);
            return this;
        }
        public Builder peeringStatus(String peeringStatus) {
            this.peeringStatus = Objects.requireNonNull(peeringStatus);
            return this;
        }
        public Builder peeringStatusDetails(String peeringStatusDetails) {
            this.peeringStatusDetails = Objects.requireNonNull(peeringStatusDetails);
            return this;
        }
        public Builder routeTableId(String routeTableId) {
            this.routeTableId = Objects.requireNonNull(routeTableId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder vcnId(String vcnId) {
            this.vcnId = Objects.requireNonNull(vcnId);
            return this;
        }        public GetLocalPeeringGatewaysLocalPeeringGateway build() {
            return new GetLocalPeeringGatewaysLocalPeeringGateway(compartmentId, definedTags, displayName, freeformTags, id, isCrossTenancyPeering, peerAdvertisedCidr, peerAdvertisedCidrDetails, peerId, peeringStatus, peeringStatusDetails, routeTableId, state, timeCreated, vcnId);
        }
    }
}
