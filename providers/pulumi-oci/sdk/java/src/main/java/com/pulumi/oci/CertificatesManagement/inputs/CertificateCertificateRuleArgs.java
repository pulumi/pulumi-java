// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class CertificateCertificateRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final CertificateCertificateRuleArgs Empty = new CertificateCertificateRuleArgs();

    /**
     * (Updatable) A property specifying the period of time, in days, before the certificate&#39;s targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    @Import(name="advanceRenewalPeriod", required=true)
    private Output<String> advanceRenewalPeriod;

    /**
     * @return (Updatable) A property specifying the period of time, in days, before the certificate&#39;s targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    public Output<String> advanceRenewalPeriod() {
        return this.advanceRenewalPeriod;
    }

    /**
     * (Updatable) A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    @Import(name="renewalInterval", required=true)
    private Output<String> renewalInterval;

    /**
     * @return (Updatable) A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
     * 
     */
    public Output<String> renewalInterval() {
        return this.renewalInterval;
    }

    /**
     * (Updatable) The type of rule.
     * 
     */
    @Import(name="ruleType", required=true)
    private Output<String> ruleType;

    /**
     * @return (Updatable) The type of rule.
     * 
     */
    public Output<String> ruleType() {
        return this.ruleType;
    }

    private CertificateCertificateRuleArgs() {}

    private CertificateCertificateRuleArgs(CertificateCertificateRuleArgs $) {
        this.advanceRenewalPeriod = $.advanceRenewalPeriod;
        this.renewalInterval = $.renewalInterval;
        this.ruleType = $.ruleType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CertificateCertificateRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CertificateCertificateRuleArgs $;

        public Builder() {
            $ = new CertificateCertificateRuleArgs();
        }

        public Builder(CertificateCertificateRuleArgs defaults) {
            $ = new CertificateCertificateRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param advanceRenewalPeriod (Updatable) A property specifying the period of time, in days, before the certificate&#39;s targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         * 
         * @return builder
         * 
         */
        public Builder advanceRenewalPeriod(Output<String> advanceRenewalPeriod) {
            $.advanceRenewalPeriod = advanceRenewalPeriod;
            return this;
        }

        /**
         * @param advanceRenewalPeriod (Updatable) A property specifying the period of time, in days, before the certificate&#39;s targeted renewal that the process should occur. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         * 
         * @return builder
         * 
         */
        public Builder advanceRenewalPeriod(String advanceRenewalPeriod) {
            return advanceRenewalPeriod(Output.of(advanceRenewalPeriod));
        }

        /**
         * @param renewalInterval (Updatable) A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         * 
         * @return builder
         * 
         */
        public Builder renewalInterval(Output<String> renewalInterval) {
            $.renewalInterval = renewalInterval;
            return this;
        }

        /**
         * @param renewalInterval (Updatable) A property specifying how often, in days, a certificate should be renewed. Expressed in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) format.
         * 
         * @return builder
         * 
         */
        public Builder renewalInterval(String renewalInterval) {
            return renewalInterval(Output.of(renewalInterval));
        }

        /**
         * @param ruleType (Updatable) The type of rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(Output<String> ruleType) {
            $.ruleType = ruleType;
            return this;
        }

        /**
         * @param ruleType (Updatable) The type of rule.
         * 
         * @return builder
         * 
         */
        public Builder ruleType(String ruleType) {
            return ruleType(Output.of(ruleType));
        }

        public CertificateCertificateRuleArgs build() {
            $.advanceRenewalPeriod = Objects.requireNonNull($.advanceRenewalPeriod, "expected parameter 'advanceRenewalPeriod' to be non-null");
            $.renewalInterval = Objects.requireNonNull($.renewalInterval, "expected parameter 'renewalInterval' to be non-null");
            $.ruleType = Objects.requireNonNull($.ruleType, "expected parameter 'ruleType' to be non-null");
            return $;
        }
    }

}
