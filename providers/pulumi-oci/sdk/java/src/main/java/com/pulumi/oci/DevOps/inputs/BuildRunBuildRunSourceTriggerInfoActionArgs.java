// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildRunSourceTriggerInfoActionFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildRunBuildRunSourceTriggerInfoActionArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildRunBuildRunSourceTriggerInfoActionArgs Empty = new BuildRunBuildRunSourceTriggerInfoActionArgs();

    /**
     * The OCID of the build pipeline.
     * 
     */
    @Import(name="buildPipelineId")
    private @Nullable Output<String> buildPipelineId;

    /**
     * @return The OCID of the build pipeline.
     * 
     */
    public Optional<Output<String>> buildPipelineId() {
        return Optional.ofNullable(this.buildPipelineId);
    }

    /**
     * The filters for the trigger.
     * 
     */
    @Import(name="filters")
    private @Nullable Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterArgs>> filters;

    /**
     * @return The filters for the trigger.
     * 
     */
    public Optional<Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The type of action that will be taken. Allowed value is TRIGGER_BUILD_PIPELINE.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of action that will be taken. Allowed value is TRIGGER_BUILD_PIPELINE.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private BuildRunBuildRunSourceTriggerInfoActionArgs() {}

    private BuildRunBuildRunSourceTriggerInfoActionArgs(BuildRunBuildRunSourceTriggerInfoActionArgs $) {
        this.buildPipelineId = $.buildPipelineId;
        this.filters = $.filters;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildRunBuildRunSourceTriggerInfoActionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildRunBuildRunSourceTriggerInfoActionArgs $;

        public Builder() {
            $ = new BuildRunBuildRunSourceTriggerInfoActionArgs();
        }

        public Builder(BuildRunBuildRunSourceTriggerInfoActionArgs defaults) {
            $ = new BuildRunBuildRunSourceTriggerInfoActionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param buildPipelineId The OCID of the build pipeline.
         * 
         * @return builder
         * 
         */
        public Builder buildPipelineId(@Nullable Output<String> buildPipelineId) {
            $.buildPipelineId = buildPipelineId;
            return this;
        }

        /**
         * @param buildPipelineId The OCID of the build pipeline.
         * 
         * @return builder
         * 
         */
        public Builder buildPipelineId(String buildPipelineId) {
            return buildPipelineId(Output.of(buildPipelineId));
        }

        /**
         * @param filters The filters for the trigger.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<List<BuildRunBuildRunSourceTriggerInfoActionFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters The filters for the trigger.
         * 
         * @return builder
         * 
         */
        public Builder filters(List<BuildRunBuildRunSourceTriggerInfoActionFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters The filters for the trigger.
         * 
         * @return builder
         * 
         */
        public Builder filters(BuildRunBuildRunSourceTriggerInfoActionFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param type The type of action that will be taken. Allowed value is TRIGGER_BUILD_PIPELINE.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of action that will be taken. Allowed value is TRIGGER_BUILD_PIPELINE.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public BuildRunBuildRunSourceTriggerInfoActionArgs build() {
            return $;
        }
    }

}
