// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataFlow;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataFlow.inputs.InvokeRunParameterArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class InvokeRunArgs extends com.pulumi.resources.ResourceArgs {

    public static final InvokeRunArgs Empty = new InvokeRunArgs();

    /**
     * The OCID of the associated application. If this value is set, then no value for the execute parameter is required. If this value is not set, then a value for the execute parameter is required, and a new application is created and associated with the new run.
     * 
     */
    @Import(name="applicationId")
    private @Nullable Output<String> applicationId;

    /**
     * @return The OCID of the associated application. If this value is set, then no value for the execute parameter is required. If this value is not set, then a value for the execute parameter is required, and a new application is created and associated with the new run.
     * 
     */
    public Optional<Output<String>> applicationId() {
        return Optional.ofNullable(this.applicationId);
    }

    /**
     * An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    @Import(name="archiveUri")
    private @Nullable Output<String> archiveUri;

    /**
     * @return An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    public Optional<Output<String>> archiveUri() {
        return Optional.ofNullable(this.archiveUri);
    }

    /**
     * The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ &#34;--input&#34;, &#34;${input_file}&#34;, &#34;--name&#34;, &#34;John Doe&#34; ]` If &#34;input_file&#34; has a value of &#34;mydata.xml&#34;, then the value above will be translated to `--input mydata.xml --name &#34;John Doe&#34;`
     * 
     */
    @Import(name="arguments")
    private @Nullable Output<List<String>> arguments;

    /**
     * @return The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ &#34;--input&#34;, &#34;${input_file}&#34;, &#34;--name&#34;, &#34;John Doe&#34; ]` If &#34;input_file&#34; has a value of &#34;mydata.xml&#34;, then the value above will be translated to `--input mydata.xml --name &#34;John Doe&#34;`
     * 
     */
    public Optional<Output<List<String>>> arguments() {
        return Optional.ofNullable(this.arguments);
    }

    @Import(name="asynchronous")
    private @Nullable Output<Boolean> asynchronous;

    public Optional<Output<Boolean>> asynchronous() {
        return Optional.ofNullable(this.asynchronous);
    }

    /**
     * (Updatable) The OCID of a compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of a compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<Map<String,Object>> configuration;

    /**
     * @return The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
     * 
     */
    public Optional<Output<Map<String,Object>>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * A user-friendly name that does not have to be unique. Avoid entering confidential information. If this value is not specified, it will be derived from the associated application&#39;s displayName or set by API using fileUri&#39;s application file name.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A user-friendly name that does not have to be unique. Avoid entering confidential information. If this value is not specified, it will be derived from the associated application&#39;s displayName or set by API using fileUri&#39;s application file name.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The VM shape for the driver. Sets the driver cores and memory.
     * 
     */
    @Import(name="driverShape")
    private @Nullable Output<String> driverShape;

    /**
     * @return The VM shape for the driver. Sets the driver cores and memory.
     * 
     */
    public Optional<Output<String>> driverShape() {
        return Optional.ofNullable(this.driverShape);
    }

    /**
     * The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
     * 
     */
    @Import(name="execute")
    private @Nullable Output<String> execute;

    /**
     * @return The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
     * 
     */
    public Optional<Output<String>> execute() {
        return Optional.ofNullable(this.execute);
    }

    /**
     * The VM shape for the executors. Sets the executor cores and memory.
     * 
     */
    @Import(name="executorShape")
    private @Nullable Output<String> executorShape;

    /**
     * @return The VM shape for the executors. Sets the executor cores and memory.
     * 
     */
    public Optional<Output<String>> executorShape() {
        return Optional.ofNullable(this.executorShape);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    @Import(name="logsBucketUri")
    private @Nullable Output<String> logsBucketUri;

    /**
     * @return An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    public Optional<Output<String>> logsBucketUri() {
        return Optional.ofNullable(this.logsBucketUri);
    }

    /**
     * The OCID of Oracle Cloud Infrastructure Hive Metastore.
     * 
     */
    @Import(name="metastoreId")
    private @Nullable Output<String> metastoreId;

    /**
     * @return The OCID of Oracle Cloud Infrastructure Hive Metastore.
     * 
     */
    public Optional<Output<String>> metastoreId() {
        return Optional.ofNullable(this.metastoreId);
    }

    /**
     * The number of executor VMs requested.
     * 
     */
    @Import(name="numExecutors")
    private @Nullable Output<Integer> numExecutors;

    /**
     * @return The number of executor VMs requested.
     * 
     */
    public Optional<Output<Integer>> numExecutors() {
        return Optional.ofNullable(this.numExecutors);
    }

    /**
     * An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: &#34;iterations&#34;, value: &#34;10&#34;}, { name: &#34;input_file&#34;, value: &#34;mydata.xml&#34; }, { name: &#34;variable_x&#34;, value: &#34;${x}&#34;} ]
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<List<InvokeRunParameterArgs>> parameters;

    /**
     * @return An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: &#34;iterations&#34;, value: &#34;10&#34;}, { name: &#34;input_file&#34;, value: &#34;mydata.xml&#34; }, { name: &#34;variable_x&#34;, value: &#34;${x}&#34;} ]
     * 
     */
    public Optional<Output<List<InvokeRunParameterArgs>>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    /**
     * The Spark version utilized to run the application. This value may be set if applicationId is not since the Spark version will be taken from the associated application.
     * 
     */
    @Import(name="sparkVersion")
    private @Nullable Output<String> sparkVersion;

    /**
     * @return The Spark version utilized to run the application. This value may be set if applicationId is not since the Spark version will be taken from the associated application.
     * 
     */
    public Optional<Output<String>> sparkVersion() {
        return Optional.ofNullable(this.sparkVersion);
    }

    /**
     * The Spark application processing type.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The Spark application processing type.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    @Import(name="warehouseBucketUri")
    private @Nullable Output<String> warehouseBucketUri;

    /**
     * @return An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
     * 
     */
    public Optional<Output<String>> warehouseBucketUri() {
        return Optional.ofNullable(this.warehouseBucketUri);
    }

    private InvokeRunArgs() {}

    private InvokeRunArgs(InvokeRunArgs $) {
        this.applicationId = $.applicationId;
        this.archiveUri = $.archiveUri;
        this.arguments = $.arguments;
        this.asynchronous = $.asynchronous;
        this.compartmentId = $.compartmentId;
        this.configuration = $.configuration;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.driverShape = $.driverShape;
        this.execute = $.execute;
        this.executorShape = $.executorShape;
        this.freeformTags = $.freeformTags;
        this.logsBucketUri = $.logsBucketUri;
        this.metastoreId = $.metastoreId;
        this.numExecutors = $.numExecutors;
        this.parameters = $.parameters;
        this.sparkVersion = $.sparkVersion;
        this.type = $.type;
        this.warehouseBucketUri = $.warehouseBucketUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InvokeRunArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InvokeRunArgs $;

        public Builder() {
            $ = new InvokeRunArgs();
        }

        public Builder(InvokeRunArgs defaults) {
            $ = new InvokeRunArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param applicationId The OCID of the associated application. If this value is set, then no value for the execute parameter is required. If this value is not set, then a value for the execute parameter is required, and a new application is created and associated with the new run.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(@Nullable Output<String> applicationId) {
            $.applicationId = applicationId;
            return this;
        }

        /**
         * @param applicationId The OCID of the associated application. If this value is set, then no value for the execute parameter is required. If this value is not set, then a value for the execute parameter is required, and a new application is created and associated with the new run.
         * 
         * @return builder
         * 
         */
        public Builder applicationId(String applicationId) {
            return applicationId(Output.of(applicationId));
        }

        /**
         * @param archiveUri An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         * 
         * @return builder
         * 
         */
        public Builder archiveUri(@Nullable Output<String> archiveUri) {
            $.archiveUri = archiveUri;
            return this;
        }

        /**
         * @param archiveUri An Oracle Cloud Infrastructure URI of an archive.zip file containing custom dependencies that may be used to support the execution a Python, Java, or Scala application. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         * 
         * @return builder
         * 
         */
        public Builder archiveUri(String archiveUri) {
            return archiveUri(Output.of(archiveUri));
        }

        /**
         * @param arguments The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ &#34;--input&#34;, &#34;${input_file}&#34;, &#34;--name&#34;, &#34;John Doe&#34; ]` If &#34;input_file&#34; has a value of &#34;mydata.xml&#34;, then the value above will be translated to `--input mydata.xml --name &#34;John Doe&#34;`
         * 
         * @return builder
         * 
         */
        public Builder arguments(@Nullable Output<List<String>> arguments) {
            $.arguments = arguments;
            return this;
        }

        /**
         * @param arguments The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ &#34;--input&#34;, &#34;${input_file}&#34;, &#34;--name&#34;, &#34;John Doe&#34; ]` If &#34;input_file&#34; has a value of &#34;mydata.xml&#34;, then the value above will be translated to `--input mydata.xml --name &#34;John Doe&#34;`
         * 
         * @return builder
         * 
         */
        public Builder arguments(List<String> arguments) {
            return arguments(Output.of(arguments));
        }

        /**
         * @param arguments The arguments passed to the running application as command line arguments.  An argument is either a plain text or a placeholder. Placeholders are replaced using values from the parameters map.  Each placeholder specified must be represented in the parameters map else the request (POST or PUT) will fail with a HTTP 400 status code.  Placeholders are specified as `Service Api Spec`, where `name` is the name of the parameter. Example:  `[ &#34;--input&#34;, &#34;${input_file}&#34;, &#34;--name&#34;, &#34;John Doe&#34; ]` If &#34;input_file&#34; has a value of &#34;mydata.xml&#34;, then the value above will be translated to `--input mydata.xml --name &#34;John Doe&#34;`
         * 
         * @return builder
         * 
         */
        public Builder arguments(String... arguments) {
            return arguments(List.of(arguments));
        }

        public Builder asynchronous(@Nullable Output<Boolean> asynchronous) {
            $.asynchronous = asynchronous;
            return this;
        }

        public Builder asynchronous(Boolean asynchronous) {
            return asynchronous(Output.of(asynchronous));
        }

        /**
         * @param compartmentId (Updatable) The OCID of a compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The OCID of a compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param configuration The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<Map<String,Object>> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration The Spark configuration passed to the running process. See https://spark.apache.org/docs/latest/configuration.html#available-properties Example: { &#34;spark.app.name&#34; : &#34;My App Name&#34;, &#34;spark.shuffle.io.maxRetries&#34; : &#34;4&#34; } Note: Not all Spark properties are permitted to be set.  Attempting to set a property that is not allowed to be overwritten will cause a 400 status to be returned.
         * 
         * @return builder
         * 
         */
        public Builder configuration(Map<String,Object> configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName A user-friendly name that does not have to be unique. Avoid entering confidential information. If this value is not specified, it will be derived from the associated application&#39;s displayName or set by API using fileUri&#39;s application file name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-friendly name that does not have to be unique. Avoid entering confidential information. If this value is not specified, it will be derived from the associated application&#39;s displayName or set by API using fileUri&#39;s application file name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param driverShape The VM shape for the driver. Sets the driver cores and memory.
         * 
         * @return builder
         * 
         */
        public Builder driverShape(@Nullable Output<String> driverShape) {
            $.driverShape = driverShape;
            return this;
        }

        /**
         * @param driverShape The VM shape for the driver. Sets the driver cores and memory.
         * 
         * @return builder
         * 
         */
        public Builder driverShape(String driverShape) {
            return driverShape(Output.of(driverShape));
        }

        /**
         * @param execute The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
         * 
         * @return builder
         * 
         */
        public Builder execute(@Nullable Output<String> execute) {
            $.execute = execute;
            return this;
        }

        /**
         * @param execute The input used for spark-submit command. For more details see https://spark.apache.org/docs/latest/submitting-applications.html#launching-applications-with-spark-submit. Supported options include ``--class``, ``--file``, ``--jars``, ``--conf``, ``--py-files``, and main application file with arguments. Example: ``--jars oci://path/to/a.jar,oci://path/to/b.jar --files oci://path/to/a.json,oci://path/to/b.csv --py-files oci://path/to/a.py,oci://path/to/b.py --conf spark.sql.crossJoin.enabled=true --class org.apache.spark.examples.SparkPi oci://path/to/main.jar 10`` Note: If execute is specified together with applicationId, className, configuration, fileUri, language, arguments, parameters during application create/update, or run create/submit, Data Flow service will use derived information from execute input only.
         * 
         * @return builder
         * 
         */
        public Builder execute(String execute) {
            return execute(Output.of(execute));
        }

        /**
         * @param executorShape The VM shape for the executors. Sets the executor cores and memory.
         * 
         * @return builder
         * 
         */
        public Builder executorShape(@Nullable Output<String> executorShape) {
            $.executorShape = executorShape;
            return this;
        }

        /**
         * @param executorShape The VM shape for the executors. Sets the executor cores and memory.
         * 
         * @return builder
         * 
         */
        public Builder executorShape(String executorShape) {
            return executorShape(Output.of(executorShape));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param logsBucketUri An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         * 
         * @return builder
         * 
         */
        public Builder logsBucketUri(@Nullable Output<String> logsBucketUri) {
            $.logsBucketUri = logsBucketUri;
            return this;
        }

        /**
         * @param logsBucketUri An Oracle Cloud Infrastructure URI of the bucket where the Spark job logs are to be uploaded. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         * 
         * @return builder
         * 
         */
        public Builder logsBucketUri(String logsBucketUri) {
            return logsBucketUri(Output.of(logsBucketUri));
        }

        /**
         * @param metastoreId The OCID of Oracle Cloud Infrastructure Hive Metastore.
         * 
         * @return builder
         * 
         */
        public Builder metastoreId(@Nullable Output<String> metastoreId) {
            $.metastoreId = metastoreId;
            return this;
        }

        /**
         * @param metastoreId The OCID of Oracle Cloud Infrastructure Hive Metastore.
         * 
         * @return builder
         * 
         */
        public Builder metastoreId(String metastoreId) {
            return metastoreId(Output.of(metastoreId));
        }

        /**
         * @param numExecutors The number of executor VMs requested.
         * 
         * @return builder
         * 
         */
        public Builder numExecutors(@Nullable Output<Integer> numExecutors) {
            $.numExecutors = numExecutors;
            return this;
        }

        /**
         * @param numExecutors The number of executor VMs requested.
         * 
         * @return builder
         * 
         */
        public Builder numExecutors(Integer numExecutors) {
            return numExecutors(Output.of(numExecutors));
        }

        /**
         * @param parameters An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: &#34;iterations&#34;, value: &#34;10&#34;}, { name: &#34;input_file&#34;, value: &#34;mydata.xml&#34; }, { name: &#34;variable_x&#34;, value: &#34;${x}&#34;} ]
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<List<InvokeRunParameterArgs>> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: &#34;iterations&#34;, value: &#34;10&#34;}, { name: &#34;input_file&#34;, value: &#34;mydata.xml&#34; }, { name: &#34;variable_x&#34;, value: &#34;${x}&#34;} ]
         * 
         * @return builder
         * 
         */
        public Builder parameters(List<InvokeRunParameterArgs> parameters) {
            return parameters(Output.of(parameters));
        }

        /**
         * @param parameters An array of name/value pairs used to fill placeholders found in properties like `Application.arguments`.  The name must be a string of one or more word characters (a-z, A-Z, 0-9, _).  The value can be a string of 0 or more characters of any kind. Example:  [ { name: &#34;iterations&#34;, value: &#34;10&#34;}, { name: &#34;input_file&#34;, value: &#34;mydata.xml&#34; }, { name: &#34;variable_x&#34;, value: &#34;${x}&#34;} ]
         * 
         * @return builder
         * 
         */
        public Builder parameters(InvokeRunParameterArgs... parameters) {
            return parameters(List.of(parameters));
        }

        /**
         * @param sparkVersion The Spark version utilized to run the application. This value may be set if applicationId is not since the Spark version will be taken from the associated application.
         * 
         * @return builder
         * 
         */
        public Builder sparkVersion(@Nullable Output<String> sparkVersion) {
            $.sparkVersion = sparkVersion;
            return this;
        }

        /**
         * @param sparkVersion The Spark version utilized to run the application. This value may be set if applicationId is not since the Spark version will be taken from the associated application.
         * 
         * @return builder
         * 
         */
        public Builder sparkVersion(String sparkVersion) {
            return sparkVersion(Output.of(sparkVersion));
        }

        /**
         * @param type The Spark application processing type.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The Spark application processing type.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param warehouseBucketUri An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         * 
         * @return builder
         * 
         */
        public Builder warehouseBucketUri(@Nullable Output<String> warehouseBucketUri) {
            $.warehouseBucketUri = warehouseBucketUri;
            return this;
        }

        /**
         * @param warehouseBucketUri An Oracle Cloud Infrastructure URI of the bucket to be used as default warehouse directory for BATCH SQL runs. See https://docs.cloud.oracle.com/iaas/Content/API/SDKDocs/hdfsconnector.htm#uriformat.
         * 
         * @return builder
         * 
         */
        public Builder warehouseBucketUri(String warehouseBucketUri) {
            return warehouseBucketUri(Output.of(warehouseBucketUri));
        }

        public InvokeRunArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
