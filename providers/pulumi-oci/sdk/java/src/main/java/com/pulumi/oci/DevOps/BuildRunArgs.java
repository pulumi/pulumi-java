// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DevOps.inputs.BuildRunBuildRunArgumentsArgs;
import com.pulumi.oci.DevOps.inputs.BuildRunCommitInfoArgs;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildRunArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildRunArgs Empty = new BuildRunArgs();

    /**
     * The OCID of the build pipeline.
     * 
     */
    @Import(name="buildPipelineId", required=true)
    private Output<String> buildPipelineId;

    /**
     * @return The OCID of the build pipeline.
     * 
     */
    public Output<String> buildPipelineId() {
        return this.buildPipelineId;
    }

    /**
     * Specifies list of arguments passed along with the build run.
     * 
     */
    @Import(name="buildRunArguments")
    private @Nullable Output<BuildRunBuildRunArgumentsArgs> buildRunArguments;

    /**
     * @return Specifies list of arguments passed along with the build run.
     * 
     */
    public Optional<Output<BuildRunBuildRunArgumentsArgs>> buildRunArguments() {
        return Optional.ofNullable(this.buildRunArguments);
    }

    /**
     * Commit details that need to be used for the build run.
     * 
     */
    @Import(name="commitInfo")
    private @Nullable Output<BuildRunCommitInfoArgs> commitInfo;

    /**
     * @return Commit details that need to be used for the build run.
     * 
     */
    public Optional<Output<BuildRunCommitInfoArgs>> commitInfo() {
        return Optional.ofNullable(this.commitInfo);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    private BuildRunArgs() {}

    private BuildRunArgs(BuildRunArgs $) {
        this.buildPipelineId = $.buildPipelineId;
        this.buildRunArguments = $.buildRunArguments;
        this.commitInfo = $.commitInfo;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildRunArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildRunArgs $;

        public Builder() {
            $ = new BuildRunArgs();
        }

        public Builder(BuildRunArgs defaults) {
            $ = new BuildRunArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param buildPipelineId The OCID of the build pipeline.
         * 
         * @return builder
         * 
         */
        public Builder buildPipelineId(Output<String> buildPipelineId) {
            $.buildPipelineId = buildPipelineId;
            return this;
        }

        /**
         * @param buildPipelineId The OCID of the build pipeline.
         * 
         * @return builder
         * 
         */
        public Builder buildPipelineId(String buildPipelineId) {
            return buildPipelineId(Output.of(buildPipelineId));
        }

        /**
         * @param buildRunArguments Specifies list of arguments passed along with the build run.
         * 
         * @return builder
         * 
         */
        public Builder buildRunArguments(@Nullable Output<BuildRunBuildRunArgumentsArgs> buildRunArguments) {
            $.buildRunArguments = buildRunArguments;
            return this;
        }

        /**
         * @param buildRunArguments Specifies list of arguments passed along with the build run.
         * 
         * @return builder
         * 
         */
        public Builder buildRunArguments(BuildRunBuildRunArgumentsArgs buildRunArguments) {
            return buildRunArguments(Output.of(buildRunArguments));
        }

        /**
         * @param commitInfo Commit details that need to be used for the build run.
         * 
         * @return builder
         * 
         */
        public Builder commitInfo(@Nullable Output<BuildRunCommitInfoArgs> commitInfo) {
            $.commitInfo = commitInfo;
            return this;
        }

        /**
         * @param commitInfo Commit details that need to be used for the build run.
         * 
         * @return builder
         * 
         */
        public Builder commitInfo(BuildRunCommitInfoArgs commitInfo) {
            return commitInfo(Output.of(commitInfo));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        public BuildRunArgs build() {
            $.buildPipelineId = Objects.requireNonNull($.buildPipelineId, "expected parameter 'buildPipelineId' to be non-null");
            return $;
        }
    }

}
