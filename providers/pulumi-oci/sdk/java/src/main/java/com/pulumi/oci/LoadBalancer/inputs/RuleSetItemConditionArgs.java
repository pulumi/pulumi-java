// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RuleSetItemConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final RuleSetItemConditionArgs Empty = new RuleSetItemConditionArgs();

    /**
     * (Updatable) The attribute_name can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
     * 
     */
    @Import(name="attributeName", required=true)
    private Output<String> attributeName;

    /**
     * @return (Updatable) The attribute_name can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
     * 
     */
    public Output<String> attributeName() {
        return this.attributeName;
    }

    /**
     * (Updatable) Depends on `attribute_name`:
     * - when `attribute_name` = `SOURCE_IP_ADDRESS` | IPv4 or IPv6 address range to which the source IP address of incoming packet would be matched against
     * - when `attribute_name` = `SOURCE_VCN_IP_ADDRESS` | IPv4 address range to which the original client IP address (in customer VCN) of incoming packet would be matched against
     * - when `attribute_name` = `SOURCE_VCN_ID` | OCID of the customer VCN to which the service gateway embedded VCN ID of incoming packet would be matched against
     * 
     */
    @Import(name="attributeValue", required=true)
    private Output<String> attributeValue;

    /**
     * @return (Updatable) Depends on `attribute_name`:
     * - when `attribute_name` = `SOURCE_IP_ADDRESS` | IPv4 or IPv6 address range to which the source IP address of incoming packet would be matched against
     * - when `attribute_name` = `SOURCE_VCN_IP_ADDRESS` | IPv4 address range to which the original client IP address (in customer VCN) of incoming packet would be matched against
     * - when `attribute_name` = `SOURCE_VCN_ID` | OCID of the customer VCN to which the service gateway embedded VCN ID of incoming packet would be matched against
     * 
     */
    public Output<String> attributeValue() {
        return this.attributeValue;
    }

    /**
     * (Updatable) A string that specifies how to compare the PathMatchCondition object&#39;s `attributeValue` string to the incoming URI.
     * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
     * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
     * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
     * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
     * 
     */
    @Import(name="operator")
    private @Nullable Output<String> operator;

    /**
     * @return (Updatable) A string that specifies how to compare the PathMatchCondition object&#39;s `attributeValue` string to the incoming URI.
     * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
     * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
     * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
     * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
     * 
     */
    public Optional<Output<String>> operator() {
        return Optional.ofNullable(this.operator);
    }

    private RuleSetItemConditionArgs() {}

    private RuleSetItemConditionArgs(RuleSetItemConditionArgs $) {
        this.attributeName = $.attributeName;
        this.attributeValue = $.attributeValue;
        this.operator = $.operator;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RuleSetItemConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RuleSetItemConditionArgs $;

        public Builder() {
            $ = new RuleSetItemConditionArgs();
        }

        public Builder(RuleSetItemConditionArgs defaults) {
            $ = new RuleSetItemConditionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributeName (Updatable) The attribute_name can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
         * 
         * @return builder
         * 
         */
        public Builder attributeName(Output<String> attributeName) {
            $.attributeName = attributeName;
            return this;
        }

        /**
         * @param attributeName (Updatable) The attribute_name can be one of these values: `PATH`, `SOURCE_IP_ADDRESS`, `SOURCE_VCN_ID`, `SOURCE_VCN_IP_ADDRESS`
         * 
         * @return builder
         * 
         */
        public Builder attributeName(String attributeName) {
            return attributeName(Output.of(attributeName));
        }

        /**
         * @param attributeValue (Updatable) Depends on `attribute_name`:
         * - when `attribute_name` = `SOURCE_IP_ADDRESS` | IPv4 or IPv6 address range to which the source IP address of incoming packet would be matched against
         * - when `attribute_name` = `SOURCE_VCN_IP_ADDRESS` | IPv4 address range to which the original client IP address (in customer VCN) of incoming packet would be matched against
         * - when `attribute_name` = `SOURCE_VCN_ID` | OCID of the customer VCN to which the service gateway embedded VCN ID of incoming packet would be matched against
         * 
         * @return builder
         * 
         */
        public Builder attributeValue(Output<String> attributeValue) {
            $.attributeValue = attributeValue;
            return this;
        }

        /**
         * @param attributeValue (Updatable) Depends on `attribute_name`:
         * - when `attribute_name` = `SOURCE_IP_ADDRESS` | IPv4 or IPv6 address range to which the source IP address of incoming packet would be matched against
         * - when `attribute_name` = `SOURCE_VCN_IP_ADDRESS` | IPv4 address range to which the original client IP address (in customer VCN) of incoming packet would be matched against
         * - when `attribute_name` = `SOURCE_VCN_ID` | OCID of the customer VCN to which the service gateway embedded VCN ID of incoming packet would be matched against
         * 
         * @return builder
         * 
         */
        public Builder attributeValue(String attributeValue) {
            return attributeValue(Output.of(attributeValue));
        }

        /**
         * @param operator (Updatable) A string that specifies how to compare the PathMatchCondition object&#39;s `attributeValue` string to the incoming URI.
         * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
         * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
         * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
         * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
         * 
         * @return builder
         * 
         */
        public Builder operator(@Nullable Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator (Updatable) A string that specifies how to compare the PathMatchCondition object&#39;s `attributeValue` string to the incoming URI.
         * *  **EXACT_MATCH** - The incoming URI path must exactly and completely match the `attributeValue` string.
         * *  **FORCE_LONGEST_PREFIX_MATCH** - The system looks for the `attributeValue` string with the best, longest match of the beginning portion of the incoming URI path.
         * *  **PREFIX_MATCH** - The beginning portion of the incoming URI path must exactly match the `attributeValue` string.
         * *  **SUFFIX_MATCH** - The ending portion of the incoming URI path must exactly match the `attributeValue` string.
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        public RuleSetItemConditionArgs build() {
            $.attributeName = Objects.requireNonNull($.attributeName, "expected parameter 'attributeName' to be non-null");
            $.attributeValue = Objects.requireNonNull($.attributeValue, "expected parameter 'attributeValue' to be non-null");
            return $;
        }
    }

}
