// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.GetSmtpCredentialsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSmtpCredentialsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSmtpCredentialsArgs Empty = new GetSmtpCredentialsArgs();

    @Import(name="filters")
    private @Nullable Output<List<GetSmtpCredentialsFilterArgs>> filters;

    public Optional<Output<List<GetSmtpCredentialsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The OCID of the user.
     * 
     */
    @Import(name="userId", required=true)
    private Output<String> userId;

    /**
     * @return The OCID of the user.
     * 
     */
    public Output<String> userId() {
        return this.userId;
    }

    private GetSmtpCredentialsArgs() {}

    private GetSmtpCredentialsArgs(GetSmtpCredentialsArgs $) {
        this.filters = $.filters;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSmtpCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSmtpCredentialsArgs $;

        public Builder() {
            $ = new GetSmtpCredentialsArgs();
        }

        public Builder(GetSmtpCredentialsArgs defaults) {
            $ = new GetSmtpCredentialsArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable Output<List<GetSmtpCredentialsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetSmtpCredentialsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetSmtpCredentialsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param userId The OCID of the user.
         * 
         * @return builder
         * 
         */
        public Builder userId(Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The OCID of the user.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public GetSmtpCredentialsArgs build() {
            $.userId = Objects.requireNonNull($.userId, "expected parameter 'userId' to be non-null");
            return $;
        }
    }

}
