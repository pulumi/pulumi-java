// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Opsi.outputs.GetDatabaseInsightsDatabaseInsightsCollection;
import com.pulumi.oci.Opsi.outputs.GetDatabaseInsightsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatabaseInsightsResult {
    /**
     * @return Compartment identifier of the database
     * 
     */
    private final @Nullable String compartmentId;
    private final @Nullable Boolean compartmentIdInSubtree;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    private final @Nullable List<String> databaseIds;
    /**
     * @return The list of database_insights_collection.
     * 
     */
    private final List<GetDatabaseInsightsDatabaseInsightsCollection> databaseInsightsCollections;
    /**
     * @return Operations Insights internal representation of the database type.
     * 
     */
    private final @Nullable List<String> databaseTypes;
    /**
     * @return OPSI Enterprise Manager Bridge OCID
     * 
     */
    private final @Nullable String enterpriseManagerBridgeId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
     * 
     */
    private final @Nullable String exadataInsightId;
    private final @Nullable List<String> fields;
    private final @Nullable List<GetDatabaseInsightsFilter> filters;
    /**
     * @return Database insight identifier
     * 
     */
    private final @Nullable String id;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
     * 
     */
    private final @Nullable String opsiPrivateEndpointId;
    /**
     * @return The current state of the database.
     * 
     */
    private final @Nullable List<String> states;
    /**
     * @return Indicates the status of a database insight in Operations Insights
     * 
     */
    private final @Nullable List<String> statuses;

    @CustomType.Constructor
    private GetDatabaseInsightsResult(
        @CustomType.Parameter("compartmentId") @Nullable String compartmentId,
        @CustomType.Parameter("compartmentIdInSubtree") @Nullable Boolean compartmentIdInSubtree,
        @CustomType.Parameter("databaseIds") @Nullable List<String> databaseIds,
        @CustomType.Parameter("databaseInsightsCollections") List<GetDatabaseInsightsDatabaseInsightsCollection> databaseInsightsCollections,
        @CustomType.Parameter("databaseTypes") @Nullable List<String> databaseTypes,
        @CustomType.Parameter("enterpriseManagerBridgeId") @Nullable String enterpriseManagerBridgeId,
        @CustomType.Parameter("exadataInsightId") @Nullable String exadataInsightId,
        @CustomType.Parameter("fields") @Nullable List<String> fields,
        @CustomType.Parameter("filters") @Nullable List<GetDatabaseInsightsFilter> filters,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("opsiPrivateEndpointId") @Nullable String opsiPrivateEndpointId,
        @CustomType.Parameter("states") @Nullable List<String> states,
        @CustomType.Parameter("statuses") @Nullable List<String> statuses) {
        this.compartmentId = compartmentId;
        this.compartmentIdInSubtree = compartmentIdInSubtree;
        this.databaseIds = databaseIds;
        this.databaseInsightsCollections = databaseInsightsCollections;
        this.databaseTypes = databaseTypes;
        this.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
        this.exadataInsightId = exadataInsightId;
        this.fields = fields;
        this.filters = filters;
        this.id = id;
        this.opsiPrivateEndpointId = opsiPrivateEndpointId;
        this.states = states;
        this.statuses = statuses;
    }

    /**
     * @return Compartment identifier of the database
     * 
     */
    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    public List<String> databaseIds() {
        return this.databaseIds == null ? List.of() : this.databaseIds;
    }
    /**
     * @return The list of database_insights_collection.
     * 
     */
    public List<GetDatabaseInsightsDatabaseInsightsCollection> databaseInsightsCollections() {
        return this.databaseInsightsCollections;
    }
    /**
     * @return Operations Insights internal representation of the database type.
     * 
     */
    public List<String> databaseTypes() {
        return this.databaseTypes == null ? List.of() : this.databaseTypes;
    }
    /**
     * @return OPSI Enterprise Manager Bridge OCID
     * 
     */
    public Optional<String> enterpriseManagerBridgeId() {
        return Optional.ofNullable(this.enterpriseManagerBridgeId);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
     * 
     */
    public Optional<String> exadataInsightId() {
        return Optional.ofNullable(this.exadataInsightId);
    }
    public List<String> fields() {
        return this.fields == null ? List.of() : this.fields;
    }
    public List<GetDatabaseInsightsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return Database insight identifier
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
     * 
     */
    public Optional<String> opsiPrivateEndpointId() {
        return Optional.ofNullable(this.opsiPrivateEndpointId);
    }
    /**
     * @return The current state of the database.
     * 
     */
    public List<String> states() {
        return this.states == null ? List.of() : this.states;
    }
    /**
     * @return Indicates the status of a database insight in Operations Insights
     * 
     */
    public List<String> statuses() {
        return this.statuses == null ? List.of() : this.statuses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseInsightsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable List<String> databaseIds;
        private List<GetDatabaseInsightsDatabaseInsightsCollection> databaseInsightsCollections;
        private @Nullable List<String> databaseTypes;
        private @Nullable String enterpriseManagerBridgeId;
        private @Nullable String exadataInsightId;
        private @Nullable List<String> fields;
        private @Nullable List<GetDatabaseInsightsFilter> filters;
        private @Nullable String id;
        private @Nullable String opsiPrivateEndpointId;
        private @Nullable List<String> states;
        private @Nullable List<String> statuses;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDatabaseInsightsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.databaseIds = defaults.databaseIds;
    	      this.databaseInsightsCollections = defaults.databaseInsightsCollections;
    	      this.databaseTypes = defaults.databaseTypes;
    	      this.enterpriseManagerBridgeId = defaults.enterpriseManagerBridgeId;
    	      this.exadataInsightId = defaults.exadataInsightId;
    	      this.fields = defaults.fields;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.opsiPrivateEndpointId = defaults.opsiPrivateEndpointId;
    	      this.states = defaults.states;
    	      this.statuses = defaults.statuses;
        }

        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        public Builder databaseIds(@Nullable List<String> databaseIds) {
            this.databaseIds = databaseIds;
            return this;
        }
        public Builder databaseIds(String... databaseIds) {
            return databaseIds(List.of(databaseIds));
        }
        public Builder databaseInsightsCollections(List<GetDatabaseInsightsDatabaseInsightsCollection> databaseInsightsCollections) {
            this.databaseInsightsCollections = Objects.requireNonNull(databaseInsightsCollections);
            return this;
        }
        public Builder databaseInsightsCollections(GetDatabaseInsightsDatabaseInsightsCollection... databaseInsightsCollections) {
            return databaseInsightsCollections(List.of(databaseInsightsCollections));
        }
        public Builder databaseTypes(@Nullable List<String> databaseTypes) {
            this.databaseTypes = databaseTypes;
            return this;
        }
        public Builder databaseTypes(String... databaseTypes) {
            return databaseTypes(List.of(databaseTypes));
        }
        public Builder enterpriseManagerBridgeId(@Nullable String enterpriseManagerBridgeId) {
            this.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
            return this;
        }
        public Builder exadataInsightId(@Nullable String exadataInsightId) {
            this.exadataInsightId = exadataInsightId;
            return this;
        }
        public Builder fields(@Nullable List<String> fields) {
            this.fields = fields;
            return this;
        }
        public Builder fields(String... fields) {
            return fields(List.of(fields));
        }
        public Builder filters(@Nullable List<GetDatabaseInsightsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetDatabaseInsightsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder opsiPrivateEndpointId(@Nullable String opsiPrivateEndpointId) {
            this.opsiPrivateEndpointId = opsiPrivateEndpointId;
            return this;
        }
        public Builder states(@Nullable List<String> states) {
            this.states = states;
            return this;
        }
        public Builder states(String... states) {
            return states(List.of(states));
        }
        public Builder statuses(@Nullable List<String> statuses) {
            this.statuses = statuses;
            return this;
        }
        public Builder statuses(String... statuses) {
            return statuses(List.of(statuses));
        }        public GetDatabaseInsightsResult build() {
            return new GetDatabaseInsightsResult(compartmentId, compartmentIdInSubtree, databaseIds, databaseInsightsCollections, databaseTypes, enterpriseManagerBridgeId, exadataInsightId, fields, filters, id, opsiPrivateEndpointId, states, statuses);
        }
    }
}
