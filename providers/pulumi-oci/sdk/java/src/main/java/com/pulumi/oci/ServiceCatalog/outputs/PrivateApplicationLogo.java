// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceCatalog.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PrivateApplicationLogo {
    /**
     * @return The content URL of the uploaded data.
     * 
     */
    private final @Nullable String contentUrl;
    /**
     * @return (Updatable) The name of the private application.
     * 
     */
    private final @Nullable String displayName;
    /**
     * @return The MIME type of the uploaded data.
     * 
     */
    private final @Nullable String mimeType;

    @CustomType.Constructor
    private PrivateApplicationLogo(
        @CustomType.Parameter("contentUrl") @Nullable String contentUrl,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("mimeType") @Nullable String mimeType) {
        this.contentUrl = contentUrl;
        this.displayName = displayName;
        this.mimeType = mimeType;
    }

    /**
     * @return The content URL of the uploaded data.
     * 
     */
    public Optional<String> contentUrl() {
        return Optional.ofNullable(this.contentUrl);
    }
    /**
     * @return (Updatable) The name of the private application.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    /**
     * @return The MIME type of the uploaded data.
     * 
     */
    public Optional<String> mimeType() {
        return Optional.ofNullable(this.mimeType);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PrivateApplicationLogo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String contentUrl;
        private @Nullable String displayName;
        private @Nullable String mimeType;

        public Builder() {
    	      // Empty
        }

        public Builder(PrivateApplicationLogo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.contentUrl = defaults.contentUrl;
    	      this.displayName = defaults.displayName;
    	      this.mimeType = defaults.mimeType;
        }

        public Builder contentUrl(@Nullable String contentUrl) {
            this.contentUrl = contentUrl;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder mimeType(@Nullable String mimeType) {
            this.mimeType = mimeType;
            return this;
        }        public PrivateApplicationLogo build() {
            return new PrivateApplicationLogo(contentUrl, displayName, mimeType);
        }
    }
}
