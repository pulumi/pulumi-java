// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ListenerConnectionConfiguration {
    /**
     * @return (Updatable) The backend TCP Proxy Protocol version.  Example: `1`
     * 
     */
    private final @Nullable Integer backendTcpProxyProtocolVersion;
    /**
     * @return (Updatable) The maximum idle time, in seconds, allowed between two successive receive or two successive send operations between the client and backend servers. A send operation does not reset the timer for receive operations. A receive operation does not reset the timer for send operations.
     * 
     */
    private final String idleTimeoutInSeconds;

    @CustomType.Constructor
    private ListenerConnectionConfiguration(
        @CustomType.Parameter("backendTcpProxyProtocolVersion") @Nullable Integer backendTcpProxyProtocolVersion,
        @CustomType.Parameter("idleTimeoutInSeconds") String idleTimeoutInSeconds) {
        this.backendTcpProxyProtocolVersion = backendTcpProxyProtocolVersion;
        this.idleTimeoutInSeconds = idleTimeoutInSeconds;
    }

    /**
     * @return (Updatable) The backend TCP Proxy Protocol version.  Example: `1`
     * 
     */
    public Optional<Integer> backendTcpProxyProtocolVersion() {
        return Optional.ofNullable(this.backendTcpProxyProtocolVersion);
    }
    /**
     * @return (Updatable) The maximum idle time, in seconds, allowed between two successive receive or two successive send operations between the client and backend servers. A send operation does not reset the timer for receive operations. A receive operation does not reset the timer for send operations.
     * 
     */
    public String idleTimeoutInSeconds() {
        return this.idleTimeoutInSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ListenerConnectionConfiguration defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer backendTcpProxyProtocolVersion;
        private String idleTimeoutInSeconds;

        public Builder() {
    	      // Empty
        }

        public Builder(ListenerConnectionConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.backendTcpProxyProtocolVersion = defaults.backendTcpProxyProtocolVersion;
    	      this.idleTimeoutInSeconds = defaults.idleTimeoutInSeconds;
        }

        public Builder backendTcpProxyProtocolVersion(@Nullable Integer backendTcpProxyProtocolVersion) {
            this.backendTcpProxyProtocolVersion = backendTcpProxyProtocolVersion;
            return this;
        }
        public Builder idleTimeoutInSeconds(String idleTimeoutInSeconds) {
            this.idleTimeoutInSeconds = Objects.requireNonNull(idleTimeoutInSeconds);
            return this;
        }        public ListenerConnectionConfiguration build() {
            return new ListenerConnectionConfiguration(backendTcpProxyProtocolVersion, idleTimeoutInSeconds);
        }
    }
}
