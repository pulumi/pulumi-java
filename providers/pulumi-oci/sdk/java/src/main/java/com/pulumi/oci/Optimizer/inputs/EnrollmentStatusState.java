// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnrollmentStatusState extends com.pulumi.resources.ResourceArgs {

    public static final EnrollmentStatusState Empty = new EnrollmentStatusState();

    /**
     * The OCID of the compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The unique OCID associated with the enrollment status.
     * 
     */
    @Import(name="enrollmentStatusId")
    private @Nullable Output<String> enrollmentStatusId;

    /**
     * @return The unique OCID associated with the enrollment status.
     * 
     */
    public Optional<Output<String>> enrollmentStatusId() {
        return Optional.ofNullable(this.enrollmentStatusId);
    }

    /**
     * The enrollment status&#39; current state.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The enrollment status&#39; current state.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) The Cloud Advisor enrollment status.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) The Cloud Advisor enrollment status.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The reason for the enrollment status of the tenancy.
     * 
     */
    @Import(name="statusReason")
    private @Nullable Output<String> statusReason;

    /**
     * @return The reason for the enrollment status of the tenancy.
     * 
     */
    public Optional<Output<String>> statusReason() {
        return Optional.ofNullable(this.statusReason);
    }

    /**
     * The date and time the enrollment status was created, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the enrollment status was created, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time the enrollment status was last updated, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the enrollment status was last updated, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private EnrollmentStatusState() {}

    private EnrollmentStatusState(EnrollmentStatusState $) {
        this.compartmentId = $.compartmentId;
        this.enrollmentStatusId = $.enrollmentStatusId;
        this.state = $.state;
        this.status = $.status;
        this.statusReason = $.statusReason;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnrollmentStatusState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnrollmentStatusState $;

        public Builder() {
            $ = new EnrollmentStatusState();
        }

        public Builder(EnrollmentStatusState defaults) {
            $ = new EnrollmentStatusState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param enrollmentStatusId The unique OCID associated with the enrollment status.
         * 
         * @return builder
         * 
         */
        public Builder enrollmentStatusId(@Nullable Output<String> enrollmentStatusId) {
            $.enrollmentStatusId = enrollmentStatusId;
            return this;
        }

        /**
         * @param enrollmentStatusId The unique OCID associated with the enrollment status.
         * 
         * @return builder
         * 
         */
        public Builder enrollmentStatusId(String enrollmentStatusId) {
            return enrollmentStatusId(Output.of(enrollmentStatusId));
        }

        /**
         * @param state The enrollment status&#39; current state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The enrollment status&#39; current state.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param status (Updatable) The Cloud Advisor enrollment status.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) The Cloud Advisor enrollment status.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param statusReason The reason for the enrollment status of the tenancy.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(@Nullable Output<String> statusReason) {
            $.statusReason = statusReason;
            return this;
        }

        /**
         * @param statusReason The reason for the enrollment status of the tenancy.
         * 
         * @return builder
         * 
         */
        public Builder statusReason(String statusReason) {
            return statusReason(Output.of(statusReason));
        }

        /**
         * @param timeCreated The date and time the enrollment status was created, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the enrollment status was created, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The date and time the enrollment status was last updated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the enrollment status was last updated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public EnrollmentStatusState build() {
            return $;
        }
    }

}
