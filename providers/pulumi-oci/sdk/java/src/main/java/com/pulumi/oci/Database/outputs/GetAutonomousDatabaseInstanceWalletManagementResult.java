// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAutonomousDatabaseInstanceWalletManagementResult {
    /**
     * @return The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    private final String autonomousDatabaseId;
    private final String id;
    /**
     * @return Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
     * 
     */
    private final Boolean shouldRotate;
    /**
     * @return The current lifecycle state of the Autonomous Database wallet.
     * 
     */
    private final String state;
    /**
     * @return The date and time the wallet was last rotated.
     * 
     */
    private final String timeRotated;

    @CustomType.Constructor
    private GetAutonomousDatabaseInstanceWalletManagementResult(
        @CustomType.Parameter("autonomousDatabaseId") String autonomousDatabaseId,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("shouldRotate") Boolean shouldRotate,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeRotated") String timeRotated) {
        this.autonomousDatabaseId = autonomousDatabaseId;
        this.id = id;
        this.shouldRotate = shouldRotate;
        this.state = state;
        this.timeRotated = timeRotated;
    }

    /**
     * @return The database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String autonomousDatabaseId() {
        return this.autonomousDatabaseId;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates whether to rotate the wallet or not. If `false`, the wallet will not be rotated. The default is `false`.
     * 
     */
    public Boolean shouldRotate() {
        return this.shouldRotate;
    }
    /**
     * @return The current lifecycle state of the Autonomous Database wallet.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the wallet was last rotated.
     * 
     */
    public String timeRotated() {
        return this.timeRotated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDatabaseInstanceWalletManagementResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String autonomousDatabaseId;
        private String id;
        private Boolean shouldRotate;
        private String state;
        private String timeRotated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAutonomousDatabaseInstanceWalletManagementResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autonomousDatabaseId = defaults.autonomousDatabaseId;
    	      this.id = defaults.id;
    	      this.shouldRotate = defaults.shouldRotate;
    	      this.state = defaults.state;
    	      this.timeRotated = defaults.timeRotated;
        }

        public Builder autonomousDatabaseId(String autonomousDatabaseId) {
            this.autonomousDatabaseId = Objects.requireNonNull(autonomousDatabaseId);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder shouldRotate(Boolean shouldRotate) {
            this.shouldRotate = Objects.requireNonNull(shouldRotate);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeRotated(String timeRotated) {
            this.timeRotated = Objects.requireNonNull(timeRotated);
            return this;
        }        public GetAutonomousDatabaseInstanceWalletManagementResult build() {
            return new GetAutonomousDatabaseInstanceWalletManagementResult(autonomousDatabaseId, id, shouldRotate, state, timeRotated);
        }
    }
}
