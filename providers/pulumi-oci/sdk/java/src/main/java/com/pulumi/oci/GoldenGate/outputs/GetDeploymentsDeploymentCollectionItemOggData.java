// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GoldenGate.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDeploymentsDeploymentCollectionItemOggData {
    private final String adminPassword;
    /**
     * @return The GoldenGate deployment console username.
     * 
     */
    private final String adminUsername;
    /**
     * @return A PEM-encoded SSL certificate.
     * 
     */
    private final String certificate;
    /**
     * @return The name given to the GoldenGate service deployment. The name must be 1 to 32 characters long, must contain only alphanumeric characters and must start with a letter.
     * 
     */
    private final String deploymentName;
    private final String key;
    /**
     * @return Version of OGG
     * 
     */
    private final String oggVersion;

    @CustomType.Constructor
    private GetDeploymentsDeploymentCollectionItemOggData(
        @CustomType.Parameter("adminPassword") String adminPassword,
        @CustomType.Parameter("adminUsername") String adminUsername,
        @CustomType.Parameter("certificate") String certificate,
        @CustomType.Parameter("deploymentName") String deploymentName,
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("oggVersion") String oggVersion) {
        this.adminPassword = adminPassword;
        this.adminUsername = adminUsername;
        this.certificate = certificate;
        this.deploymentName = deploymentName;
        this.key = key;
        this.oggVersion = oggVersion;
    }

    public String adminPassword() {
        return this.adminPassword;
    }
    /**
     * @return The GoldenGate deployment console username.
     * 
     */
    public String adminUsername() {
        return this.adminUsername;
    }
    /**
     * @return A PEM-encoded SSL certificate.
     * 
     */
    public String certificate() {
        return this.certificate;
    }
    /**
     * @return The name given to the GoldenGate service deployment. The name must be 1 to 32 characters long, must contain only alphanumeric characters and must start with a letter.
     * 
     */
    public String deploymentName() {
        return this.deploymentName;
    }
    public String key() {
        return this.key;
    }
    /**
     * @return Version of OGG
     * 
     */
    public String oggVersion() {
        return this.oggVersion;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentsDeploymentCollectionItemOggData defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String adminPassword;
        private String adminUsername;
        private String certificate;
        private String deploymentName;
        private String key;
        private String oggVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDeploymentsDeploymentCollectionItemOggData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adminPassword = defaults.adminPassword;
    	      this.adminUsername = defaults.adminUsername;
    	      this.certificate = defaults.certificate;
    	      this.deploymentName = defaults.deploymentName;
    	      this.key = defaults.key;
    	      this.oggVersion = defaults.oggVersion;
        }

        public Builder adminPassword(String adminPassword) {
            this.adminPassword = Objects.requireNonNull(adminPassword);
            return this;
        }
        public Builder adminUsername(String adminUsername) {
            this.adminUsername = Objects.requireNonNull(adminUsername);
            return this;
        }
        public Builder certificate(String certificate) {
            this.certificate = Objects.requireNonNull(certificate);
            return this;
        }
        public Builder deploymentName(String deploymentName) {
            this.deploymentName = Objects.requireNonNull(deploymentName);
            return this;
        }
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder oggVersion(String oggVersion) {
            this.oggVersion = Objects.requireNonNull(oggVersion);
            return this;
        }        public GetDeploymentsDeploymentCollectionItemOggData build() {
            return new GetDeploymentsDeploymentCollectionItemOggData(adminPassword, adminUsername, certificate, deploymentName, key, oggVersion);
        }
    }
}
