// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CertificatePublicKeyInfo {
    /**
     * @return The algorithm identifier and parameters for the public key.
     * 
     */
    private final @Nullable String algorithm;
    /**
     * @return The private key exponent.
     * 
     */
    private final @Nullable Integer exponent;
    /**
     * @return The number of bits in a key used by a cryptographic algorithm.
     * 
     */
    private final @Nullable Integer keySize;

    @CustomType.Constructor
    private CertificatePublicKeyInfo(
        @CustomType.Parameter("algorithm") @Nullable String algorithm,
        @CustomType.Parameter("exponent") @Nullable Integer exponent,
        @CustomType.Parameter("keySize") @Nullable Integer keySize) {
        this.algorithm = algorithm;
        this.exponent = exponent;
        this.keySize = keySize;
    }

    /**
     * @return The algorithm identifier and parameters for the public key.
     * 
     */
    public Optional<String> algorithm() {
        return Optional.ofNullable(this.algorithm);
    }
    /**
     * @return The private key exponent.
     * 
     */
    public Optional<Integer> exponent() {
        return Optional.ofNullable(this.exponent);
    }
    /**
     * @return The number of bits in a key used by a cryptographic algorithm.
     * 
     */
    public Optional<Integer> keySize() {
        return Optional.ofNullable(this.keySize);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CertificatePublicKeyInfo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String algorithm;
        private @Nullable Integer exponent;
        private @Nullable Integer keySize;

        public Builder() {
    	      // Empty
        }

        public Builder(CertificatePublicKeyInfo defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.algorithm = defaults.algorithm;
    	      this.exponent = defaults.exponent;
    	      this.keySize = defaults.keySize;
        }

        public Builder algorithm(@Nullable String algorithm) {
            this.algorithm = algorithm;
            return this;
        }
        public Builder exponent(@Nullable Integer exponent) {
            this.exponent = exponent;
            return this;
        }
        public Builder keySize(@Nullable Integer keySize) {
            this.keySize = keySize;
            return this;
        }        public CertificatePublicKeyInfo build() {
            return new CertificatePublicKeyInfo(algorithm, exponent, keySize);
        }
    }
}
