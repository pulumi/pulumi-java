// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IdentityProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final IdentityProviderArgs Empty = new IdentityProviderArgs();

    /**
     * The OCID of your tenancy.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of your tenancy.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it&#39;s changeable.
     * 
     */
    @Import(name="description", required=true)
    private Output<String> description;

    /**
     * @return (Updatable) The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it&#39;s changeable.
     * 
     */
    public Output<String> description() {
        return this.description;
    }

    /**
     * (Updatable) Extra name value pairs associated with this identity provider. Example: `{&#34;clientId&#34;: &#34;app_sf3kdjf3&#34;}`
     * 
     */
    @Import(name="freeformAttributes")
    private @Nullable Output<Map<String,Object>> freeformAttributes;

    /**
     * @return (Updatable) Extra name value pairs associated with this identity provider. Example: `{&#34;clientId&#34;: &#34;app_sf3kdjf3&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformAttributes() {
        return Optional.ofNullable(this.freeformAttributes);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The XML that contains the information required for federating.
     * 
     */
    @Import(name="metadata", required=true)
    private Output<String> metadata;

    /**
     * @return (Updatable) The XML that contains the information required for federating.
     * 
     */
    public Output<String> metadata() {
        return this.metadata;
    }

    /**
     * (Updatable) The URL for retrieving the identity provider&#39;s metadata, which contains information required for federating.
     * 
     */
    @Import(name="metadataUrl", required=true)
    private Output<String> metadataUrl;

    /**
     * @return (Updatable) The URL for retrieving the identity provider&#39;s metadata, which contains information required for federating.
     * 
     */
    public Output<String> metadataUrl() {
        return this.metadataUrl;
    }

    /**
     * The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).  Example: `IDCS`
     * 
     */
    @Import(name="productType", required=true)
    private Output<String> productType;

    /**
     * @return The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).  Example: `IDCS`
     * 
     */
    public Output<String> productType() {
        return this.productType;
    }

    /**
     * (Updatable) The protocol used for federation.  Example: `SAML2`
     * 
     */
    @Import(name="protocol", required=true)
    private Output<String> protocol;

    /**
     * @return (Updatable) The protocol used for federation.  Example: `SAML2`
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }

    private IdentityProviderArgs() {}

    private IdentityProviderArgs(IdentityProviderArgs $) {
        this.compartmentId = $.compartmentId;
        this.definedTags = $.definedTags;
        this.description = $.description;
        this.freeformAttributes = $.freeformAttributes;
        this.freeformTags = $.freeformTags;
        this.metadata = $.metadata;
        this.metadataUrl = $.metadataUrl;
        this.name = $.name;
        this.productType = $.productType;
        this.protocol = $.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IdentityProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IdentityProviderArgs $;

        public Builder() {
            $ = new IdentityProviderArgs();
        }

        public Builder(IdentityProviderArgs defaults) {
            $ = new IdentityProviderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of your tenancy.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of your tenancy.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param description (Updatable) The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it&#39;s changeable.
         * 
         * @return builder
         * 
         */
        public Builder description(Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description (Updatable) The description you assign to the `IdentityProvider` during creation. Does not have to be unique, and it&#39;s changeable.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param freeformAttributes (Updatable) Extra name value pairs associated with this identity provider. Example: `{&#34;clientId&#34;: &#34;app_sf3kdjf3&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformAttributes(@Nullable Output<Map<String,Object>> freeformAttributes) {
            $.freeformAttributes = freeformAttributes;
            return this;
        }

        /**
         * @param freeformAttributes (Updatable) Extra name value pairs associated with this identity provider. Example: `{&#34;clientId&#34;: &#34;app_sf3kdjf3&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformAttributes(Map<String,Object> freeformAttributes) {
            return freeformAttributes(Output.of(freeformAttributes));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param metadata (Updatable) The XML that contains the information required for federating.
         * 
         * @return builder
         * 
         */
        public Builder metadata(Output<String> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata (Updatable) The XML that contains the information required for federating.
         * 
         * @return builder
         * 
         */
        public Builder metadata(String metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param metadataUrl (Updatable) The URL for retrieving the identity provider&#39;s metadata, which contains information required for federating.
         * 
         * @return builder
         * 
         */
        public Builder metadataUrl(Output<String> metadataUrl) {
            $.metadataUrl = metadataUrl;
            return this;
        }

        /**
         * @param metadataUrl (Updatable) The URL for retrieving the identity provider&#39;s metadata, which contains information required for federating.
         * 
         * @return builder
         * 
         */
        public Builder metadataUrl(String metadataUrl) {
            return metadataUrl(Output.of(metadataUrl));
        }

        /**
         * @param name The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name you assign to the `IdentityProvider` during creation. The name must be unique across all `IdentityProvider` objects in the tenancy and cannot be changed.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param productType The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).  Example: `IDCS`
         * 
         * @return builder
         * 
         */
        public Builder productType(Output<String> productType) {
            $.productType = productType;
            return this;
        }

        /**
         * @param productType The identity provider service or product. Supported identity providers are Oracle Identity Cloud Service (IDCS) and Microsoft Active Directory Federation Services (ADFS).  Example: `IDCS`
         * 
         * @return builder
         * 
         */
        public Builder productType(String productType) {
            return productType(Output.of(productType));
        }

        /**
         * @param protocol (Updatable) The protocol used for federation.  Example: `SAML2`
         * 
         * @return builder
         * 
         */
        public Builder protocol(Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol (Updatable) The protocol used for federation.  Example: `SAML2`
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public IdentityProviderArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.description = Objects.requireNonNull($.description, "expected parameter 'description' to be non-null");
            $.metadata = Objects.requireNonNull($.metadata, "expected parameter 'metadata' to be non-null");
            $.metadataUrl = Objects.requireNonNull($.metadataUrl, "expected parameter 'metadataUrl' to be non-null");
            $.productType = Objects.requireNonNull($.productType, "expected parameter 'productType' to be non-null");
            $.protocol = Objects.requireNonNull($.protocol, "expected parameter 'protocol' to be non-null");
            return $;
        }
    }

}
