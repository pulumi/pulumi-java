// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.HealthChecks;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.HealthChecks.HttpMonitorArgs;
import com.pulumi.oci.HealthChecks.inputs.HttpMonitorState;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Http Monitor resource in Oracle Cloud Infrastructure Health Checks service.
 * 
 * Creates an HTTP monitor. Vantage points will be automatically selected if not specified,
 * and probes will be initiated from each vantage point to each of the targets at the frequency
 * specified by `intervalInSeconds`.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * HttpMonitors can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:HealthChecks/httpMonitor:HttpMonitor test_http_monitor &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:HealthChecks/httpMonitor:HttpMonitor")
public class HttpMonitor extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The OCID of the compartment.
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A user-friendly and mutable name suitable for display in a user interface.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly and mutable name suitable for display in a user interface.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace.  For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) A dictionary of HTTP request headers.
     * 
     */
    @Export(name="headers", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> headers;

    /**
     * @return (Updatable) A dictionary of HTTP request headers.
     * 
     */
    public Output<Map<String,Object>> headers() {
        return this.headers;
    }
    /**
     * The region where updates must be made and where results must be fetched from.
     * 
     */
    @Export(name="homeRegion", type=String.class, parameters={})
    private Output<String> homeRegion;

    /**
     * @return The region where updates must be made and where results must be fetched from.
     * 
     */
    public Output<String> homeRegion() {
        return this.homeRegion;
    }
    /**
     * (Updatable) The monitor interval in seconds. Valid values: 10, 30, and 60.
     * 
     */
    @Export(name="intervalInSeconds", type=Integer.class, parameters={})
    private Output<Integer> intervalInSeconds;

    /**
     * @return (Updatable) The monitor interval in seconds. Valid values: 10, 30, and 60.
     * 
     */
    public Output<Integer> intervalInSeconds() {
        return this.intervalInSeconds;
    }
    /**
     * (Updatable) Enables or disables the monitor. Set to &#39;true&#39; to launch monitoring.
     * 
     */
    @Export(name="isEnabled", type=Boolean.class, parameters={})
    private Output<Boolean> isEnabled;

    /**
     * @return (Updatable) Enables or disables the monitor. Set to &#39;true&#39; to launch monitoring.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }
    /**
     * (Updatable) The supported HTTP methods available for probes.
     * 
     */
    @Export(name="method", type=String.class, parameters={})
    private Output<String> method;

    /**
     * @return (Updatable) The supported HTTP methods available for probes.
     * 
     */
    public Output<String> method() {
        return this.method;
    }
    /**
     * (Updatable) The optional URL path to probe, including query parameters.
     * 
     */
    @Export(name="path", type=String.class, parameters={})
    private Output<String> path;

    /**
     * @return (Updatable) The optional URL path to probe, including query parameters.
     * 
     */
    public Output<String> path() {
        return this.path;
    }
    /**
     * (Updatable) The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
     * 
     */
    @Export(name="port", type=Integer.class, parameters={})
    private Output<Integer> port;

    /**
     * @return (Updatable) The port on which to probe endpoints. If unspecified, probes will use the default port of their protocol.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }
    /**
     * (Updatable) The supported protocols available for HTTP probes.
     * 
     */
    @Export(name="protocol", type=String.class, parameters={})
    private Output<String> protocol;

    /**
     * @return (Updatable) The supported protocols available for HTTP probes.
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }
    /**
     * A URL for fetching the probe results.
     * 
     */
    @Export(name="resultsUrl", type=String.class, parameters={})
    private Output<String> resultsUrl;

    /**
     * @return A URL for fetching the probe results.
     * 
     */
    public Output<String> resultsUrl() {
        return this.resultsUrl;
    }
    /**
     * (Updatable) A list of targets (hostnames or IP addresses) of the probe.
     * 
     */
    @Export(name="targets", type=List.class, parameters={String.class})
    private Output<List<String>> targets;

    /**
     * @return (Updatable) A list of targets (hostnames or IP addresses) of the probe.
     * 
     */
    public Output<List<String>> targets() {
        return this.targets;
    }
    /**
     * The RFC 3339-formatted creation date and time of the probe.
     * 
     */
    @Export(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    /**
     * @return The RFC 3339-formatted creation date and time of the probe.
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }
    /**
     * (Updatable) The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
     * 
     */
    @Export(name="timeoutInSeconds", type=Integer.class, parameters={})
    private Output<Integer> timeoutInSeconds;

    /**
     * @return (Updatable) The probe timeout in seconds. Valid values: 10, 20, 30, and 60. The probe timeout must be less than or equal to `intervalInSeconds` for monitors.
     * 
     */
    public Output<Integer> timeoutInSeconds() {
        return this.timeoutInSeconds;
    }
    /**
     * (Updatable) A list of names of vantage points from which to execute the probe.
     * 
     */
    @Export(name="vantagePointNames", type=List.class, parameters={String.class})
    private Output<List<String>> vantagePointNames;

    /**
     * @return (Updatable) A list of names of vantage points from which to execute the probe.
     * 
     */
    public Output<List<String>> vantagePointNames() {
        return this.vantagePointNames;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public HttpMonitor(String name) {
        this(name, HttpMonitorArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public HttpMonitor(String name, HttpMonitorArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public HttpMonitor(String name, HttpMonitorArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:HealthChecks/httpMonitor:HttpMonitor", name, args == null ? HttpMonitorArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private HttpMonitor(String name, Output<String> id, @Nullable HttpMonitorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:HealthChecks/httpMonitor:HttpMonitor", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static HttpMonitor get(String name, Output<String> id, @Nullable HttpMonitorState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new HttpMonitor(name, id, state, options);
    }
}
