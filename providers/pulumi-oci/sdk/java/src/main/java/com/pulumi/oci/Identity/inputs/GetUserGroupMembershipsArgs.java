// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Identity.inputs.GetUserGroupMembershipsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetUserGroupMembershipsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUserGroupMembershipsArgs Empty = new GetUserGroupMembershipsArgs();

    /**
     * The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private Output</* @Nullable */ List<GetUserGroupMembershipsFilter>> filters;

    public Output</* @Nullable */ List<GetUserGroupMembershipsFilter>> filters() {
        return this.filters;
    }

    /**
     * The OCID of the group.
     * 
     */
    @Import(name="groupId")
    private Output</* @Nullable */ String> groupId;

    /**
     * @return The OCID of the group.
     * 
     */
    public Output</* @Nullable */ String> groupId() {
        return this.groupId;
    }

    /**
     * The OCID of the user.
     * 
     */
    @Import(name="userId")
    private Output</* @Nullable */ String> userId;

    /**
     * @return The OCID of the user.
     * 
     */
    public Output</* @Nullable */ String> userId() {
        return this.userId;
    }

    private GetUserGroupMembershipsArgs() {}

    private GetUserGroupMembershipsArgs(GetUserGroupMembershipsArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.groupId = $.groupId;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUserGroupMembershipsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUserGroupMembershipsArgs $;

        public Builder() {
            $ = new GetUserGroupMembershipsArgs();
        }

        public Builder(GetUserGroupMembershipsArgs defaults) {
            $ = new GetUserGroupMembershipsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment (remember that the tenancy is simply the root compartment).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment (remember that the tenancy is simply the root compartment).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(Output</* @Nullable */ List<GetUserGroupMembershipsFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetUserGroupMembershipsFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetUserGroupMembershipsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param groupId The OCID of the group.
         * 
         * @return builder
         * 
         */
        public Builder groupId(Output</* @Nullable */ String> groupId) {
            $.groupId = groupId;
            return this;
        }

        /**
         * @param groupId The OCID of the group.
         * 
         * @return builder
         * 
         */
        public Builder groupId(@Nullable String groupId) {
            return groupId(Output.of(groupId));
        }

        /**
         * @param userId The OCID of the user.
         * 
         * @return builder
         * 
         */
        public Builder userId(Output</* @Nullable */ String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The OCID of the user.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable String userId) {
            return userId(Output.of(userId));
        }

        public GetUserGroupMembershipsArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
