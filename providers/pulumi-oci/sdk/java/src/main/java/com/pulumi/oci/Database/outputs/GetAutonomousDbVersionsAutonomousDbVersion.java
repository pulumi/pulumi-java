// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAutonomousDbVersionsAutonomousDbVersion {
    /**
     * @return A filter to return only autonomous database resources that match the specified workload type.
     * 
     */
    private final String dbWorkload;
    /**
     * @return A URL that points to a detailed description of the Autonomous Database version.
     * 
     */
    private final String details;
    /**
     * @return True if the database uses [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).
     * 
     */
    private final Boolean isDedicated;
    /**
     * @return True if this version of the Oracle Database software&#39;s default is free.
     * 
     */
    private final Boolean isDefaultForFree;
    /**
     * @return True if this version of the Oracle Database software&#39;s default is paid.
     * 
     */
    private final Boolean isDefaultForPaid;
    /**
     * @return True if this version of the Oracle Database software can be used for Always-Free Autonomous Databases.
     * 
     */
    private final Boolean isFreeTierEnabled;
    /**
     * @return True if this version of the Oracle Database software has payments enabled.
     * 
     */
    private final Boolean isPaidEnabled;
    /**
     * @return A valid Oracle Database version for Autonomous Database.
     * 
     */
    private final String version;

    @CustomType.Constructor
    private GetAutonomousDbVersionsAutonomousDbVersion(
        @CustomType.Parameter("dbWorkload") String dbWorkload,
        @CustomType.Parameter("details") String details,
        @CustomType.Parameter("isDedicated") Boolean isDedicated,
        @CustomType.Parameter("isDefaultForFree") Boolean isDefaultForFree,
        @CustomType.Parameter("isDefaultForPaid") Boolean isDefaultForPaid,
        @CustomType.Parameter("isFreeTierEnabled") Boolean isFreeTierEnabled,
        @CustomType.Parameter("isPaidEnabled") Boolean isPaidEnabled,
        @CustomType.Parameter("version") String version) {
        this.dbWorkload = dbWorkload;
        this.details = details;
        this.isDedicated = isDedicated;
        this.isDefaultForFree = isDefaultForFree;
        this.isDefaultForPaid = isDefaultForPaid;
        this.isFreeTierEnabled = isFreeTierEnabled;
        this.isPaidEnabled = isPaidEnabled;
        this.version = version;
    }

    /**
     * @return A filter to return only autonomous database resources that match the specified workload type.
     * 
     */
    public String dbWorkload() {
        return this.dbWorkload;
    }
    /**
     * @return A URL that points to a detailed description of the Autonomous Database version.
     * 
     */
    public String details() {
        return this.details;
    }
    /**
     * @return True if the database uses [dedicated Exadata infrastructure](https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html).
     * 
     */
    public Boolean isDedicated() {
        return this.isDedicated;
    }
    /**
     * @return True if this version of the Oracle Database software&#39;s default is free.
     * 
     */
    public Boolean isDefaultForFree() {
        return this.isDefaultForFree;
    }
    /**
     * @return True if this version of the Oracle Database software&#39;s default is paid.
     * 
     */
    public Boolean isDefaultForPaid() {
        return this.isDefaultForPaid;
    }
    /**
     * @return True if this version of the Oracle Database software can be used for Always-Free Autonomous Databases.
     * 
     */
    public Boolean isFreeTierEnabled() {
        return this.isFreeTierEnabled;
    }
    /**
     * @return True if this version of the Oracle Database software has payments enabled.
     * 
     */
    public Boolean isPaidEnabled() {
        return this.isPaidEnabled;
    }
    /**
     * @return A valid Oracle Database version for Autonomous Database.
     * 
     */
    public String version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAutonomousDbVersionsAutonomousDbVersion defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String dbWorkload;
        private String details;
        private Boolean isDedicated;
        private Boolean isDefaultForFree;
        private Boolean isDefaultForPaid;
        private Boolean isFreeTierEnabled;
        private Boolean isPaidEnabled;
        private String version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAutonomousDbVersionsAutonomousDbVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbWorkload = defaults.dbWorkload;
    	      this.details = defaults.details;
    	      this.isDedicated = defaults.isDedicated;
    	      this.isDefaultForFree = defaults.isDefaultForFree;
    	      this.isDefaultForPaid = defaults.isDefaultForPaid;
    	      this.isFreeTierEnabled = defaults.isFreeTierEnabled;
    	      this.isPaidEnabled = defaults.isPaidEnabled;
    	      this.version = defaults.version;
        }

        public Builder dbWorkload(String dbWorkload) {
            this.dbWorkload = Objects.requireNonNull(dbWorkload);
            return this;
        }
        public Builder details(String details) {
            this.details = Objects.requireNonNull(details);
            return this;
        }
        public Builder isDedicated(Boolean isDedicated) {
            this.isDedicated = Objects.requireNonNull(isDedicated);
            return this;
        }
        public Builder isDefaultForFree(Boolean isDefaultForFree) {
            this.isDefaultForFree = Objects.requireNonNull(isDefaultForFree);
            return this;
        }
        public Builder isDefaultForPaid(Boolean isDefaultForPaid) {
            this.isDefaultForPaid = Objects.requireNonNull(isDefaultForPaid);
            return this;
        }
        public Builder isFreeTierEnabled(Boolean isFreeTierEnabled) {
            this.isFreeTierEnabled = Objects.requireNonNull(isFreeTierEnabled);
            return this;
        }
        public Builder isPaidEnabled(Boolean isPaidEnabled) {
            this.isPaidEnabled = Objects.requireNonNull(isPaidEnabled);
            return this;
        }
        public Builder version(String version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }        public GetAutonomousDbVersionsAutonomousDbVersion build() {
            return new GetAutonomousDbVersionsAutonomousDbVersion(dbWorkload, details, isDedicated, isDefaultForFree, isDefaultForPaid, isFreeTierEnabled, isPaidEnabled, version);
        }
    }
}
