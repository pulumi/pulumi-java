// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Core.CrossConnectArgs;
import com.pulumi.oci.Core.inputs.CrossConnectState;
import com.pulumi.oci.Core.outputs.CrossConnectMacsecProperties;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Cross Connect resource in Oracle Cloud Infrastructure Core service.
 * 
 * Creates a new cross-connect. Oracle recommends you create each cross-connect in a
 * [CrossConnectGroup](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CrossConnectGroup) so you can use link aggregation
 * with the connection.
 * 
 * After creating the `CrossConnect` object, you need to go the FastConnect location
 * and request to have the physical cable installed. For more information, see
 * [FastConnect Overview](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/fastconnect.htm).
 * 
 * For the purposes of access control, you must provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the
 * compartment where you want the cross-connect to reside. If you&#39;re
 * not sure which compartment to use, put the cross-connect in the
 * same compartment with your VCN. For more information about
 * compartments and access control, see
 * [Overview of the IAM Service](https://docs.cloud.oracle.com/iaas/Content/Identity/Concepts/overview.htm).
 * For information about OCIDs, see
 * [Resource Identifiers](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
 * 
 * You may optionally specify a *display name* for the cross-connect.
 * It does not have to be unique, and you can change it. Avoid entering confidential information.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * CrossConnects can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Core/crossConnect:CrossConnect test_cross_connect &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Core/crossConnect:CrossConnect")
public class CrossConnect extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) The OCID of the compartment to contain the cross-connect.
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return (Updatable) The OCID of the compartment to contain the cross-connect.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * The OCID of the cross-connect group to put this cross-connect in.
     * 
     */
    @Export(name="crossConnectGroupId", type=String.class, parameters={})
    private Output<String> crossConnectGroupId;

    /**
     * @return The OCID of the cross-connect group to put this cross-connect in.
     * 
     */
    public Output<String> crossConnectGroupId() {
        return this.crossConnectGroupId;
    }
    /**
     * (Updatable) A reference name or identifier for the physical fiber connection that this cross-connect uses.
     * 
     */
    @Export(name="customerReferenceName", type=String.class, parameters={})
    private Output<String> customerReferenceName;

    /**
     * @return (Updatable) A reference name or identifier for the physical fiber connection that this cross-connect uses.
     * 
     */
    public Output<String> customerReferenceName() {
        return this.customerReferenceName;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Export(name="definedTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * If you already have an existing cross-connect or cross-connect group at this FastConnect location, and you want this new cross-connect to be on a different router (for the purposes of redundancy), provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that existing cross-connect or cross-connect group.
     * 
     */
    @Export(name="farCrossConnectOrCrossConnectGroupId", type=String.class, parameters={})
    private Output<String> farCrossConnectOrCrossConnectGroupId;

    /**
     * @return If you already have an existing cross-connect or cross-connect group at this FastConnect location, and you want this new cross-connect to be on a different router (for the purposes of redundancy), provide the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of that existing cross-connect or cross-connect group.
     * 
     */
    public Output<String> farCrossConnectOrCrossConnectGroupId() {
        return this.farCrossConnectOrCrossConnectGroupId;
    }
    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Export(name="freeformTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    /**
     * (Updatable) Set to true to activate the cross-connect. You activate it after the physical cabling is complete, and you&#39;ve confirmed the cross-connect&#39;s light levels are good and your side of the interface is up. Activation indicates to Oracle that the physical connection is ready.
     * 
     */
    @Export(name="isActive", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> isActive;

    /**
     * @return (Updatable) Set to true to activate the cross-connect. You activate it after the physical cabling is complete, and you&#39;ve confirmed the cross-connect&#39;s light levels are good and your side of the interface is up. Activation indicates to Oracle that the physical connection is ready.
     * 
     */
    public Output<Optional<Boolean>> isActive() {
        return Codegen.optional(this.isActive);
    }
    /**
     * The name of the FastConnect location where this cross-connect will be installed. To get a list of the available locations, see [ListCrossConnectLocations](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CrossConnectLocation/ListCrossConnectLocations).  Example: `CyrusOne, Chandler, AZ`
     * 
     */
    @Export(name="locationName", type=String.class, parameters={})
    private Output<String> locationName;

    /**
     * @return The name of the FastConnect location where this cross-connect will be installed. To get a list of the available locations, see [ListCrossConnectLocations](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/20160918/CrossConnectLocation/ListCrossConnectLocations).  Example: `CyrusOne, Chandler, AZ`
     * 
     */
    public Output<String> locationName() {
        return this.locationName;
    }
    /**
     * Properties used for MACsec (if capable).
     * 
     */
    @Export(name="macsecProperties", type=CrossConnectMacsecProperties.class, parameters={})
    private Output<CrossConnectMacsecProperties> macsecProperties;

    /**
     * @return Properties used for MACsec (if capable).
     * 
     */
    public Output<CrossConnectMacsecProperties> macsecProperties() {
        return this.macsecProperties;
    }
    /**
     * If you already have an existing cross-connect or cross-connect group at this FastConnect location, and you want this new cross-connect to be on the same router, provide the OCID of that existing cross-connect or cross-connect group.
     * 
     */
    @Export(name="nearCrossConnectOrCrossConnectGroupId", type=String.class, parameters={})
    private Output<String> nearCrossConnectOrCrossConnectGroupId;

    /**
     * @return If you already have an existing cross-connect or cross-connect group at this FastConnect location, and you want this new cross-connect to be on the same router, provide the OCID of that existing cross-connect or cross-connect group.
     * 
     */
    public Output<String> nearCrossConnectOrCrossConnectGroupId() {
        return this.nearCrossConnectOrCrossConnectGroupId;
    }
    /**
     * The FastConnect device that terminates the logical connection. This device might be different than the device that terminates the physical connection.
     * 
     */
    @Export(name="ociLogicalDeviceName", type=String.class, parameters={})
    private Output<String> ociLogicalDeviceName;

    /**
     * @return The FastConnect device that terminates the logical connection. This device might be different than the device that terminates the physical connection.
     * 
     */
    public Output<String> ociLogicalDeviceName() {
        return this.ociLogicalDeviceName;
    }
    /**
     * The FastConnect device that terminates the physical connection.
     * 
     */
    @Export(name="ociPhysicalDeviceName", type=String.class, parameters={})
    private Output<String> ociPhysicalDeviceName;

    /**
     * @return The FastConnect device that terminates the physical connection.
     * 
     */
    public Output<String> ociPhysicalDeviceName() {
        return this.ociPhysicalDeviceName;
    }
    /**
     * A string identifying the meet-me room port for this cross-connect.
     * 
     */
    @Export(name="portName", type=String.class, parameters={})
    private Output<String> portName;

    /**
     * @return A string identifying the meet-me room port for this cross-connect.
     * 
     */
    public Output<String> portName() {
        return this.portName;
    }
    /**
     * The port speed for this cross-connect. To get a list of the available port speeds, see [ListCrossConnectPortSpeedShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CrossConnectPortSpeedShape/ListCrossconnectPortSpeedShapes).  Example: `10 Gbps`
     * 
     */
    @Export(name="portSpeedShapeName", type=String.class, parameters={})
    private Output<String> portSpeedShapeName;

    /**
     * @return The port speed for this cross-connect. To get a list of the available port speeds, see [ListCrossConnectPortSpeedShapes](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/CrossConnectPortSpeedShape/ListCrossconnectPortSpeedShapes).  Example: `10 Gbps`
     * 
     */
    public Output<String> portSpeedShapeName() {
        return this.portSpeedShapeName;
    }
    /**
     * The cross-connect&#39;s current state.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The cross-connect&#39;s current state.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The date and time the cross-connect was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Export(name="timeCreated", type=String.class, parameters={})
    private Output<String> timeCreated;

    /**
     * @return The date and time the cross-connect was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Output<String> timeCreated() {
        return this.timeCreated;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CrossConnect(String name) {
        this(name, CrossConnectArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CrossConnect(String name, CrossConnectArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CrossConnect(String name, CrossConnectArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Core/crossConnect:CrossConnect", name, args == null ? CrossConnectArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private CrossConnect(String name, Output<String> id, @Nullable CrossConnectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Core/crossConnect:CrossConnect", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CrossConnect get(String name, Output<String> id, @Nullable CrossConnectState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CrossConnect(name, id, state, options);
    }
}
