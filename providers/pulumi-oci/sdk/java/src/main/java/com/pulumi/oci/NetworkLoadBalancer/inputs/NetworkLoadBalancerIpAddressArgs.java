// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.NetworkLoadBalancer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.NetworkLoadBalancer.inputs.NetworkLoadBalancerIpAddressReservedIpArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NetworkLoadBalancerIpAddressArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkLoadBalancerIpAddressArgs Empty = new NetworkLoadBalancerIpAddressArgs();

    /**
     * An IP address.  Example: `192.168.0.3`
     * 
     */
    @Import(name="ipAddress")
    private @Nullable Output<String> ipAddress;

    /**
     * @return An IP address.  Example: `192.168.0.3`
     * 
     */
    public Optional<Output<String>> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }

    /**
     * IP version associated with this IP address.
     * 
     */
    @Import(name="ipVersion")
    private @Nullable Output<String> ipVersion;

    /**
     * @return IP version associated with this IP address.
     * 
     */
    public Optional<Output<String>> ipVersion() {
        return Optional.ofNullable(this.ipVersion);
    }

    /**
     * Whether the IP address is public or private.
     * 
     */
    @Import(name="isPublic")
    private @Nullable Output<Boolean> isPublic;

    /**
     * @return Whether the IP address is public or private.
     * 
     */
    public Optional<Output<Boolean>> isPublic() {
        return Optional.ofNullable(this.isPublic);
    }

    /**
     * An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
     * 
     */
    @Import(name="reservedIps")
    private @Nullable Output<List<NetworkLoadBalancerIpAddressReservedIpArgs>> reservedIps;

    /**
     * @return An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
     * 
     */
    public Optional<Output<List<NetworkLoadBalancerIpAddressReservedIpArgs>>> reservedIps() {
        return Optional.ofNullable(this.reservedIps);
    }

    private NetworkLoadBalancerIpAddressArgs() {}

    private NetworkLoadBalancerIpAddressArgs(NetworkLoadBalancerIpAddressArgs $) {
        this.ipAddress = $.ipAddress;
        this.ipVersion = $.ipVersion;
        this.isPublic = $.isPublic;
        this.reservedIps = $.reservedIps;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkLoadBalancerIpAddressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkLoadBalancerIpAddressArgs $;

        public Builder() {
            $ = new NetworkLoadBalancerIpAddressArgs();
        }

        public Builder(NetworkLoadBalancerIpAddressArgs defaults) {
            $ = new NetworkLoadBalancerIpAddressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipAddress An IP address.  Example: `192.168.0.3`
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(@Nullable Output<String> ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        /**
         * @param ipAddress An IP address.  Example: `192.168.0.3`
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            return ipAddress(Output.of(ipAddress));
        }

        /**
         * @param ipVersion IP version associated with this IP address.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(@Nullable Output<String> ipVersion) {
            $.ipVersion = ipVersion;
            return this;
        }

        /**
         * @param ipVersion IP version associated with this IP address.
         * 
         * @return builder
         * 
         */
        public Builder ipVersion(String ipVersion) {
            return ipVersion(Output.of(ipVersion));
        }

        /**
         * @param isPublic Whether the IP address is public or private.
         * 
         * @return builder
         * 
         */
        public Builder isPublic(@Nullable Output<Boolean> isPublic) {
            $.isPublic = isPublic;
            return this;
        }

        /**
         * @param isPublic Whether the IP address is public or private.
         * 
         * @return builder
         * 
         */
        public Builder isPublic(Boolean isPublic) {
            return isPublic(Output.of(isPublic));
        }

        /**
         * @param reservedIps An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
         * 
         * @return builder
         * 
         */
        public Builder reservedIps(@Nullable Output<List<NetworkLoadBalancerIpAddressReservedIpArgs>> reservedIps) {
            $.reservedIps = reservedIps;
            return this;
        }

        /**
         * @param reservedIps An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
         * 
         * @return builder
         * 
         */
        public Builder reservedIps(List<NetworkLoadBalancerIpAddressReservedIpArgs> reservedIps) {
            return reservedIps(Output.of(reservedIps));
        }

        /**
         * @param reservedIps An object representing a reserved IP address to be attached or that is already attached to a network load balancer.
         * 
         * @return builder
         * 
         */
        public Builder reservedIps(NetworkLoadBalancerIpAddressReservedIpArgs... reservedIps) {
            return reservedIps(List.of(reservedIps));
        }

        public NetworkLoadBalancerIpAddressArgs build() {
            return $;
        }
    }

}
