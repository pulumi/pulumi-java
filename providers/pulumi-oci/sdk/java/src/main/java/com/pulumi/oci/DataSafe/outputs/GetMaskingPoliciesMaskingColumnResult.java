// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetMaskingPoliciesMaskingColumnMaskingFormat;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMaskingPoliciesMaskingColumnResult {
    /**
     * @return An array of child columns that are in referential relationship with the masking column.
     * 
     */
    private final List<String> childColumns;
    /**
     * @return The name of the substitution column.
     * 
     */
    private final String columnName;
    /**
     * @return The data type of the masking column.
     * 
     */
    private final String dataType;
    private final String id;
    /**
     * @return Indicates if data masking is enabled for the masking column.
     * 
     */
    private final Boolean isMaskingEnabled;
    /**
     * @return The unique key that identifies the masking column. It&#39;s numeric and unique within a masking policy.
     * 
     */
    private final String key;
    /**
     * @return Details about the current state of the masking column.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return The group of the masking column. All the columns in a group are masked together to ensure  that the masked data across these columns continue to retain the same logical relationship.  For more details, check &lt;a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037&gt;Group Masking in the Data Safe documentation.&lt;/a&gt;
     * 
     */
    private final String maskingColumnGroup;
    private final String maskingColumnKey;
    /**
     * @return An array of masking formats assigned to the masking column.
     * 
     */
    private final List<GetMaskingPoliciesMaskingColumnMaskingFormat> maskingFormats;
    /**
     * @return The OCID of the masking policy that contains the masking column.
     * 
     */
    private final String maskingPolicyId;
    /**
     * @return The name of the object (table or editioning view) that contains the database column.
     * 
     */
    private final String object;
    /**
     * @return The type of the object that contains the database column.
     * 
     */
    private final String objectType;
    /**
     * @return The name of the schema that contains the database column.
     * 
     */
    private final String schemaName;
    /**
     * @return The OCID of the sensitive type associated with the masking column.
     * 
     */
    private final String sensitiveTypeId;
    /**
     * @return The current state of the masking column.
     * 
     */
    private final String state;
    /**
     * @return The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private final String timeCreated;
    /**
     * @return The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetMaskingPoliciesMaskingColumnResult(
        @CustomType.Parameter("childColumns") List<String> childColumns,
        @CustomType.Parameter("columnName") String columnName,
        @CustomType.Parameter("dataType") String dataType,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isMaskingEnabled") Boolean isMaskingEnabled,
        @CustomType.Parameter("key") String key,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("maskingColumnGroup") String maskingColumnGroup,
        @CustomType.Parameter("maskingColumnKey") String maskingColumnKey,
        @CustomType.Parameter("maskingFormats") List<GetMaskingPoliciesMaskingColumnMaskingFormat> maskingFormats,
        @CustomType.Parameter("maskingPolicyId") String maskingPolicyId,
        @CustomType.Parameter("object") String object,
        @CustomType.Parameter("objectType") String objectType,
        @CustomType.Parameter("schemaName") String schemaName,
        @CustomType.Parameter("sensitiveTypeId") String sensitiveTypeId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.childColumns = childColumns;
        this.columnName = columnName;
        this.dataType = dataType;
        this.id = id;
        this.isMaskingEnabled = isMaskingEnabled;
        this.key = key;
        this.lifecycleDetails = lifecycleDetails;
        this.maskingColumnGroup = maskingColumnGroup;
        this.maskingColumnKey = maskingColumnKey;
        this.maskingFormats = maskingFormats;
        this.maskingPolicyId = maskingPolicyId;
        this.object = object;
        this.objectType = objectType;
        this.schemaName = schemaName;
        this.sensitiveTypeId = sensitiveTypeId;
        this.state = state;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return An array of child columns that are in referential relationship with the masking column.
     * 
     */
    public List<String> childColumns() {
        return this.childColumns;
    }
    /**
     * @return The name of the substitution column.
     * 
     */
    public String columnName() {
        return this.columnName;
    }
    /**
     * @return The data type of the masking column.
     * 
     */
    public String dataType() {
        return this.dataType;
    }
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if data masking is enabled for the masking column.
     * 
     */
    public Boolean isMaskingEnabled() {
        return this.isMaskingEnabled;
    }
    /**
     * @return The unique key that identifies the masking column. It&#39;s numeric and unique within a masking policy.
     * 
     */
    public String key() {
        return this.key;
    }
    /**
     * @return Details about the current state of the masking column.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The group of the masking column. All the columns in a group are masked together to ensure  that the masked data across these columns continue to retain the same logical relationship.  For more details, check &lt;a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037&gt;Group Masking in the Data Safe documentation.&lt;/a&gt;
     * 
     */
    public String maskingColumnGroup() {
        return this.maskingColumnGroup;
    }
    public String maskingColumnKey() {
        return this.maskingColumnKey;
    }
    /**
     * @return An array of masking formats assigned to the masking column.
     * 
     */
    public List<GetMaskingPoliciesMaskingColumnMaskingFormat> maskingFormats() {
        return this.maskingFormats;
    }
    /**
     * @return The OCID of the masking policy that contains the masking column.
     * 
     */
    public String maskingPolicyId() {
        return this.maskingPolicyId;
    }
    /**
     * @return The name of the object (table or editioning view) that contains the database column.
     * 
     */
    public String object() {
        return this.object;
    }
    /**
     * @return The type of the object that contains the database column.
     * 
     */
    public String objectType() {
        return this.objectType;
    }
    /**
     * @return The name of the schema that contains the database column.
     * 
     */
    public String schemaName() {
        return this.schemaName;
    }
    /**
     * @return The OCID of the sensitive type associated with the masking column.
     * 
     */
    public String sensitiveTypeId() {
        return this.sensitiveTypeId;
    }
    /**
     * @return The current state of the masking column.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the masking column was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the masking column was last updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMaskingPoliciesMaskingColumnResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<String> childColumns;
        private String columnName;
        private String dataType;
        private String id;
        private Boolean isMaskingEnabled;
        private String key;
        private String lifecycleDetails;
        private String maskingColumnGroup;
        private String maskingColumnKey;
        private List<GetMaskingPoliciesMaskingColumnMaskingFormat> maskingFormats;
        private String maskingPolicyId;
        private String object;
        private String objectType;
        private String schemaName;
        private String sensitiveTypeId;
        private String state;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMaskingPoliciesMaskingColumnResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.childColumns = defaults.childColumns;
    	      this.columnName = defaults.columnName;
    	      this.dataType = defaults.dataType;
    	      this.id = defaults.id;
    	      this.isMaskingEnabled = defaults.isMaskingEnabled;
    	      this.key = defaults.key;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.maskingColumnGroup = defaults.maskingColumnGroup;
    	      this.maskingColumnKey = defaults.maskingColumnKey;
    	      this.maskingFormats = defaults.maskingFormats;
    	      this.maskingPolicyId = defaults.maskingPolicyId;
    	      this.object = defaults.object;
    	      this.objectType = defaults.objectType;
    	      this.schemaName = defaults.schemaName;
    	      this.sensitiveTypeId = defaults.sensitiveTypeId;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder childColumns(List<String> childColumns) {
            this.childColumns = Objects.requireNonNull(childColumns);
            return this;
        }
        public Builder childColumns(String... childColumns) {
            return childColumns(List.of(childColumns));
        }
        public Builder columnName(String columnName) {
            this.columnName = Objects.requireNonNull(columnName);
            return this;
        }
        public Builder dataType(String dataType) {
            this.dataType = Objects.requireNonNull(dataType);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isMaskingEnabled(Boolean isMaskingEnabled) {
            this.isMaskingEnabled = Objects.requireNonNull(isMaskingEnabled);
            return this;
        }
        public Builder key(String key) {
            this.key = Objects.requireNonNull(key);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder maskingColumnGroup(String maskingColumnGroup) {
            this.maskingColumnGroup = Objects.requireNonNull(maskingColumnGroup);
            return this;
        }
        public Builder maskingColumnKey(String maskingColumnKey) {
            this.maskingColumnKey = Objects.requireNonNull(maskingColumnKey);
            return this;
        }
        public Builder maskingFormats(List<GetMaskingPoliciesMaskingColumnMaskingFormat> maskingFormats) {
            this.maskingFormats = Objects.requireNonNull(maskingFormats);
            return this;
        }
        public Builder maskingFormats(GetMaskingPoliciesMaskingColumnMaskingFormat... maskingFormats) {
            return maskingFormats(List.of(maskingFormats));
        }
        public Builder maskingPolicyId(String maskingPolicyId) {
            this.maskingPolicyId = Objects.requireNonNull(maskingPolicyId);
            return this;
        }
        public Builder object(String object) {
            this.object = Objects.requireNonNull(object);
            return this;
        }
        public Builder objectType(String objectType) {
            this.objectType = Objects.requireNonNull(objectType);
            return this;
        }
        public Builder schemaName(String schemaName) {
            this.schemaName = Objects.requireNonNull(schemaName);
            return this;
        }
        public Builder sensitiveTypeId(String sensitiveTypeId) {
            this.sensitiveTypeId = Objects.requireNonNull(sensitiveTypeId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetMaskingPoliciesMaskingColumnResult build() {
            return new GetMaskingPoliciesMaskingColumnResult(childColumns, columnName, dataType, id, isMaskingEnabled, key, lifecycleDetails, maskingColumnGroup, maskingColumnKey, maskingFormats, maskingPolicyId, object, objectType, schemaName, sensitiveTypeId, state, timeCreated, timeUpdated);
        }
    }
}
