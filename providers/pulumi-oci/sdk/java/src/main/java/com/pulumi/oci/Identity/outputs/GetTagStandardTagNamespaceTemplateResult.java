// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetTagStandardTagNamespaceTemplateTagDefinitionTemplate;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetTagStandardTagNamespaceTemplateResult {
    private final String compartmentId;
    /**
     * @return The default description of the tag namespace that users can use to create the tag definition
     * 
     */
    private final String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The reserved name of this standard tag namespace
     * 
     */
    private final String standardTagNamespaceName;
    /**
     * @return The status of the standard tag namespace
     * 
     */
    private final String status;
    /**
     * @return The template of the tag definition. This object includes necessary details to create the provided standard tag definition.
     * 
     */
    private final List<GetTagStandardTagNamespaceTemplateTagDefinitionTemplate> tagDefinitionTemplates;

    @CustomType.Constructor
    private GetTagStandardTagNamespaceTemplateResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("standardTagNamespaceName") String standardTagNamespaceName,
        @CustomType.Parameter("status") String status,
        @CustomType.Parameter("tagDefinitionTemplates") List<GetTagStandardTagNamespaceTemplateTagDefinitionTemplate> tagDefinitionTemplates) {
        this.compartmentId = compartmentId;
        this.description = description;
        this.id = id;
        this.standardTagNamespaceName = standardTagNamespaceName;
        this.status = status;
        this.tagDefinitionTemplates = tagDefinitionTemplates;
    }

    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The default description of the tag namespace that users can use to create the tag definition
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The reserved name of this standard tag namespace
     * 
     */
    public String standardTagNamespaceName() {
        return this.standardTagNamespaceName;
    }
    /**
     * @return The status of the standard tag namespace
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return The template of the tag definition. This object includes necessary details to create the provided standard tag definition.
     * 
     */
    public List<GetTagStandardTagNamespaceTemplateTagDefinitionTemplate> tagDefinitionTemplates() {
        return this.tagDefinitionTemplates;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTagStandardTagNamespaceTemplateResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private String description;
        private String id;
        private String standardTagNamespaceName;
        private String status;
        private List<GetTagStandardTagNamespaceTemplateTagDefinitionTemplate> tagDefinitionTemplates;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTagStandardTagNamespaceTemplateResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.standardTagNamespaceName = defaults.standardTagNamespaceName;
    	      this.status = defaults.status;
    	      this.tagDefinitionTemplates = defaults.tagDefinitionTemplates;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder standardTagNamespaceName(String standardTagNamespaceName) {
            this.standardTagNamespaceName = Objects.requireNonNull(standardTagNamespaceName);
            return this;
        }
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        public Builder tagDefinitionTemplates(List<GetTagStandardTagNamespaceTemplateTagDefinitionTemplate> tagDefinitionTemplates) {
            this.tagDefinitionTemplates = Objects.requireNonNull(tagDefinitionTemplates);
            return this;
        }
        public Builder tagDefinitionTemplates(GetTagStandardTagNamespaceTemplateTagDefinitionTemplate... tagDefinitionTemplates) {
            return tagDefinitionTemplates(List.of(tagDefinitionTemplates));
        }        public GetTagStandardTagNamespaceTemplateResult build() {
            return new GetTagStandardTagNamespaceTemplateResult(compartmentId, description, id, standardTagNamespaceName, status, tagDefinitionTemplates);
        }
    }
}
