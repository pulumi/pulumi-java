// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppCatalogSubscriptionState extends com.pulumi.resources.ResourceArgs {

    public static final AppCatalogSubscriptionState Empty = new AppCatalogSubscriptionState();

    /**
     * The compartmentID for the subscription.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The compartmentID for the subscription.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * EULA link
     * 
     */
    @Import(name="eulaLink")
    private @Nullable Output<String> eulaLink;

    /**
     * @return EULA link
     * 
     */
    public Optional<Output<String>> eulaLink() {
        return Optional.ofNullable(this.eulaLink);
    }

    /**
     * The OCID of the listing.
     * 
     */
    @Import(name="listingId")
    private @Nullable Output<String> listingId;

    /**
     * @return The OCID of the listing.
     * 
     */
    public Optional<Output<String>> listingId() {
        return Optional.ofNullable(this.listingId);
    }

    /**
     * Listing resource id.
     * 
     */
    @Import(name="listingResourceId")
    private @Nullable Output<String> listingResourceId;

    /**
     * @return Listing resource id.
     * 
     */
    public Optional<Output<String>> listingResourceId() {
        return Optional.ofNullable(this.listingResourceId);
    }

    /**
     * Listing resource version.
     * 
     */
    @Import(name="listingResourceVersion")
    private @Nullable Output<String> listingResourceVersion;

    /**
     * @return Listing resource version.
     * 
     */
    public Optional<Output<String>> listingResourceVersion() {
        return Optional.ofNullable(this.listingResourceVersion);
    }

    /**
     * Oracle TOU link
     * 
     */
    @Import(name="oracleTermsOfUseLink")
    private @Nullable Output<String> oracleTermsOfUseLink;

    /**
     * @return Oracle TOU link
     * 
     */
    public Optional<Output<String>> oracleTermsOfUseLink() {
        return Optional.ofNullable(this.oracleTermsOfUseLink);
    }

    /**
     * Name of the publisher who published this listing.
     * 
     */
    @Import(name="publisherName")
    private @Nullable Output<String> publisherName;

    /**
     * @return Name of the publisher who published this listing.
     * 
     */
    public Optional<Output<String>> publisherName() {
        return Optional.ofNullable(this.publisherName);
    }

    /**
     * A generated signature for this listing resource version retrieved the agreements API.
     * 
     */
    @Import(name="signature")
    private @Nullable Output<String> signature;

    /**
     * @return A generated signature for this listing resource version retrieved the agreements API.
     * 
     */
    public Optional<Output<String>> signature() {
        return Optional.ofNullable(this.signature);
    }

    /**
     * The short summary to the listing.
     * 
     */
    @Import(name="summary")
    private @Nullable Output<String> summary;

    /**
     * @return The short summary to the listing.
     * 
     */
    public Optional<Output<String>> summary() {
        return Optional.ofNullable(this.summary);
    }

    /**
     * Date and time at which the subscription was created, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return Date and time at which the subscription was created, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * Date and time the agreements were retrieved, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
     * 
     */
    @Import(name="timeRetrieved")
    private @Nullable Output<String> timeRetrieved;

    /**
     * @return Date and time the agreements were retrieved, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
     * 
     */
    public Optional<Output<String>> timeRetrieved() {
        return Optional.ofNullable(this.timeRetrieved);
    }

    private AppCatalogSubscriptionState() {}

    private AppCatalogSubscriptionState(AppCatalogSubscriptionState $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.eulaLink = $.eulaLink;
        this.listingId = $.listingId;
        this.listingResourceId = $.listingResourceId;
        this.listingResourceVersion = $.listingResourceVersion;
        this.oracleTermsOfUseLink = $.oracleTermsOfUseLink;
        this.publisherName = $.publisherName;
        this.signature = $.signature;
        this.summary = $.summary;
        this.timeCreated = $.timeCreated;
        this.timeRetrieved = $.timeRetrieved;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppCatalogSubscriptionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppCatalogSubscriptionState $;

        public Builder() {
            $ = new AppCatalogSubscriptionState();
        }

        public Builder(AppCatalogSubscriptionState defaults) {
            $ = new AppCatalogSubscriptionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The compartmentID for the subscription.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The compartmentID for the subscription.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param eulaLink EULA link
         * 
         * @return builder
         * 
         */
        public Builder eulaLink(@Nullable Output<String> eulaLink) {
            $.eulaLink = eulaLink;
            return this;
        }

        /**
         * @param eulaLink EULA link
         * 
         * @return builder
         * 
         */
        public Builder eulaLink(String eulaLink) {
            return eulaLink(Output.of(eulaLink));
        }

        /**
         * @param listingId The OCID of the listing.
         * 
         * @return builder
         * 
         */
        public Builder listingId(@Nullable Output<String> listingId) {
            $.listingId = listingId;
            return this;
        }

        /**
         * @param listingId The OCID of the listing.
         * 
         * @return builder
         * 
         */
        public Builder listingId(String listingId) {
            return listingId(Output.of(listingId));
        }

        /**
         * @param listingResourceId Listing resource id.
         * 
         * @return builder
         * 
         */
        public Builder listingResourceId(@Nullable Output<String> listingResourceId) {
            $.listingResourceId = listingResourceId;
            return this;
        }

        /**
         * @param listingResourceId Listing resource id.
         * 
         * @return builder
         * 
         */
        public Builder listingResourceId(String listingResourceId) {
            return listingResourceId(Output.of(listingResourceId));
        }

        /**
         * @param listingResourceVersion Listing resource version.
         * 
         * @return builder
         * 
         */
        public Builder listingResourceVersion(@Nullable Output<String> listingResourceVersion) {
            $.listingResourceVersion = listingResourceVersion;
            return this;
        }

        /**
         * @param listingResourceVersion Listing resource version.
         * 
         * @return builder
         * 
         */
        public Builder listingResourceVersion(String listingResourceVersion) {
            return listingResourceVersion(Output.of(listingResourceVersion));
        }

        /**
         * @param oracleTermsOfUseLink Oracle TOU link
         * 
         * @return builder
         * 
         */
        public Builder oracleTermsOfUseLink(@Nullable Output<String> oracleTermsOfUseLink) {
            $.oracleTermsOfUseLink = oracleTermsOfUseLink;
            return this;
        }

        /**
         * @param oracleTermsOfUseLink Oracle TOU link
         * 
         * @return builder
         * 
         */
        public Builder oracleTermsOfUseLink(String oracleTermsOfUseLink) {
            return oracleTermsOfUseLink(Output.of(oracleTermsOfUseLink));
        }

        /**
         * @param publisherName Name of the publisher who published this listing.
         * 
         * @return builder
         * 
         */
        public Builder publisherName(@Nullable Output<String> publisherName) {
            $.publisherName = publisherName;
            return this;
        }

        /**
         * @param publisherName Name of the publisher who published this listing.
         * 
         * @return builder
         * 
         */
        public Builder publisherName(String publisherName) {
            return publisherName(Output.of(publisherName));
        }

        /**
         * @param signature A generated signature for this listing resource version retrieved the agreements API.
         * 
         * @return builder
         * 
         */
        public Builder signature(@Nullable Output<String> signature) {
            $.signature = signature;
            return this;
        }

        /**
         * @param signature A generated signature for this listing resource version retrieved the agreements API.
         * 
         * @return builder
         * 
         */
        public Builder signature(String signature) {
            return signature(Output.of(signature));
        }

        /**
         * @param summary The short summary to the listing.
         * 
         * @return builder
         * 
         */
        public Builder summary(@Nullable Output<String> summary) {
            $.summary = summary;
            return this;
        }

        /**
         * @param summary The short summary to the listing.
         * 
         * @return builder
         * 
         */
        public Builder summary(String summary) {
            return summary(Output.of(summary));
        }

        /**
         * @param timeCreated Date and time at which the subscription was created, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated Date and time at which the subscription was created, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeRetrieved Date and time the agreements were retrieved, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
         * 
         * @return builder
         * 
         */
        public Builder timeRetrieved(@Nullable Output<String> timeRetrieved) {
            $.timeRetrieved = timeRetrieved;
            return this;
        }

        /**
         * @param timeRetrieved Date and time the agreements were retrieved, in [RFC3339](https://tools.ietf.org/html/rfc3339) format. Example: `2018-03-20T12:32:53.532Z`
         * 
         * @return builder
         * 
         */
        public Builder timeRetrieved(String timeRetrieved) {
            return timeRetrieved(Output.of(timeRetrieved));
        }

        public AppCatalogSubscriptionState build() {
            return $;
        }
    }

}
