// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceCatalog.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ServiceCatalog.inputs.GetServiceCatalogAssociationsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServiceCatalogAssociationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceCatalogAssociationsArgs Empty = new GetServiceCatalogAssociationsArgs();

    /**
     * The unique identifier of the entity associated with service catalog.
     * 
     */
    @Import(name="entityId")
    private @Nullable Output<String> entityId;

    /**
     * @return The unique identifier of the entity associated with service catalog.
     * 
     */
    public Optional<Output<String>> entityId() {
        return Optional.ofNullable(this.entityId);
    }

    /**
     * The type of the application in the service catalog.
     * 
     */
    @Import(name="entityType")
    private @Nullable Output<String> entityType;

    /**
     * @return The type of the application in the service catalog.
     * 
     */
    public Optional<Output<String>> entityType() {
        return Optional.ofNullable(this.entityType);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetServiceCatalogAssociationsFilterArgs>> filters;

    public Optional<Output<List<GetServiceCatalogAssociationsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The unique identifier for the service catalog association.
     * 
     */
    @Import(name="serviceCatalogAssociationId")
    private @Nullable Output<String> serviceCatalogAssociationId;

    /**
     * @return The unique identifier for the service catalog association.
     * 
     */
    public Optional<Output<String>> serviceCatalogAssociationId() {
        return Optional.ofNullable(this.serviceCatalogAssociationId);
    }

    /**
     * The unique identifier for the service catalog.
     * 
     */
    @Import(name="serviceCatalogId")
    private @Nullable Output<String> serviceCatalogId;

    /**
     * @return The unique identifier for the service catalog.
     * 
     */
    public Optional<Output<String>> serviceCatalogId() {
        return Optional.ofNullable(this.serviceCatalogId);
    }

    private GetServiceCatalogAssociationsArgs() {}

    private GetServiceCatalogAssociationsArgs(GetServiceCatalogAssociationsArgs $) {
        this.entityId = $.entityId;
        this.entityType = $.entityType;
        this.filters = $.filters;
        this.serviceCatalogAssociationId = $.serviceCatalogAssociationId;
        this.serviceCatalogId = $.serviceCatalogId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceCatalogAssociationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceCatalogAssociationsArgs $;

        public Builder() {
            $ = new GetServiceCatalogAssociationsArgs();
        }

        public Builder(GetServiceCatalogAssociationsArgs defaults) {
            $ = new GetServiceCatalogAssociationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param entityId The unique identifier of the entity associated with service catalog.
         * 
         * @return builder
         * 
         */
        public Builder entityId(@Nullable Output<String> entityId) {
            $.entityId = entityId;
            return this;
        }

        /**
         * @param entityId The unique identifier of the entity associated with service catalog.
         * 
         * @return builder
         * 
         */
        public Builder entityId(String entityId) {
            return entityId(Output.of(entityId));
        }

        /**
         * @param entityType The type of the application in the service catalog.
         * 
         * @return builder
         * 
         */
        public Builder entityType(@Nullable Output<String> entityType) {
            $.entityType = entityType;
            return this;
        }

        /**
         * @param entityType The type of the application in the service catalog.
         * 
         * @return builder
         * 
         */
        public Builder entityType(String entityType) {
            return entityType(Output.of(entityType));
        }

        public Builder filters(@Nullable Output<List<GetServiceCatalogAssociationsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetServiceCatalogAssociationsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetServiceCatalogAssociationsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param serviceCatalogAssociationId The unique identifier for the service catalog association.
         * 
         * @return builder
         * 
         */
        public Builder serviceCatalogAssociationId(@Nullable Output<String> serviceCatalogAssociationId) {
            $.serviceCatalogAssociationId = serviceCatalogAssociationId;
            return this;
        }

        /**
         * @param serviceCatalogAssociationId The unique identifier for the service catalog association.
         * 
         * @return builder
         * 
         */
        public Builder serviceCatalogAssociationId(String serviceCatalogAssociationId) {
            return serviceCatalogAssociationId(Output.of(serviceCatalogAssociationId));
        }

        /**
         * @param serviceCatalogId The unique identifier for the service catalog.
         * 
         * @return builder
         * 
         */
        public Builder serviceCatalogId(@Nullable Output<String> serviceCatalogId) {
            $.serviceCatalogId = serviceCatalogId;
            return this;
        }

        /**
         * @param serviceCatalogId The unique identifier for the service catalog.
         * 
         * @return builder
         * 
         */
        public Builder serviceCatalogId(String serviceCatalogId) {
            return serviceCatalogId(Output.of(serviceCatalogId));
        }

        public GetServiceCatalogAssociationsArgs build() {
            return $;
        }
    }

}
