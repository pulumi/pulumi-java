// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudGuard.outputs.GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail {
    private final String condition;
    /**
     * @return ResponderRule configurations
     * 
     */
    private final List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration> configurations;
    /**
     * @return Identifies state for ResponderRule
     * 
     */
    private final Boolean isEnabled;
    /**
     * @return Execution Mode for ResponderRule
     * 
     */
    private final String mode;

    @CustomType.Constructor
    private GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail(
        @CustomType.Parameter("condition") String condition,
        @CustomType.Parameter("configurations") List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration> configurations,
        @CustomType.Parameter("isEnabled") Boolean isEnabled,
        @CustomType.Parameter("mode") String mode) {
        this.condition = condition;
        this.configurations = configurations;
        this.isEnabled = isEnabled;
        this.mode = mode;
    }

    public String condition() {
        return this.condition;
    }
    /**
     * @return ResponderRule configurations
     * 
     */
    public List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration> configurations() {
        return this.configurations;
    }
    /**
     * @return Identifies state for ResponderRule
     * 
     */
    public Boolean isEnabled() {
        return this.isEnabled;
    }
    /**
     * @return Execution Mode for ResponderRule
     * 
     */
    public String mode() {
        return this.mode;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String condition;
        private List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration> configurations;
        private Boolean isEnabled;
        private String mode;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.condition = defaults.condition;
    	      this.configurations = defaults.configurations;
    	      this.isEnabled = defaults.isEnabled;
    	      this.mode = defaults.mode;
        }

        public Builder condition(String condition) {
            this.condition = Objects.requireNonNull(condition);
            return this;
        }
        public Builder configurations(List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration> configurations) {
            this.configurations = Objects.requireNonNull(configurations);
            return this;
        }
        public Builder configurations(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetailConfiguration... configurations) {
            return configurations(List.of(configurations));
        }
        public Builder isEnabled(Boolean isEnabled) {
            this.isEnabled = Objects.requireNonNull(isEnabled);
            return this;
        }
        public Builder mode(String mode) {
            this.mode = Objects.requireNonNull(mode);
            return this;
        }        public GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail build() {
            return new GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRuleDetail(condition, configurations, isEnabled, mode);
        }
    }
}
