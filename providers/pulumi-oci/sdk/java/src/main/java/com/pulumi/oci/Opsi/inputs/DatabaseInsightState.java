// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Opsi.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Opsi.inputs.DatabaseInsightConnectionCredentialDetailsArgs;
import com.pulumi.oci.Opsi.inputs.DatabaseInsightConnectionDetailsArgs;
import com.pulumi.oci.Opsi.inputs.DatabaseInsightCredentialDetailsArgs;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseInsightState extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseInsightState Empty = new DatabaseInsightState();

    /**
     * (Updatable) Compartment Identifier of database
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) Compartment Identifier of database
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * User credential details to connect to the database. This is supplied via the External Database Service.
     * 
     */
    @Import(name="connectionCredentialDetails")
    private @Nullable Output<DatabaseInsightConnectionCredentialDetailsArgs> connectionCredentialDetails;

    /**
     * @return User credential details to connect to the database. This is supplied via the External Database Service.
     * 
     */
    public Optional<Output<DatabaseInsightConnectionCredentialDetailsArgs>> connectionCredentialDetails() {
        return Optional.ofNullable(this.connectionCredentialDetails);
    }

    /**
     * Connection details to connect to the database. HostName, protocol, and port should be specified.
     * 
     */
    @Import(name="connectionDetails")
    private @Nullable Output<DatabaseInsightConnectionDetailsArgs> connectionDetails;

    /**
     * @return Connection details to connect to the database. HostName, protocol, and port should be specified.
     * 
     */
    public Optional<Output<DatabaseInsightConnectionDetailsArgs>> connectionDetails() {
        return Optional.ofNullable(this.connectionDetails);
    }

    /**
     * User credential details to connect to the database. This is supplied via the External Database Service.
     * 
     */
    @Import(name="credentialDetails")
    private @Nullable Output<DatabaseInsightCredentialDetailsArgs> credentialDetails;

    /**
     * @return User credential details to connect to the database. This is supplied via the External Database Service.
     * 
     */
    public Optional<Output<DatabaseInsightCredentialDetailsArgs>> credentialDetails() {
        return Optional.ofNullable(this.credentialDetails);
    }

    /**
     * A message describing the status of the database connection of this resource. For example, it can be used to provide actionable information about the permission and content validity of the database connection.
     * 
     */
    @Import(name="databaseConnectionStatusDetails")
    private @Nullable Output<String> databaseConnectionStatusDetails;

    /**
     * @return A message describing the status of the database connection of this resource. For example, it can be used to provide actionable information about the permission and content validity of the database connection.
     * 
     */
    public Optional<Output<String>> databaseConnectionStatusDetails() {
        return Optional.ofNullable(this.databaseConnectionStatusDetails);
    }

    /**
     * Display name of database
     * 
     */
    @Import(name="databaseDisplayName")
    private @Nullable Output<String> databaseDisplayName;

    /**
     * @return Display name of database
     * 
     */
    public Optional<Output<String>> databaseDisplayName() {
        return Optional.ofNullable(this.databaseDisplayName);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    @Import(name="databaseId")
    private @Nullable Output<String> databaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    public Optional<Output<String>> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }

    /**
     * Name of database
     * 
     */
    @Import(name="databaseName")
    private @Nullable Output<String> databaseName;

    /**
     * @return Name of database
     * 
     */
    public Optional<Output<String>> databaseName() {
        return Optional.ofNullable(this.databaseName);
    }

    /**
     * Oracle Cloud Infrastructure database resource type
     * 
     */
    @Import(name="databaseResourceType")
    private @Nullable Output<String> databaseResourceType;

    /**
     * @return Oracle Cloud Infrastructure database resource type
     * 
     */
    public Optional<Output<String>> databaseResourceType() {
        return Optional.ofNullable(this.databaseResourceType);
    }

    /**
     * Operations Insights internal representation of the database type.
     * 
     */
    @Import(name="databaseType")
    private @Nullable Output<String> databaseType;

    /**
     * @return Operations Insights internal representation of the database type.
     * 
     */
    public Optional<Output<String>> databaseType() {
        return Optional.ofNullable(this.databaseType);
    }

    /**
     * The version of the database.
     * 
     */
    @Import(name="databaseVersion")
    private @Nullable Output<String> databaseVersion;

    /**
     * @return The version of the database.
     * 
     */
    public Optional<Output<String>> databaseVersion() {
        return Optional.ofNullable(this.databaseVersion);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * Database Deployment Type
     * 
     */
    @Import(name="deploymentType")
    private @Nullable Output<String> deploymentType;

    /**
     * @return Database Deployment Type
     * 
     */
    public Optional<Output<String>> deploymentType() {
        return Optional.ofNullable(this.deploymentType);
    }

    /**
     * OPSI Enterprise Manager Bridge OCID
     * 
     */
    @Import(name="enterpriseManagerBridgeId")
    private @Nullable Output<String> enterpriseManagerBridgeId;

    /**
     * @return OPSI Enterprise Manager Bridge OCID
     * 
     */
    public Optional<Output<String>> enterpriseManagerBridgeId() {
        return Optional.ofNullable(this.enterpriseManagerBridgeId);
    }

    /**
     * Enterprise Manager Entity Display Name
     * 
     */
    @Import(name="enterpriseManagerEntityDisplayName")
    private @Nullable Output<String> enterpriseManagerEntityDisplayName;

    /**
     * @return Enterprise Manager Entity Display Name
     * 
     */
    public Optional<Output<String>> enterpriseManagerEntityDisplayName() {
        return Optional.ofNullable(this.enterpriseManagerEntityDisplayName);
    }

    /**
     * Enterprise Manager Entity Unique Identifier
     * 
     */
    @Import(name="enterpriseManagerEntityIdentifier")
    private @Nullable Output<String> enterpriseManagerEntityIdentifier;

    /**
     * @return Enterprise Manager Entity Unique Identifier
     * 
     */
    public Optional<Output<String>> enterpriseManagerEntityIdentifier() {
        return Optional.ofNullable(this.enterpriseManagerEntityIdentifier);
    }

    /**
     * Enterprise Manager Entity Name
     * 
     */
    @Import(name="enterpriseManagerEntityName")
    private @Nullable Output<String> enterpriseManagerEntityName;

    /**
     * @return Enterprise Manager Entity Name
     * 
     */
    public Optional<Output<String>> enterpriseManagerEntityName() {
        return Optional.ofNullable(this.enterpriseManagerEntityName);
    }

    /**
     * Enterprise Manager Entity Type
     * 
     */
    @Import(name="enterpriseManagerEntityType")
    private @Nullable Output<String> enterpriseManagerEntityType;

    /**
     * @return Enterprise Manager Entity Type
     * 
     */
    public Optional<Output<String>> enterpriseManagerEntityType() {
        return Optional.ofNullable(this.enterpriseManagerEntityType);
    }

    /**
     * Enterprise Manager Unique Identifier
     * 
     */
    @Import(name="enterpriseManagerIdentifier")
    private @Nullable Output<String> enterpriseManagerIdentifier;

    /**
     * @return Enterprise Manager Unique Identifier
     * 
     */
    public Optional<Output<String>> enterpriseManagerIdentifier() {
        return Optional.ofNullable(this.enterpriseManagerIdentifier);
    }

    /**
     * (Updatable) Source of the database entity.
     * 
     */
    @Import(name="entitySource")
    private @Nullable Output<String> entitySource;

    /**
     * @return (Updatable) Source of the database entity.
     * 
     */
    public Optional<Output<String>> entitySource() {
        return Optional.ofNullable(this.entitySource);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
     * 
     */
    @Import(name="exadataInsightId")
    private @Nullable Output<String> exadataInsightId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
     * 
     */
    public Optional<Output<String>> exadataInsightId() {
        return Optional.ofNullable(this.exadataInsightId);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
     * 
     */
    @Import(name="opsiPrivateEndpointId")
    private @Nullable Output<String> opsiPrivateEndpointId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
     * 
     */
    public Optional<Output<String>> opsiPrivateEndpointId() {
        return Optional.ofNullable(this.opsiPrivateEndpointId);
    }

    /**
     * Processor count. This is the OCPU count for Autonomous Database and CPU core count for other database types.
     * 
     */
    @Import(name="processorCount")
    private @Nullable Output<Integer> processorCount;

    /**
     * @return Processor count. This is the OCPU count for Autonomous Database and CPU core count for other database types.
     * 
     */
    public Optional<Output<Integer>> processorCount() {
        return Optional.ofNullable(this.processorCount);
    }

    /**
     * Database service name used for connection requests.
     * 
     */
    @Import(name="serviceName")
    private @Nullable Output<String> serviceName;

    /**
     * @return Database service name used for connection requests.
     * 
     */
    public Optional<Output<String>> serviceName() {
        return Optional.ofNullable(this.serviceName);
    }

    /**
     * The current state of the database.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the database.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) Status of the resource. Example: &#34;ENABLED&#34;, &#34;DISABLED&#34;. Resource can be either enabled or disabled by updating the value of status field to either &#34;ENABLED&#34; or &#34;DISABLED&#34;
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) Status of the resource. Example: &#34;ENABLED&#34;, &#34;DISABLED&#34;. Resource can be either enabled or disabled by updating the value of status field to either &#34;ENABLED&#34; or &#34;DISABLED&#34;
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    @Import(name="systemTags")
    private @Nullable Output<Map<String,Object>> systemTags;

    /**
     * @return System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> systemTags() {
        return Optional.ofNullable(this.systemTags);
    }

    /**
     * The time the the database insight was first enabled. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the the database insight was first enabled. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the database insight was updated. An RFC3339 formatted datetime string
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the database insight was updated. An RFC3339 formatted datetime string
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private DatabaseInsightState() {}

    private DatabaseInsightState(DatabaseInsightState $) {
        this.compartmentId = $.compartmentId;
        this.connectionCredentialDetails = $.connectionCredentialDetails;
        this.connectionDetails = $.connectionDetails;
        this.credentialDetails = $.credentialDetails;
        this.databaseConnectionStatusDetails = $.databaseConnectionStatusDetails;
        this.databaseDisplayName = $.databaseDisplayName;
        this.databaseId = $.databaseId;
        this.databaseName = $.databaseName;
        this.databaseResourceType = $.databaseResourceType;
        this.databaseType = $.databaseType;
        this.databaseVersion = $.databaseVersion;
        this.definedTags = $.definedTags;
        this.deploymentType = $.deploymentType;
        this.enterpriseManagerBridgeId = $.enterpriseManagerBridgeId;
        this.enterpriseManagerEntityDisplayName = $.enterpriseManagerEntityDisplayName;
        this.enterpriseManagerEntityIdentifier = $.enterpriseManagerEntityIdentifier;
        this.enterpriseManagerEntityName = $.enterpriseManagerEntityName;
        this.enterpriseManagerEntityType = $.enterpriseManagerEntityType;
        this.enterpriseManagerIdentifier = $.enterpriseManagerIdentifier;
        this.entitySource = $.entitySource;
        this.exadataInsightId = $.exadataInsightId;
        this.freeformTags = $.freeformTags;
        this.lifecycleDetails = $.lifecycleDetails;
        this.opsiPrivateEndpointId = $.opsiPrivateEndpointId;
        this.processorCount = $.processorCount;
        this.serviceName = $.serviceName;
        this.state = $.state;
        this.status = $.status;
        this.systemTags = $.systemTags;
        this.timeCreated = $.timeCreated;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseInsightState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseInsightState $;

        public Builder() {
            $ = new DatabaseInsightState();
        }

        public Builder(DatabaseInsightState defaults) {
            $ = new DatabaseInsightState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier of database
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) Compartment Identifier of database
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param connectionCredentialDetails User credential details to connect to the database. This is supplied via the External Database Service.
         * 
         * @return builder
         * 
         */
        public Builder connectionCredentialDetails(@Nullable Output<DatabaseInsightConnectionCredentialDetailsArgs> connectionCredentialDetails) {
            $.connectionCredentialDetails = connectionCredentialDetails;
            return this;
        }

        /**
         * @param connectionCredentialDetails User credential details to connect to the database. This is supplied via the External Database Service.
         * 
         * @return builder
         * 
         */
        public Builder connectionCredentialDetails(DatabaseInsightConnectionCredentialDetailsArgs connectionCredentialDetails) {
            return connectionCredentialDetails(Output.of(connectionCredentialDetails));
        }

        /**
         * @param connectionDetails Connection details to connect to the database. HostName, protocol, and port should be specified.
         * 
         * @return builder
         * 
         */
        public Builder connectionDetails(@Nullable Output<DatabaseInsightConnectionDetailsArgs> connectionDetails) {
            $.connectionDetails = connectionDetails;
            return this;
        }

        /**
         * @param connectionDetails Connection details to connect to the database. HostName, protocol, and port should be specified.
         * 
         * @return builder
         * 
         */
        public Builder connectionDetails(DatabaseInsightConnectionDetailsArgs connectionDetails) {
            return connectionDetails(Output.of(connectionDetails));
        }

        /**
         * @param credentialDetails User credential details to connect to the database. This is supplied via the External Database Service.
         * 
         * @return builder
         * 
         */
        public Builder credentialDetails(@Nullable Output<DatabaseInsightCredentialDetailsArgs> credentialDetails) {
            $.credentialDetails = credentialDetails;
            return this;
        }

        /**
         * @param credentialDetails User credential details to connect to the database. This is supplied via the External Database Service.
         * 
         * @return builder
         * 
         */
        public Builder credentialDetails(DatabaseInsightCredentialDetailsArgs credentialDetails) {
            return credentialDetails(Output.of(credentialDetails));
        }

        /**
         * @param databaseConnectionStatusDetails A message describing the status of the database connection of this resource. For example, it can be used to provide actionable information about the permission and content validity of the database connection.
         * 
         * @return builder
         * 
         */
        public Builder databaseConnectionStatusDetails(@Nullable Output<String> databaseConnectionStatusDetails) {
            $.databaseConnectionStatusDetails = databaseConnectionStatusDetails;
            return this;
        }

        /**
         * @param databaseConnectionStatusDetails A message describing the status of the database connection of this resource. For example, it can be used to provide actionable information about the permission and content validity of the database connection.
         * 
         * @return builder
         * 
         */
        public Builder databaseConnectionStatusDetails(String databaseConnectionStatusDetails) {
            return databaseConnectionStatusDetails(Output.of(databaseConnectionStatusDetails));
        }

        /**
         * @param databaseDisplayName Display name of database
         * 
         * @return builder
         * 
         */
        public Builder databaseDisplayName(@Nullable Output<String> databaseDisplayName) {
            $.databaseDisplayName = databaseDisplayName;
            return this;
        }

        /**
         * @param databaseDisplayName Display name of database
         * 
         * @return builder
         * 
         */
        public Builder databaseDisplayName(String databaseDisplayName) {
            return databaseDisplayName(Output.of(databaseDisplayName));
        }

        /**
         * @param databaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(@Nullable Output<String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param databaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        /**
         * @param databaseName Name of database
         * 
         * @return builder
         * 
         */
        public Builder databaseName(@Nullable Output<String> databaseName) {
            $.databaseName = databaseName;
            return this;
        }

        /**
         * @param databaseName Name of database
         * 
         * @return builder
         * 
         */
        public Builder databaseName(String databaseName) {
            return databaseName(Output.of(databaseName));
        }

        /**
         * @param databaseResourceType Oracle Cloud Infrastructure database resource type
         * 
         * @return builder
         * 
         */
        public Builder databaseResourceType(@Nullable Output<String> databaseResourceType) {
            $.databaseResourceType = databaseResourceType;
            return this;
        }

        /**
         * @param databaseResourceType Oracle Cloud Infrastructure database resource type
         * 
         * @return builder
         * 
         */
        public Builder databaseResourceType(String databaseResourceType) {
            return databaseResourceType(Output.of(databaseResourceType));
        }

        /**
         * @param databaseType Operations Insights internal representation of the database type.
         * 
         * @return builder
         * 
         */
        public Builder databaseType(@Nullable Output<String> databaseType) {
            $.databaseType = databaseType;
            return this;
        }

        /**
         * @param databaseType Operations Insights internal representation of the database type.
         * 
         * @return builder
         * 
         */
        public Builder databaseType(String databaseType) {
            return databaseType(Output.of(databaseType));
        }

        /**
         * @param databaseVersion The version of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseVersion(@Nullable Output<String> databaseVersion) {
            $.databaseVersion = databaseVersion;
            return this;
        }

        /**
         * @param databaseVersion The version of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseVersion(String databaseVersion) {
            return databaseVersion(Output.of(databaseVersion));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param deploymentType Database Deployment Type
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(@Nullable Output<String> deploymentType) {
            $.deploymentType = deploymentType;
            return this;
        }

        /**
         * @param deploymentType Database Deployment Type
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(String deploymentType) {
            return deploymentType(Output.of(deploymentType));
        }

        /**
         * @param enterpriseManagerBridgeId OPSI Enterprise Manager Bridge OCID
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerBridgeId(@Nullable Output<String> enterpriseManagerBridgeId) {
            $.enterpriseManagerBridgeId = enterpriseManagerBridgeId;
            return this;
        }

        /**
         * @param enterpriseManagerBridgeId OPSI Enterprise Manager Bridge OCID
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerBridgeId(String enterpriseManagerBridgeId) {
            return enterpriseManagerBridgeId(Output.of(enterpriseManagerBridgeId));
        }

        /**
         * @param enterpriseManagerEntityDisplayName Enterprise Manager Entity Display Name
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerEntityDisplayName(@Nullable Output<String> enterpriseManagerEntityDisplayName) {
            $.enterpriseManagerEntityDisplayName = enterpriseManagerEntityDisplayName;
            return this;
        }

        /**
         * @param enterpriseManagerEntityDisplayName Enterprise Manager Entity Display Name
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerEntityDisplayName(String enterpriseManagerEntityDisplayName) {
            return enterpriseManagerEntityDisplayName(Output.of(enterpriseManagerEntityDisplayName));
        }

        /**
         * @param enterpriseManagerEntityIdentifier Enterprise Manager Entity Unique Identifier
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerEntityIdentifier(@Nullable Output<String> enterpriseManagerEntityIdentifier) {
            $.enterpriseManagerEntityIdentifier = enterpriseManagerEntityIdentifier;
            return this;
        }

        /**
         * @param enterpriseManagerEntityIdentifier Enterprise Manager Entity Unique Identifier
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerEntityIdentifier(String enterpriseManagerEntityIdentifier) {
            return enterpriseManagerEntityIdentifier(Output.of(enterpriseManagerEntityIdentifier));
        }

        /**
         * @param enterpriseManagerEntityName Enterprise Manager Entity Name
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerEntityName(@Nullable Output<String> enterpriseManagerEntityName) {
            $.enterpriseManagerEntityName = enterpriseManagerEntityName;
            return this;
        }

        /**
         * @param enterpriseManagerEntityName Enterprise Manager Entity Name
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerEntityName(String enterpriseManagerEntityName) {
            return enterpriseManagerEntityName(Output.of(enterpriseManagerEntityName));
        }

        /**
         * @param enterpriseManagerEntityType Enterprise Manager Entity Type
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerEntityType(@Nullable Output<String> enterpriseManagerEntityType) {
            $.enterpriseManagerEntityType = enterpriseManagerEntityType;
            return this;
        }

        /**
         * @param enterpriseManagerEntityType Enterprise Manager Entity Type
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerEntityType(String enterpriseManagerEntityType) {
            return enterpriseManagerEntityType(Output.of(enterpriseManagerEntityType));
        }

        /**
         * @param enterpriseManagerIdentifier Enterprise Manager Unique Identifier
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerIdentifier(@Nullable Output<String> enterpriseManagerIdentifier) {
            $.enterpriseManagerIdentifier = enterpriseManagerIdentifier;
            return this;
        }

        /**
         * @param enterpriseManagerIdentifier Enterprise Manager Unique Identifier
         * 
         * @return builder
         * 
         */
        public Builder enterpriseManagerIdentifier(String enterpriseManagerIdentifier) {
            return enterpriseManagerIdentifier(Output.of(enterpriseManagerIdentifier));
        }

        /**
         * @param entitySource (Updatable) Source of the database entity.
         * 
         * @return builder
         * 
         */
        public Builder entitySource(@Nullable Output<String> entitySource) {
            $.entitySource = entitySource;
            return this;
        }

        /**
         * @param entitySource (Updatable) Source of the database entity.
         * 
         * @return builder
         * 
         */
        public Builder entitySource(String entitySource) {
            return entitySource(Output.of(entitySource));
        }

        /**
         * @param exadataInsightId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
         * 
         * @return builder
         * 
         */
        public Builder exadataInsightId(@Nullable Output<String> exadataInsightId) {
            $.exadataInsightId = exadataInsightId;
            return this;
        }

        /**
         * @param exadataInsightId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Exadata insight.
         * 
         * @return builder
         * 
         */
        public Builder exadataInsightId(String exadataInsightId) {
            return exadataInsightId(Output.of(exadataInsightId));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param opsiPrivateEndpointId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
         * 
         * @return builder
         * 
         */
        public Builder opsiPrivateEndpointId(@Nullable Output<String> opsiPrivateEndpointId) {
            $.opsiPrivateEndpointId = opsiPrivateEndpointId;
            return this;
        }

        /**
         * @param opsiPrivateEndpointId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the OPSI private endpoint
         * 
         * @return builder
         * 
         */
        public Builder opsiPrivateEndpointId(String opsiPrivateEndpointId) {
            return opsiPrivateEndpointId(Output.of(opsiPrivateEndpointId));
        }

        /**
         * @param processorCount Processor count. This is the OCPU count for Autonomous Database and CPU core count for other database types.
         * 
         * @return builder
         * 
         */
        public Builder processorCount(@Nullable Output<Integer> processorCount) {
            $.processorCount = processorCount;
            return this;
        }

        /**
         * @param processorCount Processor count. This is the OCPU count for Autonomous Database and CPU core count for other database types.
         * 
         * @return builder
         * 
         */
        public Builder processorCount(Integer processorCount) {
            return processorCount(Output.of(processorCount));
        }

        /**
         * @param serviceName Database service name used for connection requests.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(@Nullable Output<String> serviceName) {
            $.serviceName = serviceName;
            return this;
        }

        /**
         * @param serviceName Database service name used for connection requests.
         * 
         * @return builder
         * 
         */
        public Builder serviceName(String serviceName) {
            return serviceName(Output.of(serviceName));
        }

        /**
         * @param state The current state of the database.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the database.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param status (Updatable) Status of the resource. Example: &#34;ENABLED&#34;, &#34;DISABLED&#34;. Resource can be either enabled or disabled by updating the value of status field to either &#34;ENABLED&#34; or &#34;DISABLED&#34;
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) Status of the resource. Example: &#34;ENABLED&#34;, &#34;DISABLED&#34;. Resource can be either enabled or disabled by updating the value of status field to either &#34;ENABLED&#34; or &#34;DISABLED&#34;
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(@Nullable Output<Map<String,Object>> systemTags) {
            $.systemTags = systemTags;
            return this;
        }

        /**
         * @param systemTags System tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder systemTags(Map<String,Object> systemTags) {
            return systemTags(Output.of(systemTags));
        }

        /**
         * @param timeCreated The time the the database insight was first enabled. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the the database insight was first enabled. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeUpdated The time the database insight was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the database insight was updated. An RFC3339 formatted datetime string
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public DatabaseInsightState build() {
            return $;
        }
    }

}
