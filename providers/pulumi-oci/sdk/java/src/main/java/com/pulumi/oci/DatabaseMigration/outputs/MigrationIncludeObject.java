// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseMigration.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MigrationIncludeObject {
    /**
     * @return (Updatable) Name of the object (regular expression is allowed)
     * 
     */
    private final String object;
    /**
     * @return (Updatable) Owner of the object (regular expression is allowed)
     * 
     */
    private final String owner;
    /**
     * @return (Updatable) Migration type.
     * 
     */
    private final @Nullable String type;

    @CustomType.Constructor
    private MigrationIncludeObject(
        @CustomType.Parameter("object") String object,
        @CustomType.Parameter("owner") String owner,
        @CustomType.Parameter("type") @Nullable String type) {
        this.object = object;
        this.owner = owner;
        this.type = type;
    }

    /**
     * @return (Updatable) Name of the object (regular expression is allowed)
     * 
     */
    public String object() {
        return this.object;
    }
    /**
     * @return (Updatable) Owner of the object (regular expression is allowed)
     * 
     */
    public String owner() {
        return this.owner;
    }
    /**
     * @return (Updatable) Migration type.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MigrationIncludeObject defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String object;
        private String owner;
        private @Nullable String type;

        public Builder() {
    	      // Empty
        }

        public Builder(MigrationIncludeObject defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.object = defaults.object;
    	      this.owner = defaults.owner;
    	      this.type = defaults.type;
        }

        public Builder object(String object) {
            this.object = Objects.requireNonNull(object);
            return this;
        }
        public Builder owner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }        public MigrationIncludeObject build() {
            return new MigrationIncludeObject(object, owner, type);
        }
    }
}
