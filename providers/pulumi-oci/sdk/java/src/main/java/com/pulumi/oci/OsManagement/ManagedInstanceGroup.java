// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagement;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.OsManagement.ManagedInstanceGroupArgs;
import com.pulumi.oci.OsManagement.inputs.ManagedInstanceGroupState;
import com.pulumi.oci.OsManagement.outputs.ManagedInstanceGroupManagedInstance;
import com.pulumi.oci.Utilities;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Managed Instance Group resource in Oracle Cloud Infrastructure OS Management service.
 * 
 * Creates a new Managed Instance Group on the management system.
 * This will not contain any managed instances after it is first created,
 * and they must be added later.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * ManagedInstanceGroups can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:OsManagement/managedInstanceGroup:ManagedInstanceGroup test_managed_instance_group &#34;id&#34;
 * ```
 * 
 */
@ResourceType(type="oci:OsManagement/managedInstanceGroup:ManagedInstanceGroup")
public class ManagedInstanceGroup extends com.pulumi.resources.CustomResource {
    /**
     * (Updatable) OCID for the Compartment
     * 
     */
    @Export(name="compartmentId", type=String.class, parameters={})
    private Output<String> compartmentId;

    /**
     * @return (Updatable) OCID for the Compartment
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }
    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="definedTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> definedTags() {
        return this.definedTags;
    }
    /**
     * (Updatable) Information specified by the user about the managed instance group
     * 
     */
    @Export(name="description", type=String.class, parameters={})
    private Output<String> description;

    /**
     * @return (Updatable) Information specified by the user about the managed instance group
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * (Updatable) Managed Instance Group identifier
     * 
     */
    @Export(name="displayName", type=String.class, parameters={})
    private Output<String> displayName;

    /**
     * @return (Updatable) Managed Instance Group identifier
     * 
     */
    public Output<String> displayName() {
        return this.displayName;
    }
    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Export(name="freeformTags", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Output<Map<String,Object>> freeformTags() {
        return this.freeformTags;
    }
    @Export(name="managedInstanceCount", type=Integer.class, parameters={})
    private Output<Integer> managedInstanceCount;

    public Output<Integer> managedInstanceCount() {
        return this.managedInstanceCount;
    }
    /**
     * list of Managed Instances in the group
     * 
     */
    @Export(name="managedInstances", type=List.class, parameters={ManagedInstanceGroupManagedInstance.class})
    private Output<List<ManagedInstanceGroupManagedInstance>> managedInstances;

    /**
     * @return list of Managed Instances in the group
     * 
     */
    public Output<List<ManagedInstanceGroupManagedInstance>> managedInstances() {
        return this.managedInstances;
    }
    /**
     * The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
     * 
     */
    @Export(name="osFamily", type=String.class, parameters={})
    private Output<String> osFamily;

    /**
     * @return The Operating System type of the managed instance(s) on which this scheduled job will operate. If not specified, this defaults to Linux.
     * 
     */
    public Output<String> osFamily() {
        return this.osFamily;
    }
    /**
     * The current state of the Software Source.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current state of the Software Source.
     * 
     */
    public Output<String> state() {
        return this.state;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ManagedInstanceGroup(String name) {
        this(name, ManagedInstanceGroupArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ManagedInstanceGroup(String name, ManagedInstanceGroupArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ManagedInstanceGroup(String name, ManagedInstanceGroupArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:OsManagement/managedInstanceGroup:ManagedInstanceGroup", name, args == null ? ManagedInstanceGroupArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ManagedInstanceGroup(String name, Output<String> id, @Nullable ManagedInstanceGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:OsManagement/managedInstanceGroup:ManagedInstanceGroup", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ManagedInstanceGroup get(String name, Output<String> id, @Nullable ManagedInstanceGroupState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ManagedInstanceGroup(name, id, state, options);
    }
}
