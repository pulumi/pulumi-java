// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Optimizer.inputs.ResourceActionActionArgs;
import java.lang.Double;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceActionState extends com.pulumi.resources.ResourceArgs {

    public static final ResourceActionState Empty = new ResourceActionState();

    /**
     * Details about the recommended action.
     * 
     */
    @Import(name="actions")
    private @Nullable Output<List<ResourceActionActionArgs>> actions;

    /**
     * @return Details about the recommended action.
     * 
     */
    public Optional<Output<List<ResourceActionActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    /**
     * The unique OCID associated with the category.
     * 
     */
    @Import(name="categoryId")
    private @Nullable Output<String> categoryId;

    /**
     * @return The unique OCID associated with the category.
     * 
     */
    public Optional<Output<String>> categoryId() {
        return Optional.ofNullable(this.categoryId);
    }

    /**
     * The OCID of the compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The name associated with the compartment.
     * 
     */
    @Import(name="compartmentName")
    private @Nullable Output<String> compartmentName;

    /**
     * @return The name associated with the compartment.
     * 
     */
    public Optional<Output<String>> compartmentName() {
        return Optional.ofNullable(this.compartmentName);
    }

    /**
     * The estimated cost savings, in dollars, for the resource action.
     * 
     */
    @Import(name="estimatedCostSaving")
    private @Nullable Output<Double> estimatedCostSaving;

    /**
     * @return The estimated cost savings, in dollars, for the resource action.
     * 
     */
    public Optional<Output<Double>> estimatedCostSaving() {
        return Optional.ofNullable(this.estimatedCostSaving);
    }

    /**
     * Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     * 
     */
    @Import(name="extendedMetadata")
    private @Nullable Output<Map<String,Object>> extendedMetadata;

    /**
     * @return Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
     * 
     */
    public Optional<Output<Map<String,Object>>> extendedMetadata() {
        return Optional.ofNullable(this.extendedMetadata);
    }

    /**
     * Custom metadata key/value pairs for the resource action.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<Map<String,Object>> metadata;

    /**
     * @return Custom metadata key/value pairs for the resource action.
     * 
     */
    public Optional<Output<Map<String,Object>>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * The name assigned to the resource.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name assigned to the resource.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The unique OCID associated with the recommendation.
     * 
     */
    @Import(name="recommendationId")
    private @Nullable Output<String> recommendationId;

    /**
     * @return The unique OCID associated with the recommendation.
     * 
     */
    public Optional<Output<String>> recommendationId() {
        return Optional.ofNullable(this.recommendationId);
    }

    /**
     * The unique OCID associated with the resource action.
     * 
     */
    @Import(name="resourceActionId")
    private @Nullable Output<String> resourceActionId;

    /**
     * @return The unique OCID associated with the resource action.
     * 
     */
    public Optional<Output<String>> resourceActionId() {
        return Optional.ofNullable(this.resourceActionId);
    }

    /**
     * The unique OCID associated with the resource.
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return The unique OCID associated with the resource.
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * The kind of resource.
     * 
     */
    @Import(name="resourceType")
    private @Nullable Output<String> resourceType;

    /**
     * @return The kind of resource.
     * 
     */
    public Optional<Output<String>> resourceType() {
        return Optional.ofNullable(this.resourceType);
    }

    /**
     * The resource action&#39;s current state.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The resource action&#39;s current state.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * (Updatable) The status of the resource action.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return (Updatable) The status of the resource action.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The date and time the resource action details were created, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the resource action details were created, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time that the resource action entered its current status. The format is defined by RFC3339.
     * 
     */
    @Import(name="timeStatusBegin")
    private @Nullable Output<String> timeStatusBegin;

    /**
     * @return The date and time that the resource action entered its current status. The format is defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeStatusBegin() {
        return Optional.ofNullable(this.timeStatusBegin);
    }

    /**
     * (Updatable) The date and time the current status will change. The format is defined by RFC3339.
     * 
     */
    @Import(name="timeStatusEnd")
    private @Nullable Output<String> timeStatusEnd;

    /**
     * @return (Updatable) The date and time the current status will change. The format is defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeStatusEnd() {
        return Optional.ofNullable(this.timeStatusEnd);
    }

    /**
     * The date and time the resource action details were last updated, in the format defined by RFC3339.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the resource action details were last updated, in the format defined by RFC3339.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    private ResourceActionState() {}

    private ResourceActionState(ResourceActionState $) {
        this.actions = $.actions;
        this.categoryId = $.categoryId;
        this.compartmentId = $.compartmentId;
        this.compartmentName = $.compartmentName;
        this.estimatedCostSaving = $.estimatedCostSaving;
        this.extendedMetadata = $.extendedMetadata;
        this.metadata = $.metadata;
        this.name = $.name;
        this.recommendationId = $.recommendationId;
        this.resourceActionId = $.resourceActionId;
        this.resourceId = $.resourceId;
        this.resourceType = $.resourceType;
        this.state = $.state;
        this.status = $.status;
        this.timeCreated = $.timeCreated;
        this.timeStatusBegin = $.timeStatusBegin;
        this.timeStatusEnd = $.timeStatusEnd;
        this.timeUpdated = $.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceActionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceActionState $;

        public Builder() {
            $ = new ResourceActionState();
        }

        public Builder(ResourceActionState defaults) {
            $ = new ResourceActionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param actions Details about the recommended action.
         * 
         * @return builder
         * 
         */
        public Builder actions(@Nullable Output<List<ResourceActionActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        /**
         * @param actions Details about the recommended action.
         * 
         * @return builder
         * 
         */
        public Builder actions(List<ResourceActionActionArgs> actions) {
            return actions(Output.of(actions));
        }

        /**
         * @param actions Details about the recommended action.
         * 
         * @return builder
         * 
         */
        public Builder actions(ResourceActionActionArgs... actions) {
            return actions(List.of(actions));
        }

        /**
         * @param categoryId The unique OCID associated with the category.
         * 
         * @return builder
         * 
         */
        public Builder categoryId(@Nullable Output<String> categoryId) {
            $.categoryId = categoryId;
            return this;
        }

        /**
         * @param categoryId The unique OCID associated with the category.
         * 
         * @return builder
         * 
         */
        public Builder categoryId(String categoryId) {
            return categoryId(Output.of(categoryId));
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param compartmentName The name associated with the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentName(@Nullable Output<String> compartmentName) {
            $.compartmentName = compartmentName;
            return this;
        }

        /**
         * @param compartmentName The name associated with the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentName(String compartmentName) {
            return compartmentName(Output.of(compartmentName));
        }

        /**
         * @param estimatedCostSaving The estimated cost savings, in dollars, for the resource action.
         * 
         * @return builder
         * 
         */
        public Builder estimatedCostSaving(@Nullable Output<Double> estimatedCostSaving) {
            $.estimatedCostSaving = estimatedCostSaving;
            return this;
        }

        /**
         * @param estimatedCostSaving The estimated cost savings, in dollars, for the resource action.
         * 
         * @return builder
         * 
         */
        public Builder estimatedCostSaving(Double estimatedCostSaving) {
            return estimatedCostSaving(Output.of(estimatedCostSaving));
        }

        /**
         * @param extendedMetadata Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
         * 
         * @return builder
         * 
         */
        public Builder extendedMetadata(@Nullable Output<Map<String,Object>> extendedMetadata) {
            $.extendedMetadata = extendedMetadata;
            return this;
        }

        /**
         * @param extendedMetadata Additional metadata key/value pairs that you provide. They serve the same purpose and functionality as fields in the `metadata` object.
         * 
         * @return builder
         * 
         */
        public Builder extendedMetadata(Map<String,Object> extendedMetadata) {
            return extendedMetadata(Output.of(extendedMetadata));
        }

        /**
         * @param metadata Custom metadata key/value pairs for the resource action.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<Map<String,Object>> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata Custom metadata key/value pairs for the resource action.
         * 
         * @return builder
         * 
         */
        public Builder metadata(Map<String,Object> metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param name The name assigned to the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name assigned to the resource.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param recommendationId The unique OCID associated with the recommendation.
         * 
         * @return builder
         * 
         */
        public Builder recommendationId(@Nullable Output<String> recommendationId) {
            $.recommendationId = recommendationId;
            return this;
        }

        /**
         * @param recommendationId The unique OCID associated with the recommendation.
         * 
         * @return builder
         * 
         */
        public Builder recommendationId(String recommendationId) {
            return recommendationId(Output.of(recommendationId));
        }

        /**
         * @param resourceActionId The unique OCID associated with the resource action.
         * 
         * @return builder
         * 
         */
        public Builder resourceActionId(@Nullable Output<String> resourceActionId) {
            $.resourceActionId = resourceActionId;
            return this;
        }

        /**
         * @param resourceActionId The unique OCID associated with the resource action.
         * 
         * @return builder
         * 
         */
        public Builder resourceActionId(String resourceActionId) {
            return resourceActionId(Output.of(resourceActionId));
        }

        /**
         * @param resourceId The unique OCID associated with the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The unique OCID associated with the resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param resourceType The kind of resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(@Nullable Output<String> resourceType) {
            $.resourceType = resourceType;
            return this;
        }

        /**
         * @param resourceType The kind of resource.
         * 
         * @return builder
         * 
         */
        public Builder resourceType(String resourceType) {
            return resourceType(Output.of(resourceType));
        }

        /**
         * @param state The resource action&#39;s current state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The resource action&#39;s current state.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param status (Updatable) The status of the resource action.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status (Updatable) The status of the resource action.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param timeCreated The date and time the resource action details were created, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the resource action details were created, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeStatusBegin The date and time that the resource action entered its current status. The format is defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeStatusBegin(@Nullable Output<String> timeStatusBegin) {
            $.timeStatusBegin = timeStatusBegin;
            return this;
        }

        /**
         * @param timeStatusBegin The date and time that the resource action entered its current status. The format is defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeStatusBegin(String timeStatusBegin) {
            return timeStatusBegin(Output.of(timeStatusBegin));
        }

        /**
         * @param timeStatusEnd (Updatable) The date and time the current status will change. The format is defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeStatusEnd(@Nullable Output<String> timeStatusEnd) {
            $.timeStatusEnd = timeStatusEnd;
            return this;
        }

        /**
         * @param timeStatusEnd (Updatable) The date and time the current status will change. The format is defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeStatusEnd(String timeStatusEnd) {
            return timeStatusEnd(Output.of(timeStatusEnd));
        }

        /**
         * @param timeUpdated The date and time the resource action details were last updated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the resource action details were last updated, in the format defined by RFC3339.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        public ResourceActionState build() {
            return $;
        }
    }

}
