// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OspGateway.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.OspGateway.outputs.SubscriptionSubscriptionBillingAddress;
import com.pulumi.oci.OspGateway.outputs.SubscriptionSubscriptionPaymentGateway;
import com.pulumi.oci.OspGateway.outputs.SubscriptionSubscriptionPaymentOption;
import com.pulumi.oci.OspGateway.outputs.SubscriptionSubscriptionTaxInfo;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class SubscriptionSubscription {
    /**
     * @return (Updatable) Bill to customer Account id.
     * 
     */
    private final @Nullable String billToCustAccountId;
    /**
     * @return (Updatable) Billing address details model.
     * 
     */
    private final @Nullable List<SubscriptionSubscriptionBillingAddress> billingAddresses;
    /**
     * @return (Updatable) Currency code
     * 
     */
    private final @Nullable String currencyCode;
    /**
     * @return (Updatable) GSI Subscription external code.
     * 
     */
    private final @Nullable String gsiOrgCode;
    /**
     * @return (Updatable) Subscription id identifier (OCID).
     * 
     */
    private final @Nullable String id;
    /**
     * @return (Updatable) Payment intension.
     * 
     */
    private final @Nullable Boolean isIntentToPay;
    /**
     * @return (Updatable) Language short code (en, de, hu, etc)
     * 
     */
    private final @Nullable String languageCode;
    /**
     * @return (Updatable) GSI organization external identifier.
     * 
     */
    private final @Nullable String organizationId;
    /**
     * @return (Updatable) Payment gateway details.
     * 
     */
    private final @Nullable SubscriptionSubscriptionPaymentGateway paymentGateway;
    /**
     * @return (Updatable) Payment option list of a subscription.
     * 
     */
    private final @Nullable List<SubscriptionSubscriptionPaymentOption> paymentOptions;
    /**
     * @return (Updatable) Subscription plan type.
     * 
     */
    private final @Nullable String planType;
    /**
     * @return (Updatable) Ship to customer account role.
     * 
     */
    private final @Nullable String shipToCustAcctRoleId;
    /**
     * @return (Updatable) Ship to customer account site address id.
     * 
     */
    private final @Nullable String shipToCustAcctSiteId;
    /**
     * @return (Updatable) Subscription plan number.
     * 
     */
    private final String subscriptionPlanNumber;
    /**
     * @return (Updatable) Tax details.
     * 
     */
    private final @Nullable SubscriptionSubscriptionTaxInfo taxInfo;
    /**
     * @return (Updatable) Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
     * 
     */
    private final @Nullable String timePlanUpgrade;
    /**
     * @return (Updatable) Start date of the subscription.
     * 
     */
    private final @Nullable String timeStart;
    /**
     * @return (Updatable) Status of the upgrade.
     * 
     */
    private final @Nullable String upgradeState;
    /**
     * @return (Updatable) This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
     * 
     */
    private final @Nullable String upgradeStateDetails;

    @CustomType.Constructor
    private SubscriptionSubscription(
        @CustomType.Parameter("billToCustAccountId") @Nullable String billToCustAccountId,
        @CustomType.Parameter("billingAddresses") @Nullable List<SubscriptionSubscriptionBillingAddress> billingAddresses,
        @CustomType.Parameter("currencyCode") @Nullable String currencyCode,
        @CustomType.Parameter("gsiOrgCode") @Nullable String gsiOrgCode,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("isIntentToPay") @Nullable Boolean isIntentToPay,
        @CustomType.Parameter("languageCode") @Nullable String languageCode,
        @CustomType.Parameter("organizationId") @Nullable String organizationId,
        @CustomType.Parameter("paymentGateway") @Nullable SubscriptionSubscriptionPaymentGateway paymentGateway,
        @CustomType.Parameter("paymentOptions") @Nullable List<SubscriptionSubscriptionPaymentOption> paymentOptions,
        @CustomType.Parameter("planType") @Nullable String planType,
        @CustomType.Parameter("shipToCustAcctRoleId") @Nullable String shipToCustAcctRoleId,
        @CustomType.Parameter("shipToCustAcctSiteId") @Nullable String shipToCustAcctSiteId,
        @CustomType.Parameter("subscriptionPlanNumber") String subscriptionPlanNumber,
        @CustomType.Parameter("taxInfo") @Nullable SubscriptionSubscriptionTaxInfo taxInfo,
        @CustomType.Parameter("timePlanUpgrade") @Nullable String timePlanUpgrade,
        @CustomType.Parameter("timeStart") @Nullable String timeStart,
        @CustomType.Parameter("upgradeState") @Nullable String upgradeState,
        @CustomType.Parameter("upgradeStateDetails") @Nullable String upgradeStateDetails) {
        this.billToCustAccountId = billToCustAccountId;
        this.billingAddresses = billingAddresses;
        this.currencyCode = currencyCode;
        this.gsiOrgCode = gsiOrgCode;
        this.id = id;
        this.isIntentToPay = isIntentToPay;
        this.languageCode = languageCode;
        this.organizationId = organizationId;
        this.paymentGateway = paymentGateway;
        this.paymentOptions = paymentOptions;
        this.planType = planType;
        this.shipToCustAcctRoleId = shipToCustAcctRoleId;
        this.shipToCustAcctSiteId = shipToCustAcctSiteId;
        this.subscriptionPlanNumber = subscriptionPlanNumber;
        this.taxInfo = taxInfo;
        this.timePlanUpgrade = timePlanUpgrade;
        this.timeStart = timeStart;
        this.upgradeState = upgradeState;
        this.upgradeStateDetails = upgradeStateDetails;
    }

    /**
     * @return (Updatable) Bill to customer Account id.
     * 
     */
    public Optional<String> billToCustAccountId() {
        return Optional.ofNullable(this.billToCustAccountId);
    }
    /**
     * @return (Updatable) Billing address details model.
     * 
     */
    public List<SubscriptionSubscriptionBillingAddress> billingAddresses() {
        return this.billingAddresses == null ? List.of() : this.billingAddresses;
    }
    /**
     * @return (Updatable) Currency code
     * 
     */
    public Optional<String> currencyCode() {
        return Optional.ofNullable(this.currencyCode);
    }
    /**
     * @return (Updatable) GSI Subscription external code.
     * 
     */
    public Optional<String> gsiOrgCode() {
        return Optional.ofNullable(this.gsiOrgCode);
    }
    /**
     * @return (Updatable) Subscription id identifier (OCID).
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return (Updatable) Payment intension.
     * 
     */
    public Optional<Boolean> isIntentToPay() {
        return Optional.ofNullable(this.isIntentToPay);
    }
    /**
     * @return (Updatable) Language short code (en, de, hu, etc)
     * 
     */
    public Optional<String> languageCode() {
        return Optional.ofNullable(this.languageCode);
    }
    /**
     * @return (Updatable) GSI organization external identifier.
     * 
     */
    public Optional<String> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }
    /**
     * @return (Updatable) Payment gateway details.
     * 
     */
    public Optional<SubscriptionSubscriptionPaymentGateway> paymentGateway() {
        return Optional.ofNullable(this.paymentGateway);
    }
    /**
     * @return (Updatable) Payment option list of a subscription.
     * 
     */
    public List<SubscriptionSubscriptionPaymentOption> paymentOptions() {
        return this.paymentOptions == null ? List.of() : this.paymentOptions;
    }
    /**
     * @return (Updatable) Subscription plan type.
     * 
     */
    public Optional<String> planType() {
        return Optional.ofNullable(this.planType);
    }
    /**
     * @return (Updatable) Ship to customer account role.
     * 
     */
    public Optional<String> shipToCustAcctRoleId() {
        return Optional.ofNullable(this.shipToCustAcctRoleId);
    }
    /**
     * @return (Updatable) Ship to customer account site address id.
     * 
     */
    public Optional<String> shipToCustAcctSiteId() {
        return Optional.ofNullable(this.shipToCustAcctSiteId);
    }
    /**
     * @return (Updatable) Subscription plan number.
     * 
     */
    public String subscriptionPlanNumber() {
        return this.subscriptionPlanNumber;
    }
    /**
     * @return (Updatable) Tax details.
     * 
     */
    public Optional<SubscriptionSubscriptionTaxInfo> taxInfo() {
        return Optional.ofNullable(this.taxInfo);
    }
    /**
     * @return (Updatable) Date of upgrade/conversion when planType changed from FREE_TIER to PAYG
     * 
     */
    public Optional<String> timePlanUpgrade() {
        return Optional.ofNullable(this.timePlanUpgrade);
    }
    /**
     * @return (Updatable) Start date of the subscription.
     * 
     */
    public Optional<String> timeStart() {
        return Optional.ofNullable(this.timeStart);
    }
    /**
     * @return (Updatable) Status of the upgrade.
     * 
     */
    public Optional<String> upgradeState() {
        return Optional.ofNullable(this.upgradeState);
    }
    /**
     * @return (Updatable) This field is used to describe the Upgrade State in case of error (E.g. Upgrade failure caused by interfacing Tax details- TaxError)
     * 
     */
    public Optional<String> upgradeStateDetails() {
        return Optional.ofNullable(this.upgradeStateDetails);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SubscriptionSubscription defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String billToCustAccountId;
        private @Nullable List<SubscriptionSubscriptionBillingAddress> billingAddresses;
        private @Nullable String currencyCode;
        private @Nullable String gsiOrgCode;
        private @Nullable String id;
        private @Nullable Boolean isIntentToPay;
        private @Nullable String languageCode;
        private @Nullable String organizationId;
        private @Nullable SubscriptionSubscriptionPaymentGateway paymentGateway;
        private @Nullable List<SubscriptionSubscriptionPaymentOption> paymentOptions;
        private @Nullable String planType;
        private @Nullable String shipToCustAcctRoleId;
        private @Nullable String shipToCustAcctSiteId;
        private String subscriptionPlanNumber;
        private @Nullable SubscriptionSubscriptionTaxInfo taxInfo;
        private @Nullable String timePlanUpgrade;
        private @Nullable String timeStart;
        private @Nullable String upgradeState;
        private @Nullable String upgradeStateDetails;

        public Builder() {
    	      // Empty
        }

        public Builder(SubscriptionSubscription defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billToCustAccountId = defaults.billToCustAccountId;
    	      this.billingAddresses = defaults.billingAddresses;
    	      this.currencyCode = defaults.currencyCode;
    	      this.gsiOrgCode = defaults.gsiOrgCode;
    	      this.id = defaults.id;
    	      this.isIntentToPay = defaults.isIntentToPay;
    	      this.languageCode = defaults.languageCode;
    	      this.organizationId = defaults.organizationId;
    	      this.paymentGateway = defaults.paymentGateway;
    	      this.paymentOptions = defaults.paymentOptions;
    	      this.planType = defaults.planType;
    	      this.shipToCustAcctRoleId = defaults.shipToCustAcctRoleId;
    	      this.shipToCustAcctSiteId = defaults.shipToCustAcctSiteId;
    	      this.subscriptionPlanNumber = defaults.subscriptionPlanNumber;
    	      this.taxInfo = defaults.taxInfo;
    	      this.timePlanUpgrade = defaults.timePlanUpgrade;
    	      this.timeStart = defaults.timeStart;
    	      this.upgradeState = defaults.upgradeState;
    	      this.upgradeStateDetails = defaults.upgradeStateDetails;
        }

        public Builder billToCustAccountId(@Nullable String billToCustAccountId) {
            this.billToCustAccountId = billToCustAccountId;
            return this;
        }
        public Builder billingAddresses(@Nullable List<SubscriptionSubscriptionBillingAddress> billingAddresses) {
            this.billingAddresses = billingAddresses;
            return this;
        }
        public Builder billingAddresses(SubscriptionSubscriptionBillingAddress... billingAddresses) {
            return billingAddresses(List.of(billingAddresses));
        }
        public Builder currencyCode(@Nullable String currencyCode) {
            this.currencyCode = currencyCode;
            return this;
        }
        public Builder gsiOrgCode(@Nullable String gsiOrgCode) {
            this.gsiOrgCode = gsiOrgCode;
            return this;
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder isIntentToPay(@Nullable Boolean isIntentToPay) {
            this.isIntentToPay = isIntentToPay;
            return this;
        }
        public Builder languageCode(@Nullable String languageCode) {
            this.languageCode = languageCode;
            return this;
        }
        public Builder organizationId(@Nullable String organizationId) {
            this.organizationId = organizationId;
            return this;
        }
        public Builder paymentGateway(@Nullable SubscriptionSubscriptionPaymentGateway paymentGateway) {
            this.paymentGateway = paymentGateway;
            return this;
        }
        public Builder paymentOptions(@Nullable List<SubscriptionSubscriptionPaymentOption> paymentOptions) {
            this.paymentOptions = paymentOptions;
            return this;
        }
        public Builder paymentOptions(SubscriptionSubscriptionPaymentOption... paymentOptions) {
            return paymentOptions(List.of(paymentOptions));
        }
        public Builder planType(@Nullable String planType) {
            this.planType = planType;
            return this;
        }
        public Builder shipToCustAcctRoleId(@Nullable String shipToCustAcctRoleId) {
            this.shipToCustAcctRoleId = shipToCustAcctRoleId;
            return this;
        }
        public Builder shipToCustAcctSiteId(@Nullable String shipToCustAcctSiteId) {
            this.shipToCustAcctSiteId = shipToCustAcctSiteId;
            return this;
        }
        public Builder subscriptionPlanNumber(String subscriptionPlanNumber) {
            this.subscriptionPlanNumber = Objects.requireNonNull(subscriptionPlanNumber);
            return this;
        }
        public Builder taxInfo(@Nullable SubscriptionSubscriptionTaxInfo taxInfo) {
            this.taxInfo = taxInfo;
            return this;
        }
        public Builder timePlanUpgrade(@Nullable String timePlanUpgrade) {
            this.timePlanUpgrade = timePlanUpgrade;
            return this;
        }
        public Builder timeStart(@Nullable String timeStart) {
            this.timeStart = timeStart;
            return this;
        }
        public Builder upgradeState(@Nullable String upgradeState) {
            this.upgradeState = upgradeState;
            return this;
        }
        public Builder upgradeStateDetails(@Nullable String upgradeStateDetails) {
            this.upgradeStateDetails = upgradeStateDetails;
            return this;
        }        public SubscriptionSubscription build() {
            return new SubscriptionSubscription(billToCustAccountId, billingAddresses, currencyCode, gsiOrgCode, id, isIntentToPay, languageCode, organizationId, paymentGateway, paymentOptions, planType, shipToCustAcctRoleId, shipToCustAcctSiteId, subscriptionPlanNumber, taxInfo, timePlanUpgrade, timeStart, upgradeState, upgradeStateDetails);
        }
    }
}
