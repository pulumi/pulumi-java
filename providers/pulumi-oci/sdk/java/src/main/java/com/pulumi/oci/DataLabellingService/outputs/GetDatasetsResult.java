// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataLabellingService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataLabellingService.outputs.GetDatasetsDatasetCollection;
import com.pulumi.oci.DataLabellingService.outputs.GetDatasetsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDatasetsResult {
    /**
     * @return The annotation format name required for labeling records.
     * 
     */
    private final @Nullable String annotationFormat;
    /**
     * @return The OCID of the compartment of the resource.
     * 
     */
    private final String compartmentId;
    /**
     * @return The list of dataset_collection.
     * 
     */
    private final List<GetDatasetsDatasetCollection> datasetCollections;
    /**
     * @return A user-friendly display name for the resource.
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetDatasetsFilter> filters;
    /**
     * @return The OCID of the Dataset.
     * 
     */
    private final @Nullable String id;
    /**
     * @return The state of a dataset. CREATING - The dataset is being created.  It will transition to ACTIVE when it is ready for labeling. ACTIVE   - The dataset is ready for labeling. UPDATING - The dataset is being updated.  It and its related resources may be unavailable for other updates until it returns to ACTIVE. NEEDS_ATTENTION - A dataset updation operation has failed due to validation or other errors and needs attention. DELETING - The dataset and its related resources are being deleted. DELETED  - The dataset has been deleted and is no longer available. FAILED   - The dataset has failed due to validation or other errors.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private GetDatasetsResult(
        @CustomType.Parameter("annotationFormat") @Nullable String annotationFormat,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("datasetCollections") List<GetDatasetsDatasetCollection> datasetCollections,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetDatasetsFilter> filters,
        @CustomType.Parameter("id") @Nullable String id,
        @CustomType.Parameter("state") @Nullable String state) {
        this.annotationFormat = annotationFormat;
        this.compartmentId = compartmentId;
        this.datasetCollections = datasetCollections;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.state = state;
    }

    /**
     * @return The annotation format name required for labeling records.
     * 
     */
    public Optional<String> annotationFormat() {
        return Optional.ofNullable(this.annotationFormat);
    }
    /**
     * @return The OCID of the compartment of the resource.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The list of dataset_collection.
     * 
     */
    public List<GetDatasetsDatasetCollection> datasetCollections() {
        return this.datasetCollections;
    }
    /**
     * @return A user-friendly display name for the resource.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetDatasetsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The OCID of the Dataset.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return The state of a dataset. CREATING - The dataset is being created.  It will transition to ACTIVE when it is ready for labeling. ACTIVE   - The dataset is ready for labeling. UPDATING - The dataset is being updated.  It and its related resources may be unavailable for other updates until it returns to ACTIVE. NEEDS_ATTENTION - A dataset updation operation has failed due to validation or other errors and needs attention. DELETING - The dataset and its related resources are being deleted. DELETED  - The dataset has been deleted and is no longer available. FAILED   - The dataset has failed due to validation or other errors.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatasetsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String annotationFormat;
        private String compartmentId;
        private List<GetDatasetsDatasetCollection> datasetCollections;
        private @Nullable String displayName;
        private @Nullable List<GetDatasetsFilter> filters;
        private @Nullable String id;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDatasetsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.annotationFormat = defaults.annotationFormat;
    	      this.compartmentId = defaults.compartmentId;
    	      this.datasetCollections = defaults.datasetCollections;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
        }

        public Builder annotationFormat(@Nullable String annotationFormat) {
            this.annotationFormat = annotationFormat;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder datasetCollections(List<GetDatasetsDatasetCollection> datasetCollections) {
            this.datasetCollections = Objects.requireNonNull(datasetCollections);
            return this;
        }
        public Builder datasetCollections(GetDatasetsDatasetCollection... datasetCollections) {
            return datasetCollections(List.of(datasetCollections));
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetDatasetsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetDatasetsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public GetDatasetsResult build() {
            return new GetDatasetsResult(annotationFormat, compartmentId, datasetCollections, displayName, filters, id, state);
        }
    }
}
