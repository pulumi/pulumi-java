// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DatabaseManagement.inputs.GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs Empty = new GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs();

    /**
     * The optional greater than or equal to filter on the execution ID related to a specific SQL Tuning Advisor task.
     * 
     */
    @Import(name="beginExecId")
    private @Nullable String beginExecId;

    /**
     * @return The optional greater than or equal to filter on the execution ID related to a specific SQL Tuning Advisor task.
     * 
     */
    public Optional<String> beginExecId() {
        return Optional.ofNullable(this.beginExecId);
    }

    /**
     * The optional less than or equal to query parameter to filter on the execution ID related to a specific SQL Tuning Advisor task.
     * 
     */
    @Import(name="endExecId")
    private @Nullable String endExecId;

    /**
     * @return The optional less than or equal to query parameter to filter on the execution ID related to a specific SQL Tuning Advisor task.
     * 
     */
    public Optional<String> endExecId() {
        return Optional.ofNullable(this.endExecId);
    }

    @Import(name="filters")
    private @Nullable List<GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter> filters;

    public Optional<List<GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The filter used to display specific findings in the report.
     * 
     */
    @Import(name="findingFilter")
    private @Nullable String findingFilter;

    /**
     * @return The filter used to display specific findings in the report.
     * 
     */
    public Optional<String> findingFilter() {
        return Optional.ofNullable(this.findingFilter);
    }

    /**
     * The hash value of the index table name.
     * 
     */
    @Import(name="indexHashFilter")
    private @Nullable String indexHashFilter;

    /**
     * @return The hash value of the index table name.
     * 
     */
    public Optional<String> indexHashFilter() {
        return Optional.ofNullable(this.indexHashFilter);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    @Import(name="managedDatabaseId", required=true)
    private String managedDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
     * 
     */
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }

    /**
     * The search period during which the API will search for begin and end exec id, if not supplied. Unused if beginExecId and endExecId optional query params are both supplied.
     * 
     */
    @Import(name="searchPeriod")
    private @Nullable String searchPeriod;

    /**
     * @return The search period during which the API will search for begin and end exec id, if not supplied. Unused if beginExecId and endExecId optional query params are both supplied.
     * 
     */
    public Optional<String> searchPeriod() {
        return Optional.ofNullable(this.searchPeriod);
    }

    /**
     * The SQL tuning task identifier. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="sqlTuningAdvisorTaskId", required=true)
    private String sqlTuningAdvisorTaskId;

    /**
     * @return The SQL tuning task identifier. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public String sqlTuningAdvisorTaskId() {
        return this.sqlTuningAdvisorTaskId;
    }

    /**
     * The hash value of the object for the statistic finding search.
     * 
     */
    @Import(name="statsHashFilter")
    private @Nullable String statsHashFilter;

    /**
     * @return The hash value of the object for the statistic finding search.
     * 
     */
    public Optional<String> statsHashFilter() {
        return Optional.ofNullable(this.statsHashFilter);
    }

    private GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs() {}

    private GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs(GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs $) {
        this.beginExecId = $.beginExecId;
        this.endExecId = $.endExecId;
        this.filters = $.filters;
        this.findingFilter = $.findingFilter;
        this.indexHashFilter = $.indexHashFilter;
        this.managedDatabaseId = $.managedDatabaseId;
        this.searchPeriod = $.searchPeriod;
        this.sqlTuningAdvisorTaskId = $.sqlTuningAdvisorTaskId;
        this.statsHashFilter = $.statsHashFilter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs $;

        public Builder() {
            $ = new GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs();
        }

        public Builder(GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs defaults) {
            $ = new GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param beginExecId The optional greater than or equal to filter on the execution ID related to a specific SQL Tuning Advisor task.
         * 
         * @return builder
         * 
         */
        public Builder beginExecId(@Nullable String beginExecId) {
            $.beginExecId = beginExecId;
            return this;
        }

        /**
         * @param endExecId The optional less than or equal to query parameter to filter on the execution ID related to a specific SQL Tuning Advisor task.
         * 
         * @return builder
         * 
         */
        public Builder endExecId(@Nullable String endExecId) {
            $.endExecId = endExecId;
            return this;
        }

        public Builder filters(@Nullable List<GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetManagedDatabaseSqlTuningAdvisorTasksFindingsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param findingFilter The filter used to display specific findings in the report.
         * 
         * @return builder
         * 
         */
        public Builder findingFilter(@Nullable String findingFilter) {
            $.findingFilter = findingFilter;
            return this;
        }

        /**
         * @param indexHashFilter The hash value of the index table name.
         * 
         * @return builder
         * 
         */
        public Builder indexHashFilter(@Nullable String indexHashFilter) {
            $.indexHashFilter = indexHashFilter;
            return this;
        }

        /**
         * @param managedDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Managed Database.
         * 
         * @return builder
         * 
         */
        public Builder managedDatabaseId(String managedDatabaseId) {
            $.managedDatabaseId = managedDatabaseId;
            return this;
        }

        /**
         * @param searchPeriod The search period during which the API will search for begin and end exec id, if not supplied. Unused if beginExecId and endExecId optional query params are both supplied.
         * 
         * @return builder
         * 
         */
        public Builder searchPeriod(@Nullable String searchPeriod) {
            $.searchPeriod = searchPeriod;
            return this;
        }

        /**
         * @param sqlTuningAdvisorTaskId The SQL tuning task identifier. This is not the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder sqlTuningAdvisorTaskId(String sqlTuningAdvisorTaskId) {
            $.sqlTuningAdvisorTaskId = sqlTuningAdvisorTaskId;
            return this;
        }

        /**
         * @param statsHashFilter The hash value of the object for the statistic finding search.
         * 
         * @return builder
         * 
         */
        public Builder statsHashFilter(@Nullable String statsHashFilter) {
            $.statsHashFilter = statsHashFilter;
            return this;
        }

        public GetManagedDatabaseSqlTuningAdvisorTasksFindingsPlainArgs build() {
            $.managedDatabaseId = Objects.requireNonNull($.managedDatabaseId, "expected parameter 'managedDatabaseId' to be non-null");
            $.sqlTuningAdvisorTaskId = Objects.requireNonNull($.sqlTuningAdvisorTaskId, "expected parameter 'sqlTuningAdvisorTaskId' to be non-null");
            return $;
        }
    }

}
