// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PublicationSupportContactArgs extends com.pulumi.resources.ResourceArgs {

    public static final PublicationSupportContactArgs Empty = new PublicationSupportContactArgs();

    /**
     * (Updatable) The email of the contact.
     * 
     */
    @Import(name="email")
    private @Nullable Output<String> email;

    /**
     * @return (Updatable) The email of the contact.
     * 
     */
    public Optional<Output<String>> email() {
        return Optional.ofNullable(this.email);
    }

    /**
     * (Updatable) The name of the contact.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Updatable) The name of the contact.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Updatable) The phone number of the contact.
     * 
     */
    @Import(name="phone")
    private @Nullable Output<String> phone;

    /**
     * @return (Updatable) The phone number of the contact.
     * 
     */
    public Optional<Output<String>> phone() {
        return Optional.ofNullable(this.phone);
    }

    /**
     * (Updatable) The email subject line to use when contacting support.
     * 
     */
    @Import(name="subject")
    private @Nullable Output<String> subject;

    /**
     * @return (Updatable) The email subject line to use when contacting support.
     * 
     */
    public Optional<Output<String>> subject() {
        return Optional.ofNullable(this.subject);
    }

    private PublicationSupportContactArgs() {}

    private PublicationSupportContactArgs(PublicationSupportContactArgs $) {
        this.email = $.email;
        this.name = $.name;
        this.phone = $.phone;
        this.subject = $.subject;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PublicationSupportContactArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PublicationSupportContactArgs $;

        public Builder() {
            $ = new PublicationSupportContactArgs();
        }

        public Builder(PublicationSupportContactArgs defaults) {
            $ = new PublicationSupportContactArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param email (Updatable) The email of the contact.
         * 
         * @return builder
         * 
         */
        public Builder email(@Nullable Output<String> email) {
            $.email = email;
            return this;
        }

        /**
         * @param email (Updatable) The email of the contact.
         * 
         * @return builder
         * 
         */
        public Builder email(String email) {
            return email(Output.of(email));
        }

        /**
         * @param name (Updatable) The name of the contact.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Updatable) The name of the contact.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param phone (Updatable) The phone number of the contact.
         * 
         * @return builder
         * 
         */
        public Builder phone(@Nullable Output<String> phone) {
            $.phone = phone;
            return this;
        }

        /**
         * @param phone (Updatable) The phone number of the contact.
         * 
         * @return builder
         * 
         */
        public Builder phone(String phone) {
            return phone(Output.of(phone));
        }

        /**
         * @param subject (Updatable) The email subject line to use when contacting support.
         * 
         * @return builder
         * 
         */
        public Builder subject(@Nullable Output<String> subject) {
            $.subject = subject;
            return this;
        }

        /**
         * @param subject (Updatable) The email subject line to use when contacting support.
         * 
         * @return builder
         * 
         */
        public Builder subject(String subject) {
            return subject(Output.of(subject));
        }

        public PublicationSupportContactArgs build() {
            return $;
        }
    }

}
