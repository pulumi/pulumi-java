// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningAdvisorTasksFilter;
import com.pulumi.oci.DatabaseManagement.outputs.GetManagedDatabaseSqlTuningAdvisorTasksSqlTuningAdvisorTaskCollection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedDatabaseSqlTuningAdvisorTasksResult {
    private final @Nullable List<GetManagedDatabaseSqlTuningAdvisorTasksFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String managedDatabaseId;
    /**
     * @return The name of the SQL Tuning Advisor task.
     * 
     */
    private final @Nullable String name;
    /**
     * @return The list of sql_tuning_advisor_task_collection.
     * 
     */
    private final List<GetManagedDatabaseSqlTuningAdvisorTasksSqlTuningAdvisorTaskCollection> sqlTuningAdvisorTaskCollections;
    private final @Nullable String status;
    private final @Nullable String timeGreaterThanOrEqualTo;
    private final @Nullable String timeLessThanOrEqualTo;

    @CustomType.Constructor
    private GetManagedDatabaseSqlTuningAdvisorTasksResult(
        @CustomType.Parameter("filters") @Nullable List<GetManagedDatabaseSqlTuningAdvisorTasksFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("managedDatabaseId") String managedDatabaseId,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("sqlTuningAdvisorTaskCollections") List<GetManagedDatabaseSqlTuningAdvisorTasksSqlTuningAdvisorTaskCollection> sqlTuningAdvisorTaskCollections,
        @CustomType.Parameter("status") @Nullable String status,
        @CustomType.Parameter("timeGreaterThanOrEqualTo") @Nullable String timeGreaterThanOrEqualTo,
        @CustomType.Parameter("timeLessThanOrEqualTo") @Nullable String timeLessThanOrEqualTo) {
        this.filters = filters;
        this.id = id;
        this.managedDatabaseId = managedDatabaseId;
        this.name = name;
        this.sqlTuningAdvisorTaskCollections = sqlTuningAdvisorTaskCollections;
        this.status = status;
        this.timeGreaterThanOrEqualTo = timeGreaterThanOrEqualTo;
        this.timeLessThanOrEqualTo = timeLessThanOrEqualTo;
    }

    public List<GetManagedDatabaseSqlTuningAdvisorTasksFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String managedDatabaseId() {
        return this.managedDatabaseId;
    }
    /**
     * @return The name of the SQL Tuning Advisor task.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return The list of sql_tuning_advisor_task_collection.
     * 
     */
    public List<GetManagedDatabaseSqlTuningAdvisorTasksSqlTuningAdvisorTaskCollection> sqlTuningAdvisorTaskCollections() {
        return this.sqlTuningAdvisorTaskCollections;
    }
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    public Optional<String> timeGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeGreaterThanOrEqualTo);
    }
    public Optional<String> timeLessThanOrEqualTo() {
        return Optional.ofNullable(this.timeLessThanOrEqualTo);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedDatabaseSqlTuningAdvisorTasksResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<GetManagedDatabaseSqlTuningAdvisorTasksFilter> filters;
        private String id;
        private String managedDatabaseId;
        private @Nullable String name;
        private List<GetManagedDatabaseSqlTuningAdvisorTasksSqlTuningAdvisorTaskCollection> sqlTuningAdvisorTaskCollections;
        private @Nullable String status;
        private @Nullable String timeGreaterThanOrEqualTo;
        private @Nullable String timeLessThanOrEqualTo;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedDatabaseSqlTuningAdvisorTasksResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.managedDatabaseId = defaults.managedDatabaseId;
    	      this.name = defaults.name;
    	      this.sqlTuningAdvisorTaskCollections = defaults.sqlTuningAdvisorTaskCollections;
    	      this.status = defaults.status;
    	      this.timeGreaterThanOrEqualTo = defaults.timeGreaterThanOrEqualTo;
    	      this.timeLessThanOrEqualTo = defaults.timeLessThanOrEqualTo;
        }

        public Builder filters(@Nullable List<GetManagedDatabaseSqlTuningAdvisorTasksFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetManagedDatabaseSqlTuningAdvisorTasksFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder managedDatabaseId(String managedDatabaseId) {
            this.managedDatabaseId = Objects.requireNonNull(managedDatabaseId);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder sqlTuningAdvisorTaskCollections(List<GetManagedDatabaseSqlTuningAdvisorTasksSqlTuningAdvisorTaskCollection> sqlTuningAdvisorTaskCollections) {
            this.sqlTuningAdvisorTaskCollections = Objects.requireNonNull(sqlTuningAdvisorTaskCollections);
            return this;
        }
        public Builder sqlTuningAdvisorTaskCollections(GetManagedDatabaseSqlTuningAdvisorTasksSqlTuningAdvisorTaskCollection... sqlTuningAdvisorTaskCollections) {
            return sqlTuningAdvisorTaskCollections(List.of(sqlTuningAdvisorTaskCollections));
        }
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        public Builder timeGreaterThanOrEqualTo(@Nullable String timeGreaterThanOrEqualTo) {
            this.timeGreaterThanOrEqualTo = timeGreaterThanOrEqualTo;
            return this;
        }
        public Builder timeLessThanOrEqualTo(@Nullable String timeLessThanOrEqualTo) {
            this.timeLessThanOrEqualTo = timeLessThanOrEqualTo;
            return this;
        }        public GetManagedDatabaseSqlTuningAdvisorTasksResult build() {
            return new GetManagedDatabaseSqlTuningAdvisorTasksResult(filters, id, managedDatabaseId, name, sqlTuningAdvisorTaskCollections, status, timeGreaterThanOrEqualTo, timeLessThanOrEqualTo);
        }
    }
}
