// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Blockchain.outputs.GetBlockchainPlatformComponentDetail;
import com.pulumi.oci.Blockchain.outputs.GetBlockchainPlatformHostOcpuUtilizationInfo;
import com.pulumi.oci.Blockchain.outputs.GetBlockchainPlatformReplica;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBlockchainPlatformResult {
    private final String blockchainPlatformId;
    private final String caCertArchiveText;
    /**
     * @return Compartment Identifier
     * 
     */
    private final String compartmentId;
    /**
     * @return Blockchain Platform component details.
     * 
     */
    private final List<GetBlockchainPlatformComponentDetail> componentDetails;
    /**
     * @return Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
     * 
     */
    private final String computeShape;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Platform Instance Description
     * 
     */
    private final String description;
    /**
     * @return Platform Instance Display name, can be renamed
     * 
     */
    private final String displayName;
    private final String federatedUserId;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return List of OcpuUtilization for all hosts
     * 
     */
    private final List<GetBlockchainPlatformHostOcpuUtilizationInfo> hostOcpuUtilizationInfos;
    /**
     * @return unique identifier that is immutable on creation
     * 
     */
    private final String id;
    private final String idcsAccessToken;
    /**
     * @return Bring your own license
     * 
     */
    private final Boolean isByol;
    /**
     * @return True for multi-AD blockchain plaforms, false for single-AD
     * 
     */
    private final Boolean isMultiAd;
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     * 
     */
    private final String loadBalancerShape;
    /**
     * @return Role of platform - FOUNDER or PARTICIPANT
     * 
     */
    private final String platformRole;
    /**
     * @return Type of Platform shape - DEFAULT or CUSTOM
     * 
     */
    private final String platformShapeType;
    /**
     * @return Platform Version
     * 
     */
    private final String platformVersion;
    /**
     * @return Number of replicas of service components like Rest Proxy, CA and Console
     * 
     */
    private final List<GetBlockchainPlatformReplica> replicas;
    /**
     * @return Service endpoint URL, valid post-provisioning
     * 
     */
    private final String serviceEndpoint;
    /**
     * @return The version of the Platform Instance.
     * 
     */
    private final String serviceVersion;
    /**
     * @return The current state of the Platform Instance.
     * 
     */
    private final String state;
    /**
     * @return Storage size in TBs
     * 
     */
    private final Double storageSizeInTbs;
    /**
     * @return Storage used in TBs
     * 
     */
    private final Double storageUsedInTbs;
    /**
     * @return The time the the Platform Instance was created. An RFC3339 formatted datetime string
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the Platform Instance was updated. An RFC3339 formatted datetime string
     * 
     */
    private final String timeUpdated;
    /**
     * @return Number of total OCPUs allocated to the platform cluster
     * 
     */
    private final Integer totalOcpuCapacity;

    @CustomType.Constructor
    private GetBlockchainPlatformResult(
        @CustomType.Parameter("blockchainPlatformId") String blockchainPlatformId,
        @CustomType.Parameter("caCertArchiveText") String caCertArchiveText,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("componentDetails") List<GetBlockchainPlatformComponentDetail> componentDetails,
        @CustomType.Parameter("computeShape") String computeShape,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("federatedUserId") String federatedUserId,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("hostOcpuUtilizationInfos") List<GetBlockchainPlatformHostOcpuUtilizationInfo> hostOcpuUtilizationInfos,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("idcsAccessToken") String idcsAccessToken,
        @CustomType.Parameter("isByol") Boolean isByol,
        @CustomType.Parameter("isMultiAd") Boolean isMultiAd,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("loadBalancerShape") String loadBalancerShape,
        @CustomType.Parameter("platformRole") String platformRole,
        @CustomType.Parameter("platformShapeType") String platformShapeType,
        @CustomType.Parameter("platformVersion") String platformVersion,
        @CustomType.Parameter("replicas") List<GetBlockchainPlatformReplica> replicas,
        @CustomType.Parameter("serviceEndpoint") String serviceEndpoint,
        @CustomType.Parameter("serviceVersion") String serviceVersion,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("storageSizeInTbs") Double storageSizeInTbs,
        @CustomType.Parameter("storageUsedInTbs") Double storageUsedInTbs,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated,
        @CustomType.Parameter("totalOcpuCapacity") Integer totalOcpuCapacity) {
        this.blockchainPlatformId = blockchainPlatformId;
        this.caCertArchiveText = caCertArchiveText;
        this.compartmentId = compartmentId;
        this.componentDetails = componentDetails;
        this.computeShape = computeShape;
        this.definedTags = definedTags;
        this.description = description;
        this.displayName = displayName;
        this.federatedUserId = federatedUserId;
        this.freeformTags = freeformTags;
        this.hostOcpuUtilizationInfos = hostOcpuUtilizationInfos;
        this.id = id;
        this.idcsAccessToken = idcsAccessToken;
        this.isByol = isByol;
        this.isMultiAd = isMultiAd;
        this.lifecycleDetails = lifecycleDetails;
        this.loadBalancerShape = loadBalancerShape;
        this.platformRole = platformRole;
        this.platformShapeType = platformShapeType;
        this.platformVersion = platformVersion;
        this.replicas = replicas;
        this.serviceEndpoint = serviceEndpoint;
        this.serviceVersion = serviceVersion;
        this.state = state;
        this.storageSizeInTbs = storageSizeInTbs;
        this.storageUsedInTbs = storageUsedInTbs;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
        this.totalOcpuCapacity = totalOcpuCapacity;
    }

    public String blockchainPlatformId() {
        return this.blockchainPlatformId;
    }
    public String caCertArchiveText() {
        return this.caCertArchiveText;
    }
    /**
     * @return Compartment Identifier
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Blockchain Platform component details.
     * 
     */
    public List<GetBlockchainPlatformComponentDetail> componentDetails() {
        return this.componentDetails;
    }
    /**
     * @return Compute shape - STANDARD or ENTERPRISE_SMALL or ENTERPRISE_MEDIUM or ENTERPRISE_LARGE or ENTERPRISE_EXTRA_LARGE or ENTERPRISE_CUSTOM
     * 
     */
    public String computeShape() {
        return this.computeShape;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Platform Instance Description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Platform Instance Display name, can be renamed
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    public String federatedUserId() {
        return this.federatedUserId;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only. Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return List of OcpuUtilization for all hosts
     * 
     */
    public List<GetBlockchainPlatformHostOcpuUtilizationInfo> hostOcpuUtilizationInfos() {
        return this.hostOcpuUtilizationInfos;
    }
    /**
     * @return unique identifier that is immutable on creation
     * 
     */
    public String id() {
        return this.id;
    }
    public String idcsAccessToken() {
        return this.idcsAccessToken;
    }
    /**
     * @return Bring your own license
     * 
     */
    public Boolean isByol() {
        return this.isByol;
    }
    /**
     * @return True for multi-AD blockchain plaforms, false for single-AD
     * 
     */
    public Boolean isMultiAd() {
        return this.isMultiAd;
    }
    /**
     * @return An message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Type of Load Balancer shape - LB_100_MBPS or LB_400_MBPS. Default is LB_100_MBPS.
     * 
     */
    public String loadBalancerShape() {
        return this.loadBalancerShape;
    }
    /**
     * @return Role of platform - FOUNDER or PARTICIPANT
     * 
     */
    public String platformRole() {
        return this.platformRole;
    }
    /**
     * @return Type of Platform shape - DEFAULT or CUSTOM
     * 
     */
    public String platformShapeType() {
        return this.platformShapeType;
    }
    /**
     * @return Platform Version
     * 
     */
    public String platformVersion() {
        return this.platformVersion;
    }
    /**
     * @return Number of replicas of service components like Rest Proxy, CA and Console
     * 
     */
    public List<GetBlockchainPlatformReplica> replicas() {
        return this.replicas;
    }
    /**
     * @return Service endpoint URL, valid post-provisioning
     * 
     */
    public String serviceEndpoint() {
        return this.serviceEndpoint;
    }
    /**
     * @return The version of the Platform Instance.
     * 
     */
    public String serviceVersion() {
        return this.serviceVersion;
    }
    /**
     * @return The current state of the Platform Instance.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Storage size in TBs
     * 
     */
    public Double storageSizeInTbs() {
        return this.storageSizeInTbs;
    }
    /**
     * @return Storage used in TBs
     * 
     */
    public Double storageUsedInTbs() {
        return this.storageUsedInTbs;
    }
    /**
     * @return The time the the Platform Instance was created. An RFC3339 formatted datetime string
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the Platform Instance was updated. An RFC3339 formatted datetime string
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }
    /**
     * @return Number of total OCPUs allocated to the platform cluster
     * 
     */
    public Integer totalOcpuCapacity() {
        return this.totalOcpuCapacity;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBlockchainPlatformResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String blockchainPlatformId;
        private String caCertArchiveText;
        private String compartmentId;
        private List<GetBlockchainPlatformComponentDetail> componentDetails;
        private String computeShape;
        private Map<String,Object> definedTags;
        private String description;
        private String displayName;
        private String federatedUserId;
        private Map<String,Object> freeformTags;
        private List<GetBlockchainPlatformHostOcpuUtilizationInfo> hostOcpuUtilizationInfos;
        private String id;
        private String idcsAccessToken;
        private Boolean isByol;
        private Boolean isMultiAd;
        private String lifecycleDetails;
        private String loadBalancerShape;
        private String platformRole;
        private String platformShapeType;
        private String platformVersion;
        private List<GetBlockchainPlatformReplica> replicas;
        private String serviceEndpoint;
        private String serviceVersion;
        private String state;
        private Double storageSizeInTbs;
        private Double storageUsedInTbs;
        private String timeCreated;
        private String timeUpdated;
        private Integer totalOcpuCapacity;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBlockchainPlatformResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockchainPlatformId = defaults.blockchainPlatformId;
    	      this.caCertArchiveText = defaults.caCertArchiveText;
    	      this.compartmentId = defaults.compartmentId;
    	      this.componentDetails = defaults.componentDetails;
    	      this.computeShape = defaults.computeShape;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.federatedUserId = defaults.federatedUserId;
    	      this.freeformTags = defaults.freeformTags;
    	      this.hostOcpuUtilizationInfos = defaults.hostOcpuUtilizationInfos;
    	      this.id = defaults.id;
    	      this.idcsAccessToken = defaults.idcsAccessToken;
    	      this.isByol = defaults.isByol;
    	      this.isMultiAd = defaults.isMultiAd;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.loadBalancerShape = defaults.loadBalancerShape;
    	      this.platformRole = defaults.platformRole;
    	      this.platformShapeType = defaults.platformShapeType;
    	      this.platformVersion = defaults.platformVersion;
    	      this.replicas = defaults.replicas;
    	      this.serviceEndpoint = defaults.serviceEndpoint;
    	      this.serviceVersion = defaults.serviceVersion;
    	      this.state = defaults.state;
    	      this.storageSizeInTbs = defaults.storageSizeInTbs;
    	      this.storageUsedInTbs = defaults.storageUsedInTbs;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
    	      this.totalOcpuCapacity = defaults.totalOcpuCapacity;
        }

        public Builder blockchainPlatformId(String blockchainPlatformId) {
            this.blockchainPlatformId = Objects.requireNonNull(blockchainPlatformId);
            return this;
        }
        public Builder caCertArchiveText(String caCertArchiveText) {
            this.caCertArchiveText = Objects.requireNonNull(caCertArchiveText);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder componentDetails(List<GetBlockchainPlatformComponentDetail> componentDetails) {
            this.componentDetails = Objects.requireNonNull(componentDetails);
            return this;
        }
        public Builder componentDetails(GetBlockchainPlatformComponentDetail... componentDetails) {
            return componentDetails(List.of(componentDetails));
        }
        public Builder computeShape(String computeShape) {
            this.computeShape = Objects.requireNonNull(computeShape);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder federatedUserId(String federatedUserId) {
            this.federatedUserId = Objects.requireNonNull(federatedUserId);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder hostOcpuUtilizationInfos(List<GetBlockchainPlatformHostOcpuUtilizationInfo> hostOcpuUtilizationInfos) {
            this.hostOcpuUtilizationInfos = Objects.requireNonNull(hostOcpuUtilizationInfos);
            return this;
        }
        public Builder hostOcpuUtilizationInfos(GetBlockchainPlatformHostOcpuUtilizationInfo... hostOcpuUtilizationInfos) {
            return hostOcpuUtilizationInfos(List.of(hostOcpuUtilizationInfos));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder idcsAccessToken(String idcsAccessToken) {
            this.idcsAccessToken = Objects.requireNonNull(idcsAccessToken);
            return this;
        }
        public Builder isByol(Boolean isByol) {
            this.isByol = Objects.requireNonNull(isByol);
            return this;
        }
        public Builder isMultiAd(Boolean isMultiAd) {
            this.isMultiAd = Objects.requireNonNull(isMultiAd);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder loadBalancerShape(String loadBalancerShape) {
            this.loadBalancerShape = Objects.requireNonNull(loadBalancerShape);
            return this;
        }
        public Builder platformRole(String platformRole) {
            this.platformRole = Objects.requireNonNull(platformRole);
            return this;
        }
        public Builder platformShapeType(String platformShapeType) {
            this.platformShapeType = Objects.requireNonNull(platformShapeType);
            return this;
        }
        public Builder platformVersion(String platformVersion) {
            this.platformVersion = Objects.requireNonNull(platformVersion);
            return this;
        }
        public Builder replicas(List<GetBlockchainPlatformReplica> replicas) {
            this.replicas = Objects.requireNonNull(replicas);
            return this;
        }
        public Builder replicas(GetBlockchainPlatformReplica... replicas) {
            return replicas(List.of(replicas));
        }
        public Builder serviceEndpoint(String serviceEndpoint) {
            this.serviceEndpoint = Objects.requireNonNull(serviceEndpoint);
            return this;
        }
        public Builder serviceVersion(String serviceVersion) {
            this.serviceVersion = Objects.requireNonNull(serviceVersion);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder storageSizeInTbs(Double storageSizeInTbs) {
            this.storageSizeInTbs = Objects.requireNonNull(storageSizeInTbs);
            return this;
        }
        public Builder storageUsedInTbs(Double storageUsedInTbs) {
            this.storageUsedInTbs = Objects.requireNonNull(storageUsedInTbs);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }
        public Builder totalOcpuCapacity(Integer totalOcpuCapacity) {
            this.totalOcpuCapacity = Objects.requireNonNull(totalOcpuCapacity);
            return this;
        }        public GetBlockchainPlatformResult build() {
            return new GetBlockchainPlatformResult(blockchainPlatformId, caCertArchiveText, compartmentId, componentDetails, computeShape, definedTags, description, displayName, federatedUserId, freeformTags, hostOcpuUtilizationInfos, id, idcsAccessToken, isByol, isMultiAd, lifecycleDetails, loadBalancerShape, platformRole, platformShapeType, platformVersion, replicas, serviceEndpoint, serviceVersion, state, storageSizeInTbs, storageUsedInTbs, timeCreated, timeUpdated, totalOcpuCapacity);
        }
    }
}
