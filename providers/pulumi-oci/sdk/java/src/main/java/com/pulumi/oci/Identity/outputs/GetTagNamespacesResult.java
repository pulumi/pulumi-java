// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Identity.outputs.GetTagNamespacesFilter;
import com.pulumi.oci.Identity.outputs.GetTagNamespacesTagNamespace;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetTagNamespacesResult {
    /**
     * @return The OCID of the compartment that contains the tag namespace.
     * 
     */
    private final String compartmentId;
    private final @Nullable List<GetTagNamespacesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable Boolean includeSubcompartments;
    /**
     * @return The tagnamespace&#39;s current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
     * 
     */
    private final @Nullable String state;
    /**
     * @return The list of tag_namespaces.
     * 
     */
    private final List<GetTagNamespacesTagNamespace> tagNamespaces;

    @CustomType.Constructor
    private GetTagNamespacesResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetTagNamespacesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("includeSubcompartments") @Nullable Boolean includeSubcompartments,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("tagNamespaces") List<GetTagNamespacesTagNamespace> tagNamespaces) {
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.includeSubcompartments = includeSubcompartments;
        this.state = state;
        this.tagNamespaces = tagNamespaces;
    }

    /**
     * @return The OCID of the compartment that contains the tag namespace.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetTagNamespacesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> includeSubcompartments() {
        return Optional.ofNullable(this.includeSubcompartments);
    }
    /**
     * @return The tagnamespace&#39;s current state. After creating a tagnamespace, make sure its `lifecycleState` is ACTIVE before using it. After retiring a tagnamespace, make sure its `lifecycleState` is INACTIVE before using it.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The list of tag_namespaces.
     * 
     */
    public List<GetTagNamespacesTagNamespace> tagNamespaces() {
        return this.tagNamespaces;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetTagNamespacesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetTagNamespacesFilter> filters;
        private String id;
        private @Nullable Boolean includeSubcompartments;
        private @Nullable String state;
        private List<GetTagNamespacesTagNamespace> tagNamespaces;

        public Builder() {
    	      // Empty
        }

        public Builder(GetTagNamespacesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.includeSubcompartments = defaults.includeSubcompartments;
    	      this.state = defaults.state;
    	      this.tagNamespaces = defaults.tagNamespaces;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetTagNamespacesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetTagNamespacesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder includeSubcompartments(@Nullable Boolean includeSubcompartments) {
            this.includeSubcompartments = includeSubcompartments;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder tagNamespaces(List<GetTagNamespacesTagNamespace> tagNamespaces) {
            this.tagNamespaces = Objects.requireNonNull(tagNamespaces);
            return this;
        }
        public Builder tagNamespaces(GetTagNamespacesTagNamespace... tagNamespaces) {
            return tagNamespaces(List.of(tagNamespaces));
        }        public GetTagNamespacesResult build() {
            return new GetTagNamespacesResult(compartmentId, filters, id, includeSubcompartments, state, tagNamespaces);
        }
    }
}
