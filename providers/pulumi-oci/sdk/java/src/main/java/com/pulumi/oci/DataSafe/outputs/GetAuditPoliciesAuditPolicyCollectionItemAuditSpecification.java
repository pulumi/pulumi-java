// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification {
    /**
     * @return The category to which the audit policy belongs.
     * 
     */
    private final String auditPolicyCategory;
    /**
     * @return Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
     * 
     */
    private final String auditPolicyName;
    /**
     * @return Indicates the names of corresponding database policy ( or policies) in the target database.
     * 
     */
    private final List<String> databasePolicyNames;
    /**
     * @return Indicates whether the policy has been enabled, disabled or partially enabled in the target database. The status is PARTIALLY_ENABLED if any of the constituent database audit policies is not enabled.
     * 
     */
    private final String enableStatus;
    /**
     * @return Indicates on whom the audit policy is enabled.
     * 
     */
    private final String enabledEntities;
    /**
     * @return Indicates whether the policy is already created on the target database.
     * 
     */
    private final Boolean isCreated;
    /**
     * @return Indicates whether the policy by default is enabled for all users with no flexibility to alter the enablement conditions.
     * 
     */
    private final Boolean isEnabledForAllUsers;
    /**
     * @return Indicates whether the audit policy is one of the seeded policies provided by Oracle Data Safe.
     * 
     */
    private final Boolean isSeededInDataSafe;
    /**
     * @return Indicates whether the audit policy is one of the predefined policies provided by Oracle Database.
     * 
     */
    private final Boolean isSeededInTarget;
    /**
     * @return Indicates whether the audit policy is available for provisioning/ de-provisioning from Oracle Data Safe, or is only available for displaying the current provisioning status from the target.
     * 
     */
    private final Boolean isViewOnly;
    /**
     * @return Provides information about the policy that has been only partially enabled.
     * 
     */
    private final String partiallyEnabledMsg;

    @CustomType.Constructor
    private GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification(
        @CustomType.Parameter("auditPolicyCategory") String auditPolicyCategory,
        @CustomType.Parameter("auditPolicyName") String auditPolicyName,
        @CustomType.Parameter("databasePolicyNames") List<String> databasePolicyNames,
        @CustomType.Parameter("enableStatus") String enableStatus,
        @CustomType.Parameter("enabledEntities") String enabledEntities,
        @CustomType.Parameter("isCreated") Boolean isCreated,
        @CustomType.Parameter("isEnabledForAllUsers") Boolean isEnabledForAllUsers,
        @CustomType.Parameter("isSeededInDataSafe") Boolean isSeededInDataSafe,
        @CustomType.Parameter("isSeededInTarget") Boolean isSeededInTarget,
        @CustomType.Parameter("isViewOnly") Boolean isViewOnly,
        @CustomType.Parameter("partiallyEnabledMsg") String partiallyEnabledMsg) {
        this.auditPolicyCategory = auditPolicyCategory;
        this.auditPolicyName = auditPolicyName;
        this.databasePolicyNames = databasePolicyNames;
        this.enableStatus = enableStatus;
        this.enabledEntities = enabledEntities;
        this.isCreated = isCreated;
        this.isEnabledForAllUsers = isEnabledForAllUsers;
        this.isSeededInDataSafe = isSeededInDataSafe;
        this.isSeededInTarget = isSeededInTarget;
        this.isViewOnly = isViewOnly;
        this.partiallyEnabledMsg = partiallyEnabledMsg;
    }

    /**
     * @return The category to which the audit policy belongs.
     * 
     */
    public String auditPolicyCategory() {
        return this.auditPolicyCategory;
    }
    /**
     * @return Indicates the audit policy name. Refer to the [documentation](https://docs.oracle.com/en/cloud/paas/data-safe/udscs/audit-policies.html#GUID-361A9A9A-7C21-4F5A-8945-9B3A0C472827) for seeded audit policy names. For custom policies, refer to the user-defined policy name created in the target database.
     * 
     */
    public String auditPolicyName() {
        return this.auditPolicyName;
    }
    /**
     * @return Indicates the names of corresponding database policy ( or policies) in the target database.
     * 
     */
    public List<String> databasePolicyNames() {
        return this.databasePolicyNames;
    }
    /**
     * @return Indicates whether the policy has been enabled, disabled or partially enabled in the target database. The status is PARTIALLY_ENABLED if any of the constituent database audit policies is not enabled.
     * 
     */
    public String enableStatus() {
        return this.enableStatus;
    }
    /**
     * @return Indicates on whom the audit policy is enabled.
     * 
     */
    public String enabledEntities() {
        return this.enabledEntities;
    }
    /**
     * @return Indicates whether the policy is already created on the target database.
     * 
     */
    public Boolean isCreated() {
        return this.isCreated;
    }
    /**
     * @return Indicates whether the policy by default is enabled for all users with no flexibility to alter the enablement conditions.
     * 
     */
    public Boolean isEnabledForAllUsers() {
        return this.isEnabledForAllUsers;
    }
    /**
     * @return Indicates whether the audit policy is one of the seeded policies provided by Oracle Data Safe.
     * 
     */
    public Boolean isSeededInDataSafe() {
        return this.isSeededInDataSafe;
    }
    /**
     * @return Indicates whether the audit policy is one of the predefined policies provided by Oracle Database.
     * 
     */
    public Boolean isSeededInTarget() {
        return this.isSeededInTarget;
    }
    /**
     * @return Indicates whether the audit policy is available for provisioning/ de-provisioning from Oracle Data Safe, or is only available for displaying the current provisioning status from the target.
     * 
     */
    public Boolean isViewOnly() {
        return this.isViewOnly;
    }
    /**
     * @return Provides information about the policy that has been only partially enabled.
     * 
     */
    public String partiallyEnabledMsg() {
        return this.partiallyEnabledMsg;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String auditPolicyCategory;
        private String auditPolicyName;
        private List<String> databasePolicyNames;
        private String enableStatus;
        private String enabledEntities;
        private Boolean isCreated;
        private Boolean isEnabledForAllUsers;
        private Boolean isSeededInDataSafe;
        private Boolean isSeededInTarget;
        private Boolean isViewOnly;
        private String partiallyEnabledMsg;

        public Builder() {
    	      // Empty
        }

        public Builder(GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditPolicyCategory = defaults.auditPolicyCategory;
    	      this.auditPolicyName = defaults.auditPolicyName;
    	      this.databasePolicyNames = defaults.databasePolicyNames;
    	      this.enableStatus = defaults.enableStatus;
    	      this.enabledEntities = defaults.enabledEntities;
    	      this.isCreated = defaults.isCreated;
    	      this.isEnabledForAllUsers = defaults.isEnabledForAllUsers;
    	      this.isSeededInDataSafe = defaults.isSeededInDataSafe;
    	      this.isSeededInTarget = defaults.isSeededInTarget;
    	      this.isViewOnly = defaults.isViewOnly;
    	      this.partiallyEnabledMsg = defaults.partiallyEnabledMsg;
        }

        public Builder auditPolicyCategory(String auditPolicyCategory) {
            this.auditPolicyCategory = Objects.requireNonNull(auditPolicyCategory);
            return this;
        }
        public Builder auditPolicyName(String auditPolicyName) {
            this.auditPolicyName = Objects.requireNonNull(auditPolicyName);
            return this;
        }
        public Builder databasePolicyNames(List<String> databasePolicyNames) {
            this.databasePolicyNames = Objects.requireNonNull(databasePolicyNames);
            return this;
        }
        public Builder databasePolicyNames(String... databasePolicyNames) {
            return databasePolicyNames(List.of(databasePolicyNames));
        }
        public Builder enableStatus(String enableStatus) {
            this.enableStatus = Objects.requireNonNull(enableStatus);
            return this;
        }
        public Builder enabledEntities(String enabledEntities) {
            this.enabledEntities = Objects.requireNonNull(enabledEntities);
            return this;
        }
        public Builder isCreated(Boolean isCreated) {
            this.isCreated = Objects.requireNonNull(isCreated);
            return this;
        }
        public Builder isEnabledForAllUsers(Boolean isEnabledForAllUsers) {
            this.isEnabledForAllUsers = Objects.requireNonNull(isEnabledForAllUsers);
            return this;
        }
        public Builder isSeededInDataSafe(Boolean isSeededInDataSafe) {
            this.isSeededInDataSafe = Objects.requireNonNull(isSeededInDataSafe);
            return this;
        }
        public Builder isSeededInTarget(Boolean isSeededInTarget) {
            this.isSeededInTarget = Objects.requireNonNull(isSeededInTarget);
            return this;
        }
        public Builder isViewOnly(Boolean isViewOnly) {
            this.isViewOnly = Objects.requireNonNull(isViewOnly);
            return this;
        }
        public Builder partiallyEnabledMsg(String partiallyEnabledMsg) {
            this.partiallyEnabledMsg = Objects.requireNonNull(partiallyEnabledMsg);
            return this;
        }        public GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification build() {
            return new GetAuditPoliciesAuditPolicyCollectionItemAuditSpecification(auditPolicyCategory, auditPolicyName, databasePolicyNames, enableStatus, enabledEntities, isCreated, isEnabledForAllUsers, isSeededInDataSafe, isSeededInTarget, isViewOnly, partiallyEnabledMsg);
        }
    }
}
