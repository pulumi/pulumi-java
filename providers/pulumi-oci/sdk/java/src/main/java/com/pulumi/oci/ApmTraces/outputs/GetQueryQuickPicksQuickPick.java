// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmTraces.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetQueryQuickPicksQuickPick {
    /**
     * @return Quick Pick name for the query.
     * 
     */
    private final String quickPickName;
    /**
     * @return Query for the Quick Pick.
     * 
     */
    private final String quickPickQuery;

    @CustomType.Constructor
    private GetQueryQuickPicksQuickPick(
        @CustomType.Parameter("quickPickName") String quickPickName,
        @CustomType.Parameter("quickPickQuery") String quickPickQuery) {
        this.quickPickName = quickPickName;
        this.quickPickQuery = quickPickQuery;
    }

    /**
     * @return Quick Pick name for the query.
     * 
     */
    public String quickPickName() {
        return this.quickPickName;
    }
    /**
     * @return Query for the Quick Pick.
     * 
     */
    public String quickPickQuery() {
        return this.quickPickQuery;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueryQuickPicksQuickPick defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String quickPickName;
        private String quickPickQuery;

        public Builder() {
    	      // Empty
        }

        public Builder(GetQueryQuickPicksQuickPick defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.quickPickName = defaults.quickPickName;
    	      this.quickPickQuery = defaults.quickPickQuery;
        }

        public Builder quickPickName(String quickPickName) {
            this.quickPickName = Objects.requireNonNull(quickPickName);
            return this;
        }
        public Builder quickPickQuery(String quickPickQuery) {
            this.quickPickQuery = Objects.requireNonNull(quickPickQuery);
            return this;
        }        public GetQueryQuickPicksQuickPick build() {
            return new GetQueryQuickPicksQuickPick(quickPickName, quickPickQuery);
        }
    }
}
