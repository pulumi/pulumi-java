// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DhcpOptionsOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final DhcpOptionsOptionArgs Empty = new DhcpOptionsOptionArgs();

    /**
     * (Updatable) If you set `serverType` to `CustomDnsServer`, specify the IP address of at least one DNS server of your choice (three maximum).
     * 
     */
    @Import(name="customDnsServers")
    private @Nullable Output<List<String>> customDnsServers;

    /**
     * @return (Updatable) If you set `serverType` to `CustomDnsServer`, specify the IP address of at least one DNS server of your choice (three maximum).
     * 
     */
    public Optional<Output<List<String>>> customDnsServers() {
        return Optional.ofNullable(this.customDnsServers);
    }

    /**
     * (Updatable) A single search domain name according to [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123). During a DNS query, the OS will append this search domain name to the value being queried.
     * 
     */
    @Import(name="searchDomainNames")
    private @Nullable Output<List<String>> searchDomainNames;

    /**
     * @return (Updatable) A single search domain name according to [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123). During a DNS query, the OS will append this search domain name to the value being queried.
     * 
     */
    public Optional<Output<List<String>>> searchDomainNames() {
        return Optional.ofNullable(this.searchDomainNames);
    }

    /**
     * (Updatable)
     * * **VcnLocal:** Reserved for future use.
     * * **VcnLocalPlusInternet:** Also referred to as &#34;Internet and VCN Resolver&#34;. Instances can resolve internet hostnames (no internet gateway is required), and can resolve hostnames of instances in the VCN. This is the default value in the default set of DHCP options in the VCN. For the Internet and VCN Resolver to work across the VCN, there must also be a DNS label set for the VCN, a DNS label set for each subnet, and a hostname for each instance. The Internet and VCN Resolver also enables reverse DNS lookup, which lets you determine the hostname corresponding to the private IP address. For more information, see [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/dns.htm).
     * * **CustomDnsServer:** Instances use a DNS server of your choice (three maximum).
     * 
     */
    @Import(name="serverType")
    private @Nullable Output<String> serverType;

    /**
     * @return (Updatable)
     * * **VcnLocal:** Reserved for future use.
     * * **VcnLocalPlusInternet:** Also referred to as &#34;Internet and VCN Resolver&#34;. Instances can resolve internet hostnames (no internet gateway is required), and can resolve hostnames of instances in the VCN. This is the default value in the default set of DHCP options in the VCN. For the Internet and VCN Resolver to work across the VCN, there must also be a DNS label set for the VCN, a DNS label set for each subnet, and a hostname for each instance. The Internet and VCN Resolver also enables reverse DNS lookup, which lets you determine the hostname corresponding to the private IP address. For more information, see [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/dns.htm).
     * * **CustomDnsServer:** Instances use a DNS server of your choice (three maximum).
     * 
     */
    public Optional<Output<String>> serverType() {
        return Optional.ofNullable(this.serverType);
    }

    /**
     * (Updatable) The specific DHCP option. Either `DomainNameServer` (for [DhcpDnsOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpDnsOption/)) or `SearchDomain` (for [DhcpSearchDomainOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpSearchDomainOption/)).
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Updatable) The specific DHCP option. Either `DomainNameServer` (for [DhcpDnsOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpDnsOption/)) or `SearchDomain` (for [DhcpSearchDomainOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpSearchDomainOption/)).
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private DhcpOptionsOptionArgs() {}

    private DhcpOptionsOptionArgs(DhcpOptionsOptionArgs $) {
        this.customDnsServers = $.customDnsServers;
        this.searchDomainNames = $.searchDomainNames;
        this.serverType = $.serverType;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DhcpOptionsOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DhcpOptionsOptionArgs $;

        public Builder() {
            $ = new DhcpOptionsOptionArgs();
        }

        public Builder(DhcpOptionsOptionArgs defaults) {
            $ = new DhcpOptionsOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customDnsServers (Updatable) If you set `serverType` to `CustomDnsServer`, specify the IP address of at least one DNS server of your choice (three maximum).
         * 
         * @return builder
         * 
         */
        public Builder customDnsServers(@Nullable Output<List<String>> customDnsServers) {
            $.customDnsServers = customDnsServers;
            return this;
        }

        /**
         * @param customDnsServers (Updatable) If you set `serverType` to `CustomDnsServer`, specify the IP address of at least one DNS server of your choice (three maximum).
         * 
         * @return builder
         * 
         */
        public Builder customDnsServers(List<String> customDnsServers) {
            return customDnsServers(Output.of(customDnsServers));
        }

        /**
         * @param customDnsServers (Updatable) If you set `serverType` to `CustomDnsServer`, specify the IP address of at least one DNS server of your choice (three maximum).
         * 
         * @return builder
         * 
         */
        public Builder customDnsServers(String... customDnsServers) {
            return customDnsServers(List.of(customDnsServers));
        }

        /**
         * @param searchDomainNames (Updatable) A single search domain name according to [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123). During a DNS query, the OS will append this search domain name to the value being queried.
         * 
         * @return builder
         * 
         */
        public Builder searchDomainNames(@Nullable Output<List<String>> searchDomainNames) {
            $.searchDomainNames = searchDomainNames;
            return this;
        }

        /**
         * @param searchDomainNames (Updatable) A single search domain name according to [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123). During a DNS query, the OS will append this search domain name to the value being queried.
         * 
         * @return builder
         * 
         */
        public Builder searchDomainNames(List<String> searchDomainNames) {
            return searchDomainNames(Output.of(searchDomainNames));
        }

        /**
         * @param searchDomainNames (Updatable) A single search domain name according to [RFC 952](https://tools.ietf.org/html/rfc952) and [RFC 1123](https://tools.ietf.org/html/rfc1123). During a DNS query, the OS will append this search domain name to the value being queried.
         * 
         * @return builder
         * 
         */
        public Builder searchDomainNames(String... searchDomainNames) {
            return searchDomainNames(List.of(searchDomainNames));
        }

        /**
         * @param serverType (Updatable)
         * * **VcnLocal:** Reserved for future use.
         * * **VcnLocalPlusInternet:** Also referred to as &#34;Internet and VCN Resolver&#34;. Instances can resolve internet hostnames (no internet gateway is required), and can resolve hostnames of instances in the VCN. This is the default value in the default set of DHCP options in the VCN. For the Internet and VCN Resolver to work across the VCN, there must also be a DNS label set for the VCN, a DNS label set for each subnet, and a hostname for each instance. The Internet and VCN Resolver also enables reverse DNS lookup, which lets you determine the hostname corresponding to the private IP address. For more information, see [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/dns.htm).
         * * **CustomDnsServer:** Instances use a DNS server of your choice (three maximum).
         * 
         * @return builder
         * 
         */
        public Builder serverType(@Nullable Output<String> serverType) {
            $.serverType = serverType;
            return this;
        }

        /**
         * @param serverType (Updatable)
         * * **VcnLocal:** Reserved for future use.
         * * **VcnLocalPlusInternet:** Also referred to as &#34;Internet and VCN Resolver&#34;. Instances can resolve internet hostnames (no internet gateway is required), and can resolve hostnames of instances in the VCN. This is the default value in the default set of DHCP options in the VCN. For the Internet and VCN Resolver to work across the VCN, there must also be a DNS label set for the VCN, a DNS label set for each subnet, and a hostname for each instance. The Internet and VCN Resolver also enables reverse DNS lookup, which lets you determine the hostname corresponding to the private IP address. For more information, see [DNS in Your Virtual Cloud Network](https://docs.cloud.oracle.com/iaas/Content/Network/Concepts/dns.htm).
         * * **CustomDnsServer:** Instances use a DNS server of your choice (three maximum).
         * 
         * @return builder
         * 
         */
        public Builder serverType(String serverType) {
            return serverType(Output.of(serverType));
        }

        /**
         * @param type (Updatable) The specific DHCP option. Either `DomainNameServer` (for [DhcpDnsOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpDnsOption/)) or `SearchDomain` (for [DhcpSearchDomainOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpSearchDomainOption/)).
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Updatable) The specific DHCP option. Either `DomainNameServer` (for [DhcpDnsOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpDnsOption/)) or `SearchDomain` (for [DhcpSearchDomainOption](https://docs.cloud.oracle.com/iaas/api/#/en/iaas/latest/DhcpSearchDomainOption/)).
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DhcpOptionsOptionArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
