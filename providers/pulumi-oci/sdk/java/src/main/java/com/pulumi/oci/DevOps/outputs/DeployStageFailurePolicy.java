// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeployStageFailurePolicy {
    /**
     * @return (Updatable) The threshold count of failed instances in the group, which when reached or exceeded sets the stage as FAILED.
     * 
     */
    private final @Nullable Integer failureCount;
    /**
     * @return (Updatable) The failure percentage threshold, which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
     * 
     */
    private final @Nullable Integer failurePercentage;
    /**
     * @return (Updatable) The type of policy used for rolling out a deployment stage.
     * 
     */
    private final String policyType;

    @CustomType.Constructor
    private DeployStageFailurePolicy(
        @CustomType.Parameter("failureCount") @Nullable Integer failureCount,
        @CustomType.Parameter("failurePercentage") @Nullable Integer failurePercentage,
        @CustomType.Parameter("policyType") String policyType) {
        this.failureCount = failureCount;
        this.failurePercentage = failurePercentage;
        this.policyType = policyType;
    }

    /**
     * @return (Updatable) The threshold count of failed instances in the group, which when reached or exceeded sets the stage as FAILED.
     * 
     */
    public Optional<Integer> failureCount() {
        return Optional.ofNullable(this.failureCount);
    }
    /**
     * @return (Updatable) The failure percentage threshold, which when reached or exceeded sets the stage as FAILED. Percentage is computed as the ceiling value of the number of failed instances over the total count of the instances in the group.
     * 
     */
    public Optional<Integer> failurePercentage() {
        return Optional.ofNullable(this.failurePercentage);
    }
    /**
     * @return (Updatable) The type of policy used for rolling out a deployment stage.
     * 
     */
    public String policyType() {
        return this.policyType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeployStageFailurePolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Integer failureCount;
        private @Nullable Integer failurePercentage;
        private String policyType;

        public Builder() {
    	      // Empty
        }

        public Builder(DeployStageFailurePolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.failureCount = defaults.failureCount;
    	      this.failurePercentage = defaults.failurePercentage;
    	      this.policyType = defaults.policyType;
        }

        public Builder failureCount(@Nullable Integer failureCount) {
            this.failureCount = failureCount;
            return this;
        }
        public Builder failurePercentage(@Nullable Integer failurePercentage) {
            this.failurePercentage = failurePercentage;
            return this;
        }
        public Builder policyType(String policyType) {
            this.policyType = Objects.requireNonNull(policyType);
            return this;
        }        public DeployStageFailurePolicy build() {
            return new DeployStageFailurePolicy(failureCount, failurePercentage, policyType);
        }
    }
}
