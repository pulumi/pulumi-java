// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.LoadBalancer.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BackendSetSslConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final BackendSetSslConfigurationArgs Empty = new BackendSetSslConfigurationArgs();

    /**
     * (Updatable) Ids for Oracle Cloud Infrastructure certificates service certificates. Currently only a single Id may be passed.  Example: `[ocid1.certificate.oc1.us-ashburn-1.amaaaaaaav3bgsaa5o2q7rh5nfmkkukfkogasqhk6af2opufhjlqg7m6jqzq]`
     * 
     */
    @Import(name="certificateIds")
    private @Nullable Output<List<String>> certificateIds;

    /**
     * @return (Updatable) Ids for Oracle Cloud Infrastructure certificates service certificates. Currently only a single Id may be passed.  Example: `[ocid1.certificate.oc1.us-ashburn-1.amaaaaaaav3bgsaa5o2q7rh5nfmkkukfkogasqhk6af2opufhjlqg7m6jqzq]`
     * 
     */
    public Optional<Output<List<String>>> certificateIds() {
        return Optional.ofNullable(this.certificateIds);
    }

    /**
     * (Updatable) A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `example_certificate_bundle`
     * 
     */
    @Import(name="certificateName")
    private @Nullable Output<String> certificateName;

    /**
     * @return (Updatable) A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `example_certificate_bundle`
     * 
     */
    public Optional<Output<String>> certificateName() {
        return Optional.ofNullable(this.certificateName);
    }

    /**
     * (Updatable) The name of the cipher suite to use for HTTPS or SSL connections.
     * 
     */
    @Import(name="cipherSuiteName")
    private @Nullable Output<String> cipherSuiteName;

    /**
     * @return (Updatable) The name of the cipher suite to use for HTTPS or SSL connections.
     * 
     */
    public Optional<Output<String>> cipherSuiteName() {
        return Optional.ofNullable(this.cipherSuiteName);
    }

    /**
     * (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
     * 
     */
    @Import(name="protocols")
    private @Nullable Output<List<String>> protocols;

    /**
     * @return (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
     * 
     */
    public Optional<Output<List<String>>> protocols() {
        return Optional.ofNullable(this.protocols);
    }

    /**
     * (Updatable) When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
     * 
     */
    @Import(name="serverOrderPreference")
    private @Nullable Output<String> serverOrderPreference;

    /**
     * @return (Updatable) When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
     * 
     */
    public Optional<Output<String>> serverOrderPreference() {
        return Optional.ofNullable(this.serverOrderPreference);
    }

    /**
     * (Updatable) Ids for Oracle Cloud Infrastructure certificates service CA or CA bundles for the load balancer to trust.  Example: `[ocid1.cabundle.oc1.us-ashburn-1.amaaaaaaav3bgsaagl4zzyqdop5i2vuwoqewdvauuw34llqa74otq2jdsfyq]`
     * 
     */
    @Import(name="trustedCertificateAuthorityIds")
    private @Nullable Output<List<String>> trustedCertificateAuthorityIds;

    /**
     * @return (Updatable) Ids for Oracle Cloud Infrastructure certificates service CA or CA bundles for the load balancer to trust.  Example: `[ocid1.cabundle.oc1.us-ashburn-1.amaaaaaaav3bgsaagl4zzyqdop5i2vuwoqewdvauuw34llqa74otq2jdsfyq]`
     * 
     */
    public Optional<Output<List<String>>> trustedCertificateAuthorityIds() {
        return Optional.ofNullable(this.trustedCertificateAuthorityIds);
    }

    /**
     * (Updatable) The maximum depth for peer certificate chain verification.  Example: `3`
     * 
     */
    @Import(name="verifyDepth")
    private @Nullable Output<Integer> verifyDepth;

    /**
     * @return (Updatable) The maximum depth for peer certificate chain verification.  Example: `3`
     * 
     */
    public Optional<Output<Integer>> verifyDepth() {
        return Optional.ofNullable(this.verifyDepth);
    }

    /**
     * (Updatable) Whether the load balancer listener should verify peer certificates.  Example: `true`
     * 
     */
    @Import(name="verifyPeerCertificate")
    private @Nullable Output<Boolean> verifyPeerCertificate;

    /**
     * @return (Updatable) Whether the load balancer listener should verify peer certificates.  Example: `true`
     * 
     */
    public Optional<Output<Boolean>> verifyPeerCertificate() {
        return Optional.ofNullable(this.verifyPeerCertificate);
    }

    private BackendSetSslConfigurationArgs() {}

    private BackendSetSslConfigurationArgs(BackendSetSslConfigurationArgs $) {
        this.certificateIds = $.certificateIds;
        this.certificateName = $.certificateName;
        this.cipherSuiteName = $.cipherSuiteName;
        this.protocols = $.protocols;
        this.serverOrderPreference = $.serverOrderPreference;
        this.trustedCertificateAuthorityIds = $.trustedCertificateAuthorityIds;
        this.verifyDepth = $.verifyDepth;
        this.verifyPeerCertificate = $.verifyPeerCertificate;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BackendSetSslConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BackendSetSslConfigurationArgs $;

        public Builder() {
            $ = new BackendSetSslConfigurationArgs();
        }

        public Builder(BackendSetSslConfigurationArgs defaults) {
            $ = new BackendSetSslConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param certificateIds (Updatable) Ids for Oracle Cloud Infrastructure certificates service certificates. Currently only a single Id may be passed.  Example: `[ocid1.certificate.oc1.us-ashburn-1.amaaaaaaav3bgsaa5o2q7rh5nfmkkukfkogasqhk6af2opufhjlqg7m6jqzq]`
         * 
         * @return builder
         * 
         */
        public Builder certificateIds(@Nullable Output<List<String>> certificateIds) {
            $.certificateIds = certificateIds;
            return this;
        }

        /**
         * @param certificateIds (Updatable) Ids for Oracle Cloud Infrastructure certificates service certificates. Currently only a single Id may be passed.  Example: `[ocid1.certificate.oc1.us-ashburn-1.amaaaaaaav3bgsaa5o2q7rh5nfmkkukfkogasqhk6af2opufhjlqg7m6jqzq]`
         * 
         * @return builder
         * 
         */
        public Builder certificateIds(List<String> certificateIds) {
            return certificateIds(Output.of(certificateIds));
        }

        /**
         * @param certificateIds (Updatable) Ids for Oracle Cloud Infrastructure certificates service certificates. Currently only a single Id may be passed.  Example: `[ocid1.certificate.oc1.us-ashburn-1.amaaaaaaav3bgsaa5o2q7rh5nfmkkukfkogasqhk6af2opufhjlqg7m6jqzq]`
         * 
         * @return builder
         * 
         */
        public Builder certificateIds(String... certificateIds) {
            return certificateIds(List.of(certificateIds));
        }

        /**
         * @param certificateName (Updatable) A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `example_certificate_bundle`
         * 
         * @return builder
         * 
         */
        public Builder certificateName(@Nullable Output<String> certificateName) {
            $.certificateName = certificateName;
            return this;
        }

        /**
         * @param certificateName (Updatable) A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: `example_certificate_bundle`
         * 
         * @return builder
         * 
         */
        public Builder certificateName(String certificateName) {
            return certificateName(Output.of(certificateName));
        }

        /**
         * @param cipherSuiteName (Updatable) The name of the cipher suite to use for HTTPS or SSL connections.
         * 
         * @return builder
         * 
         */
        public Builder cipherSuiteName(@Nullable Output<String> cipherSuiteName) {
            $.cipherSuiteName = cipherSuiteName;
            return this;
        }

        /**
         * @param cipherSuiteName (Updatable) The name of the cipher suite to use for HTTPS or SSL connections.
         * 
         * @return builder
         * 
         */
        public Builder cipherSuiteName(String cipherSuiteName) {
            return cipherSuiteName(Output.of(cipherSuiteName));
        }

        /**
         * @param protocols (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
         * 
         * @return builder
         * 
         */
        public Builder protocols(@Nullable Output<List<String>> protocols) {
            $.protocols = protocols;
            return this;
        }

        /**
         * @param protocols (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
         * 
         * @return builder
         * 
         */
        public Builder protocols(List<String> protocols) {
            return protocols(Output.of(protocols));
        }

        /**
         * @param protocols (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
         * 
         * @return builder
         * 
         */
        public Builder protocols(String... protocols) {
            return protocols(List.of(protocols));
        }

        /**
         * @param serverOrderPreference (Updatable) When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
         * 
         * @return builder
         * 
         */
        public Builder serverOrderPreference(@Nullable Output<String> serverOrderPreference) {
            $.serverOrderPreference = serverOrderPreference;
            return this;
        }

        /**
         * @param serverOrderPreference (Updatable) When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
         * 
         * @return builder
         * 
         */
        public Builder serverOrderPreference(String serverOrderPreference) {
            return serverOrderPreference(Output.of(serverOrderPreference));
        }

        /**
         * @param trustedCertificateAuthorityIds (Updatable) Ids for Oracle Cloud Infrastructure certificates service CA or CA bundles for the load balancer to trust.  Example: `[ocid1.cabundle.oc1.us-ashburn-1.amaaaaaaav3bgsaagl4zzyqdop5i2vuwoqewdvauuw34llqa74otq2jdsfyq]`
         * 
         * @return builder
         * 
         */
        public Builder trustedCertificateAuthorityIds(@Nullable Output<List<String>> trustedCertificateAuthorityIds) {
            $.trustedCertificateAuthorityIds = trustedCertificateAuthorityIds;
            return this;
        }

        /**
         * @param trustedCertificateAuthorityIds (Updatable) Ids for Oracle Cloud Infrastructure certificates service CA or CA bundles for the load balancer to trust.  Example: `[ocid1.cabundle.oc1.us-ashburn-1.amaaaaaaav3bgsaagl4zzyqdop5i2vuwoqewdvauuw34llqa74otq2jdsfyq]`
         * 
         * @return builder
         * 
         */
        public Builder trustedCertificateAuthorityIds(List<String> trustedCertificateAuthorityIds) {
            return trustedCertificateAuthorityIds(Output.of(trustedCertificateAuthorityIds));
        }

        /**
         * @param trustedCertificateAuthorityIds (Updatable) Ids for Oracle Cloud Infrastructure certificates service CA or CA bundles for the load balancer to trust.  Example: `[ocid1.cabundle.oc1.us-ashburn-1.amaaaaaaav3bgsaagl4zzyqdop5i2vuwoqewdvauuw34llqa74otq2jdsfyq]`
         * 
         * @return builder
         * 
         */
        public Builder trustedCertificateAuthorityIds(String... trustedCertificateAuthorityIds) {
            return trustedCertificateAuthorityIds(List.of(trustedCertificateAuthorityIds));
        }

        /**
         * @param verifyDepth (Updatable) The maximum depth for peer certificate chain verification.  Example: `3`
         * 
         * @return builder
         * 
         */
        public Builder verifyDepth(@Nullable Output<Integer> verifyDepth) {
            $.verifyDepth = verifyDepth;
            return this;
        }

        /**
         * @param verifyDepth (Updatable) The maximum depth for peer certificate chain verification.  Example: `3`
         * 
         * @return builder
         * 
         */
        public Builder verifyDepth(Integer verifyDepth) {
            return verifyDepth(Output.of(verifyDepth));
        }

        /**
         * @param verifyPeerCertificate (Updatable) Whether the load balancer listener should verify peer certificates.  Example: `true`
         * 
         * @return builder
         * 
         */
        public Builder verifyPeerCertificate(@Nullable Output<Boolean> verifyPeerCertificate) {
            $.verifyPeerCertificate = verifyPeerCertificate;
            return this;
        }

        /**
         * @param verifyPeerCertificate (Updatable) Whether the load balancer listener should verify peer certificates.  Example: `true`
         * 
         * @return builder
         * 
         */
        public Builder verifyPeerCertificate(Boolean verifyPeerCertificate) {
            return verifyPeerCertificate(Output.of(verifyPeerCertificate));
        }

        public BackendSetSslConfigurationArgs build() {
            return $;
        }
    }

}
