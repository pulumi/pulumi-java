// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.GetDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgument;
import com.pulumi.oci.DevOps.outputs.GetDeploymentsDeploymentCollectionItemDeployPipelineArtifact;
import com.pulumi.oci.DevOps.outputs.GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironment;
import com.pulumi.oci.DevOps.outputs.GetDeploymentsDeploymentCollectionItemDeploymentArgument;
import com.pulumi.oci.DevOps.outputs.GetDeploymentsDeploymentCollectionItemDeploymentExecutionProgress;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetDeploymentsDeploymentCollectionItem {
    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Specifies the list of artifact override arguments at the time of deployment.
     * 
     */
    private final List<GetDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgument> deployArtifactOverrideArguments;
    /**
     * @return List of all artifacts used in the pipeline.
     * 
     */
    private final List<GetDeploymentsDeploymentCollectionItemDeployPipelineArtifact> deployPipelineArtifacts;
    /**
     * @return List of all environments used in the pipeline.
     * 
     */
    private final List<GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironment> deployPipelineEnvironments;
    /**
     * @return The ID of the parent pipeline.
     * 
     */
    private final String deployPipelineId;
    /**
     * @return The OCID of the stage.
     * 
     */
    private final String deployStageId;
    /**
     * @return Specifies list of arguments passed along with the deployment.
     * 
     */
    private final List<GetDeploymentsDeploymentCollectionItemDeploymentArgument> deploymentArguments;
    /**
     * @return The execution progress details of a deployment.
     * 
     */
    private final List<GetDeploymentsDeploymentCollectionItemDeploymentExecutionProgress> deploymentExecutionProgresses;
    /**
     * @return Specifies type of Deployment
     * 
     */
    private final String deploymentType;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private final String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return Unique identifier or OCID for listing a single resource by ID.
     * 
     */
    private final String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return Specifies the OCID of the previous deployment to be redeployed.
     * 
     */
    private final String previousDeploymentId;
    /**
     * @return unique project identifier
     * 
     */
    private final String projectId;
    /**
     * @return A filter to return only Deployments that matches the given lifecycleState.
     * 
     */
    private final String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private final String timeCreated;
    /**
     * @return Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetDeploymentsDeploymentCollectionItem(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("deployArtifactOverrideArguments") List<GetDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgument> deployArtifactOverrideArguments,
        @CustomType.Parameter("deployPipelineArtifacts") List<GetDeploymentsDeploymentCollectionItemDeployPipelineArtifact> deployPipelineArtifacts,
        @CustomType.Parameter("deployPipelineEnvironments") List<GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironment> deployPipelineEnvironments,
        @CustomType.Parameter("deployPipelineId") String deployPipelineId,
        @CustomType.Parameter("deployStageId") String deployStageId,
        @CustomType.Parameter("deploymentArguments") List<GetDeploymentsDeploymentCollectionItemDeploymentArgument> deploymentArguments,
        @CustomType.Parameter("deploymentExecutionProgresses") List<GetDeploymentsDeploymentCollectionItemDeploymentExecutionProgress> deploymentExecutionProgresses,
        @CustomType.Parameter("deploymentType") String deploymentType,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("previousDeploymentId") String previousDeploymentId,
        @CustomType.Parameter("projectId") String projectId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.deployArtifactOverrideArguments = deployArtifactOverrideArguments;
        this.deployPipelineArtifacts = deployPipelineArtifacts;
        this.deployPipelineEnvironments = deployPipelineEnvironments;
        this.deployPipelineId = deployPipelineId;
        this.deployStageId = deployStageId;
        this.deploymentArguments = deploymentArguments;
        this.deploymentExecutionProgresses = deploymentExecutionProgresses;
        this.deploymentType = deploymentType;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.lifecycleDetails = lifecycleDetails;
        this.previousDeploymentId = previousDeploymentId;
        this.projectId = projectId;
        this.state = state;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return The OCID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Specifies the list of artifact override arguments at the time of deployment.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgument> deployArtifactOverrideArguments() {
        return this.deployArtifactOverrideArguments;
    }
    /**
     * @return List of all artifacts used in the pipeline.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemDeployPipelineArtifact> deployPipelineArtifacts() {
        return this.deployPipelineArtifacts;
    }
    /**
     * @return List of all environments used in the pipeline.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironment> deployPipelineEnvironments() {
        return this.deployPipelineEnvironments;
    }
    /**
     * @return The ID of the parent pipeline.
     * 
     */
    public String deployPipelineId() {
        return this.deployPipelineId;
    }
    /**
     * @return The OCID of the stage.
     * 
     */
    public String deployStageId() {
        return this.deployStageId;
    }
    /**
     * @return Specifies list of arguments passed along with the deployment.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemDeploymentArgument> deploymentArguments() {
        return this.deploymentArguments;
    }
    /**
     * @return The execution progress details of a deployment.
     * 
     */
    public List<GetDeploymentsDeploymentCollectionItemDeploymentExecutionProgress> deploymentExecutionProgresses() {
        return this.deploymentExecutionProgresses;
    }
    /**
     * @return Specifies type of Deployment
     * 
     */
    public String deploymentType() {
        return this.deploymentType;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier or OCID for listing a single resource by ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return Specifies the OCID of the previous deployment to be redeployed.
     * 
     */
    public String previousDeploymentId() {
        return this.previousDeploymentId;
    }
    /**
     * @return unique project identifier
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return A filter to return only Deployments that matches the given lifecycleState.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return Time the deployment was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return Time the deployment was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeploymentsDeploymentCollectionItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private Map<String,Object> definedTags;
        private List<GetDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgument> deployArtifactOverrideArguments;
        private List<GetDeploymentsDeploymentCollectionItemDeployPipelineArtifact> deployPipelineArtifacts;
        private List<GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironment> deployPipelineEnvironments;
        private String deployPipelineId;
        private String deployStageId;
        private List<GetDeploymentsDeploymentCollectionItemDeploymentArgument> deploymentArguments;
        private List<GetDeploymentsDeploymentCollectionItemDeploymentExecutionProgress> deploymentExecutionProgresses;
        private String deploymentType;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String previousDeploymentId;
        private String projectId;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetDeploymentsDeploymentCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.deployArtifactOverrideArguments = defaults.deployArtifactOverrideArguments;
    	      this.deployPipelineArtifacts = defaults.deployPipelineArtifacts;
    	      this.deployPipelineEnvironments = defaults.deployPipelineEnvironments;
    	      this.deployPipelineId = defaults.deployPipelineId;
    	      this.deployStageId = defaults.deployStageId;
    	      this.deploymentArguments = defaults.deploymentArguments;
    	      this.deploymentExecutionProgresses = defaults.deploymentExecutionProgresses;
    	      this.deploymentType = defaults.deploymentType;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.previousDeploymentId = defaults.previousDeploymentId;
    	      this.projectId = defaults.projectId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder deployArtifactOverrideArguments(List<GetDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgument> deployArtifactOverrideArguments) {
            this.deployArtifactOverrideArguments = Objects.requireNonNull(deployArtifactOverrideArguments);
            return this;
        }
        public Builder deployArtifactOverrideArguments(GetDeploymentsDeploymentCollectionItemDeployArtifactOverrideArgument... deployArtifactOverrideArguments) {
            return deployArtifactOverrideArguments(List.of(deployArtifactOverrideArguments));
        }
        public Builder deployPipelineArtifacts(List<GetDeploymentsDeploymentCollectionItemDeployPipelineArtifact> deployPipelineArtifacts) {
            this.deployPipelineArtifacts = Objects.requireNonNull(deployPipelineArtifacts);
            return this;
        }
        public Builder deployPipelineArtifacts(GetDeploymentsDeploymentCollectionItemDeployPipelineArtifact... deployPipelineArtifacts) {
            return deployPipelineArtifacts(List.of(deployPipelineArtifacts));
        }
        public Builder deployPipelineEnvironments(List<GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironment> deployPipelineEnvironments) {
            this.deployPipelineEnvironments = Objects.requireNonNull(deployPipelineEnvironments);
            return this;
        }
        public Builder deployPipelineEnvironments(GetDeploymentsDeploymentCollectionItemDeployPipelineEnvironment... deployPipelineEnvironments) {
            return deployPipelineEnvironments(List.of(deployPipelineEnvironments));
        }
        public Builder deployPipelineId(String deployPipelineId) {
            this.deployPipelineId = Objects.requireNonNull(deployPipelineId);
            return this;
        }
        public Builder deployStageId(String deployStageId) {
            this.deployStageId = Objects.requireNonNull(deployStageId);
            return this;
        }
        public Builder deploymentArguments(List<GetDeploymentsDeploymentCollectionItemDeploymentArgument> deploymentArguments) {
            this.deploymentArguments = Objects.requireNonNull(deploymentArguments);
            return this;
        }
        public Builder deploymentArguments(GetDeploymentsDeploymentCollectionItemDeploymentArgument... deploymentArguments) {
            return deploymentArguments(List.of(deploymentArguments));
        }
        public Builder deploymentExecutionProgresses(List<GetDeploymentsDeploymentCollectionItemDeploymentExecutionProgress> deploymentExecutionProgresses) {
            this.deploymentExecutionProgresses = Objects.requireNonNull(deploymentExecutionProgresses);
            return this;
        }
        public Builder deploymentExecutionProgresses(GetDeploymentsDeploymentCollectionItemDeploymentExecutionProgress... deploymentExecutionProgresses) {
            return deploymentExecutionProgresses(List.of(deploymentExecutionProgresses));
        }
        public Builder deploymentType(String deploymentType) {
            this.deploymentType = Objects.requireNonNull(deploymentType);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder previousDeploymentId(String previousDeploymentId) {
            this.previousDeploymentId = Objects.requireNonNull(previousDeploymentId);
            return this;
        }
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetDeploymentsDeploymentCollectionItem build() {
            return new GetDeploymentsDeploymentCollectionItem(compartmentId, definedTags, deployArtifactOverrideArguments, deployPipelineArtifacts, deployPipelineEnvironments, deployPipelineId, deployStageId, deploymentArguments, deploymentExecutionProgresses, deploymentType, displayName, freeformTags, id, lifecycleDetails, previousDeploymentId, projectId, state, systemTags, timeCreated, timeUpdated);
        }
    }
}
