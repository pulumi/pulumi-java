// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ServiceCatalog.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ServiceCatalog.inputs.GetServiceCatalogAssociationsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServiceCatalogAssociationsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceCatalogAssociationsPlainArgs Empty = new GetServiceCatalogAssociationsPlainArgs();

    /**
     * The unique identifier of the entity associated with service catalog.
     * 
     */
    @Import(name="entityId")
    private @Nullable String entityId;

    /**
     * @return The unique identifier of the entity associated with service catalog.
     * 
     */
    public Optional<String> entityId() {
        return Optional.ofNullable(this.entityId);
    }

    /**
     * The type of the application in the service catalog.
     * 
     */
    @Import(name="entityType")
    private @Nullable String entityType;

    /**
     * @return The type of the application in the service catalog.
     * 
     */
    public Optional<String> entityType() {
        return Optional.ofNullable(this.entityType);
    }

    @Import(name="filters")
    private @Nullable List<GetServiceCatalogAssociationsFilter> filters;

    public Optional<List<GetServiceCatalogAssociationsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The unique identifier for the service catalog association.
     * 
     */
    @Import(name="serviceCatalogAssociationId")
    private @Nullable String serviceCatalogAssociationId;

    /**
     * @return The unique identifier for the service catalog association.
     * 
     */
    public Optional<String> serviceCatalogAssociationId() {
        return Optional.ofNullable(this.serviceCatalogAssociationId);
    }

    /**
     * The unique identifier for the service catalog.
     * 
     */
    @Import(name="serviceCatalogId")
    private @Nullable String serviceCatalogId;

    /**
     * @return The unique identifier for the service catalog.
     * 
     */
    public Optional<String> serviceCatalogId() {
        return Optional.ofNullable(this.serviceCatalogId);
    }

    private GetServiceCatalogAssociationsPlainArgs() {}

    private GetServiceCatalogAssociationsPlainArgs(GetServiceCatalogAssociationsPlainArgs $) {
        this.entityId = $.entityId;
        this.entityType = $.entityType;
        this.filters = $.filters;
        this.serviceCatalogAssociationId = $.serviceCatalogAssociationId;
        this.serviceCatalogId = $.serviceCatalogId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceCatalogAssociationsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceCatalogAssociationsPlainArgs $;

        public Builder() {
            $ = new GetServiceCatalogAssociationsPlainArgs();
        }

        public Builder(GetServiceCatalogAssociationsPlainArgs defaults) {
            $ = new GetServiceCatalogAssociationsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param entityId The unique identifier of the entity associated with service catalog.
         * 
         * @return builder
         * 
         */
        public Builder entityId(@Nullable String entityId) {
            $.entityId = entityId;
            return this;
        }

        /**
         * @param entityType The type of the application in the service catalog.
         * 
         * @return builder
         * 
         */
        public Builder entityType(@Nullable String entityType) {
            $.entityType = entityType;
            return this;
        }

        public Builder filters(@Nullable List<GetServiceCatalogAssociationsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetServiceCatalogAssociationsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param serviceCatalogAssociationId The unique identifier for the service catalog association.
         * 
         * @return builder
         * 
         */
        public Builder serviceCatalogAssociationId(@Nullable String serviceCatalogAssociationId) {
            $.serviceCatalogAssociationId = serviceCatalogAssociationId;
            return this;
        }

        /**
         * @param serviceCatalogId The unique identifier for the service catalog.
         * 
         * @return builder
         * 
         */
        public Builder serviceCatalogId(@Nullable String serviceCatalogId) {
            $.serviceCatalogId = serviceCatalogId;
            return this;
        }

        public GetServiceCatalogAssociationsPlainArgs build() {
            return $;
        }
    }

}
