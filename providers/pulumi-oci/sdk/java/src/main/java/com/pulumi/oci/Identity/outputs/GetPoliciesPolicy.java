// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetPoliciesPolicy {
    /**
     * @deprecated
     * The &#39;ETag&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'ETag' field has been deprecated and may be removed in a future version. Do not use this field. */
    private final String ETag;
    /**
     * @return The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The description you assign to the policy. Does not have to be unique, and it&#39;s changeable.
     * 
     */
    private final String description;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The OCID of the policy.
     * 
     */
    private final String id;
    /**
     * @return The detailed status of INACTIVE lifecycleState.
     * 
     */
    private final String inactiveState;
    /**
     * @deprecated
     * The &#39;lastUpdateETag&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'lastUpdateETag' field has been deprecated and may be removed in a future version. Do not use this field. */
    private final String lastUpdateETag;
    /**
     * @return A filter to only return resources that match the given name exactly.
     * 
     */
    private final String name;
    /**
     * @deprecated
     * The &#39;policyHash&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'policyHash' field has been deprecated and may be removed in a future version. Do not use this field. */
    private final String policyHash;
    /**
     * @return A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     * 
     */
    private final String state;
    /**
     * @return An array of one or more policy statements written in the policy language.
     * 
     */
    private final List<String> statements;
    /**
     * @return Date and time the policy was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private final String timeCreated;
    /**
     * @return The version of the policy. If null or set to an empty string, when a request comes in for authorization, the policy will be evaluated according to the current behavior of the services at that moment. If set to a particular date (YYYY-MM-DD), the policy will be evaluated according to the behavior of the services on that date.
     * 
     */
    private final String versionDate;

    @CustomType.Constructor
    private GetPoliciesPolicy(
        @CustomType.Parameter("ETag") String ETag,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("inactiveState") String inactiveState,
        @CustomType.Parameter("lastUpdateETag") String lastUpdateETag,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("policyHash") String policyHash,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("statements") List<String> statements,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("versionDate") String versionDate) {
        this.ETag = ETag;
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.description = description;
        this.freeformTags = freeformTags;
        this.id = id;
        this.inactiveState = inactiveState;
        this.lastUpdateETag = lastUpdateETag;
        this.name = name;
        this.policyHash = policyHash;
        this.state = state;
        this.statements = statements;
        this.timeCreated = timeCreated;
        this.versionDate = versionDate;
    }

    /**
     * @deprecated
     * The &#39;ETag&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'ETag' field has been deprecated and may be removed in a future version. Do not use this field. */
    public String ETag() {
        return this.ETag;
    }
    /**
     * @return The OCID of the compartment (remember that the tenancy is simply the root compartment).
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The description you assign to the policy. Does not have to be unique, and it&#39;s changeable.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the policy.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The detailed status of INACTIVE lifecycleState.
     * 
     */
    public String inactiveState() {
        return this.inactiveState;
    }
    /**
     * @deprecated
     * The &#39;lastUpdateETag&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'lastUpdateETag' field has been deprecated and may be removed in a future version. Do not use this field. */
    public String lastUpdateETag() {
        return this.lastUpdateETag;
    }
    /**
     * @return A filter to only return resources that match the given name exactly.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @deprecated
     * The &#39;policyHash&#39; field has been deprecated and may be removed in a future version. Do not use this field.
     * 
     */
    @Deprecated /* The 'policyHash' field has been deprecated and may be removed in a future version. Do not use this field. */
    public String policyHash() {
        return this.policyHash;
    }
    /**
     * @return A filter to only return resources that match the given lifecycle state.  The state value is case-insensitive.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return An array of one or more policy statements written in the policy language.
     * 
     */
    public List<String> statements() {
        return this.statements;
    }
    /**
     * @return Date and time the policy was created, in the format defined by RFC3339.  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The version of the policy. If null or set to an empty string, when a request comes in for authorization, the policy will be evaluated according to the current behavior of the services at that moment. If set to a particular date (YYYY-MM-DD), the policy will be evaluated according to the behavior of the services on that date.
     * 
     */
    public String versionDate() {
        return this.versionDate;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPoliciesPolicy defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String ETag;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String description;
        private Map<String,Object> freeformTags;
        private String id;
        private String inactiveState;
        private String lastUpdateETag;
        private String name;
        private String policyHash;
        private String state;
        private List<String> statements;
        private String timeCreated;
        private String versionDate;

        public Builder() {
    	      // Empty
        }

        public Builder(GetPoliciesPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ETag = defaults.ETag;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.description = defaults.description;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.inactiveState = defaults.inactiveState;
    	      this.lastUpdateETag = defaults.lastUpdateETag;
    	      this.name = defaults.name;
    	      this.policyHash = defaults.policyHash;
    	      this.state = defaults.state;
    	      this.statements = defaults.statements;
    	      this.timeCreated = defaults.timeCreated;
    	      this.versionDate = defaults.versionDate;
        }

        public Builder ETag(String ETag) {
            this.ETag = Objects.requireNonNull(ETag);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder inactiveState(String inactiveState) {
            this.inactiveState = Objects.requireNonNull(inactiveState);
            return this;
        }
        public Builder lastUpdateETag(String lastUpdateETag) {
            this.lastUpdateETag = Objects.requireNonNull(lastUpdateETag);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder policyHash(String policyHash) {
            this.policyHash = Objects.requireNonNull(policyHash);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder statements(List<String> statements) {
            this.statements = Objects.requireNonNull(statements);
            return this;
        }
        public Builder statements(String... statements) {
            return statements(List.of(statements));
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder versionDate(String versionDate) {
            this.versionDate = Objects.requireNonNull(versionDate);
            return this;
        }        public GetPoliciesPolicy build() {
            return new GetPoliciesPolicy(ETag, compartmentId, definedTags, description, freeformTags, id, inactiveState, lastUpdateETag, name, policyHash, state, statements, timeCreated, versionDate);
        }
    }
}
