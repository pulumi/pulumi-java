// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetMaskingPoliciesMaskingColumnsFilter;
import com.pulumi.oci.DataSafe.outputs.GetMaskingPoliciesMaskingColumnsMaskingColumnCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMaskingPoliciesMaskingColumnsResult {
    /**
     * @return The name of the substitution column.
     * 
     */
    private final @Nullable List<String> columnNames;
    /**
     * @return The data type of the masking column.
     * 
     */
    private final @Nullable List<String> dataTypes;
    private final @Nullable List<GetMaskingPoliciesMaskingColumnsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return Indicates if data masking is enabled for the masking column.
     * 
     */
    private final @Nullable Boolean isMaskingEnabled;
    private final @Nullable Boolean isSeedRequired;
    /**
     * @return The list of masking_column_collection.
     * 
     */
    private final List<GetMaskingPoliciesMaskingColumnsMaskingColumnCollection> maskingColumnCollections;
    /**
     * @return The group of the masking column. All the columns in a group are masked together to ensure  that the masked data across these columns continue to retain the same logical relationship.  For more details, check &lt;a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037&gt;Group Masking in the Data Safe documentation.&lt;/a&gt;
     * 
     */
    private final @Nullable List<String> maskingColumnGroups;
    private final @Nullable String maskingColumnLifecycleState;
    /**
     * @return The OCID of the masking policy that contains the masking column.
     * 
     */
    private final String maskingPolicyId;
    /**
     * @return The type of the object that contains the database column.
     * 
     */
    private final @Nullable List<String> objectTypes;
    /**
     * @return The name of the object (table or editioning view) that contains the database column.
     * 
     */
    private final @Nullable List<String> objects;
    /**
     * @return The name of the schema that contains the database column.
     * 
     */
    private final @Nullable List<String> schemaNames;
    /**
     * @return The OCID of the sensitive type associated with the masking column.
     * 
     */
    private final @Nullable String sensitiveTypeId;
    private final @Nullable String timeCreatedGreaterThanOrEqualTo;
    private final @Nullable String timeCreatedLessThan;
    private final @Nullable String timeUpdatedGreaterThanOrEqualTo;
    private final @Nullable String timeUpdatedLessThan;

    @CustomType.Constructor
    private GetMaskingPoliciesMaskingColumnsResult(
        @CustomType.Parameter("columnNames") @Nullable List<String> columnNames,
        @CustomType.Parameter("dataTypes") @Nullable List<String> dataTypes,
        @CustomType.Parameter("filters") @Nullable List<GetMaskingPoliciesMaskingColumnsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isMaskingEnabled") @Nullable Boolean isMaskingEnabled,
        @CustomType.Parameter("isSeedRequired") @Nullable Boolean isSeedRequired,
        @CustomType.Parameter("maskingColumnCollections") List<GetMaskingPoliciesMaskingColumnsMaskingColumnCollection> maskingColumnCollections,
        @CustomType.Parameter("maskingColumnGroups") @Nullable List<String> maskingColumnGroups,
        @CustomType.Parameter("maskingColumnLifecycleState") @Nullable String maskingColumnLifecycleState,
        @CustomType.Parameter("maskingPolicyId") String maskingPolicyId,
        @CustomType.Parameter("objectTypes") @Nullable List<String> objectTypes,
        @CustomType.Parameter("objects") @Nullable List<String> objects,
        @CustomType.Parameter("schemaNames") @Nullable List<String> schemaNames,
        @CustomType.Parameter("sensitiveTypeId") @Nullable String sensitiveTypeId,
        @CustomType.Parameter("timeCreatedGreaterThanOrEqualTo") @Nullable String timeCreatedGreaterThanOrEqualTo,
        @CustomType.Parameter("timeCreatedLessThan") @Nullable String timeCreatedLessThan,
        @CustomType.Parameter("timeUpdatedGreaterThanOrEqualTo") @Nullable String timeUpdatedGreaterThanOrEqualTo,
        @CustomType.Parameter("timeUpdatedLessThan") @Nullable String timeUpdatedLessThan) {
        this.columnNames = columnNames;
        this.dataTypes = dataTypes;
        this.filters = filters;
        this.id = id;
        this.isMaskingEnabled = isMaskingEnabled;
        this.isSeedRequired = isSeedRequired;
        this.maskingColumnCollections = maskingColumnCollections;
        this.maskingColumnGroups = maskingColumnGroups;
        this.maskingColumnLifecycleState = maskingColumnLifecycleState;
        this.maskingPolicyId = maskingPolicyId;
        this.objectTypes = objectTypes;
        this.objects = objects;
        this.schemaNames = schemaNames;
        this.sensitiveTypeId = sensitiveTypeId;
        this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
        this.timeCreatedLessThan = timeCreatedLessThan;
        this.timeUpdatedGreaterThanOrEqualTo = timeUpdatedGreaterThanOrEqualTo;
        this.timeUpdatedLessThan = timeUpdatedLessThan;
    }

    /**
     * @return The name of the substitution column.
     * 
     */
    public List<String> columnNames() {
        return this.columnNames == null ? List.of() : this.columnNames;
    }
    /**
     * @return The data type of the masking column.
     * 
     */
    public List<String> dataTypes() {
        return this.dataTypes == null ? List.of() : this.dataTypes;
    }
    public List<GetMaskingPoliciesMaskingColumnsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Indicates if data masking is enabled for the masking column.
     * 
     */
    public Optional<Boolean> isMaskingEnabled() {
        return Optional.ofNullable(this.isMaskingEnabled);
    }
    public Optional<Boolean> isSeedRequired() {
        return Optional.ofNullable(this.isSeedRequired);
    }
    /**
     * @return The list of masking_column_collection.
     * 
     */
    public List<GetMaskingPoliciesMaskingColumnsMaskingColumnCollection> maskingColumnCollections() {
        return this.maskingColumnCollections;
    }
    /**
     * @return The group of the masking column. All the columns in a group are masked together to ensure  that the masked data across these columns continue to retain the same logical relationship.  For more details, check &lt;a href=https://docs.oracle.com/en/cloud/paas/data-safe/udscs/group-masking1.html#GUID-755056B9-9540-48C0-9491-262A44A85037&gt;Group Masking in the Data Safe documentation.&lt;/a&gt;
     * 
     */
    public List<String> maskingColumnGroups() {
        return this.maskingColumnGroups == null ? List.of() : this.maskingColumnGroups;
    }
    public Optional<String> maskingColumnLifecycleState() {
        return Optional.ofNullable(this.maskingColumnLifecycleState);
    }
    /**
     * @return The OCID of the masking policy that contains the masking column.
     * 
     */
    public String maskingPolicyId() {
        return this.maskingPolicyId;
    }
    /**
     * @return The type of the object that contains the database column.
     * 
     */
    public List<String> objectTypes() {
        return this.objectTypes == null ? List.of() : this.objectTypes;
    }
    /**
     * @return The name of the object (table or editioning view) that contains the database column.
     * 
     */
    public List<String> objects() {
        return this.objects == null ? List.of() : this.objects;
    }
    /**
     * @return The name of the schema that contains the database column.
     * 
     */
    public List<String> schemaNames() {
        return this.schemaNames == null ? List.of() : this.schemaNames;
    }
    /**
     * @return The OCID of the sensitive type associated with the masking column.
     * 
     */
    public Optional<String> sensitiveTypeId() {
        return Optional.ofNullable(this.sensitiveTypeId);
    }
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }
    public Optional<String> timeUpdatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeUpdatedGreaterThanOrEqualTo);
    }
    public Optional<String> timeUpdatedLessThan() {
        return Optional.ofNullable(this.timeUpdatedLessThan);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMaskingPoliciesMaskingColumnsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable List<String> columnNames;
        private @Nullable List<String> dataTypes;
        private @Nullable List<GetMaskingPoliciesMaskingColumnsFilter> filters;
        private String id;
        private @Nullable Boolean isMaskingEnabled;
        private @Nullable Boolean isSeedRequired;
        private List<GetMaskingPoliciesMaskingColumnsMaskingColumnCollection> maskingColumnCollections;
        private @Nullable List<String> maskingColumnGroups;
        private @Nullable String maskingColumnLifecycleState;
        private String maskingPolicyId;
        private @Nullable List<String> objectTypes;
        private @Nullable List<String> objects;
        private @Nullable List<String> schemaNames;
        private @Nullable String sensitiveTypeId;
        private @Nullable String timeCreatedGreaterThanOrEqualTo;
        private @Nullable String timeCreatedLessThan;
        private @Nullable String timeUpdatedGreaterThanOrEqualTo;
        private @Nullable String timeUpdatedLessThan;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMaskingPoliciesMaskingColumnsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnNames = defaults.columnNames;
    	      this.dataTypes = defaults.dataTypes;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.isMaskingEnabled = defaults.isMaskingEnabled;
    	      this.isSeedRequired = defaults.isSeedRequired;
    	      this.maskingColumnCollections = defaults.maskingColumnCollections;
    	      this.maskingColumnGroups = defaults.maskingColumnGroups;
    	      this.maskingColumnLifecycleState = defaults.maskingColumnLifecycleState;
    	      this.maskingPolicyId = defaults.maskingPolicyId;
    	      this.objectTypes = defaults.objectTypes;
    	      this.objects = defaults.objects;
    	      this.schemaNames = defaults.schemaNames;
    	      this.sensitiveTypeId = defaults.sensitiveTypeId;
    	      this.timeCreatedGreaterThanOrEqualTo = defaults.timeCreatedGreaterThanOrEqualTo;
    	      this.timeCreatedLessThan = defaults.timeCreatedLessThan;
    	      this.timeUpdatedGreaterThanOrEqualTo = defaults.timeUpdatedGreaterThanOrEqualTo;
    	      this.timeUpdatedLessThan = defaults.timeUpdatedLessThan;
        }

        public Builder columnNames(@Nullable List<String> columnNames) {
            this.columnNames = columnNames;
            return this;
        }
        public Builder columnNames(String... columnNames) {
            return columnNames(List.of(columnNames));
        }
        public Builder dataTypes(@Nullable List<String> dataTypes) {
            this.dataTypes = dataTypes;
            return this;
        }
        public Builder dataTypes(String... dataTypes) {
            return dataTypes(List.of(dataTypes));
        }
        public Builder filters(@Nullable List<GetMaskingPoliciesMaskingColumnsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetMaskingPoliciesMaskingColumnsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isMaskingEnabled(@Nullable Boolean isMaskingEnabled) {
            this.isMaskingEnabled = isMaskingEnabled;
            return this;
        }
        public Builder isSeedRequired(@Nullable Boolean isSeedRequired) {
            this.isSeedRequired = isSeedRequired;
            return this;
        }
        public Builder maskingColumnCollections(List<GetMaskingPoliciesMaskingColumnsMaskingColumnCollection> maskingColumnCollections) {
            this.maskingColumnCollections = Objects.requireNonNull(maskingColumnCollections);
            return this;
        }
        public Builder maskingColumnCollections(GetMaskingPoliciesMaskingColumnsMaskingColumnCollection... maskingColumnCollections) {
            return maskingColumnCollections(List.of(maskingColumnCollections));
        }
        public Builder maskingColumnGroups(@Nullable List<String> maskingColumnGroups) {
            this.maskingColumnGroups = maskingColumnGroups;
            return this;
        }
        public Builder maskingColumnGroups(String... maskingColumnGroups) {
            return maskingColumnGroups(List.of(maskingColumnGroups));
        }
        public Builder maskingColumnLifecycleState(@Nullable String maskingColumnLifecycleState) {
            this.maskingColumnLifecycleState = maskingColumnLifecycleState;
            return this;
        }
        public Builder maskingPolicyId(String maskingPolicyId) {
            this.maskingPolicyId = Objects.requireNonNull(maskingPolicyId);
            return this;
        }
        public Builder objectTypes(@Nullable List<String> objectTypes) {
            this.objectTypes = objectTypes;
            return this;
        }
        public Builder objectTypes(String... objectTypes) {
            return objectTypes(List.of(objectTypes));
        }
        public Builder objects(@Nullable List<String> objects) {
            this.objects = objects;
            return this;
        }
        public Builder objects(String... objects) {
            return objects(List.of(objects));
        }
        public Builder schemaNames(@Nullable List<String> schemaNames) {
            this.schemaNames = schemaNames;
            return this;
        }
        public Builder schemaNames(String... schemaNames) {
            return schemaNames(List.of(schemaNames));
        }
        public Builder sensitiveTypeId(@Nullable String sensitiveTypeId) {
            this.sensitiveTypeId = sensitiveTypeId;
            return this;
        }
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {
            this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {
            this.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }
        public Builder timeUpdatedGreaterThanOrEqualTo(@Nullable String timeUpdatedGreaterThanOrEqualTo) {
            this.timeUpdatedGreaterThanOrEqualTo = timeUpdatedGreaterThanOrEqualTo;
            return this;
        }
        public Builder timeUpdatedLessThan(@Nullable String timeUpdatedLessThan) {
            this.timeUpdatedLessThan = timeUpdatedLessThan;
            return this;
        }        public GetMaskingPoliciesMaskingColumnsResult build() {
            return new GetMaskingPoliciesMaskingColumnsResult(columnNames, dataTypes, filters, id, isMaskingEnabled, isSeedRequired, maskingColumnCollections, maskingColumnGroups, maskingColumnLifecycleState, maskingPolicyId, objectTypes, objects, schemaNames, sensitiveTypeId, timeCreatedGreaterThanOrEqualTo, timeCreatedLessThan, timeUpdatedGreaterThanOrEqualTo, timeUpdatedLessThan);
        }
    }
}
