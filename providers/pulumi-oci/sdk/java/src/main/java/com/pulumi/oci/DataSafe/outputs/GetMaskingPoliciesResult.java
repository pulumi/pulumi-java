// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataSafe.outputs.GetMaskingPoliciesFilter;
import com.pulumi.oci.DataSafe.outputs.GetMaskingPoliciesMaskingPolicyCollection;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetMaskingPoliciesResult {
    private final @Nullable String accessLevel;
    /**
     * @return The OCID of the compartment that contains the masking policy.
     * 
     */
    private final String compartmentId;
    private final @Nullable Boolean compartmentIdInSubtree;
    /**
     * @return The display name of the masking policy.
     * 
     */
    private final @Nullable String displayName;
    private final @Nullable List<GetMaskingPoliciesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of masking_policy_collection.
     * 
     */
    private final List<GetMaskingPoliciesMaskingPolicyCollection> maskingPolicyCollections;
    private final @Nullable String maskingPolicyId;
    /**
     * @return The OCID of the sensitive data model that&#39;s used as the source of masking columns.
     * 
     */
    private final @Nullable String sensitiveDataModelId;
    /**
     * @return The current state of the masking policy.
     * 
     */
    private final @Nullable String state;
    /**
     * @return The OCID of the target database that&#39;s used as the source of masking columns.
     * 
     */
    private final @Nullable String targetId;
    private final @Nullable String timeCreatedGreaterThanOrEqualTo;
    private final @Nullable String timeCreatedLessThan;

    @CustomType.Constructor
    private GetMaskingPoliciesResult(
        @CustomType.Parameter("accessLevel") @Nullable String accessLevel,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("compartmentIdInSubtree") @Nullable Boolean compartmentIdInSubtree,
        @CustomType.Parameter("displayName") @Nullable String displayName,
        @CustomType.Parameter("filters") @Nullable List<GetMaskingPoliciesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("maskingPolicyCollections") List<GetMaskingPoliciesMaskingPolicyCollection> maskingPolicyCollections,
        @CustomType.Parameter("maskingPolicyId") @Nullable String maskingPolicyId,
        @CustomType.Parameter("sensitiveDataModelId") @Nullable String sensitiveDataModelId,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("targetId") @Nullable String targetId,
        @CustomType.Parameter("timeCreatedGreaterThanOrEqualTo") @Nullable String timeCreatedGreaterThanOrEqualTo,
        @CustomType.Parameter("timeCreatedLessThan") @Nullable String timeCreatedLessThan) {
        this.accessLevel = accessLevel;
        this.compartmentId = compartmentId;
        this.compartmentIdInSubtree = compartmentIdInSubtree;
        this.displayName = displayName;
        this.filters = filters;
        this.id = id;
        this.maskingPolicyCollections = maskingPolicyCollections;
        this.maskingPolicyId = maskingPolicyId;
        this.sensitiveDataModelId = sensitiveDataModelId;
        this.state = state;
        this.targetId = targetId;
        this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
        this.timeCreatedLessThan = timeCreatedLessThan;
    }

    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }
    /**
     * @return The OCID of the compartment that contains the masking policy.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public Optional<Boolean> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }
    /**
     * @return The display name of the masking policy.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }
    public List<GetMaskingPoliciesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of masking_policy_collection.
     * 
     */
    public List<GetMaskingPoliciesMaskingPolicyCollection> maskingPolicyCollections() {
        return this.maskingPolicyCollections;
    }
    public Optional<String> maskingPolicyId() {
        return Optional.ofNullable(this.maskingPolicyId);
    }
    /**
     * @return The OCID of the sensitive data model that&#39;s used as the source of masking columns.
     * 
     */
    public Optional<String> sensitiveDataModelId() {
        return Optional.ofNullable(this.sensitiveDataModelId);
    }
    /**
     * @return The current state of the masking policy.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The OCID of the target database that&#39;s used as the source of masking columns.
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }
    public Optional<String> timeCreatedGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.timeCreatedGreaterThanOrEqualTo);
    }
    public Optional<String> timeCreatedLessThan() {
        return Optional.ofNullable(this.timeCreatedLessThan);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMaskingPoliciesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accessLevel;
        private String compartmentId;
        private @Nullable Boolean compartmentIdInSubtree;
        private @Nullable String displayName;
        private @Nullable List<GetMaskingPoliciesFilter> filters;
        private String id;
        private List<GetMaskingPoliciesMaskingPolicyCollection> maskingPolicyCollections;
        private @Nullable String maskingPolicyId;
        private @Nullable String sensitiveDataModelId;
        private @Nullable String state;
        private @Nullable String targetId;
        private @Nullable String timeCreatedGreaterThanOrEqualTo;
        private @Nullable String timeCreatedLessThan;

        public Builder() {
    	      // Empty
        }

        public Builder(GetMaskingPoliciesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessLevel = defaults.accessLevel;
    	      this.compartmentId = defaults.compartmentId;
    	      this.compartmentIdInSubtree = defaults.compartmentIdInSubtree;
    	      this.displayName = defaults.displayName;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.maskingPolicyCollections = defaults.maskingPolicyCollections;
    	      this.maskingPolicyId = defaults.maskingPolicyId;
    	      this.sensitiveDataModelId = defaults.sensitiveDataModelId;
    	      this.state = defaults.state;
    	      this.targetId = defaults.targetId;
    	      this.timeCreatedGreaterThanOrEqualTo = defaults.timeCreatedGreaterThanOrEqualTo;
    	      this.timeCreatedLessThan = defaults.timeCreatedLessThan;
        }

        public Builder accessLevel(@Nullable String accessLevel) {
            this.accessLevel = accessLevel;
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            this.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }
        public Builder displayName(@Nullable String displayName) {
            this.displayName = displayName;
            return this;
        }
        public Builder filters(@Nullable List<GetMaskingPoliciesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetMaskingPoliciesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder maskingPolicyCollections(List<GetMaskingPoliciesMaskingPolicyCollection> maskingPolicyCollections) {
            this.maskingPolicyCollections = Objects.requireNonNull(maskingPolicyCollections);
            return this;
        }
        public Builder maskingPolicyCollections(GetMaskingPoliciesMaskingPolicyCollection... maskingPolicyCollections) {
            return maskingPolicyCollections(List.of(maskingPolicyCollections));
        }
        public Builder maskingPolicyId(@Nullable String maskingPolicyId) {
            this.maskingPolicyId = maskingPolicyId;
            return this;
        }
        public Builder sensitiveDataModelId(@Nullable String sensitiveDataModelId) {
            this.sensitiveDataModelId = sensitiveDataModelId;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder targetId(@Nullable String targetId) {
            this.targetId = targetId;
            return this;
        }
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {
            this.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {
            this.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }        public GetMaskingPoliciesResult build() {
            return new GetMaskingPoliciesResult(accessLevel, compartmentId, compartmentIdInSubtree, displayName, filters, id, maskingPolicyCollections, maskingPolicyId, sensitiveDataModelId, state, targetId, timeCreatedGreaterThanOrEqualTo, timeCreatedLessThan);
        }
    }
}
