// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetInstancesInstancePlatformConfig {
    /**
     * @return Whether the Measured Boot is to be enabled on the instance
     * 
     */
    private final Boolean isMeasuredBootEnabled;
    /**
     * @return Whether the Secure Boot is to be enabled on the instance
     * 
     */
    private final Boolean isSecureBootEnabled;
    /**
     * @return Whether the Trusted Platform Module (TPM) is to be enabled on the instance
     * 
     */
    private final Boolean isTrustedPlatformModuleEnabled;
    /**
     * @return The number of NUMA nodes per socket (NPS).
     * 
     */
    private final String numaNodesPerSocket;
    /**
     * @return (Required) The type of action to run when the instance is interrupted for eviction.
     * 
     */
    private final String type;

    @CustomType.Constructor
    private GetInstancesInstancePlatformConfig(
        @CustomType.Parameter("isMeasuredBootEnabled") Boolean isMeasuredBootEnabled,
        @CustomType.Parameter("isSecureBootEnabled") Boolean isSecureBootEnabled,
        @CustomType.Parameter("isTrustedPlatformModuleEnabled") Boolean isTrustedPlatformModuleEnabled,
        @CustomType.Parameter("numaNodesPerSocket") String numaNodesPerSocket,
        @CustomType.Parameter("type") String type) {
        this.isMeasuredBootEnabled = isMeasuredBootEnabled;
        this.isSecureBootEnabled = isSecureBootEnabled;
        this.isTrustedPlatformModuleEnabled = isTrustedPlatformModuleEnabled;
        this.numaNodesPerSocket = numaNodesPerSocket;
        this.type = type;
    }

    /**
     * @return Whether the Measured Boot is to be enabled on the instance
     * 
     */
    public Boolean isMeasuredBootEnabled() {
        return this.isMeasuredBootEnabled;
    }
    /**
     * @return Whether the Secure Boot is to be enabled on the instance
     * 
     */
    public Boolean isSecureBootEnabled() {
        return this.isSecureBootEnabled;
    }
    /**
     * @return Whether the Trusted Platform Module (TPM) is to be enabled on the instance
     * 
     */
    public Boolean isTrustedPlatformModuleEnabled() {
        return this.isTrustedPlatformModuleEnabled;
    }
    /**
     * @return The number of NUMA nodes per socket (NPS).
     * 
     */
    public String numaNodesPerSocket() {
        return this.numaNodesPerSocket;
    }
    /**
     * @return (Required) The type of action to run when the instance is interrupted for eviction.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetInstancesInstancePlatformConfig defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Boolean isMeasuredBootEnabled;
        private Boolean isSecureBootEnabled;
        private Boolean isTrustedPlatformModuleEnabled;
        private String numaNodesPerSocket;
        private String type;

        public Builder() {
    	      // Empty
        }

        public Builder(GetInstancesInstancePlatformConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isMeasuredBootEnabled = defaults.isMeasuredBootEnabled;
    	      this.isSecureBootEnabled = defaults.isSecureBootEnabled;
    	      this.isTrustedPlatformModuleEnabled = defaults.isTrustedPlatformModuleEnabled;
    	      this.numaNodesPerSocket = defaults.numaNodesPerSocket;
    	      this.type = defaults.type;
        }

        public Builder isMeasuredBootEnabled(Boolean isMeasuredBootEnabled) {
            this.isMeasuredBootEnabled = Objects.requireNonNull(isMeasuredBootEnabled);
            return this;
        }
        public Builder isSecureBootEnabled(Boolean isSecureBootEnabled) {
            this.isSecureBootEnabled = Objects.requireNonNull(isSecureBootEnabled);
            return this;
        }
        public Builder isTrustedPlatformModuleEnabled(Boolean isTrustedPlatformModuleEnabled) {
            this.isTrustedPlatformModuleEnabled = Objects.requireNonNull(isTrustedPlatformModuleEnabled);
            return this;
        }
        public Builder numaNodesPerSocket(String numaNodesPerSocket) {
            this.numaNodesPerSocket = Objects.requireNonNull(numaNodesPerSocket);
            return this;
        }
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }        public GetInstancesInstancePlatformConfig build() {
            return new GetInstancesInstancePlatformConfig(isMeasuredBootEnabled, isSecureBootEnabled, isTrustedPlatformModuleEnabled, numaNodesPerSocket, type);
        }
    }
}
