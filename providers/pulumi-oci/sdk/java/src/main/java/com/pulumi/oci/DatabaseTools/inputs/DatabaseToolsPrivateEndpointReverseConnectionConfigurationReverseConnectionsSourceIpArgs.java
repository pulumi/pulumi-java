// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DatabaseTools.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs Empty = new DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs();

    /**
     * The IP address in the customer&#39;s VCN to be used as the source IP for reverse connection packets traveling from the customer&#39;s VCN to the service&#39;s VCN.
     * 
     */
    @Import(name="sourceIp")
    private @Nullable Output<String> sourceIp;

    /**
     * @return The IP address in the customer&#39;s VCN to be used as the source IP for reverse connection packets traveling from the customer&#39;s VCN to the service&#39;s VCN.
     * 
     */
    public Optional<Output<String>> sourceIp() {
        return Optional.ofNullable(this.sourceIp);
    }

    private DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs() {}

    private DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs(DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs $) {
        this.sourceIp = $.sourceIp;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs $;

        public Builder() {
            $ = new DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs();
        }

        public Builder(DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs defaults) {
            $ = new DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param sourceIp The IP address in the customer&#39;s VCN to be used as the source IP for reverse connection packets traveling from the customer&#39;s VCN to the service&#39;s VCN.
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(@Nullable Output<String> sourceIp) {
            $.sourceIp = sourceIp;
            return this;
        }

        /**
         * @param sourceIp The IP address in the customer&#39;s VCN to be used as the source IP for reverse connection packets traveling from the customer&#39;s VCN to the service&#39;s VCN.
         * 
         * @return builder
         * 
         */
        public Builder sourceIp(String sourceIp) {
            return sourceIp(Output.of(sourceIp));
        }

        public DatabaseToolsPrivateEndpointReverseConnectionConfigurationReverseConnectionsSourceIpArgs build() {
            return $;
        }
    }

}
