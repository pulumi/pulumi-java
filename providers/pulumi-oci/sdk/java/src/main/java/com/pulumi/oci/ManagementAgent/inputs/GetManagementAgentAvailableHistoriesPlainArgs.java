// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ManagementAgent.inputs.GetManagementAgentAvailableHistoriesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagementAgentAvailableHistoriesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagementAgentAvailableHistoriesPlainArgs Empty = new GetManagementAgentAvailableHistoriesPlainArgs();

    @Import(name="filters")
    private @Nullable List<GetManagementAgentAvailableHistoriesFilter> filters;

    public Optional<List<GetManagementAgentAvailableHistoriesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Unique Management Agent identifier
     * 
     */
    @Import(name="managementAgentId", required=true)
    private String managementAgentId;

    /**
     * @return Unique Management Agent identifier
     * 
     */
    public String managementAgentId() {
        return this.managementAgentId;
    }

    /**
     * Filter to limit the availability history results to that of time after the input time including the boundary record. Defaulted to current date minus one year. The date and time to be given as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    @Import(name="timeAvailabilityStatusEndedGreaterThan")
    private @Nullable String timeAvailabilityStatusEndedGreaterThan;

    /**
     * @return Filter to limit the availability history results to that of time after the input time including the boundary record. Defaulted to current date minus one year. The date and time to be given as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    public Optional<String> timeAvailabilityStatusEndedGreaterThan() {
        return Optional.ofNullable(this.timeAvailabilityStatusEndedGreaterThan);
    }

    /**
     * Filter to limit the availability history results to that of time before the input time including the boundary record Defaulted to current date. The date and time to be given as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    @Import(name="timeAvailabilityStatusStartedLessThan")
    private @Nullable String timeAvailabilityStatusStartedLessThan;

    /**
     * @return Filter to limit the availability history results to that of time before the input time including the boundary record Defaulted to current date. The date and time to be given as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
     * 
     */
    public Optional<String> timeAvailabilityStatusStartedLessThan() {
        return Optional.ofNullable(this.timeAvailabilityStatusStartedLessThan);
    }

    private GetManagementAgentAvailableHistoriesPlainArgs() {}

    private GetManagementAgentAvailableHistoriesPlainArgs(GetManagementAgentAvailableHistoriesPlainArgs $) {
        this.filters = $.filters;
        this.managementAgentId = $.managementAgentId;
        this.timeAvailabilityStatusEndedGreaterThan = $.timeAvailabilityStatusEndedGreaterThan;
        this.timeAvailabilityStatusStartedLessThan = $.timeAvailabilityStatusStartedLessThan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagementAgentAvailableHistoriesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagementAgentAvailableHistoriesPlainArgs $;

        public Builder() {
            $ = new GetManagementAgentAvailableHistoriesPlainArgs();
        }

        public Builder(GetManagementAgentAvailableHistoriesPlainArgs defaults) {
            $ = new GetManagementAgentAvailableHistoriesPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder filters(@Nullable List<GetManagementAgentAvailableHistoriesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetManagementAgentAvailableHistoriesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param managementAgentId Unique Management Agent identifier
         * 
         * @return builder
         * 
         */
        public Builder managementAgentId(String managementAgentId) {
            $.managementAgentId = managementAgentId;
            return this;
        }

        /**
         * @param timeAvailabilityStatusEndedGreaterThan Filter to limit the availability history results to that of time after the input time including the boundary record. Defaulted to current date minus one year. The date and time to be given as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeAvailabilityStatusEndedGreaterThan(@Nullable String timeAvailabilityStatusEndedGreaterThan) {
            $.timeAvailabilityStatusEndedGreaterThan = timeAvailabilityStatusEndedGreaterThan;
            return this;
        }

        /**
         * @param timeAvailabilityStatusStartedLessThan Filter to limit the availability history results to that of time before the input time including the boundary record Defaulted to current date. The date and time to be given as described in [RFC 3339](https://tools.ietf.org/rfc/rfc3339), section 14.29.
         * 
         * @return builder
         * 
         */
        public Builder timeAvailabilityStatusStartedLessThan(@Nullable String timeAvailabilityStatusStartedLessThan) {
            $.timeAvailabilityStatusStartedLessThan = timeAvailabilityStatusStartedLessThan;
            return this;
        }

        public GetManagementAgentAvailableHistoriesPlainArgs build() {
            $.managementAgentId = Objects.requireNonNull($.managementAgentId, "expected parameter 'managementAgentId' to be non-null");
            return $;
        }
    }

}
