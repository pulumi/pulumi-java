// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Artifacts.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Artifacts.inputs.GetGenericArtifactsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGenericArtifactsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGenericArtifactsArgs Empty = new GetGenericArtifactsArgs();

    /**
     * Filter results by a prefix for the `artifactPath` and and return artifacts that begin with the specified prefix in their path.
     * 
     */
    @Import(name="artifactPath")
    private @Nullable Output<String> artifactPath;

    /**
     * @return Filter results by a prefix for the `artifactPath` and and return artifacts that begin with the specified prefix in their path.
     * 
     */
    public Optional<Output<String>> artifactPath() {
        return Optional.ofNullable(this.artifactPath);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only resources that match the given display name exactly.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the given display name exactly.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetGenericArtifactsFilterArgs>> filters;

    public Optional<Output<List<GetGenericArtifactsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return the resources for the specified OCID.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return A filter to return the resources for the specified OCID.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * A filter to return the artifacts only for the specified repository OCID.
     * 
     */
    @Import(name="repositoryId", required=true)
    private Output<String> repositoryId;

    /**
     * @return A filter to return the artifacts only for the specified repository OCID.
     * 
     */
    public Output<String> repositoryId() {
        return this.repositoryId;
    }

    /**
     * Filter results by a specified SHA256 digest for the artifact.
     * 
     */
    @Import(name="sha256")
    private @Nullable Output<String> sha256;

    /**
     * @return Filter results by a specified SHA256 digest for the artifact.
     * 
     */
    public Optional<Output<String>> sha256() {
        return Optional.ofNullable(this.sha256);
    }

    /**
     * A filter to return only resources that match the given lifecycle state name exactly.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to return only resources that match the given lifecycle state name exactly.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Filter results by a prefix for `version` and return artifacts that that begin with the specified prefix in their version.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Filter results by a prefix for `version` and return artifacts that that begin with the specified prefix in their version.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private GetGenericArtifactsArgs() {}

    private GetGenericArtifactsArgs(GetGenericArtifactsArgs $) {
        this.artifactPath = $.artifactPath;
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.id = $.id;
        this.repositoryId = $.repositoryId;
        this.sha256 = $.sha256;
        this.state = $.state;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGenericArtifactsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGenericArtifactsArgs $;

        public Builder() {
            $ = new GetGenericArtifactsArgs();
        }

        public Builder(GetGenericArtifactsArgs defaults) {
            $ = new GetGenericArtifactsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param artifactPath Filter results by a prefix for the `artifactPath` and and return artifacts that begin with the specified prefix in their path.
         * 
         * @return builder
         * 
         */
        public Builder artifactPath(@Nullable Output<String> artifactPath) {
            $.artifactPath = artifactPath;
            return this;
        }

        /**
         * @param artifactPath Filter results by a prefix for the `artifactPath` and and return artifacts that begin with the specified prefix in their path.
         * 
         * @return builder
         * 
         */
        public Builder artifactPath(String artifactPath) {
            return artifactPath(Output.of(artifactPath));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName A filter to return only resources that match the given display name exactly.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the given display name exactly.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetGenericArtifactsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetGenericArtifactsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetGenericArtifactsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param id A filter to return the resources for the specified OCID.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id A filter to return the resources for the specified OCID.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param repositoryId A filter to return the artifacts only for the specified repository OCID.
         * 
         * @return builder
         * 
         */
        public Builder repositoryId(Output<String> repositoryId) {
            $.repositoryId = repositoryId;
            return this;
        }

        /**
         * @param repositoryId A filter to return the artifacts only for the specified repository OCID.
         * 
         * @return builder
         * 
         */
        public Builder repositoryId(String repositoryId) {
            return repositoryId(Output.of(repositoryId));
        }

        /**
         * @param sha256 Filter results by a specified SHA256 digest for the artifact.
         * 
         * @return builder
         * 
         */
        public Builder sha256(@Nullable Output<String> sha256) {
            $.sha256 = sha256;
            return this;
        }

        /**
         * @param sha256 Filter results by a specified SHA256 digest for the artifact.
         * 
         * @return builder
         * 
         */
        public Builder sha256(String sha256) {
            return sha256(Output.of(sha256));
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state name exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state name exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param version Filter results by a prefix for `version` and return artifacts that that begin with the specified prefix in their version.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Filter results by a prefix for `version` and return artifacts that that begin with the specified prefix in their version.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public GetGenericArtifactsArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.repositoryId = Objects.requireNonNull($.repositoryId, "expected parameter 'repositoryId' to be non-null");
            return $;
        }
    }

}
