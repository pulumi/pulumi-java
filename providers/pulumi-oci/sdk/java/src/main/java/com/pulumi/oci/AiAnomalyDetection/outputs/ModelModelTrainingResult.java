// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.AiAnomalyDetection.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.AiAnomalyDetection.outputs.ModelModelTrainingResultRowReductionDetail;
import com.pulumi.oci.AiAnomalyDetection.outputs.ModelModelTrainingResultSignalDetail;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModelModelTrainingResult {
    /**
     * @return Accuracy metric for a signal.
     * 
     */
    private final @Nullable Double fap;
    /**
     * @return A boolean value to indicate if train goal/targetFap is achieved for trained model
     * 
     */
    private final @Nullable Boolean isTrainingGoalAchieved;
    /**
     * @return The model accuracy metric on timestamp level.
     * 
     */
    private final @Nullable Double multivariateFap;
    /**
     * @return Information regarding how/what row reduction methods will be applied. If this property is not present or is null, then it means row reduction is not applied.
     * 
     */
    private final @Nullable List<ModelModelTrainingResultRowReductionDetail> rowReductionDetails;
    /**
     * @return The list of signal details.
     * 
     */
    private final @Nullable List<ModelModelTrainingResultSignalDetail> signalDetails;
    /**
     * @return A warning message to explain the reason when targetFap cannot be achieved for trained model
     * 
     */
    private final @Nullable String warning;

    @CustomType.Constructor
    private ModelModelTrainingResult(
        @CustomType.Parameter("fap") @Nullable Double fap,
        @CustomType.Parameter("isTrainingGoalAchieved") @Nullable Boolean isTrainingGoalAchieved,
        @CustomType.Parameter("multivariateFap") @Nullable Double multivariateFap,
        @CustomType.Parameter("rowReductionDetails") @Nullable List<ModelModelTrainingResultRowReductionDetail> rowReductionDetails,
        @CustomType.Parameter("signalDetails") @Nullable List<ModelModelTrainingResultSignalDetail> signalDetails,
        @CustomType.Parameter("warning") @Nullable String warning) {
        this.fap = fap;
        this.isTrainingGoalAchieved = isTrainingGoalAchieved;
        this.multivariateFap = multivariateFap;
        this.rowReductionDetails = rowReductionDetails;
        this.signalDetails = signalDetails;
        this.warning = warning;
    }

    /**
     * @return Accuracy metric for a signal.
     * 
     */
    public Optional<Double> fap() {
        return Optional.ofNullable(this.fap);
    }
    /**
     * @return A boolean value to indicate if train goal/targetFap is achieved for trained model
     * 
     */
    public Optional<Boolean> isTrainingGoalAchieved() {
        return Optional.ofNullable(this.isTrainingGoalAchieved);
    }
    /**
     * @return The model accuracy metric on timestamp level.
     * 
     */
    public Optional<Double> multivariateFap() {
        return Optional.ofNullable(this.multivariateFap);
    }
    /**
     * @return Information regarding how/what row reduction methods will be applied. If this property is not present or is null, then it means row reduction is not applied.
     * 
     */
    public List<ModelModelTrainingResultRowReductionDetail> rowReductionDetails() {
        return this.rowReductionDetails == null ? List.of() : this.rowReductionDetails;
    }
    /**
     * @return The list of signal details.
     * 
     */
    public List<ModelModelTrainingResultSignalDetail> signalDetails() {
        return this.signalDetails == null ? List.of() : this.signalDetails;
    }
    /**
     * @return A warning message to explain the reason when targetFap cannot be achieved for trained model
     * 
     */
    public Optional<String> warning() {
        return Optional.ofNullable(this.warning);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModelModelTrainingResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Double fap;
        private @Nullable Boolean isTrainingGoalAchieved;
        private @Nullable Double multivariateFap;
        private @Nullable List<ModelModelTrainingResultRowReductionDetail> rowReductionDetails;
        private @Nullable List<ModelModelTrainingResultSignalDetail> signalDetails;
        private @Nullable String warning;

        public Builder() {
    	      // Empty
        }

        public Builder(ModelModelTrainingResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fap = defaults.fap;
    	      this.isTrainingGoalAchieved = defaults.isTrainingGoalAchieved;
    	      this.multivariateFap = defaults.multivariateFap;
    	      this.rowReductionDetails = defaults.rowReductionDetails;
    	      this.signalDetails = defaults.signalDetails;
    	      this.warning = defaults.warning;
        }

        public Builder fap(@Nullable Double fap) {
            this.fap = fap;
            return this;
        }
        public Builder isTrainingGoalAchieved(@Nullable Boolean isTrainingGoalAchieved) {
            this.isTrainingGoalAchieved = isTrainingGoalAchieved;
            return this;
        }
        public Builder multivariateFap(@Nullable Double multivariateFap) {
            this.multivariateFap = multivariateFap;
            return this;
        }
        public Builder rowReductionDetails(@Nullable List<ModelModelTrainingResultRowReductionDetail> rowReductionDetails) {
            this.rowReductionDetails = rowReductionDetails;
            return this;
        }
        public Builder rowReductionDetails(ModelModelTrainingResultRowReductionDetail... rowReductionDetails) {
            return rowReductionDetails(List.of(rowReductionDetails));
        }
        public Builder signalDetails(@Nullable List<ModelModelTrainingResultSignalDetail> signalDetails) {
            this.signalDetails = signalDetails;
            return this;
        }
        public Builder signalDetails(ModelModelTrainingResultSignalDetail... signalDetails) {
            return signalDetails(List.of(signalDetails));
        }
        public Builder warning(@Nullable String warning) {
            this.warning = warning;
            return this;
        }        public ModelModelTrainingResult build() {
            return new ModelModelTrainingResult(fap, isTrainingGoalAchieved, multivariateFap, rowReductionDetails, signalDetails, warning);
        }
    }
}
