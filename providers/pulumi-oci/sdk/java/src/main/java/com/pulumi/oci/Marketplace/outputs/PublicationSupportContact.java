// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PublicationSupportContact {
    /**
     * @return (Updatable) The email of the contact.
     * 
     */
    private final @Nullable String email;
    /**
     * @return (Updatable) The name of the contact.
     * 
     */
    private final @Nullable String name;
    /**
     * @return (Updatable) The phone number of the contact.
     * 
     */
    private final @Nullable String phone;
    /**
     * @return (Updatable) The email subject line to use when contacting support.
     * 
     */
    private final @Nullable String subject;

    @CustomType.Constructor
    private PublicationSupportContact(
        @CustomType.Parameter("email") @Nullable String email,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("phone") @Nullable String phone,
        @CustomType.Parameter("subject") @Nullable String subject) {
        this.email = email;
        this.name = name;
        this.phone = phone;
        this.subject = subject;
    }

    /**
     * @return (Updatable) The email of the contact.
     * 
     */
    public Optional<String> email() {
        return Optional.ofNullable(this.email);
    }
    /**
     * @return (Updatable) The name of the contact.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return (Updatable) The phone number of the contact.
     * 
     */
    public Optional<String> phone() {
        return Optional.ofNullable(this.phone);
    }
    /**
     * @return (Updatable) The email subject line to use when contacting support.
     * 
     */
    public Optional<String> subject() {
        return Optional.ofNullable(this.subject);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PublicationSupportContact defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String email;
        private @Nullable String name;
        private @Nullable String phone;
        private @Nullable String subject;

        public Builder() {
    	      // Empty
        }

        public Builder(PublicationSupportContact defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.email = defaults.email;
    	      this.name = defaults.name;
    	      this.phone = defaults.phone;
    	      this.subject = defaults.subject;
        }

        public Builder email(@Nullable String email) {
            this.email = email;
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder phone(@Nullable String phone) {
            this.phone = phone;
            return this;
        }
        public Builder subject(@Nullable String subject) {
            this.subject = subject;
            return this;
        }        public PublicationSupportContact build() {
            return new PublicationSupportContact(email, name, phone, subject);
        }
    }
}
