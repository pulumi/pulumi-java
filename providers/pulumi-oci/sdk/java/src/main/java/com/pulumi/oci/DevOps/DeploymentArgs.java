// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DevOps.inputs.DeploymentDeployArtifactOverrideArgumentsArgs;
import com.pulumi.oci.DevOps.inputs.DeploymentDeploymentArgumentsArgs;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentArgs Empty = new DeploymentArgs();

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * Specifies the list of artifact override arguments at the time of deployment.
     * 
     */
    @Import(name="deployArtifactOverrideArguments")
    private @Nullable Output<DeploymentDeployArtifactOverrideArgumentsArgs> deployArtifactOverrideArguments;

    /**
     * @return Specifies the list of artifact override arguments at the time of deployment.
     * 
     */
    public Optional<Output<DeploymentDeployArtifactOverrideArgumentsArgs>> deployArtifactOverrideArguments() {
        return Optional.ofNullable(this.deployArtifactOverrideArguments);
    }

    /**
     * The OCID of a pipeline.
     * 
     */
    @Import(name="deployPipelineId", required=true)
    private Output<String> deployPipelineId;

    /**
     * @return The OCID of a pipeline.
     * 
     */
    public Output<String> deployPipelineId() {
        return this.deployPipelineId;
    }

    /**
     * Specifies the OCID of the stage to be redeployed.
     * 
     */
    @Import(name="deployStageId")
    private @Nullable Output<String> deployStageId;

    /**
     * @return Specifies the OCID of the stage to be redeployed.
     * 
     */
    public Optional<Output<String>> deployStageId() {
        return Optional.ofNullable(this.deployStageId);
    }

    /**
     * Specifies list of arguments passed along with the deployment.
     * 
     */
    @Import(name="deploymentArguments")
    private @Nullable Output<DeploymentDeploymentArgumentsArgs> deploymentArguments;

    /**
     * @return Specifies list of arguments passed along with the deployment.
     * 
     */
    public Optional<Output<DeploymentDeploymentArgumentsArgs>> deploymentArguments() {
        return Optional.ofNullable(this.deploymentArguments);
    }

    /**
     * (Updatable) Specifies type for this deployment.
     * 
     */
    @Import(name="deploymentType", required=true)
    private Output<String> deploymentType;

    /**
     * @return (Updatable) Specifies type for this deployment.
     * 
     */
    public Output<String> deploymentType() {
        return this.deploymentType;
    }

    /**
     * (Updatable) Deployment display name. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) Deployment display name. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * Specifies the OCID of the previous deployment to be redeployed.
     * 
     */
    @Import(name="previousDeploymentId")
    private @Nullable Output<String> previousDeploymentId;

    /**
     * @return Specifies the OCID of the previous deployment to be redeployed.
     * 
     */
    public Optional<Output<String>> previousDeploymentId() {
        return Optional.ofNullable(this.previousDeploymentId);
    }

    private DeploymentArgs() {}

    private DeploymentArgs(DeploymentArgs $) {
        this.definedTags = $.definedTags;
        this.deployArtifactOverrideArguments = $.deployArtifactOverrideArguments;
        this.deployPipelineId = $.deployPipelineId;
        this.deployStageId = $.deployStageId;
        this.deploymentArguments = $.deploymentArguments;
        this.deploymentType = $.deploymentType;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.previousDeploymentId = $.previousDeploymentId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentArgs $;

        public Builder() {
            $ = new DeploymentArgs();
        }

        public Builder(DeploymentArgs defaults) {
            $ = new DeploymentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param deployArtifactOverrideArguments Specifies the list of artifact override arguments at the time of deployment.
         * 
         * @return builder
         * 
         */
        public Builder deployArtifactOverrideArguments(@Nullable Output<DeploymentDeployArtifactOverrideArgumentsArgs> deployArtifactOverrideArguments) {
            $.deployArtifactOverrideArguments = deployArtifactOverrideArguments;
            return this;
        }

        /**
         * @param deployArtifactOverrideArguments Specifies the list of artifact override arguments at the time of deployment.
         * 
         * @return builder
         * 
         */
        public Builder deployArtifactOverrideArguments(DeploymentDeployArtifactOverrideArgumentsArgs deployArtifactOverrideArguments) {
            return deployArtifactOverrideArguments(Output.of(deployArtifactOverrideArguments));
        }

        /**
         * @param deployPipelineId The OCID of a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder deployPipelineId(Output<String> deployPipelineId) {
            $.deployPipelineId = deployPipelineId;
            return this;
        }

        /**
         * @param deployPipelineId The OCID of a pipeline.
         * 
         * @return builder
         * 
         */
        public Builder deployPipelineId(String deployPipelineId) {
            return deployPipelineId(Output.of(deployPipelineId));
        }

        /**
         * @param deployStageId Specifies the OCID of the stage to be redeployed.
         * 
         * @return builder
         * 
         */
        public Builder deployStageId(@Nullable Output<String> deployStageId) {
            $.deployStageId = deployStageId;
            return this;
        }

        /**
         * @param deployStageId Specifies the OCID of the stage to be redeployed.
         * 
         * @return builder
         * 
         */
        public Builder deployStageId(String deployStageId) {
            return deployStageId(Output.of(deployStageId));
        }

        /**
         * @param deploymentArguments Specifies list of arguments passed along with the deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentArguments(@Nullable Output<DeploymentDeploymentArgumentsArgs> deploymentArguments) {
            $.deploymentArguments = deploymentArguments;
            return this;
        }

        /**
         * @param deploymentArguments Specifies list of arguments passed along with the deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentArguments(DeploymentDeploymentArgumentsArgs deploymentArguments) {
            return deploymentArguments(Output.of(deploymentArguments));
        }

        /**
         * @param deploymentType (Updatable) Specifies type for this deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(Output<String> deploymentType) {
            $.deploymentType = deploymentType;
            return this;
        }

        /**
         * @param deploymentType (Updatable) Specifies type for this deployment.
         * 
         * @return builder
         * 
         */
        public Builder deploymentType(String deploymentType) {
            return deploymentType(Output.of(deploymentType));
        }

        /**
         * @param displayName (Updatable) Deployment display name. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) Deployment display name. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param previousDeploymentId Specifies the OCID of the previous deployment to be redeployed.
         * 
         * @return builder
         * 
         */
        public Builder previousDeploymentId(@Nullable Output<String> previousDeploymentId) {
            $.previousDeploymentId = previousDeploymentId;
            return this;
        }

        /**
         * @param previousDeploymentId Specifies the OCID of the previous deployment to be redeployed.
         * 
         * @return builder
         * 
         */
        public Builder previousDeploymentId(String previousDeploymentId) {
            return previousDeploymentId(Output.of(previousDeploymentId));
        }

        public DeploymentArgs build() {
            $.deployPipelineId = Objects.requireNonNull($.deployPipelineId, "expected parameter 'deployPipelineId' to be non-null");
            $.deploymentType = Objects.requireNonNull($.deploymentType, "expected parameter 'deploymentType' to be non-null");
            return $;
        }
    }

}
