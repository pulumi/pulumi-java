// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.ApmSynthetics.outputs.ConfigScriptParameterMonitorScriptParameter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConfigScriptParameter {
    /**
     * @return If parameter value is default or overwritten.
     * 
     */
    private final @Nullable Boolean isOverwritten;
    /**
     * @return Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
     * 
     */
    private final @Nullable Boolean isSecret;
    /**
     * @return Details of the script parameter that can be used to overwrite the parameter present in the script.
     * 
     */
    private final @Nullable List<ConfigScriptParameterMonitorScriptParameter> monitorScriptParameters;
    /**
     * @return (Updatable) Name of the parameter.
     * 
     */
    private final String paramName;
    /**
     * @return (Updatable) Value of the parameter.
     * 
     */
    private final String paramValue;

    @CustomType.Constructor
    private ConfigScriptParameter(
        @CustomType.Parameter("isOverwritten") @Nullable Boolean isOverwritten,
        @CustomType.Parameter("isSecret") @Nullable Boolean isSecret,
        @CustomType.Parameter("monitorScriptParameters") @Nullable List<ConfigScriptParameterMonitorScriptParameter> monitorScriptParameters,
        @CustomType.Parameter("paramName") String paramName,
        @CustomType.Parameter("paramValue") String paramValue) {
        this.isOverwritten = isOverwritten;
        this.isSecret = isSecret;
        this.monitorScriptParameters = monitorScriptParameters;
        this.paramName = paramName;
        this.paramValue = paramValue;
    }

    /**
     * @return If parameter value is default or overwritten.
     * 
     */
    public Optional<Boolean> isOverwritten() {
        return Optional.ofNullable(this.isOverwritten);
    }
    /**
     * @return Describes if  the parameter value is secret and should be kept confidential. isSecret is specified in either CreateScript or UpdateScript API.
     * 
     */
    public Optional<Boolean> isSecret() {
        return Optional.ofNullable(this.isSecret);
    }
    /**
     * @return Details of the script parameter that can be used to overwrite the parameter present in the script.
     * 
     */
    public List<ConfigScriptParameterMonitorScriptParameter> monitorScriptParameters() {
        return this.monitorScriptParameters == null ? List.of() : this.monitorScriptParameters;
    }
    /**
     * @return (Updatable) Name of the parameter.
     * 
     */
    public String paramName() {
        return this.paramName;
    }
    /**
     * @return (Updatable) Value of the parameter.
     * 
     */
    public String paramValue() {
        return this.paramValue;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConfigScriptParameter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Boolean isOverwritten;
        private @Nullable Boolean isSecret;
        private @Nullable List<ConfigScriptParameterMonitorScriptParameter> monitorScriptParameters;
        private String paramName;
        private String paramValue;

        public Builder() {
    	      // Empty
        }

        public Builder(ConfigScriptParameter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.isOverwritten = defaults.isOverwritten;
    	      this.isSecret = defaults.isSecret;
    	      this.monitorScriptParameters = defaults.monitorScriptParameters;
    	      this.paramName = defaults.paramName;
    	      this.paramValue = defaults.paramValue;
        }

        public Builder isOverwritten(@Nullable Boolean isOverwritten) {
            this.isOverwritten = isOverwritten;
            return this;
        }
        public Builder isSecret(@Nullable Boolean isSecret) {
            this.isSecret = isSecret;
            return this;
        }
        public Builder monitorScriptParameters(@Nullable List<ConfigScriptParameterMonitorScriptParameter> monitorScriptParameters) {
            this.monitorScriptParameters = monitorScriptParameters;
            return this;
        }
        public Builder monitorScriptParameters(ConfigScriptParameterMonitorScriptParameter... monitorScriptParameters) {
            return monitorScriptParameters(List.of(monitorScriptParameters));
        }
        public Builder paramName(String paramName) {
            this.paramName = Objects.requireNonNull(paramName);
            return this;
        }
        public Builder paramValue(String paramValue) {
            this.paramValue = Objects.requireNonNull(paramValue);
            return this;
        }        public ConfigScriptParameter build() {
            return new ConfigScriptParameter(isOverwritten, isSecret, monitorScriptParameters, paramName, paramValue);
        }
    }
}
