// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AutonomousDatabaseBackupState extends com.pulumi.resources.ResourceArgs {

    public static final AutonomousDatabaseBackupState Empty = new AutonomousDatabaseBackupState();

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
     * 
     */
    @Import(name="autonomousDatabaseId")
    private @Nullable Output<String> autonomousDatabaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
     * 
     */
    public Optional<Output<String>> autonomousDatabaseId() {
        return Optional.ofNullable(this.autonomousDatabaseId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The size of the database in terabytes at the time the backup was taken.
     * 
     */
    @Import(name="databaseSizeInTbs")
    private @Nullable Output<Double> databaseSizeInTbs;

    /**
     * @return The size of the database in terabytes at the time the backup was taken.
     * 
     */
    public Optional<Output<Double>> databaseSizeInTbs() {
        return Optional.ofNullable(this.databaseSizeInTbs);
    }

    /**
     * The user-friendly name for the backup. The name does not have to be unique.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The user-friendly name for the backup. The name does not have to be unique.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Indicates whether the backup is user-initiated or automatic.
     * 
     */
    @Import(name="isAutomatic")
    private @Nullable Output<Boolean> isAutomatic;

    /**
     * @return Indicates whether the backup is user-initiated or automatic.
     * 
     */
    public Optional<Output<Boolean>> isAutomatic() {
        return Optional.ofNullable(this.isAutomatic);
    }

    /**
     * Indicates whether the backup can be used to restore the associated Autonomous Database.
     * 
     */
    @Import(name="isRestorable")
    private @Nullable Output<Boolean> isRestorable;

    /**
     * @return Indicates whether the backup can be used to restore the associated Autonomous Database.
     * 
     */
    public Optional<Output<Boolean>> isRestorable() {
        return Optional.ofNullable(this.isRestorable);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     * 
     */
    @Import(name="keyStoreId")
    private @Nullable Output<String> keyStoreId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
     * 
     */
    public Optional<Output<String>> keyStoreId() {
        return Optional.ofNullable(this.keyStoreId);
    }

    /**
     * The wallet name for Oracle Key Vault.
     * 
     */
    @Import(name="keyStoreWalletName")
    private @Nullable Output<String> keyStoreWalletName;

    /**
     * @return The wallet name for Oracle Key Vault.
     * 
     */
    public Optional<Output<String>> keyStoreWalletName() {
        return Optional.ofNullable(this.keyStoreWalletName);
    }

    /**
     * The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    @Import(name="kmsKeyId")
    private @Nullable Output<String> kmsKeyId;

    /**
     * @return The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
     * 
     */
    public Optional<Output<String>> kmsKeyId() {
        return Optional.ofNullable(this.kmsKeyId);
    }

    /**
     * The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
     * 
     */
    @Import(name="kmsKeyVersionId")
    private @Nullable Output<String> kmsKeyVersionId;

    /**
     * @return The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
     * 
     */
    public Optional<Output<String>> kmsKeyVersionId() {
        return Optional.ofNullable(this.kmsKeyVersionId);
    }

    /**
     * Additional information about the current lifecycle state.
     * 
     */
    @Import(name="lifecycleDetails")
    private @Nullable Output<String> lifecycleDetails;

    /**
     * @return Additional information about the current lifecycle state.
     * 
     */
    public Optional<Output<String>> lifecycleDetails() {
        return Optional.ofNullable(this.lifecycleDetails);
    }

    /**
     * The current state of the backup.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the backup.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The date and time the backup completed.
     * 
     */
    @Import(name="timeEnded")
    private @Nullable Output<String> timeEnded;

    /**
     * @return The date and time the backup completed.
     * 
     */
    public Optional<Output<String>> timeEnded() {
        return Optional.ofNullable(this.timeEnded);
    }

    /**
     * The date and time the backup started.
     * 
     */
    @Import(name="timeStarted")
    private @Nullable Output<String> timeStarted;

    /**
     * @return The date and time the backup started.
     * 
     */
    public Optional<Output<String>> timeStarted() {
        return Optional.ofNullable(this.timeStarted);
    }

    /**
     * The type of backup.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of backup.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    @Import(name="vaultId")
    private @Nullable Output<String> vaultId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
     * 
     */
    public Optional<Output<String>> vaultId() {
        return Optional.ofNullable(this.vaultId);
    }

    private AutonomousDatabaseBackupState() {}

    private AutonomousDatabaseBackupState(AutonomousDatabaseBackupState $) {
        this.autonomousDatabaseId = $.autonomousDatabaseId;
        this.compartmentId = $.compartmentId;
        this.databaseSizeInTbs = $.databaseSizeInTbs;
        this.displayName = $.displayName;
        this.isAutomatic = $.isAutomatic;
        this.isRestorable = $.isRestorable;
        this.keyStoreId = $.keyStoreId;
        this.keyStoreWalletName = $.keyStoreWalletName;
        this.kmsKeyId = $.kmsKeyId;
        this.kmsKeyVersionId = $.kmsKeyVersionId;
        this.lifecycleDetails = $.lifecycleDetails;
        this.state = $.state;
        this.timeEnded = $.timeEnded;
        this.timeStarted = $.timeStarted;
        this.type = $.type;
        this.vaultId = $.vaultId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AutonomousDatabaseBackupState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AutonomousDatabaseBackupState $;

        public Builder() {
            $ = new AutonomousDatabaseBackupState();
        }

        public Builder(AutonomousDatabaseBackupState defaults) {
            $ = new AutonomousDatabaseBackupState(Objects.requireNonNull(defaults));
        }

        /**
         * @param autonomousDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseId(@Nullable Output<String> autonomousDatabaseId) {
            $.autonomousDatabaseId = autonomousDatabaseId;
            return this;
        }

        /**
         * @param autonomousDatabaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Autonomous Database backup.
         * 
         * @return builder
         * 
         */
        public Builder autonomousDatabaseId(String autonomousDatabaseId) {
            return autonomousDatabaseId(Output.of(autonomousDatabaseId));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param databaseSizeInTbs The size of the database in terabytes at the time the backup was taken.
         * 
         * @return builder
         * 
         */
        public Builder databaseSizeInTbs(@Nullable Output<Double> databaseSizeInTbs) {
            $.databaseSizeInTbs = databaseSizeInTbs;
            return this;
        }

        /**
         * @param databaseSizeInTbs The size of the database in terabytes at the time the backup was taken.
         * 
         * @return builder
         * 
         */
        public Builder databaseSizeInTbs(Double databaseSizeInTbs) {
            return databaseSizeInTbs(Output.of(databaseSizeInTbs));
        }

        /**
         * @param displayName The user-friendly name for the backup. The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The user-friendly name for the backup. The name does not have to be unique.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param isAutomatic Indicates whether the backup is user-initiated or automatic.
         * 
         * @return builder
         * 
         */
        public Builder isAutomatic(@Nullable Output<Boolean> isAutomatic) {
            $.isAutomatic = isAutomatic;
            return this;
        }

        /**
         * @param isAutomatic Indicates whether the backup is user-initiated or automatic.
         * 
         * @return builder
         * 
         */
        public Builder isAutomatic(Boolean isAutomatic) {
            return isAutomatic(Output.of(isAutomatic));
        }

        /**
         * @param isRestorable Indicates whether the backup can be used to restore the associated Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder isRestorable(@Nullable Output<Boolean> isRestorable) {
            $.isRestorable = isRestorable;
            return this;
        }

        /**
         * @param isRestorable Indicates whether the backup can be used to restore the associated Autonomous Database.
         * 
         * @return builder
         * 
         */
        public Builder isRestorable(Boolean isRestorable) {
            return isRestorable(Output.of(isRestorable));
        }

        /**
         * @param keyStoreId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreId(@Nullable Output<String> keyStoreId) {
            $.keyStoreId = keyStoreId;
            return this;
        }

        /**
         * @param keyStoreId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the key store.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreId(String keyStoreId) {
            return keyStoreId(Output.of(keyStoreId));
        }

        /**
         * @param keyStoreWalletName The wallet name for Oracle Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreWalletName(@Nullable Output<String> keyStoreWalletName) {
            $.keyStoreWalletName = keyStoreWalletName;
            return this;
        }

        /**
         * @param keyStoreWalletName The wallet name for Oracle Key Vault.
         * 
         * @return builder
         * 
         */
        public Builder keyStoreWalletName(String keyStoreWalletName) {
            return keyStoreWalletName(Output.of(keyStoreWalletName));
        }

        /**
         * @param kmsKeyId The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(@Nullable Output<String> kmsKeyId) {
            $.kmsKeyId = kmsKeyId;
            return this;
        }

        /**
         * @param kmsKeyId The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyId(String kmsKeyId) {
            return kmsKeyId(Output.of(kmsKeyId));
        }

        /**
         * @param kmsKeyVersionId The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyVersionId(@Nullable Output<String> kmsKeyVersionId) {
            $.kmsKeyVersionId = kmsKeyVersionId;
            return this;
        }

        /**
         * @param kmsKeyVersionId The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation.
         * 
         * @return builder
         * 
         */
        public Builder kmsKeyVersionId(String kmsKeyVersionId) {
            return kmsKeyVersionId(Output.of(kmsKeyVersionId));
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(@Nullable Output<String> lifecycleDetails) {
            $.lifecycleDetails = lifecycleDetails;
            return this;
        }

        /**
         * @param lifecycleDetails Additional information about the current lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleDetails(String lifecycleDetails) {
            return lifecycleDetails(Output.of(lifecycleDetails));
        }

        /**
         * @param state The current state of the backup.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the backup.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeEnded The date and time the backup completed.
         * 
         * @return builder
         * 
         */
        public Builder timeEnded(@Nullable Output<String> timeEnded) {
            $.timeEnded = timeEnded;
            return this;
        }

        /**
         * @param timeEnded The date and time the backup completed.
         * 
         * @return builder
         * 
         */
        public Builder timeEnded(String timeEnded) {
            return timeEnded(Output.of(timeEnded));
        }

        /**
         * @param timeStarted The date and time the backup started.
         * 
         * @return builder
         * 
         */
        public Builder timeStarted(@Nullable Output<String> timeStarted) {
            $.timeStarted = timeStarted;
            return this;
        }

        /**
         * @param timeStarted The date and time the backup started.
         * 
         * @return builder
         * 
         */
        public Builder timeStarted(String timeStarted) {
            return timeStarted(Output.of(timeStarted));
        }

        /**
         * @param type The type of backup.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of backup.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param vaultId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         * 
         * @return builder
         * 
         */
        public Builder vaultId(@Nullable Output<String> vaultId) {
            $.vaultId = vaultId;
            return this;
        }

        /**
         * @param vaultId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the Oracle Cloud Infrastructure [vault](https://docs.cloud.oracle.com/iaas/Content/KeyManagement/Concepts/keyoverview.htm#concepts).
         * 
         * @return builder
         * 
         */
        public Builder vaultId(String vaultId) {
            return vaultId(Output.of(vaultId));
        }

        public AutonomousDatabaseBackupState build() {
            return $;
        }
    }

}
