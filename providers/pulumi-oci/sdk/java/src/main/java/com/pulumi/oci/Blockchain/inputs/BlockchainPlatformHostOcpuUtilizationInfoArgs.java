// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BlockchainPlatformHostOcpuUtilizationInfoArgs extends com.pulumi.resources.ResourceArgs {

    public static final BlockchainPlatformHostOcpuUtilizationInfoArgs Empty = new BlockchainPlatformHostOcpuUtilizationInfoArgs();

    /**
     * Host name of VM
     * 
     */
    @Import(name="host")
    private @Nullable Output<String> host;

    /**
     * @return Host name of VM
     * 
     */
    public Optional<Output<String>> host() {
        return Optional.ofNullable(this.host);
    }

    /**
     * Number of total OCPU capacity on the host
     * 
     */
    @Import(name="ocpuCapacityNumber")
    private @Nullable Output<Double> ocpuCapacityNumber;

    /**
     * @return Number of total OCPU capacity on the host
     * 
     */
    public Optional<Output<Double>> ocpuCapacityNumber() {
        return Optional.ofNullable(this.ocpuCapacityNumber);
    }

    /**
     * Number of OCPU utilized
     * 
     */
    @Import(name="ocpuUtilizationNumber")
    private @Nullable Output<Double> ocpuUtilizationNumber;

    /**
     * @return Number of OCPU utilized
     * 
     */
    public Optional<Output<Double>> ocpuUtilizationNumber() {
        return Optional.ofNullable(this.ocpuUtilizationNumber);
    }

    private BlockchainPlatformHostOcpuUtilizationInfoArgs() {}

    private BlockchainPlatformHostOcpuUtilizationInfoArgs(BlockchainPlatformHostOcpuUtilizationInfoArgs $) {
        this.host = $.host;
        this.ocpuCapacityNumber = $.ocpuCapacityNumber;
        this.ocpuUtilizationNumber = $.ocpuUtilizationNumber;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BlockchainPlatformHostOcpuUtilizationInfoArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BlockchainPlatformHostOcpuUtilizationInfoArgs $;

        public Builder() {
            $ = new BlockchainPlatformHostOcpuUtilizationInfoArgs();
        }

        public Builder(BlockchainPlatformHostOcpuUtilizationInfoArgs defaults) {
            $ = new BlockchainPlatformHostOcpuUtilizationInfoArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param host Host name of VM
         * 
         * @return builder
         * 
         */
        public Builder host(@Nullable Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host Host name of VM
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param ocpuCapacityNumber Number of total OCPU capacity on the host
         * 
         * @return builder
         * 
         */
        public Builder ocpuCapacityNumber(@Nullable Output<Double> ocpuCapacityNumber) {
            $.ocpuCapacityNumber = ocpuCapacityNumber;
            return this;
        }

        /**
         * @param ocpuCapacityNumber Number of total OCPU capacity on the host
         * 
         * @return builder
         * 
         */
        public Builder ocpuCapacityNumber(Double ocpuCapacityNumber) {
            return ocpuCapacityNumber(Output.of(ocpuCapacityNumber));
        }

        /**
         * @param ocpuUtilizationNumber Number of OCPU utilized
         * 
         * @return builder
         * 
         */
        public Builder ocpuUtilizationNumber(@Nullable Output<Double> ocpuUtilizationNumber) {
            $.ocpuUtilizationNumber = ocpuUtilizationNumber;
            return this;
        }

        /**
         * @param ocpuUtilizationNumber Number of OCPU utilized
         * 
         * @return builder
         * 
         */
        public Builder ocpuUtilizationNumber(Double ocpuUtilizationNumber) {
            return ocpuUtilizationNumber(Output.of(ocpuUtilizationNumber));
        }

        public BlockchainPlatformHostOcpuUtilizationInfoArgs build() {
            return $;
        }
    }

}
