// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataFlow.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRunLogArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRunLogArgs Empty = new GetRunLogArgs();

    @Import(name="base64EncodeContent")
    private @Nullable Boolean base64EncodeContent;

    public Optional<Boolean> base64EncodeContent() {
        return Optional.ofNullable(this.base64EncodeContent);
    }

    /**
     * The name of the log. Avoid entering confidential information.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the log. Avoid entering confidential information.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The unique ID for the run
     * 
     */
    @Import(name="runId", required=true)
    private String runId;

    /**
     * @return The unique ID for the run
     * 
     */
    public String runId() {
        return this.runId;
    }

    private GetRunLogArgs() {}

    private GetRunLogArgs(GetRunLogArgs $) {
        this.base64EncodeContent = $.base64EncodeContent;
        this.name = $.name;
        this.runId = $.runId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRunLogArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRunLogArgs $;

        public Builder() {
            $ = new GetRunLogArgs();
        }

        public Builder(GetRunLogArgs defaults) {
            $ = new GetRunLogArgs(Objects.requireNonNull(defaults));
        }

        public Builder base64EncodeContent(@Nullable Boolean base64EncodeContent) {
            $.base64EncodeContent = base64EncodeContent;
            return this;
        }

        /**
         * @param name The name of the log. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param runId The unique ID for the run
         * 
         * @return builder
         * 
         */
        public Builder runId(String runId) {
            $.runId = runId;
            return this;
        }

        public GetRunLogArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.runId = Objects.requireNonNull($.runId, "expected parameter 'runId' to be non-null");
            return $;
        }
    }

}
