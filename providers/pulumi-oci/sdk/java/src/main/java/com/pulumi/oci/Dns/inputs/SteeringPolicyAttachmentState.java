// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SteeringPolicyAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final SteeringPolicyAttachmentState Empty = new SteeringPolicyAttachmentState();

    /**
     * The OCID of the compartment containing the steering policy attachment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The OCID of the compartment containing the steering policy attachment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * (Updatable) A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The attached domain within the attached zone. `domain_name` is case insensitive.
     * 
     */
    @Import(name="domainName")
    private @Nullable Output<String> domainName;

    /**
     * @return The attached domain within the attached zone. `domain_name` is case insensitive.
     * 
     */
    public Optional<Output<String>> domainName() {
        return Optional.ofNullable(this.domainName);
    }

    /**
     * The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
     * 
     */
    @Import(name="rtypes")
    private @Nullable Output<List<String>> rtypes;

    /**
     * @return The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
     * 
     */
    public Optional<Output<List<String>>> rtypes() {
        return Optional.ofNullable(this.rtypes);
    }

    /**
     * The canonical absolute URL of the resource.
     * 
     */
    @Import(name="self")
    private @Nullable Output<String> self;

    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public Optional<Output<String>> self() {
        return Optional.ofNullable(this.self);
    }

    /**
     * The current state of the resource.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the resource.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The OCID of the attached steering policy.
     * 
     */
    @Import(name="steeringPolicyId")
    private @Nullable Output<String> steeringPolicyId;

    /**
     * @return The OCID of the attached steering policy.
     * 
     */
    public Optional<Output<String>> steeringPolicyId() {
        return Optional.ofNullable(this.steeringPolicyId);
    }

    /**
     * The date and time the resource was created, expressed in RFC 3339 timestamp format.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the resource was created, expressed in RFC 3339 timestamp format.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The OCID of the attached zone.
     * 
     */
    @Import(name="zoneId")
    private @Nullable Output<String> zoneId;

    /**
     * @return The OCID of the attached zone.
     * 
     */
    public Optional<Output<String>> zoneId() {
        return Optional.ofNullable(this.zoneId);
    }

    private SteeringPolicyAttachmentState() {}

    private SteeringPolicyAttachmentState(SteeringPolicyAttachmentState $) {
        this.compartmentId = $.compartmentId;
        this.displayName = $.displayName;
        this.domainName = $.domainName;
        this.rtypes = $.rtypes;
        this.self = $.self;
        this.state = $.state;
        this.steeringPolicyId = $.steeringPolicyId;
        this.timeCreated = $.timeCreated;
        this.zoneId = $.zoneId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SteeringPolicyAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SteeringPolicyAttachmentState $;

        public Builder() {
            $ = new SteeringPolicyAttachmentState();
        }

        public Builder(SteeringPolicyAttachmentState defaults) {
            $ = new SteeringPolicyAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment containing the steering policy attachment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment containing the steering policy attachment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param displayName (Updatable) A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A user-friendly name for the steering policy attachment. Does not have to be unique and can be changed. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param domainName The attached domain within the attached zone. `domain_name` is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder domainName(@Nullable Output<String> domainName) {
            $.domainName = domainName;
            return this;
        }

        /**
         * @param domainName The attached domain within the attached zone. `domain_name` is case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder domainName(String domainName) {
            return domainName(Output.of(domainName));
        }

        /**
         * @param rtypes The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
         * 
         * @return builder
         * 
         */
        public Builder rtypes(@Nullable Output<List<String>> rtypes) {
            $.rtypes = rtypes;
            return this;
        }

        /**
         * @param rtypes The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
         * 
         * @return builder
         * 
         */
        public Builder rtypes(List<String> rtypes) {
            return rtypes(Output.of(rtypes));
        }

        /**
         * @param rtypes The record types covered by the attachment at the domain. The set of record types is determined by aggregating the record types from the answers defined in the steering policy.
         * 
         * @return builder
         * 
         */
        public Builder rtypes(String... rtypes) {
            return rtypes(List.of(rtypes));
        }

        /**
         * @param self The canonical absolute URL of the resource.
         * 
         * @return builder
         * 
         */
        public Builder self(@Nullable Output<String> self) {
            $.self = self;
            return this;
        }

        /**
         * @param self The canonical absolute URL of the resource.
         * 
         * @return builder
         * 
         */
        public Builder self(String self) {
            return self(Output.of(self));
        }

        /**
         * @param state The current state of the resource.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the resource.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param steeringPolicyId The OCID of the attached steering policy.
         * 
         * @return builder
         * 
         */
        public Builder steeringPolicyId(@Nullable Output<String> steeringPolicyId) {
            $.steeringPolicyId = steeringPolicyId;
            return this;
        }

        /**
         * @param steeringPolicyId The OCID of the attached steering policy.
         * 
         * @return builder
         * 
         */
        public Builder steeringPolicyId(String steeringPolicyId) {
            return steeringPolicyId(Output.of(steeringPolicyId));
        }

        /**
         * @param timeCreated The date and time the resource was created, expressed in RFC 3339 timestamp format.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the resource was created, expressed in RFC 3339 timestamp format.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param zoneId The OCID of the attached zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(@Nullable Output<String> zoneId) {
            $.zoneId = zoneId;
            return this;
        }

        /**
         * @param zoneId The OCID of the attached zone.
         * 
         * @return builder
         * 
         */
        public Builder zoneId(String zoneId) {
            return zoneId(Output.of(zoneId));
        }

        public SteeringPolicyAttachmentState build() {
            return $;
        }
    }

}
