// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.GenericArtifactsContent.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ArtifactByPathState extends com.pulumi.resources.ResourceArgs {

    public static final ArtifactByPathState Empty = new ArtifactByPathState();

    @Import(name="artifactId")
    private @Nullable Output<String> artifactId;

    public Optional<Output<String>> artifactId() {
        return Optional.ofNullable(this.artifactId);
    }

    /**
     * A user-defined path to describe the location of an artifact. You can use slashes to organize the repository, but slashes do not create a directory structure. An artifact path does not include an artifact version.
     * 
     */
    @Import(name="artifactPath")
    private @Nullable Output<String> artifactPath;

    /**
     * @return A user-defined path to describe the location of an artifact. You can use slashes to organize the repository, but slashes do not create a directory structure. An artifact path does not include an artifact version.
     * 
     */
    public Optional<Output<String>> artifactPath() {
        return Optional.ofNullable(this.artifactPath);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository&#39;s compartment.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository&#39;s compartment.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * Content to be uploaded as the artifact. Cannot be defined if `source` is defined.
     * 
     */
    @Import(name="content")
    private @Nullable Output<String> content;

    /**
     * @return Content to be uploaded as the artifact. Cannot be defined if `source` is defined.
     * 
     */
    public Optional<Output<String>> content() {
        return Optional.ofNullable(this.content);
    }

    /**
     * Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * The artifact name with the format of `&lt;artifact-path&gt;:&lt;artifact-version&gt;`. The artifact name is truncated to a maximum length of 255.  Example: `project01/my-web-app/artifact-abc:1.0.0`
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The artifact name with the format of `&lt;artifact-path&gt;:&lt;artifact-version&gt;`. The artifact name is truncated to a maximum length of 255.  Example: `project01/my-web-app/artifact-abc:1.0.0`
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * The [OCID](https://www.terraform.io/iaas/Content/General/Concepts/identifiers.htm) of the repository.
     * 
     */
    @Import(name="repositoryId")
    private @Nullable Output<String> repositoryId;

    /**
     * @return The [OCID](https://www.terraform.io/iaas/Content/General/Concepts/identifiers.htm) of the repository.
     * 
     */
    public Optional<Output<String>> repositoryId() {
        return Optional.ofNullable(this.repositoryId);
    }

    /**
     * The SHA256 digest for the artifact. When you upload an artifact to the repository, a SHA256 digest is calculated and added to the artifact properties.
     * 
     */
    @Import(name="sha256")
    private @Nullable Output<String> sha256;

    /**
     * @return The SHA256 digest for the artifact. When you upload an artifact to the repository, a SHA256 digest is calculated and added to the artifact properties.
     * 
     */
    public Optional<Output<String>> sha256() {
        return Optional.ofNullable(this.sha256);
    }

    /**
     * The size of the artifact in bytes.
     * 
     */
    @Import(name="sizeInBytes")
    private @Nullable Output<String> sizeInBytes;

    /**
     * @return The size of the artifact in bytes.
     * 
     */
    public Optional<Output<String>> sizeInBytes() {
        return Optional.ofNullable(this.sizeInBytes);
    }

    /**
     * A path to a file on the local system to be uploaded as the artifact. Cannot be defined if `content` is defined.
     * 
     */
    @Import(name="source")
    private @Nullable Output<String> source;

    /**
     * @return A path to a file on the local system to be uploaded as the artifact. Cannot be defined if `content` is defined.
     * 
     */
    public Optional<Output<String>> source() {
        return Optional.ofNullable(this.source);
    }

    /**
     * The current state of the artifact.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the artifact.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * An RFC 3339 timestamp indicating when the repository was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return An RFC 3339 timestamp indicating when the repository was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * A user-defined string to describe the artifact version. Example: `1.1.0` or `1.2-beta-2`
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return A user-defined string to describe the artifact version. Example: `1.1.0` or `1.2-beta-2`
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private ArtifactByPathState() {}

    private ArtifactByPathState(ArtifactByPathState $) {
        this.artifactId = $.artifactId;
        this.artifactPath = $.artifactPath;
        this.compartmentId = $.compartmentId;
        this.content = $.content;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.freeformTags = $.freeformTags;
        this.repositoryId = $.repositoryId;
        this.sha256 = $.sha256;
        this.sizeInBytes = $.sizeInBytes;
        this.source = $.source;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ArtifactByPathState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ArtifactByPathState $;

        public Builder() {
            $ = new ArtifactByPathState();
        }

        public Builder(ArtifactByPathState defaults) {
            $ = new ArtifactByPathState(Objects.requireNonNull(defaults));
        }

        public Builder artifactId(@Nullable Output<String> artifactId) {
            $.artifactId = artifactId;
            return this;
        }

        public Builder artifactId(String artifactId) {
            return artifactId(Output.of(artifactId));
        }

        /**
         * @param artifactPath A user-defined path to describe the location of an artifact. You can use slashes to organize the repository, but slashes do not create a directory structure. An artifact path does not include an artifact version.
         * 
         * @return builder
         * 
         */
        public Builder artifactPath(@Nullable Output<String> artifactPath) {
            $.artifactPath = artifactPath;
            return this;
        }

        /**
         * @param artifactPath A user-defined path to describe the location of an artifact. You can use slashes to organize the repository, but slashes do not create a directory structure. An artifact path does not include an artifact version.
         * 
         * @return builder
         * 
         */
        public Builder artifactPath(String artifactPath) {
            return artifactPath(Output.of(artifactPath));
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository&#39;s compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the repository&#39;s compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param content Content to be uploaded as the artifact. Cannot be defined if `source` is defined.
         * 
         * @return builder
         * 
         */
        public Builder content(@Nullable Output<String> content) {
            $.content = content;
            return this;
        }

        /**
         * @param content Content to be uploaded as the artifact. Cannot be defined if `source` is defined.
         * 
         * @return builder
         * 
         */
        public Builder content(String content) {
            return content(Output.of(content));
        }

        /**
         * @param definedTags Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName The artifact name with the format of `&lt;artifact-path&gt;:&lt;artifact-version&gt;`. The artifact name is truncated to a maximum length of 255.  Example: `project01/my-web-app/artifact-abc:1.0.0`
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The artifact name with the format of `&lt;artifact-path&gt;:&lt;artifact-version&gt;`. The artifact name is truncated to a maximum length of 255.  Example: `project01/my-web-app/artifact-abc:1.0.0`
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param freeformTags Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param repositoryId The [OCID](https://www.terraform.io/iaas/Content/General/Concepts/identifiers.htm) of the repository.
         * 
         * @return builder
         * 
         */
        public Builder repositoryId(@Nullable Output<String> repositoryId) {
            $.repositoryId = repositoryId;
            return this;
        }

        /**
         * @param repositoryId The [OCID](https://www.terraform.io/iaas/Content/General/Concepts/identifiers.htm) of the repository.
         * 
         * @return builder
         * 
         */
        public Builder repositoryId(String repositoryId) {
            return repositoryId(Output.of(repositoryId));
        }

        /**
         * @param sha256 The SHA256 digest for the artifact. When you upload an artifact to the repository, a SHA256 digest is calculated and added to the artifact properties.
         * 
         * @return builder
         * 
         */
        public Builder sha256(@Nullable Output<String> sha256) {
            $.sha256 = sha256;
            return this;
        }

        /**
         * @param sha256 The SHA256 digest for the artifact. When you upload an artifact to the repository, a SHA256 digest is calculated and added to the artifact properties.
         * 
         * @return builder
         * 
         */
        public Builder sha256(String sha256) {
            return sha256(Output.of(sha256));
        }

        /**
         * @param sizeInBytes The size of the artifact in bytes.
         * 
         * @return builder
         * 
         */
        public Builder sizeInBytes(@Nullable Output<String> sizeInBytes) {
            $.sizeInBytes = sizeInBytes;
            return this;
        }

        /**
         * @param sizeInBytes The size of the artifact in bytes.
         * 
         * @return builder
         * 
         */
        public Builder sizeInBytes(String sizeInBytes) {
            return sizeInBytes(Output.of(sizeInBytes));
        }

        /**
         * @param source A path to a file on the local system to be uploaded as the artifact. Cannot be defined if `content` is defined.
         * 
         * @return builder
         * 
         */
        public Builder source(@Nullable Output<String> source) {
            $.source = source;
            return this;
        }

        /**
         * @param source A path to a file on the local system to be uploaded as the artifact. Cannot be defined if `content` is defined.
         * 
         * @return builder
         * 
         */
        public Builder source(String source) {
            return source(Output.of(source));
        }

        /**
         * @param state The current state of the artifact.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the artifact.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated An RFC 3339 timestamp indicating when the repository was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated An RFC 3339 timestamp indicating when the repository was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param version A user-defined string to describe the artifact version. Example: `1.1.0` or `1.2-beta-2`
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version A user-defined string to describe the artifact version. Example: `1.1.0` or `1.2-beta-2`
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public ArtifactByPathState build() {
            return $;
        }
    }

}
