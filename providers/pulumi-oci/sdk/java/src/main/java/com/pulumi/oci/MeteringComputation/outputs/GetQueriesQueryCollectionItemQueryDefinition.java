// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.MeteringComputation.outputs.GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi;
import com.pulumi.oci.MeteringComputation.outputs.GetQueriesQueryCollectionItemQueryDefinitionReportQuery;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetQueriesQueryCollectionItemQueryDefinition {
    /**
     * @return The common fields for Cost Analysis UI rendering.
     * 
     */
    private final List<GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi> costAnalysisUis;
    /**
     * @return The query display name. Avoid entering confidential information.
     * 
     */
    private final String displayName;
    /**
     * @return The request of the generated Cost Analysis report.
     * 
     */
    private final List<GetQueriesQueryCollectionItemQueryDefinitionReportQuery> reportQueries;
    /**
     * @return The saved query version.
     * 
     */
    private final Double version;

    @CustomType.Constructor
    private GetQueriesQueryCollectionItemQueryDefinition(
        @CustomType.Parameter("costAnalysisUis") List<GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi> costAnalysisUis,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("reportQueries") List<GetQueriesQueryCollectionItemQueryDefinitionReportQuery> reportQueries,
        @CustomType.Parameter("version") Double version) {
        this.costAnalysisUis = costAnalysisUis;
        this.displayName = displayName;
        this.reportQueries = reportQueries;
        this.version = version;
    }

    /**
     * @return The common fields for Cost Analysis UI rendering.
     * 
     */
    public List<GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi> costAnalysisUis() {
        return this.costAnalysisUis;
    }
    /**
     * @return The query display name. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The request of the generated Cost Analysis report.
     * 
     */
    public List<GetQueriesQueryCollectionItemQueryDefinitionReportQuery> reportQueries() {
        return this.reportQueries;
    }
    /**
     * @return The saved query version.
     * 
     */
    public Double version() {
        return this.version;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetQueriesQueryCollectionItemQueryDefinition defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi> costAnalysisUis;
        private String displayName;
        private List<GetQueriesQueryCollectionItemQueryDefinitionReportQuery> reportQueries;
        private Double version;

        public Builder() {
    	      // Empty
        }

        public Builder(GetQueriesQueryCollectionItemQueryDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.costAnalysisUis = defaults.costAnalysisUis;
    	      this.displayName = defaults.displayName;
    	      this.reportQueries = defaults.reportQueries;
    	      this.version = defaults.version;
        }

        public Builder costAnalysisUis(List<GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi> costAnalysisUis) {
            this.costAnalysisUis = Objects.requireNonNull(costAnalysisUis);
            return this;
        }
        public Builder costAnalysisUis(GetQueriesQueryCollectionItemQueryDefinitionCostAnalysisUi... costAnalysisUis) {
            return costAnalysisUis(List.of(costAnalysisUis));
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder reportQueries(List<GetQueriesQueryCollectionItemQueryDefinitionReportQuery> reportQueries) {
            this.reportQueries = Objects.requireNonNull(reportQueries);
            return this;
        }
        public Builder reportQueries(GetQueriesQueryCollectionItemQueryDefinitionReportQuery... reportQueries) {
            return reportQueries(List.of(reportQueries));
        }
        public Builder version(Double version) {
            this.version = Objects.requireNonNull(version);
            return this;
        }        public GetQueriesQueryCollectionItemQueryDefinition build() {
            return new GetQueriesQueryCollectionItemQueryDefinition(costAnalysisUis, displayName, reportQueries, version);
        }
    }
}
