// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataIntegration.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspacesFilter;
import com.pulumi.oci.DataIntegration.outputs.GetWorkspacesWorkspace;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWorkspacesResult {
    /**
     * @return The OCID of the compartment that contains the workspace.
     * 
     */
    private final String compartmentId;
    private final @Nullable List<GetWorkspacesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable String name;
    /**
     * @return Lifecycle states for workspaces in Data Integration Service CREATING - The resource is being created and may not be usable until the entire metadata is defined UPDATING - The resource is being updated and may not be usable until all changes are commited DELETING - The resource is being deleted and might require deep cleanup of children. ACTIVE   - The resource is valid and available for access INACTIVE - The resource might be incomplete in its definition or might have been made unavailable for administrative reasons DELETED  - The resource has been deleted and isn&#39;t available FAILED   - The resource is in a failed state due to validation or other errors STARTING - The resource is being started and may not be usable until becomes ACTIVE again STOPPING - The resource is in the process of Stopping and may not be usable until it Stops or fails STOPPED  - The resource is in Stopped state due to stop operation.
     * 
     */
    private final @Nullable String state;
    /**
     * @return The list of workspaces.
     * 
     */
    private final List<GetWorkspacesWorkspace> workspaces;

    @CustomType.Constructor
    private GetWorkspacesResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetWorkspacesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("name") @Nullable String name,
        @CustomType.Parameter("state") @Nullable String state,
        @CustomType.Parameter("workspaces") List<GetWorkspacesWorkspace> workspaces) {
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.name = name;
        this.state = state;
        this.workspaces = workspaces;
    }

    /**
     * @return The OCID of the compartment that contains the workspace.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public List<GetWorkspacesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Lifecycle states for workspaces in Data Integration Service CREATING - The resource is being created and may not be usable until the entire metadata is defined UPDATING - The resource is being updated and may not be usable until all changes are commited DELETING - The resource is being deleted and might require deep cleanup of children. ACTIVE   - The resource is valid and available for access INACTIVE - The resource might be incomplete in its definition or might have been made unavailable for administrative reasons DELETED  - The resource has been deleted and isn&#39;t available FAILED   - The resource is in a failed state due to validation or other errors STARTING - The resource is being started and may not be usable until becomes ACTIVE again STOPPING - The resource is in the process of Stopping and may not be usable until it Stops or fails STOPPED  - The resource is in Stopped state due to stop operation.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }
    /**
     * @return The list of workspaces.
     * 
     */
    public List<GetWorkspacesWorkspace> workspaces() {
        return this.workspaces;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWorkspacesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable List<GetWorkspacesFilter> filters;
        private String id;
        private @Nullable String name;
        private @Nullable String state;
        private List<GetWorkspacesWorkspace> workspaces;

        public Builder() {
    	      // Empty
        }

        public Builder(GetWorkspacesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.state = defaults.state;
    	      this.workspaces = defaults.workspaces;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder filters(@Nullable List<GetWorkspacesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetWorkspacesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }
        public Builder workspaces(List<GetWorkspacesWorkspace> workspaces) {
            this.workspaces = Objects.requireNonNull(workspaces);
            return this;
        }
        public Builder workspaces(GetWorkspacesWorkspace... workspaces) {
            return workspaces(List.of(workspaces));
        }        public GetWorkspacesResult build() {
            return new GetWorkspacesResult(compartmentId, filters, id, name, state, workspaces);
        }
    }
}
