// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ObjectStorage.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ObjectStorage.inputs.GetPreauthrequestsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPreauthrequestsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPreauthrequestsPlainArgs Empty = new GetPreauthrequestsPlainArgs();

    /**
     * The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    @Import(name="bucket", required=true)
    private String bucket;

    /**
     * @return The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
     * 
     */
    public String bucket() {
        return this.bucket;
    }

    @Import(name="filters")
    private @Nullable List<GetPreauthrequestsFilter> filters;

    public Optional<List<GetPreauthrequestsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The Object Storage namespace used for the request.
     * 
     */
    @Import(name="namespace", required=true)
    private String namespace;

    /**
     * @return The Object Storage namespace used for the request.
     * 
     */
    public String namespace() {
        return this.namespace;
    }

    /**
     * User-specified object name prefixes can be used to query and return a list of pre-authenticated requests.
     * 
     */
    @Import(name="objectNamePrefix")
    private @Nullable String objectNamePrefix;

    /**
     * @return User-specified object name prefixes can be used to query and return a list of pre-authenticated requests.
     * 
     */
    public Optional<String> objectNamePrefix() {
        return Optional.ofNullable(this.objectNamePrefix);
    }

    private GetPreauthrequestsPlainArgs() {}

    private GetPreauthrequestsPlainArgs(GetPreauthrequestsPlainArgs $) {
        this.bucket = $.bucket;
        this.filters = $.filters;
        this.namespace = $.namespace;
        this.objectNamePrefix = $.objectNamePrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPreauthrequestsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPreauthrequestsPlainArgs $;

        public Builder() {
            $ = new GetPreauthrequestsPlainArgs();
        }

        public Builder(GetPreauthrequestsPlainArgs defaults) {
            $ = new GetPreauthrequestsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the bucket. Avoid entering confidential information. Example: `my-new-bucket1`
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            $.bucket = bucket;
            return this;
        }

        public Builder filters(@Nullable List<GetPreauthrequestsFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetPreauthrequestsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param namespace The Object Storage namespace used for the request.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param objectNamePrefix User-specified object name prefixes can be used to query and return a list of pre-authenticated requests.
         * 
         * @return builder
         * 
         */
        public Builder objectNamePrefix(@Nullable String objectNamePrefix) {
            $.objectNamePrefix = objectNamePrefix;
            return this;
        }

        public GetPreauthrequestsPlainArgs build() {
            $.bucket = Objects.requireNonNull($.bucket, "expected parameter 'bucket' to be non-null");
            $.namespace = Objects.requireNonNull($.namespace, "expected parameter 'namespace' to be non-null");
            return $;
        }
    }

}
