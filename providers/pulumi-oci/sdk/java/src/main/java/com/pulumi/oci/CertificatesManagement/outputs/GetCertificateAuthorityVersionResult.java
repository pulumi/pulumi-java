// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthorityVersionRevocationStatus;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthorityVersionSubjectAlternativeName;
import com.pulumi.oci.CertificatesManagement.outputs.GetCertificateAuthorityVersionValidity;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCertificateAuthorityVersionResult {
    /**
     * @return The OCID of the CA.
     * 
     */
    private final String certificateAuthorityId;
    private final String certificateAuthorityVersionNumber;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The version number of the issuing CA.
     * 
     */
    private final String issuerCaVersionNumber;
    /**
     * @return The current revocation status of the entity.
     * 
     */
    private final List<GetCertificateAuthorityVersionRevocationStatus> revocationStatuses;
    /**
     * @return A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
     * 
     */
    private final String serialNumber;
    /**
     * @return A list of rotation states for this CA version.
     * 
     */
    private final List<String> stages;
    private final List<GetCertificateAuthorityVersionSubjectAlternativeName> subjectAlternativeNames;
    /**
     * @return A optional property indicating when the CA version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    private final String timeCreated;
    /**
     * @return An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    private final String timeOfDeletion;
    /**
     * @return An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
     * 
     */
    private final List<GetCertificateAuthorityVersionValidity> validities;
    /**
     * @return The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
     * 
     */
    private final String versionName;
    /**
     * @return The version number of the CA.
     * 
     */
    private final String versionNumber;

    @CustomType.Constructor
    private GetCertificateAuthorityVersionResult(
        @CustomType.Parameter("certificateAuthorityId") String certificateAuthorityId,
        @CustomType.Parameter("certificateAuthorityVersionNumber") String certificateAuthorityVersionNumber,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("issuerCaVersionNumber") String issuerCaVersionNumber,
        @CustomType.Parameter("revocationStatuses") List<GetCertificateAuthorityVersionRevocationStatus> revocationStatuses,
        @CustomType.Parameter("serialNumber") String serialNumber,
        @CustomType.Parameter("stages") List<String> stages,
        @CustomType.Parameter("subjectAlternativeNames") List<GetCertificateAuthorityVersionSubjectAlternativeName> subjectAlternativeNames,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeOfDeletion") String timeOfDeletion,
        @CustomType.Parameter("validities") List<GetCertificateAuthorityVersionValidity> validities,
        @CustomType.Parameter("versionName") String versionName,
        @CustomType.Parameter("versionNumber") String versionNumber) {
        this.certificateAuthorityId = certificateAuthorityId;
        this.certificateAuthorityVersionNumber = certificateAuthorityVersionNumber;
        this.id = id;
        this.issuerCaVersionNumber = issuerCaVersionNumber;
        this.revocationStatuses = revocationStatuses;
        this.serialNumber = serialNumber;
        this.stages = stages;
        this.subjectAlternativeNames = subjectAlternativeNames;
        this.timeCreated = timeCreated;
        this.timeOfDeletion = timeOfDeletion;
        this.validities = validities;
        this.versionName = versionName;
        this.versionNumber = versionNumber;
    }

    /**
     * @return The OCID of the CA.
     * 
     */
    public String certificateAuthorityId() {
        return this.certificateAuthorityId;
    }
    public String certificateAuthorityVersionNumber() {
        return this.certificateAuthorityVersionNumber;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The version number of the issuing CA.
     * 
     */
    public String issuerCaVersionNumber() {
        return this.issuerCaVersionNumber;
    }
    /**
     * @return The current revocation status of the entity.
     * 
     */
    public List<GetCertificateAuthorityVersionRevocationStatus> revocationStatuses() {
        return this.revocationStatuses;
    }
    /**
     * @return A unique certificate identifier used in certificate revocation tracking, formatted as octets. Example: `03 AC FC FA CC B3 CB 02 B8 F8 DE F5 85 E7 7B FF`
     * 
     */
    public String serialNumber() {
        return this.serialNumber;
    }
    /**
     * @return A list of rotation states for this CA version.
     * 
     */
    public List<String> stages() {
        return this.stages;
    }
    public List<GetCertificateAuthorityVersionSubjectAlternativeName> subjectAlternativeNames() {
        return this.subjectAlternativeNames;
    }
    /**
     * @return A optional property indicating when the CA version was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return An optional property indicating when to delete the CA version, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format. Example: `2019-04-03T21:10:29.600Z`
     * 
     */
    public String timeOfDeletion() {
        return this.timeOfDeletion;
    }
    /**
     * @return An object that describes a period of time during which an entity is valid. If this is not provided when you create a certificate, the validity of the issuing CA is used.
     * 
     */
    public List<GetCertificateAuthorityVersionValidity> validities() {
        return this.validities;
    }
    /**
     * @return The name of the CA version. When this value is not null, the name is unique across CA versions for a given CA.
     * 
     */
    public String versionName() {
        return this.versionName;
    }
    /**
     * @return The version number of the CA.
     * 
     */
    public String versionNumber() {
        return this.versionNumber;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCertificateAuthorityVersionResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String certificateAuthorityId;
        private String certificateAuthorityVersionNumber;
        private String id;
        private String issuerCaVersionNumber;
        private List<GetCertificateAuthorityVersionRevocationStatus> revocationStatuses;
        private String serialNumber;
        private List<String> stages;
        private List<GetCertificateAuthorityVersionSubjectAlternativeName> subjectAlternativeNames;
        private String timeCreated;
        private String timeOfDeletion;
        private List<GetCertificateAuthorityVersionValidity> validities;
        private String versionName;
        private String versionNumber;

        public Builder() {
    	      // Empty
        }

        public Builder(GetCertificateAuthorityVersionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificateAuthorityId = defaults.certificateAuthorityId;
    	      this.certificateAuthorityVersionNumber = defaults.certificateAuthorityVersionNumber;
    	      this.id = defaults.id;
    	      this.issuerCaVersionNumber = defaults.issuerCaVersionNumber;
    	      this.revocationStatuses = defaults.revocationStatuses;
    	      this.serialNumber = defaults.serialNumber;
    	      this.stages = defaults.stages;
    	      this.subjectAlternativeNames = defaults.subjectAlternativeNames;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeOfDeletion = defaults.timeOfDeletion;
    	      this.validities = defaults.validities;
    	      this.versionName = defaults.versionName;
    	      this.versionNumber = defaults.versionNumber;
        }

        public Builder certificateAuthorityId(String certificateAuthorityId) {
            this.certificateAuthorityId = Objects.requireNonNull(certificateAuthorityId);
            return this;
        }
        public Builder certificateAuthorityVersionNumber(String certificateAuthorityVersionNumber) {
            this.certificateAuthorityVersionNumber = Objects.requireNonNull(certificateAuthorityVersionNumber);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder issuerCaVersionNumber(String issuerCaVersionNumber) {
            this.issuerCaVersionNumber = Objects.requireNonNull(issuerCaVersionNumber);
            return this;
        }
        public Builder revocationStatuses(List<GetCertificateAuthorityVersionRevocationStatus> revocationStatuses) {
            this.revocationStatuses = Objects.requireNonNull(revocationStatuses);
            return this;
        }
        public Builder revocationStatuses(GetCertificateAuthorityVersionRevocationStatus... revocationStatuses) {
            return revocationStatuses(List.of(revocationStatuses));
        }
        public Builder serialNumber(String serialNumber) {
            this.serialNumber = Objects.requireNonNull(serialNumber);
            return this;
        }
        public Builder stages(List<String> stages) {
            this.stages = Objects.requireNonNull(stages);
            return this;
        }
        public Builder stages(String... stages) {
            return stages(List.of(stages));
        }
        public Builder subjectAlternativeNames(List<GetCertificateAuthorityVersionSubjectAlternativeName> subjectAlternativeNames) {
            this.subjectAlternativeNames = Objects.requireNonNull(subjectAlternativeNames);
            return this;
        }
        public Builder subjectAlternativeNames(GetCertificateAuthorityVersionSubjectAlternativeName... subjectAlternativeNames) {
            return subjectAlternativeNames(List.of(subjectAlternativeNames));
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeOfDeletion(String timeOfDeletion) {
            this.timeOfDeletion = Objects.requireNonNull(timeOfDeletion);
            return this;
        }
        public Builder validities(List<GetCertificateAuthorityVersionValidity> validities) {
            this.validities = Objects.requireNonNull(validities);
            return this;
        }
        public Builder validities(GetCertificateAuthorityVersionValidity... validities) {
            return validities(List.of(validities));
        }
        public Builder versionName(String versionName) {
            this.versionName = Objects.requireNonNull(versionName);
            return this;
        }
        public Builder versionNumber(String versionNumber) {
            this.versionNumber = Objects.requireNonNull(versionNumber);
            return this;
        }        public GetCertificateAuthorityVersionResult build() {
            return new GetCertificateAuthorityVersionResult(certificateAuthorityId, certificateAuthorityVersionNumber, id, issuerCaVersionNumber, revocationStatuses, serialNumber, stages, subjectAlternativeNames, timeCreated, timeOfDeletion, validities, versionName, versionNumber);
        }
    }
}
