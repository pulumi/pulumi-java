// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubSubscription.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSubscriptionsSubscriptionSubscribedServiceCommitmentService {
    /**
     * @return Commitment available amount
     * 
     */
    private final String availableAmount;
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    private final String fundedAllocationValue;
    /**
     * @return Commitment line net amount
     * 
     */
    private final String lineNetAmount;
    /**
     * @return Subscribed service quantity
     * 
     */
    private final String quantity;
    /**
     * @return Represents the date when the last service of the subscription ends
     * 
     */
    private final String timeEnd;
    /**
     * @return Represents the date when the first service of the subscription was activated
     * 
     */
    private final String timeStart;

    @CustomType.Constructor
    private GetSubscriptionsSubscriptionSubscribedServiceCommitmentService(
        @CustomType.Parameter("availableAmount") String availableAmount,
        @CustomType.Parameter("fundedAllocationValue") String fundedAllocationValue,
        @CustomType.Parameter("lineNetAmount") String lineNetAmount,
        @CustomType.Parameter("quantity") String quantity,
        @CustomType.Parameter("timeEnd") String timeEnd,
        @CustomType.Parameter("timeStart") String timeStart) {
        this.availableAmount = availableAmount;
        this.fundedAllocationValue = fundedAllocationValue;
        this.lineNetAmount = lineNetAmount;
        this.quantity = quantity;
        this.timeEnd = timeEnd;
        this.timeStart = timeStart;
    }

    /**
     * @return Commitment available amount
     * 
     */
    public String availableAmount() {
        return this.availableAmount;
    }
    /**
     * @return Funded Allocation line value example: 12000.00
     * 
     */
    public String fundedAllocationValue() {
        return this.fundedAllocationValue;
    }
    /**
     * @return Commitment line net amount
     * 
     */
    public String lineNetAmount() {
        return this.lineNetAmount;
    }
    /**
     * @return Subscribed service quantity
     * 
     */
    public String quantity() {
        return this.quantity;
    }
    /**
     * @return Represents the date when the last service of the subscription ends
     * 
     */
    public String timeEnd() {
        return this.timeEnd;
    }
    /**
     * @return Represents the date when the first service of the subscription was activated
     * 
     */
    public String timeStart() {
        return this.timeStart;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSubscriptionsSubscriptionSubscribedServiceCommitmentService defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String availableAmount;
        private String fundedAllocationValue;
        private String lineNetAmount;
        private String quantity;
        private String timeEnd;
        private String timeStart;

        public Builder() {
    	      // Empty
        }

        public Builder(GetSubscriptionsSubscriptionSubscribedServiceCommitmentService defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availableAmount = defaults.availableAmount;
    	      this.fundedAllocationValue = defaults.fundedAllocationValue;
    	      this.lineNetAmount = defaults.lineNetAmount;
    	      this.quantity = defaults.quantity;
    	      this.timeEnd = defaults.timeEnd;
    	      this.timeStart = defaults.timeStart;
        }

        public Builder availableAmount(String availableAmount) {
            this.availableAmount = Objects.requireNonNull(availableAmount);
            return this;
        }
        public Builder fundedAllocationValue(String fundedAllocationValue) {
            this.fundedAllocationValue = Objects.requireNonNull(fundedAllocationValue);
            return this;
        }
        public Builder lineNetAmount(String lineNetAmount) {
            this.lineNetAmount = Objects.requireNonNull(lineNetAmount);
            return this;
        }
        public Builder quantity(String quantity) {
            this.quantity = Objects.requireNonNull(quantity);
            return this;
        }
        public Builder timeEnd(String timeEnd) {
            this.timeEnd = Objects.requireNonNull(timeEnd);
            return this;
        }
        public Builder timeStart(String timeStart) {
            this.timeStart = Objects.requireNonNull(timeStart);
            return this;
        }        public GetSubscriptionsSubscriptionSubscribedServiceCommitmentService build() {
            return new GetSubscriptionsSubscriptionSubscribedServiceCommitmentService(availableAmount, fundedAllocationValue, lineNetAmount, quantity, timeEnd, timeStart);
        }
    }
}
