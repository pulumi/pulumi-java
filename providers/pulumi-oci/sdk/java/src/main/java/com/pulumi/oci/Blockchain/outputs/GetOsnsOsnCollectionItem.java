// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Blockchain.outputs.GetOsnsOsnCollectionItemOcpuAllocationParam;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetOsnsOsnCollectionItem {
    /**
     * @return Availability Domain of OSN
     * 
     */
    private final String ad;
    /**
     * @return Unique service identifier.
     * 
     */
    private final String blockchainPlatformId;
    /**
     * @return OCPU allocation parameter
     * 
     */
    private final GetOsnsOsnCollectionItemOcpuAllocationParam ocpuAllocationParam;
    /**
     * @return OSN identifier
     * 
     */
    private final String osnKey;
    /**
     * @return The current state of the OSN.
     * 
     */
    private final String state;

    @CustomType.Constructor
    private GetOsnsOsnCollectionItem(
        @CustomType.Parameter("ad") String ad,
        @CustomType.Parameter("blockchainPlatformId") String blockchainPlatformId,
        @CustomType.Parameter("ocpuAllocationParam") GetOsnsOsnCollectionItemOcpuAllocationParam ocpuAllocationParam,
        @CustomType.Parameter("osnKey") String osnKey,
        @CustomType.Parameter("state") String state) {
        this.ad = ad;
        this.blockchainPlatformId = blockchainPlatformId;
        this.ocpuAllocationParam = ocpuAllocationParam;
        this.osnKey = osnKey;
        this.state = state;
    }

    /**
     * @return Availability Domain of OSN
     * 
     */
    public String ad() {
        return this.ad;
    }
    /**
     * @return Unique service identifier.
     * 
     */
    public String blockchainPlatformId() {
        return this.blockchainPlatformId;
    }
    /**
     * @return OCPU allocation parameter
     * 
     */
    public GetOsnsOsnCollectionItemOcpuAllocationParam ocpuAllocationParam() {
        return this.ocpuAllocationParam;
    }
    /**
     * @return OSN identifier
     * 
     */
    public String osnKey() {
        return this.osnKey;
    }
    /**
     * @return The current state of the OSN.
     * 
     */
    public String state() {
        return this.state;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetOsnsOsnCollectionItem defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String ad;
        private String blockchainPlatformId;
        private GetOsnsOsnCollectionItemOcpuAllocationParam ocpuAllocationParam;
        private String osnKey;
        private String state;

        public Builder() {
    	      // Empty
        }

        public Builder(GetOsnsOsnCollectionItem defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ad = defaults.ad;
    	      this.blockchainPlatformId = defaults.blockchainPlatformId;
    	      this.ocpuAllocationParam = defaults.ocpuAllocationParam;
    	      this.osnKey = defaults.osnKey;
    	      this.state = defaults.state;
        }

        public Builder ad(String ad) {
            this.ad = Objects.requireNonNull(ad);
            return this;
        }
        public Builder blockchainPlatformId(String blockchainPlatformId) {
            this.blockchainPlatformId = Objects.requireNonNull(blockchainPlatformId);
            return this;
        }
        public Builder ocpuAllocationParam(GetOsnsOsnCollectionItemOcpuAllocationParam ocpuAllocationParam) {
            this.ocpuAllocationParam = Objects.requireNonNull(ocpuAllocationParam);
            return this;
        }
        public Builder osnKey(String osnKey) {
            this.osnKey = Objects.requireNonNull(osnKey);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }        public GetOsnsOsnCollectionItem build() {
            return new GetOsnsOsnCollectionItem(ad, blockchainPlatformId, ocpuAllocationParam, osnKey, state);
        }
    }
}
