// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersArgs;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersArgs;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs Empty = new DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs();

    /**
     * (Updatable) Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     * 
     */
    @Import(name="filterHeaders")
    private @Nullable Output<DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersArgs> filterHeaders;

    /**
     * @return (Updatable) Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
     * 
     */
    public Optional<Output<DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersArgs>> filterHeaders() {
        return Optional.ofNullable(this.filterHeaders);
    }

    /**
     * (Updatable) Rename HTTP headers as they pass through the gateway.
     * 
     */
    @Import(name="renameHeaders")
    private @Nullable Output<DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersArgs> renameHeaders;

    /**
     * @return (Updatable) Rename HTTP headers as they pass through the gateway.
     * 
     */
    public Optional<Output<DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersArgs>> renameHeaders() {
        return Optional.ofNullable(this.renameHeaders);
    }

    /**
     * (Updatable) Set HTTP headers as they pass through the gateway.
     * 
     */
    @Import(name="setHeaders")
    private @Nullable Output<DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersArgs> setHeaders;

    /**
     * @return (Updatable) Set HTTP headers as they pass through the gateway.
     * 
     */
    public Optional<Output<DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersArgs>> setHeaders() {
        return Optional.ofNullable(this.setHeaders);
    }

    private DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs() {}

    private DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs $) {
        this.filterHeaders = $.filterHeaders;
        this.renameHeaders = $.renameHeaders;
        this.setHeaders = $.setHeaders;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs $;

        public Builder() {
            $ = new DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs();
        }

        public Builder(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs defaults) {
            $ = new DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filterHeaders (Updatable) Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
         * 
         * @return builder
         * 
         */
        public Builder filterHeaders(@Nullable Output<DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersArgs> filterHeaders) {
            $.filterHeaders = filterHeaders;
            return this;
        }

        /**
         * @param filterHeaders (Updatable) Filter HTTP headers as they pass through the gateway.  The gateway applies filters after other transformations, so any headers set or renamed must also be listed here when using an ALLOW type policy.
         * 
         * @return builder
         * 
         */
        public Builder filterHeaders(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsFilterHeadersArgs filterHeaders) {
            return filterHeaders(Output.of(filterHeaders));
        }

        /**
         * @param renameHeaders (Updatable) Rename HTTP headers as they pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder renameHeaders(@Nullable Output<DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersArgs> renameHeaders) {
            $.renameHeaders = renameHeaders;
            return this;
        }

        /**
         * @param renameHeaders (Updatable) Rename HTTP headers as they pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder renameHeaders(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsRenameHeadersArgs renameHeaders) {
            return renameHeaders(Output.of(renameHeaders));
        }

        /**
         * @param setHeaders (Updatable) Set HTTP headers as they pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder setHeaders(@Nullable Output<DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersArgs> setHeaders) {
            $.setHeaders = setHeaders;
            return this;
        }

        /**
         * @param setHeaders (Updatable) Set HTTP headers as they pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder setHeaders(DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsSetHeadersArgs setHeaders) {
            return setHeaders(Output.of(setHeaders));
        }

        public DeploymentSpecificationRouteRequestPoliciesHeaderTransformationsArgs build() {
            return $;
        }
    }

}
