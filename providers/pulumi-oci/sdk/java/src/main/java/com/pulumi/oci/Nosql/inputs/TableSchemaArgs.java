// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Nosql.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Nosql.inputs.TableSchemaColumnArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TableSchemaArgs extends com.pulumi.resources.ResourceArgs {

    public static final TableSchemaArgs Empty = new TableSchemaArgs();

    /**
     * The columns of a table.
     * 
     */
    @Import(name="columns")
    private @Nullable Output<List<TableSchemaColumnArgs>> columns;

    /**
     * @return The columns of a table.
     * 
     */
    public Optional<Output<List<TableSchemaColumnArgs>>> columns() {
        return Optional.ofNullable(this.columns);
    }

    /**
     * A list of column names that make up a key.
     * 
     */
    @Import(name="primaryKeys")
    private @Nullable Output<List<String>> primaryKeys;

    /**
     * @return A list of column names that make up a key.
     * 
     */
    public Optional<Output<List<String>>> primaryKeys() {
        return Optional.ofNullable(this.primaryKeys);
    }

    /**
     * A list of column names that make up a key.
     * 
     */
    @Import(name="shardKeys")
    private @Nullable Output<List<String>> shardKeys;

    /**
     * @return A list of column names that make up a key.
     * 
     */
    public Optional<Output<List<String>>> shardKeys() {
        return Optional.ofNullable(this.shardKeys);
    }

    /**
     * The default Time-to-Live for the table, in days.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<Integer> ttl;

    /**
     * @return The default Time-to-Live for the table, in days.
     * 
     */
    public Optional<Output<Integer>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    private TableSchemaArgs() {}

    private TableSchemaArgs(TableSchemaArgs $) {
        this.columns = $.columns;
        this.primaryKeys = $.primaryKeys;
        this.shardKeys = $.shardKeys;
        this.ttl = $.ttl;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TableSchemaArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TableSchemaArgs $;

        public Builder() {
            $ = new TableSchemaArgs();
        }

        public Builder(TableSchemaArgs defaults) {
            $ = new TableSchemaArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param columns The columns of a table.
         * 
         * @return builder
         * 
         */
        public Builder columns(@Nullable Output<List<TableSchemaColumnArgs>> columns) {
            $.columns = columns;
            return this;
        }

        /**
         * @param columns The columns of a table.
         * 
         * @return builder
         * 
         */
        public Builder columns(List<TableSchemaColumnArgs> columns) {
            return columns(Output.of(columns));
        }

        /**
         * @param columns The columns of a table.
         * 
         * @return builder
         * 
         */
        public Builder columns(TableSchemaColumnArgs... columns) {
            return columns(List.of(columns));
        }

        /**
         * @param primaryKeys A list of column names that make up a key.
         * 
         * @return builder
         * 
         */
        public Builder primaryKeys(@Nullable Output<List<String>> primaryKeys) {
            $.primaryKeys = primaryKeys;
            return this;
        }

        /**
         * @param primaryKeys A list of column names that make up a key.
         * 
         * @return builder
         * 
         */
        public Builder primaryKeys(List<String> primaryKeys) {
            return primaryKeys(Output.of(primaryKeys));
        }

        /**
         * @param primaryKeys A list of column names that make up a key.
         * 
         * @return builder
         * 
         */
        public Builder primaryKeys(String... primaryKeys) {
            return primaryKeys(List.of(primaryKeys));
        }

        /**
         * @param shardKeys A list of column names that make up a key.
         * 
         * @return builder
         * 
         */
        public Builder shardKeys(@Nullable Output<List<String>> shardKeys) {
            $.shardKeys = shardKeys;
            return this;
        }

        /**
         * @param shardKeys A list of column names that make up a key.
         * 
         * @return builder
         * 
         */
        public Builder shardKeys(List<String> shardKeys) {
            return shardKeys(Output.of(shardKeys));
        }

        /**
         * @param shardKeys A list of column names that make up a key.
         * 
         * @return builder
         * 
         */
        public Builder shardKeys(String... shardKeys) {
            return shardKeys(List.of(shardKeys));
        }

        /**
         * @param ttl The default Time-to-Live for the table, in days.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl The default Time-to-Live for the table, in days.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        public TableSchemaArgs build() {
            return $;
        }
    }

}
