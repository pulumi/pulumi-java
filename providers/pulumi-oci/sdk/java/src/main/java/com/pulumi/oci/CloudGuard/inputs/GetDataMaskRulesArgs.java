// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.CloudGuard.inputs.GetDataMaskRulesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDataMaskRulesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDataMaskRulesArgs Empty = new GetDataMaskRulesArgs();

    /**
     * Valid values are `RESTRICTED` and `ACCESSIBLE`. Default is `RESTRICTED`. Setting this to `ACCESSIBLE` returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to `RESTRICTED` permissions are checked and no partial results are displayed.
     * 
     */
    @Import(name="accessLevel")
    private @Nullable String accessLevel;

    /**
     * @return Valid values are `RESTRICTED` and `ACCESSIBLE`. Default is `RESTRICTED`. Setting this to `ACCESSIBLE` returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to `RESTRICTED` permissions are checked and no partial results are displayed.
     * 
     */
    public Optional<String> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }

    /**
     * The ID of the compartment in which to list resources.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * The status of the dataMaskRule.
     * 
     */
    @Import(name="dataMaskRuleStatus")
    private @Nullable String dataMaskRuleStatus;

    /**
     * @return The status of the dataMaskRule.
     * 
     */
    public Optional<String> dataMaskRuleStatus() {
        return Optional.ofNullable(this.dataMaskRuleStatus);
    }

    /**
     * A filter to return only resources that match the entire display name given.
     * 
     */
    @Import(name="displayName")
    private @Nullable String displayName;

    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetDataMaskRulesFilter> filters;

    public Optional<List<GetDataMaskRulesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * OCID of iamGroup
     * 
     */
    @Import(name="iamGroupId")
    private @Nullable String iamGroupId;

    /**
     * @return OCID of iamGroup
     * 
     */
    public Optional<String> iamGroupId() {
        return Optional.ofNullable(this.iamGroupId);
    }

    /**
     * The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * OCID of target
     * 
     */
    @Import(name="targetId")
    private @Nullable String targetId;

    /**
     * @return OCID of target
     * 
     */
    public Optional<String> targetId() {
        return Optional.ofNullable(this.targetId);
    }

    /**
     * Type of target
     * 
     */
    @Import(name="targetType")
    private @Nullable String targetType;

    /**
     * @return Type of target
     * 
     */
    public Optional<String> targetType() {
        return Optional.ofNullable(this.targetType);
    }

    private GetDataMaskRulesArgs() {}

    private GetDataMaskRulesArgs(GetDataMaskRulesArgs $) {
        this.accessLevel = $.accessLevel;
        this.compartmentId = $.compartmentId;
        this.dataMaskRuleStatus = $.dataMaskRuleStatus;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.iamGroupId = $.iamGroupId;
        this.state = $.state;
        this.targetId = $.targetId;
        this.targetType = $.targetType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDataMaskRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDataMaskRulesArgs $;

        public Builder() {
            $ = new GetDataMaskRulesArgs();
        }

        public Builder(GetDataMaskRulesArgs defaults) {
            $ = new GetDataMaskRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessLevel Valid values are `RESTRICTED` and `ACCESSIBLE`. Default is `RESTRICTED`. Setting this to `ACCESSIBLE` returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to `RESTRICTED` permissions are checked and no partial results are displayed.
         * 
         * @return builder
         * 
         */
        public Builder accessLevel(@Nullable String accessLevel) {
            $.accessLevel = accessLevel;
            return this;
        }

        /**
         * @param compartmentId The ID of the compartment in which to list resources.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param dataMaskRuleStatus The status of the dataMaskRule.
         * 
         * @return builder
         * 
         */
        public Builder dataMaskRuleStatus(@Nullable String dataMaskRuleStatus) {
            $.dataMaskRuleStatus = dataMaskRuleStatus;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetDataMaskRulesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetDataMaskRulesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param iamGroupId OCID of iamGroup
         * 
         * @return builder
         * 
         */
        public Builder iamGroupId(@Nullable String iamGroupId) {
            $.iamGroupId = iamGroupId;
            return this;
        }

        /**
         * @param state The field life cycle state. Only one state can be provided. Default value for state is active. If no value is specified state is active.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param targetId OCID of target
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable String targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetType Type of target
         * 
         * @return builder
         * 
         */
        public Builder targetType(@Nullable String targetType) {
            $.targetType = targetType;
            return this;
        }

        public GetDataMaskRulesArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
