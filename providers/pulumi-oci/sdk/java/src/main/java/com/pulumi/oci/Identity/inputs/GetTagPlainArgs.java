// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Identity.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetTagPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTagPlainArgs Empty = new GetTagPlainArgs();

    /**
     * The name of the tag.
     * 
     */
    @Import(name="tagName", required=true)
    private String tagName;

    /**
     * @return The name of the tag.
     * 
     */
    public String tagName() {
        return this.tagName;
    }

    /**
     * The OCID of the tag namespace.
     * 
     */
    @Import(name="tagNamespaceId", required=true)
    private String tagNamespaceId;

    /**
     * @return The OCID of the tag namespace.
     * 
     */
    public String tagNamespaceId() {
        return this.tagNamespaceId;
    }

    private GetTagPlainArgs() {}

    private GetTagPlainArgs(GetTagPlainArgs $) {
        this.tagName = $.tagName;
        this.tagNamespaceId = $.tagNamespaceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTagPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTagPlainArgs $;

        public Builder() {
            $ = new GetTagPlainArgs();
        }

        public Builder(GetTagPlainArgs defaults) {
            $ = new GetTagPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param tagName The name of the tag.
         * 
         * @return builder
         * 
         */
        public Builder tagName(String tagName) {
            $.tagName = tagName;
            return this;
        }

        /**
         * @param tagNamespaceId The OCID of the tag namespace.
         * 
         * @return builder
         * 
         */
        public Builder tagNamespaceId(String tagNamespaceId) {
            $.tagNamespaceId = tagNamespaceId;
            return this;
        }

        public GetTagPlainArgs build() {
            $.tagName = Objects.requireNonNull($.tagName, "expected parameter 'tagName' to be non-null");
            $.tagNamespaceId = Objects.requireNonNull($.tagNamespaceId, "expected parameter 'tagNamespaceId' to be non-null");
            return $;
        }
    }

}
