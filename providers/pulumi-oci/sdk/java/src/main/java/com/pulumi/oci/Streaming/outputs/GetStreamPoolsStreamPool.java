// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Streaming.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Streaming.outputs.GetStreamPoolsStreamPoolCustomEncryptionKey;
import com.pulumi.oci.Streaming.outputs.GetStreamPoolsStreamPoolKafkaSetting;
import com.pulumi.oci.Streaming.outputs.GetStreamPoolsStreamPoolPrivateEndpointSetting;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetStreamPoolsStreamPool {
    /**
     * @return The OCID of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return Custom Encryption Key which will be used for encryption by all the streams in the pool.
     * 
     */
    private final List<GetStreamPoolsStreamPoolCustomEncryptionKey> customEncryptionKeys;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}&#39;
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
     * 
     */
    private final String endpointFqdn;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return A filter to return only resources that match the given ID exactly.
     * 
     */
    private final String id;
    /**
     * @return True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
     * 
     */
    private final Boolean isPrivate;
    /**
     * @return Settings for the Kafka compatibility layer.
     * 
     */
    private final List<GetStreamPoolsStreamPoolKafkaSetting> kafkaSettings;
    /**
     * @return Any additional details about the current state of the stream.
     * 
     */
    private final String lifecycleStateDetails;
    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    private final String name;
    /**
     * @return Optional settings if the stream pool is private.
     * 
     */
    private final List<GetStreamPoolsStreamPoolPrivateEndpointSetting> privateEndpointSettings;
    /**
     * @return A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    private final String state;
    /**
     * @return The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    private final String timeCreated;

    @CustomType.Constructor
    private GetStreamPoolsStreamPool(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("customEncryptionKeys") List<GetStreamPoolsStreamPoolCustomEncryptionKey> customEncryptionKeys,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("endpointFqdn") String endpointFqdn,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isPrivate") Boolean isPrivate,
        @CustomType.Parameter("kafkaSettings") List<GetStreamPoolsStreamPoolKafkaSetting> kafkaSettings,
        @CustomType.Parameter("lifecycleStateDetails") String lifecycleStateDetails,
        @CustomType.Parameter("name") String name,
        @CustomType.Parameter("privateEndpointSettings") List<GetStreamPoolsStreamPoolPrivateEndpointSetting> privateEndpointSettings,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated) {
        this.compartmentId = compartmentId;
        this.customEncryptionKeys = customEncryptionKeys;
        this.definedTags = definedTags;
        this.endpointFqdn = endpointFqdn;
        this.freeformTags = freeformTags;
        this.id = id;
        this.isPrivate = isPrivate;
        this.kafkaSettings = kafkaSettings;
        this.lifecycleStateDetails = lifecycleStateDetails;
        this.name = name;
        this.privateEndpointSettings = privateEndpointSettings;
        this.state = state;
        this.timeCreated = timeCreated;
    }

    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Custom Encryption Key which will be used for encryption by all the streams in the pool.
     * 
     */
    public List<GetStreamPoolsStreamPoolCustomEncryptionKey> customEncryptionKeys() {
        return this.customEncryptionKeys;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations&#34;: {&#34;CostCenter&#34;: &#34;42&#34;}}&#39;
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The FQDN used to access the streams inside the stream pool (same FQDN as the messagesEndpoint attribute of a [Stream](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/Stream) object). If the stream pool is private, the FQDN is customized and can only be accessed from inside the associated subnetId, otherwise the FQDN is publicly resolvable. Depending on which protocol you attempt to use, you need to either prepend https or append the Kafka port.
     * 
     */
    public String endpointFqdn() {
        return this.endpointFqdn;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair that is applied with no predefined name, type, or namespace. Exists for cross-compatibility only. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return A filter to return only resources that match the given ID exactly.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return True if the stream pool is private, false otherwise. The associated endpoint and subnetId of a private stream pool can be retrieved through the [GetStreamPool](https://docs.cloud.oracle.com/iaas/api/#/en/streaming/20180418/StreamPool/GetStreamPool) API.
     * 
     */
    public Boolean isPrivate() {
        return this.isPrivate;
    }
    /**
     * @return Settings for the Kafka compatibility layer.
     * 
     */
    public List<GetStreamPoolsStreamPoolKafkaSetting> kafkaSettings() {
        return this.kafkaSettings;
    }
    /**
     * @return Any additional details about the current state of the stream.
     * 
     */
    public String lifecycleStateDetails() {
        return this.lifecycleStateDetails;
    }
    /**
     * @return A filter to return only resources that match the given name exactly.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Optional settings if the stream pool is private.
     * 
     */
    public List<GetStreamPoolsStreamPoolPrivateEndpointSetting> privateEndpointSettings() {
        return this.privateEndpointSettings;
    }
    /**
     * @return A filter to only return resources that match the given lifecycle state. The state value is case-insensitive.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the stream pool was created, expressed in in [RFC 3339](https://tools.ietf.org/rfc/rfc3339) timestamp format.  Example: `2018-04-20T00:00:07.405Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamPoolsStreamPool defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private List<GetStreamPoolsStreamPoolCustomEncryptionKey> customEncryptionKeys;
        private Map<String,Object> definedTags;
        private String endpointFqdn;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isPrivate;
        private List<GetStreamPoolsStreamPoolKafkaSetting> kafkaSettings;
        private String lifecycleStateDetails;
        private String name;
        private List<GetStreamPoolsStreamPoolPrivateEndpointSetting> privateEndpointSettings;
        private String state;
        private String timeCreated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetStreamPoolsStreamPool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.customEncryptionKeys = defaults.customEncryptionKeys;
    	      this.definedTags = defaults.definedTags;
    	      this.endpointFqdn = defaults.endpointFqdn;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isPrivate = defaults.isPrivate;
    	      this.kafkaSettings = defaults.kafkaSettings;
    	      this.lifecycleStateDetails = defaults.lifecycleStateDetails;
    	      this.name = defaults.name;
    	      this.privateEndpointSettings = defaults.privateEndpointSettings;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder customEncryptionKeys(List<GetStreamPoolsStreamPoolCustomEncryptionKey> customEncryptionKeys) {
            this.customEncryptionKeys = Objects.requireNonNull(customEncryptionKeys);
            return this;
        }
        public Builder customEncryptionKeys(GetStreamPoolsStreamPoolCustomEncryptionKey... customEncryptionKeys) {
            return customEncryptionKeys(List.of(customEncryptionKeys));
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder endpointFqdn(String endpointFqdn) {
            this.endpointFqdn = Objects.requireNonNull(endpointFqdn);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isPrivate(Boolean isPrivate) {
            this.isPrivate = Objects.requireNonNull(isPrivate);
            return this;
        }
        public Builder kafkaSettings(List<GetStreamPoolsStreamPoolKafkaSetting> kafkaSettings) {
            this.kafkaSettings = Objects.requireNonNull(kafkaSettings);
            return this;
        }
        public Builder kafkaSettings(GetStreamPoolsStreamPoolKafkaSetting... kafkaSettings) {
            return kafkaSettings(List.of(kafkaSettings));
        }
        public Builder lifecycleStateDetails(String lifecycleStateDetails) {
            this.lifecycleStateDetails = Objects.requireNonNull(lifecycleStateDetails);
            return this;
        }
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        public Builder privateEndpointSettings(List<GetStreamPoolsStreamPoolPrivateEndpointSetting> privateEndpointSettings) {
            this.privateEndpointSettings = Objects.requireNonNull(privateEndpointSettings);
            return this;
        }
        public Builder privateEndpointSettings(GetStreamPoolsStreamPoolPrivateEndpointSetting... privateEndpointSettings) {
            return privateEndpointSettings(List.of(privateEndpointSettings));
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }        public GetStreamPoolsStreamPool build() {
            return new GetStreamPoolsStreamPool(compartmentId, customEncryptionKeys, definedTags, endpointFqdn, freeformTags, id, isPrivate, kafkaSettings, lifecycleStateDetails, name, privateEndpointSettings, state, timeCreated);
        }
    }
}
