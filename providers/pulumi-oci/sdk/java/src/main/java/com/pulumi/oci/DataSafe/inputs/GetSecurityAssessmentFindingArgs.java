// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.GetSecurityAssessmentFindingFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecurityAssessmentFindingArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityAssessmentFindingArgs Empty = new GetSecurityAssessmentFindingArgs();

    @Import(name="accessLevel")
    private @Nullable Output<String> accessLevel;

    public Optional<Output<String>> accessLevel() {
        return Optional.ofNullable(this.accessLevel);
    }

    @Import(name="compartmentIdInSubtree")
    private @Nullable Output<Boolean> compartmentIdInSubtree;

    public Optional<Output<Boolean>> compartmentIdInSubtree() {
        return Optional.ofNullable(this.compartmentIdInSubtree);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetSecurityAssessmentFindingFilterArgs>> filters;

    public Optional<Output<List<GetSecurityAssessmentFindingFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    @Import(name="findingKey")
    private @Nullable Output<String> findingKey;

    public Optional<Output<String>> findingKey() {
        return Optional.ofNullable(this.findingKey);
    }

    @Import(name="securityAssessmentId", required=true)
    private Output<String> securityAssessmentId;

    public Output<String> securityAssessmentId() {
        return this.securityAssessmentId;
    }

    @Import(name="severity")
    private @Nullable Output<String> severity;

    public Optional<Output<String>> severity() {
        return Optional.ofNullable(this.severity);
    }

    private GetSecurityAssessmentFindingArgs() {}

    private GetSecurityAssessmentFindingArgs(GetSecurityAssessmentFindingArgs $) {
        this.accessLevel = $.accessLevel;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.filters = $.filters;
        this.findingKey = $.findingKey;
        this.securityAssessmentId = $.securityAssessmentId;
        this.severity = $.severity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityAssessmentFindingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityAssessmentFindingArgs $;

        public Builder() {
            $ = new GetSecurityAssessmentFindingArgs();
        }

        public Builder(GetSecurityAssessmentFindingArgs defaults) {
            $ = new GetSecurityAssessmentFindingArgs(Objects.requireNonNull(defaults));
        }

        public Builder accessLevel(@Nullable Output<String> accessLevel) {
            $.accessLevel = accessLevel;
            return this;
        }

        public Builder accessLevel(String accessLevel) {
            return accessLevel(Output.of(accessLevel));
        }

        public Builder compartmentIdInSubtree(@Nullable Output<Boolean> compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            return compartmentIdInSubtree(Output.of(compartmentIdInSubtree));
        }

        public Builder filters(@Nullable Output<List<GetSecurityAssessmentFindingFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetSecurityAssessmentFindingFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetSecurityAssessmentFindingFilterArgs... filters) {
            return filters(List.of(filters));
        }

        public Builder findingKey(@Nullable Output<String> findingKey) {
            $.findingKey = findingKey;
            return this;
        }

        public Builder findingKey(String findingKey) {
            return findingKey(Output.of(findingKey));
        }

        public Builder securityAssessmentId(Output<String> securityAssessmentId) {
            $.securityAssessmentId = securityAssessmentId;
            return this;
        }

        public Builder securityAssessmentId(String securityAssessmentId) {
            return securityAssessmentId(Output.of(securityAssessmentId));
        }

        public Builder severity(@Nullable Output<String> severity) {
            $.severity = severity;
            return this;
        }

        public Builder severity(String severity) {
            return severity(Output.of(severity));
        }

        public GetSecurityAssessmentFindingArgs build() {
            $.securityAssessmentId = Objects.requireNonNull($.securityAssessmentId, "expected parameter 'securityAssessmentId' to be non-null");
            return $;
        }
    }

}
