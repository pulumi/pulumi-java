// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ContainerEngine.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ClusterMetadataArgs extends com.pulumi.resources.ResourceArgs {

    public static final ClusterMetadataArgs Empty = new ClusterMetadataArgs();

    /**
     * The user who created the cluster.
     * 
     */
    @Import(name="createdByUserId")
    private @Nullable Output<String> createdByUserId;

    /**
     * @return The user who created the cluster.
     * 
     */
    public Optional<Output<String>> createdByUserId() {
        return Optional.ofNullable(this.createdByUserId);
    }

    /**
     * The OCID of the work request which created the cluster.
     * 
     */
    @Import(name="createdByWorkRequestId")
    private @Nullable Output<String> createdByWorkRequestId;

    /**
     * @return The OCID of the work request which created the cluster.
     * 
     */
    public Optional<Output<String>> createdByWorkRequestId() {
        return Optional.ofNullable(this.createdByWorkRequestId);
    }

    /**
     * The user who deleted the cluster.
     * 
     */
    @Import(name="deletedByUserId")
    private @Nullable Output<String> deletedByUserId;

    /**
     * @return The user who deleted the cluster.
     * 
     */
    public Optional<Output<String>> deletedByUserId() {
        return Optional.ofNullable(this.deletedByUserId);
    }

    /**
     * The OCID of the work request which deleted the cluster.
     * 
     */
    @Import(name="deletedByWorkRequestId")
    private @Nullable Output<String> deletedByWorkRequestId;

    /**
     * @return The OCID of the work request which deleted the cluster.
     * 
     */
    public Optional<Output<String>> deletedByWorkRequestId() {
        return Optional.ofNullable(this.deletedByWorkRequestId);
    }

    /**
     * The time the cluster was created.
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The time the cluster was created.
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The time the cluster was deleted.
     * 
     */
    @Import(name="timeDeleted")
    private @Nullable Output<String> timeDeleted;

    /**
     * @return The time the cluster was deleted.
     * 
     */
    public Optional<Output<String>> timeDeleted() {
        return Optional.ofNullable(this.timeDeleted);
    }

    /**
     * The time the cluster was updated.
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The time the cluster was updated.
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * The user who updated the cluster.
     * 
     */
    @Import(name="updatedByUserId")
    private @Nullable Output<String> updatedByUserId;

    /**
     * @return The user who updated the cluster.
     * 
     */
    public Optional<Output<String>> updatedByUserId() {
        return Optional.ofNullable(this.updatedByUserId);
    }

    /**
     * The OCID of the work request which updated the cluster.
     * 
     */
    @Import(name="updatedByWorkRequestId")
    private @Nullable Output<String> updatedByWorkRequestId;

    /**
     * @return The OCID of the work request which updated the cluster.
     * 
     */
    public Optional<Output<String>> updatedByWorkRequestId() {
        return Optional.ofNullable(this.updatedByWorkRequestId);
    }

    private ClusterMetadataArgs() {}

    private ClusterMetadataArgs(ClusterMetadataArgs $) {
        this.createdByUserId = $.createdByUserId;
        this.createdByWorkRequestId = $.createdByWorkRequestId;
        this.deletedByUserId = $.deletedByUserId;
        this.deletedByWorkRequestId = $.deletedByWorkRequestId;
        this.timeCreated = $.timeCreated;
        this.timeDeleted = $.timeDeleted;
        this.timeUpdated = $.timeUpdated;
        this.updatedByUserId = $.updatedByUserId;
        this.updatedByWorkRequestId = $.updatedByWorkRequestId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ClusterMetadataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ClusterMetadataArgs $;

        public Builder() {
            $ = new ClusterMetadataArgs();
        }

        public Builder(ClusterMetadataArgs defaults) {
            $ = new ClusterMetadataArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdByUserId The user who created the cluster.
         * 
         * @return builder
         * 
         */
        public Builder createdByUserId(@Nullable Output<String> createdByUserId) {
            $.createdByUserId = createdByUserId;
            return this;
        }

        /**
         * @param createdByUserId The user who created the cluster.
         * 
         * @return builder
         * 
         */
        public Builder createdByUserId(String createdByUserId) {
            return createdByUserId(Output.of(createdByUserId));
        }

        /**
         * @param createdByWorkRequestId The OCID of the work request which created the cluster.
         * 
         * @return builder
         * 
         */
        public Builder createdByWorkRequestId(@Nullable Output<String> createdByWorkRequestId) {
            $.createdByWorkRequestId = createdByWorkRequestId;
            return this;
        }

        /**
         * @param createdByWorkRequestId The OCID of the work request which created the cluster.
         * 
         * @return builder
         * 
         */
        public Builder createdByWorkRequestId(String createdByWorkRequestId) {
            return createdByWorkRequestId(Output.of(createdByWorkRequestId));
        }

        /**
         * @param deletedByUserId The user who deleted the cluster.
         * 
         * @return builder
         * 
         */
        public Builder deletedByUserId(@Nullable Output<String> deletedByUserId) {
            $.deletedByUserId = deletedByUserId;
            return this;
        }

        /**
         * @param deletedByUserId The user who deleted the cluster.
         * 
         * @return builder
         * 
         */
        public Builder deletedByUserId(String deletedByUserId) {
            return deletedByUserId(Output.of(deletedByUserId));
        }

        /**
         * @param deletedByWorkRequestId The OCID of the work request which deleted the cluster.
         * 
         * @return builder
         * 
         */
        public Builder deletedByWorkRequestId(@Nullable Output<String> deletedByWorkRequestId) {
            $.deletedByWorkRequestId = deletedByWorkRequestId;
            return this;
        }

        /**
         * @param deletedByWorkRequestId The OCID of the work request which deleted the cluster.
         * 
         * @return builder
         * 
         */
        public Builder deletedByWorkRequestId(String deletedByWorkRequestId) {
            return deletedByWorkRequestId(Output.of(deletedByWorkRequestId));
        }

        /**
         * @param timeCreated The time the cluster was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The time the cluster was created.
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeDeleted The time the cluster was deleted.
         * 
         * @return builder
         * 
         */
        public Builder timeDeleted(@Nullable Output<String> timeDeleted) {
            $.timeDeleted = timeDeleted;
            return this;
        }

        /**
         * @param timeDeleted The time the cluster was deleted.
         * 
         * @return builder
         * 
         */
        public Builder timeDeleted(String timeDeleted) {
            return timeDeleted(Output.of(timeDeleted));
        }

        /**
         * @param timeUpdated The time the cluster was updated.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The time the cluster was updated.
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param updatedByUserId The user who updated the cluster.
         * 
         * @return builder
         * 
         */
        public Builder updatedByUserId(@Nullable Output<String> updatedByUserId) {
            $.updatedByUserId = updatedByUserId;
            return this;
        }

        /**
         * @param updatedByUserId The user who updated the cluster.
         * 
         * @return builder
         * 
         */
        public Builder updatedByUserId(String updatedByUserId) {
            return updatedByUserId(Output.of(updatedByUserId));
        }

        /**
         * @param updatedByWorkRequestId The OCID of the work request which updated the cluster.
         * 
         * @return builder
         * 
         */
        public Builder updatedByWorkRequestId(@Nullable Output<String> updatedByWorkRequestId) {
            $.updatedByWorkRequestId = updatedByWorkRequestId;
            return this;
        }

        /**
         * @param updatedByWorkRequestId The OCID of the work request which updated the cluster.
         * 
         * @return builder
         * 
         */
        public Builder updatedByWorkRequestId(String updatedByWorkRequestId) {
            return updatedByWorkRequestId(Output.of(updatedByWorkRequestId));
        }

        public ClusterMetadataArgs build() {
            return $;
        }
    }

}
