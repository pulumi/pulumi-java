// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.BigDataService.inputs.GetBdsInstanceApiKeysFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetBdsInstanceApiKeysPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetBdsInstanceApiKeysPlainArgs Empty = new GetBdsInstanceApiKeysPlainArgs();

    /**
     * The OCID of the cluster.
     * 
     */
    @Import(name="bdsInstanceId", required=true)
    private String bdsInstanceId;

    /**
     * @return The OCID of the cluster.
     * 
     */
    public String bdsInstanceId() {
        return this.bdsInstanceId;
    }

    @Import(name="displayName")
    private @Nullable String displayName;

    public Optional<String> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable List<GetBdsInstanceApiKeysFilter> filters;

    public Optional<List<GetBdsInstanceApiKeysFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * The current status of the API key.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return The current status of the API key.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The user OCID for which this API key was created.
     * 
     */
    @Import(name="userId")
    private @Nullable String userId;

    /**
     * @return The user OCID for which this API key was created.
     * 
     */
    public Optional<String> userId() {
        return Optional.ofNullable(this.userId);
    }

    private GetBdsInstanceApiKeysPlainArgs() {}

    private GetBdsInstanceApiKeysPlainArgs(GetBdsInstanceApiKeysPlainArgs $) {
        this.bdsInstanceId = $.bdsInstanceId;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.state = $.state;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetBdsInstanceApiKeysPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetBdsInstanceApiKeysPlainArgs $;

        public Builder() {
            $ = new GetBdsInstanceApiKeysPlainArgs();
        }

        public Builder(GetBdsInstanceApiKeysPlainArgs defaults) {
            $ = new GetBdsInstanceApiKeysPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bdsInstanceId The OCID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder bdsInstanceId(String bdsInstanceId) {
            $.bdsInstanceId = bdsInstanceId;
            return this;
        }

        public Builder displayName(@Nullable String displayName) {
            $.displayName = displayName;
            return this;
        }

        public Builder filters(@Nullable List<GetBdsInstanceApiKeysFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetBdsInstanceApiKeysFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state The current status of the API key.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        /**
         * @param userId The user OCID for which this API key was created.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable String userId) {
            $.userId = userId;
            return this;
        }

        public GetBdsInstanceApiKeysPlainArgs build() {
            $.bdsInstanceId = Objects.requireNonNull($.bdsInstanceId, "expected parameter 'bdsInstanceId' to be non-null");
            return $;
        }
    }

}
