// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PluggableDatabaseConnectionStringArgs extends com.pulumi.resources.ResourceArgs {

    public static final PluggableDatabaseConnectionStringArgs Empty = new PluggableDatabaseConnectionStringArgs();

    /**
     * All connection strings to use to connect to the pluggable database.
     * 
     */
    @Import(name="allConnectionStrings")
    private @Nullable Output<Map<String,Object>> allConnectionStrings;

    /**
     * @return All connection strings to use to connect to the pluggable database.
     * 
     */
    public Optional<Output<Map<String,Object>>> allConnectionStrings() {
        return Optional.ofNullable(this.allConnectionStrings);
    }

    /**
     * A host name-based PDB connection string.
     * 
     */
    @Import(name="pdbDefault")
    private @Nullable Output<String> pdbDefault;

    /**
     * @return A host name-based PDB connection string.
     * 
     */
    public Optional<Output<String>> pdbDefault() {
        return Optional.ofNullable(this.pdbDefault);
    }

    /**
     * An IP-based PDB connection string.
     * 
     */
    @Import(name="pdbIpDefault")
    private @Nullable Output<String> pdbIpDefault;

    /**
     * @return An IP-based PDB connection string.
     * 
     */
    public Optional<Output<String>> pdbIpDefault() {
        return Optional.ofNullable(this.pdbIpDefault);
    }

    private PluggableDatabaseConnectionStringArgs() {}

    private PluggableDatabaseConnectionStringArgs(PluggableDatabaseConnectionStringArgs $) {
        this.allConnectionStrings = $.allConnectionStrings;
        this.pdbDefault = $.pdbDefault;
        this.pdbIpDefault = $.pdbIpDefault;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PluggableDatabaseConnectionStringArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PluggableDatabaseConnectionStringArgs $;

        public Builder() {
            $ = new PluggableDatabaseConnectionStringArgs();
        }

        public Builder(PluggableDatabaseConnectionStringArgs defaults) {
            $ = new PluggableDatabaseConnectionStringArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allConnectionStrings All connection strings to use to connect to the pluggable database.
         * 
         * @return builder
         * 
         */
        public Builder allConnectionStrings(@Nullable Output<Map<String,Object>> allConnectionStrings) {
            $.allConnectionStrings = allConnectionStrings;
            return this;
        }

        /**
         * @param allConnectionStrings All connection strings to use to connect to the pluggable database.
         * 
         * @return builder
         * 
         */
        public Builder allConnectionStrings(Map<String,Object> allConnectionStrings) {
            return allConnectionStrings(Output.of(allConnectionStrings));
        }

        /**
         * @param pdbDefault A host name-based PDB connection string.
         * 
         * @return builder
         * 
         */
        public Builder pdbDefault(@Nullable Output<String> pdbDefault) {
            $.pdbDefault = pdbDefault;
            return this;
        }

        /**
         * @param pdbDefault A host name-based PDB connection string.
         * 
         * @return builder
         * 
         */
        public Builder pdbDefault(String pdbDefault) {
            return pdbDefault(Output.of(pdbDefault));
        }

        /**
         * @param pdbIpDefault An IP-based PDB connection string.
         * 
         * @return builder
         * 
         */
        public Builder pdbIpDefault(@Nullable Output<String> pdbIpDefault) {
            $.pdbIpDefault = pdbIpDefault;
            return this;
        }

        /**
         * @param pdbIpDefault An IP-based PDB connection string.
         * 
         * @return builder
         * 
         */
        public Builder pdbIpDefault(String pdbIpDefault) {
            return pdbIpDefault(Output.of(pdbIpDefault));
        }

        public PluggableDatabaseConnectionStringArgs build() {
            return $;
        }
    }

}
