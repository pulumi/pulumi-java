// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.MeteringComputation;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.MeteringComputation.UsageArgs;
import com.pulumi.oci.MeteringComputation.inputs.UsageState;
import com.pulumi.oci.MeteringComputation.outputs.UsageForecast;
import com.pulumi.oci.MeteringComputation.outputs.UsageGroupByTag;
import com.pulumi.oci.MeteringComputation.outputs.UsageItem;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource provides the Usage resource in Oracle Cloud Infrastructure Metering Computation service.
 * 
 * Returns usage for the given account.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Import is not supported for this resource.
 * 
 */
@ResourceType(type="oci:MeteringComputation/usage:Usage")
public class Usage extends com.pulumi.resources.CustomResource {
    /**
     * The compartment depth level.
     * 
     */
    @Export(name="compartmentDepth", type=Double.class, parameters={})
    private Output<Double> compartmentDepth;

    /**
     * @return The compartment depth level.
     * 
     */
    public Output<Double> compartmentDepth() {
        return this.compartmentDepth;
    }
    @Export(name="filter", type=String.class, parameters={})
    private Output</* @Nullable */ String> filter;

    public Output<Optional<String>> filter() {
        return Codegen.optional(this.filter);
    }
    /**
     * Forecast configuration of usage/cost.
     * 
     */
    @Export(name="forecast", type=UsageForecast.class, parameters={})
    private Output<UsageForecast> forecast;

    /**
     * @return Forecast configuration of usage/cost.
     * 
     */
    public Output<UsageForecast> forecast() {
        return this.forecast;
    }
    /**
     * The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
     * 
     */
    @Export(name="granularity", type=String.class, parameters={})
    private Output<String> granularity;

    /**
     * @return The usage granularity. HOURLY - Hourly data aggregation. DAILY - Daily data aggregation. MONTHLY - Monthly data aggregation. TOTAL - Not yet supported.
     * 
     */
    public Output<String> granularity() {
        return this.granularity;
    }
    /**
     * Aggregate the result by. example: `[&#34;tagNamespace&#34;, &#34;tagKey&#34;, &#34;tagValue&#34;, &#34;service&#34;, &#34;skuName&#34;, &#34;skuPartNumber&#34;, &#34;unit&#34;, &#34;compartmentName&#34;, &#34;compartmentPath&#34;, &#34;compartmentId&#34;, &#34;platform&#34;, &#34;region&#34;, &#34;logicalAd&#34;, &#34;resourceId&#34;, &#34;tenantId&#34;, &#34;tenantName&#34;]`
     * 
     */
    @Export(name="groupBies", type=List.class, parameters={String.class})
    private Output<List<String>> groupBies;

    /**
     * @return Aggregate the result by. example: `[&#34;tagNamespace&#34;, &#34;tagKey&#34;, &#34;tagValue&#34;, &#34;service&#34;, &#34;skuName&#34;, &#34;skuPartNumber&#34;, &#34;unit&#34;, &#34;compartmentName&#34;, &#34;compartmentPath&#34;, &#34;compartmentId&#34;, &#34;platform&#34;, &#34;region&#34;, &#34;logicalAd&#34;, &#34;resourceId&#34;, &#34;tenantId&#34;, &#34;tenantName&#34;]`
     * 
     */
    public Output<List<String>> groupBies() {
        return this.groupBies;
    }
    /**
     * GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{&#34;namespace&#34;:&#34;oracle&#34;, &#34;key&#34;:&#34;createdBy&#34;]`
     * 
     */
    @Export(name="groupByTags", type=List.class, parameters={UsageGroupByTag.class})
    private Output<List<UsageGroupByTag>> groupByTags;

    /**
     * @return GroupBy a specific tagKey. Provide the tagNamespace and tagKey in the tag object. Only supports one tag in the list. For example: `[{&#34;namespace&#34;:&#34;oracle&#34;, &#34;key&#34;:&#34;createdBy&#34;]`
     * 
     */
    public Output<List<UsageGroupByTag>> groupByTags() {
        return this.groupByTags;
    }
    /**
     * Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
     * 
     */
    @Export(name="isAggregateByTime", type=Boolean.class, parameters={})
    private Output<Boolean> isAggregateByTime;

    /**
     * @return Whether aggregated by time. If isAggregateByTime is true, all usage/cost over the query time period will be added up.
     * 
     */
    public Output<Boolean> isAggregateByTime() {
        return this.isAggregateByTime;
    }
    /**
     * A list of usage items.
     * 
     */
    @Export(name="items", type=List.class, parameters={UsageItem.class})
    private Output<List<UsageItem>> items;

    /**
     * @return A list of usage items.
     * 
     */
    public Output<List<UsageItem>> items() {
        return this.items;
    }
    /**
     * The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data. AllCredit - Query the credit adjustments and expired credit.
     * 
     */
    @Export(name="queryType", type=String.class, parameters={})
    private Output<String> queryType;

    /**
     * @return The query usage type. COST by default if it is missing. Usage - Query the usage data. Cost - Query the cost/billing data. Credit - Query the credit adjustments data. ExpiredCredit - Query the expired credits data. AllCredit - Query the credit adjustments and expired credit.
     * 
     */
    public Output<String> queryType() {
        return this.queryType;
    }
    /**
     * Tenant ID.
     * 
     */
    @Export(name="tenantId", type=String.class, parameters={})
    private Output<String> tenantId;

    /**
     * @return Tenant ID.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }
    /**
     * The usage end time.
     * 
     */
    @Export(name="timeUsageEnded", type=String.class, parameters={})
    private Output<String> timeUsageEnded;

    /**
     * @return The usage end time.
     * 
     */
    public Output<String> timeUsageEnded() {
        return this.timeUsageEnded;
    }
    /**
     * The usage start time.
     * 
     */
    @Export(name="timeUsageStarted", type=String.class, parameters={})
    private Output<String> timeUsageStarted;

    /**
     * @return The usage start time.
     * 
     */
    public Output<String> timeUsageStarted() {
        return this.timeUsageStarted;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Usage(String name) {
        this(name, UsageArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Usage(String name, UsageArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Usage(String name, UsageArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:MeteringComputation/usage:Usage", name, args == null ? UsageArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Usage(String name, Output<String> id, @Nullable UsageState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:MeteringComputation/usage:Usage", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Usage get(String name, Output<String> id, @Nullable UsageState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Usage(name, id, state, options);
    }
}
