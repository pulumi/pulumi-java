// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetBootVolumeAttachmentsBootVolumeAttachment {
    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    private final String availabilityDomain;
    /**
     * @return The OCID of the boot volume.
     * 
     */
    private final String bootVolumeId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    private final String compartmentId;
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    private final String displayName;
    /**
     * @return Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     * 
     */
    private final String encryptionInTransitType;
    /**
     * @return The OCID of the boot volume attachment.
     * 
     */
    private final String id;
    /**
     * @return The OCID of the instance.
     * 
     */
    private final String instanceId;
    /**
     * @return Whether in-transit encryption for the boot volume&#39;s paravirtualized attachment is enabled or not.
     * 
     */
    private final Boolean isPvEncryptionInTransitEnabled;
    /**
     * @return The current state of the boot volume attachment.
     * 
     */
    private final String state;
    /**
     * @return The date and time the boot volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    private final String timeCreated;

    @CustomType.Constructor
    private GetBootVolumeAttachmentsBootVolumeAttachment(
        @CustomType.Parameter("availabilityDomain") String availabilityDomain,
        @CustomType.Parameter("bootVolumeId") String bootVolumeId,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("encryptionInTransitType") String encryptionInTransitType,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("instanceId") String instanceId,
        @CustomType.Parameter("isPvEncryptionInTransitEnabled") Boolean isPvEncryptionInTransitEnabled,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated) {
        this.availabilityDomain = availabilityDomain;
        this.bootVolumeId = bootVolumeId;
        this.compartmentId = compartmentId;
        this.displayName = displayName;
        this.encryptionInTransitType = encryptionInTransitType;
        this.id = id;
        this.instanceId = instanceId;
        this.isPvEncryptionInTransitEnabled = isPvEncryptionInTransitEnabled;
        this.state = state;
        this.timeCreated = timeCreated;
    }

    /**
     * @return The name of the availability domain.  Example: `Uocm:PHX-AD-1`
     * 
     */
    public String availabilityDomain() {
        return this.availabilityDomain;
    }
    /**
     * @return The OCID of the boot volume.
     * 
     */
    public String bootVolumeId() {
        return this.bootVolumeId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return A user-friendly name. Does not have to be unique, and it&#39;s changeable. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Refer the top-level definition of encryptionInTransitType. The default value is NONE.
     * 
     */
    public String encryptionInTransitType() {
        return this.encryptionInTransitType;
    }
    /**
     * @return The OCID of the boot volume attachment.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The OCID of the instance.
     * 
     */
    public String instanceId() {
        return this.instanceId;
    }
    /**
     * @return Whether in-transit encryption for the boot volume&#39;s paravirtualized attachment is enabled or not.
     * 
     */
    public Boolean isPvEncryptionInTransitEnabled() {
        return this.isPvEncryptionInTransitEnabled;
    }
    /**
     * @return The current state of the boot volume attachment.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the boot volume was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBootVolumeAttachmentsBootVolumeAttachment defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String availabilityDomain;
        private String bootVolumeId;
        private String compartmentId;
        private String displayName;
        private String encryptionInTransitType;
        private String id;
        private String instanceId;
        private Boolean isPvEncryptionInTransitEnabled;
        private String state;
        private String timeCreated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBootVolumeAttachmentsBootVolumeAttachment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.availabilityDomain = defaults.availabilityDomain;
    	      this.bootVolumeId = defaults.bootVolumeId;
    	      this.compartmentId = defaults.compartmentId;
    	      this.displayName = defaults.displayName;
    	      this.encryptionInTransitType = defaults.encryptionInTransitType;
    	      this.id = defaults.id;
    	      this.instanceId = defaults.instanceId;
    	      this.isPvEncryptionInTransitEnabled = defaults.isPvEncryptionInTransitEnabled;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
        }

        public Builder availabilityDomain(String availabilityDomain) {
            this.availabilityDomain = Objects.requireNonNull(availabilityDomain);
            return this;
        }
        public Builder bootVolumeId(String bootVolumeId) {
            this.bootVolumeId = Objects.requireNonNull(bootVolumeId);
            return this;
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder encryptionInTransitType(String encryptionInTransitType) {
            this.encryptionInTransitType = Objects.requireNonNull(encryptionInTransitType);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder instanceId(String instanceId) {
            this.instanceId = Objects.requireNonNull(instanceId);
            return this;
        }
        public Builder isPvEncryptionInTransitEnabled(Boolean isPvEncryptionInTransitEnabled) {
            this.isPvEncryptionInTransitEnabled = Objects.requireNonNull(isPvEncryptionInTransitEnabled);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }        public GetBootVolumeAttachmentsBootVolumeAttachment build() {
            return new GetBootVolumeAttachmentsBootVolumeAttachment(availabilityDomain, bootVolumeId, compartmentId, displayName, encryptionInTransitType, id, instanceId, isPvEncryptionInTransitEnabled, state, timeCreated);
        }
    }
}
