// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.GetAuditProfileCollectedAuditVolumesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAuditProfileCollectedAuditVolumesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAuditProfileCollectedAuditVolumesArgs Empty = new GetAuditProfileCollectedAuditVolumesArgs();

    /**
     * The OCID of the audit.
     * 
     */
    @Import(name="auditProfileId", required=true)
    private String auditProfileId;

    /**
     * @return The OCID of the audit.
     * 
     */
    public String auditProfileId() {
        return this.auditProfileId;
    }

    @Import(name="filters")
    private @Nullable List<GetAuditProfileCollectedAuditVolumesFilter> filters;

    public Optional<List<GetAuditProfileCollectedAuditVolumesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Specifying `monthInConsiderationGreaterThan` parameter will retrieve all items for which the event month is greater than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Import(name="monthInConsiderationGreaterThan")
    private @Nullable String monthInConsiderationGreaterThan;

    /**
     * @return Specifying `monthInConsiderationGreaterThan` parameter will retrieve all items for which the event month is greater than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> monthInConsiderationGreaterThan() {
        return Optional.ofNullable(this.monthInConsiderationGreaterThan);
    }

    /**
     * Specifying `monthInConsiderationLessThan` parameter will retrieve all items for which the event month is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Import(name="monthInConsiderationLessThan")
    private @Nullable String monthInConsiderationLessThan;

    /**
     * @return Specifying `monthInConsiderationLessThan` parameter will retrieve all items for which the event month is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<String> monthInConsiderationLessThan() {
        return Optional.ofNullable(this.monthInConsiderationLessThan);
    }

    /**
     * The OCID of the work request.
     * 
     */
    @Import(name="workRequestId", required=true)
    private String workRequestId;

    /**
     * @return The OCID of the work request.
     * 
     */
    public String workRequestId() {
        return this.workRequestId;
    }

    private GetAuditProfileCollectedAuditVolumesArgs() {}

    private GetAuditProfileCollectedAuditVolumesArgs(GetAuditProfileCollectedAuditVolumesArgs $) {
        this.auditProfileId = $.auditProfileId;
        this.filters = $.filters;
        this.monthInConsiderationGreaterThan = $.monthInConsiderationGreaterThan;
        this.monthInConsiderationLessThan = $.monthInConsiderationLessThan;
        this.workRequestId = $.workRequestId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAuditProfileCollectedAuditVolumesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAuditProfileCollectedAuditVolumesArgs $;

        public Builder() {
            $ = new GetAuditProfileCollectedAuditVolumesArgs();
        }

        public Builder(GetAuditProfileCollectedAuditVolumesArgs defaults) {
            $ = new GetAuditProfileCollectedAuditVolumesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param auditProfileId The OCID of the audit.
         * 
         * @return builder
         * 
         */
        public Builder auditProfileId(String auditProfileId) {
            $.auditProfileId = auditProfileId;
            return this;
        }

        public Builder filters(@Nullable List<GetAuditProfileCollectedAuditVolumesFilter> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(GetAuditProfileCollectedAuditVolumesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param monthInConsiderationGreaterThan Specifying `monthInConsiderationGreaterThan` parameter will retrieve all items for which the event month is greater than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder monthInConsiderationGreaterThan(@Nullable String monthInConsiderationGreaterThan) {
            $.monthInConsiderationGreaterThan = monthInConsiderationGreaterThan;
            return this;
        }

        /**
         * @param monthInConsiderationLessThan Specifying `monthInConsiderationLessThan` parameter will retrieve all items for which the event month is less than the date and time specified, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder monthInConsiderationLessThan(@Nullable String monthInConsiderationLessThan) {
            $.monthInConsiderationLessThan = monthInConsiderationLessThan;
            return this;
        }

        /**
         * @param workRequestId The OCID of the work request.
         * 
         * @return builder
         * 
         */
        public Builder workRequestId(String workRequestId) {
            $.workRequestId = workRequestId;
            return this;
        }

        public GetAuditProfileCollectedAuditVolumesArgs build() {
            $.auditProfileId = Objects.requireNonNull($.auditProfileId, "expected parameter 'auditProfileId' to be non-null");
            $.workRequestId = Objects.requireNonNull($.workRequestId, "expected parameter 'workRequestId' to be non-null");
            return $;
        }
    }

}
