// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Database.inputs.GetPluggableDatabasesFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetPluggableDatabasesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPluggableDatabasesArgs Empty = new GetPluggableDatabasesArgs();

    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="compartmentId")
    private Output</* @Nullable */ String> compartmentId;

    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output</* @Nullable */ String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    @Import(name="databaseId")
    private Output</* @Nullable */ String> databaseId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
     * 
     */
    public Output</* @Nullable */ String> databaseId() {
        return this.databaseId;
    }

    @Import(name="filters")
    private Output</* @Nullable */ List<GetPluggableDatabasesFilter>> filters;

    public Output</* @Nullable */ List<GetPluggableDatabasesFilter>> filters() {
        return this.filters;
    }

    /**
     * A filter to return only pluggable databases that match the entire name given. The match is not case sensitive.
     * 
     */
    @Import(name="pdbName")
    private Output</* @Nullable */ String> pdbName;

    /**
     * @return A filter to return only pluggable databases that match the entire name given. The match is not case sensitive.
     * 
     */
    public Output</* @Nullable */ String> pdbName() {
        return this.pdbName;
    }

    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    @Import(name="state")
    private Output</* @Nullable */ String> state;

    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public Output</* @Nullable */ String> state() {
        return this.state;
    }

    private GetPluggableDatabasesArgs() {}

    private GetPluggableDatabasesArgs(GetPluggableDatabasesArgs $) {
        this.compartmentId = $.compartmentId;
        this.databaseId = $.databaseId;
        this.filters = $.filters;
        this.pdbName = $.pdbName;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPluggableDatabasesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPluggableDatabasesArgs $;

        public Builder() {
            $ = new GetPluggableDatabasesArgs();
        }

        public Builder(GetPluggableDatabasesArgs defaults) {
            $ = new GetPluggableDatabasesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output</* @Nullable */ String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param databaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(Output</* @Nullable */ String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param databaseId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the database.
         * 
         * @return builder
         * 
         */
        public Builder databaseId(@Nullable String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        public Builder filters(Output</* @Nullable */ List<GetPluggableDatabasesFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetPluggableDatabasesFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetPluggableDatabasesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param pdbName A filter to return only pluggable databases that match the entire name given. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder pdbName(Output</* @Nullable */ String> pdbName) {
            $.pdbName = pdbName;
            return this;
        }

        /**
         * @param pdbName A filter to return only pluggable databases that match the entire name given. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder pdbName(@Nullable String pdbName) {
            return pdbName(Output.of(pdbName));
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(Output</* @Nullable */ String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            return state(Output.of(state));
        }

        public GetPluggableDatabasesArgs build() {
            return $;
        }
    }

}
