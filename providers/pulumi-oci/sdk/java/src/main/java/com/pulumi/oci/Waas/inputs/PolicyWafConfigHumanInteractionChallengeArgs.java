// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waas.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Waas.inputs.PolicyWafConfigHumanInteractionChallengeChallengeSettingsArgs;
import com.pulumi.oci.Waas.inputs.PolicyWafConfigHumanInteractionChallengeSetHttpHeaderArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyWafConfigHumanInteractionChallengeArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyWafConfigHumanInteractionChallengeArgs Empty = new PolicyWafConfigHumanInteractionChallengeArgs();

    /**
     * (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     * 
     */
    @Import(name="action")
    private @Nullable Output<String> action;

    /**
     * @return (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
     * 
     */
    public Optional<Output<String>> action() {
        return Optional.ofNullable(this.action);
    }

    /**
     * (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     * 
     */
    @Import(name="actionExpirationInSeconds")
    private @Nullable Output<Integer> actionExpirationInSeconds;

    /**
     * @return (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
     * 
     */
    public Optional<Output<Integer>> actionExpirationInSeconds() {
        return Optional.ofNullable(this.actionExpirationInSeconds);
    }

    /**
     * (Updatable) The challenge settings if `action` is set to `BLOCK`.
     * 
     */
    @Import(name="challengeSettings")
    private @Nullable Output<PolicyWafConfigHumanInteractionChallengeChallengeSettingsArgs> challengeSettings;

    /**
     * @return (Updatable) The challenge settings if `action` is set to `BLOCK`.
     * 
     */
    public Optional<Output<PolicyWafConfigHumanInteractionChallengeChallengeSettingsArgs>> challengeSettings() {
        return Optional.ofNullable(this.challengeSettings);
    }

    /**
     * (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
     * 
     */
    @Import(name="failureThreshold")
    private @Nullable Output<Integer> failureThreshold;

    /**
     * @return (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
     * 
     */
    public Optional<Output<Integer>> failureThreshold() {
        return Optional.ofNullable(this.failureThreshold);
    }

    /**
     * (Updatable) The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     * 
     */
    @Import(name="failureThresholdExpirationInSeconds")
    private @Nullable Output<Integer> failureThresholdExpirationInSeconds;

    /**
     * @return (Updatable) The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
     * 
     */
    public Optional<Output<Integer>> failureThresholdExpirationInSeconds() {
        return Optional.ofNullable(this.failureThresholdExpirationInSeconds);
    }

    /**
     * (Updatable) The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
     * 
     */
    @Import(name="interactionThreshold")
    private @Nullable Output<Integer> interactionThreshold;

    /**
     * @return (Updatable) The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
     * 
     */
    public Optional<Output<Integer>> interactionThreshold() {
        return Optional.ofNullable(this.interactionThreshold);
    }

    /**
     * (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    @Import(name="isEnabled", required=true)
    private Output<Boolean> isEnabled;

    /**
     * @return (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
     * 
     */
    public Output<Boolean> isEnabled() {
        return this.isEnabled;
    }

    /**
     * (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     * 
     */
    @Import(name="isNatEnabled")
    private @Nullable Output<Boolean> isNatEnabled;

    /**
     * @return (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
     * 
     */
    public Optional<Output<Boolean>> isNatEnabled() {
        return Optional.ofNullable(this.isNatEnabled);
    }

    /**
     * (Updatable) The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
     * 
     */
    @Import(name="recordingPeriodInSeconds")
    private @Nullable Output<Integer> recordingPeriodInSeconds;

    /**
     * @return (Updatable) The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
     * 
     */
    public Optional<Output<Integer>> recordingPeriodInSeconds() {
        return Optional.ofNullable(this.recordingPeriodInSeconds);
    }

    /**
     * (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     * 
     */
    @Import(name="setHttpHeader")
    private @Nullable Output<PolicyWafConfigHumanInteractionChallengeSetHttpHeaderArgs> setHttpHeader;

    /**
     * @return (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
     * 
     */
    public Optional<Output<PolicyWafConfigHumanInteractionChallengeSetHttpHeaderArgs>> setHttpHeader() {
        return Optional.ofNullable(this.setHttpHeader);
    }

    private PolicyWafConfigHumanInteractionChallengeArgs() {}

    private PolicyWafConfigHumanInteractionChallengeArgs(PolicyWafConfigHumanInteractionChallengeArgs $) {
        this.action = $.action;
        this.actionExpirationInSeconds = $.actionExpirationInSeconds;
        this.challengeSettings = $.challengeSettings;
        this.failureThreshold = $.failureThreshold;
        this.failureThresholdExpirationInSeconds = $.failureThresholdExpirationInSeconds;
        this.interactionThreshold = $.interactionThreshold;
        this.isEnabled = $.isEnabled;
        this.isNatEnabled = $.isNatEnabled;
        this.recordingPeriodInSeconds = $.recordingPeriodInSeconds;
        this.setHttpHeader = $.setHttpHeader;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyWafConfigHumanInteractionChallengeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyWafConfigHumanInteractionChallengeArgs $;

        public Builder() {
            $ = new PolicyWafConfigHumanInteractionChallengeArgs();
        }

        public Builder(PolicyWafConfigHumanInteractionChallengeArgs defaults) {
            $ = new PolicyWafConfigHumanInteractionChallengeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param action (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         * 
         * @return builder
         * 
         */
        public Builder action(@Nullable Output<String> action) {
            $.action = action;
            return this;
        }

        /**
         * @param action (Updatable) The action to take against requests from detected bots. If unspecified, defaults to `DETECT`.
         * 
         * @return builder
         * 
         */
        public Builder action(String action) {
            return action(Output.of(action));
        }

        /**
         * @param actionExpirationInSeconds (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         * 
         * @return builder
         * 
         */
        public Builder actionExpirationInSeconds(@Nullable Output<Integer> actionExpirationInSeconds) {
            $.actionExpirationInSeconds = actionExpirationInSeconds;
            return this;
        }

        /**
         * @param actionExpirationInSeconds (Updatable) The number of seconds between challenges from the same IP address. If unspecified, defaults to `60`.
         * 
         * @return builder
         * 
         */
        public Builder actionExpirationInSeconds(Integer actionExpirationInSeconds) {
            return actionExpirationInSeconds(Output.of(actionExpirationInSeconds));
        }

        /**
         * @param challengeSettings (Updatable) The challenge settings if `action` is set to `BLOCK`.
         * 
         * @return builder
         * 
         */
        public Builder challengeSettings(@Nullable Output<PolicyWafConfigHumanInteractionChallengeChallengeSettingsArgs> challengeSettings) {
            $.challengeSettings = challengeSettings;
            return this;
        }

        /**
         * @param challengeSettings (Updatable) The challenge settings if `action` is set to `BLOCK`.
         * 
         * @return builder
         * 
         */
        public Builder challengeSettings(PolicyWafConfigHumanInteractionChallengeChallengeSettingsArgs challengeSettings) {
            return challengeSettings(Output.of(challengeSettings));
        }

        /**
         * @param failureThreshold (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder failureThreshold(@Nullable Output<Integer> failureThreshold) {
            $.failureThreshold = failureThreshold;
            return this;
        }

        /**
         * @param failureThreshold (Updatable) The number of failed requests before taking action. If unspecified, defaults to `10`.
         * 
         * @return builder
         * 
         */
        public Builder failureThreshold(Integer failureThreshold) {
            return failureThreshold(Output.of(failureThreshold));
        }

        /**
         * @param failureThresholdExpirationInSeconds (Updatable) The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
         * 
         * @return builder
         * 
         */
        public Builder failureThresholdExpirationInSeconds(@Nullable Output<Integer> failureThresholdExpirationInSeconds) {
            $.failureThresholdExpirationInSeconds = failureThresholdExpirationInSeconds;
            return this;
        }

        /**
         * @param failureThresholdExpirationInSeconds (Updatable) The number of seconds before the failure threshold resets. If unspecified, defaults to  `60`.
         * 
         * @return builder
         * 
         */
        public Builder failureThresholdExpirationInSeconds(Integer failureThresholdExpirationInSeconds) {
            return failureThresholdExpirationInSeconds(Output.of(failureThresholdExpirationInSeconds));
        }

        /**
         * @param interactionThreshold (Updatable) The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
         * 
         * @return builder
         * 
         */
        public Builder interactionThreshold(@Nullable Output<Integer> interactionThreshold) {
            $.interactionThreshold = interactionThreshold;
            return this;
        }

        /**
         * @param interactionThreshold (Updatable) The number of interactions required to pass the challenge. If unspecified, defaults to `3`.
         * 
         * @return builder
         * 
         */
        public Builder interactionThreshold(Integer interactionThreshold) {
            return interactionThreshold(Output.of(interactionThreshold));
        }

        /**
         * @param isEnabled (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Output<Boolean> isEnabled) {
            $.isEnabled = isEnabled;
            return this;
        }

        /**
         * @param isEnabled (Updatable) Enables or disables the JavaScript challenge Web Application Firewall feature.
         * 
         * @return builder
         * 
         */
        public Builder isEnabled(Boolean isEnabled) {
            return isEnabled(Output.of(isEnabled));
        }

        /**
         * @param isNatEnabled (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder isNatEnabled(@Nullable Output<Boolean> isNatEnabled) {
            $.isNatEnabled = isNatEnabled;
            return this;
        }

        /**
         * @param isNatEnabled (Updatable) When enabled, the user is identified not only by the IP address but also by an unique additional hash, which prevents blocking visitors with shared IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder isNatEnabled(Boolean isNatEnabled) {
            return isNatEnabled(Output.of(isNatEnabled));
        }

        /**
         * @param recordingPeriodInSeconds (Updatable) The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
         * 
         * @return builder
         * 
         */
        public Builder recordingPeriodInSeconds(@Nullable Output<Integer> recordingPeriodInSeconds) {
            $.recordingPeriodInSeconds = recordingPeriodInSeconds;
            return this;
        }

        /**
         * @param recordingPeriodInSeconds (Updatable) The number of seconds to record the interactions from the user. If unspecified, defaults to `15`.
         * 
         * @return builder
         * 
         */
        public Builder recordingPeriodInSeconds(Integer recordingPeriodInSeconds) {
            return recordingPeriodInSeconds(Output.of(recordingPeriodInSeconds));
        }

        /**
         * @param setHttpHeader (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
         * 
         * @return builder
         * 
         */
        public Builder setHttpHeader(@Nullable Output<PolicyWafConfigHumanInteractionChallengeSetHttpHeaderArgs> setHttpHeader) {
            $.setHttpHeader = setHttpHeader;
            return this;
        }

        /**
         * @param setHttpHeader (Updatable) Adds an additional HTTP header to requests that fail the challenge before being passed to the origin. Only applicable when the `action` is set to `DETECT`.
         * 
         * @return builder
         * 
         */
        public Builder setHttpHeader(PolicyWafConfigHumanInteractionChallengeSetHttpHeaderArgs setHttpHeader) {
            return setHttpHeader(Output.of(setHttpHeader));
        }

        public PolicyWafConfigHumanInteractionChallengeArgs build() {
            $.isEnabled = Objects.requireNonNull($.isEnabled, "expected parameter 'isEnabled' to be non-null");
            return $;
        }
    }

}
