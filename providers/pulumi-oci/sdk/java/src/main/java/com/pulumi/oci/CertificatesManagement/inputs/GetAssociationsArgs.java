// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CertificatesManagement.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.CertificatesManagement.inputs.GetAssociationsFilterArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAssociationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAssociationsArgs Empty = new GetAssociationsArgs();

    /**
     * A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
     * 
     */
    @Import(name="associatedResourceId")
    private @Nullable Output<String> associatedResourceId;

    /**
     * @return A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
     * 
     */
    public Optional<Output<String>> associatedResourceId() {
        return Optional.ofNullable(this.associatedResourceId);
    }

    /**
     * The OCID of the association. If the parameter is set to null, the service lists all associations.
     * 
     */
    @Import(name="associationId")
    private @Nullable Output<String> associationId;

    /**
     * @return The OCID of the association. If the parameter is set to null, the service lists all associations.
     * 
     */
    public Optional<Output<String>> associationId() {
        return Optional.ofNullable(this.associationId);
    }

    /**
     * Type of associations to list. If the parameter is set to null, the service lists all types of associations.
     * 
     */
    @Import(name="associationType")
    private @Nullable Output<String> associationType;

    /**
     * @return Type of associations to list. If the parameter is set to null, the service lists all types of associations.
     * 
     */
    public Optional<Output<String>> associationType() {
        return Optional.ofNullable(this.associationType);
    }

    /**
     * A filter that returns only resources that match the given OCID of a certificate-related resource.
     * 
     */
    @Import(name="certificatesResourceId")
    private @Nullable Output<String> certificatesResourceId;

    /**
     * @return A filter that returns only resources that match the given OCID of a certificate-related resource.
     * 
     */
    public Optional<Output<String>> certificatesResourceId() {
        return Optional.ofNullable(this.certificatesResourceId);
    }

    /**
     * A filter that returns only resources that match the given compartment OCID.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return A filter that returns only resources that match the given compartment OCID.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetAssociationsFilterArgs>> filters;

    public Optional<Output<List<GetAssociationsFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter that returns only resources that match the specified name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return A filter that returns only resources that match the specified name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private GetAssociationsArgs() {}

    private GetAssociationsArgs(GetAssociationsArgs $) {
        this.associatedResourceId = $.associatedResourceId;
        this.associationId = $.associationId;
        this.associationType = $.associationType;
        this.certificatesResourceId = $.certificatesResourceId;
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAssociationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAssociationsArgs $;

        public Builder() {
            $ = new GetAssociationsArgs();
        }

        public Builder(GetAssociationsArgs defaults) {
            $ = new GetAssociationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param associatedResourceId A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
         * 
         * @return builder
         * 
         */
        public Builder associatedResourceId(@Nullable Output<String> associatedResourceId) {
            $.associatedResourceId = associatedResourceId;
            return this;
        }

        /**
         * @param associatedResourceId A filter that returns only resources that match the given OCID of an associated Oracle Cloud Infrastructure resource.
         * 
         * @return builder
         * 
         */
        public Builder associatedResourceId(String associatedResourceId) {
            return associatedResourceId(Output.of(associatedResourceId));
        }

        /**
         * @param associationId The OCID of the association. If the parameter is set to null, the service lists all associations.
         * 
         * @return builder
         * 
         */
        public Builder associationId(@Nullable Output<String> associationId) {
            $.associationId = associationId;
            return this;
        }

        /**
         * @param associationId The OCID of the association. If the parameter is set to null, the service lists all associations.
         * 
         * @return builder
         * 
         */
        public Builder associationId(String associationId) {
            return associationId(Output.of(associationId));
        }

        /**
         * @param associationType Type of associations to list. If the parameter is set to null, the service lists all types of associations.
         * 
         * @return builder
         * 
         */
        public Builder associationType(@Nullable Output<String> associationType) {
            $.associationType = associationType;
            return this;
        }

        /**
         * @param associationType Type of associations to list. If the parameter is set to null, the service lists all types of associations.
         * 
         * @return builder
         * 
         */
        public Builder associationType(String associationType) {
            return associationType(Output.of(associationType));
        }

        /**
         * @param certificatesResourceId A filter that returns only resources that match the given OCID of a certificate-related resource.
         * 
         * @return builder
         * 
         */
        public Builder certificatesResourceId(@Nullable Output<String> certificatesResourceId) {
            $.certificatesResourceId = certificatesResourceId;
            return this;
        }

        /**
         * @param certificatesResourceId A filter that returns only resources that match the given OCID of a certificate-related resource.
         * 
         * @return builder
         * 
         */
        public Builder certificatesResourceId(String certificatesResourceId) {
            return certificatesResourceId(Output.of(certificatesResourceId));
        }

        /**
         * @param compartmentId A filter that returns only resources that match the given compartment OCID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId A filter that returns only resources that match the given compartment OCID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(@Nullable Output<List<GetAssociationsFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetAssociationsFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetAssociationsFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param name A filter that returns only resources that match the specified name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name A filter that returns only resources that match the specified name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetAssociationsArgs build() {
            return $;
        }
    }

}
