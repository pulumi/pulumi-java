// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsubSubscription.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.OsubSubscription.inputs.GetRatecardsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetRatecardsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRatecardsArgs Empty = new GetRatecardsArgs();

    /**
     * The OCID of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    @Import(name="filters")
    private Output</* @Nullable */ List<GetRatecardsFilter>> filters;

    public Output</* @Nullable */ List<GetRatecardsFilter>> filters() {
        return this.filters;
    }

    /**
     * This param is used to get the rate card(s) filterd by the partNumber
     * 
     */
    @Import(name="partNumber")
    private Output</* @Nullable */ String> partNumber;

    /**
     * @return This param is used to get the rate card(s) filterd by the partNumber
     * 
     */
    public Output</* @Nullable */ String> partNumber() {
        return this.partNumber;
    }

    /**
     * Line level Subscription Id
     * 
     */
    @Import(name="subscriptionId", required=true)
    private Output<String> subscriptionId;

    /**
     * @return Line level Subscription Id
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * This param is used to get the rate card(s) whose effective start date starts on or after a particular date
     * 
     */
    @Import(name="timeFrom")
    private Output</* @Nullable */ String> timeFrom;

    /**
     * @return This param is used to get the rate card(s) whose effective start date starts on or after a particular date
     * 
     */
    public Output</* @Nullable */ String> timeFrom() {
        return this.timeFrom;
    }

    /**
     * This param is used to get the rate card(s) whose effective end date ends on or before a particular date
     * 
     */
    @Import(name="timeTo")
    private Output</* @Nullable */ String> timeTo;

    /**
     * @return This param is used to get the rate card(s) whose effective end date ends on or before a particular date
     * 
     */
    public Output</* @Nullable */ String> timeTo() {
        return this.timeTo;
    }

    /**
     * The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
     * 
     */
    @Import(name="xOneOriginRegion")
    private Output</* @Nullable */ String> xOneOriginRegion;

    /**
     * @return The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
     * 
     */
    public Output</* @Nullable */ String> xOneOriginRegion() {
        return this.xOneOriginRegion;
    }

    private GetRatecardsArgs() {}

    private GetRatecardsArgs(GetRatecardsArgs $) {
        this.compartmentId = $.compartmentId;
        this.filters = $.filters;
        this.partNumber = $.partNumber;
        this.subscriptionId = $.subscriptionId;
        this.timeFrom = $.timeFrom;
        this.timeTo = $.timeTo;
        this.xOneOriginRegion = $.xOneOriginRegion;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRatecardsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRatecardsArgs $;

        public Builder() {
            $ = new GetRatecardsArgs();
        }

        public Builder(GetRatecardsArgs defaults) {
            $ = new GetRatecardsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        public Builder filters(Output</* @Nullable */ List<GetRatecardsFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetRatecardsFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetRatecardsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param partNumber This param is used to get the rate card(s) filterd by the partNumber
         * 
         * @return builder
         * 
         */
        public Builder partNumber(Output</* @Nullable */ String> partNumber) {
            $.partNumber = partNumber;
            return this;
        }

        /**
         * @param partNumber This param is used to get the rate card(s) filterd by the partNumber
         * 
         * @return builder
         * 
         */
        public Builder partNumber(@Nullable String partNumber) {
            return partNumber(Output.of(partNumber));
        }

        /**
         * @param subscriptionId Line level Subscription Id
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId Line level Subscription Id
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param timeFrom This param is used to get the rate card(s) whose effective start date starts on or after a particular date
         * 
         * @return builder
         * 
         */
        public Builder timeFrom(Output</* @Nullable */ String> timeFrom) {
            $.timeFrom = timeFrom;
            return this;
        }

        /**
         * @param timeFrom This param is used to get the rate card(s) whose effective start date starts on or after a particular date
         * 
         * @return builder
         * 
         */
        public Builder timeFrom(@Nullable String timeFrom) {
            return timeFrom(Output.of(timeFrom));
        }

        /**
         * @param timeTo This param is used to get the rate card(s) whose effective end date ends on or before a particular date
         * 
         * @return builder
         * 
         */
        public Builder timeTo(Output</* @Nullable */ String> timeTo) {
            $.timeTo = timeTo;
            return this;
        }

        /**
         * @param timeTo This param is used to get the rate card(s) whose effective end date ends on or before a particular date
         * 
         * @return builder
         * 
         */
        public Builder timeTo(@Nullable String timeTo) {
            return timeTo(Output.of(timeTo));
        }

        /**
         * @param xOneOriginRegion The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
         * 
         * @return builder
         * 
         */
        public Builder xOneOriginRegion(Output</* @Nullable */ String> xOneOriginRegion) {
            $.xOneOriginRegion = xOneOriginRegion;
            return this;
        }

        /**
         * @param xOneOriginRegion The Oracle Cloud Infrastructure home region name in case home region is not us-ashburn-1 (IAD), e.g. ap-mumbai-1, us-phoenix-1 etc.
         * 
         * @return builder
         * 
         */
        public Builder xOneOriginRegion(@Nullable String xOneOriginRegion) {
            return xOneOriginRegion(Output.of(xOneOriginRegion));
        }

        public GetRatecardsArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.subscriptionId = Objects.requireNonNull($.subscriptionId, "expected parameter 'subscriptionId' to be non-null");
            return $;
        }
    }

}
