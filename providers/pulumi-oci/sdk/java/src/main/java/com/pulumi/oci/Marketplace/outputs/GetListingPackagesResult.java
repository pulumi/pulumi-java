// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Marketplace.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Marketplace.outputs.GetListingPackagesFilter;
import com.pulumi.oci.Marketplace.outputs.GetListingPackagesListingPackage;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetListingPackagesResult {
    private final @Nullable String compartmentId;
    private final @Nullable List<GetListingPackagesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The ID of the listing that the specified package belongs to.
     * 
     */
    private final String listingId;
    /**
     * @return The list of listing_packages.
     * 
     */
    private final List<GetListingPackagesListingPackage> listingPackages;
    /**
     * @return The specified package&#39;s type.
     * 
     */
    private final @Nullable String packageType;
    private final @Nullable String packageVersion;

    @CustomType.Constructor
    private GetListingPackagesResult(
        @CustomType.Parameter("compartmentId") @Nullable String compartmentId,
        @CustomType.Parameter("filters") @Nullable List<GetListingPackagesFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("listingId") String listingId,
        @CustomType.Parameter("listingPackages") List<GetListingPackagesListingPackage> listingPackages,
        @CustomType.Parameter("packageType") @Nullable String packageType,
        @CustomType.Parameter("packageVersion") @Nullable String packageVersion) {
        this.compartmentId = compartmentId;
        this.filters = filters;
        this.id = id;
        this.listingId = listingId;
        this.listingPackages = listingPackages;
        this.packageType = packageType;
        this.packageVersion = packageVersion;
    }

    public Optional<String> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }
    public List<GetListingPackagesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The ID of the listing that the specified package belongs to.
     * 
     */
    public String listingId() {
        return this.listingId;
    }
    /**
     * @return The list of listing_packages.
     * 
     */
    public List<GetListingPackagesListingPackage> listingPackages() {
        return this.listingPackages;
    }
    /**
     * @return The specified package&#39;s type.
     * 
     */
    public Optional<String> packageType() {
        return Optional.ofNullable(this.packageType);
    }
    public Optional<String> packageVersion() {
        return Optional.ofNullable(this.packageVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetListingPackagesResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String compartmentId;
        private @Nullable List<GetListingPackagesFilter> filters;
        private String id;
        private String listingId;
        private List<GetListingPackagesListingPackage> listingPackages;
        private @Nullable String packageType;
        private @Nullable String packageVersion;

        public Builder() {
    	      // Empty
        }

        public Builder(GetListingPackagesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.listingId = defaults.listingId;
    	      this.listingPackages = defaults.listingPackages;
    	      this.packageType = defaults.packageType;
    	      this.packageVersion = defaults.packageVersion;
        }

        public Builder compartmentId(@Nullable String compartmentId) {
            this.compartmentId = compartmentId;
            return this;
        }
        public Builder filters(@Nullable List<GetListingPackagesFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetListingPackagesFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder listingId(String listingId) {
            this.listingId = Objects.requireNonNull(listingId);
            return this;
        }
        public Builder listingPackages(List<GetListingPackagesListingPackage> listingPackages) {
            this.listingPackages = Objects.requireNonNull(listingPackages);
            return this;
        }
        public Builder listingPackages(GetListingPackagesListingPackage... listingPackages) {
            return listingPackages(List.of(listingPackages));
        }
        public Builder packageType(@Nullable String packageType) {
            this.packageType = packageType;
            return this;
        }
        public Builder packageVersion(@Nullable String packageVersion) {
            this.packageVersion = packageVersion;
            return this;
        }        public GetListingPackagesResult build() {
            return new GetListingPackagesResult(compartmentId, filters, id, listingId, listingPackages, packageType, packageVersion);
        }
    }
}
