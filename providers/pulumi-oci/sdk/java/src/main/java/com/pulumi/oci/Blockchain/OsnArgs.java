// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Blockchain.inputs.OsnOcpuAllocationParamArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OsnArgs extends com.pulumi.resources.ResourceArgs {

    public static final OsnArgs Empty = new OsnArgs();

    /**
     * Availability Domain to place new OSN
     * 
     */
    @Import(name="ad", required=true)
    private Output<String> ad;

    /**
     * @return Availability Domain to place new OSN
     * 
     */
    public Output<String> ad() {
        return this.ad;
    }

    /**
     * Unique service identifier.
     * 
     */
    @Import(name="blockchainPlatformId", required=true)
    private Output<String> blockchainPlatformId;

    /**
     * @return Unique service identifier.
     * 
     */
    public Output<String> blockchainPlatformId() {
        return this.blockchainPlatformId;
    }

    /**
     * (Updatable) OCPU allocation parameter
     * 
     */
    @Import(name="ocpuAllocationParam")
    private @Nullable Output<OsnOcpuAllocationParamArgs> ocpuAllocationParam;

    /**
     * @return (Updatable) OCPU allocation parameter
     * 
     */
    public Optional<Output<OsnOcpuAllocationParamArgs>> ocpuAllocationParam() {
        return Optional.ofNullable(this.ocpuAllocationParam);
    }

    private OsnArgs() {}

    private OsnArgs(OsnArgs $) {
        this.ad = $.ad;
        this.blockchainPlatformId = $.blockchainPlatformId;
        this.ocpuAllocationParam = $.ocpuAllocationParam;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OsnArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OsnArgs $;

        public Builder() {
            $ = new OsnArgs();
        }

        public Builder(OsnArgs defaults) {
            $ = new OsnArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ad Availability Domain to place new OSN
         * 
         * @return builder
         * 
         */
        public Builder ad(Output<String> ad) {
            $.ad = ad;
            return this;
        }

        /**
         * @param ad Availability Domain to place new OSN
         * 
         * @return builder
         * 
         */
        public Builder ad(String ad) {
            return ad(Output.of(ad));
        }

        /**
         * @param blockchainPlatformId Unique service identifier.
         * 
         * @return builder
         * 
         */
        public Builder blockchainPlatformId(Output<String> blockchainPlatformId) {
            $.blockchainPlatformId = blockchainPlatformId;
            return this;
        }

        /**
         * @param blockchainPlatformId Unique service identifier.
         * 
         * @return builder
         * 
         */
        public Builder blockchainPlatformId(String blockchainPlatformId) {
            return blockchainPlatformId(Output.of(blockchainPlatformId));
        }

        /**
         * @param ocpuAllocationParam (Updatable) OCPU allocation parameter
         * 
         * @return builder
         * 
         */
        public Builder ocpuAllocationParam(@Nullable Output<OsnOcpuAllocationParamArgs> ocpuAllocationParam) {
            $.ocpuAllocationParam = ocpuAllocationParam;
            return this;
        }

        /**
         * @param ocpuAllocationParam (Updatable) OCPU allocation parameter
         * 
         * @return builder
         * 
         */
        public Builder ocpuAllocationParam(OsnOcpuAllocationParamArgs ocpuAllocationParam) {
            return ocpuAllocationParam(Output.of(ocpuAllocationParam));
        }

        public OsnArgs build() {
            $.ad = Objects.requireNonNull($.ad, "expected parameter 'ad' to be non-null");
            $.blockchainPlatformId = Objects.requireNonNull($.blockchainPlatformId, "expected parameter 'blockchainPlatformId' to be non-null");
            return $;
        }
    }

}
