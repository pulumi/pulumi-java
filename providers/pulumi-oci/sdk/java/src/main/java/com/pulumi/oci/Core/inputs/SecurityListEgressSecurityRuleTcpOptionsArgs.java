// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Core.inputs.SecurityListEgressSecurityRuleTcpOptionsSourcePortRangeArgs;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SecurityListEgressSecurityRuleTcpOptionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final SecurityListEgressSecurityRuleTcpOptionsArgs Empty = new SecurityListEgressSecurityRuleTcpOptionsArgs();

    /**
     * (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
     * 
     */
    @Import(name="max")
    private @Nullable Output<Integer> max;

    /**
     * @return (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
     * 
     */
    public Optional<Output<Integer>> max() {
        return Optional.ofNullable(this.max);
    }

    /**
     * (Updatable) The minimum port number, which must not be greater than the maximum port number.
     * 
     */
    @Import(name="min")
    private @Nullable Output<Integer> min;

    /**
     * @return (Updatable) The minimum port number, which must not be greater than the maximum port number.
     * 
     */
    public Optional<Output<Integer>> min() {
        return Optional.ofNullable(this.min);
    }

    /**
     * (Updatable)
     * 
     */
    @Import(name="sourcePortRange")
    private @Nullable Output<SecurityListEgressSecurityRuleTcpOptionsSourcePortRangeArgs> sourcePortRange;

    /**
     * @return (Updatable)
     * 
     */
    public Optional<Output<SecurityListEgressSecurityRuleTcpOptionsSourcePortRangeArgs>> sourcePortRange() {
        return Optional.ofNullable(this.sourcePortRange);
    }

    private SecurityListEgressSecurityRuleTcpOptionsArgs() {}

    private SecurityListEgressSecurityRuleTcpOptionsArgs(SecurityListEgressSecurityRuleTcpOptionsArgs $) {
        this.max = $.max;
        this.min = $.min;
        this.sourcePortRange = $.sourcePortRange;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SecurityListEgressSecurityRuleTcpOptionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SecurityListEgressSecurityRuleTcpOptionsArgs $;

        public Builder() {
            $ = new SecurityListEgressSecurityRuleTcpOptionsArgs();
        }

        public Builder(SecurityListEgressSecurityRuleTcpOptionsArgs defaults) {
            $ = new SecurityListEgressSecurityRuleTcpOptionsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param max (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         * 
         * @return builder
         * 
         */
        public Builder max(@Nullable Output<Integer> max) {
            $.max = max;
            return this;
        }

        /**
         * @param max (Updatable) The maximum port number, which must not be less than the minimum port number. To specify a single port number, set both the min and max to the same value.
         * 
         * @return builder
         * 
         */
        public Builder max(Integer max) {
            return max(Output.of(max));
        }

        /**
         * @param min (Updatable) The minimum port number, which must not be greater than the maximum port number.
         * 
         * @return builder
         * 
         */
        public Builder min(@Nullable Output<Integer> min) {
            $.min = min;
            return this;
        }

        /**
         * @param min (Updatable) The minimum port number, which must not be greater than the maximum port number.
         * 
         * @return builder
         * 
         */
        public Builder min(Integer min) {
            return min(Output.of(min));
        }

        /**
         * @param sourcePortRange (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder sourcePortRange(@Nullable Output<SecurityListEgressSecurityRuleTcpOptionsSourcePortRangeArgs> sourcePortRange) {
            $.sourcePortRange = sourcePortRange;
            return this;
        }

        /**
         * @param sourcePortRange (Updatable)
         * 
         * @return builder
         * 
         */
        public Builder sourcePortRange(SecurityListEgressSecurityRuleTcpOptionsSourcePortRangeArgs sourcePortRange) {
            return sourcePortRange(Output.of(sourcePortRange));
        }

        public SecurityListEgressSecurityRuleTcpOptionsArgs build() {
            return $;
        }
    }

}
