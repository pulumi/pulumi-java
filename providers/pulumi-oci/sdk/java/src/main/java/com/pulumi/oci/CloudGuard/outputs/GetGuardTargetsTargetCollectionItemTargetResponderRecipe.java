// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.CloudGuard.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.CloudGuard.outputs.GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule;
import com.pulumi.oci.CloudGuard.outputs.GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGuardTargetsTargetCollectionItemTargetResponderRecipe {
    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    private final String compartmentId;
    /**
     * @return ResponderRule Description
     * 
     */
    private final String description;
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    private final String displayName;
    /**
     * @return List of responder rules associated with the recipe after applying all defaults
     * 
     */
    private final List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule> effectiveResponderRules;
    /**
     * @return Unique identifier of TargetResponderRecipe that is immutable on creation
     * 
     */
    private final String id;
    /**
     * @return Owner of ResponderRecipe
     * 
     */
    private final String owner;
    /**
     * @return Unique identifier for Responder Recipe of which this is an extension
     * 
     */
    private final String responderRecipeId;
    /**
     * @return List of responder rules associated with the recipe - user input
     * 
     */
    private final List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule> responderRules;
    /**
     * @return The date and time the target was created. Format defined by RFC3339.
     * 
     */
    private final String timeCreated;
    /**
     * @return The date and time the target was updated. Format defined by RFC3339.
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetGuardTargetsTargetCollectionItemTargetResponderRecipe(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("description") String description,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("effectiveResponderRules") List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule> effectiveResponderRules,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("owner") String owner,
        @CustomType.Parameter("responderRecipeId") String responderRecipeId,
        @CustomType.Parameter("responderRules") List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule> responderRules,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.compartmentId = compartmentId;
        this.description = description;
        this.displayName = displayName;
        this.effectiveResponderRules = effectiveResponderRules;
        this.id = id;
        this.owner = owner;
        this.responderRecipeId = responderRecipeId;
        this.responderRules = responderRules;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return The ID of the compartment in which to list resources.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return ResponderRule Description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return A filter to return only resources that match the entire display name given.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return List of responder rules associated with the recipe after applying all defaults
     * 
     */
    public List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule> effectiveResponderRules() {
        return this.effectiveResponderRules;
    }
    /**
     * @return Unique identifier of TargetResponderRecipe that is immutable on creation
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Owner of ResponderRecipe
     * 
     */
    public String owner() {
        return this.owner;
    }
    /**
     * @return Unique identifier for Responder Recipe of which this is an extension
     * 
     */
    public String responderRecipeId() {
        return this.responderRecipeId;
    }
    /**
     * @return List of responder rules associated with the recipe - user input
     * 
     */
    public List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule> responderRules() {
        return this.responderRules;
    }
    /**
     * @return The date and time the target was created. Format defined by RFC3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the target was updated. Format defined by RFC3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGuardTargetsTargetCollectionItemTargetResponderRecipe defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private String description;
        private String displayName;
        private List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule> effectiveResponderRules;
        private String id;
        private String owner;
        private String responderRecipeId;
        private List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule> responderRules;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetGuardTargetsTargetCollectionItemTargetResponderRecipe defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.effectiveResponderRules = defaults.effectiveResponderRules;
    	      this.id = defaults.id;
    	      this.owner = defaults.owner;
    	      this.responderRecipeId = defaults.responderRecipeId;
    	      this.responderRules = defaults.responderRules;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder description(String description) {
            this.description = Objects.requireNonNull(description);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder effectiveResponderRules(List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule> effectiveResponderRules) {
            this.effectiveResponderRules = Objects.requireNonNull(effectiveResponderRules);
            return this;
        }
        public Builder effectiveResponderRules(GetGuardTargetsTargetCollectionItemTargetResponderRecipeEffectiveResponderRule... effectiveResponderRules) {
            return effectiveResponderRules(List.of(effectiveResponderRules));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder owner(String owner) {
            this.owner = Objects.requireNonNull(owner);
            return this;
        }
        public Builder responderRecipeId(String responderRecipeId) {
            this.responderRecipeId = Objects.requireNonNull(responderRecipeId);
            return this;
        }
        public Builder responderRules(List<GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule> responderRules) {
            this.responderRules = Objects.requireNonNull(responderRules);
            return this;
        }
        public Builder responderRules(GetGuardTargetsTargetCollectionItemTargetResponderRecipeResponderRule... responderRules) {
            return responderRules(List.of(responderRules));
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetGuardTargetsTargetCollectionItemTargetResponderRecipe build() {
            return new GetGuardTargetsTargetCollectionItemTargetResponderRecipe(compartmentId, description, displayName, effectiveResponderRules, id, owner, responderRecipeId, responderRules, timeCreated, timeUpdated);
        }
    }
}
