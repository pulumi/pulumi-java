// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Dns.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Dns.outputs.GetResolverAttachedView;
import com.pulumi.oci.Dns.outputs.GetResolverEndpoint;
import com.pulumi.oci.Dns.outputs.GetResolverRule;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetResolverResult {
    /**
     * @return The OCID of the attached VCN.
     * 
     */
    private final String attachedVcnId;
    /**
     * @return The attached views. Views are evaluated in order.
     * 
     */
    private final List<GetResolverAttachedView> attachedViews;
    /**
     * @return The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver&#39;s compartment is changed.
     * 
     */
    private final String compartmentId;
    /**
     * @return The OCID of the default view.
     * 
     */
    private final String defaultViewId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return The display name of the resolver.
     * 
     */
    private final String displayName;
    /**
     * @return Read-only array of endpoints for the resolver.
     * 
     */
    private final List<GetResolverEndpoint> endpoints;
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return The OCID of the resolver.
     * 
     */
    private final String id;
    /**
     * @return A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    private final Boolean isProtected;
    private final String resolverId;
    /**
     * @return Rules for the resolver. Rules are evaluated in order.
     * 
     */
    private final List<GetResolverRule> rules;
    private final String scope;
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    private final String self;
    /**
     * @return The current state of the resource.
     * 
     */
    private final String state;
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    private final String timeCreated;
    /**
     * @return The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetResolverResult(
        @CustomType.Parameter("attachedVcnId") String attachedVcnId,
        @CustomType.Parameter("attachedViews") List<GetResolverAttachedView> attachedViews,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("defaultViewId") String defaultViewId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("endpoints") List<GetResolverEndpoint> endpoints,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("isProtected") Boolean isProtected,
        @CustomType.Parameter("resolverId") String resolverId,
        @CustomType.Parameter("rules") List<GetResolverRule> rules,
        @CustomType.Parameter("scope") String scope,
        @CustomType.Parameter("self") String self,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.attachedVcnId = attachedVcnId;
        this.attachedViews = attachedViews;
        this.compartmentId = compartmentId;
        this.defaultViewId = defaultViewId;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.endpoints = endpoints;
        this.freeformTags = freeformTags;
        this.id = id;
        this.isProtected = isProtected;
        this.resolverId = resolverId;
        this.rules = rules;
        this.scope = scope;
        this.self = self;
        this.state = state;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return The OCID of the attached VCN.
     * 
     */
    public String attachedVcnId() {
        return this.attachedVcnId;
    }
    /**
     * @return The attached views. Views are evaluated in order.
     * 
     */
    public List<GetResolverAttachedView> attachedViews() {
        return this.attachedViews;
    }
    /**
     * @return The OCID of the owning compartment. This will match the resolver that the resolver endpoint is under and will be updated if the resolver&#39;s compartment is changed.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The OCID of the default view.
     * 
     */
    public String defaultViewId() {
        return this.defaultViewId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return The display name of the resolver.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Read-only array of endpoints for the resolver.
     * 
     */
    public List<GetResolverEndpoint> endpoints() {
        return this.endpoints;
    }
    /**
     * @return Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return The OCID of the resolver.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A Boolean flag indicating whether or not parts of the resource are unable to be explicitly managed.
     * 
     */
    public Boolean isProtected() {
        return this.isProtected;
    }
    public String resolverId() {
        return this.resolverId;
    }
    /**
     * @return Rules for the resolver. Rules are evaluated in order.
     * 
     */
    public List<GetResolverRule> rules() {
        return this.rules;
    }
    public String scope() {
        return this.scope;
    }
    /**
     * @return The canonical absolute URL of the resource.
     * 
     */
    public String self() {
        return this.self;
    }
    /**
     * @return The current state of the resource.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return The date and time the resource was created in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The date and time the resource was last updated in &#34;YYYY-MM-ddThh:mm:ssZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetResolverResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String attachedVcnId;
        private List<GetResolverAttachedView> attachedViews;
        private String compartmentId;
        private String defaultViewId;
        private Map<String,Object> definedTags;
        private String displayName;
        private List<GetResolverEndpoint> endpoints;
        private Map<String,Object> freeformTags;
        private String id;
        private Boolean isProtected;
        private String resolverId;
        private List<GetResolverRule> rules;
        private String scope;
        private String self;
        private String state;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetResolverResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachedVcnId = defaults.attachedVcnId;
    	      this.attachedViews = defaults.attachedViews;
    	      this.compartmentId = defaults.compartmentId;
    	      this.defaultViewId = defaults.defaultViewId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.endpoints = defaults.endpoints;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.isProtected = defaults.isProtected;
    	      this.resolverId = defaults.resolverId;
    	      this.rules = defaults.rules;
    	      this.scope = defaults.scope;
    	      this.self = defaults.self;
    	      this.state = defaults.state;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder attachedVcnId(String attachedVcnId) {
            this.attachedVcnId = Objects.requireNonNull(attachedVcnId);
            return this;
        }
        public Builder attachedViews(List<GetResolverAttachedView> attachedViews) {
            this.attachedViews = Objects.requireNonNull(attachedViews);
            return this;
        }
        public Builder attachedViews(GetResolverAttachedView... attachedViews) {
            return attachedViews(List.of(attachedViews));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder defaultViewId(String defaultViewId) {
            this.defaultViewId = Objects.requireNonNull(defaultViewId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder endpoints(List<GetResolverEndpoint> endpoints) {
            this.endpoints = Objects.requireNonNull(endpoints);
            return this;
        }
        public Builder endpoints(GetResolverEndpoint... endpoints) {
            return endpoints(List.of(endpoints));
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder isProtected(Boolean isProtected) {
            this.isProtected = Objects.requireNonNull(isProtected);
            return this;
        }
        public Builder resolverId(String resolverId) {
            this.resolverId = Objects.requireNonNull(resolverId);
            return this;
        }
        public Builder rules(List<GetResolverRule> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(GetResolverRule... rules) {
            return rules(List.of(rules));
        }
        public Builder scope(String scope) {
            this.scope = Objects.requireNonNull(scope);
            return this;
        }
        public Builder self(String self) {
            this.self = Objects.requireNonNull(self);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetResolverResult build() {
            return new GetResolverResult(attachedVcnId, attachedViews, compartmentId, defaultViewId, definedTags, displayName, endpoints, freeformTags, id, isProtected, resolverId, rules, scope, self, state, timeCreated, timeUpdated);
        }
    }
}
