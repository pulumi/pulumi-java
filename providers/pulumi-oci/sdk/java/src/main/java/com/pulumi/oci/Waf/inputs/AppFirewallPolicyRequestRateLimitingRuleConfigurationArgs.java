// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Waf.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs Empty = new AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs();

    /**
     * (Updatable) Duration of block action application in seconds when `requestsLimit` is reached. Optional and can be 0 (no block duration).
     * 
     */
    @Import(name="actionDurationInSeconds")
    private @Nullable Output<Integer> actionDurationInSeconds;

    /**
     * @return (Updatable) Duration of block action application in seconds when `requestsLimit` is reached. Optional and can be 0 (no block duration).
     * 
     */
    public Optional<Output<Integer>> actionDurationInSeconds() {
        return Optional.ofNullable(this.actionDurationInSeconds);
    }

    /**
     * (Updatable) Evaluation period in seconds.
     * 
     */
    @Import(name="periodInSeconds", required=true)
    private Output<Integer> periodInSeconds;

    /**
     * @return (Updatable) Evaluation period in seconds.
     * 
     */
    public Output<Integer> periodInSeconds() {
        return this.periodInSeconds;
    }

    /**
     * (Updatable) Requests allowed per evaluation period.
     * 
     */
    @Import(name="requestsLimit", required=true)
    private Output<Integer> requestsLimit;

    /**
     * @return (Updatable) Requests allowed per evaluation period.
     * 
     */
    public Output<Integer> requestsLimit() {
        return this.requestsLimit;
    }

    private AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs() {}

    private AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs(AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs $) {
        this.actionDurationInSeconds = $.actionDurationInSeconds;
        this.periodInSeconds = $.periodInSeconds;
        this.requestsLimit = $.requestsLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs $;

        public Builder() {
            $ = new AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs();
        }

        public Builder(AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs defaults) {
            $ = new AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param actionDurationInSeconds (Updatable) Duration of block action application in seconds when `requestsLimit` is reached. Optional and can be 0 (no block duration).
         * 
         * @return builder
         * 
         */
        public Builder actionDurationInSeconds(@Nullable Output<Integer> actionDurationInSeconds) {
            $.actionDurationInSeconds = actionDurationInSeconds;
            return this;
        }

        /**
         * @param actionDurationInSeconds (Updatable) Duration of block action application in seconds when `requestsLimit` is reached. Optional and can be 0 (no block duration).
         * 
         * @return builder
         * 
         */
        public Builder actionDurationInSeconds(Integer actionDurationInSeconds) {
            return actionDurationInSeconds(Output.of(actionDurationInSeconds));
        }

        /**
         * @param periodInSeconds (Updatable) Evaluation period in seconds.
         * 
         * @return builder
         * 
         */
        public Builder periodInSeconds(Output<Integer> periodInSeconds) {
            $.periodInSeconds = periodInSeconds;
            return this;
        }

        /**
         * @param periodInSeconds (Updatable) Evaluation period in seconds.
         * 
         * @return builder
         * 
         */
        public Builder periodInSeconds(Integer periodInSeconds) {
            return periodInSeconds(Output.of(periodInSeconds));
        }

        /**
         * @param requestsLimit (Updatable) Requests allowed per evaluation period.
         * 
         * @return builder
         * 
         */
        public Builder requestsLimit(Output<Integer> requestsLimit) {
            $.requestsLimit = requestsLimit;
            return this;
        }

        /**
         * @param requestsLimit (Updatable) Requests allowed per evaluation period.
         * 
         * @return builder
         * 
         */
        public Builder requestsLimit(Integer requestsLimit) {
            return requestsLimit(Output.of(requestsLimit));
        }

        public AppFirewallPolicyRequestRateLimitingRuleConfigurationArgs build() {
            $.periodInSeconds = Objects.requireNonNull($.periodInSeconds, "expected parameter 'periodInSeconds' to be non-null");
            $.requestsLimit = Objects.requireNonNull($.requestsLimit, "expected parameter 'requestsLimit' to be non-null");
            return $;
        }
    }

}
