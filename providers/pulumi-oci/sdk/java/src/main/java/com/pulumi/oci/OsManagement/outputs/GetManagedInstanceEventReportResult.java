// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.OsManagement.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetManagedInstanceEventReportResult {
    private final String compartmentId;
    private final Integer counts;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final @Nullable String latestTimestampGreaterThanOrEqualTo;
    private final @Nullable String latestTimestampLessThan;
    private final String managedInstanceId;

    @CustomType.Constructor
    private GetManagedInstanceEventReportResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("counts") Integer counts,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("latestTimestampGreaterThanOrEqualTo") @Nullable String latestTimestampGreaterThanOrEqualTo,
        @CustomType.Parameter("latestTimestampLessThan") @Nullable String latestTimestampLessThan,
        @CustomType.Parameter("managedInstanceId") String managedInstanceId) {
        this.compartmentId = compartmentId;
        this.counts = counts;
        this.id = id;
        this.latestTimestampGreaterThanOrEqualTo = latestTimestampGreaterThanOrEqualTo;
        this.latestTimestampLessThan = latestTimestampLessThan;
        this.managedInstanceId = managedInstanceId;
    }

    public String compartmentId() {
        return this.compartmentId;
    }
    public Integer counts() {
        return this.counts;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> latestTimestampGreaterThanOrEqualTo() {
        return Optional.ofNullable(this.latestTimestampGreaterThanOrEqualTo);
    }
    public Optional<String> latestTimestampLessThan() {
        return Optional.ofNullable(this.latestTimestampLessThan);
    }
    public String managedInstanceId() {
        return this.managedInstanceId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetManagedInstanceEventReportResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private Integer counts;
        private String id;
        private @Nullable String latestTimestampGreaterThanOrEqualTo;
        private @Nullable String latestTimestampLessThan;
        private String managedInstanceId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetManagedInstanceEventReportResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.counts = defaults.counts;
    	      this.id = defaults.id;
    	      this.latestTimestampGreaterThanOrEqualTo = defaults.latestTimestampGreaterThanOrEqualTo;
    	      this.latestTimestampLessThan = defaults.latestTimestampLessThan;
    	      this.managedInstanceId = defaults.managedInstanceId;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder counts(Integer counts) {
            this.counts = Objects.requireNonNull(counts);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder latestTimestampGreaterThanOrEqualTo(@Nullable String latestTimestampGreaterThanOrEqualTo) {
            this.latestTimestampGreaterThanOrEqualTo = latestTimestampGreaterThanOrEqualTo;
            return this;
        }
        public Builder latestTimestampLessThan(@Nullable String latestTimestampLessThan) {
            this.latestTimestampLessThan = latestTimestampLessThan;
            return this;
        }
        public Builder managedInstanceId(String managedInstanceId) {
            this.managedInstanceId = Objects.requireNonNull(managedInstanceId);
            return this;
        }        public GetManagedInstanceEventReportResult build() {
            return new GetManagedInstanceEventReportResult(compartmentId, counts, id, latestTimestampGreaterThanOrEqualTo, latestTimestampLessThan, managedInstanceId);
        }
    }
}
