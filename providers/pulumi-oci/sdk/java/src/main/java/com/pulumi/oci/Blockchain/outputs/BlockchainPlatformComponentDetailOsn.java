// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Blockchain.outputs.BlockchainPlatformComponentDetailOsnOcpuAllocationParam;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BlockchainPlatformComponentDetailOsn {
    /**
     * @return Availability Domain of peer
     * 
     */
    private final @Nullable String ad;
    /**
     * @return OCPU allocation parameter
     * 
     */
    private final @Nullable List<BlockchainPlatformComponentDetailOsnOcpuAllocationParam> ocpuAllocationParams;
    /**
     * @return OSN identifier
     * 
     */
    private final @Nullable String osnKey;
    /**
     * @return The current state of the Platform Instance.
     * 
     */
    private final @Nullable String state;

    @CustomType.Constructor
    private BlockchainPlatformComponentDetailOsn(
        @CustomType.Parameter("ad") @Nullable String ad,
        @CustomType.Parameter("ocpuAllocationParams") @Nullable List<BlockchainPlatformComponentDetailOsnOcpuAllocationParam> ocpuAllocationParams,
        @CustomType.Parameter("osnKey") @Nullable String osnKey,
        @CustomType.Parameter("state") @Nullable String state) {
        this.ad = ad;
        this.ocpuAllocationParams = ocpuAllocationParams;
        this.osnKey = osnKey;
        this.state = state;
    }

    /**
     * @return Availability Domain of peer
     * 
     */
    public Optional<String> ad() {
        return Optional.ofNullable(this.ad);
    }
    /**
     * @return OCPU allocation parameter
     * 
     */
    public List<BlockchainPlatformComponentDetailOsnOcpuAllocationParam> ocpuAllocationParams() {
        return this.ocpuAllocationParams == null ? List.of() : this.ocpuAllocationParams;
    }
    /**
     * @return OSN identifier
     * 
     */
    public Optional<String> osnKey() {
        return Optional.ofNullable(this.osnKey);
    }
    /**
     * @return The current state of the Platform Instance.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BlockchainPlatformComponentDetailOsn defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String ad;
        private @Nullable List<BlockchainPlatformComponentDetailOsnOcpuAllocationParam> ocpuAllocationParams;
        private @Nullable String osnKey;
        private @Nullable String state;

        public Builder() {
    	      // Empty
        }

        public Builder(BlockchainPlatformComponentDetailOsn defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ad = defaults.ad;
    	      this.ocpuAllocationParams = defaults.ocpuAllocationParams;
    	      this.osnKey = defaults.osnKey;
    	      this.state = defaults.state;
        }

        public Builder ad(@Nullable String ad) {
            this.ad = ad;
            return this;
        }
        public Builder ocpuAllocationParams(@Nullable List<BlockchainPlatformComponentDetailOsnOcpuAllocationParam> ocpuAllocationParams) {
            this.ocpuAllocationParams = ocpuAllocationParams;
            return this;
        }
        public Builder ocpuAllocationParams(BlockchainPlatformComponentDetailOsnOcpuAllocationParam... ocpuAllocationParams) {
            return ocpuAllocationParams(List.of(ocpuAllocationParams));
        }
        public Builder osnKey(@Nullable String osnKey) {
            this.osnKey = osnKey;
            return this;
        }
        public Builder state(@Nullable String state) {
            this.state = state;
            return this;
        }        public BlockchainPlatformComponentDetailOsn build() {
            return new BlockchainPlatformComponentDetailOsn(ad, ocpuAllocationParams, osnKey, state);
        }
    }
}
