// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class VolumeBackupPolicyAssignmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeBackupPolicyAssignmentArgs Empty = new VolumeBackupPolicyAssignmentArgs();

    /**
     * The OCID of the volume to assign the policy to.
     * 
     */
    @Import(name="assetId", required=true)
    private Output<String> assetId;

    /**
     * @return The OCID of the volume to assign the policy to.
     * 
     */
    public Output<String> assetId() {
        return this.assetId;
    }

    /**
     * The OCID of the volume backup policy to assign to the volume.
     * 
     */
    @Import(name="policyId", required=true)
    private Output<String> policyId;

    /**
     * @return The OCID of the volume backup policy to assign to the volume.
     * 
     */
    public Output<String> policyId() {
        return this.policyId;
    }

    private VolumeBackupPolicyAssignmentArgs() {}

    private VolumeBackupPolicyAssignmentArgs(VolumeBackupPolicyAssignmentArgs $) {
        this.assetId = $.assetId;
        this.policyId = $.policyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeBackupPolicyAssignmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeBackupPolicyAssignmentArgs $;

        public Builder() {
            $ = new VolumeBackupPolicyAssignmentArgs();
        }

        public Builder(VolumeBackupPolicyAssignmentArgs defaults) {
            $ = new VolumeBackupPolicyAssignmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param assetId The OCID of the volume to assign the policy to.
         * 
         * @return builder
         * 
         */
        public Builder assetId(Output<String> assetId) {
            $.assetId = assetId;
            return this;
        }

        /**
         * @param assetId The OCID of the volume to assign the policy to.
         * 
         * @return builder
         * 
         */
        public Builder assetId(String assetId) {
            return assetId(Output.of(assetId));
        }

        /**
         * @param policyId The OCID of the volume backup policy to assign to the volume.
         * 
         * @return builder
         * 
         */
        public Builder policyId(Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId The OCID of the volume backup policy to assign to the volume.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        public VolumeBackupPolicyAssignmentArgs build() {
            $.assetId = Objects.requireNonNull($.assetId, "expected parameter 'assetId' to be non-null");
            $.policyId = Objects.requireNonNull($.policyId, "expected parameter 'policyId' to be non-null");
            return $;
        }
    }

}
