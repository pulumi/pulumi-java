// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Audit.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Audit.outputs.GetEventsAuditEvent;
import com.pulumi.oci.Audit.outputs.GetEventsFilter;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetEventsResult {
    /**
     * @return The list of audit_events.
     * 
     */
    private final List<GetEventsAuditEvent> auditEvents;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the resource  emitting the event.
     * 
     */
    private final String compartmentId;
    private final String endTime;
    private final @Nullable List<GetEventsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    private final String startTime;

    @CustomType.Constructor
    private GetEventsResult(
        @CustomType.Parameter("auditEvents") List<GetEventsAuditEvent> auditEvents,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("endTime") String endTime,
        @CustomType.Parameter("filters") @Nullable List<GetEventsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("startTime") String startTime) {
        this.auditEvents = auditEvents;
        this.compartmentId = compartmentId;
        this.endTime = endTime;
        this.filters = filters;
        this.id = id;
        this.startTime = startTime;
    }

    /**
     * @return The list of audit_events.
     * 
     */
    public List<GetEventsAuditEvent> auditEvents() {
        return this.auditEvents;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment of the resource  emitting the event.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    public String endTime() {
        return this.endTime;
    }
    public List<GetEventsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String startTime() {
        return this.startTime;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEventsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetEventsAuditEvent> auditEvents;
        private String compartmentId;
        private String endTime;
        private @Nullable List<GetEventsFilter> filters;
        private String id;
        private String startTime;

        public Builder() {
    	      // Empty
        }

        public Builder(GetEventsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.auditEvents = defaults.auditEvents;
    	      this.compartmentId = defaults.compartmentId;
    	      this.endTime = defaults.endTime;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.startTime = defaults.startTime;
        }

        public Builder auditEvents(List<GetEventsAuditEvent> auditEvents) {
            this.auditEvents = Objects.requireNonNull(auditEvents);
            return this;
        }
        public Builder auditEvents(GetEventsAuditEvent... auditEvents) {
            return auditEvents(List.of(auditEvents));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder endTime(String endTime) {
            this.endTime = Objects.requireNonNull(endTime);
            return this;
        }
        public Builder filters(@Nullable List<GetEventsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetEventsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder startTime(String startTime) {
            this.startTime = Objects.requireNonNull(startTime);
            return this;
        }        public GetEventsResult build() {
            return new GetEventsResult(auditEvents, compartmentId, endTime, filters, id, startTime);
        }
    }
}
