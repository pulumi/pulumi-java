// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Core.outputs.GetRemotePeeringConnectionsFilter;
import com.pulumi.oci.Core.outputs.GetRemotePeeringConnectionsRemotePeeringConnection;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRemotePeeringConnectionsResult {
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the RPC.
     * 
     */
    private final String compartmentId;
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG that this RPC belongs to.
     * 
     */
    private final @Nullable String drgId;
    private final @Nullable List<GetRemotePeeringConnectionsFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private final String id;
    /**
     * @return The list of remote_peering_connections.
     * 
     */
    private final List<GetRemotePeeringConnectionsRemotePeeringConnection> remotePeeringConnections;

    @CustomType.Constructor
    private GetRemotePeeringConnectionsResult(
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("drgId") @Nullable String drgId,
        @CustomType.Parameter("filters") @Nullable List<GetRemotePeeringConnectionsFilter> filters,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("remotePeeringConnections") List<GetRemotePeeringConnectionsRemotePeeringConnection> remotePeeringConnections) {
        this.compartmentId = compartmentId;
        this.drgId = drgId;
        this.filters = filters;
        this.id = id;
        this.remotePeeringConnections = remotePeeringConnections;
    }

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment that contains the RPC.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG that this RPC belongs to.
     * 
     */
    public Optional<String> drgId() {
        return Optional.ofNullable(this.drgId);
    }
    public List<GetRemotePeeringConnectionsFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The list of remote_peering_connections.
     * 
     */
    public List<GetRemotePeeringConnectionsRemotePeeringConnection> remotePeeringConnections() {
        return this.remotePeeringConnections;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRemotePeeringConnectionsResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String compartmentId;
        private @Nullable String drgId;
        private @Nullable List<GetRemotePeeringConnectionsFilter> filters;
        private String id;
        private List<GetRemotePeeringConnectionsRemotePeeringConnection> remotePeeringConnections;

        public Builder() {
    	      // Empty
        }

        public Builder(GetRemotePeeringConnectionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.compartmentId = defaults.compartmentId;
    	      this.drgId = defaults.drgId;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.remotePeeringConnections = defaults.remotePeeringConnections;
        }

        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder drgId(@Nullable String drgId) {
            this.drgId = drgId;
            return this;
        }
        public Builder filters(@Nullable List<GetRemotePeeringConnectionsFilter> filters) {
            this.filters = filters;
            return this;
        }
        public Builder filters(GetRemotePeeringConnectionsFilter... filters) {
            return filters(List.of(filters));
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder remotePeeringConnections(List<GetRemotePeeringConnectionsRemotePeeringConnection> remotePeeringConnections) {
            this.remotePeeringConnections = Objects.requireNonNull(remotePeeringConnections);
            return this;
        }
        public Builder remotePeeringConnections(GetRemotePeeringConnectionsRemotePeeringConnection... remotePeeringConnections) {
            return remotePeeringConnections(List.of(remotePeeringConnections));
        }        public GetRemotePeeringConnectionsResult build() {
            return new GetRemotePeeringConnectionsResult(compartmentId, drgId, filters, id, remotePeeringConnections);
        }
    }
}
