// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Mysql.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.Mysql.outputs.ChannelSourceSslCaCertificate;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ChannelSource {
    /**
     * @return (Updatable) The network address of the MySQL instance.
     * 
     */
    private final String hostname;
    /**
     * @return (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
     * 
     */
    private final String password;
    /**
     * @return (Updatable) The port the source MySQL instance listens on.
     * 
     */
    private final @Nullable Integer port;
    /**
     * @return (Updatable) The specific source identifier.
     * 
     */
    private final String sourceType;
    /**
     * @return (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
     * 
     */
    private final @Nullable ChannelSourceSslCaCertificate sslCaCertificate;
    /**
     * @return (Updatable) The SSL mode of the Channel.
     * 
     */
    private final String sslMode;
    /**
     * @return (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
     * 
     */
    private final String username;

    @CustomType.Constructor
    private ChannelSource(
        @CustomType.Parameter("hostname") String hostname,
        @CustomType.Parameter("password") String password,
        @CustomType.Parameter("port") @Nullable Integer port,
        @CustomType.Parameter("sourceType") String sourceType,
        @CustomType.Parameter("sslCaCertificate") @Nullable ChannelSourceSslCaCertificate sslCaCertificate,
        @CustomType.Parameter("sslMode") String sslMode,
        @CustomType.Parameter("username") String username) {
        this.hostname = hostname;
        this.password = password;
        this.port = port;
        this.sourceType = sourceType;
        this.sslCaCertificate = sslCaCertificate;
        this.sslMode = sslMode;
        this.username = username;
    }

    /**
     * @return (Updatable) The network address of the MySQL instance.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return (Updatable) The password for the replication user. The password must be between 8 and 32 characters long, and must contain at least 1 numeric character, 1 lowercase character, 1 uppercase character, and 1 special (nonalphanumeric) character.
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return (Updatable) The port the source MySQL instance listens on.
     * 
     */
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    /**
     * @return (Updatable) The specific source identifier.
     * 
     */
    public String sourceType() {
        return this.sourceType;
    }
    /**
     * @return (Updatable) The CA certificate of the server used for VERIFY_IDENTITY and VERIFY_CA ssl modes.
     * 
     */
    public Optional<ChannelSourceSslCaCertificate> sslCaCertificate() {
        return Optional.ofNullable(this.sslCaCertificate);
    }
    /**
     * @return (Updatable) The SSL mode of the Channel.
     * 
     */
    public String sslMode() {
        return this.sslMode;
    }
    /**
     * @return (Updatable) The name of the replication user on the source MySQL instance. The username has a maximum length of 96 characters. For more information, please see the [MySQL documentation](https://dev.mysql.com/doc/refman/8.0/en/change-master-to.html)
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ChannelSource defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String hostname;
        private String password;
        private @Nullable Integer port;
        private String sourceType;
        private @Nullable ChannelSourceSslCaCertificate sslCaCertificate;
        private String sslMode;
        private String username;

        public Builder() {
    	      // Empty
        }

        public Builder(ChannelSource defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.hostname = defaults.hostname;
    	      this.password = defaults.password;
    	      this.port = defaults.port;
    	      this.sourceType = defaults.sourceType;
    	      this.sslCaCertificate = defaults.sslCaCertificate;
    	      this.sslMode = defaults.sslMode;
    	      this.username = defaults.username;
        }

        public Builder hostname(String hostname) {
            this.hostname = Objects.requireNonNull(hostname);
            return this;
        }
        public Builder password(String password) {
            this.password = Objects.requireNonNull(password);
            return this;
        }
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        public Builder sourceType(String sourceType) {
            this.sourceType = Objects.requireNonNull(sourceType);
            return this;
        }
        public Builder sslCaCertificate(@Nullable ChannelSourceSslCaCertificate sslCaCertificate) {
            this.sslCaCertificate = sslCaCertificate;
            return this;
        }
        public Builder sslMode(String sslMode) {
            this.sslMode = Objects.requireNonNull(sslMode);
            return this;
        }
        public Builder username(String username) {
            this.username = Objects.requireNonNull(username);
            return this;
        }        public ChannelSource build() {
            return new ChannelSource(hostname, password, port, sourceType, sslCaCertificate, sslMode, username);
        }
    }
}
