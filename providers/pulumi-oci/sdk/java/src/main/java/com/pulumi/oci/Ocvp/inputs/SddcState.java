// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Ocvp.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Ocvp.inputs.SddcHcxOnPremLicenseArgs;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SddcState extends com.pulumi.resources.ResourceArgs {

    public static final SddcState Empty = new SddcState();

    /**
     * The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
     * 
     */
    @Import(name="actualEsxiHostsCount")
    private @Nullable Output<Integer> actualEsxiHostsCount;

    /**
     * @return The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
     * 
     */
    public Optional<Output<Integer>> actualEsxiHostsCount() {
        return Optional.ofNullable(this.actualEsxiHostsCount);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the SDDC.
     * 
     */
    @Import(name="compartmentId")
    private @Nullable Output<String> compartmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the SDDC.
     * 
     */
    public Optional<Output<String>> compartmentId() {
        return Optional.ofNullable(this.compartmentId);
    }

    /**
     * The availability domain to create the SDDC&#39;s ESXi hosts in. For multi-AD SDDC deployment, set to `multi-AD`.
     * 
     */
    @Import(name="computeAvailabilityDomain")
    private @Nullable Output<String> computeAvailabilityDomain;

    /**
     * @return The availability domain to create the SDDC&#39;s ESXi hosts in. For multi-AD SDDC deployment, set to `multi-AD`.
     * 
     */
    public Optional<Output<String>> computeAvailabilityDomain() {
        return Optional.ofNullable(this.computeAvailabilityDomain);
    }

    /**
     * (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    @Import(name="definedTags")
    private @Nullable Output<Map<String,Object>> definedTags;

    /**
     * @return (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> definedTags() {
        return Optional.ofNullable(this.definedTags);
    }

    /**
     * (Updatable) A descriptive name for the SDDC. SDDC name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return (Updatable) A descriptive name for the SDDC. SDDC name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The number of ESXi hosts to create in the SDDC. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)).
     * 
     */
    @Import(name="esxiHostsCount")
    private @Nullable Output<Integer> esxiHostsCount;

    /**
     * @return The number of ESXi hosts to create in the SDDC. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)).
     * 
     */
    public Optional<Output<Integer>> esxiHostsCount() {
        return Optional.ofNullable(this.esxiHostsCount);
    }

    /**
     * (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    @Import(name="freeformTags")
    private @Nullable Output<Map<String,Object>> freeformTags;

    /**
     * @return (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
     * 
     */
    public Optional<Output<Map<String,Object>>> freeformTags() {
        return Optional.ofNullable(this.freeformTags);
    }

    /**
     * (Updatable) The action to be performed upon HCX licenses. &#34;UPGRADE&#34; will upgrade the SDDC from HCX Advanced to HCX Enterprise. &#34;DOWNGRADE&#34; will downgrade the SDDC from HCX Enterprise to HCX Advanced after current HCX Enterprise billing cycle end date. &#34;CANCEL_DOWNGRADE&#34; will cancel the pending downgrade of HCX licenses. The action will only be performed when its value is changed. This field can also be used to enable HCX Enterprise during SDDC creation. If &#34;UPGRADE&#34; is set during SDDC creation, the SDDC will be created with HCX Enterprise enable. Supported actions during update: UPGRADE, DOWNGRADE, CANCEL_DOWNGRADE. Supported actions during creation: UPGRADE.
     * 
     */
    @Import(name="hcxAction")
    private @Nullable Output<String> hcxAction;

    /**
     * @return (Updatable) The action to be performed upon HCX licenses. &#34;UPGRADE&#34; will upgrade the SDDC from HCX Advanced to HCX Enterprise. &#34;DOWNGRADE&#34; will downgrade the SDDC from HCX Enterprise to HCX Advanced after current HCX Enterprise billing cycle end date. &#34;CANCEL_DOWNGRADE&#34; will cancel the pending downgrade of HCX licenses. The action will only be performed when its value is changed. This field can also be used to enable HCX Enterprise during SDDC creation. If &#34;UPGRADE&#34; is set during SDDC creation, the SDDC will be created with HCX Enterprise enable. Supported actions during update: UPGRADE, DOWNGRADE, CANCEL_DOWNGRADE. Supported actions during creation: UPGRADE.
     * 
     */
    public Optional<Output<String>> hcxAction() {
        return Optional.ofNullable(this.hcxAction);
    }

    /**
     * The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    @Import(name="hcxFqdn")
    private @Nullable Output<String> hcxFqdn;

    /**
     * @return The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    public Optional<Output<String>> hcxFqdn() {
        return Optional.ofNullable(this.hcxFqdn);
    }

    /**
     * The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
     * 
     */
    @Import(name="hcxInitialPassword")
    private @Nullable Output<String> hcxInitialPassword;

    /**
     * @return The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
     * 
     */
    public Optional<Output<String>> hcxInitialPassword() {
        return Optional.ofNullable(this.hcxInitialPassword);
    }

    /**
     * The activation keys to use on the on-premises HCX Enterprise appliances you site pair with HCX Manager in your VMware Solution. The number of keys provided depends on the HCX license type. HCX Advanced provides 3 activation keys. HCX Enterprise provides 10 activation keys.
     * 
     */
    @Import(name="hcxOnPremKey")
    private @Nullable Output<String> hcxOnPremKey;

    /**
     * @return The activation keys to use on the on-premises HCX Enterprise appliances you site pair with HCX Manager in your VMware Solution. The number of keys provided depends on the HCX license type. HCX Advanced provides 3 activation keys. HCX Enterprise provides 10 activation keys.
     * 
     */
    public Optional<Output<String>> hcxOnPremKey() {
        return Optional.ofNullable(this.hcxOnPremKey);
    }

    /**
     * The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
     * 
     */
    @Import(name="hcxOnPremLicenses")
    private @Nullable Output<List<SddcHcxOnPremLicenseArgs>> hcxOnPremLicenses;

    /**
     * @return The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
     * 
     */
    public Optional<Output<List<SddcHcxOnPremLicenseArgs>>> hcxOnPremLicenses() {
        return Optional.ofNullable(this.hcxOnPremLicenses);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    @Import(name="hcxPrivateIpId")
    private @Nullable Output<String> hcxPrivateIpId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    public Optional<Output<String>> hcxPrivateIpId() {
        return Optional.ofNullable(this.hcxPrivateIpId);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the HCX component of the VMware environment. This value is required only when `isHcxEnabled` is true.
     * 
     */
    @Import(name="hcxVlanId")
    private @Nullable Output<String> hcxVlanId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the HCX component of the VMware environment. This value is required only when `isHcxEnabled` is true.
     * 
     */
    public Optional<Output<String>> hcxVlanId() {
        return Optional.ofNullable(this.hcxVlanId);
    }

    /**
     * The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
     * 
     */
    @Import(name="initialSku")
    private @Nullable Output<String> initialSku;

    /**
     * @return The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
     * 
     */
    public Optional<Output<String>> initialSku() {
        return Optional.ofNullable(this.initialSku);
    }

    /**
     * A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn&#39;t set, the SDDC&#39;s `displayName` is used as the prefix.
     * 
     */
    @Import(name="instanceDisplayNamePrefix")
    private @Nullable Output<String> instanceDisplayNamePrefix;

    /**
     * @return A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn&#39;t set, the SDDC&#39;s `displayName` is used as the prefix.
     * 
     */
    public Optional<Output<String>> instanceDisplayNamePrefix() {
        return Optional.ofNullable(this.instanceDisplayNamePrefix);
    }

    /**
     * Indicates whether to enable HCX for this SDDC.
     * 
     */
    @Import(name="isHcxEnabled")
    private @Nullable Output<Boolean> isHcxEnabled;

    /**
     * @return Indicates whether to enable HCX for this SDDC.
     * 
     */
    public Optional<Output<Boolean>> isHcxEnabled() {
        return Optional.ofNullable(this.isHcxEnabled);
    }

    /**
     * Indicates whether HCX Enterprise is enabled for this SDDC.
     * 
     */
    @Import(name="isHcxEnterpriseEnabled")
    private @Nullable Output<Boolean> isHcxEnterpriseEnabled;

    /**
     * @return Indicates whether HCX Enterprise is enabled for this SDDC.
     * 
     */
    public Optional<Output<Boolean>> isHcxEnterpriseEnabled() {
        return Optional.ofNullable(this.isHcxEnterpriseEnabled);
    }

    /**
     * Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
     * 
     */
    @Import(name="isHcxPendingDowngrade")
    private @Nullable Output<Boolean> isHcxPendingDowngrade;

    /**
     * @return Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
     * 
     */
    public Optional<Output<Boolean>> isHcxPendingDowngrade() {
        return Optional.ofNullable(this.isHcxPendingDowngrade);
    }

    /**
     * Indicates whether shielded instance is enabled for this SDDC.
     * 
     */
    @Import(name="isShieldedInstanceEnabled")
    private @Nullable Output<Boolean> isShieldedInstanceEnabled;

    /**
     * @return Indicates whether shielded instance is enabled for this SDDC.
     * 
     */
    public Optional<Output<Boolean>> isShieldedInstanceEnabled() {
        return Optional.ofNullable(this.isShieldedInstanceEnabled);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 1 component of the VMware environment.
     * 
     */
    @Import(name="nsxEdgeUplink1vlanId")
    private @Nullable Output<String> nsxEdgeUplink1vlanId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 1 component of the VMware environment.
     * 
     */
    public Optional<Output<String>> nsxEdgeUplink1vlanId() {
        return Optional.ofNullable(this.nsxEdgeUplink1vlanId);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 2 component of the VMware environment.
     * 
     */
    @Import(name="nsxEdgeUplink2vlanId")
    private @Nullable Output<String> nsxEdgeUplink2vlanId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 2 component of the VMware environment.
     * 
     */
    public Optional<Output<String>> nsxEdgeUplink2vlanId() {
        return Optional.ofNullable(this.nsxEdgeUplink2vlanId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    @Import(name="nsxEdgeUplinkIpId")
    private @Nullable Output<String> nsxEdgeUplinkIpId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    public Optional<Output<String>> nsxEdgeUplinkIpId() {
        return Optional.ofNullable(this.nsxEdgeUplinkIpId);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge VTEP component of the VMware environment.
     * 
     */
    @Import(name="nsxEdgeVtepVlanId")
    private @Nullable Output<String> nsxEdgeVtepVlanId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge VTEP component of the VMware environment.
     * 
     */
    public Optional<Output<String>> nsxEdgeVtepVlanId() {
        return Optional.ofNullable(this.nsxEdgeVtepVlanId);
    }

    /**
     * The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    @Import(name="nsxManagerFqdn")
    private @Nullable Output<String> nsxManagerFqdn;

    /**
     * @return The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    public Optional<Output<String>> nsxManagerFqdn() {
        return Optional.ofNullable(this.nsxManagerFqdn);
    }

    /**
     * The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
     * 
     */
    @Import(name="nsxManagerInitialPassword")
    private @Nullable Output<String> nsxManagerInitialPassword;

    /**
     * @return The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
     * 
     */
    public Optional<Output<String>> nsxManagerInitialPassword() {
        return Optional.ofNullable(this.nsxManagerInitialPassword);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    @Import(name="nsxManagerPrivateIpId")
    private @Nullable Output<String> nsxManagerPrivateIpId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    public Optional<Output<String>> nsxManagerPrivateIpId() {
        return Optional.ofNullable(this.nsxManagerPrivateIpId);
    }

    /**
     * The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
     * 
     */
    @Import(name="nsxManagerUsername")
    private @Nullable Output<String> nsxManagerUsername;

    /**
     * @return The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
     * 
     */
    public Optional<Output<String>> nsxManagerUsername() {
        return Optional.ofNullable(this.nsxManagerUsername);
    }

    /**
     * The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
     * 
     */
    @Import(name="nsxOverlaySegmentName")
    private @Nullable Output<String> nsxOverlaySegmentName;

    /**
     * @return The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
     * 
     */
    public Optional<Output<String>> nsxOverlaySegmentName() {
        return Optional.ofNullable(this.nsxOverlaySegmentName);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX VTEP component of the VMware environment.
     * 
     */
    @Import(name="nsxVtepVlanId")
    private @Nullable Output<String> nsxVtepVlanId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX VTEP component of the VMware environment.
     * 
     */
    public Optional<Output<String>> nsxVtepVlanId() {
        return Optional.ofNullable(this.nsxVtepVlanId);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet to use for provisioning the SDDC.
     * 
     */
    @Import(name="provisioningSubnetId")
    private @Nullable Output<String> provisioningSubnetId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet to use for provisioning the SDDC.
     * 
     */
    public Optional<Output<String>> provisioningSubnetId() {
        return Optional.ofNullable(this.provisioningSubnetId);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
     * 
     */
    @Import(name="provisioningVlanId")
    private @Nullable Output<String> provisioningVlanId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
     * 
     */
    public Optional<Output<String>> provisioningVlanId() {
        return Optional.ofNullable(this.provisioningVlanId);
    }

    /**
     * (Updatable) HCX on-premise licenses status will be refreshed whenever the value of this field is changed.
     * 
     */
    @Import(name="refreshHcxLicenseStatus")
    private @Nullable Output<Boolean> refreshHcxLicenseStatus;

    /**
     * @return (Updatable) HCX on-premise licenses status will be refreshed whenever the value of this field is changed.
     * 
     */
    public Optional<Output<Boolean>> refreshHcxLicenseStatus() {
        return Optional.ofNullable(this.refreshHcxLicenseStatus);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
     * 
     */
    @Import(name="replicationVlanId")
    private @Nullable Output<String> replicationVlanId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
     * 
     */
    public Optional<Output<String>> replicationVlanId() {
        return Optional.ofNullable(this.replicationVlanId);
    }

    /**
     * (Updatable) The HCX on-premise licenses to be reserved when downgrade from HCX Enterprise to HCX Advanced. It should not be provided during resource creation. It is required and can only be set when the hcx_action is &#34;DOWNGRADE&#34;. Its value can only be changed when hcx_action is updated.
     * 
     */
    @Import(name="reservingHcxOnPremiseLicenseKeys")
    private @Nullable Output<List<String>> reservingHcxOnPremiseLicenseKeys;

    /**
     * @return (Updatable) The HCX on-premise licenses to be reserved when downgrade from HCX Enterprise to HCX Advanced. It should not be provided during resource creation. It is required and can only be set when the hcx_action is &#34;DOWNGRADE&#34;. Its value can only be changed when hcx_action is updated.
     * 
     */
    public Optional<Output<List<String>>> reservingHcxOnPremiseLicenseKeys() {
        return Optional.ofNullable(this.reservingHcxOnPremiseLicenseKeys);
    }

    /**
     * (Updatable) One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorized_keys` file
     * 
     */
    @Import(name="sshAuthorizedKeys")
    private @Nullable Output<String> sshAuthorizedKeys;

    /**
     * @return (Updatable) One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorized_keys` file
     * 
     */
    public Optional<Output<String>> sshAuthorizedKeys() {
        return Optional.ofNullable(this.sshAuthorizedKeys);
    }

    /**
     * The current state of the SDDC.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return The current state of the SDDC.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeCreated")
    private @Nullable Output<String> timeCreated;

    /**
     * @return The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeCreated() {
        return Optional.ofNullable(this.timeCreated);
    }

    /**
     * The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeHcxBillingCycleEnd")
    private @Nullable Output<String> timeHcxBillingCycleEnd;

    /**
     * @return The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeHcxBillingCycleEnd() {
        return Optional.ofNullable(this.timeHcxBillingCycleEnd);
    }

    /**
     * The date and time the SDDC&#39;s HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    @Import(name="timeHcxLicenseStatusUpdated")
    private @Nullable Output<String> timeHcxLicenseStatusUpdated;

    /**
     * @return The date and time the SDDC&#39;s HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
     * 
     */
    public Optional<Output<String>> timeHcxLicenseStatusUpdated() {
        return Optional.ofNullable(this.timeHcxLicenseStatusUpdated);
    }

    /**
     * The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    @Import(name="timeUpdated")
    private @Nullable Output<String> timeUpdated;

    /**
     * @return The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
     * 
     */
    public Optional<Output<String>> timeUpdated() {
        return Optional.ofNullable(this.timeUpdated);
    }

    /**
     * The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    @Import(name="vcenterFqdn")
    private @Nullable Output<String> vcenterFqdn;

    /**
     * @return The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
     * 
     */
    public Optional<Output<String>> vcenterFqdn() {
        return Optional.ofNullable(this.vcenterFqdn);
    }

    /**
     * The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
     * 
     */
    @Import(name="vcenterInitialPassword")
    private @Nullable Output<String> vcenterInitialPassword;

    /**
     * @return The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
     * 
     */
    public Optional<Output<String>> vcenterInitialPassword() {
        return Optional.ofNullable(this.vcenterInitialPassword);
    }

    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    @Import(name="vcenterPrivateIpId")
    private @Nullable Output<String> vcenterPrivateIpId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
     * 
     */
    public Optional<Output<String>> vcenterPrivateIpId() {
        return Optional.ofNullable(this.vcenterPrivateIpId);
    }

    /**
     * The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
     * 
     */
    @Import(name="vcenterUsername")
    private @Nullable Output<String> vcenterUsername;

    /**
     * @return The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
     * 
     */
    public Optional<Output<String>> vcenterUsername() {
        return Optional.ofNullable(this.vcenterUsername);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vMotion component of the VMware environment.
     * 
     */
    @Import(name="vmotionVlanId")
    private @Nullable Output<String> vmotionVlanId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vMotion component of the VMware environment.
     * 
     */
    public Optional<Output<String>> vmotionVlanId() {
        return Optional.ofNullable(this.vmotionVlanId);
    }

    /**
     * (Updatable) The VMware software bundle to install on the ESXi hosts in the SDDC. To get a list of the available versions, use [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions).
     * 
     */
    @Import(name="vmwareSoftwareVersion")
    private @Nullable Output<String> vmwareSoftwareVersion;

    /**
     * @return (Updatable) The VMware software bundle to install on the ESXi hosts in the SDDC. To get a list of the available versions, use [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions).
     * 
     */
    public Optional<Output<String>> vmwareSoftwareVersion() {
        return Optional.ofNullable(this.vmwareSoftwareVersion);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSAN component of the VMware environment.
     * 
     */
    @Import(name="vsanVlanId")
    private @Nullable Output<String> vsanVlanId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSAN component of the VMware environment.
     * 
     */
    public Optional<Output<String>> vsanVlanId() {
        return Optional.ofNullable(this.vsanVlanId);
    }

    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSphere component of the VMware environment.
     * 
     */
    @Import(name="vsphereVlanId")
    private @Nullable Output<String> vsphereVlanId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSphere component of the VMware environment.
     * 
     */
    public Optional<Output<String>> vsphereVlanId() {
        return Optional.ofNullable(this.vsphereVlanId);
    }

    /**
     * The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
     * 
     */
    @Import(name="workloadNetworkCidr")
    private @Nullable Output<String> workloadNetworkCidr;

    /**
     * @return The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
     * 
     */
    public Optional<Output<String>> workloadNetworkCidr() {
        return Optional.ofNullable(this.workloadNetworkCidr);
    }

    private SddcState() {}

    private SddcState(SddcState $) {
        this.actualEsxiHostsCount = $.actualEsxiHostsCount;
        this.compartmentId = $.compartmentId;
        this.computeAvailabilityDomain = $.computeAvailabilityDomain;
        this.definedTags = $.definedTags;
        this.displayName = $.displayName;
        this.esxiHostsCount = $.esxiHostsCount;
        this.freeformTags = $.freeformTags;
        this.hcxAction = $.hcxAction;
        this.hcxFqdn = $.hcxFqdn;
        this.hcxInitialPassword = $.hcxInitialPassword;
        this.hcxOnPremKey = $.hcxOnPremKey;
        this.hcxOnPremLicenses = $.hcxOnPremLicenses;
        this.hcxPrivateIpId = $.hcxPrivateIpId;
        this.hcxVlanId = $.hcxVlanId;
        this.initialSku = $.initialSku;
        this.instanceDisplayNamePrefix = $.instanceDisplayNamePrefix;
        this.isHcxEnabled = $.isHcxEnabled;
        this.isHcxEnterpriseEnabled = $.isHcxEnterpriseEnabled;
        this.isHcxPendingDowngrade = $.isHcxPendingDowngrade;
        this.isShieldedInstanceEnabled = $.isShieldedInstanceEnabled;
        this.nsxEdgeUplink1vlanId = $.nsxEdgeUplink1vlanId;
        this.nsxEdgeUplink2vlanId = $.nsxEdgeUplink2vlanId;
        this.nsxEdgeUplinkIpId = $.nsxEdgeUplinkIpId;
        this.nsxEdgeVtepVlanId = $.nsxEdgeVtepVlanId;
        this.nsxManagerFqdn = $.nsxManagerFqdn;
        this.nsxManagerInitialPassword = $.nsxManagerInitialPassword;
        this.nsxManagerPrivateIpId = $.nsxManagerPrivateIpId;
        this.nsxManagerUsername = $.nsxManagerUsername;
        this.nsxOverlaySegmentName = $.nsxOverlaySegmentName;
        this.nsxVtepVlanId = $.nsxVtepVlanId;
        this.provisioningSubnetId = $.provisioningSubnetId;
        this.provisioningVlanId = $.provisioningVlanId;
        this.refreshHcxLicenseStatus = $.refreshHcxLicenseStatus;
        this.replicationVlanId = $.replicationVlanId;
        this.reservingHcxOnPremiseLicenseKeys = $.reservingHcxOnPremiseLicenseKeys;
        this.sshAuthorizedKeys = $.sshAuthorizedKeys;
        this.state = $.state;
        this.timeCreated = $.timeCreated;
        this.timeHcxBillingCycleEnd = $.timeHcxBillingCycleEnd;
        this.timeHcxLicenseStatusUpdated = $.timeHcxLicenseStatusUpdated;
        this.timeUpdated = $.timeUpdated;
        this.vcenterFqdn = $.vcenterFqdn;
        this.vcenterInitialPassword = $.vcenterInitialPassword;
        this.vcenterPrivateIpId = $.vcenterPrivateIpId;
        this.vcenterUsername = $.vcenterUsername;
        this.vmotionVlanId = $.vmotionVlanId;
        this.vmwareSoftwareVersion = $.vmwareSoftwareVersion;
        this.vsanVlanId = $.vsanVlanId;
        this.vsphereVlanId = $.vsphereVlanId;
        this.workloadNetworkCidr = $.workloadNetworkCidr;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SddcState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SddcState $;

        public Builder() {
            $ = new SddcState();
        }

        public Builder(SddcState defaults) {
            $ = new SddcState(Objects.requireNonNull(defaults));
        }

        /**
         * @param actualEsxiHostsCount The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
         * 
         * @return builder
         * 
         */
        public Builder actualEsxiHostsCount(@Nullable Output<Integer> actualEsxiHostsCount) {
            $.actualEsxiHostsCount = actualEsxiHostsCount;
            return this;
        }

        /**
         * @param actualEsxiHostsCount The number of actual ESXi hosts in the SDDC on the cloud. This attribute will be different when esxi Host is added to an existing SDDC.
         * 
         * @return builder
         * 
         */
        public Builder actualEsxiHostsCount(Integer actualEsxiHostsCount) {
            return actualEsxiHostsCount(Output.of(actualEsxiHostsCount));
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the SDDC.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(@Nullable Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the compartment to contain the SDDC.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param computeAvailabilityDomain The availability domain to create the SDDC&#39;s ESXi hosts in. For multi-AD SDDC deployment, set to `multi-AD`.
         * 
         * @return builder
         * 
         */
        public Builder computeAvailabilityDomain(@Nullable Output<String> computeAvailabilityDomain) {
            $.computeAvailabilityDomain = computeAvailabilityDomain;
            return this;
        }

        /**
         * @param computeAvailabilityDomain The availability domain to create the SDDC&#39;s ESXi hosts in. For multi-AD SDDC deployment, set to `multi-AD`.
         * 
         * @return builder
         * 
         */
        public Builder computeAvailabilityDomain(String computeAvailabilityDomain) {
            return computeAvailabilityDomain(Output.of(computeAvailabilityDomain));
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(@Nullable Output<Map<String,Object>> definedTags) {
            $.definedTags = definedTags;
            return this;
        }

        /**
         * @param definedTags (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Operations.CostCenter&#34;: &#34;42&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder definedTags(Map<String,Object> definedTags) {
            return definedTags(Output.of(definedTags));
        }

        /**
         * @param displayName (Updatable) A descriptive name for the SDDC. SDDC name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName (Updatable) A descriptive name for the SDDC. SDDC name requirements are 1-16 character length limit, Must start with a letter, Must be English letters, numbers, - only, No repeating hyphens, Must be unique within the region. Avoid entering confidential information.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param esxiHostsCount The number of ESXi hosts to create in the SDDC. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)).
         * 
         * @return builder
         * 
         */
        public Builder esxiHostsCount(@Nullable Output<Integer> esxiHostsCount) {
            $.esxiHostsCount = esxiHostsCount;
            return this;
        }

        /**
         * @param esxiHostsCount The number of ESXi hosts to create in the SDDC. You can add more hosts later (see [CreateEsxiHost](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/EsxiHost/CreateEsxiHost)).
         * 
         * @return builder
         * 
         */
        public Builder esxiHostsCount(Integer esxiHostsCount) {
            return esxiHostsCount(Output.of(esxiHostsCount));
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(@Nullable Output<Map<String,Object>> freeformTags) {
            $.freeformTags = freeformTags;
            return this;
        }

        /**
         * @param freeformTags (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm).  Example: `{&#34;Department&#34;: &#34;Finance&#34;}`
         * 
         * @return builder
         * 
         */
        public Builder freeformTags(Map<String,Object> freeformTags) {
            return freeformTags(Output.of(freeformTags));
        }

        /**
         * @param hcxAction (Updatable) The action to be performed upon HCX licenses. &#34;UPGRADE&#34; will upgrade the SDDC from HCX Advanced to HCX Enterprise. &#34;DOWNGRADE&#34; will downgrade the SDDC from HCX Enterprise to HCX Advanced after current HCX Enterprise billing cycle end date. &#34;CANCEL_DOWNGRADE&#34; will cancel the pending downgrade of HCX licenses. The action will only be performed when its value is changed. This field can also be used to enable HCX Enterprise during SDDC creation. If &#34;UPGRADE&#34; is set during SDDC creation, the SDDC will be created with HCX Enterprise enable. Supported actions during update: UPGRADE, DOWNGRADE, CANCEL_DOWNGRADE. Supported actions during creation: UPGRADE.
         * 
         * @return builder
         * 
         */
        public Builder hcxAction(@Nullable Output<String> hcxAction) {
            $.hcxAction = hcxAction;
            return this;
        }

        /**
         * @param hcxAction (Updatable) The action to be performed upon HCX licenses. &#34;UPGRADE&#34; will upgrade the SDDC from HCX Advanced to HCX Enterprise. &#34;DOWNGRADE&#34; will downgrade the SDDC from HCX Enterprise to HCX Advanced after current HCX Enterprise billing cycle end date. &#34;CANCEL_DOWNGRADE&#34; will cancel the pending downgrade of HCX licenses. The action will only be performed when its value is changed. This field can also be used to enable HCX Enterprise during SDDC creation. If &#34;UPGRADE&#34; is set during SDDC creation, the SDDC will be created with HCX Enterprise enable. Supported actions during update: UPGRADE, DOWNGRADE, CANCEL_DOWNGRADE. Supported actions during creation: UPGRADE.
         * 
         * @return builder
         * 
         */
        public Builder hcxAction(String hcxAction) {
            return hcxAction(Output.of(hcxAction));
        }

        /**
         * @param hcxFqdn The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
         * 
         * @return builder
         * 
         */
        public Builder hcxFqdn(@Nullable Output<String> hcxFqdn) {
            $.hcxFqdn = hcxFqdn;
            return this;
        }

        /**
         * @param hcxFqdn The FQDN for HCX Manager.  Example: `hcx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
         * 
         * @return builder
         * 
         */
        public Builder hcxFqdn(String hcxFqdn) {
            return hcxFqdn(Output.of(hcxFqdn));
        }

        /**
         * @param hcxInitialPassword The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
         * 
         * @return builder
         * 
         */
        public Builder hcxInitialPassword(@Nullable Output<String> hcxInitialPassword) {
            $.hcxInitialPassword = hcxInitialPassword;
            return this;
        }

        /**
         * @param hcxInitialPassword The SDDC includes an administrator username and initial password for HCX Manager. Make sure to change this initial HCX Manager password to a different value.
         * 
         * @return builder
         * 
         */
        public Builder hcxInitialPassword(String hcxInitialPassword) {
            return hcxInitialPassword(Output.of(hcxInitialPassword));
        }

        /**
         * @param hcxOnPremKey The activation keys to use on the on-premises HCX Enterprise appliances you site pair with HCX Manager in your VMware Solution. The number of keys provided depends on the HCX license type. HCX Advanced provides 3 activation keys. HCX Enterprise provides 10 activation keys.
         * 
         * @return builder
         * 
         */
        public Builder hcxOnPremKey(@Nullable Output<String> hcxOnPremKey) {
            $.hcxOnPremKey = hcxOnPremKey;
            return this;
        }

        /**
         * @param hcxOnPremKey The activation keys to use on the on-premises HCX Enterprise appliances you site pair with HCX Manager in your VMware Solution. The number of keys provided depends on the HCX license type. HCX Advanced provides 3 activation keys. HCX Enterprise provides 10 activation keys.
         * 
         * @return builder
         * 
         */
        public Builder hcxOnPremKey(String hcxOnPremKey) {
            return hcxOnPremKey(Output.of(hcxOnPremKey));
        }

        /**
         * @param hcxOnPremLicenses The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
         * 
         * @return builder
         * 
         */
        public Builder hcxOnPremLicenses(@Nullable Output<List<SddcHcxOnPremLicenseArgs>> hcxOnPremLicenses) {
            $.hcxOnPremLicenses = hcxOnPremLicenses;
            return this;
        }

        /**
         * @param hcxOnPremLicenses The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
         * 
         * @return builder
         * 
         */
        public Builder hcxOnPremLicenses(List<SddcHcxOnPremLicenseArgs> hcxOnPremLicenses) {
            return hcxOnPremLicenses(Output.of(hcxOnPremLicenses));
        }

        /**
         * @param hcxOnPremLicenses The activation licenses to use on the on-premises HCX Enterprise appliance you site pair with HCX Manager in your VMware Solution.
         * 
         * @return builder
         * 
         */
        public Builder hcxOnPremLicenses(SddcHcxOnPremLicenseArgs... hcxOnPremLicenses) {
            return hcxOnPremLicenses(List.of(hcxOnPremLicenses));
        }

        /**
         * @param hcxPrivateIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
         * 
         * @return builder
         * 
         */
        public Builder hcxPrivateIpId(@Nullable Output<String> hcxPrivateIpId) {
            $.hcxPrivateIpId = hcxPrivateIpId;
            return this;
        }

        /**
         * @param hcxPrivateIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for HCX Manager. For information about `PrivateIp` objects, see the Core Services API.
         * 
         * @return builder
         * 
         */
        public Builder hcxPrivateIpId(String hcxPrivateIpId) {
            return hcxPrivateIpId(Output.of(hcxPrivateIpId));
        }

        /**
         * @param hcxVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the HCX component of the VMware environment. This value is required only when `isHcxEnabled` is true.
         * 
         * @return builder
         * 
         */
        public Builder hcxVlanId(@Nullable Output<String> hcxVlanId) {
            $.hcxVlanId = hcxVlanId;
            return this;
        }

        /**
         * @param hcxVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the HCX component of the VMware environment. This value is required only when `isHcxEnabled` is true.
         * 
         * @return builder
         * 
         */
        public Builder hcxVlanId(String hcxVlanId) {
            return hcxVlanId(Output.of(hcxVlanId));
        }

        /**
         * @param initialSku The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
         * 
         * @return builder
         * 
         */
        public Builder initialSku(@Nullable Output<String> initialSku) {
            $.initialSku = initialSku;
            return this;
        }

        /**
         * @param initialSku The billing option selected during SDDC creation. [ListSupportedSkus](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedSkuSummary/ListSupportedSkus).
         * 
         * @return builder
         * 
         */
        public Builder initialSku(String initialSku) {
            return initialSku(Output.of(initialSku));
        }

        /**
         * @param instanceDisplayNamePrefix A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn&#39;t set, the SDDC&#39;s `displayName` is used as the prefix.
         * 
         * @return builder
         * 
         */
        public Builder instanceDisplayNamePrefix(@Nullable Output<String> instanceDisplayNamePrefix) {
            $.instanceDisplayNamePrefix = instanceDisplayNamePrefix;
            return this;
        }

        /**
         * @param instanceDisplayNamePrefix A prefix used in the name of each ESXi host and Compute instance in the SDDC. If this isn&#39;t set, the SDDC&#39;s `displayName` is used as the prefix.
         * 
         * @return builder
         * 
         */
        public Builder instanceDisplayNamePrefix(String instanceDisplayNamePrefix) {
            return instanceDisplayNamePrefix(Output.of(instanceDisplayNamePrefix));
        }

        /**
         * @param isHcxEnabled Indicates whether to enable HCX for this SDDC.
         * 
         * @return builder
         * 
         */
        public Builder isHcxEnabled(@Nullable Output<Boolean> isHcxEnabled) {
            $.isHcxEnabled = isHcxEnabled;
            return this;
        }

        /**
         * @param isHcxEnabled Indicates whether to enable HCX for this SDDC.
         * 
         * @return builder
         * 
         */
        public Builder isHcxEnabled(Boolean isHcxEnabled) {
            return isHcxEnabled(Output.of(isHcxEnabled));
        }

        /**
         * @param isHcxEnterpriseEnabled Indicates whether HCX Enterprise is enabled for this SDDC.
         * 
         * @return builder
         * 
         */
        public Builder isHcxEnterpriseEnabled(@Nullable Output<Boolean> isHcxEnterpriseEnabled) {
            $.isHcxEnterpriseEnabled = isHcxEnterpriseEnabled;
            return this;
        }

        /**
         * @param isHcxEnterpriseEnabled Indicates whether HCX Enterprise is enabled for this SDDC.
         * 
         * @return builder
         * 
         */
        public Builder isHcxEnterpriseEnabled(Boolean isHcxEnterpriseEnabled) {
            return isHcxEnterpriseEnabled(Output.of(isHcxEnterpriseEnabled));
        }

        /**
         * @param isHcxPendingDowngrade Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
         * 
         * @return builder
         * 
         */
        public Builder isHcxPendingDowngrade(@Nullable Output<Boolean> isHcxPendingDowngrade) {
            $.isHcxPendingDowngrade = isHcxPendingDowngrade;
            return this;
        }

        /**
         * @param isHcxPendingDowngrade Indicates whether SDDC is pending downgrade from HCX Enterprise to HCX Advanced.
         * 
         * @return builder
         * 
         */
        public Builder isHcxPendingDowngrade(Boolean isHcxPendingDowngrade) {
            return isHcxPendingDowngrade(Output.of(isHcxPendingDowngrade));
        }

        /**
         * @param isShieldedInstanceEnabled Indicates whether shielded instance is enabled for this SDDC.
         * 
         * @return builder
         * 
         */
        public Builder isShieldedInstanceEnabled(@Nullable Output<Boolean> isShieldedInstanceEnabled) {
            $.isShieldedInstanceEnabled = isShieldedInstanceEnabled;
            return this;
        }

        /**
         * @param isShieldedInstanceEnabled Indicates whether shielded instance is enabled for this SDDC.
         * 
         * @return builder
         * 
         */
        public Builder isShieldedInstanceEnabled(Boolean isShieldedInstanceEnabled) {
            return isShieldedInstanceEnabled(Output.of(isShieldedInstanceEnabled));
        }

        /**
         * @param nsxEdgeUplink1vlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 1 component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder nsxEdgeUplink1vlanId(@Nullable Output<String> nsxEdgeUplink1vlanId) {
            $.nsxEdgeUplink1vlanId = nsxEdgeUplink1vlanId;
            return this;
        }

        /**
         * @param nsxEdgeUplink1vlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 1 component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder nsxEdgeUplink1vlanId(String nsxEdgeUplink1vlanId) {
            return nsxEdgeUplink1vlanId(Output.of(nsxEdgeUplink1vlanId));
        }

        /**
         * @param nsxEdgeUplink2vlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 2 component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder nsxEdgeUplink2vlanId(@Nullable Output<String> nsxEdgeUplink2vlanId) {
            $.nsxEdgeUplink2vlanId = nsxEdgeUplink2vlanId;
            return this;
        }

        /**
         * @param nsxEdgeUplink2vlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge Uplink 2 component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder nsxEdgeUplink2vlanId(String nsxEdgeUplink2vlanId) {
            return nsxEdgeUplink2vlanId(Output.of(nsxEdgeUplink2vlanId));
        }

        /**
         * @param nsxEdgeUplinkIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
         * 
         * @return builder
         * 
         */
        public Builder nsxEdgeUplinkIpId(@Nullable Output<String> nsxEdgeUplinkIpId) {
            $.nsxEdgeUplinkIpId = nsxEdgeUplinkIpId;
            return this;
        }

        /**
         * @param nsxEdgeUplinkIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for the NSX Edge Uplink. Use this OCID as the route target for route table rules when setting up connectivity between the SDDC and other networks. For information about `PrivateIp` objects, see the Core Services API.
         * 
         * @return builder
         * 
         */
        public Builder nsxEdgeUplinkIpId(String nsxEdgeUplinkIpId) {
            return nsxEdgeUplinkIpId(Output.of(nsxEdgeUplinkIpId));
        }

        /**
         * @param nsxEdgeVtepVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge VTEP component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder nsxEdgeVtepVlanId(@Nullable Output<String> nsxEdgeVtepVlanId) {
            $.nsxEdgeVtepVlanId = nsxEdgeVtepVlanId;
            return this;
        }

        /**
         * @param nsxEdgeVtepVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX Edge VTEP component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder nsxEdgeVtepVlanId(String nsxEdgeVtepVlanId) {
            return nsxEdgeVtepVlanId(Output.of(nsxEdgeVtepVlanId));
        }

        /**
         * @param nsxManagerFqdn The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
         * 
         * @return builder
         * 
         */
        public Builder nsxManagerFqdn(@Nullable Output<String> nsxManagerFqdn) {
            $.nsxManagerFqdn = nsxManagerFqdn;
            return this;
        }

        /**
         * @param nsxManagerFqdn The FQDN for NSX Manager.  Example: `nsx-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
         * 
         * @return builder
         * 
         */
        public Builder nsxManagerFqdn(String nsxManagerFqdn) {
            return nsxManagerFqdn(Output.of(nsxManagerFqdn));
        }

        /**
         * @param nsxManagerInitialPassword The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
         * 
         * @return builder
         * 
         */
        public Builder nsxManagerInitialPassword(@Nullable Output<String> nsxManagerInitialPassword) {
            $.nsxManagerInitialPassword = nsxManagerInitialPassword;
            return this;
        }

        /**
         * @param nsxManagerInitialPassword The SDDC includes an administrator username and initial password for NSX Manager. Make sure to change this initial NSX Manager password to a different value.
         * 
         * @return builder
         * 
         */
        public Builder nsxManagerInitialPassword(String nsxManagerInitialPassword) {
            return nsxManagerInitialPassword(Output.of(nsxManagerInitialPassword));
        }

        /**
         * @param nsxManagerPrivateIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
         * 
         * @return builder
         * 
         */
        public Builder nsxManagerPrivateIpId(@Nullable Output<String> nsxManagerPrivateIpId) {
            $.nsxManagerPrivateIpId = nsxManagerPrivateIpId;
            return this;
        }

        /**
         * @param nsxManagerPrivateIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for NSX Manager. For information about `PrivateIp` objects, see the Core Services API.
         * 
         * @return builder
         * 
         */
        public Builder nsxManagerPrivateIpId(String nsxManagerPrivateIpId) {
            return nsxManagerPrivateIpId(Output.of(nsxManagerPrivateIpId));
        }

        /**
         * @param nsxManagerUsername The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
         * 
         * @return builder
         * 
         */
        public Builder nsxManagerUsername(@Nullable Output<String> nsxManagerUsername) {
            $.nsxManagerUsername = nsxManagerUsername;
            return this;
        }

        /**
         * @param nsxManagerUsername The SDDC includes an administrator username and initial password for NSX Manager. You can change this initial username to a different value in NSX Manager.
         * 
         * @return builder
         * 
         */
        public Builder nsxManagerUsername(String nsxManagerUsername) {
            return nsxManagerUsername(Output.of(nsxManagerUsername));
        }

        /**
         * @param nsxOverlaySegmentName The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
         * 
         * @return builder
         * 
         */
        public Builder nsxOverlaySegmentName(@Nullable Output<String> nsxOverlaySegmentName) {
            $.nsxOverlaySegmentName = nsxOverlaySegmentName;
            return this;
        }

        /**
         * @param nsxOverlaySegmentName The VMware NSX overlay workload segment to host your application. Connect to workload portgroup in vCenter to access this overlay segment.
         * 
         * @return builder
         * 
         */
        public Builder nsxOverlaySegmentName(String nsxOverlaySegmentName) {
            return nsxOverlaySegmentName(Output.of(nsxOverlaySegmentName));
        }

        /**
         * @param nsxVtepVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX VTEP component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder nsxVtepVlanId(@Nullable Output<String> nsxVtepVlanId) {
            $.nsxVtepVlanId = nsxVtepVlanId;
            return this;
        }

        /**
         * @param nsxVtepVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the NSX VTEP component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder nsxVtepVlanId(String nsxVtepVlanId) {
            return nsxVtepVlanId(Output.of(nsxVtepVlanId));
        }

        /**
         * @param provisioningSubnetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet to use for provisioning the SDDC.
         * 
         * @return builder
         * 
         */
        public Builder provisioningSubnetId(@Nullable Output<String> provisioningSubnetId) {
            $.provisioningSubnetId = provisioningSubnetId;
            return this;
        }

        /**
         * @param provisioningSubnetId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the management subnet to use for provisioning the SDDC.
         * 
         * @return builder
         * 
         */
        public Builder provisioningSubnetId(String provisioningSubnetId) {
            return provisioningSubnetId(Output.of(provisioningSubnetId));
        }

        /**
         * @param provisioningVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder provisioningVlanId(@Nullable Output<String> provisioningVlanId) {
            $.provisioningVlanId = provisioningVlanId;
            return this;
        }

        /**
         * @param provisioningVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the Provisioning component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder provisioningVlanId(String provisioningVlanId) {
            return provisioningVlanId(Output.of(provisioningVlanId));
        }

        /**
         * @param refreshHcxLicenseStatus (Updatable) HCX on-premise licenses status will be refreshed whenever the value of this field is changed.
         * 
         * @return builder
         * 
         */
        public Builder refreshHcxLicenseStatus(@Nullable Output<Boolean> refreshHcxLicenseStatus) {
            $.refreshHcxLicenseStatus = refreshHcxLicenseStatus;
            return this;
        }

        /**
         * @param refreshHcxLicenseStatus (Updatable) HCX on-premise licenses status will be refreshed whenever the value of this field is changed.
         * 
         * @return builder
         * 
         */
        public Builder refreshHcxLicenseStatus(Boolean refreshHcxLicenseStatus) {
            return refreshHcxLicenseStatus(Output.of(refreshHcxLicenseStatus));
        }

        /**
         * @param replicationVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder replicationVlanId(@Nullable Output<String> replicationVlanId) {
            $.replicationVlanId = replicationVlanId;
            return this;
        }

        /**
         * @param replicationVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN used by the SDDC for the vSphere Replication component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder replicationVlanId(String replicationVlanId) {
            return replicationVlanId(Output.of(replicationVlanId));
        }

        /**
         * @param reservingHcxOnPremiseLicenseKeys (Updatable) The HCX on-premise licenses to be reserved when downgrade from HCX Enterprise to HCX Advanced. It should not be provided during resource creation. It is required and can only be set when the hcx_action is &#34;DOWNGRADE&#34;. Its value can only be changed when hcx_action is updated.
         * 
         * @return builder
         * 
         */
        public Builder reservingHcxOnPremiseLicenseKeys(@Nullable Output<List<String>> reservingHcxOnPremiseLicenseKeys) {
            $.reservingHcxOnPremiseLicenseKeys = reservingHcxOnPremiseLicenseKeys;
            return this;
        }

        /**
         * @param reservingHcxOnPremiseLicenseKeys (Updatable) The HCX on-premise licenses to be reserved when downgrade from HCX Enterprise to HCX Advanced. It should not be provided during resource creation. It is required and can only be set when the hcx_action is &#34;DOWNGRADE&#34;. Its value can only be changed when hcx_action is updated.
         * 
         * @return builder
         * 
         */
        public Builder reservingHcxOnPremiseLicenseKeys(List<String> reservingHcxOnPremiseLicenseKeys) {
            return reservingHcxOnPremiseLicenseKeys(Output.of(reservingHcxOnPremiseLicenseKeys));
        }

        /**
         * @param reservingHcxOnPremiseLicenseKeys (Updatable) The HCX on-premise licenses to be reserved when downgrade from HCX Enterprise to HCX Advanced. It should not be provided during resource creation. It is required and can only be set when the hcx_action is &#34;DOWNGRADE&#34;. Its value can only be changed when hcx_action is updated.
         * 
         * @return builder
         * 
         */
        public Builder reservingHcxOnPremiseLicenseKeys(String... reservingHcxOnPremiseLicenseKeys) {
            return reservingHcxOnPremiseLicenseKeys(List.of(reservingHcxOnPremiseLicenseKeys));
        }

        /**
         * @param sshAuthorizedKeys (Updatable) One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorized_keys` file
         * 
         * @return builder
         * 
         */
        public Builder sshAuthorizedKeys(@Nullable Output<String> sshAuthorizedKeys) {
            $.sshAuthorizedKeys = sshAuthorizedKeys;
            return this;
        }

        /**
         * @param sshAuthorizedKeys (Updatable) One or more public SSH keys to be included in the `~/.ssh/authorized_keys` file for the default user on each ESXi host. Use a newline character to separate multiple keys. The SSH keys must be in the format required for the `authorized_keys` file
         * 
         * @return builder
         * 
         */
        public Builder sshAuthorizedKeys(String sshAuthorizedKeys) {
            return sshAuthorizedKeys(Output.of(sshAuthorizedKeys));
        }

        /**
         * @param state The current state of the SDDC.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state The current state of the SDDC.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        /**
         * @param timeCreated The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(@Nullable Output<String> timeCreated) {
            $.timeCreated = timeCreated;
            return this;
        }

        /**
         * @param timeCreated The date and time the SDDC was created, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeCreated(String timeCreated) {
            return timeCreated(Output.of(timeCreated));
        }

        /**
         * @param timeHcxBillingCycleEnd The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeHcxBillingCycleEnd(@Nullable Output<String> timeHcxBillingCycleEnd) {
            $.timeHcxBillingCycleEnd = timeHcxBillingCycleEnd;
            return this;
        }

        /**
         * @param timeHcxBillingCycleEnd The date and time current HCX Enterprise billing cycle ends, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeHcxBillingCycleEnd(String timeHcxBillingCycleEnd) {
            return timeHcxBillingCycleEnd(Output.of(timeHcxBillingCycleEnd));
        }

        /**
         * @param timeHcxLicenseStatusUpdated The date and time the SDDC&#39;s HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeHcxLicenseStatusUpdated(@Nullable Output<String> timeHcxLicenseStatusUpdated) {
            $.timeHcxLicenseStatusUpdated = timeHcxLicenseStatusUpdated;
            return this;
        }

        /**
         * @param timeHcxLicenseStatusUpdated The date and time the SDDC&#39;s HCX on-premise license status was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).  Example: `2016-08-25T21:10:29.600Z`
         * 
         * @return builder
         * 
         */
        public Builder timeHcxLicenseStatusUpdated(String timeHcxLicenseStatusUpdated) {
            return timeHcxLicenseStatusUpdated(Output.of(timeHcxLicenseStatusUpdated));
        }

        /**
         * @param timeUpdated The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(@Nullable Output<String> timeUpdated) {
            $.timeUpdated = timeUpdated;
            return this;
        }

        /**
         * @param timeUpdated The date and time the SDDC was updated, in the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339).
         * 
         * @return builder
         * 
         */
        public Builder timeUpdated(String timeUpdated) {
            return timeUpdated(Output.of(timeUpdated));
        }

        /**
         * @param vcenterFqdn The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
         * 
         * @return builder
         * 
         */
        public Builder vcenterFqdn(@Nullable Output<String> vcenterFqdn) {
            $.vcenterFqdn = vcenterFqdn;
            return this;
        }

        /**
         * @param vcenterFqdn The FQDN for vCenter.  Example: `vcenter-my-sddc.sddc.us-phoenix-1.oraclecloud.com`
         * 
         * @return builder
         * 
         */
        public Builder vcenterFqdn(String vcenterFqdn) {
            return vcenterFqdn(Output.of(vcenterFqdn));
        }

        /**
         * @param vcenterInitialPassword The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
         * 
         * @return builder
         * 
         */
        public Builder vcenterInitialPassword(@Nullable Output<String> vcenterInitialPassword) {
            $.vcenterInitialPassword = vcenterInitialPassword;
            return this;
        }

        /**
         * @param vcenterInitialPassword The SDDC includes an administrator username and initial password for vCenter. Make sure to change this initial vCenter password to a different value.
         * 
         * @return builder
         * 
         */
        public Builder vcenterInitialPassword(String vcenterInitialPassword) {
            return vcenterInitialPassword(Output.of(vcenterInitialPassword));
        }

        /**
         * @param vcenterPrivateIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
         * 
         * @return builder
         * 
         */
        public Builder vcenterPrivateIpId(@Nullable Output<String> vcenterPrivateIpId) {
            $.vcenterPrivateIpId = vcenterPrivateIpId;
            return this;
        }

        /**
         * @param vcenterPrivateIpId The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the `PrivateIp` object that is the virtual IP (VIP) for vCenter. For information about `PrivateIp` objects, see the Core Services API.
         * 
         * @return builder
         * 
         */
        public Builder vcenterPrivateIpId(String vcenterPrivateIpId) {
            return vcenterPrivateIpId(Output.of(vcenterPrivateIpId));
        }

        /**
         * @param vcenterUsername The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
         * 
         * @return builder
         * 
         */
        public Builder vcenterUsername(@Nullable Output<String> vcenterUsername) {
            $.vcenterUsername = vcenterUsername;
            return this;
        }

        /**
         * @param vcenterUsername The SDDC includes an administrator username and initial password for vCenter. You can change this initial username to a different value in vCenter.
         * 
         * @return builder
         * 
         */
        public Builder vcenterUsername(String vcenterUsername) {
            return vcenterUsername(Output.of(vcenterUsername));
        }

        /**
         * @param vmotionVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vMotion component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder vmotionVlanId(@Nullable Output<String> vmotionVlanId) {
            $.vmotionVlanId = vmotionVlanId;
            return this;
        }

        /**
         * @param vmotionVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vMotion component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder vmotionVlanId(String vmotionVlanId) {
            return vmotionVlanId(Output.of(vmotionVlanId));
        }

        /**
         * @param vmwareSoftwareVersion (Updatable) The VMware software bundle to install on the ESXi hosts in the SDDC. To get a list of the available versions, use [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions).
         * 
         * @return builder
         * 
         */
        public Builder vmwareSoftwareVersion(@Nullable Output<String> vmwareSoftwareVersion) {
            $.vmwareSoftwareVersion = vmwareSoftwareVersion;
            return this;
        }

        /**
         * @param vmwareSoftwareVersion (Updatable) The VMware software bundle to install on the ESXi hosts in the SDDC. To get a list of the available versions, use [ListSupportedVmwareSoftwareVersions](https://docs.cloud.oracle.com/iaas/api/#/en/vmware/20200501/SupportedVmwareSoftwareVersionSummary/ListSupportedVmwareSoftwareVersions).
         * 
         * @return builder
         * 
         */
        public Builder vmwareSoftwareVersion(String vmwareSoftwareVersion) {
            return vmwareSoftwareVersion(Output.of(vmwareSoftwareVersion));
        }

        /**
         * @param vsanVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSAN component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder vsanVlanId(@Nullable Output<String> vsanVlanId) {
            $.vsanVlanId = vsanVlanId;
            return this;
        }

        /**
         * @param vsanVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSAN component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder vsanVlanId(String vsanVlanId) {
            return vsanVlanId(Output.of(vsanVlanId));
        }

        /**
         * @param vsphereVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSphere component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder vsphereVlanId(@Nullable Output<String> vsphereVlanId) {
            $.vsphereVlanId = vsphereVlanId;
            return this;
        }

        /**
         * @param vsphereVlanId (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the VLAN to use for the vSphere component of the VMware environment.
         * 
         * @return builder
         * 
         */
        public Builder vsphereVlanId(String vsphereVlanId) {
            return vsphereVlanId(Output.of(vsphereVlanId));
        }

        /**
         * @param workloadNetworkCidr The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
         * 
         * @return builder
         * 
         */
        public Builder workloadNetworkCidr(@Nullable Output<String> workloadNetworkCidr) {
            $.workloadNetworkCidr = workloadNetworkCidr;
            return this;
        }

        /**
         * @param workloadNetworkCidr The CIDR block for the IP addresses that VMware VMs in the SDDC use to run application workloads.
         * 
         * @return builder
         * 
         */
        public Builder workloadNetworkCidr(String workloadNetworkCidr) {
            return workloadNetworkCidr(Output.of(workloadNetworkCidr));
        }

        public SddcState build() {
            return $;
        }
    }

}
