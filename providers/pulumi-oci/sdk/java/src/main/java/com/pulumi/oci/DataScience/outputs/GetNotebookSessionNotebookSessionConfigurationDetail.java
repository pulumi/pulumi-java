// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataScience.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DataScience.outputs.GetNotebookSessionNotebookSessionConfigurationDetailNotebookSessionShapeConfigDetail;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetNotebookSessionNotebookSessionConfigurationDetail {
    /**
     * @return A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
     * 
     */
    private final Integer blockStorageSizeInGbs;
    /**
     * @return Details for the notebook session shape configuration.
     * 
     */
    private final List<GetNotebookSessionNotebookSessionConfigurationDetailNotebookSessionShapeConfigDetail> notebookSessionShapeConfigDetails;
    /**
     * @return The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
     * 
     */
    private final String shape;
    /**
     * @return A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
     * 
     */
    private final String subnetId;

    @CustomType.Constructor
    private GetNotebookSessionNotebookSessionConfigurationDetail(
        @CustomType.Parameter("blockStorageSizeInGbs") Integer blockStorageSizeInGbs,
        @CustomType.Parameter("notebookSessionShapeConfigDetails") List<GetNotebookSessionNotebookSessionConfigurationDetailNotebookSessionShapeConfigDetail> notebookSessionShapeConfigDetails,
        @CustomType.Parameter("shape") String shape,
        @CustomType.Parameter("subnetId") String subnetId) {
        this.blockStorageSizeInGbs = blockStorageSizeInGbs;
        this.notebookSessionShapeConfigDetails = notebookSessionShapeConfigDetails;
        this.shape = shape;
        this.subnetId = subnetId;
    }

    /**
     * @return A notebook session instance is provided with a block storage volume. This specifies the size of the volume in GBs.
     * 
     */
    public Integer blockStorageSizeInGbs() {
        return this.blockStorageSizeInGbs;
    }
    /**
     * @return Details for the notebook session shape configuration.
     * 
     */
    public List<GetNotebookSessionNotebookSessionConfigurationDetailNotebookSessionShapeConfigDetail> notebookSessionShapeConfigDetails() {
        return this.notebookSessionShapeConfigDetails;
    }
    /**
     * @return The shape used to launch the notebook session compute instance.  The list of available shapes in a given compartment can be retrieved using the `ListNotebookSessionShapes` endpoint.
     * 
     */
    public String shape() {
        return this.shape;
    }
    /**
     * @return A notebook session instance is provided with a VNIC for network access.  This specifies the [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the subnet to create a VNIC in.  The subnet should be in a VCN with a NAT gateway for egress to the internet.
     * 
     */
    public String subnetId() {
        return this.subnetId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetNotebookSessionNotebookSessionConfigurationDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Integer blockStorageSizeInGbs;
        private List<GetNotebookSessionNotebookSessionConfigurationDetailNotebookSessionShapeConfigDetail> notebookSessionShapeConfigDetails;
        private String shape;
        private String subnetId;

        public Builder() {
    	      // Empty
        }

        public Builder(GetNotebookSessionNotebookSessionConfigurationDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockStorageSizeInGbs = defaults.blockStorageSizeInGbs;
    	      this.notebookSessionShapeConfigDetails = defaults.notebookSessionShapeConfigDetails;
    	      this.shape = defaults.shape;
    	      this.subnetId = defaults.subnetId;
        }

        public Builder blockStorageSizeInGbs(Integer blockStorageSizeInGbs) {
            this.blockStorageSizeInGbs = Objects.requireNonNull(blockStorageSizeInGbs);
            return this;
        }
        public Builder notebookSessionShapeConfigDetails(List<GetNotebookSessionNotebookSessionConfigurationDetailNotebookSessionShapeConfigDetail> notebookSessionShapeConfigDetails) {
            this.notebookSessionShapeConfigDetails = Objects.requireNonNull(notebookSessionShapeConfigDetails);
            return this;
        }
        public Builder notebookSessionShapeConfigDetails(GetNotebookSessionNotebookSessionConfigurationDetailNotebookSessionShapeConfigDetail... notebookSessionShapeConfigDetails) {
            return notebookSessionShapeConfigDetails(List.of(notebookSessionShapeConfigDetails));
        }
        public Builder shape(String shape) {
            this.shape = Objects.requireNonNull(shape);
            return this;
        }
        public Builder subnetId(String subnetId) {
            this.subnetId = Objects.requireNonNull(subnetId);
            return this;
        }        public GetNotebookSessionNotebookSessionConfigurationDetail build() {
            return new GetNotebookSessionNotebookSessionConfigurationDetail(blockStorageSizeInGbs, notebookSessionShapeConfigDetails, shape, subnetId);
        }
    }
}
