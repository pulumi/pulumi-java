// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ManagementAgent.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetManagementAgentCountArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetManagementAgentCountArgs Empty = new GetManagementAgentCountArgs();

    /**
     * The OCID of the compartment to which a request will be scoped.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The OCID of the compartment to which a request will be scoped.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * The field by which to group Management Agents. Currently, only one groupBy dimension is supported at a time.
     * 
     */
    @Import(name="groupBies", required=true)
    private Output<List<String>> groupBies;

    /**
     * @return The field by which to group Management Agents. Currently, only one groupBy dimension is supported at a time.
     * 
     */
    public Output<List<String>> groupBies() {
        return this.groupBies;
    }

    /**
     * When set to true then agents that have at least one plugin deployed will be returned. When set to false only agents that have no plugins deployed will be returned.
     * 
     */
    @Import(name="hasPlugins")
    private @Nullable Output<Boolean> hasPlugins;

    /**
     * @return When set to true then agents that have at least one plugin deployed will be returned. When set to false only agents that have no plugins deployed will be returned.
     * 
     */
    public Optional<Output<Boolean>> hasPlugins() {
        return Optional.ofNullable(this.hasPlugins);
    }

    /**
     * A filter to return either agents or gateway types depending upon install type selected by user. By default both install type will be returned.
     * 
     */
    @Import(name="installType")
    private @Nullable Output<String> installType;

    /**
     * @return A filter to return either agents or gateway types depending upon install type selected by user. By default both install type will be returned.
     * 
     */
    public Optional<Output<String>> installType() {
        return Optional.ofNullable(this.installType);
    }

    private GetManagementAgentCountArgs() {}

    private GetManagementAgentCountArgs(GetManagementAgentCountArgs $) {
        this.compartmentId = $.compartmentId;
        this.groupBies = $.groupBies;
        this.hasPlugins = $.hasPlugins;
        this.installType = $.installType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetManagementAgentCountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetManagementAgentCountArgs $;

        public Builder() {
            $ = new GetManagementAgentCountArgs();
        }

        public Builder(GetManagementAgentCountArgs defaults) {
            $ = new GetManagementAgentCountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment to which a request will be scoped.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The OCID of the compartment to which a request will be scoped.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param groupBies The field by which to group Management Agents. Currently, only one groupBy dimension is supported at a time.
         * 
         * @return builder
         * 
         */
        public Builder groupBies(Output<List<String>> groupBies) {
            $.groupBies = groupBies;
            return this;
        }

        /**
         * @param groupBies The field by which to group Management Agents. Currently, only one groupBy dimension is supported at a time.
         * 
         * @return builder
         * 
         */
        public Builder groupBies(List<String> groupBies) {
            return groupBies(Output.of(groupBies));
        }

        /**
         * @param groupBies The field by which to group Management Agents. Currently, only one groupBy dimension is supported at a time.
         * 
         * @return builder
         * 
         */
        public Builder groupBies(String... groupBies) {
            return groupBies(List.of(groupBies));
        }

        /**
         * @param hasPlugins When set to true then agents that have at least one plugin deployed will be returned. When set to false only agents that have no plugins deployed will be returned.
         * 
         * @return builder
         * 
         */
        public Builder hasPlugins(@Nullable Output<Boolean> hasPlugins) {
            $.hasPlugins = hasPlugins;
            return this;
        }

        /**
         * @param hasPlugins When set to true then agents that have at least one plugin deployed will be returned. When set to false only agents that have no plugins deployed will be returned.
         * 
         * @return builder
         * 
         */
        public Builder hasPlugins(Boolean hasPlugins) {
            return hasPlugins(Output.of(hasPlugins));
        }

        /**
         * @param installType A filter to return either agents or gateway types depending upon install type selected by user. By default both install type will be returned.
         * 
         * @return builder
         * 
         */
        public Builder installType(@Nullable Output<String> installType) {
            $.installType = installType;
            return this;
        }

        /**
         * @param installType A filter to return either agents or gateway types depending upon install type selected by user. By default both install type will be returned.
         * 
         * @return builder
         * 
         */
        public Builder installType(String installType) {
            return installType(Output.of(installType));
        }

        public GetManagementAgentCountArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.groupBies = Objects.requireNonNull($.groupBies, "expected parameter 'groupBies' to be non-null");
            return $;
        }
    }

}
