// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RepositoryMirrorRepositoryConfigTriggerScheduleArgs extends com.pulumi.resources.ResourceArgs {

    public static final RepositoryMirrorRepositoryConfigTriggerScheduleArgs Empty = new RepositoryMirrorRepositoryConfigTriggerScheduleArgs();

    /**
     * (Updatable) Valid if type is CUSTOM. Following RFC 5545 recurrence rules, we can specify starting time, occurrence frequency, and interval size. Example for frequency could be DAILY/WEEKLY/HOURLY or any RFC 5545 supported frequency, which is followed by start time of this window.  You can control the start time with BYHOUR, BYMINUTE and BYSECONDS. It is followed by the interval size.
     * 
     */
    @Import(name="customSchedule")
    private @Nullable Output<String> customSchedule;

    /**
     * @return (Updatable) Valid if type is CUSTOM. Following RFC 5545 recurrence rules, we can specify starting time, occurrence frequency, and interval size. Example for frequency could be DAILY/WEEKLY/HOURLY or any RFC 5545 supported frequency, which is followed by start time of this window.  You can control the start time with BYHOUR, BYMINUTE and BYSECONDS. It is followed by the interval size.
     * 
     */
    public Optional<Output<String>> customSchedule() {
        return Optional.ofNullable(this.customSchedule);
    }

    /**
     * (Updatable) Different types of trigger schedule: NONE - No automated synchronization schedule. DEFAULT - Trigger schedule is every 30 minutes. CUSTOM - Custom triggering schedule.
     * 
     */
    @Import(name="scheduleType", required=true)
    private Output<String> scheduleType;

    /**
     * @return (Updatable) Different types of trigger schedule: NONE - No automated synchronization schedule. DEFAULT - Trigger schedule is every 30 minutes. CUSTOM - Custom triggering schedule.
     * 
     */
    public Output<String> scheduleType() {
        return this.scheduleType;
    }

    private RepositoryMirrorRepositoryConfigTriggerScheduleArgs() {}

    private RepositoryMirrorRepositoryConfigTriggerScheduleArgs(RepositoryMirrorRepositoryConfigTriggerScheduleArgs $) {
        this.customSchedule = $.customSchedule;
        this.scheduleType = $.scheduleType;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RepositoryMirrorRepositoryConfigTriggerScheduleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RepositoryMirrorRepositoryConfigTriggerScheduleArgs $;

        public Builder() {
            $ = new RepositoryMirrorRepositoryConfigTriggerScheduleArgs();
        }

        public Builder(RepositoryMirrorRepositoryConfigTriggerScheduleArgs defaults) {
            $ = new RepositoryMirrorRepositoryConfigTriggerScheduleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param customSchedule (Updatable) Valid if type is CUSTOM. Following RFC 5545 recurrence rules, we can specify starting time, occurrence frequency, and interval size. Example for frequency could be DAILY/WEEKLY/HOURLY or any RFC 5545 supported frequency, which is followed by start time of this window.  You can control the start time with BYHOUR, BYMINUTE and BYSECONDS. It is followed by the interval size.
         * 
         * @return builder
         * 
         */
        public Builder customSchedule(@Nullable Output<String> customSchedule) {
            $.customSchedule = customSchedule;
            return this;
        }

        /**
         * @param customSchedule (Updatable) Valid if type is CUSTOM. Following RFC 5545 recurrence rules, we can specify starting time, occurrence frequency, and interval size. Example for frequency could be DAILY/WEEKLY/HOURLY or any RFC 5545 supported frequency, which is followed by start time of this window.  You can control the start time with BYHOUR, BYMINUTE and BYSECONDS. It is followed by the interval size.
         * 
         * @return builder
         * 
         */
        public Builder customSchedule(String customSchedule) {
            return customSchedule(Output.of(customSchedule));
        }

        /**
         * @param scheduleType (Updatable) Different types of trigger schedule: NONE - No automated synchronization schedule. DEFAULT - Trigger schedule is every 30 minutes. CUSTOM - Custom triggering schedule.
         * 
         * @return builder
         * 
         */
        public Builder scheduleType(Output<String> scheduleType) {
            $.scheduleType = scheduleType;
            return this;
        }

        /**
         * @param scheduleType (Updatable) Different types of trigger schedule: NONE - No automated synchronization schedule. DEFAULT - Trigger schedule is every 30 minutes. CUSTOM - Custom triggering schedule.
         * 
         * @return builder
         * 
         */
        public Builder scheduleType(String scheduleType) {
            return scheduleType(Output.of(scheduleType));
        }

        public RepositoryMirrorRepositoryConfigTriggerScheduleArgs build() {
            $.scheduleType = Objects.requireNonNull($.scheduleType, "expected parameter 'scheduleType' to be non-null");
            return $;
        }
    }

}
