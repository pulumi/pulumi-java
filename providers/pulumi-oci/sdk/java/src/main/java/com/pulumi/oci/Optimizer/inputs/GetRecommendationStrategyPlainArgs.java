// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Optimizer.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRecommendationStrategyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRecommendationStrategyPlainArgs Empty = new GetRecommendationStrategyPlainArgs();

    /**
     * The OCID of the compartment.
     * 
     */
    @Import(name="compartmentId", required=true)
    private String compartmentId;

    /**
     * @return The OCID of the compartment.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }

    /**
     * When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
     * 
     */
    @Import(name="compartmentIdInSubtree", required=true)
    private Boolean compartmentIdInSubtree;

    /**
     * @return When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
     * 
     */
    public Boolean compartmentIdInSubtree() {
        return this.compartmentIdInSubtree;
    }

    /**
     * Optional. A filter that returns results that match the name specified.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Optional. A filter that returns results that match the name specified.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Optional. A filter that returns results that match the recommendation name specified.
     * 
     */
    @Import(name="recommendationName")
    private @Nullable String recommendationName;

    /**
     * @return Optional. A filter that returns results that match the recommendation name specified.
     * 
     */
    public Optional<String> recommendationName() {
        return Optional.ofNullable(this.recommendationName);
    }

    private GetRecommendationStrategyPlainArgs() {}

    private GetRecommendationStrategyPlainArgs(GetRecommendationStrategyPlainArgs $) {
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.name = $.name;
        this.recommendationName = $.recommendationName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRecommendationStrategyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRecommendationStrategyPlainArgs $;

        public Builder() {
            $ = new GetRecommendationStrategyPlainArgs();
        }

        public Builder(GetRecommendationStrategyPlainArgs defaults) {
            $ = new GetRecommendationStrategyPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param compartmentId The OCID of the compartment.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentIdInSubtree When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned depending on the the setting of `accessLevel`.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(Boolean compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param name Optional. A filter that returns results that match the name specified.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param recommendationName Optional. A filter that returns results that match the recommendation name specified.
         * 
         * @return builder
         * 
         */
        public Builder recommendationName(@Nullable String recommendationName) {
            $.recommendationName = recommendationName;
            return this;
        }

        public GetRecommendationStrategyPlainArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            $.compartmentIdInSubtree = Objects.requireNonNull($.compartmentIdInSubtree, "expected parameter 'compartmentIdInSubtree' to be non-null");
            return $;
        }
    }

}
