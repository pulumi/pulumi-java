// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Blockchain;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Blockchain.PeerArgs;
import com.pulumi.oci.Blockchain.inputs.PeerState;
import com.pulumi.oci.Blockchain.outputs.PeerOcpuAllocationParam;
import com.pulumi.oci.Utilities;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * This resource provides the Peer resource in Oracle Cloud Infrastructure Blockchain service.
 * 
 * Create Blockchain Platform Peer
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * Peers can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Blockchain/peer:Peer test_peer &#34;blockchainPlatforms/{blockchainPlatformId}/peers/{peerId}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Blockchain/peer:Peer")
public class Peer extends com.pulumi.resources.CustomResource {
    /**
     * Availability Domain to place new peer
     * 
     */
    @Export(name="ad", type=String.class, parameters={})
    private Output<String> ad;

    /**
     * @return Availability Domain to place new peer
     * 
     */
    public Output<String> ad() {
        return this.ad;
    }
    /**
     * peer alias
     * 
     */
    @Export(name="alias", type=String.class, parameters={})
    private Output<String> alias;

    /**
     * @return peer alias
     * 
     */
    public Output<String> alias() {
        return this.alias;
    }
    /**
     * Unique service identifier.
     * 
     */
    @Export(name="blockchainPlatformId", type=String.class, parameters={})
    private Output<String> blockchainPlatformId;

    /**
     * @return Unique service identifier.
     * 
     */
    public Output<String> blockchainPlatformId() {
        return this.blockchainPlatformId;
    }
    /**
     * Host on which the Peer exists
     * 
     */
    @Export(name="host", type=String.class, parameters={})
    private Output<String> host;

    /**
     * @return Host on which the Peer exists
     * 
     */
    public Output<String> host() {
        return this.host;
    }
    /**
     * (Updatable) OCPU allocation parameter
     * 
     */
    @Export(name="ocpuAllocationParam", type=PeerOcpuAllocationParam.class, parameters={})
    private Output<PeerOcpuAllocationParam> ocpuAllocationParam;

    /**
     * @return (Updatable) OCPU allocation parameter
     * 
     */
    public Output<PeerOcpuAllocationParam> ocpuAllocationParam() {
        return this.ocpuAllocationParam;
    }
    /**
     * peer identifier
     * 
     */
    @Export(name="peerKey", type=String.class, parameters={})
    private Output<String> peerKey;

    /**
     * @return peer identifier
     * 
     */
    public Output<String> peerKey() {
        return this.peerKey;
    }
    /**
     * Peer role
     * 
     */
    @Export(name="role", type=String.class, parameters={})
    private Output<String> role;

    /**
     * @return Peer role
     * 
     */
    public Output<String> role() {
        return this.role;
    }
    /**
     * The current state of the peer.
     * 
     */
    @Export(name="state", type=String.class, parameters={})
    private Output<String> state;

    /**
     * @return The current state of the peer.
     * 
     */
    public Output<String> state() {
        return this.state;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Peer(String name) {
        this(name, PeerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Peer(String name, PeerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Peer(String name, PeerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Blockchain/peer:Peer", name, args == null ? PeerArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Peer(String name, Output<String> id, @Nullable PeerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Blockchain/peer:Peer", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Peer get(String name, Output<String> id, @Nullable PeerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Peer(name, id, state, options);
    }
}
