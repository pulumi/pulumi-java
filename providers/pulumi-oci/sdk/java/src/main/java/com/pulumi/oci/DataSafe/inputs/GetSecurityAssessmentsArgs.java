// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.GetSecurityAssessmentsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetSecurityAssessmentsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecurityAssessmentsArgs Empty = new GetSecurityAssessmentsArgs();

    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    @Import(name="accessLevel")
    private Output</* @Nullable */ String> accessLevel;

    /**
     * @return Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    public Output</* @Nullable */ String> accessLevel() {
        return this.accessLevel;
    }

    /**
     * A filter to return only resources that match the specified compartment OCID.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private Output</* @Nullable */ Boolean> compartmentIdInSubtree;

    /**
     * @return Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    public Output</* @Nullable */ Boolean> compartmentIdInSubtree() {
        return this.compartmentIdInSubtree;
    }

    /**
     * A filter to return only resources that match the specified display name.
     * 
     */
    @Import(name="displayName")
    private Output</* @Nullable */ String> displayName;

    /**
     * @return A filter to return only resources that match the specified display name.
     * 
     */
    public Output</* @Nullable */ String> displayName() {
        return this.displayName;
    }

    @Import(name="filters")
    private Output</* @Nullable */ List<GetSecurityAssessmentsFilter>> filters;

    public Output</* @Nullable */ List<GetSecurityAssessmentsFilter>> filters() {
        return this.filters;
    }

    /**
     * A filter to return only security assessments that are set as baseline.
     * 
     */
    @Import(name="isBaseline")
    private Output</* @Nullable */ Boolean> isBaseline;

    /**
     * @return A filter to return only security assessments that are set as baseline.
     * 
     */
    public Output</* @Nullable */ Boolean> isBaseline() {
        return this.isBaseline;
    }

    /**
     * A filter to return only security assessments of type save schedule.
     * 
     */
    @Import(name="isScheduleAssessment")
    private Output</* @Nullable */ Boolean> isScheduleAssessment;

    /**
     * @return A filter to return only security assessments of type save schedule.
     * 
     */
    public Output</* @Nullable */ Boolean> isScheduleAssessment() {
        return this.isScheduleAssessment;
    }

    /**
     * The OCID of the security assessment of type SAVE_SCHEDULE.
     * 
     */
    @Import(name="scheduleAssessmentId")
    private Output</* @Nullable */ String> scheduleAssessmentId;

    /**
     * @return The OCID of the security assessment of type SAVE_SCHEDULE.
     * 
     */
    public Output</* @Nullable */ String> scheduleAssessmentId() {
        return this.scheduleAssessmentId;
    }

    /**
     * A filter to return only resources that match the specified lifecycle state.
     * 
     */
    @Import(name="state")
    private Output</* @Nullable */ String> state;

    /**
     * @return A filter to return only resources that match the specified lifecycle state.
     * 
     */
    public Output</* @Nullable */ String> state() {
        return this.state;
    }

    /**
     * A filter to return only items related to a specific target OCID.
     * 
     */
    @Import(name="targetId")
    private Output</* @Nullable */ String> targetId;

    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    public Output</* @Nullable */ String> targetId() {
        return this.targetId;
    }

    /**
     * A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
     * 
     */
    @Import(name="timeCreatedGreaterThanOrEqualTo")
    private Output</* @Nullable */ String> timeCreatedGreaterThanOrEqualTo;

    /**
     * @return A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
     * 
     */
    public Output</* @Nullable */ String> timeCreatedGreaterThanOrEqualTo() {
        return this.timeCreatedGreaterThanOrEqualTo;
    }

    /**
     * Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    @Import(name="timeCreatedLessThan")
    private Output</* @Nullable */ String> timeCreatedLessThan;

    /**
     * @return Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public Output</* @Nullable */ String> timeCreatedLessThan() {
        return this.timeCreatedLessThan;
    }

    /**
     * A filter to return only security asessments that were created by either user or system.
     * 
     */
    @Import(name="triggeredBy")
    private Output</* @Nullable */ String> triggeredBy;

    /**
     * @return A filter to return only security asessments that were created by either user or system.
     * 
     */
    public Output</* @Nullable */ String> triggeredBy() {
        return this.triggeredBy;
    }

    /**
     * A filter to return only items that match the specified security assessment type.
     * 
     */
    @Import(name="type")
    private Output</* @Nullable */ String> type;

    /**
     * @return A filter to return only items that match the specified security assessment type.
     * 
     */
    public Output</* @Nullable */ String> type() {
        return this.type;
    }

    private GetSecurityAssessmentsArgs() {}

    private GetSecurityAssessmentsArgs(GetSecurityAssessmentsArgs $) {
        this.accessLevel = $.accessLevel;
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.isBaseline = $.isBaseline;
        this.isScheduleAssessment = $.isScheduleAssessment;
        this.scheduleAssessmentId = $.scheduleAssessmentId;
        this.state = $.state;
        this.targetId = $.targetId;
        this.timeCreatedGreaterThanOrEqualTo = $.timeCreatedGreaterThanOrEqualTo;
        this.timeCreatedLessThan = $.timeCreatedLessThan;
        this.triggeredBy = $.triggeredBy;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecurityAssessmentsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecurityAssessmentsArgs $;

        public Builder() {
            $ = new GetSecurityAssessmentsArgs();
        }

        public Builder(GetSecurityAssessmentsArgs defaults) {
            $ = new GetSecurityAssessmentsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessLevel Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
         * 
         * @return builder
         * 
         */
        public Builder accessLevel(Output</* @Nullable */ String> accessLevel) {
            $.accessLevel = accessLevel;
            return this;
        }

        /**
         * @param accessLevel Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
         * 
         * @return builder
         * 
         */
        public Builder accessLevel(@Nullable String accessLevel) {
            return accessLevel(Output.of(accessLevel));
        }

        /**
         * @param compartmentId A filter to return only resources that match the specified compartment OCID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId A filter to return only resources that match the specified compartment OCID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param compartmentIdInSubtree Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(Output</* @Nullable */ Boolean> compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            return compartmentIdInSubtree(Output.of(compartmentIdInSubtree));
        }

        /**
         * @param displayName A filter to return only resources that match the specified display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(Output</* @Nullable */ String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the specified display name.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(Output</* @Nullable */ List<GetSecurityAssessmentsFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetSecurityAssessmentsFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetSecurityAssessmentsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param isBaseline A filter to return only security assessments that are set as baseline.
         * 
         * @return builder
         * 
         */
        public Builder isBaseline(Output</* @Nullable */ Boolean> isBaseline) {
            $.isBaseline = isBaseline;
            return this;
        }

        /**
         * @param isBaseline A filter to return only security assessments that are set as baseline.
         * 
         * @return builder
         * 
         */
        public Builder isBaseline(@Nullable Boolean isBaseline) {
            return isBaseline(Output.of(isBaseline));
        }

        /**
         * @param isScheduleAssessment A filter to return only security assessments of type save schedule.
         * 
         * @return builder
         * 
         */
        public Builder isScheduleAssessment(Output</* @Nullable */ Boolean> isScheduleAssessment) {
            $.isScheduleAssessment = isScheduleAssessment;
            return this;
        }

        /**
         * @param isScheduleAssessment A filter to return only security assessments of type save schedule.
         * 
         * @return builder
         * 
         */
        public Builder isScheduleAssessment(@Nullable Boolean isScheduleAssessment) {
            return isScheduleAssessment(Output.of(isScheduleAssessment));
        }

        /**
         * @param scheduleAssessmentId The OCID of the security assessment of type SAVE_SCHEDULE.
         * 
         * @return builder
         * 
         */
        public Builder scheduleAssessmentId(Output</* @Nullable */ String> scheduleAssessmentId) {
            $.scheduleAssessmentId = scheduleAssessmentId;
            return this;
        }

        /**
         * @param scheduleAssessmentId The OCID of the security assessment of type SAVE_SCHEDULE.
         * 
         * @return builder
         * 
         */
        public Builder scheduleAssessmentId(@Nullable String scheduleAssessmentId) {
            return scheduleAssessmentId(Output.of(scheduleAssessmentId));
        }

        /**
         * @param state A filter to return only resources that match the specified lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(Output</* @Nullable */ String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return only resources that match the specified lifecycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            return state(Output.of(state));
        }

        /**
         * @param targetId A filter to return only items related to a specific target OCID.
         * 
         * @return builder
         * 
         */
        public Builder targetId(Output</* @Nullable */ String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId A filter to return only items related to a specific target OCID.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable String targetId) {
            return targetId(Output.of(targetId));
        }

        /**
         * @param timeCreatedGreaterThanOrEqualTo A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedGreaterThanOrEqualTo(Output</* @Nullable */ String> timeCreatedGreaterThanOrEqualTo) {
            $.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeCreatedGreaterThanOrEqualTo A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {
            return timeCreatedGreaterThanOrEqualTo(Output.of(timeCreatedGreaterThanOrEqualTo));
        }

        /**
         * @param timeCreatedLessThan Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by RFC 3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedLessThan(Output</* @Nullable */ String> timeCreatedLessThan) {
            $.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }

        /**
         * @param timeCreatedLessThan Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by RFC 3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {
            return timeCreatedLessThan(Output.of(timeCreatedLessThan));
        }

        /**
         * @param triggeredBy A filter to return only security asessments that were created by either user or system.
         * 
         * @return builder
         * 
         */
        public Builder triggeredBy(Output</* @Nullable */ String> triggeredBy) {
            $.triggeredBy = triggeredBy;
            return this;
        }

        /**
         * @param triggeredBy A filter to return only security asessments that were created by either user or system.
         * 
         * @return builder
         * 
         */
        public Builder triggeredBy(@Nullable String triggeredBy) {
            return triggeredBy(Output.of(triggeredBy));
        }

        /**
         * @param type A filter to return only items that match the specified security assessment type.
         * 
         * @return builder
         * 
         */
        public Builder type(Output</* @Nullable */ String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type A filter to return only items that match the specified security assessment type.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            return type(Output.of(type));
        }

        public GetSecurityAssessmentsArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
