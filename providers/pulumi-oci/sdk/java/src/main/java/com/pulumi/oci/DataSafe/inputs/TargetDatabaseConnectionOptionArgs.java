// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TargetDatabaseConnectionOptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final TargetDatabaseConnectionOptionArgs Empty = new TargetDatabaseConnectionOptionArgs();

    /**
     * (Updatable) The connection type used to connect to the database. Allowed values:
     * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
     * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
     * 
     */
    @Import(name="connectionType", required=true)
    private Output<String> connectionType;

    /**
     * @return (Updatable) The connection type used to connect to the database. Allowed values:
     * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
     * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
     * 
     */
    public Output<String> connectionType() {
        return this.connectionType;
    }

    /**
     * (Updatable) The OCID of the Data Safe private endpoint.
     * 
     */
    @Import(name="datasafePrivateEndpointId")
    private @Nullable Output<String> datasafePrivateEndpointId;

    /**
     * @return (Updatable) The OCID of the Data Safe private endpoint.
     * 
     */
    public Optional<Output<String>> datasafePrivateEndpointId() {
        return Optional.ofNullable(this.datasafePrivateEndpointId);
    }

    /**
     * (Updatable) The OCID of the on-premises connector.
     * 
     */
    @Import(name="onPremConnectorId")
    private @Nullable Output<String> onPremConnectorId;

    /**
     * @return (Updatable) The OCID of the on-premises connector.
     * 
     */
    public Optional<Output<String>> onPremConnectorId() {
        return Optional.ofNullable(this.onPremConnectorId);
    }

    private TargetDatabaseConnectionOptionArgs() {}

    private TargetDatabaseConnectionOptionArgs(TargetDatabaseConnectionOptionArgs $) {
        this.connectionType = $.connectionType;
        this.datasafePrivateEndpointId = $.datasafePrivateEndpointId;
        this.onPremConnectorId = $.onPremConnectorId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TargetDatabaseConnectionOptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TargetDatabaseConnectionOptionArgs $;

        public Builder() {
            $ = new TargetDatabaseConnectionOptionArgs();
        }

        public Builder(TargetDatabaseConnectionOptionArgs defaults) {
            $ = new TargetDatabaseConnectionOptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionType (Updatable) The connection type used to connect to the database. Allowed values:
         * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
         * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder connectionType(Output<String> connectionType) {
            $.connectionType = connectionType;
            return this;
        }

        /**
         * @param connectionType (Updatable) The connection type used to connect to the database. Allowed values:
         * * PRIVATE_ENDPOINT - Represents connection through private endpoint in Data Safe.
         * * ONPREM_CONNECTOR - Represents connection through on-premises connector in Data Safe.
         * 
         * @return builder
         * 
         */
        public Builder connectionType(String connectionType) {
            return connectionType(Output.of(connectionType));
        }

        /**
         * @param datasafePrivateEndpointId (Updatable) The OCID of the Data Safe private endpoint.
         * 
         * @return builder
         * 
         */
        public Builder datasafePrivateEndpointId(@Nullable Output<String> datasafePrivateEndpointId) {
            $.datasafePrivateEndpointId = datasafePrivateEndpointId;
            return this;
        }

        /**
         * @param datasafePrivateEndpointId (Updatable) The OCID of the Data Safe private endpoint.
         * 
         * @return builder
         * 
         */
        public Builder datasafePrivateEndpointId(String datasafePrivateEndpointId) {
            return datasafePrivateEndpointId(Output.of(datasafePrivateEndpointId));
        }

        /**
         * @param onPremConnectorId (Updatable) The OCID of the on-premises connector.
         * 
         * @return builder
         * 
         */
        public Builder onPremConnectorId(@Nullable Output<String> onPremConnectorId) {
            $.onPremConnectorId = onPremConnectorId;
            return this;
        }

        /**
         * @param onPremConnectorId (Updatable) The OCID of the on-premises connector.
         * 
         * @return builder
         * 
         */
        public Builder onPremConnectorId(String onPremConnectorId) {
            return onPremConnectorId(Output.of(onPremConnectorId));
        }

        public TargetDatabaseConnectionOptionArgs build() {
            $.connectionType = Objects.requireNonNull($.connectionType, "expected parameter 'connectionType' to be non-null");
            return $;
        }
    }

}
