// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Core;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.oci.Core.DrgRouteTableRouteRuleArgs;
import com.pulumi.oci.Core.inputs.DrgRouteTableRouteRuleState;
import com.pulumi.oci.Utilities;
import java.lang.Boolean;
import java.lang.Object;
import java.lang.String;
import java.util.Map;
import javax.annotation.Nullable;

/**
 * This resource provides the Drg Route Table Route Rule resource in Oracle Cloud Infrastructure Core service.
 * 
 * Adds one static route rule to the specified DRG route table.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * DrgRouteTableRouteRule can be imported using the `id`, e.g.
 * 
 * ```sh
 *  $ pulumi import oci:Core/drgRouteTableRouteRule:DrgRouteTableRouteRule test_drg_route_table_route_rule &#34;drgRouteTables/{drgRouteTableId}/routeRules/{id}&#34;
 * ```
 * 
 */
@ResourceType(type="oci:Core/drgRouteTableRouteRule:DrgRouteTableRouteRule")
public class DrgRouteTableRouteRule extends com.pulumi.resources.CustomResource {
    /**
     * Additional properties for the route, computed by the service.
     * 
     */
    @Export(name="attributes", type=Map.class, parameters={String.class, Object.class})
    private Output<Map<String,Object>> attributes;

    /**
     * @return Additional properties for the route, computed by the service.
     * 
     */
    public Output<Map<String,Object>> attributes() {
        return this.attributes;
    }
    /**
     * (Updatable) This is the range of IP addresses used for matching when routing traffic. Only CIDR_BLOCK values are allowed.
     * 
     */
    @Export(name="destination", type=String.class, parameters={})
    private Output<String> destination;

    /**
     * @return (Updatable) This is the range of IP addresses used for matching when routing traffic. Only CIDR_BLOCK values are allowed.
     * 
     */
    public Output<String> destination() {
        return this.destination;
    }
    /**
     * (Updatable) Type of destination for the rule. Required if `direction` = `EGRESS`. Allowed values:
     * * `CIDR_BLOCK`: If the rule&#39;s `destination` is an IP address range in CIDR notation.
     * 
     */
    @Export(name="destinationType", type=String.class, parameters={})
    private Output<String> destinationType;

    /**
     * @return (Updatable) Type of destination for the rule. Required if `direction` = `EGRESS`. Allowed values:
     * * `CIDR_BLOCK`: If the rule&#39;s `destination` is an IP address range in CIDR notation.
     * 
     */
    public Output<String> destinationType() {
        return this.destinationType;
    }
    /**
     * The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG route table.
     * 
     */
    @Export(name="drgRouteTableId", type=String.class, parameters={})
    private Output<String> drgRouteTableId;

    /**
     * @return The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the DRG route table.
     * 
     */
    public Output<String> drgRouteTableId() {
        return this.drgRouteTableId;
    }
    /**
     * Indicates that if the next hop attachment does not exist, so traffic for this route is discarded without notification.
     * 
     */
    @Export(name="isBlackhole", type=Boolean.class, parameters={})
    private Output<Boolean> isBlackhole;

    /**
     * @return Indicates that if the next hop attachment does not exist, so traffic for this route is discarded without notification.
     * 
     */
    public Output<Boolean> isBlackhole() {
        return this.isBlackhole;
    }
    /**
     * Indicates that the route was not imported due to a conflict between route rules.
     * 
     */
    @Export(name="isConflict", type=Boolean.class, parameters={})
    private Output<Boolean> isConflict;

    /**
     * @return Indicates that the route was not imported due to a conflict between route rules.
     * 
     */
    public Output<Boolean> isConflict() {
        return this.isConflict;
    }
    /**
     * (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next hop DRG attachment. The next hop DRG attachment is responsible for reaching the network destination.
     * 
     */
    @Export(name="nextHopDrgAttachmentId", type=String.class, parameters={})
    private Output<String> nextHopDrgAttachmentId;

    /**
     * @return (Updatable) The [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm) of the next hop DRG attachment. The next hop DRG attachment is responsible for reaching the network destination.
     * 
     */
    public Output<String> nextHopDrgAttachmentId() {
        return this.nextHopDrgAttachmentId;
    }
    /**
     * The earliest origin of a route. If a route is advertised to a DRG through an IPsec tunnel attachment, and is propagated to peered DRGs via RPC attachments, the route&#39;s provenance in the peered DRGs remains `IPSEC_TUNNEL`, because that is the earliest origin.
     * 
     */
    @Export(name="routeProvenance", type=String.class, parameters={})
    private Output<String> routeProvenance;

    /**
     * @return The earliest origin of a route. If a route is advertised to a DRG through an IPsec tunnel attachment, and is propagated to peered DRGs via RPC attachments, the route&#39;s provenance in the peered DRGs remains `IPSEC_TUNNEL`, because that is the earliest origin.
     * 
     */
    public Output<String> routeProvenance() {
        return this.routeProvenance;
    }
    /**
     * You can specify static routes for the DRG route table using the API. The DRG learns dynamic routes from the DRG attachments using various routing protocols.
     * 
     */
    @Export(name="routeType", type=String.class, parameters={})
    private Output<String> routeType;

    /**
     * @return You can specify static routes for the DRG route table using the API. The DRG learns dynamic routes from the DRG attachments using various routing protocols.
     * 
     */
    public Output<String> routeType() {
        return this.routeType;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DrgRouteTableRouteRule(String name) {
        this(name, DrgRouteTableRouteRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DrgRouteTableRouteRule(String name, DrgRouteTableRouteRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DrgRouteTableRouteRule(String name, DrgRouteTableRouteRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Core/drgRouteTableRouteRule:DrgRouteTableRouteRule", name, args == null ? DrgRouteTableRouteRuleArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private DrgRouteTableRouteRule(String name, Output<String> id, @Nullable DrgRouteTableRouteRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("oci:Core/drgRouteTableRouteRule:DrgRouteTableRouteRule", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DrgRouteTableRouteRule get(String name, Output<String> id, @Nullable DrgRouteTableRouteRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DrgRouteTableRouteRule(name, id, state, options);
    }
}
