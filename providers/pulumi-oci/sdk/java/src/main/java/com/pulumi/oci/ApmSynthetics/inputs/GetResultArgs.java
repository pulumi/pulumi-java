// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApmSynthetics.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class GetResultArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetResultArgs Empty = new GetResultArgs();

    /**
     * The APM domain ID the request is intended for.
     * 
     */
    @Import(name="apmDomainId", required=true)
    private String apmDomainId;

    /**
     * @return The APM domain ID the request is intended for.
     * 
     */
    public String apmDomainId() {
        return this.apmDomainId;
    }

    /**
     * The time the object was posted.
     * 
     */
    @Import(name="executionTime", required=true)
    private String executionTime;

    /**
     * @return The time the object was posted.
     * 
     */
    public String executionTime() {
        return this.executionTime;
    }

    /**
     * The OCID of the monitor.
     * 
     */
    @Import(name="monitorId", required=true)
    private String monitorId;

    /**
     * @return The OCID of the monitor.
     * 
     */
    public String monitorId() {
        return this.monitorId;
    }

    /**
     * The result content type zip or raw.
     * 
     */
    @Import(name="resultContentType", required=true)
    private String resultContentType;

    /**
     * @return The result content type zip or raw.
     * 
     */
    public String resultContentType() {
        return this.resultContentType;
    }

    /**
     * The result type har, screenshot, log or network.
     * 
     */
    @Import(name="resultType", required=true)
    private String resultType;

    /**
     * @return The result type har, screenshot, log or network.
     * 
     */
    public String resultType() {
        return this.resultType;
    }

    /**
     * The vantagePoint name.
     * 
     */
    @Import(name="vantagePoint", required=true)
    private String vantagePoint;

    /**
     * @return The vantagePoint name.
     * 
     */
    public String vantagePoint() {
        return this.vantagePoint;
    }

    private GetResultArgs() {}

    private GetResultArgs(GetResultArgs $) {
        this.apmDomainId = $.apmDomainId;
        this.executionTime = $.executionTime;
        this.monitorId = $.monitorId;
        this.resultContentType = $.resultContentType;
        this.resultType = $.resultType;
        this.vantagePoint = $.vantagePoint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetResultArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetResultArgs $;

        public Builder() {
            $ = new GetResultArgs();
        }

        public Builder(GetResultArgs defaults) {
            $ = new GetResultArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apmDomainId The APM domain ID the request is intended for.
         * 
         * @return builder
         * 
         */
        public Builder apmDomainId(String apmDomainId) {
            $.apmDomainId = apmDomainId;
            return this;
        }

        /**
         * @param executionTime The time the object was posted.
         * 
         * @return builder
         * 
         */
        public Builder executionTime(String executionTime) {
            $.executionTime = executionTime;
            return this;
        }

        /**
         * @param monitorId The OCID of the monitor.
         * 
         * @return builder
         * 
         */
        public Builder monitorId(String monitorId) {
            $.monitorId = monitorId;
            return this;
        }

        /**
         * @param resultContentType The result content type zip or raw.
         * 
         * @return builder
         * 
         */
        public Builder resultContentType(String resultContentType) {
            $.resultContentType = resultContentType;
            return this;
        }

        /**
         * @param resultType The result type har, screenshot, log or network.
         * 
         * @return builder
         * 
         */
        public Builder resultType(String resultType) {
            $.resultType = resultType;
            return this;
        }

        /**
         * @param vantagePoint The vantagePoint name.
         * 
         * @return builder
         * 
         */
        public Builder vantagePoint(String vantagePoint) {
            $.vantagePoint = vantagePoint;
            return this;
        }

        public GetResultArgs build() {
            $.apmDomainId = Objects.requireNonNull($.apmDomainId, "expected parameter 'apmDomainId' to be non-null");
            $.executionTime = Objects.requireNonNull($.executionTime, "expected parameter 'executionTime' to be non-null");
            $.monitorId = Objects.requireNonNull($.monitorId, "expected parameter 'monitorId' to be non-null");
            $.resultContentType = Objects.requireNonNull($.resultContentType, "expected parameter 'resultContentType' to be non-null");
            $.resultType = Objects.requireNonNull($.resultType, "expected parameter 'resultType' to be non-null");
            $.vantagePoint = Objects.requireNonNull($.vantagePoint, "expected parameter 'vantagePoint' to be non-null");
            return $;
        }
    }

}
