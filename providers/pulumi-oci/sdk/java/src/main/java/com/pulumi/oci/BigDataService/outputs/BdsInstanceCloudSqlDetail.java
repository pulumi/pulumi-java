// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.BigDataService.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.BigDataService.outputs.BdsInstanceCloudSqlDetailKerberosDetail;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BdsInstanceCloudSqlDetail {
    /**
     * @return The size of block volume in GB to be attached to a given node. All the details needed for attaching the block volume are managed by service itself.
     * 
     */
    private final String blockVolumeSizeInGbs;
    /**
     * @return IP address of the node.
     * 
     */
    private final @Nullable String ipAddress;
    /**
     * @return Boolean flag specifying whether or not Kerberos principals are mapped to database users.
     * 
     */
    private final @Nullable Boolean isKerberosMappedToDatabaseUsers;
    /**
     * @return Details about the Kerberos principals.
     * 
     */
    private final @Nullable List<BdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails;
    /**
     * @return (Updatable) Shape of the node.
     * 
     */
    private final String shape;

    @CustomType.Constructor
    private BdsInstanceCloudSqlDetail(
        @CustomType.Parameter("blockVolumeSizeInGbs") String blockVolumeSizeInGbs,
        @CustomType.Parameter("ipAddress") @Nullable String ipAddress,
        @CustomType.Parameter("isKerberosMappedToDatabaseUsers") @Nullable Boolean isKerberosMappedToDatabaseUsers,
        @CustomType.Parameter("kerberosDetails") @Nullable List<BdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails,
        @CustomType.Parameter("shape") String shape) {
        this.blockVolumeSizeInGbs = blockVolumeSizeInGbs;
        this.ipAddress = ipAddress;
        this.isKerberosMappedToDatabaseUsers = isKerberosMappedToDatabaseUsers;
        this.kerberosDetails = kerberosDetails;
        this.shape = shape;
    }

    /**
     * @return The size of block volume in GB to be attached to a given node. All the details needed for attaching the block volume are managed by service itself.
     * 
     */
    public String blockVolumeSizeInGbs() {
        return this.blockVolumeSizeInGbs;
    }
    /**
     * @return IP address of the node.
     * 
     */
    public Optional<String> ipAddress() {
        return Optional.ofNullable(this.ipAddress);
    }
    /**
     * @return Boolean flag specifying whether or not Kerberos principals are mapped to database users.
     * 
     */
    public Optional<Boolean> isKerberosMappedToDatabaseUsers() {
        return Optional.ofNullable(this.isKerberosMappedToDatabaseUsers);
    }
    /**
     * @return Details about the Kerberos principals.
     * 
     */
    public List<BdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails() {
        return this.kerberosDetails == null ? List.of() : this.kerberosDetails;
    }
    /**
     * @return (Updatable) Shape of the node.
     * 
     */
    public String shape() {
        return this.shape;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BdsInstanceCloudSqlDetail defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String blockVolumeSizeInGbs;
        private @Nullable String ipAddress;
        private @Nullable Boolean isKerberosMappedToDatabaseUsers;
        private @Nullable List<BdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails;
        private String shape;

        public Builder() {
    	      // Empty
        }

        public Builder(BdsInstanceCloudSqlDetail defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockVolumeSizeInGbs = defaults.blockVolumeSizeInGbs;
    	      this.ipAddress = defaults.ipAddress;
    	      this.isKerberosMappedToDatabaseUsers = defaults.isKerberosMappedToDatabaseUsers;
    	      this.kerberosDetails = defaults.kerberosDetails;
    	      this.shape = defaults.shape;
        }

        public Builder blockVolumeSizeInGbs(String blockVolumeSizeInGbs) {
            this.blockVolumeSizeInGbs = Objects.requireNonNull(blockVolumeSizeInGbs);
            return this;
        }
        public Builder ipAddress(@Nullable String ipAddress) {
            this.ipAddress = ipAddress;
            return this;
        }
        public Builder isKerberosMappedToDatabaseUsers(@Nullable Boolean isKerberosMappedToDatabaseUsers) {
            this.isKerberosMappedToDatabaseUsers = isKerberosMappedToDatabaseUsers;
            return this;
        }
        public Builder kerberosDetails(@Nullable List<BdsInstanceCloudSqlDetailKerberosDetail> kerberosDetails) {
            this.kerberosDetails = kerberosDetails;
            return this;
        }
        public Builder kerberosDetails(BdsInstanceCloudSqlDetailKerberosDetail... kerberosDetails) {
            return kerberosDetails(List.of(kerberosDetails));
        }
        public Builder shape(String shape) {
            this.shape = Objects.requireNonNull(shape);
            return this;
        }        public BdsInstanceCloudSqlDetail build() {
            return new BdsInstanceCloudSqlDetail(blockVolumeSizeInGbs, ipAddress, isKerberosMappedToDatabaseUsers, kerberosDetails, shape);
        }
    }
}
