// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.Database.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.Database.inputs.GetAutonomousDatabasesFilterArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAutonomousDatabasesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAutonomousDatabasesArgs Empty = new GetAutonomousDatabasesArgs();

    /**
     * The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="autonomousContainerDatabaseId")
    private @Nullable Output<String> autonomousContainerDatabaseId;

    /**
     * @return The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Optional<Output<String>> autonomousContainerDatabaseId() {
        return Optional.ofNullable(this.autonomousContainerDatabaseId);
    }

    /**
     * The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * A filter to return only autonomous database resources that match the specified dbVersion.
     * 
     */
    @Import(name="dbVersion")
    private @Nullable Output<String> dbVersion;

    /**
     * @return A filter to return only autonomous database resources that match the specified dbVersion.
     * 
     */
    public Optional<Output<String>> dbVersion() {
        return Optional.ofNullable(this.dbVersion);
    }

    /**
     * A filter to return only autonomous database resources that match the specified workload type.
     * 
     */
    @Import(name="dbWorkload")
    private @Nullable Output<String> dbWorkload;

    /**
     * @return A filter to return only autonomous database resources that match the specified workload type.
     * 
     */
    public Optional<Output<String>> dbWorkload() {
        return Optional.ofNullable(this.dbWorkload);
    }

    /**
     * A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return A filter to return only resources that match the entire display name given. The match is not case sensitive.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    @Import(name="filters")
    private @Nullable Output<List<GetAutonomousDatabasesFilterArgs>> filters;

    public Optional<Output<List<GetAutonomousDatabasesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * A filter to return only resources that match the given Infrastructure Type.
     * 
     */
    @Import(name="infrastructureType")
    private @Nullable Output<String> infrastructureType;

    /**
     * @return A filter to return only resources that match the given Infrastructure Type.
     * 
     */
    public Optional<Output<String>> infrastructureType() {
        return Optional.ofNullable(this.infrastructureType);
    }

    /**
     * A filter to return only resources that have Data Guard enabled.
     * 
     */
    @Import(name="isDataGuardEnabled")
    private @Nullable Output<Boolean> isDataGuardEnabled;

    /**
     * @return A filter to return only resources that have Data Guard enabled.
     * 
     */
    public Optional<Output<Boolean>> isDataGuardEnabled() {
        return Optional.ofNullable(this.isDataGuardEnabled);
    }

    /**
     * Filter on the value of the resource&#39;s &#39;isFreeTier&#39; property. A value of `true` returns only Always Free resources. A value of `false` excludes Always Free resources from the returned results. Omitting this parameter returns both Always Free and paid resources.
     * 
     */
    @Import(name="isFreeTier")
    private @Nullable Output<Boolean> isFreeTier;

    /**
     * @return Filter on the value of the resource&#39;s &#39;isFreeTier&#39; property. A value of `true` returns only Always Free resources. A value of `false` excludes Always Free resources from the returned results. Omitting this parameter returns both Always Free and paid resources.
     * 
     */
    public Optional<Output<Boolean>> isFreeTier() {
        return Optional.ofNullable(this.isFreeTier);
    }

    /**
     * Filter on the value of the resource&#39;s &#39;isRefreshableClone&#39; property. A value of `true` returns only refreshable clones. A value of `false` excludes refreshable clones from the returned results. Omitting this parameter returns both refreshable clones and databases that are not refreshable clones.
     * 
     */
    @Import(name="isRefreshableClone")
    private @Nullable Output<Boolean> isRefreshableClone;

    /**
     * @return Filter on the value of the resource&#39;s &#39;isRefreshableClone&#39; property. A value of `true` returns only refreshable clones. A value of `false` excludes refreshable clones from the returned results. Omitting this parameter returns both refreshable clones and databases that are not refreshable clones.
     * 
     */
    public Optional<Output<Boolean>> isRefreshableClone() {
        return Optional.ofNullable(this.isRefreshableClone);
    }

    /**
     * A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    @Import(name="state")
    private @Nullable Output<String> state;

    /**
     * @return A filter to return only resources that match the given lifecycle state exactly.
     * 
     */
    public Optional<Output<String>> state() {
        return Optional.ofNullable(this.state);
    }

    private GetAutonomousDatabasesArgs() {}

    private GetAutonomousDatabasesArgs(GetAutonomousDatabasesArgs $) {
        this.autonomousContainerDatabaseId = $.autonomousContainerDatabaseId;
        this.compartmentId = $.compartmentId;
        this.dbVersion = $.dbVersion;
        this.dbWorkload = $.dbWorkload;
        this.displayName = $.displayName;
        this.filters = $.filters;
        this.infrastructureType = $.infrastructureType;
        this.isDataGuardEnabled = $.isDataGuardEnabled;
        this.isFreeTier = $.isFreeTier;
        this.isRefreshableClone = $.isRefreshableClone;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAutonomousDatabasesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAutonomousDatabasesArgs $;

        public Builder() {
            $ = new GetAutonomousDatabasesArgs();
        }

        public Builder(GetAutonomousDatabasesArgs defaults) {
            $ = new GetAutonomousDatabasesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param autonomousContainerDatabaseId The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder autonomousContainerDatabaseId(@Nullable Output<String> autonomousContainerDatabaseId) {
            $.autonomousContainerDatabaseId = autonomousContainerDatabaseId;
            return this;
        }

        /**
         * @param autonomousContainerDatabaseId The Autonomous Container Database [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder autonomousContainerDatabaseId(String autonomousContainerDatabaseId) {
            return autonomousContainerDatabaseId(Output.of(autonomousContainerDatabaseId));
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId The compartment [OCID](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/identifiers.htm).
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param dbVersion A filter to return only autonomous database resources that match the specified dbVersion.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(@Nullable Output<String> dbVersion) {
            $.dbVersion = dbVersion;
            return this;
        }

        /**
         * @param dbVersion A filter to return only autonomous database resources that match the specified dbVersion.
         * 
         * @return builder
         * 
         */
        public Builder dbVersion(String dbVersion) {
            return dbVersion(Output.of(dbVersion));
        }

        /**
         * @param dbWorkload A filter to return only autonomous database resources that match the specified workload type.
         * 
         * @return builder
         * 
         */
        public Builder dbWorkload(@Nullable Output<String> dbWorkload) {
            $.dbWorkload = dbWorkload;
            return this;
        }

        /**
         * @param dbWorkload A filter to return only autonomous database resources that match the specified workload type.
         * 
         * @return builder
         * 
         */
        public Builder dbWorkload(String dbWorkload) {
            return dbWorkload(Output.of(dbWorkload));
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName A filter to return only resources that match the entire display name given. The match is not case sensitive.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        public Builder filters(@Nullable Output<List<GetAutonomousDatabasesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(List<GetAutonomousDatabasesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetAutonomousDatabasesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param infrastructureType A filter to return only resources that match the given Infrastructure Type.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureType(@Nullable Output<String> infrastructureType) {
            $.infrastructureType = infrastructureType;
            return this;
        }

        /**
         * @param infrastructureType A filter to return only resources that match the given Infrastructure Type.
         * 
         * @return builder
         * 
         */
        public Builder infrastructureType(String infrastructureType) {
            return infrastructureType(Output.of(infrastructureType));
        }

        /**
         * @param isDataGuardEnabled A filter to return only resources that have Data Guard enabled.
         * 
         * @return builder
         * 
         */
        public Builder isDataGuardEnabled(@Nullable Output<Boolean> isDataGuardEnabled) {
            $.isDataGuardEnabled = isDataGuardEnabled;
            return this;
        }

        /**
         * @param isDataGuardEnabled A filter to return only resources that have Data Guard enabled.
         * 
         * @return builder
         * 
         */
        public Builder isDataGuardEnabled(Boolean isDataGuardEnabled) {
            return isDataGuardEnabled(Output.of(isDataGuardEnabled));
        }

        /**
         * @param isFreeTier Filter on the value of the resource&#39;s &#39;isFreeTier&#39; property. A value of `true` returns only Always Free resources. A value of `false` excludes Always Free resources from the returned results. Omitting this parameter returns both Always Free and paid resources.
         * 
         * @return builder
         * 
         */
        public Builder isFreeTier(@Nullable Output<Boolean> isFreeTier) {
            $.isFreeTier = isFreeTier;
            return this;
        }

        /**
         * @param isFreeTier Filter on the value of the resource&#39;s &#39;isFreeTier&#39; property. A value of `true` returns only Always Free resources. A value of `false` excludes Always Free resources from the returned results. Omitting this parameter returns both Always Free and paid resources.
         * 
         * @return builder
         * 
         */
        public Builder isFreeTier(Boolean isFreeTier) {
            return isFreeTier(Output.of(isFreeTier));
        }

        /**
         * @param isRefreshableClone Filter on the value of the resource&#39;s &#39;isRefreshableClone&#39; property. A value of `true` returns only refreshable clones. A value of `false` excludes refreshable clones from the returned results. Omitting this parameter returns both refreshable clones and databases that are not refreshable clones.
         * 
         * @return builder
         * 
         */
        public Builder isRefreshableClone(@Nullable Output<Boolean> isRefreshableClone) {
            $.isRefreshableClone = isRefreshableClone;
            return this;
        }

        /**
         * @param isRefreshableClone Filter on the value of the resource&#39;s &#39;isRefreshableClone&#39; property. A value of `true` returns only refreshable clones. A value of `false` excludes refreshable clones from the returned results. Omitting this parameter returns both refreshable clones and databases that are not refreshable clones.
         * 
         * @return builder
         * 
         */
        public Builder isRefreshableClone(Boolean isRefreshableClone) {
            return isRefreshableClone(Output.of(isRefreshableClone));
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state A filter to return only resources that match the given lifecycle state exactly.
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Output.of(state));
        }

        public GetAutonomousDatabasesArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
