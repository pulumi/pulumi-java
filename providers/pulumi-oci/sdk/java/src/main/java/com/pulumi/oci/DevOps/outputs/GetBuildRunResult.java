// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DevOps.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.oci.DevOps.outputs.GetBuildRunBuildOutput;
import com.pulumi.oci.DevOps.outputs.GetBuildRunBuildRunArgument;
import com.pulumi.oci.DevOps.outputs.GetBuildRunBuildRunProgress;
import com.pulumi.oci.DevOps.outputs.GetBuildRunBuildRunSource;
import com.pulumi.oci.DevOps.outputs.GetBuildRunCommitInfo;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetBuildRunResult {
    /**
     * @return Outputs from the build.
     * 
     */
    private final List<GetBuildRunBuildOutput> buildOutputs;
    /**
     * @return The OCID of the build pipeline to be triggered.
     * 
     */
    private final String buildPipelineId;
    /**
     * @return Specifies list of arguments passed along with the build run.
     * 
     */
    private final List<GetBuildRunBuildRunArgument> buildRunArguments;
    private final String buildRunId;
    /**
     * @return The run progress details of a build run.
     * 
     */
    private final List<GetBuildRunBuildRunProgress> buildRunProgresses;
    /**
     * @return The source from which the build run is triggered.
     * 
     */
    private final List<GetBuildRunBuildRunSource> buildRunSources;
    /**
     * @return Commit details that need to be used for the build run.
     * 
     */
    private final List<GetBuildRunCommitInfo> commitInfos;
    /**
     * @return The OCID of the compartment where the build is running.
     * 
     */
    private final String compartmentId;
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> definedTags;
    /**
     * @return Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    private final String displayName;
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    private final Map<String,Object> freeformTags;
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    private final String id;
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    private final String lifecycleDetails;
    /**
     * @return The OCID of the DevOps project.
     * 
     */
    private final String projectId;
    /**
     * @return The current state of the build run.
     * 
     */
    private final String state;
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    private final Map<String,Object> systemTags;
    /**
     * @return The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private final String timeCreated;
    /**
     * @return The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    private final String timeUpdated;

    @CustomType.Constructor
    private GetBuildRunResult(
        @CustomType.Parameter("buildOutputs") List<GetBuildRunBuildOutput> buildOutputs,
        @CustomType.Parameter("buildPipelineId") String buildPipelineId,
        @CustomType.Parameter("buildRunArguments") List<GetBuildRunBuildRunArgument> buildRunArguments,
        @CustomType.Parameter("buildRunId") String buildRunId,
        @CustomType.Parameter("buildRunProgresses") List<GetBuildRunBuildRunProgress> buildRunProgresses,
        @CustomType.Parameter("buildRunSources") List<GetBuildRunBuildRunSource> buildRunSources,
        @CustomType.Parameter("commitInfos") List<GetBuildRunCommitInfo> commitInfos,
        @CustomType.Parameter("compartmentId") String compartmentId,
        @CustomType.Parameter("definedTags") Map<String,Object> definedTags,
        @CustomType.Parameter("displayName") String displayName,
        @CustomType.Parameter("freeformTags") Map<String,Object> freeformTags,
        @CustomType.Parameter("id") String id,
        @CustomType.Parameter("lifecycleDetails") String lifecycleDetails,
        @CustomType.Parameter("projectId") String projectId,
        @CustomType.Parameter("state") String state,
        @CustomType.Parameter("systemTags") Map<String,Object> systemTags,
        @CustomType.Parameter("timeCreated") String timeCreated,
        @CustomType.Parameter("timeUpdated") String timeUpdated) {
        this.buildOutputs = buildOutputs;
        this.buildPipelineId = buildPipelineId;
        this.buildRunArguments = buildRunArguments;
        this.buildRunId = buildRunId;
        this.buildRunProgresses = buildRunProgresses;
        this.buildRunSources = buildRunSources;
        this.commitInfos = commitInfos;
        this.compartmentId = compartmentId;
        this.definedTags = definedTags;
        this.displayName = displayName;
        this.freeformTags = freeformTags;
        this.id = id;
        this.lifecycleDetails = lifecycleDetails;
        this.projectId = projectId;
        this.state = state;
        this.systemTags = systemTags;
        this.timeCreated = timeCreated;
        this.timeUpdated = timeUpdated;
    }

    /**
     * @return Outputs from the build.
     * 
     */
    public List<GetBuildRunBuildOutput> buildOutputs() {
        return this.buildOutputs;
    }
    /**
     * @return The OCID of the build pipeline to be triggered.
     * 
     */
    public String buildPipelineId() {
        return this.buildPipelineId;
    }
    /**
     * @return Specifies list of arguments passed along with the build run.
     * 
     */
    public List<GetBuildRunBuildRunArgument> buildRunArguments() {
        return this.buildRunArguments;
    }
    public String buildRunId() {
        return this.buildRunId;
    }
    /**
     * @return The run progress details of a build run.
     * 
     */
    public List<GetBuildRunBuildRunProgress> buildRunProgresses() {
        return this.buildRunProgresses;
    }
    /**
     * @return The source from which the build run is triggered.
     * 
     */
    public List<GetBuildRunBuildRunSource> buildRunSources() {
        return this.buildRunSources;
    }
    /**
     * @return Commit details that need to be used for the build run.
     * 
     */
    public List<GetBuildRunCommitInfo> commitInfos() {
        return this.commitInfos;
    }
    /**
     * @return The OCID of the compartment where the build is running.
     * 
     */
    public String compartmentId() {
        return this.compartmentId;
    }
    /**
     * @return Defined tags for this resource. Each key is predefined and scoped to a namespace. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;foo-namespace.bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> definedTags() {
        return this.definedTags;
    }
    /**
     * @return Build run display name, which can be renamed and is not necessarily unique. Avoid entering confidential information.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return Simple key-value pair that is applied without any predefined name, type or scope. Exists for cross-compatibility only.  See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;bar-key&#34;: &#34;value&#34;}`
     * 
     */
    public Map<String,Object> freeformTags() {
        return this.freeformTags;
    }
    /**
     * @return Unique identifier that is immutable on creation.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return A message describing the current state in more detail. For example, can be used to provide actionable information for a resource in Failed state.
     * 
     */
    public String lifecycleDetails() {
        return this.lifecycleDetails;
    }
    /**
     * @return The OCID of the DevOps project.
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The current state of the build run.
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Usage of system tag keys. These predefined keys are scoped to namespaces. See [Resource Tags](https://docs.cloud.oracle.com/iaas/Content/General/Concepts/resourcetags.htm). Example: `{&#34;orcl-cloud.free-tier-retained&#34;: &#34;true&#34;}`
     * 
     */
    public Map<String,Object> systemTags() {
        return this.systemTags;
    }
    /**
     * @return The time the build run was created. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public String timeCreated() {
        return this.timeCreated;
    }
    /**
     * @return The time the build run was updated. Format defined by [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).
     * 
     */
    public String timeUpdated() {
        return this.timeUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBuildRunResult defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private List<GetBuildRunBuildOutput> buildOutputs;
        private String buildPipelineId;
        private List<GetBuildRunBuildRunArgument> buildRunArguments;
        private String buildRunId;
        private List<GetBuildRunBuildRunProgress> buildRunProgresses;
        private List<GetBuildRunBuildRunSource> buildRunSources;
        private List<GetBuildRunCommitInfo> commitInfos;
        private String compartmentId;
        private Map<String,Object> definedTags;
        private String displayName;
        private Map<String,Object> freeformTags;
        private String id;
        private String lifecycleDetails;
        private String projectId;
        private String state;
        private Map<String,Object> systemTags;
        private String timeCreated;
        private String timeUpdated;

        public Builder() {
    	      // Empty
        }

        public Builder(GetBuildRunResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.buildOutputs = defaults.buildOutputs;
    	      this.buildPipelineId = defaults.buildPipelineId;
    	      this.buildRunArguments = defaults.buildRunArguments;
    	      this.buildRunId = defaults.buildRunId;
    	      this.buildRunProgresses = defaults.buildRunProgresses;
    	      this.buildRunSources = defaults.buildRunSources;
    	      this.commitInfos = defaults.commitInfos;
    	      this.compartmentId = defaults.compartmentId;
    	      this.definedTags = defaults.definedTags;
    	      this.displayName = defaults.displayName;
    	      this.freeformTags = defaults.freeformTags;
    	      this.id = defaults.id;
    	      this.lifecycleDetails = defaults.lifecycleDetails;
    	      this.projectId = defaults.projectId;
    	      this.state = defaults.state;
    	      this.systemTags = defaults.systemTags;
    	      this.timeCreated = defaults.timeCreated;
    	      this.timeUpdated = defaults.timeUpdated;
        }

        public Builder buildOutputs(List<GetBuildRunBuildOutput> buildOutputs) {
            this.buildOutputs = Objects.requireNonNull(buildOutputs);
            return this;
        }
        public Builder buildOutputs(GetBuildRunBuildOutput... buildOutputs) {
            return buildOutputs(List.of(buildOutputs));
        }
        public Builder buildPipelineId(String buildPipelineId) {
            this.buildPipelineId = Objects.requireNonNull(buildPipelineId);
            return this;
        }
        public Builder buildRunArguments(List<GetBuildRunBuildRunArgument> buildRunArguments) {
            this.buildRunArguments = Objects.requireNonNull(buildRunArguments);
            return this;
        }
        public Builder buildRunArguments(GetBuildRunBuildRunArgument... buildRunArguments) {
            return buildRunArguments(List.of(buildRunArguments));
        }
        public Builder buildRunId(String buildRunId) {
            this.buildRunId = Objects.requireNonNull(buildRunId);
            return this;
        }
        public Builder buildRunProgresses(List<GetBuildRunBuildRunProgress> buildRunProgresses) {
            this.buildRunProgresses = Objects.requireNonNull(buildRunProgresses);
            return this;
        }
        public Builder buildRunProgresses(GetBuildRunBuildRunProgress... buildRunProgresses) {
            return buildRunProgresses(List.of(buildRunProgresses));
        }
        public Builder buildRunSources(List<GetBuildRunBuildRunSource> buildRunSources) {
            this.buildRunSources = Objects.requireNonNull(buildRunSources);
            return this;
        }
        public Builder buildRunSources(GetBuildRunBuildRunSource... buildRunSources) {
            return buildRunSources(List.of(buildRunSources));
        }
        public Builder commitInfos(List<GetBuildRunCommitInfo> commitInfos) {
            this.commitInfos = Objects.requireNonNull(commitInfos);
            return this;
        }
        public Builder commitInfos(GetBuildRunCommitInfo... commitInfos) {
            return commitInfos(List.of(commitInfos));
        }
        public Builder compartmentId(String compartmentId) {
            this.compartmentId = Objects.requireNonNull(compartmentId);
            return this;
        }
        public Builder definedTags(Map<String,Object> definedTags) {
            this.definedTags = Objects.requireNonNull(definedTags);
            return this;
        }
        public Builder displayName(String displayName) {
            this.displayName = Objects.requireNonNull(displayName);
            return this;
        }
        public Builder freeformTags(Map<String,Object> freeformTags) {
            this.freeformTags = Objects.requireNonNull(freeformTags);
            return this;
        }
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public Builder lifecycleDetails(String lifecycleDetails) {
            this.lifecycleDetails = Objects.requireNonNull(lifecycleDetails);
            return this;
        }
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        public Builder state(String state) {
            this.state = Objects.requireNonNull(state);
            return this;
        }
        public Builder systemTags(Map<String,Object> systemTags) {
            this.systemTags = Objects.requireNonNull(systemTags);
            return this;
        }
        public Builder timeCreated(String timeCreated) {
            this.timeCreated = Objects.requireNonNull(timeCreated);
            return this;
        }
        public Builder timeUpdated(String timeUpdated) {
            this.timeUpdated = Objects.requireNonNull(timeUpdated);
            return this;
        }        public GetBuildRunResult build() {
            return new GetBuildRunResult(buildOutputs, buildPipelineId, buildRunArguments, buildRunId, buildRunProgresses, buildRunSources, commitInfos, compartmentId, definedTags, displayName, freeformTags, id, lifecycleDetails, projectId, state, systemTags, timeCreated, timeUpdated);
        }
    }
}
