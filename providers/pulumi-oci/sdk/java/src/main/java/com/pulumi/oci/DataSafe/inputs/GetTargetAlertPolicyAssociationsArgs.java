// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.DataSafe.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.DataSafe.inputs.GetTargetAlertPolicyAssociationsFilter;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;


public final class GetTargetAlertPolicyAssociationsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTargetAlertPolicyAssociationsArgs Empty = new GetTargetAlertPolicyAssociationsArgs();

    /**
     * Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    @Import(name="accessLevel")
    private Output</* @Nullable */ String> accessLevel;

    /**
     * @return Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
     * 
     */
    public Output</* @Nullable */ String> accessLevel() {
        return this.accessLevel;
    }

    /**
     * A filter to return policy by it&#39;s OCID.
     * 
     */
    @Import(name="alertPolicyId")
    private Output</* @Nullable */ String> alertPolicyId;

    /**
     * @return A filter to return policy by it&#39;s OCID.
     * 
     */
    public Output</* @Nullable */ String> alertPolicyId() {
        return this.alertPolicyId;
    }

    /**
     * A filter to return only resources that match the specified compartment OCID.
     * 
     */
    @Import(name="compartmentId", required=true)
    private Output<String> compartmentId;

    /**
     * @return A filter to return only resources that match the specified compartment OCID.
     * 
     */
    public Output<String> compartmentId() {
        return this.compartmentId;
    }

    /**
     * Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    @Import(name="compartmentIdInSubtree")
    private Output</* @Nullable */ Boolean> compartmentIdInSubtree;

    /**
     * @return Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
     * 
     */
    public Output</* @Nullable */ Boolean> compartmentIdInSubtree() {
        return this.compartmentIdInSubtree;
    }

    @Import(name="filters")
    private Output</* @Nullable */ List<GetTargetAlertPolicyAssociationsFilter>> filters;

    public Output</* @Nullable */ List<GetTargetAlertPolicyAssociationsFilter>> filters() {
        return this.filters;
    }

    /**
     * An optional filter to return only alert policies that have the given life-cycle state.
     * 
     */
    @Import(name="state")
    private Output</* @Nullable */ String> state;

    /**
     * @return An optional filter to return only alert policies that have the given life-cycle state.
     * 
     */
    public Output</* @Nullable */ String> state() {
        return this.state;
    }

    /**
     * A filter to return only items related to a specific target-alert policy association ID.
     * 
     */
    @Import(name="targetAlertPolicyAssociationId")
    private Output</* @Nullable */ String> targetAlertPolicyAssociationId;

    /**
     * @return A filter to return only items related to a specific target-alert policy association ID.
     * 
     */
    public Output</* @Nullable */ String> targetAlertPolicyAssociationId() {
        return this.targetAlertPolicyAssociationId;
    }

    /**
     * A filter to return only items related to a specific target OCID.
     * 
     */
    @Import(name="targetId")
    private Output</* @Nullable */ String> targetId;

    /**
     * @return A filter to return only items related to a specific target OCID.
     * 
     */
    public Output</* @Nullable */ String> targetId() {
        return this.targetId;
    }

    /**
     * A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
     * 
     */
    @Import(name="timeCreatedGreaterThanOrEqualTo")
    private Output</* @Nullable */ String> timeCreatedGreaterThanOrEqualTo;

    /**
     * @return A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
     * 
     */
    public Output</* @Nullable */ String> timeCreatedGreaterThanOrEqualTo() {
        return this.timeCreatedGreaterThanOrEqualTo;
    }

    /**
     * Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    @Import(name="timeCreatedLessThan")
    private Output</* @Nullable */ String> timeCreatedLessThan;

    /**
     * @return Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by RFC 3339.
     * 
     */
    public Output</* @Nullable */ String> timeCreatedLessThan() {
        return this.timeCreatedLessThan;
    }

    private GetTargetAlertPolicyAssociationsArgs() {}

    private GetTargetAlertPolicyAssociationsArgs(GetTargetAlertPolicyAssociationsArgs $) {
        this.accessLevel = $.accessLevel;
        this.alertPolicyId = $.alertPolicyId;
        this.compartmentId = $.compartmentId;
        this.compartmentIdInSubtree = $.compartmentIdInSubtree;
        this.filters = $.filters;
        this.state = $.state;
        this.targetAlertPolicyAssociationId = $.targetAlertPolicyAssociationId;
        this.targetId = $.targetId;
        this.timeCreatedGreaterThanOrEqualTo = $.timeCreatedGreaterThanOrEqualTo;
        this.timeCreatedLessThan = $.timeCreatedLessThan;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTargetAlertPolicyAssociationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTargetAlertPolicyAssociationsArgs $;

        public Builder() {
            $ = new GetTargetAlertPolicyAssociationsArgs();
        }

        public Builder(GetTargetAlertPolicyAssociationsArgs defaults) {
            $ = new GetTargetAlertPolicyAssociationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessLevel Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
         * 
         * @return builder
         * 
         */
        public Builder accessLevel(Output</* @Nullable */ String> accessLevel) {
            $.accessLevel = accessLevel;
            return this;
        }

        /**
         * @param accessLevel Valid values are RESTRICTED and ACCESSIBLE. Default is RESTRICTED. Setting this to ACCESSIBLE returns only those compartments for which the user has INSPECT permissions directly or indirectly (permissions can be on a resource in a subcompartment). When set to RESTRICTED permissions are checked and no partial results are displayed.
         * 
         * @return builder
         * 
         */
        public Builder accessLevel(@Nullable String accessLevel) {
            return accessLevel(Output.of(accessLevel));
        }

        /**
         * @param alertPolicyId A filter to return policy by it&#39;s OCID.
         * 
         * @return builder
         * 
         */
        public Builder alertPolicyId(Output</* @Nullable */ String> alertPolicyId) {
            $.alertPolicyId = alertPolicyId;
            return this;
        }

        /**
         * @param alertPolicyId A filter to return policy by it&#39;s OCID.
         * 
         * @return builder
         * 
         */
        public Builder alertPolicyId(@Nullable String alertPolicyId) {
            return alertPolicyId(Output.of(alertPolicyId));
        }

        /**
         * @param compartmentId A filter to return only resources that match the specified compartment OCID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(Output<String> compartmentId) {
            $.compartmentId = compartmentId;
            return this;
        }

        /**
         * @param compartmentId A filter to return only resources that match the specified compartment OCID.
         * 
         * @return builder
         * 
         */
        public Builder compartmentId(String compartmentId) {
            return compartmentId(Output.of(compartmentId));
        }

        /**
         * @param compartmentIdInSubtree Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(Output</* @Nullable */ Boolean> compartmentIdInSubtree) {
            $.compartmentIdInSubtree = compartmentIdInSubtree;
            return this;
        }

        /**
         * @param compartmentIdInSubtree Default is false. When set to true, the hierarchy of compartments is traversed and all compartments and subcompartments in the tenancy are returned. Depends on the &#39;accessLevel&#39; setting.
         * 
         * @return builder
         * 
         */
        public Builder compartmentIdInSubtree(@Nullable Boolean compartmentIdInSubtree) {
            return compartmentIdInSubtree(Output.of(compartmentIdInSubtree));
        }

        public Builder filters(Output</* @Nullable */ List<GetTargetAlertPolicyAssociationsFilter>> filters) {
            $.filters = filters;
            return this;
        }

        public Builder filters(@Nullable List<GetTargetAlertPolicyAssociationsFilter> filters) {
            return filters(Output.of(filters));
        }

        public Builder filters(GetTargetAlertPolicyAssociationsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param state An optional filter to return only alert policies that have the given life-cycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(Output</* @Nullable */ String> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state An optional filter to return only alert policies that have the given life-cycle state.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            return state(Output.of(state));
        }

        /**
         * @param targetAlertPolicyAssociationId A filter to return only items related to a specific target-alert policy association ID.
         * 
         * @return builder
         * 
         */
        public Builder targetAlertPolicyAssociationId(Output</* @Nullable */ String> targetAlertPolicyAssociationId) {
            $.targetAlertPolicyAssociationId = targetAlertPolicyAssociationId;
            return this;
        }

        /**
         * @param targetAlertPolicyAssociationId A filter to return only items related to a specific target-alert policy association ID.
         * 
         * @return builder
         * 
         */
        public Builder targetAlertPolicyAssociationId(@Nullable String targetAlertPolicyAssociationId) {
            return targetAlertPolicyAssociationId(Output.of(targetAlertPolicyAssociationId));
        }

        /**
         * @param targetId A filter to return only items related to a specific target OCID.
         * 
         * @return builder
         * 
         */
        public Builder targetId(Output</* @Nullable */ String> targetId) {
            $.targetId = targetId;
            return this;
        }

        /**
         * @param targetId A filter to return only items related to a specific target OCID.
         * 
         * @return builder
         * 
         */
        public Builder targetId(@Nullable String targetId) {
            return targetId(Output.of(targetId));
        }

        /**
         * @param timeCreatedGreaterThanOrEqualTo A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedGreaterThanOrEqualTo(Output</* @Nullable */ String> timeCreatedGreaterThanOrEqualTo) {
            $.timeCreatedGreaterThanOrEqualTo = timeCreatedGreaterThanOrEqualTo;
            return this;
        }

        /**
         * @param timeCreatedGreaterThanOrEqualTo A filter to return only the resources that were created after the specified date and time, as defined by [RFC3339](https://tools.ietf.org/html/rfc3339). Using TimeCreatedGreaterThanOrEqualToQueryParam parameter retrieves all resources created after that date.
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedGreaterThanOrEqualTo(@Nullable String timeCreatedGreaterThanOrEqualTo) {
            return timeCreatedGreaterThanOrEqualTo(Output.of(timeCreatedGreaterThanOrEqualTo));
        }

        /**
         * @param timeCreatedLessThan Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by RFC 3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedLessThan(Output</* @Nullable */ String> timeCreatedLessThan) {
            $.timeCreatedLessThan = timeCreatedLessThan;
            return this;
        }

        /**
         * @param timeCreatedLessThan Search for resources that were created before a specific date. Specifying this parameter corresponding `timeCreatedLessThan` parameter will retrieve all resources created before the specified created date, in &#34;YYYY-MM-ddThh:mmZ&#34; format with a Z offset, as defined by RFC 3339.
         * 
         * @return builder
         * 
         */
        public Builder timeCreatedLessThan(@Nullable String timeCreatedLessThan) {
            return timeCreatedLessThan(Output.of(timeCreatedLessThan));
        }

        public GetTargetAlertPolicyAssociationsArgs build() {
            $.compartmentId = Objects.requireNonNull($.compartmentId, "expected parameter 'compartmentId' to be non-null");
            return $;
        }
    }

}
