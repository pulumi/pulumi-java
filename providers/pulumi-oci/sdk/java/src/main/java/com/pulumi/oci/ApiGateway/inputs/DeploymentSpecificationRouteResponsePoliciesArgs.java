// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.oci.ApiGateway.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsArgs;
import com.pulumi.oci.ApiGateway.inputs.DeploymentSpecificationRouteResponsePoliciesResponseCacheStoreArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeploymentSpecificationRouteResponsePoliciesArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeploymentSpecificationRouteResponsePoliciesArgs Empty = new DeploymentSpecificationRouteResponsePoliciesArgs();

    /**
     * (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
     * 
     */
    @Import(name="headerTransformations")
    private @Nullable Output<DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsArgs> headerTransformations;

    /**
     * @return (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
     * 
     */
    public Optional<Output<DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsArgs>> headerTransformations() {
        return Optional.ofNullable(this.headerTransformations);
    }

    /**
     * (Updatable) Base policy for how a response from a backend is cached in the Response Cache.
     * 
     */
    @Import(name="responseCacheStore")
    private @Nullable Output<DeploymentSpecificationRouteResponsePoliciesResponseCacheStoreArgs> responseCacheStore;

    /**
     * @return (Updatable) Base policy for how a response from a backend is cached in the Response Cache.
     * 
     */
    public Optional<Output<DeploymentSpecificationRouteResponsePoliciesResponseCacheStoreArgs>> responseCacheStore() {
        return Optional.ofNullable(this.responseCacheStore);
    }

    private DeploymentSpecificationRouteResponsePoliciesArgs() {}

    private DeploymentSpecificationRouteResponsePoliciesArgs(DeploymentSpecificationRouteResponsePoliciesArgs $) {
        this.headerTransformations = $.headerTransformations;
        this.responseCacheStore = $.responseCacheStore;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeploymentSpecificationRouteResponsePoliciesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeploymentSpecificationRouteResponsePoliciesArgs $;

        public Builder() {
            $ = new DeploymentSpecificationRouteResponsePoliciesArgs();
        }

        public Builder(DeploymentSpecificationRouteResponsePoliciesArgs defaults) {
            $ = new DeploymentSpecificationRouteResponsePoliciesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param headerTransformations (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder headerTransformations(@Nullable Output<DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsArgs> headerTransformations) {
            $.headerTransformations = headerTransformations;
            return this;
        }

        /**
         * @param headerTransformations (Updatable) A set of transformations to apply to HTTP headers that pass through the gateway.
         * 
         * @return builder
         * 
         */
        public Builder headerTransformations(DeploymentSpecificationRouteResponsePoliciesHeaderTransformationsArgs headerTransformations) {
            return headerTransformations(Output.of(headerTransformations));
        }

        /**
         * @param responseCacheStore (Updatable) Base policy for how a response from a backend is cached in the Response Cache.
         * 
         * @return builder
         * 
         */
        public Builder responseCacheStore(@Nullable Output<DeploymentSpecificationRouteResponsePoliciesResponseCacheStoreArgs> responseCacheStore) {
            $.responseCacheStore = responseCacheStore;
            return this;
        }

        /**
         * @param responseCacheStore (Updatable) Base policy for how a response from a backend is cached in the Response Cache.
         * 
         * @return builder
         * 
         */
        public Builder responseCacheStore(DeploymentSpecificationRouteResponsePoliciesResponseCacheStoreArgs responseCacheStore) {
            return responseCacheStore(Output.of(responseCacheStore));
        }

        public DeploymentSpecificationRouteResponsePoliciesArgs build() {
            return $;
        }
    }

}
