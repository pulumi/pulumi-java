// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.refref.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;


public final class InnerDataArgs extends com.pulumi.resources.ResourceArgs {

    public static final InnerDataArgs Empty = new InnerDataArgs();

    @Import(name="boolArray", required=true)
    private Output<List<Boolean>> boolArray;

    public Output<List<Boolean>> boolArray() {
        return this.boolArray;
    }

    @Import(name="boolean", required=true)
    private Output<Boolean> boolean_;

    public Output<Boolean> boolean_() {
        return this.boolean_;
    }

    @Import(name="float", required=true)
    private Output<Double> float_;

    public Output<Double> float_() {
        return this.float_;
    }

    @Import(name="integer", required=true)
    private Output<Integer> integer;

    public Output<Integer> integer() {
        return this.integer;
    }

    @Import(name="string", required=true)
    private Output<String> string;

    public Output<String> string() {
        return this.string;
    }

    @Import(name="stringMap", required=true)
    private Output<Map<String,String>> stringMap;

    public Output<Map<String,String>> stringMap() {
        return this.stringMap;
    }

    private InnerDataArgs() {}

    private InnerDataArgs(InnerDataArgs $) {
        this.boolArray = $.boolArray;
        this.boolean_ = $.boolean_;
        this.float_ = $.float_;
        this.integer = $.integer;
        this.string = $.string;
        this.stringMap = $.stringMap;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(InnerDataArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private InnerDataArgs $;

        public Builder() {
            $ = new InnerDataArgs();
        }

        public Builder(InnerDataArgs defaults) {
            $ = new InnerDataArgs(Objects.requireNonNull(defaults));
        }

        public Builder boolArray(Output<List<Boolean>> boolArray) {
            $.boolArray = boolArray;
            return this;
        }

        public Builder boolArray(List<Boolean> boolArray) {
            return boolArray(Output.of(boolArray));
        }

        public Builder boolArray(Boolean... boolArray) {
            return boolArray(List.of(boolArray));
        }

        public Builder boolean_(Output<Boolean> boolean_) {
            $.boolean_ = boolean_;
            return this;
        }

        public Builder boolean_(Boolean boolean_) {
            return boolean_(Output.of(boolean_));
        }

        public Builder float_(Output<Double> float_) {
            $.float_ = float_;
            return this;
        }

        public Builder float_(Double float_) {
            return float_(Output.of(float_));
        }

        public Builder integer(Output<Integer> integer) {
            $.integer = integer;
            return this;
        }

        public Builder integer(Integer integer) {
            return integer(Output.of(integer));
        }

        public Builder string(Output<String> string) {
            $.string = string;
            return this;
        }

        public Builder string(String string) {
            return string(Output.of(string));
        }

        public Builder stringMap(Output<Map<String,String>> stringMap) {
            $.stringMap = stringMap;
            return this;
        }

        public Builder stringMap(Map<String,String> stringMap) {
            return stringMap(Output.of(stringMap));
        }

        public InnerDataArgs build() {
            if ($.boolArray == null) {
                throw new MissingRequiredPropertyException("InnerDataArgs", "boolArray");
            }
            if ($.boolean_ == null) {
                throw new MissingRequiredPropertyException("InnerDataArgs", "boolean_");
            }
            if ($.float_ == null) {
                throw new MissingRequiredPropertyException("InnerDataArgs", "float_");
            }
            if ($.integer == null) {
                throw new MissingRequiredPropertyException("InnerDataArgs", "integer");
            }
            if ($.string == null) {
                throw new MissingRequiredPropertyException("InnerDataArgs", "string");
            }
            if ($.stringMap == null) {
                throw new MissingRequiredPropertyException("InnerDataArgs", "stringMap");
            }
            return $;
        }
    }

}
