// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.simpleinvoke;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.simpleinvoke.Utilities;
import com.pulumi.simpleinvoke.inputs.MyInvokeArgs;
import com.pulumi.simpleinvoke.inputs.MyInvokePlainArgs;
import com.pulumi.simpleinvoke.inputs.SecretInvokeArgs;
import com.pulumi.simpleinvoke.inputs.SecretInvokePlainArgs;
import com.pulumi.simpleinvoke.inputs.UnitArgs;
import com.pulumi.simpleinvoke.inputs.UnitPlainArgs;
import com.pulumi.simpleinvoke.outputs.MyInvokeResult;
import com.pulumi.simpleinvoke.outputs.SecretInvokeResult;
import com.pulumi.simpleinvoke.outputs.UnitResult;
import java.util.concurrent.CompletableFuture;

public final class SimpleinvokeFunctions {
    public static Output<MyInvokeResult> myInvoke(MyInvokeArgs args) {
        return myInvoke(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<MyInvokeResult> myInvokePlain(MyInvokePlainArgs args) {
        return myInvokePlain(args, InvokeOptions.Empty);
    }
    public static Output<MyInvokeResult> myInvoke(MyInvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("simple-invoke:index:myInvoke", TypeShape.of(MyInvokeResult.class), args, Utilities.withVersion(options));
    }
    public static Output<MyInvokeResult> myInvoke(MyInvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("simple-invoke:index:myInvoke", TypeShape.of(MyInvokeResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<MyInvokeResult> myInvokePlain(MyInvokePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("simple-invoke:index:myInvoke", TypeShape.of(MyInvokeResult.class), args, Utilities.withVersion(options));
    }
    public static Output<SecretInvokeResult> secretInvoke(SecretInvokeArgs args) {
        return secretInvoke(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<SecretInvokeResult> secretInvokePlain(SecretInvokePlainArgs args) {
        return secretInvokePlain(args, InvokeOptions.Empty);
    }
    public static Output<SecretInvokeResult> secretInvoke(SecretInvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("simple-invoke:index:secretInvoke", TypeShape.of(SecretInvokeResult.class), args, Utilities.withVersion(options));
    }
    public static Output<SecretInvokeResult> secretInvoke(SecretInvokeArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("simple-invoke:index:secretInvoke", TypeShape.of(SecretInvokeResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<SecretInvokeResult> secretInvokePlain(SecretInvokePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("simple-invoke:index:secretInvoke", TypeShape.of(SecretInvokeResult.class), args, Utilities.withVersion(options));
    }
    public static Output<UnitResult> unit() {
        return unit(UnitArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<UnitResult> unitPlain() {
        return unitPlain(UnitPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<UnitResult> unit(UnitArgs args) {
        return unit(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<UnitResult> unitPlain(UnitPlainArgs args) {
        return unitPlain(args, InvokeOptions.Empty);
    }
    public static Output<UnitResult> unit(UnitArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("simple-invoke:index:unit", TypeShape.of(UnitResult.class), args, Utilities.withVersion(options));
    }
    public static Output<UnitResult> unit(UnitArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("simple-invoke:index:unit", TypeShape.of(UnitResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<UnitResult> unitPlain(UnitPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("simple-invoke:index:unit", TypeShape.of(UnitResult.class), args, Utilities.withVersion(options));
    }
}
