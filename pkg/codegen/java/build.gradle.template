// *** WARNING: this file was generated by pulumi-java-gen ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

plugins {
    id("signing")
    id("java-library")
    id("maven-publish")
}

version = "{{ .Version }}"

def signingKey = System.getenv("SIGNING_KEY")
def signingPassword = System.getenv("SIGNING_PASSWORD")
def publishRepoURL = System.getenv("PUBLISH_REPO_URL")
def publishRepoUsername = System.getenv("PUBLISH_REPO_USERNAME")
def publishRepoPassword = System.getenv("PUBLISH_REPO_PASSWORD")

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

compileJava {
    options.fork = true
    options.forkOptions.jvmArgs.addAll(["-Xmx4g"])
}

repositories {
    mavenLocal()
    maven { // The google mirror is less flaky than mavenCentral()
        url("https://maven-central.storage-download.googleapis.com/maven2/")
    }
    mavenCentral()
}

dependencies {
    {{- range $k, $v := .Dependencies }}
    implementation("{{ $k }}:{{ $v }}")
    {{- end }}
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

publishing {
    publications {
        mainPublication(MavenPublication) {
            groupId = "{{ .GroupID }}"
            artifactId = "{{ .ArtifactID }}"
            version = version
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                inceptionYear = "{{ .ProjectInceptionYear }}"
                name = "{{ .ProjectName }}"
                packaging = "jar"
                description = "{{ .ProjectDescription }}"

                url = "{{ .ProjectURL }}"

                scm {
                    connection = "{{ .ProjectGitURL }}"
                    developerConnection = "{{ .ProjectGitURL }}"
                    url = "{{ .ProjectURL }}"
                }

                licenses {
                    license {
                        name = "{{ .LicenceName }}"
                        url = "{{ .LicenceURL }}"
                    }
                }

                developers {
                    developer {
                        id = "{{ .DeveloperID }}"
                        name = "{{ .DeveloperName }}"
                        email = "{{ .DeveloperEmail }}"
                    }
                }
            }
        }
    }

    if (publishRepoURL) {
        repositories {
            maven {
                name = "PublishRepo"
                url = publishRepoURL
                credentials {
                    username = publishRepoUsername
                    password = publishRepoPassword
                }
            }
        }
    }
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    options.jFlags("-Xmx2g", "-Xms512m")
}

if (signingKey) {
    signing {
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications.mainPublication
    }
}
