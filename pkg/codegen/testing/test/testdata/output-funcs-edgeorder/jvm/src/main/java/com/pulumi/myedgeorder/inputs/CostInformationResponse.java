// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.myedgeorder.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.myedgeorder.inputs.BillingMeterDetailsResponse;
import java.lang.String;
import java.util.List;
import java.util.Objects;


/**
 * Cost information for the product system
 * 
 */
public final class CostInformationResponse extends com.pulumi.resources.InvokeArgs {

    public static final CostInformationResponse Empty = new CostInformationResponse();

    /**
     * Default url to display billing information
     * 
     */
    @Import(name="billingInfoUrl", required=true)
      private final String billingInfoUrl;

    public String billingInfoUrl() {
        return this.billingInfoUrl;
    }

    /**
     * Details on the various billing aspects for the product system.
     * 
     */
    @Import(name="billingMeterDetails", required=true)
      private final List<BillingMeterDetailsResponse> billingMeterDetails;

    public List<BillingMeterDetailsResponse> billingMeterDetails() {
        return this.billingMeterDetails;
    }

    public CostInformationResponse(
        String billingInfoUrl,
        List<BillingMeterDetailsResponse> billingMeterDetails) {
        this.billingInfoUrl = Objects.requireNonNull(billingInfoUrl, "expected parameter 'billingInfoUrl' to be non-null");
        this.billingMeterDetails = Objects.requireNonNull(billingMeterDetails, "expected parameter 'billingMeterDetails' to be non-null");
    }

    private CostInformationResponse() {
        this.billingInfoUrl = null;
        this.billingMeterDetails = List.of();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CostInformationResponse defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private String billingInfoUrl;
        private List<BillingMeterDetailsResponse> billingMeterDetails;

        public Builder() {
    	      // Empty
        }

        public Builder(CostInformationResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.billingInfoUrl = defaults.billingInfoUrl;
    	      this.billingMeterDetails = defaults.billingMeterDetails;
        }

        public Builder billingInfoUrl(String billingInfoUrl) {
            this.billingInfoUrl = Objects.requireNonNull(billingInfoUrl);
            return this;
        }
        public Builder billingMeterDetails(List<BillingMeterDetailsResponse> billingMeterDetails) {
            this.billingMeterDetails = Objects.requireNonNull(billingMeterDetails);
            return this;
        }
        public Builder billingMeterDetails(BillingMeterDetailsResponse... billingMeterDetails) {
            return billingMeterDetails(List.of(billingMeterDetails));
        }        public CostInformationResponse build() {
            return new CostInformationResponse(billingInfoUrl, billingMeterDetails);
        }
    }
}
