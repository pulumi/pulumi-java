// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.urnid.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TestResult {
    private @Nullable Double id;
    private Double urn;

    private TestResult() {}
    public Optional<Double> id() {
        return Optional.ofNullable(this.id);
    }
    public Double urn() {
        return this.urn;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TestResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Double id;
        private Double urn;
        public Builder() {}
        public Builder(TestResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.urn = defaults.urn;
        }

        @CustomType.Setter
        public Builder id(@Nullable Double id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder urn(Double urn) {
            if (urn == null) {
              throw new MissingRequiredPropertyException("TestResult", "urn");
            }
            this.urn = urn;
            return this;
        }
        public TestResult build() {
            final var _resultValue = new TestResult();
            _resultValue.id = id;
            _resultValue.urn = urn;
            return _resultValue;
        }
    }
}
