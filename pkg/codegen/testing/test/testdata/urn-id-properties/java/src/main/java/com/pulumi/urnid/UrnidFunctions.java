// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.urnid;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.urnid.Utilities;
import com.pulumi.urnid.inputs.TestArgs;
import com.pulumi.urnid.inputs.TestPlainArgs;
import com.pulumi.urnid.outputs.TestResult;
import java.util.concurrent.CompletableFuture;

public final class UrnidFunctions {
    /**
     * It&#39;s fine for invokes to use urn and id
     * 
     */
    public static Output<TestResult> test(TestArgs args) {
        return test(args, InvokeOptions.Empty);
    }
    /**
     * It&#39;s fine for invokes to use urn and id
     * 
     */
    public static CompletableFuture<TestResult> testPlain(TestPlainArgs args) {
        return testPlain(args, InvokeOptions.Empty);
    }
    /**
     * It&#39;s fine for invokes to use urn and id
     * 
     */
    public static Output<TestResult> test(TestArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("urnid:index:Test", TypeShape.of(TestResult.class), args, Utilities.withVersion(options));
    }
    /**
     * It&#39;s fine for invokes to use urn and id
     * 
     */
    public static CompletableFuture<TestResult> testPlain(TestPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("urnid:index:Test", TypeShape.of(TestResult.class), args, Utilities.withVersion(options));
    }
}
