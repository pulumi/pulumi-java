// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.example.inputs;

import com.pulumi.asset.Archive;
import com.pulumi.asset.AssetOrArchive;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class GetAssetsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAssetsPlainArgs Empty = new GetAssetsPlainArgs();

    @Import(name="archive", required=true)
    private Archive archive;

    public Archive archive() {
        return this.archive;
    }

    @Import(name="source", required=true)
    private AssetOrArchive source;

    public AssetOrArchive source() {
        return this.source;
    }

    private GetAssetsPlainArgs() {}

    private GetAssetsPlainArgs(GetAssetsPlainArgs $) {
        this.archive = $.archive;
        this.source = $.source;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAssetsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAssetsPlainArgs $;

        public Builder() {
            $ = new GetAssetsPlainArgs();
        }

        public Builder(GetAssetsPlainArgs defaults) {
            $ = new GetAssetsPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder archive(Archive archive) {
            $.archive = archive;
            return this;
        }

        public Builder source(AssetOrArchive source) {
            $.source = source;
            return this;
        }

        public GetAssetsPlainArgs build() {
            if ($.archive == null) {
                throw new MissingRequiredPropertyException("GetAssetsPlainArgs", "archive");
            }
            if ($.source == null) {
                throw new MissingRequiredPropertyException("GetAssetsPlainArgs", "source");
            }
            return $;
        }
    }

}
