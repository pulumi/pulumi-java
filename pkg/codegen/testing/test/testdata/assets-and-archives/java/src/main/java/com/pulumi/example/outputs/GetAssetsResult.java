// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.example.outputs;

import com.pulumi.asset.Archive;
import com.pulumi.asset.AssetOrArchive;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;

@CustomType
public final class GetAssetsResult {
    private Archive archive;
    private AssetOrArchive source;

    private GetAssetsResult() {}
    public Archive archive() {
        return this.archive;
    }
    public AssetOrArchive source() {
        return this.source;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAssetsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Archive archive;
        private AssetOrArchive source;
        public Builder() {}
        public Builder(GetAssetsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.archive = defaults.archive;
    	      this.source = defaults.source;
        }

        @CustomType.Setter
        public Builder archive(Archive archive) {
            if (archive == null) {
              throw new MissingRequiredPropertyException("GetAssetsResult", "archive");
            }
            this.archive = archive;
            return this;
        }
        @CustomType.Setter
        public Builder source(AssetOrArchive source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("GetAssetsResult", "source");
            }
            this.source = source;
            return this;
        }
        public GetAssetsResult build() {
            final var _resultValue = new GetAssetsResult();
            _resultValue.archive = archive;
            _resultValue.source = source;
            return _resultValue;
        }
    }
}
