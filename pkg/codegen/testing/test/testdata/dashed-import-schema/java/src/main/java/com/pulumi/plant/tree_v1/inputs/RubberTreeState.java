// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.plant.tree_v1.inputs;

import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.plant.tree_v1.enums.Farm;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RubberTreeState extends com.pulumi.resources.ResourceArgs {

    public static final RubberTreeState Empty = new RubberTreeState();

    @Import(name="farm")
    private @Nullable Output<Either<Farm,String>> farm;

    public Optional<Output<Either<Farm,String>>> farm() {
        return Optional.ofNullable(this.farm);
    }

    private RubberTreeState() {}

    private RubberTreeState(RubberTreeState $) {
        this.farm = $.farm;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RubberTreeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RubberTreeState $;

        public Builder() {
            $ = new RubberTreeState();
        }

        public Builder(RubberTreeState defaults) {
            $ = new RubberTreeState(Objects.requireNonNull(defaults));
        }

        public Builder farm(@Nullable Output<Either<Farm,String>> farm) {
            $.farm = farm;
            return this;
        }

        public Builder farm(Either<Farm,String> farm) {
            return farm(Output.of(farm));
        }

        public Builder farm(Farm farm) {
            return farm(Either.ofLeft(farm));
        }

        public Builder farm(String farm) {
            return farm(Either.ofRight(farm));
        }

        public RubberTreeState build() {
            $.farm = Codegen.stringProp("farm").right(Farm.class).output().arg($.farm).def("(unknown)").getNullable();
            return $;
        }
    }

}
