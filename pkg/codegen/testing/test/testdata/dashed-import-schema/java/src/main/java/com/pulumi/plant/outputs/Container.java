// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.plant.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.plant.enums.ContainerBrightness;
import com.pulumi.plant.enums.ContainerSize;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class Container {
    private @Nullable ContainerBrightness brightness;
    private @Nullable String color;
    private @Nullable String material;
    private ContainerSize size;

    private Container() {}
    public Optional<ContainerBrightness> brightness() {
        return Optional.ofNullable(this.brightness);
    }
    public Optional<String> color() {
        return Optional.ofNullable(this.color);
    }
    public Optional<String> material() {
        return Optional.ofNullable(this.material);
    }
    public ContainerSize size() {
        return this.size;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Container defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ContainerBrightness brightness;
        private @Nullable String color;
        private @Nullable String material;
        private ContainerSize size;
        public Builder() {}
        public Builder(Container defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.brightness = defaults.brightness;
    	      this.color = defaults.color;
    	      this.material = defaults.material;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder brightness(@Nullable ContainerBrightness brightness) {
            this.brightness = brightness;
            return this;
        }
        @CustomType.Setter
        public Builder color(@Nullable String color) {
            this.color = color;
            return this;
        }
        @CustomType.Setter
        public Builder material(@Nullable String material) {
            this.material = material;
            return this;
        }
        @CustomType.Setter
        public Builder size(ContainerSize size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        public Container build() {
            final var o = new Container();
            o.brightness = brightness;
            o.color = color;
            o.material = material;
            o.size = size;
            return o;
        }
    }
}
