// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.EdgeWorkerArgs;
import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.inputs.EdgeWorkerState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="akamai:index/edgeWorker:EdgeWorker")
public class EdgeWorker extends com.pulumi.resources.CustomResource {
    /**
     * The unique identifier of the EdgeWorker
     * 
     */
    @Export(name="edgeworkerId", refs={Integer.class}, tree="[0]")
    private Output<Integer> edgeworkerId;

    /**
     * @return The unique identifier of the EdgeWorker
     * 
     */
    public Output<Integer> edgeworkerId() {
        return this.edgeworkerId;
    }
    /**
     * Defines the group association for the EdgeWorker
     * 
     */
    @Export(name="groupId", refs={Integer.class}, tree="[0]")
    private Output<Integer> groupId;

    /**
     * @return Defines the group association for the EdgeWorker
     * 
     */
    public Output<Integer> groupId() {
        return this.groupId;
    }
    /**
     * The path to the EdgeWorkers tgz code bundle
     * 
     */
    @Export(name="localBundle", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> localBundle;

    /**
     * @return The path to the EdgeWorkers tgz code bundle
     * 
     */
    public Output<Optional<String>> localBundle() {
        return Codegen.optional(this.localBundle);
    }
    /**
     * The local bundle hash for the EdgeWorker
     * 
     */
    @Export(name="localBundleHash", refs={String.class}, tree="[0]")
    private Output<String> localBundleHash;

    /**
     * @return The local bundle hash for the EdgeWorker
     * 
     */
    public Output<String> localBundleHash() {
        return this.localBundleHash;
    }
    /**
     * The EdgeWorker name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The EdgeWorker name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The unique identifier of a resource tier
     * 
     */
    @Export(name="resourceTierId", refs={Integer.class}, tree="[0]")
    private Output<Integer> resourceTierId;

    /**
     * @return The unique identifier of a resource tier
     * 
     */
    public Output<Integer> resourceTierId() {
        return this.resourceTierId;
    }
    /**
     * The bundle version
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return The bundle version
     * 
     */
    public Output<String> version() {
        return this.version;
    }
    /**
     * The list of warnings returned by EdgeWorker validation
     * 
     */
    @Export(name="warnings", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> warnings;

    /**
     * @return The list of warnings returned by EdgeWorker validation
     * 
     */
    public Output<List<String>> warnings() {
        return this.warnings;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EdgeWorker(java.lang.String name) {
        this(name, EdgeWorkerArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EdgeWorker(String name, EdgeWorkerArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EdgeWorker(java.lang.String name, EdgeWorkerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/edgeWorker:EdgeWorker", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private EdgeWorker(java.lang.String name, Output<java.lang.String> id, @Nullable EdgeWorkerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/edgeWorker:EdgeWorker", name, state, makeResourceOptions(options, id));
    }

    private static EdgeWorkerArgs makeArgs(EdgeWorkerArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EdgeWorkerArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EdgeWorker get(java.lang.String name, Output<java.lang.String> id, @Nullable EdgeWorkerState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EdgeWorker(name, id, state, options);
    }
}
