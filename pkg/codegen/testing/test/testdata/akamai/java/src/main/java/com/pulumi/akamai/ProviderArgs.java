// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.inputs.ProviderConfigArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProviderArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProviderArgs Empty = new ProviderArgs();

    @Import(name="cacheEnabled")
    private @Nullable Output<Boolean> cacheEnabled;

    public Optional<Output<Boolean>> cacheEnabled() {
        return Optional.ofNullable(this.cacheEnabled);
    }

    @Import(name="config")
    private @Nullable Output<ProviderConfigArgs> config;

    public Optional<Output<ProviderConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * The section of the edgerc file to use for configuration
     * 
     */
    @Import(name="configSection")
    private @Nullable Output<String> configSection;

    /**
     * @return The section of the edgerc file to use for configuration
     * 
     */
    public Optional<Output<String>> configSection() {
        return Optional.ofNullable(this.configSection);
    }

    @Import(name="edgerc")
    private @Nullable Output<String> edgerc;

    public Optional<Output<String>> edgerc() {
        return Optional.ofNullable(this.edgerc);
    }

    /**
     * The maximum number of API requests to be made per second (0 for no limit)
     * 
     */
    @Import(name="requestLimit")
    private @Nullable Output<Integer> requestLimit;

    /**
     * @return The maximum number of API requests to be made per second (0 for no limit)
     * 
     */
    public Optional<Output<Integer>> requestLimit() {
        return Optional.ofNullable(this.requestLimit);
    }

    private ProviderArgs() {}

    private ProviderArgs(ProviderArgs $) {
        this.cacheEnabled = $.cacheEnabled;
        this.config = $.config;
        this.configSection = $.configSection;
        this.edgerc = $.edgerc;
        this.requestLimit = $.requestLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProviderArgs $;

        public Builder() {
            $ = new ProviderArgs();
        }

        public Builder(ProviderArgs defaults) {
            $ = new ProviderArgs(Objects.requireNonNull(defaults));
        }

        public Builder cacheEnabled(@Nullable Output<Boolean> cacheEnabled) {
            $.cacheEnabled = cacheEnabled;
            return this;
        }

        public Builder cacheEnabled(Boolean cacheEnabled) {
            return cacheEnabled(Output.of(cacheEnabled));
        }

        public Builder config(@Nullable Output<ProviderConfigArgs> config) {
            $.config = config;
            return this;
        }

        public Builder config(ProviderConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param configSection The section of the edgerc file to use for configuration
         * 
         * @return builder
         * 
         */
        public Builder configSection(@Nullable Output<String> configSection) {
            $.configSection = configSection;
            return this;
        }

        /**
         * @param configSection The section of the edgerc file to use for configuration
         * 
         * @return builder
         * 
         */
        public Builder configSection(String configSection) {
            return configSection(Output.of(configSection));
        }

        public Builder edgerc(@Nullable Output<String> edgerc) {
            $.edgerc = edgerc;
            return this;
        }

        public Builder edgerc(String edgerc) {
            return edgerc(Output.of(edgerc));
        }

        /**
         * @param requestLimit The maximum number of API requests to be made per second (0 for no limit)
         * 
         * @return builder
         * 
         */
        public Builder requestLimit(@Nullable Output<Integer> requestLimit) {
            $.requestLimit = requestLimit;
            return this;
        }

        /**
         * @param requestLimit The maximum number of API requests to be made per second (0 for no limit)
         * 
         * @return builder
         * 
         */
        public Builder requestLimit(Integer requestLimit) {
            return requestLimit(Output.of(requestLimit));
        }

        public ProviderArgs build() {
            return $;
        }
    }

}
