// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.IamUserArgs;
import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.inputs.IamUserState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="akamai:index/iamUser:IamUser")
public class IamUser extends com.pulumi.resources.CustomResource {
    /**
     * The user&#39;s street address
     * 
     */
    @Export(name="address", refs={String.class}, tree="[0]")
    private Output<String> address;

    /**
     * @return The user&#39;s street address
     * 
     */
    public Output<String> address() {
        return this.address;
    }
    /**
     * A user&#39;s per-group role assignments, in JSON form
     * 
     */
    @Export(name="authGrantsJson", refs={String.class}, tree="[0]")
    private Output<String> authGrantsJson;

    /**
     * @return A user&#39;s per-group role assignments, in JSON form
     * 
     */
    public Output<String> authGrantsJson() {
        return this.authGrantsJson;
    }
    /**
     * The user&#39;s city
     * 
     */
    @Export(name="city", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> city;

    /**
     * @return The user&#39;s city
     * 
     */
    public Output<Optional<String>> city() {
        return Codegen.optional(this.city);
    }
    /**
     * To help characterize the user, the value can be any that are available from the view-contact-types operation
     * 
     */
    @Export(name="contactType", refs={String.class}, tree="[0]")
    private Output<String> contactType;

    /**
     * @return To help characterize the user, the value can be any that are available from the view-contact-types operation
     * 
     */
    public Output<String> contactType() {
        return this.contactType;
    }
    /**
     * As part of the user&#39;s location, the value can be any that are available from the view-supported-countries operation
     * 
     */
    @Export(name="country", refs={String.class}, tree="[0]")
    private Output<String> country;

    /**
     * @return As part of the user&#39;s location, the value can be any that are available from the view-supported-countries operation
     * 
     */
    public Output<String> country() {
        return this.country;
    }
    /**
     * The user&#39;s email address
     * 
     */
    @Export(name="email", refs={String.class}, tree="[0]")
    private Output<String> email;

    /**
     * @return The user&#39;s email address
     * 
     */
    public Output<String> email() {
        return this.email;
    }
    /**
     * Indicates whether email update is pending
     * 
     */
    @Export(name="emailUpdatePending", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> emailUpdatePending;

    /**
     * @return Indicates whether email update is pending
     * 
     */
    public Output<Boolean> emailUpdatePending() {
        return this.emailUpdatePending;
    }
    /**
     * Indicates whether two-factor authentication is allowed
     * 
     */
    @Export(name="enableTfa", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableTfa;

    /**
     * @return Indicates whether two-factor authentication is allowed
     * 
     */
    public Output<Boolean> enableTfa() {
        return this.enableTfa;
    }
    /**
     * The user&#39;s first name
     * 
     */
    @Export(name="firstName", refs={String.class}, tree="[0]")
    private Output<String> firstName;

    /**
     * @return The user&#39;s first name
     * 
     */
    public Output<String> firstName() {
        return this.firstName;
    }
    /**
     * The user&#39;s position at your company
     * 
     */
    @Export(name="jobTitle", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> jobTitle;

    /**
     * @return The user&#39;s position at your company
     * 
     */
    public Output<Optional<String>> jobTitle() {
        return Codegen.optional(this.jobTitle);
    }
    /**
     * ISO 8601 timestamp indicating when the user last logged in
     * 
     */
    @Export(name="lastLogin", refs={String.class}, tree="[0]")
    private Output<String> lastLogin;

    /**
     * @return ISO 8601 timestamp indicating when the user last logged in
     * 
     */
    public Output<String> lastLogin() {
        return this.lastLogin;
    }
    /**
     * The user&#39;s surname
     * 
     */
    @Export(name="lastName", refs={String.class}, tree="[0]")
    private Output<String> lastName;

    /**
     * @return The user&#39;s surname
     * 
     */
    public Output<String> lastName() {
        return this.lastName;
    }
    /**
     * Flag to block a user account
     * 
     */
    @Export(name="lock", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> lock;

    /**
     * @return Flag to block a user account
     * 
     */
    public Output<Optional<Boolean>> lock() {
        return Codegen.optional(this.lock);
    }
    /**
     * The user&#39;s mobile phone number
     * 
     */
    @Export(name="mobilePhone", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> mobilePhone;

    /**
     * @return The user&#39;s mobile phone number
     * 
     */
    public Output<Optional<String>> mobilePhone() {
        return Codegen.optional(this.mobilePhone);
    }
    /**
     * The date a user&#39;s password expires
     * 
     */
    @Export(name="passwordExpiredAfter", refs={String.class}, tree="[0]")
    private Output<String> passwordExpiredAfter;

    /**
     * @return The date a user&#39;s password expires
     * 
     */
    public Output<String> passwordExpiredAfter() {
        return this.passwordExpiredAfter;
    }
    /**
     * The user&#39;s main phone number
     * 
     */
    @Export(name="phone", refs={String.class}, tree="[0]")
    private Output<String> phone;

    /**
     * @return The user&#39;s main phone number
     * 
     */
    public Output<String> phone() {
        return this.phone;
    }
    /**
     * The value can be any that are available from the view-languages operation
     * 
     */
    @Export(name="preferredLanguage", refs={String.class}, tree="[0]")
    private Output<String> preferredLanguage;

    /**
     * @return The value can be any that are available from the view-languages operation
     * 
     */
    public Output<String> preferredLanguage() {
        return this.preferredLanguage;
    }
    /**
     * The user&#39;s secondary email address
     * 
     */
    @Export(name="secondaryEmail", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> secondaryEmail;

    /**
     * @return The user&#39;s secondary email address
     * 
     */
    public Output<Optional<String>> secondaryEmail() {
        return Codegen.optional(this.secondaryEmail);
    }
    /**
     * The number of seconds it takes for the user&#39;s Control Center session to time out if there hasn&#39;t been any activity
     * 
     */
    @Export(name="sessionTimeout", refs={Integer.class}, tree="[0]")
    private Output<Integer> sessionTimeout;

    /**
     * @return The number of seconds it takes for the user&#39;s Control Center session to time out if there hasn&#39;t been any activity
     * 
     */
    public Output<Integer> sessionTimeout() {
        return this.sessionTimeout;
    }
    /**
     * The user&#39;s state
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> state;

    /**
     * @return The user&#39;s state
     * 
     */
    public Output<Optional<String>> state() {
        return Codegen.optional(this.state);
    }
    /**
     * Indicates whether two-factor authentication is configured
     * 
     */
    @Export(name="tfaConfigured", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> tfaConfigured;

    /**
     * @return Indicates whether two-factor authentication is configured
     * 
     */
    public Output<Boolean> tfaConfigured() {
        return this.tfaConfigured;
    }
    /**
     * The user&#39;s time zone. The value can be any that are available from the view-time-zones operation
     * 
     */
    @Export(name="timeZone", refs={String.class}, tree="[0]")
    private Output<String> timeZone;

    /**
     * @return The user&#39;s time zone. The value can be any that are available from the view-time-zones operation
     * 
     */
    public Output<String> timeZone() {
        return this.timeZone;
    }
    /**
     * A user&#39;s `loginId`. Typically, a user&#39;s email address
     * 
     */
    @Export(name="userName", refs={String.class}, tree="[0]")
    private Output<String> userName;

    /**
     * @return A user&#39;s `loginId`. Typically, a user&#39;s email address
     * 
     */
    public Output<String> userName() {
        return this.userName;
    }
    /**
     * The user&#39;s five-digit ZIP code
     * 
     */
    @Export(name="zipCode", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> zipCode;

    /**
     * @return The user&#39;s five-digit ZIP code
     * 
     */
    public Output<Optional<String>> zipCode() {
        return Codegen.optional(this.zipCode);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public IamUser(java.lang.String name) {
        this(name, IamUserArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public IamUser(java.lang.String name, IamUserArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public IamUser(java.lang.String name, IamUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/iamUser:IamUser", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private IamUser(java.lang.String name, Output<java.lang.String> id, @Nullable IamUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/iamUser:IamUser", name, state, makeResourceOptions(options, id), false);
    }

    private static IamUserArgs makeArgs(IamUserArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? IamUserArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static IamUser get(java.lang.String name, Output<java.lang.String> id, @Nullable IamUserState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new IamUser(name, id, state, options);
    }
}
