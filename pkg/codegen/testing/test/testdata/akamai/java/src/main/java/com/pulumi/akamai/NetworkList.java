// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.NetworkListArgs;
import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.inputs.NetworkListState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="akamai:index/networkList:NetworkList")
public class NetworkList extends com.pulumi.resources.CustomResource {
    /**
     * contract ID
     * 
     */
    @Export(name="contractId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> contractId;

    /**
     * @return contract ID
     * 
     */
    public Output<Optional<String>> contractId() {
        return Codegen.optional(this.contractId);
    }
    /**
     * A description of the network list
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output<String> description;

    /**
     * @return A description of the network list
     * 
     */
    public Output<String> description() {
        return this.description;
    }
    /**
     * group ID
     * 
     */
    @Export(name="groupId", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> groupId;

    /**
     * @return group ID
     * 
     */
    public Output<Optional<Integer>> groupId() {
        return Codegen.optional(this.groupId);
    }
    /**
     * A list of IP addresses or locations to be included in the list, added to an existing list, or removed from an existing
     * list
     * 
     */
    @Export(name="lists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> lists;

    /**
     * @return A list of IP addresses or locations to be included in the list, added to an existing list, or removed from an existing
     * list
     * 
     */
    public Output<Optional<List<String>>> lists() {
        return Codegen.optional(this.lists);
    }
    /**
     * A string specifying the interpretation of the `list` parameter. Must be &#39;APPEND&#39;, &#39;REPLACE&#39;, or &#39;REMOVE&#39;
     * 
     */
    @Export(name="mode", refs={String.class}, tree="[0]")
    private Output<String> mode;

    /**
     * @return A string specifying the interpretation of the `list` parameter. Must be &#39;APPEND&#39;, &#39;REPLACE&#39;, or &#39;REMOVE&#39;
     * 
     */
    public Output<String> mode() {
        return this.mode;
    }
    /**
     * The name to be assigned to the network list
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name to be assigned to the network list
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * network list ID
     * 
     */
    @Export(name="networkListId", refs={String.class}, tree="[0]")
    private Output<String> networkListId;

    /**
     * @return network list ID
     * 
     */
    public Output<String> networkListId() {
        return this.networkListId;
    }
    /**
     * sync point
     * 
     */
    @Export(name="syncPoint", refs={Integer.class}, tree="[0]")
    private Output<Integer> syncPoint;

    /**
     * @return sync point
     * 
     */
    public Output<Integer> syncPoint() {
        return this.syncPoint;
    }
    /**
     * The type of the network list; must be either &#39;IP&#39; or &#39;GEO&#39;
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the network list; must be either &#39;IP&#39; or &#39;GEO&#39;
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * unique ID
     * 
     */
    @Export(name="uniqueid", refs={String.class}, tree="[0]")
    private Output<String> uniqueid;

    /**
     * @return unique ID
     * 
     */
    public Output<String> uniqueid() {
        return this.uniqueid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkList(java.lang.String name) {
        this(name, NetworkListArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkList(String name, NetworkListArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkList(java.lang.String name, NetworkListArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/networkList:NetworkList", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private NetworkList(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkListState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/networkList:NetworkList", name, state, makeResourceOptions(options, id));
    }

    private static NetworkListArgs makeArgs(NetworkListArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? NetworkListArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkList get(java.lang.String name, Output<java.lang.String> id, @Nullable NetworkListState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkList(name, id, state, options);
    }
}
