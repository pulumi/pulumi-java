// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.akamai;

import com.pulumi.akamai.CpsUploadCertificateArgs;
import com.pulumi.akamai.Utilities;
import com.pulumi.akamai.inputs.CpsUploadCertificateState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="akamai:index/cpsUploadCertificate:CpsUploadCertificate")
public class CpsUploadCertificate extends com.pulumi.resources.CustomResource {
    /**
     * Whether to acknowledge change management
     * 
     */
    @Export(name="acknowledgeChangeManagement", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> acknowledgeChangeManagement;

    /**
     * @return Whether to acknowledge change management
     * 
     */
    public Output<Optional<Boolean>> acknowledgeChangeManagement() {
        return Codegen.optional(this.acknowledgeChangeManagement);
    }
    /**
     * Whether to acknowledge post-verification warnings
     * 
     */
    @Export(name="acknowledgePostVerificationWarnings", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> acknowledgePostVerificationWarnings;

    /**
     * @return Whether to acknowledge post-verification warnings
     * 
     */
    public Output<Optional<Boolean>> acknowledgePostVerificationWarnings() {
        return Codegen.optional(this.acknowledgePostVerificationWarnings);
    }
    /**
     * List of post-verification warnings to be automatically acknowledged
     * 
     */
    @Export(name="autoApproveWarnings", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> autoApproveWarnings;

    /**
     * @return List of post-verification warnings to be automatically acknowledged
     * 
     */
    public Output<Optional<List<String>>> autoApproveWarnings() {
        return Codegen.optional(this.autoApproveWarnings);
    }
    /**
     * ECDSA certificate in pem format to be uploaded
     * 
     */
    @Export(name="certificateEcdsaPem", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> certificateEcdsaPem;

    /**
     * @return ECDSA certificate in pem format to be uploaded
     * 
     */
    public Output<Optional<String>> certificateEcdsaPem() {
        return Codegen.optional(this.certificateEcdsaPem);
    }
    /**
     * RSA certificate in pem format to be uploaded
     * 
     */
    @Export(name="certificateRsaPem", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> certificateRsaPem;

    /**
     * @return RSA certificate in pem format to be uploaded
     * 
     */
    public Output<Optional<String>> certificateRsaPem() {
        return Codegen.optional(this.certificateRsaPem);
    }
    /**
     * The unique identifier of the enrollment
     * 
     */
    @Export(name="enrollmentId", refs={Integer.class}, tree="[0]")
    private Output<Integer> enrollmentId;

    /**
     * @return The unique identifier of the enrollment
     * 
     */
    public Output<Integer> enrollmentId() {
        return this.enrollmentId;
    }
    /**
     * Trust chain in pem format for provided ECDSA certificate
     * 
     */
    @Export(name="trustChainEcdsaPem", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> trustChainEcdsaPem;

    /**
     * @return Trust chain in pem format for provided ECDSA certificate
     * 
     */
    public Output<Optional<String>> trustChainEcdsaPem() {
        return Codegen.optional(this.trustChainEcdsaPem);
    }
    /**
     * Trust chain in pem format for provided RSA certificate
     * 
     */
    @Export(name="trustChainRsaPem", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> trustChainRsaPem;

    /**
     * @return Trust chain in pem format for provided RSA certificate
     * 
     */
    public Output<Optional<String>> trustChainRsaPem() {
        return Codegen.optional(this.trustChainRsaPem);
    }
    /**
     * Used to distinguish whether there are unacknowledged warnings for a certificate
     * 
     */
    @Export(name="unacknowledgedWarnings", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> unacknowledgedWarnings;

    /**
     * @return Used to distinguish whether there are unacknowledged warnings for a certificate
     * 
     */
    public Output<Boolean> unacknowledgedWarnings() {
        return this.unacknowledgedWarnings;
    }
    /**
     * Whether to wait for certificate to be deployed
     * 
     */
    @Export(name="waitForDeployment", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> waitForDeployment;

    /**
     * @return Whether to wait for certificate to be deployed
     * 
     */
    public Output<Optional<Boolean>> waitForDeployment() {
        return Codegen.optional(this.waitForDeployment);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public CpsUploadCertificate(java.lang.String name) {
        this(name, CpsUploadCertificateArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public CpsUploadCertificate(java.lang.String name, CpsUploadCertificateArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public CpsUploadCertificate(java.lang.String name, CpsUploadCertificateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/cpsUploadCertificate:CpsUploadCertificate", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private CpsUploadCertificate(java.lang.String name, Output<java.lang.String> id, @Nullable CpsUploadCertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("akamai:index/cpsUploadCertificate:CpsUploadCertificate", name, state, makeResourceOptions(options, id), false);
    }

    private static CpsUploadCertificateArgs makeArgs(CpsUploadCertificateArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? CpsUploadCertificateArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static CpsUploadCertificate get(java.lang.String name, Output<java.lang.String> id, @Nullable CpsUploadCertificateState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new CpsUploadCertificate(name, id, state, options);
    }
}
