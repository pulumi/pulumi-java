// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.mypkg.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class FuncWithSecretsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final FuncWithSecretsPlainArgs Empty = new FuncWithSecretsPlainArgs();

    @Import(name="cryptoKey", required=true)
    private String cryptoKey;

    public String cryptoKey() {
        return this.cryptoKey;
    }

    @Import(name="plaintext", required=true)
    private String plaintext;

    public String plaintext() {
        return this.plaintext;
    }

    private FuncWithSecretsPlainArgs() {}

    private FuncWithSecretsPlainArgs(FuncWithSecretsPlainArgs $) {
        this.cryptoKey = $.cryptoKey;
        this.plaintext = $.plaintext;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FuncWithSecretsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FuncWithSecretsPlainArgs $;

        public Builder() {
            $ = new FuncWithSecretsPlainArgs();
        }

        public Builder(FuncWithSecretsPlainArgs defaults) {
            $ = new FuncWithSecretsPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder cryptoKey(String cryptoKey) {
            $.cryptoKey = cryptoKey;
            return this;
        }

        public Builder plaintext(String plaintext) {
            $.plaintext = plaintext;
            return this;
        }

        public FuncWithSecretsPlainArgs build() {
            $.cryptoKey = Objects.requireNonNull($.cryptoKey, "expected parameter 'cryptoKey' to be non-null");
            $.plaintext = Objects.requireNonNull($.plaintext, "expected parameter 'plaintext' to be non-null");
            return $;
        }
    }

}
