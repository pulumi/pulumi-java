// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.plant.tree.v1;

import io.pulumi.core.Input;
import io.pulumi.core.Output;
import io.pulumi.core.internal.annotations.OutputExport;
import io.pulumi.core.internal.annotations.ResourceType;
import io.pulumi.plant.Utilities;
import io.pulumi.plant.outputs.Container;
import io.pulumi.plant.tree.v1.RubberTreeArgs;
import io.pulumi.plant.tree.v1.enums.Diameter;
import io.pulumi.plant.tree.v1.enums.RubberTreeVariety;
import io.pulumi.plant.tree.v1.enums.TreeSize;
import io.pulumi.plant.tree.v1.inputs.RubberTreeState;
import java.lang.String;
import javax.annotation.Nullable;

@ResourceType(type="plant:tree/v1:RubberTree")
public class RubberTree extends io.pulumi.resources.CustomResource {
    @OutputExport(name="container", type=Container.class, parameters={})
    private Output</* @Nullable */ Container> container;

    public Output</* @Nullable */ Container> getContainer() {
        return this.container;
    }
    @OutputExport(name="diameter", type=Diameter.class, parameters={})
    private Output<Diameter> diameter;

    public Output<Diameter> getDiameter() {
        return this.diameter;
    }
    @OutputExport(name="farm", type=String.class, parameters={})
    private Output</* @Nullable */ String> farm;

    public Output</* @Nullable */ String> getFarm() {
        return this.farm;
    }
    @OutputExport(name="size", type=TreeSize.class, parameters={})
    private Output</* @Nullable */ TreeSize> size;

    public Output</* @Nullable */ TreeSize> getSize() {
        return this.size;
    }
    @OutputExport(name="type", type=RubberTreeVariety.class, parameters={})
    private Output<RubberTreeVariety> type;

    public Output<RubberTreeVariety> getType() {
        return this.type;
    }

    public RubberTree(String name, RubberTreeArgs args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("plant:tree/v1:RubberTree", name, args == null ? RubberTreeArgs.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private RubberTree(String name, Input<String> id, @Nullable RubberTreeState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("plant:tree/v1:RubberTree", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static RubberTree get(String name, Input<String> id, @Nullable RubberTreeState state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new RubberTree(name, id, state, options);
    }
}
