// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.plant.tree_v1;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.plant.tree_v1.enums.RubberTreeVariety;
import io.pulumi.plant.tree_v1.enums.TreeSize;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


public final class NurseryArgs extends io.pulumi.resources.ResourceArgs {

    public static final NurseryArgs Empty = new NurseryArgs();

    /**
     * The sizes of trees available
     * 
     */
    @Import(name="sizes")
      private final @Nullable Output<Map<String,TreeSize>> sizes;

    public Output<Map<String,TreeSize>> getSizes() {
        return this.sizes == null ? Output.empty() : this.sizes;
    }

    /**
     * The varieties available
     * 
     */
    @Import(name="varieties", required=true)
      private final Output<List<RubberTreeVariety>> varieties;

    public Output<List<RubberTreeVariety>> getVarieties() {
        return this.varieties;
    }

    public NurseryArgs(
        @Nullable Output<Map<String,TreeSize>> sizes,
        Output<List<RubberTreeVariety>> varieties) {
        this.sizes = sizes;
        this.varieties = Objects.requireNonNull(varieties, "expected parameter 'varieties' to be non-null");
    }

    private NurseryArgs() {
        this.sizes = Output.empty();
        this.varieties = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NurseryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Map<String,TreeSize>> sizes;
        private Output<List<RubberTreeVariety>> varieties;

        public Builder() {
    	      // Empty
        }

        public Builder(NurseryArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sizes = defaults.sizes;
    	      this.varieties = defaults.varieties;
        }

        public Builder sizes(@Nullable Output<Map<String,TreeSize>> sizes) {
            this.sizes = sizes;
            return this;
        }
        public Builder sizes(@Nullable Map<String,TreeSize> sizes) {
            this.sizes = Output.ofNullable(sizes);
            return this;
        }
        public Builder varieties(Output<List<RubberTreeVariety>> varieties) {
            this.varieties = Objects.requireNonNull(varieties);
            return this;
        }
        public Builder varieties(List<RubberTreeVariety> varieties) {
            this.varieties = Output.of(Objects.requireNonNull(varieties));
            return this;
        }
        public Builder varieties(RubberTreeVariety... varieties) {
            return varieties(List.of(varieties));
        }        public NurseryArgs build() {
            return new NurseryArgs(sizes, varieties);
        }
    }
}
