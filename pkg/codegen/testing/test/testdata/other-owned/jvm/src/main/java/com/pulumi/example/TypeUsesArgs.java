// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.example;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.example.inputs.ObjectArgs;
import com.pulumi.example.inputs.ObjectWithNodeOptionalInputsArgs;
import com.pulumi.example.inputs.SomeOtherObjectArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class TypeUsesArgs extends com.pulumi.resources.ResourceArgs {

    public static final TypeUsesArgs Empty = new TypeUsesArgs();

    @Import(name="bar")
    private @Nullable Output<SomeOtherObjectArgs> bar;

    public Optional<Output<SomeOtherObjectArgs>> bar() {
        return Optional.ofNullable(this.bar);
    }

    @Import(name="baz")
    private @Nullable Output<ObjectWithNodeOptionalInputsArgs> baz;

    public Optional<Output<ObjectWithNodeOptionalInputsArgs>> baz() {
        return Optional.ofNullable(this.baz);
    }

    @Import(name="foo")
    private @Nullable Output<ObjectArgs> foo;

    public Optional<Output<ObjectArgs>> foo() {
        return Optional.ofNullable(this.foo);
    }

    private TypeUsesArgs() {}

    private TypeUsesArgs(TypeUsesArgs $) {
        this.bar = $.bar;
        this.baz = $.baz;
        this.foo = $.foo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TypeUsesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TypeUsesArgs $;

        public Builder() {
            $ = new TypeUsesArgs();
        }

        public Builder(TypeUsesArgs defaults) {
            $ = new TypeUsesArgs(Objects.requireNonNull(defaults));
        }

        public Builder bar(@Nullable Output<SomeOtherObjectArgs> bar) {
            $.bar = bar;
            return this;
        }

        public Builder bar(SomeOtherObjectArgs bar) {
            return bar(Output.of(bar));
        }

        public Builder baz(@Nullable Output<ObjectWithNodeOptionalInputsArgs> baz) {
            $.baz = baz;
            return this;
        }

        public Builder baz(ObjectWithNodeOptionalInputsArgs baz) {
            return baz(Output.of(baz));
        }

        public Builder foo(@Nullable Output<ObjectArgs> foo) {
            $.foo = foo;
            return this;
        }

        public Builder foo(ObjectArgs foo) {
            return foo(Output.of(foo));
        }

        public TypeUsesArgs build() {
            return $;
        }
    }

}
