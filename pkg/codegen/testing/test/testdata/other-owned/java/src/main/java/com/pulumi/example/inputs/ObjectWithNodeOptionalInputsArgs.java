// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.example.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ObjectWithNodeOptionalInputsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ObjectWithNodeOptionalInputsArgs Empty = new ObjectWithNodeOptionalInputsArgs();

    @Import(name="bar")
    private @Nullable Output<Integer> bar;

    public Optional<Output<Integer>> bar() {
        return Optional.ofNullable(this.bar);
    }

    @Import(name="foo", required=true)
    private Output<String> foo;

    public Output<String> foo() {
        return this.foo;
    }

    private ObjectWithNodeOptionalInputsArgs() {}

    private ObjectWithNodeOptionalInputsArgs(ObjectWithNodeOptionalInputsArgs $) {
        this.bar = $.bar;
        this.foo = $.foo;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ObjectWithNodeOptionalInputsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ObjectWithNodeOptionalInputsArgs $;

        public Builder() {
            $ = new ObjectWithNodeOptionalInputsArgs();
        }

        public Builder(ObjectWithNodeOptionalInputsArgs defaults) {
            $ = new ObjectWithNodeOptionalInputsArgs(Objects.requireNonNull(defaults));
        }

        public Builder bar(@Nullable Output<Integer> bar) {
            $.bar = bar;
            return this;
        }

        public Builder bar(Integer bar) {
            return bar(Output.of(bar));
        }

        public Builder foo(Output<String> foo) {
            $.foo = foo;
            return this;
        }

        public Builder foo(String foo) {
            return foo(Output.of(foo));
        }

        public ObjectWithNodeOptionalInputsArgs build() {
            $.foo = Objects.requireNonNull($.foo, "expected parameter 'foo' to be non-null");
            return $;
        }
    }

}
