// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azurenative.documentdb.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class CompositePathResponse {
    /**
     * @return Sort order for composite paths.
     * 
     */
    private @Nullable String order;
    /**
     * @return The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
     * 
     */
    private @Nullable String path;

    private CompositePathResponse() {}
    /**
     * @return Sort order for composite paths.
     * 
     */
    public Optional<String> order() {
        return Optional.ofNullable(this.order);
    }
    /**
     * @return The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)
     * 
     */
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(CompositePathResponse defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String order;
        private @Nullable String path;
        public Builder() {}
        public Builder(CompositePathResponse defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.order = defaults.order;
    	      this.path = defaults.path;
        }

        @CustomType.Setter
        public Builder order(@Nullable String order) {
            this.order = order;
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }
        public CompositePathResponse build() {
            final var o = new CompositePathResponse();
            o.order = order;
            o.path = path;
            return o;
        }
    }
}
