// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.example.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ObjectWithNodeOptionalInputsArgs extends io.pulumi.resources.ResourceArgs {

    public static final ObjectWithNodeOptionalInputsArgs Empty = new ObjectWithNodeOptionalInputsArgs();

    @Import(name="bar")
      private final @Nullable Output<Integer> bar;

    public Output<Integer> getBar() {
        return this.bar == null ? Output.empty() : this.bar;
    }

    @Import(name="foo", required=true)
      private final Output<String> foo;

    public Output<String> getFoo() {
        return this.foo;
    }

    public ObjectWithNodeOptionalInputsArgs(
        @Nullable Output<Integer> bar,
        Output<String> foo) {
        this.bar = bar;
        this.foo = Objects.requireNonNull(foo, "expected parameter 'foo' to be non-null");
    }

    private ObjectWithNodeOptionalInputsArgs() {
        this.bar = Output.empty();
        this.foo = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObjectWithNodeOptionalInputsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<Integer> bar;
        private Output<String> foo;

        public Builder() {
    	      // Empty
        }

        public Builder(ObjectWithNodeOptionalInputsArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bar = defaults.bar;
    	      this.foo = defaults.foo;
        }

        public Builder bar(@Nullable Output<Integer> bar) {
            this.bar = bar;
            return this;
        }

        public Builder bar(@Nullable Integer bar) {
            this.bar = Output.ofNullable(bar);
            return this;
        }

        public Builder foo(Output<String> foo) {
            this.foo = Objects.requireNonNull(foo);
            return this;
        }

        public Builder foo(String foo) {
            this.foo = Output.of(Objects.requireNonNull(foo));
            return this;
        }
        public ObjectWithNodeOptionalInputsArgs build() {
            return new ObjectWithNodeOptionalInputsArgs(bar, foo);
        }
    }
}
