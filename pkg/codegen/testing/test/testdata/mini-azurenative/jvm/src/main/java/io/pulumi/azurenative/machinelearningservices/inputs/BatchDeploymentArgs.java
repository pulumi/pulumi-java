// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.machinelearningservices.inputs;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.Import;
import io.pulumi.core.internal.Codegen;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.annotation.Nullable;


/**
 * Batch inference settings per deployment.
 * 
 */
public final class BatchDeploymentArgs extends io.pulumi.resources.ResourceArgs {

    public static final BatchDeploymentArgs Empty = new BatchDeploymentArgs();

    /**
     * Description of the endpoint deployment.
     * 
     */
    @Import(name="description")
      private final @Nullable Output<String> description;

    public Output<String> description() {
        return this.description == null ? Codegen.empty() : this.description;
    }

    /**
     * ARM resource ID of the environment specification for the endpoint deployment.
     * 
     */
    @Import(name="environmentId")
      private final @Nullable Output<String> environmentId;

    public Output<String> environmentId() {
        return this.environmentId == null ? Codegen.empty() : this.environmentId;
    }

    /**
     * Environment variables configuration for the deployment.
     * 
     */
    @Import(name="environmentVariables")
      private final @Nullable Output<Map<String,String>> environmentVariables;

    public Output<Map<String,String>> environmentVariables() {
        return this.environmentVariables == null ? Codegen.empty() : this.environmentVariables;
    }

    /**
     * Error threshold, if the error count for the entire input goes above this value,
     * the batch inference will be aborted. Range is [-1, int.MaxValue].
     * For FileDataset, this value is the count of file failures.
     * For TabularDataset, this value is the count of record failures.
     * If set to -1 (the lower bound), all failures during batch inference will be ignored.
     * 
     */
    @Import(name="errorThreshold")
      private final @Nullable Output<Integer> errorThreshold;

    public Output<Integer> errorThreshold() {
        return this.errorThreshold == null ? Codegen.empty() : this.errorThreshold;
    }

    /**
     * Size of the mini-batch passed to each batch invocation.
     * For FileDataset, this is the number of files per mini-batch.
     * For TabularDataset, this is the size of the records in bytes, per mini-batch.
     * 
     */
    @Import(name="miniBatchSize")
      private final @Nullable Output<Double> miniBatchSize;

    public Output<Double> miniBatchSize() {
        return this.miniBatchSize == null ? Codegen.empty() : this.miniBatchSize;
    }

    /**
     * Partition keys list used for Named partitioning.
     * 
     */
    @Import(name="partitionKeys")
      private final @Nullable Output<List<String>> partitionKeys;

    public Output<List<String>> partitionKeys() {
        return this.partitionKeys == null ? Codegen.empty() : this.partitionKeys;
    }

    /**
     * Property dictionary. Properties can be added, but not removed or altered.
     * 
     */
    @Import(name="properties")
      private final @Nullable Output<Map<String,String>> properties;

    public Output<Map<String,String>> properties() {
        return this.properties == null ? Codegen.empty() : this.properties;
    }

    public BatchDeploymentArgs(
        @Nullable Output<String> description,
        @Nullable Output<String> environmentId,
        @Nullable Output<Map<String,String>> environmentVariables,
        @Nullable Output<Integer> errorThreshold,
        @Nullable Output<Double> miniBatchSize,
        @Nullable Output<List<String>> partitionKeys,
        @Nullable Output<Map<String,String>> properties) {
        this.description = description;
        this.environmentId = environmentId;
        this.environmentVariables = environmentVariables;
        this.errorThreshold = errorThreshold;
        this.miniBatchSize = miniBatchSize;
        this.partitionKeys = partitionKeys;
        this.properties = properties;
    }

    private BatchDeploymentArgs() {
        this.description = Codegen.empty();
        this.environmentId = Codegen.empty();
        this.environmentVariables = Codegen.empty();
        this.errorThreshold = Codegen.empty();
        this.miniBatchSize = Codegen.empty();
        this.partitionKeys = Codegen.empty();
        this.properties = Codegen.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BatchDeploymentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<String> description;
        private @Nullable Output<String> environmentId;
        private @Nullable Output<Map<String,String>> environmentVariables;
        private @Nullable Output<Integer> errorThreshold;
        private @Nullable Output<Double> miniBatchSize;
        private @Nullable Output<List<String>> partitionKeys;
        private @Nullable Output<Map<String,String>> properties;

        public Builder() {
    	      // Empty
        }

        public Builder(BatchDeploymentArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.description = defaults.description;
    	      this.environmentId = defaults.environmentId;
    	      this.environmentVariables = defaults.environmentVariables;
    	      this.errorThreshold = defaults.errorThreshold;
    	      this.miniBatchSize = defaults.miniBatchSize;
    	      this.partitionKeys = defaults.partitionKeys;
    	      this.properties = defaults.properties;
        }

        public Builder description(@Nullable Output<String> description) {
            this.description = description;
            return this;
        }
        public Builder description(@Nullable String description) {
            this.description = Codegen.ofNullable(description);
            return this;
        }
        public Builder environmentId(@Nullable Output<String> environmentId) {
            this.environmentId = environmentId;
            return this;
        }
        public Builder environmentId(@Nullable String environmentId) {
            this.environmentId = Codegen.ofNullable(environmentId);
            return this;
        }
        public Builder environmentVariables(@Nullable Output<Map<String,String>> environmentVariables) {
            this.environmentVariables = environmentVariables;
            return this;
        }
        public Builder environmentVariables(@Nullable Map<String,String> environmentVariables) {
            this.environmentVariables = Codegen.ofNullable(environmentVariables);
            return this;
        }
        public Builder errorThreshold(@Nullable Output<Integer> errorThreshold) {
            this.errorThreshold = errorThreshold;
            return this;
        }
        public Builder errorThreshold(@Nullable Integer errorThreshold) {
            this.errorThreshold = Codegen.ofNullable(errorThreshold);
            return this;
        }
        public Builder miniBatchSize(@Nullable Output<Double> miniBatchSize) {
            this.miniBatchSize = miniBatchSize;
            return this;
        }
        public Builder miniBatchSize(@Nullable Double miniBatchSize) {
            this.miniBatchSize = Codegen.ofNullable(miniBatchSize);
            return this;
        }
        public Builder partitionKeys(@Nullable Output<List<String>> partitionKeys) {
            this.partitionKeys = partitionKeys;
            return this;
        }
        public Builder partitionKeys(@Nullable List<String> partitionKeys) {
            this.partitionKeys = Codegen.ofNullable(partitionKeys);
            return this;
        }
        public Builder partitionKeys(String... partitionKeys) {
            return partitionKeys(List.of(partitionKeys));
        }
        public Builder properties(@Nullable Output<Map<String,String>> properties) {
            this.properties = properties;
            return this;
        }
        public Builder properties(@Nullable Map<String,String> properties) {
            this.properties = Codegen.ofNullable(properties);
            return this;
        }        public BatchDeploymentArgs build() {
            return new BatchDeploymentArgs(description, environmentId, environmentVariables, errorThreshold, miniBatchSize, partitionKeys, properties);
        }
    }
}
