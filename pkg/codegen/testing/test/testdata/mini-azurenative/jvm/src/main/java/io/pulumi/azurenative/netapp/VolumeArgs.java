// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.azurenative.netapp;

import io.pulumi.core.Input;
import io.pulumi.core.internal.annotations.InputImport;
import java.lang.Double;
import java.util.Objects;


public final class VolumeArgs extends io.pulumi.resources.ResourceArgs {

    public static final VolumeArgs Empty = new VolumeArgs();

    @InputImport(name="usageThreshold", required=true)
    private final Input<Double> usageThreshold;

    public Input<Double> getUsageThreshold() {
        return this.usageThreshold;
    }

    public VolumeArgs(Input<Double> usageThreshold) {
        this.usageThreshold = usageThreshold == null ? Input.ofNullable(1.073741824E+11) : Objects.requireNonNull(usageThreshold, "expected parameter 'usageThreshold' to be non-null");
    }

    private VolumeArgs() {
        this.usageThreshold = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private Input<Double> usageThreshold;

        public Builder() {
    	      // Empty
        }

        public Builder(VolumeArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.usageThreshold = defaults.usageThreshold;
        }

        public Builder setUsageThreshold(Input<Double> usageThreshold) {
            this.usageThreshold = Objects.requireNonNull(usageThreshold);
            return this;
        }

        public Builder setUsageThreshold(Double usageThreshold) {
            this.usageThreshold = Input.of(Objects.requireNonNull(usageThreshold));
            return this;
        }

        public VolumeArgs build() {
            return new VolumeArgs(usageThreshold);
        }
    }
}
