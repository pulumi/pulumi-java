// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.kubernetes;

import io.pulumi.core.Input;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.kubernetes.Utilities;
import io.pulumi.kubernetes.inputs.KubeClientSettingsArgs;
import java.lang.String;
import java.util.Objects;
import javax.annotation.Nullable;


public final class ProviderArgs extends io.pulumi.resources.ResourceArgs {

    public static final ProviderArgs Empty = new ProviderArgs();

    /**
     * If present, the name of the kubeconfig cluster to use.
     * 
     */
    @InputImport(name="cluster")
      private final @Nullable Input<String> cluster;

    public Input<String> getCluster() {
        return this.cluster == null ? Input.empty() : this.cluster;
    }

    /**
     * If present, the name of the kubeconfig context to use.
     * 
     */
    @InputImport(name="context")
      private final @Nullable Input<String> context;

    public Input<String> getContext() {
        return this.context == null ? Input.empty() : this.context;
    }

    /**
     * Options for tuning the Kubernetes client used by a Provider.
     * 
     */
    @InputImport(name="kubeClientSettings", json=true)
      private final @Nullable Input<KubeClientSettingsArgs> kubeClientSettings;

    public Input<KubeClientSettingsArgs> getKubeClientSettings() {
        return this.kubeClientSettings == null ? Input.empty() : this.kubeClientSettings;
    }

    /**
     * The contents of a kubeconfig file or the path to a kubeconfig file.
     * 
     */
    @InputImport(name="kubeconfig")
      private final @Nullable Input<String> kubeconfig;

    public Input<String> getKubeconfig() {
        return this.kubeconfig == null ? Input.empty() : this.kubeconfig;
    }

    public ProviderArgs(
        @Nullable Input<String> cluster,
        @Nullable Input<String> context,
        @Nullable Input<KubeClientSettingsArgs> kubeClientSettings,
        @Nullable Input<String> kubeconfig) {
        this.cluster = cluster;
        this.context = context;
        this.kubeClientSettings = kubeClientSettings;
        this.kubeconfig = kubeconfig == null ? Input.ofNullable(Utilities.getEnv("KUBECONFIG").orElse(null)) : kubeconfig;
    }

    private ProviderArgs() {
        this.cluster = Input.empty();
        this.context = Input.empty();
        this.kubeClientSettings = Input.empty();
        this.kubeconfig = Input.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProviderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Input<String> cluster;
        private @Nullable Input<String> context;
        private @Nullable Input<KubeClientSettingsArgs> kubeClientSettings;
        private @Nullable Input<String> kubeconfig;

        public Builder() {
    	      // Empty
        }

        public Builder(ProviderArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cluster = defaults.cluster;
    	      this.context = defaults.context;
    	      this.kubeClientSettings = defaults.kubeClientSettings;
    	      this.kubeconfig = defaults.kubeconfig;
        }

        public Builder cluster(@Nullable Input<String> cluster) {
            this.cluster = cluster;
            return this;
        }

        public Builder cluster(@Nullable String cluster) {
            this.cluster = Input.ofNullable(cluster);
            return this;
        }

        public Builder context(@Nullable Input<String> context) {
            this.context = context;
            return this;
        }

        public Builder context(@Nullable String context) {
            this.context = Input.ofNullable(context);
            return this;
        }

        public Builder kubeClientSettings(@Nullable Input<KubeClientSettingsArgs> kubeClientSettings) {
            this.kubeClientSettings = kubeClientSettings;
            return this;
        }

        public Builder kubeClientSettings(@Nullable KubeClientSettingsArgs kubeClientSettings) {
            this.kubeClientSettings = Input.ofNullable(kubeClientSettings);
            return this;
        }

        public Builder kubeconfig(@Nullable Input<String> kubeconfig) {
            this.kubeconfig = kubeconfig;
            return this;
        }

        public Builder kubeconfig(@Nullable String kubeconfig) {
            this.kubeconfig = Input.ofNullable(kubeconfig);
            return this;
        }
        public ProviderArgs build() {
            return new ProviderArgs(cluster, context, kubeClientSettings, kubeconfig);
        }
    }
}
