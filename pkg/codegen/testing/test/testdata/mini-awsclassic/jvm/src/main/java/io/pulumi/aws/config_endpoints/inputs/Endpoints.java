// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.aws.config_endpoints.inputs;

import io.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class Endpoints extends io.pulumi.resources.InvokeArgs {

    public static final Endpoints Empty = new Endpoints();

    @Import(name="accessanalyzer")
      private @Nullable String accessanalyzer;

    public Optional<String> accessanalyzer() {
        return this.accessanalyzer == null ? Optional.empty() : Optional.ofNullable(this.accessanalyzer);
    }

    @Import(name="account")
      private @Nullable String account;

    public Optional<String> account() {
        return this.account == null ? Optional.empty() : Optional.ofNullable(this.account);
    }

    @Import(name="acm")
      private @Nullable String acm;

    public Optional<String> acm() {
        return this.acm == null ? Optional.empty() : Optional.ofNullable(this.acm);
    }

    @Import(name="acmpca")
      private @Nullable String acmpca;

    public Optional<String> acmpca() {
        return this.acmpca == null ? Optional.empty() : Optional.ofNullable(this.acmpca);
    }

    @Import(name="alexaforbusiness")
      private @Nullable String alexaforbusiness;

    public Optional<String> alexaforbusiness() {
        return this.alexaforbusiness == null ? Optional.empty() : Optional.ofNullable(this.alexaforbusiness);
    }

    @Import(name="amp")
      private @Nullable String amp;

    public Optional<String> amp() {
        return this.amp == null ? Optional.empty() : Optional.ofNullable(this.amp);
    }

    @Import(name="amplify")
      private @Nullable String amplify;

    public Optional<String> amplify() {
        return this.amplify == null ? Optional.empty() : Optional.ofNullable(this.amplify);
    }

    @Import(name="amplifybackend")
      private @Nullable String amplifybackend;

    public Optional<String> amplifybackend() {
        return this.amplifybackend == null ? Optional.empty() : Optional.ofNullable(this.amplifybackend);
    }

    @Import(name="apigateway")
      private @Nullable String apigateway;

    public Optional<String> apigateway() {
        return this.apigateway == null ? Optional.empty() : Optional.ofNullable(this.apigateway);
    }

    @Import(name="apigatewayv2")
      private @Nullable String apigatewayv2;

    public Optional<String> apigatewayv2() {
        return this.apigatewayv2 == null ? Optional.empty() : Optional.ofNullable(this.apigatewayv2);
    }

    @Import(name="appautoscaling")
      private @Nullable String appautoscaling;

    public Optional<String> appautoscaling() {
        return this.appautoscaling == null ? Optional.empty() : Optional.ofNullable(this.appautoscaling);
    }

    @Import(name="appconfig")
      private @Nullable String appconfig;

    public Optional<String> appconfig() {
        return this.appconfig == null ? Optional.empty() : Optional.ofNullable(this.appconfig);
    }

    @Import(name="appflow")
      private @Nullable String appflow;

    public Optional<String> appflow() {
        return this.appflow == null ? Optional.empty() : Optional.ofNullable(this.appflow);
    }

    @Import(name="appintegrations")
      private @Nullable String appintegrations;

    public Optional<String> appintegrations() {
        return this.appintegrations == null ? Optional.empty() : Optional.ofNullable(this.appintegrations);
    }

    @Import(name="appintegrationsservice")
      private @Nullable String appintegrationsservice;

    public Optional<String> appintegrationsservice() {
        return this.appintegrationsservice == null ? Optional.empty() : Optional.ofNullable(this.appintegrationsservice);
    }

    @Import(name="applicationautoscaling")
      private @Nullable String applicationautoscaling;

    public Optional<String> applicationautoscaling() {
        return this.applicationautoscaling == null ? Optional.empty() : Optional.ofNullable(this.applicationautoscaling);
    }

    @Import(name="applicationcostprofiler")
      private @Nullable String applicationcostprofiler;

    public Optional<String> applicationcostprofiler() {
        return this.applicationcostprofiler == null ? Optional.empty() : Optional.ofNullable(this.applicationcostprofiler);
    }

    @Import(name="applicationdiscovery")
      private @Nullable String applicationdiscovery;

    public Optional<String> applicationdiscovery() {
        return this.applicationdiscovery == null ? Optional.empty() : Optional.ofNullable(this.applicationdiscovery);
    }

    @Import(name="applicationdiscoveryservice")
      private @Nullable String applicationdiscoveryservice;

    public Optional<String> applicationdiscoveryservice() {
        return this.applicationdiscoveryservice == null ? Optional.empty() : Optional.ofNullable(this.applicationdiscoveryservice);
    }

    @Import(name="applicationinsights")
      private @Nullable String applicationinsights;

    public Optional<String> applicationinsights() {
        return this.applicationinsights == null ? Optional.empty() : Optional.ofNullable(this.applicationinsights);
    }

    @Import(name="appmesh")
      private @Nullable String appmesh;

    public Optional<String> appmesh() {
        return this.appmesh == null ? Optional.empty() : Optional.ofNullable(this.appmesh);
    }

    @Import(name="appregistry")
      private @Nullable String appregistry;

    public Optional<String> appregistry() {
        return this.appregistry == null ? Optional.empty() : Optional.ofNullable(this.appregistry);
    }

    @Import(name="apprunner")
      private @Nullable String apprunner;

    public Optional<String> apprunner() {
        return this.apprunner == null ? Optional.empty() : Optional.ofNullable(this.apprunner);
    }

    @Import(name="appstream")
      private @Nullable String appstream;

    public Optional<String> appstream() {
        return this.appstream == null ? Optional.empty() : Optional.ofNullable(this.appstream);
    }

    @Import(name="appsync")
      private @Nullable String appsync;

    public Optional<String> appsync() {
        return this.appsync == null ? Optional.empty() : Optional.ofNullable(this.appsync);
    }

    @Import(name="athena")
      private @Nullable String athena;

    public Optional<String> athena() {
        return this.athena == null ? Optional.empty() : Optional.ofNullable(this.athena);
    }

    @Import(name="auditmanager")
      private @Nullable String auditmanager;

    public Optional<String> auditmanager() {
        return this.auditmanager == null ? Optional.empty() : Optional.ofNullable(this.auditmanager);
    }

    @Import(name="augmentedairuntime")
      private @Nullable String augmentedairuntime;

    public Optional<String> augmentedairuntime() {
        return this.augmentedairuntime == null ? Optional.empty() : Optional.ofNullable(this.augmentedairuntime);
    }

    @Import(name="autoscaling")
      private @Nullable String autoscaling;

    public Optional<String> autoscaling() {
        return this.autoscaling == null ? Optional.empty() : Optional.ofNullable(this.autoscaling);
    }

    @Import(name="autoscalingplans")
      private @Nullable String autoscalingplans;

    public Optional<String> autoscalingplans() {
        return this.autoscalingplans == null ? Optional.empty() : Optional.ofNullable(this.autoscalingplans);
    }

    @Import(name="backup")
      private @Nullable String backup;

    public Optional<String> backup() {
        return this.backup == null ? Optional.empty() : Optional.ofNullable(this.backup);
    }

    @Import(name="batch")
      private @Nullable String batch;

    public Optional<String> batch() {
        return this.batch == null ? Optional.empty() : Optional.ofNullable(this.batch);
    }

    @Import(name="braket")
      private @Nullable String braket;

    public Optional<String> braket() {
        return this.braket == null ? Optional.empty() : Optional.ofNullable(this.braket);
    }

    @Import(name="budgets")
      private @Nullable String budgets;

    public Optional<String> budgets() {
        return this.budgets == null ? Optional.empty() : Optional.ofNullable(this.budgets);
    }

    @Import(name="chime")
      private @Nullable String chime;

    public Optional<String> chime() {
        return this.chime == null ? Optional.empty() : Optional.ofNullable(this.chime);
    }

    @Import(name="cloud9")
      private @Nullable String cloud9;

    public Optional<String> cloud9() {
        return this.cloud9 == null ? Optional.empty() : Optional.ofNullable(this.cloud9);
    }

    @Import(name="cloudcontrol")
      private @Nullable String cloudcontrol;

    public Optional<String> cloudcontrol() {
        return this.cloudcontrol == null ? Optional.empty() : Optional.ofNullable(this.cloudcontrol);
    }

    @Import(name="cloudcontrolapi")
      private @Nullable String cloudcontrolapi;

    public Optional<String> cloudcontrolapi() {
        return this.cloudcontrolapi == null ? Optional.empty() : Optional.ofNullable(this.cloudcontrolapi);
    }

    @Import(name="clouddirectory")
      private @Nullable String clouddirectory;

    public Optional<String> clouddirectory() {
        return this.clouddirectory == null ? Optional.empty() : Optional.ofNullable(this.clouddirectory);
    }

    @Import(name="cloudformation")
      private @Nullable String cloudformation;

    public Optional<String> cloudformation() {
        return this.cloudformation == null ? Optional.empty() : Optional.ofNullable(this.cloudformation);
    }

    @Import(name="cloudfront")
      private @Nullable String cloudfront;

    public Optional<String> cloudfront() {
        return this.cloudfront == null ? Optional.empty() : Optional.ofNullable(this.cloudfront);
    }

    @Import(name="cloudhsm")
      private @Nullable String cloudhsm;

    public Optional<String> cloudhsm() {
        return this.cloudhsm == null ? Optional.empty() : Optional.ofNullable(this.cloudhsm);
    }

    @Import(name="cloudhsmv2")
      private @Nullable String cloudhsmv2;

    public Optional<String> cloudhsmv2() {
        return this.cloudhsmv2 == null ? Optional.empty() : Optional.ofNullable(this.cloudhsmv2);
    }

    @Import(name="cloudsearch")
      private @Nullable String cloudsearch;

    public Optional<String> cloudsearch() {
        return this.cloudsearch == null ? Optional.empty() : Optional.ofNullable(this.cloudsearch);
    }

    @Import(name="cloudsearchdomain")
      private @Nullable String cloudsearchdomain;

    public Optional<String> cloudsearchdomain() {
        return this.cloudsearchdomain == null ? Optional.empty() : Optional.ofNullable(this.cloudsearchdomain);
    }

    @Import(name="cloudtrail")
      private @Nullable String cloudtrail;

    public Optional<String> cloudtrail() {
        return this.cloudtrail == null ? Optional.empty() : Optional.ofNullable(this.cloudtrail);
    }

    @Import(name="cloudwatch")
      private @Nullable String cloudwatch;

    public Optional<String> cloudwatch() {
        return this.cloudwatch == null ? Optional.empty() : Optional.ofNullable(this.cloudwatch);
    }

    @Import(name="cloudwatchevents")
      private @Nullable String cloudwatchevents;

    public Optional<String> cloudwatchevents() {
        return this.cloudwatchevents == null ? Optional.empty() : Optional.ofNullable(this.cloudwatchevents);
    }

    @Import(name="cloudwatchlogs")
      private @Nullable String cloudwatchlogs;

    public Optional<String> cloudwatchlogs() {
        return this.cloudwatchlogs == null ? Optional.empty() : Optional.ofNullable(this.cloudwatchlogs);
    }

    @Import(name="codeartifact")
      private @Nullable String codeartifact;

    public Optional<String> codeartifact() {
        return this.codeartifact == null ? Optional.empty() : Optional.ofNullable(this.codeartifact);
    }

    @Import(name="codebuild")
      private @Nullable String codebuild;

    public Optional<String> codebuild() {
        return this.codebuild == null ? Optional.empty() : Optional.ofNullable(this.codebuild);
    }

    @Import(name="codecommit")
      private @Nullable String codecommit;

    public Optional<String> codecommit() {
        return this.codecommit == null ? Optional.empty() : Optional.ofNullable(this.codecommit);
    }

    @Import(name="codedeploy")
      private @Nullable String codedeploy;

    public Optional<String> codedeploy() {
        return this.codedeploy == null ? Optional.empty() : Optional.ofNullable(this.codedeploy);
    }

    @Import(name="codeguruprofiler")
      private @Nullable String codeguruprofiler;

    public Optional<String> codeguruprofiler() {
        return this.codeguruprofiler == null ? Optional.empty() : Optional.ofNullable(this.codeguruprofiler);
    }

    @Import(name="codegurureviewer")
      private @Nullable String codegurureviewer;

    public Optional<String> codegurureviewer() {
        return this.codegurureviewer == null ? Optional.empty() : Optional.ofNullable(this.codegurureviewer);
    }

    @Import(name="codepipeline")
      private @Nullable String codepipeline;

    public Optional<String> codepipeline() {
        return this.codepipeline == null ? Optional.empty() : Optional.ofNullable(this.codepipeline);
    }

    @Import(name="codestar")
      private @Nullable String codestar;

    public Optional<String> codestar() {
        return this.codestar == null ? Optional.empty() : Optional.ofNullable(this.codestar);
    }

    @Import(name="codestarconnections")
      private @Nullable String codestarconnections;

    public Optional<String> codestarconnections() {
        return this.codestarconnections == null ? Optional.empty() : Optional.ofNullable(this.codestarconnections);
    }

    @Import(name="codestarnotifications")
      private @Nullable String codestarnotifications;

    public Optional<String> codestarnotifications() {
        return this.codestarnotifications == null ? Optional.empty() : Optional.ofNullable(this.codestarnotifications);
    }

    @Import(name="cognitoidentity")
      private @Nullable String cognitoidentity;

    public Optional<String> cognitoidentity() {
        return this.cognitoidentity == null ? Optional.empty() : Optional.ofNullable(this.cognitoidentity);
    }

    @Import(name="cognitoidentityprovider")
      private @Nullable String cognitoidentityprovider;

    public Optional<String> cognitoidentityprovider() {
        return this.cognitoidentityprovider == null ? Optional.empty() : Optional.ofNullable(this.cognitoidentityprovider);
    }

    @Import(name="cognitoidp")
      private @Nullable String cognitoidp;

    public Optional<String> cognitoidp() {
        return this.cognitoidp == null ? Optional.empty() : Optional.ofNullable(this.cognitoidp);
    }

    @Import(name="cognitosync")
      private @Nullable String cognitosync;

    public Optional<String> cognitosync() {
        return this.cognitosync == null ? Optional.empty() : Optional.ofNullable(this.cognitosync);
    }

    @Import(name="comprehend")
      private @Nullable String comprehend;

    public Optional<String> comprehend() {
        return this.comprehend == null ? Optional.empty() : Optional.ofNullable(this.comprehend);
    }

    @Import(name="comprehendmedical")
      private @Nullable String comprehendmedical;

    public Optional<String> comprehendmedical() {
        return this.comprehendmedical == null ? Optional.empty() : Optional.ofNullable(this.comprehendmedical);
    }

    @Import(name="config")
      private @Nullable String config;

    public Optional<String> config() {
        return this.config == null ? Optional.empty() : Optional.ofNullable(this.config);
    }

    @Import(name="configservice")
      private @Nullable String configservice;

    public Optional<String> configservice() {
        return this.configservice == null ? Optional.empty() : Optional.ofNullable(this.configservice);
    }

    @Import(name="connect")
      private @Nullable String connect;

    public Optional<String> connect() {
        return this.connect == null ? Optional.empty() : Optional.ofNullable(this.connect);
    }

    @Import(name="connectcontactlens")
      private @Nullable String connectcontactlens;

    public Optional<String> connectcontactlens() {
        return this.connectcontactlens == null ? Optional.empty() : Optional.ofNullable(this.connectcontactlens);
    }

    @Import(name="connectparticipant")
      private @Nullable String connectparticipant;

    public Optional<String> connectparticipant() {
        return this.connectparticipant == null ? Optional.empty() : Optional.ofNullable(this.connectparticipant);
    }

    @Import(name="costandusagereportservice")
      private @Nullable String costandusagereportservice;

    public Optional<String> costandusagereportservice() {
        return this.costandusagereportservice == null ? Optional.empty() : Optional.ofNullable(this.costandusagereportservice);
    }

    @Import(name="costexplorer")
      private @Nullable String costexplorer;

    public Optional<String> costexplorer() {
        return this.costexplorer == null ? Optional.empty() : Optional.ofNullable(this.costexplorer);
    }

    @Import(name="cur")
      private @Nullable String cur;

    public Optional<String> cur() {
        return this.cur == null ? Optional.empty() : Optional.ofNullable(this.cur);
    }

    @Import(name="databasemigration")
      private @Nullable String databasemigration;

    public Optional<String> databasemigration() {
        return this.databasemigration == null ? Optional.empty() : Optional.ofNullable(this.databasemigration);
    }

    @Import(name="databasemigrationservice")
      private @Nullable String databasemigrationservice;

    public Optional<String> databasemigrationservice() {
        return this.databasemigrationservice == null ? Optional.empty() : Optional.ofNullable(this.databasemigrationservice);
    }

    @Import(name="dataexchange")
      private @Nullable String dataexchange;

    public Optional<String> dataexchange() {
        return this.dataexchange == null ? Optional.empty() : Optional.ofNullable(this.dataexchange);
    }

    @Import(name="datapipeline")
      private @Nullable String datapipeline;

    public Optional<String> datapipeline() {
        return this.datapipeline == null ? Optional.empty() : Optional.ofNullable(this.datapipeline);
    }

    @Import(name="datasync")
      private @Nullable String datasync;

    public Optional<String> datasync() {
        return this.datasync == null ? Optional.empty() : Optional.ofNullable(this.datasync);
    }

    @Import(name="dax")
      private @Nullable String dax;

    public Optional<String> dax() {
        return this.dax == null ? Optional.empty() : Optional.ofNullable(this.dax);
    }

    @Import(name="detective")
      private @Nullable String detective;

    public Optional<String> detective() {
        return this.detective == null ? Optional.empty() : Optional.ofNullable(this.detective);
    }

    @Import(name="devicefarm")
      private @Nullable String devicefarm;

    public Optional<String> devicefarm() {
        return this.devicefarm == null ? Optional.empty() : Optional.ofNullable(this.devicefarm);
    }

    @Import(name="devopsguru")
      private @Nullable String devopsguru;

    public Optional<String> devopsguru() {
        return this.devopsguru == null ? Optional.empty() : Optional.ofNullable(this.devopsguru);
    }

    @Import(name="directconnect")
      private @Nullable String directconnect;

    public Optional<String> directconnect() {
        return this.directconnect == null ? Optional.empty() : Optional.ofNullable(this.directconnect);
    }

    @Import(name="dlm")
      private @Nullable String dlm;

    public Optional<String> dlm() {
        return this.dlm == null ? Optional.empty() : Optional.ofNullable(this.dlm);
    }

    @Import(name="dms")
      private @Nullable String dms;

    public Optional<String> dms() {
        return this.dms == null ? Optional.empty() : Optional.ofNullable(this.dms);
    }

    @Import(name="docdb")
      private @Nullable String docdb;

    public Optional<String> docdb() {
        return this.docdb == null ? Optional.empty() : Optional.ofNullable(this.docdb);
    }

    @Import(name="ds")
      private @Nullable String ds;

    public Optional<String> ds() {
        return this.ds == null ? Optional.empty() : Optional.ofNullable(this.ds);
    }

    @Import(name="dynamodb")
      private @Nullable String dynamodb;

    public Optional<String> dynamodb() {
        return this.dynamodb == null ? Optional.empty() : Optional.ofNullable(this.dynamodb);
    }

    @Import(name="dynamodbstreams")
      private @Nullable String dynamodbstreams;

    public Optional<String> dynamodbstreams() {
        return this.dynamodbstreams == null ? Optional.empty() : Optional.ofNullable(this.dynamodbstreams);
    }

    @Import(name="ec2")
      private @Nullable String ec2;

    public Optional<String> ec2() {
        return this.ec2 == null ? Optional.empty() : Optional.ofNullable(this.ec2);
    }

    @Import(name="ec2instanceconnect")
      private @Nullable String ec2instanceconnect;

    public Optional<String> ec2instanceconnect() {
        return this.ec2instanceconnect == null ? Optional.empty() : Optional.ofNullable(this.ec2instanceconnect);
    }

    @Import(name="ecr")
      private @Nullable String ecr;

    public Optional<String> ecr() {
        return this.ecr == null ? Optional.empty() : Optional.ofNullable(this.ecr);
    }

    @Import(name="ecrpublic")
      private @Nullable String ecrpublic;

    public Optional<String> ecrpublic() {
        return this.ecrpublic == null ? Optional.empty() : Optional.ofNullable(this.ecrpublic);
    }

    @Import(name="ecs")
      private @Nullable String ecs;

    public Optional<String> ecs() {
        return this.ecs == null ? Optional.empty() : Optional.ofNullable(this.ecs);
    }

    @Import(name="efs")
      private @Nullable String efs;

    public Optional<String> efs() {
        return this.efs == null ? Optional.empty() : Optional.ofNullable(this.efs);
    }

    @Import(name="eks")
      private @Nullable String eks;

    public Optional<String> eks() {
        return this.eks == null ? Optional.empty() : Optional.ofNullable(this.eks);
    }

    @Import(name="elasticache")
      private @Nullable String elasticache;

    public Optional<String> elasticache() {
        return this.elasticache == null ? Optional.empty() : Optional.ofNullable(this.elasticache);
    }

    @Import(name="elasticbeanstalk")
      private @Nullable String elasticbeanstalk;

    public Optional<String> elasticbeanstalk() {
        return this.elasticbeanstalk == null ? Optional.empty() : Optional.ofNullable(this.elasticbeanstalk);
    }

    @Import(name="elasticinference")
      private @Nullable String elasticinference;

    public Optional<String> elasticinference() {
        return this.elasticinference == null ? Optional.empty() : Optional.ofNullable(this.elasticinference);
    }

    @Import(name="elasticsearch")
      private @Nullable String elasticsearch;

    public Optional<String> elasticsearch() {
        return this.elasticsearch == null ? Optional.empty() : Optional.ofNullable(this.elasticsearch);
    }

    @Import(name="elasticsearchservice")
      private @Nullable String elasticsearchservice;

    public Optional<String> elasticsearchservice() {
        return this.elasticsearchservice == null ? Optional.empty() : Optional.ofNullable(this.elasticsearchservice);
    }

    @Import(name="elastictranscoder")
      private @Nullable String elastictranscoder;

    public Optional<String> elastictranscoder() {
        return this.elastictranscoder == null ? Optional.empty() : Optional.ofNullable(this.elastictranscoder);
    }

    @Import(name="elb")
      private @Nullable String elb;

    public Optional<String> elb() {
        return this.elb == null ? Optional.empty() : Optional.ofNullable(this.elb);
    }

    @Import(name="elbv2")
      private @Nullable String elbv2;

    public Optional<String> elbv2() {
        return this.elbv2 == null ? Optional.empty() : Optional.ofNullable(this.elbv2);
    }

    @Import(name="emr")
      private @Nullable String emr;

    public Optional<String> emr() {
        return this.emr == null ? Optional.empty() : Optional.ofNullable(this.emr);
    }

    @Import(name="emrcontainers")
      private @Nullable String emrcontainers;

    public Optional<String> emrcontainers() {
        return this.emrcontainers == null ? Optional.empty() : Optional.ofNullable(this.emrcontainers);
    }

    @Import(name="es")
      private @Nullable String es;

    public Optional<String> es() {
        return this.es == null ? Optional.empty() : Optional.ofNullable(this.es);
    }

    @Import(name="eventbridge")
      private @Nullable String eventbridge;

    public Optional<String> eventbridge() {
        return this.eventbridge == null ? Optional.empty() : Optional.ofNullable(this.eventbridge);
    }

    @Import(name="events")
      private @Nullable String events;

    public Optional<String> events() {
        return this.events == null ? Optional.empty() : Optional.ofNullable(this.events);
    }

    @Import(name="finspace")
      private @Nullable String finspace;

    public Optional<String> finspace() {
        return this.finspace == null ? Optional.empty() : Optional.ofNullable(this.finspace);
    }

    @Import(name="finspacedata")
      private @Nullable String finspacedata;

    public Optional<String> finspacedata() {
        return this.finspacedata == null ? Optional.empty() : Optional.ofNullable(this.finspacedata);
    }

    @Import(name="firehose")
      private @Nullable String firehose;

    public Optional<String> firehose() {
        return this.firehose == null ? Optional.empty() : Optional.ofNullable(this.firehose);
    }

    @Import(name="fis")
      private @Nullable String fis;

    public Optional<String> fis() {
        return this.fis == null ? Optional.empty() : Optional.ofNullable(this.fis);
    }

    @Import(name="fms")
      private @Nullable String fms;

    public Optional<String> fms() {
        return this.fms == null ? Optional.empty() : Optional.ofNullable(this.fms);
    }

    @Import(name="forecast")
      private @Nullable String forecast;

    public Optional<String> forecast() {
        return this.forecast == null ? Optional.empty() : Optional.ofNullable(this.forecast);
    }

    @Import(name="forecastquery")
      private @Nullable String forecastquery;

    public Optional<String> forecastquery() {
        return this.forecastquery == null ? Optional.empty() : Optional.ofNullable(this.forecastquery);
    }

    @Import(name="forecastqueryservice")
      private @Nullable String forecastqueryservice;

    public Optional<String> forecastqueryservice() {
        return this.forecastqueryservice == null ? Optional.empty() : Optional.ofNullable(this.forecastqueryservice);
    }

    @Import(name="forecastservice")
      private @Nullable String forecastservice;

    public Optional<String> forecastservice() {
        return this.forecastservice == null ? Optional.empty() : Optional.ofNullable(this.forecastservice);
    }

    @Import(name="frauddetector")
      private @Nullable String frauddetector;

    public Optional<String> frauddetector() {
        return this.frauddetector == null ? Optional.empty() : Optional.ofNullable(this.frauddetector);
    }

    @Import(name="fsx")
      private @Nullable String fsx;

    public Optional<String> fsx() {
        return this.fsx == null ? Optional.empty() : Optional.ofNullable(this.fsx);
    }

    @Import(name="gamelift")
      private @Nullable String gamelift;

    public Optional<String> gamelift() {
        return this.gamelift == null ? Optional.empty() : Optional.ofNullable(this.gamelift);
    }

    @Import(name="glacier")
      private @Nullable String glacier;

    public Optional<String> glacier() {
        return this.glacier == null ? Optional.empty() : Optional.ofNullable(this.glacier);
    }

    @Import(name="globalaccelerator")
      private @Nullable String globalaccelerator;

    public Optional<String> globalaccelerator() {
        return this.globalaccelerator == null ? Optional.empty() : Optional.ofNullable(this.globalaccelerator);
    }

    @Import(name="glue")
      private @Nullable String glue;

    public Optional<String> glue() {
        return this.glue == null ? Optional.empty() : Optional.ofNullable(this.glue);
    }

    @Import(name="gluedatabrew")
      private @Nullable String gluedatabrew;

    public Optional<String> gluedatabrew() {
        return this.gluedatabrew == null ? Optional.empty() : Optional.ofNullable(this.gluedatabrew);
    }

    @Import(name="greengrass")
      private @Nullable String greengrass;

    public Optional<String> greengrass() {
        return this.greengrass == null ? Optional.empty() : Optional.ofNullable(this.greengrass);
    }

    @Import(name="greengrassv2")
      private @Nullable String greengrassv2;

    public Optional<String> greengrassv2() {
        return this.greengrassv2 == null ? Optional.empty() : Optional.ofNullable(this.greengrassv2);
    }

    @Import(name="groundstation")
      private @Nullable String groundstation;

    public Optional<String> groundstation() {
        return this.groundstation == null ? Optional.empty() : Optional.ofNullable(this.groundstation);
    }

    @Import(name="guardduty")
      private @Nullable String guardduty;

    public Optional<String> guardduty() {
        return this.guardduty == null ? Optional.empty() : Optional.ofNullable(this.guardduty);
    }

    @Import(name="health")
      private @Nullable String health;

    public Optional<String> health() {
        return this.health == null ? Optional.empty() : Optional.ofNullable(this.health);
    }

    @Import(name="healthlake")
      private @Nullable String healthlake;

    public Optional<String> healthlake() {
        return this.healthlake == null ? Optional.empty() : Optional.ofNullable(this.healthlake);
    }

    @Import(name="honeycode")
      private @Nullable String honeycode;

    public Optional<String> honeycode() {
        return this.honeycode == null ? Optional.empty() : Optional.ofNullable(this.honeycode);
    }

    @Import(name="iam")
      private @Nullable String iam;

    public Optional<String> iam() {
        return this.iam == null ? Optional.empty() : Optional.ofNullable(this.iam);
    }

    @Import(name="identitystore")
      private @Nullable String identitystore;

    public Optional<String> identitystore() {
        return this.identitystore == null ? Optional.empty() : Optional.ofNullable(this.identitystore);
    }

    @Import(name="imagebuilder")
      private @Nullable String imagebuilder;

    public Optional<String> imagebuilder() {
        return this.imagebuilder == null ? Optional.empty() : Optional.ofNullable(this.imagebuilder);
    }

    @Import(name="inspector")
      private @Nullable String inspector;

    public Optional<String> inspector() {
        return this.inspector == null ? Optional.empty() : Optional.ofNullable(this.inspector);
    }

    @Import(name="iot")
      private @Nullable String iot;

    public Optional<String> iot() {
        return this.iot == null ? Optional.empty() : Optional.ofNullable(this.iot);
    }

    @Import(name="iot1clickdevices")
      private @Nullable String iot1clickdevices;

    public Optional<String> iot1clickdevices() {
        return this.iot1clickdevices == null ? Optional.empty() : Optional.ofNullable(this.iot1clickdevices);
    }

    @Import(name="iot1clickdevicesservice")
      private @Nullable String iot1clickdevicesservice;

    public Optional<String> iot1clickdevicesservice() {
        return this.iot1clickdevicesservice == null ? Optional.empty() : Optional.ofNullable(this.iot1clickdevicesservice);
    }

    @Import(name="iot1clickprojects")
      private @Nullable String iot1clickprojects;

    public Optional<String> iot1clickprojects() {
        return this.iot1clickprojects == null ? Optional.empty() : Optional.ofNullable(this.iot1clickprojects);
    }

    @Import(name="iotanalytics")
      private @Nullable String iotanalytics;

    public Optional<String> iotanalytics() {
        return this.iotanalytics == null ? Optional.empty() : Optional.ofNullable(this.iotanalytics);
    }

    @Import(name="iotdataplane")
      private @Nullable String iotdataplane;

    public Optional<String> iotdataplane() {
        return this.iotdataplane == null ? Optional.empty() : Optional.ofNullable(this.iotdataplane);
    }

    @Import(name="iotdeviceadvisor")
      private @Nullable String iotdeviceadvisor;

    public Optional<String> iotdeviceadvisor() {
        return this.iotdeviceadvisor == null ? Optional.empty() : Optional.ofNullable(this.iotdeviceadvisor);
    }

    @Import(name="iotevents")
      private @Nullable String iotevents;

    public Optional<String> iotevents() {
        return this.iotevents == null ? Optional.empty() : Optional.ofNullable(this.iotevents);
    }

    @Import(name="ioteventsdata")
      private @Nullable String ioteventsdata;

    public Optional<String> ioteventsdata() {
        return this.ioteventsdata == null ? Optional.empty() : Optional.ofNullable(this.ioteventsdata);
    }

    @Import(name="iotfleethub")
      private @Nullable String iotfleethub;

    public Optional<String> iotfleethub() {
        return this.iotfleethub == null ? Optional.empty() : Optional.ofNullable(this.iotfleethub);
    }

    @Import(name="iotjobsdataplane")
      private @Nullable String iotjobsdataplane;

    public Optional<String> iotjobsdataplane() {
        return this.iotjobsdataplane == null ? Optional.empty() : Optional.ofNullable(this.iotjobsdataplane);
    }

    @Import(name="iotsecuretunneling")
      private @Nullable String iotsecuretunneling;

    public Optional<String> iotsecuretunneling() {
        return this.iotsecuretunneling == null ? Optional.empty() : Optional.ofNullable(this.iotsecuretunneling);
    }

    @Import(name="iotsitewise")
      private @Nullable String iotsitewise;

    public Optional<String> iotsitewise() {
        return this.iotsitewise == null ? Optional.empty() : Optional.ofNullable(this.iotsitewise);
    }

    @Import(name="iotthingsgraph")
      private @Nullable String iotthingsgraph;

    public Optional<String> iotthingsgraph() {
        return this.iotthingsgraph == null ? Optional.empty() : Optional.ofNullable(this.iotthingsgraph);
    }

    @Import(name="iotwireless")
      private @Nullable String iotwireless;

    public Optional<String> iotwireless() {
        return this.iotwireless == null ? Optional.empty() : Optional.ofNullable(this.iotwireless);
    }

    @Import(name="kafka")
      private @Nullable String kafka;

    public Optional<String> kafka() {
        return this.kafka == null ? Optional.empty() : Optional.ofNullable(this.kafka);
    }

    @Import(name="kafkaconnect")
      private @Nullable String kafkaconnect;

    public Optional<String> kafkaconnect() {
        return this.kafkaconnect == null ? Optional.empty() : Optional.ofNullable(this.kafkaconnect);
    }

    @Import(name="kendra")
      private @Nullable String kendra;

    public Optional<String> kendra() {
        return this.kendra == null ? Optional.empty() : Optional.ofNullable(this.kendra);
    }

    @Import(name="kinesis")
      private @Nullable String kinesis;

    public Optional<String> kinesis() {
        return this.kinesis == null ? Optional.empty() : Optional.ofNullable(this.kinesis);
    }

    @Import(name="kinesisanalytics")
      private @Nullable String kinesisanalytics;

    public Optional<String> kinesisanalytics() {
        return this.kinesisanalytics == null ? Optional.empty() : Optional.ofNullable(this.kinesisanalytics);
    }

    @Import(name="kinesisanalyticsv2")
      private @Nullable String kinesisanalyticsv2;

    public Optional<String> kinesisanalyticsv2() {
        return this.kinesisanalyticsv2 == null ? Optional.empty() : Optional.ofNullable(this.kinesisanalyticsv2);
    }

    @Import(name="kinesisvideo")
      private @Nullable String kinesisvideo;

    public Optional<String> kinesisvideo() {
        return this.kinesisvideo == null ? Optional.empty() : Optional.ofNullable(this.kinesisvideo);
    }

    @Import(name="kinesisvideoarchivedmedia")
      private @Nullable String kinesisvideoarchivedmedia;

    public Optional<String> kinesisvideoarchivedmedia() {
        return this.kinesisvideoarchivedmedia == null ? Optional.empty() : Optional.ofNullable(this.kinesisvideoarchivedmedia);
    }

    @Import(name="kinesisvideomedia")
      private @Nullable String kinesisvideomedia;

    public Optional<String> kinesisvideomedia() {
        return this.kinesisvideomedia == null ? Optional.empty() : Optional.ofNullable(this.kinesisvideomedia);
    }

    @Import(name="kinesisvideosignalingchannels")
      private @Nullable String kinesisvideosignalingchannels;

    public Optional<String> kinesisvideosignalingchannels() {
        return this.kinesisvideosignalingchannels == null ? Optional.empty() : Optional.ofNullable(this.kinesisvideosignalingchannels);
    }

    @Import(name="kms")
      private @Nullable String kms;

    public Optional<String> kms() {
        return this.kms == null ? Optional.empty() : Optional.ofNullable(this.kms);
    }

    @Import(name="lakeformation")
      private @Nullable String lakeformation;

    public Optional<String> lakeformation() {
        return this.lakeformation == null ? Optional.empty() : Optional.ofNullable(this.lakeformation);
    }

    @Import(name="lambda")
      private @Nullable String lambda;

    public Optional<String> lambda() {
        return this.lambda == null ? Optional.empty() : Optional.ofNullable(this.lambda);
    }

    @Import(name="lexmodelbuilding")
      private @Nullable String lexmodelbuilding;

    public Optional<String> lexmodelbuilding() {
        return this.lexmodelbuilding == null ? Optional.empty() : Optional.ofNullable(this.lexmodelbuilding);
    }

    @Import(name="lexmodelbuildingservice")
      private @Nullable String lexmodelbuildingservice;

    public Optional<String> lexmodelbuildingservice() {
        return this.lexmodelbuildingservice == null ? Optional.empty() : Optional.ofNullable(this.lexmodelbuildingservice);
    }

    @Import(name="lexmodels")
      private @Nullable String lexmodels;

    public Optional<String> lexmodels() {
        return this.lexmodels == null ? Optional.empty() : Optional.ofNullable(this.lexmodels);
    }

    @Import(name="lexmodelsv2")
      private @Nullable String lexmodelsv2;

    public Optional<String> lexmodelsv2() {
        return this.lexmodelsv2 == null ? Optional.empty() : Optional.ofNullable(this.lexmodelsv2);
    }

    @Import(name="lexruntime")
      private @Nullable String lexruntime;

    public Optional<String> lexruntime() {
        return this.lexruntime == null ? Optional.empty() : Optional.ofNullable(this.lexruntime);
    }

    @Import(name="lexruntimeservice")
      private @Nullable String lexruntimeservice;

    public Optional<String> lexruntimeservice() {
        return this.lexruntimeservice == null ? Optional.empty() : Optional.ofNullable(this.lexruntimeservice);
    }

    @Import(name="lexruntimev2")
      private @Nullable String lexruntimev2;

    public Optional<String> lexruntimev2() {
        return this.lexruntimev2 == null ? Optional.empty() : Optional.ofNullable(this.lexruntimev2);
    }

    @Import(name="licensemanager")
      private @Nullable String licensemanager;

    public Optional<String> licensemanager() {
        return this.licensemanager == null ? Optional.empty() : Optional.ofNullable(this.licensemanager);
    }

    @Import(name="lightsail")
      private @Nullable String lightsail;

    public Optional<String> lightsail() {
        return this.lightsail == null ? Optional.empty() : Optional.ofNullable(this.lightsail);
    }

    @Import(name="location")
      private @Nullable String location;

    public Optional<String> location() {
        return this.location == null ? Optional.empty() : Optional.ofNullable(this.location);
    }

    @Import(name="lookoutequipment")
      private @Nullable String lookoutequipment;

    public Optional<String> lookoutequipment() {
        return this.lookoutequipment == null ? Optional.empty() : Optional.ofNullable(this.lookoutequipment);
    }

    @Import(name="lookoutforvision")
      private @Nullable String lookoutforvision;

    public Optional<String> lookoutforvision() {
        return this.lookoutforvision == null ? Optional.empty() : Optional.ofNullable(this.lookoutforvision);
    }

    @Import(name="lookoutmetrics")
      private @Nullable String lookoutmetrics;

    public Optional<String> lookoutmetrics() {
        return this.lookoutmetrics == null ? Optional.empty() : Optional.ofNullable(this.lookoutmetrics);
    }

    @Import(name="machinelearning")
      private @Nullable String machinelearning;

    public Optional<String> machinelearning() {
        return this.machinelearning == null ? Optional.empty() : Optional.ofNullable(this.machinelearning);
    }

    @Import(name="macie")
      private @Nullable String macie;

    public Optional<String> macie() {
        return this.macie == null ? Optional.empty() : Optional.ofNullable(this.macie);
    }

    @Import(name="macie2")
      private @Nullable String macie2;

    public Optional<String> macie2() {
        return this.macie2 == null ? Optional.empty() : Optional.ofNullable(this.macie2);
    }

    @Import(name="managedblockchain")
      private @Nullable String managedblockchain;

    public Optional<String> managedblockchain() {
        return this.managedblockchain == null ? Optional.empty() : Optional.ofNullable(this.managedblockchain);
    }

    @Import(name="marketplacecatalog")
      private @Nullable String marketplacecatalog;

    public Optional<String> marketplacecatalog() {
        return this.marketplacecatalog == null ? Optional.empty() : Optional.ofNullable(this.marketplacecatalog);
    }

    @Import(name="marketplacecommerceanalytics")
      private @Nullable String marketplacecommerceanalytics;

    public Optional<String> marketplacecommerceanalytics() {
        return this.marketplacecommerceanalytics == null ? Optional.empty() : Optional.ofNullable(this.marketplacecommerceanalytics);
    }

    @Import(name="marketplaceentitlement")
      private @Nullable String marketplaceentitlement;

    public Optional<String> marketplaceentitlement() {
        return this.marketplaceentitlement == null ? Optional.empty() : Optional.ofNullable(this.marketplaceentitlement);
    }

    @Import(name="marketplaceentitlementservice")
      private @Nullable String marketplaceentitlementservice;

    public Optional<String> marketplaceentitlementservice() {
        return this.marketplaceentitlementservice == null ? Optional.empty() : Optional.ofNullable(this.marketplaceentitlementservice);
    }

    @Import(name="marketplacemetering")
      private @Nullable String marketplacemetering;

    public Optional<String> marketplacemetering() {
        return this.marketplacemetering == null ? Optional.empty() : Optional.ofNullable(this.marketplacemetering);
    }

    @Import(name="mediaconnect")
      private @Nullable String mediaconnect;

    public Optional<String> mediaconnect() {
        return this.mediaconnect == null ? Optional.empty() : Optional.ofNullable(this.mediaconnect);
    }

    @Import(name="mediaconvert")
      private @Nullable String mediaconvert;

    public Optional<String> mediaconvert() {
        return this.mediaconvert == null ? Optional.empty() : Optional.ofNullable(this.mediaconvert);
    }

    @Import(name="medialive")
      private @Nullable String medialive;

    public Optional<String> medialive() {
        return this.medialive == null ? Optional.empty() : Optional.ofNullable(this.medialive);
    }

    @Import(name="mediapackage")
      private @Nullable String mediapackage;

    public Optional<String> mediapackage() {
        return this.mediapackage == null ? Optional.empty() : Optional.ofNullable(this.mediapackage);
    }

    @Import(name="mediapackagevod")
      private @Nullable String mediapackagevod;

    public Optional<String> mediapackagevod() {
        return this.mediapackagevod == null ? Optional.empty() : Optional.ofNullable(this.mediapackagevod);
    }

    @Import(name="mediastore")
      private @Nullable String mediastore;

    public Optional<String> mediastore() {
        return this.mediastore == null ? Optional.empty() : Optional.ofNullable(this.mediastore);
    }

    @Import(name="mediastoredata")
      private @Nullable String mediastoredata;

    public Optional<String> mediastoredata() {
        return this.mediastoredata == null ? Optional.empty() : Optional.ofNullable(this.mediastoredata);
    }

    @Import(name="mediatailor")
      private @Nullable String mediatailor;

    public Optional<String> mediatailor() {
        return this.mediatailor == null ? Optional.empty() : Optional.ofNullable(this.mediatailor);
    }

    @Import(name="memorydb")
      private @Nullable String memorydb;

    public Optional<String> memorydb() {
        return this.memorydb == null ? Optional.empty() : Optional.ofNullable(this.memorydb);
    }

    @Import(name="mgn")
      private @Nullable String mgn;

    public Optional<String> mgn() {
        return this.mgn == null ? Optional.empty() : Optional.ofNullable(this.mgn);
    }

    @Import(name="migrationhub")
      private @Nullable String migrationhub;

    public Optional<String> migrationhub() {
        return this.migrationhub == null ? Optional.empty() : Optional.ofNullable(this.migrationhub);
    }

    @Import(name="migrationhubconfig")
      private @Nullable String migrationhubconfig;

    public Optional<String> migrationhubconfig() {
        return this.migrationhubconfig == null ? Optional.empty() : Optional.ofNullable(this.migrationhubconfig);
    }

    @Import(name="mobile")
      private @Nullable String mobile;

    public Optional<String> mobile() {
        return this.mobile == null ? Optional.empty() : Optional.ofNullable(this.mobile);
    }

    @Import(name="mobileanalytics")
      private @Nullable String mobileanalytics;

    public Optional<String> mobileanalytics() {
        return this.mobileanalytics == null ? Optional.empty() : Optional.ofNullable(this.mobileanalytics);
    }

    @Import(name="mq")
      private @Nullable String mq;

    public Optional<String> mq() {
        return this.mq == null ? Optional.empty() : Optional.ofNullable(this.mq);
    }

    @Import(name="mturk")
      private @Nullable String mturk;

    public Optional<String> mturk() {
        return this.mturk == null ? Optional.empty() : Optional.ofNullable(this.mturk);
    }

    @Import(name="mwaa")
      private @Nullable String mwaa;

    public Optional<String> mwaa() {
        return this.mwaa == null ? Optional.empty() : Optional.ofNullable(this.mwaa);
    }

    @Import(name="neptune")
      private @Nullable String neptune;

    public Optional<String> neptune() {
        return this.neptune == null ? Optional.empty() : Optional.ofNullable(this.neptune);
    }

    @Import(name="networkfirewall")
      private @Nullable String networkfirewall;

    public Optional<String> networkfirewall() {
        return this.networkfirewall == null ? Optional.empty() : Optional.ofNullable(this.networkfirewall);
    }

    @Import(name="networkmanager")
      private @Nullable String networkmanager;

    public Optional<String> networkmanager() {
        return this.networkmanager == null ? Optional.empty() : Optional.ofNullable(this.networkmanager);
    }

    @Import(name="nimblestudio")
      private @Nullable String nimblestudio;

    public Optional<String> nimblestudio() {
        return this.nimblestudio == null ? Optional.empty() : Optional.ofNullable(this.nimblestudio);
    }

    @Import(name="opsworks")
      private @Nullable String opsworks;

    public Optional<String> opsworks() {
        return this.opsworks == null ? Optional.empty() : Optional.ofNullable(this.opsworks);
    }

    @Import(name="opsworkscm")
      private @Nullable String opsworkscm;

    public Optional<String> opsworkscm() {
        return this.opsworkscm == null ? Optional.empty() : Optional.ofNullable(this.opsworkscm);
    }

    @Import(name="organizations")
      private @Nullable String organizations;

    public Optional<String> organizations() {
        return this.organizations == null ? Optional.empty() : Optional.ofNullable(this.organizations);
    }

    @Import(name="outposts")
      private @Nullable String outposts;

    public Optional<String> outposts() {
        return this.outposts == null ? Optional.empty() : Optional.ofNullable(this.outposts);
    }

    @Import(name="personalize")
      private @Nullable String personalize;

    public Optional<String> personalize() {
        return this.personalize == null ? Optional.empty() : Optional.ofNullable(this.personalize);
    }

    @Import(name="personalizeevents")
      private @Nullable String personalizeevents;

    public Optional<String> personalizeevents() {
        return this.personalizeevents == null ? Optional.empty() : Optional.ofNullable(this.personalizeevents);
    }

    @Import(name="personalizeruntime")
      private @Nullable String personalizeruntime;

    public Optional<String> personalizeruntime() {
        return this.personalizeruntime == null ? Optional.empty() : Optional.ofNullable(this.personalizeruntime);
    }

    @Import(name="pi")
      private @Nullable String pi;

    public Optional<String> pi() {
        return this.pi == null ? Optional.empty() : Optional.ofNullable(this.pi);
    }

    @Import(name="pinpoint")
      private @Nullable String pinpoint;

    public Optional<String> pinpoint() {
        return this.pinpoint == null ? Optional.empty() : Optional.ofNullable(this.pinpoint);
    }

    @Import(name="pinpointemail")
      private @Nullable String pinpointemail;

    public Optional<String> pinpointemail() {
        return this.pinpointemail == null ? Optional.empty() : Optional.ofNullable(this.pinpointemail);
    }

    @Import(name="pinpointsmsvoice")
      private @Nullable String pinpointsmsvoice;

    public Optional<String> pinpointsmsvoice() {
        return this.pinpointsmsvoice == null ? Optional.empty() : Optional.ofNullable(this.pinpointsmsvoice);
    }

    @Import(name="polly")
      private @Nullable String polly;

    public Optional<String> polly() {
        return this.polly == null ? Optional.empty() : Optional.ofNullable(this.polly);
    }

    @Import(name="pricing")
      private @Nullable String pricing;

    public Optional<String> pricing() {
        return this.pricing == null ? Optional.empty() : Optional.ofNullable(this.pricing);
    }

    @Import(name="prometheus")
      private @Nullable String prometheus;

    public Optional<String> prometheus() {
        return this.prometheus == null ? Optional.empty() : Optional.ofNullable(this.prometheus);
    }

    @Import(name="prometheusservice")
      private @Nullable String prometheusservice;

    public Optional<String> prometheusservice() {
        return this.prometheusservice == null ? Optional.empty() : Optional.ofNullable(this.prometheusservice);
    }

    @Import(name="proton")
      private @Nullable String proton;

    public Optional<String> proton() {
        return this.proton == null ? Optional.empty() : Optional.ofNullable(this.proton);
    }

    @Import(name="qldb")
      private @Nullable String qldb;

    public Optional<String> qldb() {
        return this.qldb == null ? Optional.empty() : Optional.ofNullable(this.qldb);
    }

    @Import(name="qldbsession")
      private @Nullable String qldbsession;

    public Optional<String> qldbsession() {
        return this.qldbsession == null ? Optional.empty() : Optional.ofNullable(this.qldbsession);
    }

    @Import(name="quicksight")
      private @Nullable String quicksight;

    public Optional<String> quicksight() {
        return this.quicksight == null ? Optional.empty() : Optional.ofNullable(this.quicksight);
    }

    @Import(name="ram")
      private @Nullable String ram;

    public Optional<String> ram() {
        return this.ram == null ? Optional.empty() : Optional.ofNullable(this.ram);
    }

    @Import(name="rds")
      private @Nullable String rds;

    public Optional<String> rds() {
        return this.rds == null ? Optional.empty() : Optional.ofNullable(this.rds);
    }

    @Import(name="rdsdata")
      private @Nullable String rdsdata;

    public Optional<String> rdsdata() {
        return this.rdsdata == null ? Optional.empty() : Optional.ofNullable(this.rdsdata);
    }

    @Import(name="rdsdataservice")
      private @Nullable String rdsdataservice;

    public Optional<String> rdsdataservice() {
        return this.rdsdataservice == null ? Optional.empty() : Optional.ofNullable(this.rdsdataservice);
    }

    @Import(name="redshift")
      private @Nullable String redshift;

    public Optional<String> redshift() {
        return this.redshift == null ? Optional.empty() : Optional.ofNullable(this.redshift);
    }

    @Import(name="redshiftdata")
      private @Nullable String redshiftdata;

    public Optional<String> redshiftdata() {
        return this.redshiftdata == null ? Optional.empty() : Optional.ofNullable(this.redshiftdata);
    }

    @Import(name="rekognition")
      private @Nullable String rekognition;

    public Optional<String> rekognition() {
        return this.rekognition == null ? Optional.empty() : Optional.ofNullable(this.rekognition);
    }

    @Import(name="resourcegroups")
      private @Nullable String resourcegroups;

    public Optional<String> resourcegroups() {
        return this.resourcegroups == null ? Optional.empty() : Optional.ofNullable(this.resourcegroups);
    }

    @Import(name="resourcegroupstagging")
      private @Nullable String resourcegroupstagging;

    public Optional<String> resourcegroupstagging() {
        return this.resourcegroupstagging == null ? Optional.empty() : Optional.ofNullable(this.resourcegroupstagging);
    }

    @Import(name="resourcegroupstaggingapi")
      private @Nullable String resourcegroupstaggingapi;

    public Optional<String> resourcegroupstaggingapi() {
        return this.resourcegroupstaggingapi == null ? Optional.empty() : Optional.ofNullable(this.resourcegroupstaggingapi);
    }

    @Import(name="robomaker")
      private @Nullable String robomaker;

    public Optional<String> robomaker() {
        return this.robomaker == null ? Optional.empty() : Optional.ofNullable(this.robomaker);
    }

    @Import(name="route53")
      private @Nullable String route53;

    public Optional<String> route53() {
        return this.route53 == null ? Optional.empty() : Optional.ofNullable(this.route53);
    }

    @Import(name="route53domains")
      private @Nullable String route53domains;

    public Optional<String> route53domains() {
        return this.route53domains == null ? Optional.empty() : Optional.ofNullable(this.route53domains);
    }

    @Import(name="route53recoverycontrolconfig")
      private @Nullable String route53recoverycontrolconfig;

    public Optional<String> route53recoverycontrolconfig() {
        return this.route53recoverycontrolconfig == null ? Optional.empty() : Optional.ofNullable(this.route53recoverycontrolconfig);
    }

    @Import(name="route53recoveryreadiness")
      private @Nullable String route53recoveryreadiness;

    public Optional<String> route53recoveryreadiness() {
        return this.route53recoveryreadiness == null ? Optional.empty() : Optional.ofNullable(this.route53recoveryreadiness);
    }

    @Import(name="route53resolver")
      private @Nullable String route53resolver;

    public Optional<String> route53resolver() {
        return this.route53resolver == null ? Optional.empty() : Optional.ofNullable(this.route53resolver);
    }

    @Import(name="s3")
      private @Nullable String s3;

    public Optional<String> s3() {
        return this.s3 == null ? Optional.empty() : Optional.ofNullable(this.s3);
    }

    @Import(name="s3control")
      private @Nullable String s3control;

    public Optional<String> s3control() {
        return this.s3control == null ? Optional.empty() : Optional.ofNullable(this.s3control);
    }

    @Import(name="s3outposts")
      private @Nullable String s3outposts;

    public Optional<String> s3outposts() {
        return this.s3outposts == null ? Optional.empty() : Optional.ofNullable(this.s3outposts);
    }

    @Import(name="sagemaker")
      private @Nullable String sagemaker;

    public Optional<String> sagemaker() {
        return this.sagemaker == null ? Optional.empty() : Optional.ofNullable(this.sagemaker);
    }

    @Import(name="sagemakeredgemanager")
      private @Nullable String sagemakeredgemanager;

    public Optional<String> sagemakeredgemanager() {
        return this.sagemakeredgemanager == null ? Optional.empty() : Optional.ofNullable(this.sagemakeredgemanager);
    }

    @Import(name="sagemakerfeaturestoreruntime")
      private @Nullable String sagemakerfeaturestoreruntime;

    public Optional<String> sagemakerfeaturestoreruntime() {
        return this.sagemakerfeaturestoreruntime == null ? Optional.empty() : Optional.ofNullable(this.sagemakerfeaturestoreruntime);
    }

    @Import(name="sagemakerruntime")
      private @Nullable String sagemakerruntime;

    public Optional<String> sagemakerruntime() {
        return this.sagemakerruntime == null ? Optional.empty() : Optional.ofNullable(this.sagemakerruntime);
    }

    @Import(name="savingsplans")
      private @Nullable String savingsplans;

    public Optional<String> savingsplans() {
        return this.savingsplans == null ? Optional.empty() : Optional.ofNullable(this.savingsplans);
    }

    @Import(name="schemas")
      private @Nullable String schemas;

    public Optional<String> schemas() {
        return this.schemas == null ? Optional.empty() : Optional.ofNullable(this.schemas);
    }

    @Import(name="sdb")
      private @Nullable String sdb;

    public Optional<String> sdb() {
        return this.sdb == null ? Optional.empty() : Optional.ofNullable(this.sdb);
    }

    @Import(name="secretsmanager")
      private @Nullable String secretsmanager;

    public Optional<String> secretsmanager() {
        return this.secretsmanager == null ? Optional.empty() : Optional.ofNullable(this.secretsmanager);
    }

    @Import(name="securityhub")
      private @Nullable String securityhub;

    public Optional<String> securityhub() {
        return this.securityhub == null ? Optional.empty() : Optional.ofNullable(this.securityhub);
    }

    @Import(name="serverlessapplicationrepository")
      private @Nullable String serverlessapplicationrepository;

    public Optional<String> serverlessapplicationrepository() {
        return this.serverlessapplicationrepository == null ? Optional.empty() : Optional.ofNullable(this.serverlessapplicationrepository);
    }

    @Import(name="serverlessapprepo")
      private @Nullable String serverlessapprepo;

    public Optional<String> serverlessapprepo() {
        return this.serverlessapprepo == null ? Optional.empty() : Optional.ofNullable(this.serverlessapprepo);
    }

    @Import(name="serverlessrepo")
      private @Nullable String serverlessrepo;

    public Optional<String> serverlessrepo() {
        return this.serverlessrepo == null ? Optional.empty() : Optional.ofNullable(this.serverlessrepo);
    }

    @Import(name="servicecatalog")
      private @Nullable String servicecatalog;

    public Optional<String> servicecatalog() {
        return this.servicecatalog == null ? Optional.empty() : Optional.ofNullable(this.servicecatalog);
    }

    @Import(name="servicediscovery")
      private @Nullable String servicediscovery;

    public Optional<String> servicediscovery() {
        return this.servicediscovery == null ? Optional.empty() : Optional.ofNullable(this.servicediscovery);
    }

    @Import(name="servicequotas")
      private @Nullable String servicequotas;

    public Optional<String> servicequotas() {
        return this.servicequotas == null ? Optional.empty() : Optional.ofNullable(this.servicequotas);
    }

    @Import(name="ses")
      private @Nullable String ses;

    public Optional<String> ses() {
        return this.ses == null ? Optional.empty() : Optional.ofNullable(this.ses);
    }

    @Import(name="sesv2")
      private @Nullable String sesv2;

    public Optional<String> sesv2() {
        return this.sesv2 == null ? Optional.empty() : Optional.ofNullable(this.sesv2);
    }

    @Import(name="sfn")
      private @Nullable String sfn;

    public Optional<String> sfn() {
        return this.sfn == null ? Optional.empty() : Optional.ofNullable(this.sfn);
    }

    @Import(name="shield")
      private @Nullable String shield;

    public Optional<String> shield() {
        return this.shield == null ? Optional.empty() : Optional.ofNullable(this.shield);
    }

    @Import(name="signer")
      private @Nullable String signer;

    public Optional<String> signer() {
        return this.signer == null ? Optional.empty() : Optional.ofNullable(this.signer);
    }

    @Import(name="simpledb")
      private @Nullable String simpledb;

    public Optional<String> simpledb() {
        return this.simpledb == null ? Optional.empty() : Optional.ofNullable(this.simpledb);
    }

    @Import(name="sms")
      private @Nullable String sms;

    public Optional<String> sms() {
        return this.sms == null ? Optional.empty() : Optional.ofNullable(this.sms);
    }

    @Import(name="snowball")
      private @Nullable String snowball;

    public Optional<String> snowball() {
        return this.snowball == null ? Optional.empty() : Optional.ofNullable(this.snowball);
    }

    @Import(name="sns")
      private @Nullable String sns;

    public Optional<String> sns() {
        return this.sns == null ? Optional.empty() : Optional.ofNullable(this.sns);
    }

    @Import(name="sqs")
      private @Nullable String sqs;

    public Optional<String> sqs() {
        return this.sqs == null ? Optional.empty() : Optional.ofNullable(this.sqs);
    }

    @Import(name="ssm")
      private @Nullable String ssm;

    public Optional<String> ssm() {
        return this.ssm == null ? Optional.empty() : Optional.ofNullable(this.ssm);
    }

    @Import(name="ssmcontacts")
      private @Nullable String ssmcontacts;

    public Optional<String> ssmcontacts() {
        return this.ssmcontacts == null ? Optional.empty() : Optional.ofNullable(this.ssmcontacts);
    }

    @Import(name="ssmincidents")
      private @Nullable String ssmincidents;

    public Optional<String> ssmincidents() {
        return this.ssmincidents == null ? Optional.empty() : Optional.ofNullable(this.ssmincidents);
    }

    @Import(name="sso")
      private @Nullable String sso;

    public Optional<String> sso() {
        return this.sso == null ? Optional.empty() : Optional.ofNullable(this.sso);
    }

    @Import(name="ssoadmin")
      private @Nullable String ssoadmin;

    public Optional<String> ssoadmin() {
        return this.ssoadmin == null ? Optional.empty() : Optional.ofNullable(this.ssoadmin);
    }

    @Import(name="ssooidc")
      private @Nullable String ssooidc;

    public Optional<String> ssooidc() {
        return this.ssooidc == null ? Optional.empty() : Optional.ofNullable(this.ssooidc);
    }

    @Import(name="stepfunctions")
      private @Nullable String stepfunctions;

    public Optional<String> stepfunctions() {
        return this.stepfunctions == null ? Optional.empty() : Optional.ofNullable(this.stepfunctions);
    }

    @Import(name="storagegateway")
      private @Nullable String storagegateway;

    public Optional<String> storagegateway() {
        return this.storagegateway == null ? Optional.empty() : Optional.ofNullable(this.storagegateway);
    }

    @Import(name="sts")
      private @Nullable String sts;

    public Optional<String> sts() {
        return this.sts == null ? Optional.empty() : Optional.ofNullable(this.sts);
    }

    @Import(name="support")
      private @Nullable String support;

    public Optional<String> support() {
        return this.support == null ? Optional.empty() : Optional.ofNullable(this.support);
    }

    @Import(name="swf")
      private @Nullable String swf;

    public Optional<String> swf() {
        return this.swf == null ? Optional.empty() : Optional.ofNullable(this.swf);
    }

    @Import(name="synthetics")
      private @Nullable String synthetics;

    public Optional<String> synthetics() {
        return this.synthetics == null ? Optional.empty() : Optional.ofNullable(this.synthetics);
    }

    @Import(name="textract")
      private @Nullable String textract;

    public Optional<String> textract() {
        return this.textract == null ? Optional.empty() : Optional.ofNullable(this.textract);
    }

    @Import(name="timestreamquery")
      private @Nullable String timestreamquery;

    public Optional<String> timestreamquery() {
        return this.timestreamquery == null ? Optional.empty() : Optional.ofNullable(this.timestreamquery);
    }

    @Import(name="timestreamwrite")
      private @Nullable String timestreamwrite;

    public Optional<String> timestreamwrite() {
        return this.timestreamwrite == null ? Optional.empty() : Optional.ofNullable(this.timestreamwrite);
    }

    @Import(name="transcribe")
      private @Nullable String transcribe;

    public Optional<String> transcribe() {
        return this.transcribe == null ? Optional.empty() : Optional.ofNullable(this.transcribe);
    }

    @Import(name="transcribeservice")
      private @Nullable String transcribeservice;

    public Optional<String> transcribeservice() {
        return this.transcribeservice == null ? Optional.empty() : Optional.ofNullable(this.transcribeservice);
    }

    @Import(name="transcribestreaming")
      private @Nullable String transcribestreaming;

    public Optional<String> transcribestreaming() {
        return this.transcribestreaming == null ? Optional.empty() : Optional.ofNullable(this.transcribestreaming);
    }

    @Import(name="transcribestreamingservice")
      private @Nullable String transcribestreamingservice;

    public Optional<String> transcribestreamingservice() {
        return this.transcribestreamingservice == null ? Optional.empty() : Optional.ofNullable(this.transcribestreamingservice);
    }

    @Import(name="transfer")
      private @Nullable String transfer;

    public Optional<String> transfer() {
        return this.transfer == null ? Optional.empty() : Optional.ofNullable(this.transfer);
    }

    @Import(name="translate")
      private @Nullable String translate;

    public Optional<String> translate() {
        return this.translate == null ? Optional.empty() : Optional.ofNullable(this.translate);
    }

    @Import(name="waf")
      private @Nullable String waf;

    public Optional<String> waf() {
        return this.waf == null ? Optional.empty() : Optional.ofNullable(this.waf);
    }

    @Import(name="wafregional")
      private @Nullable String wafregional;

    public Optional<String> wafregional() {
        return this.wafregional == null ? Optional.empty() : Optional.ofNullable(this.wafregional);
    }

    @Import(name="wafv2")
      private @Nullable String wafv2;

    public Optional<String> wafv2() {
        return this.wafv2 == null ? Optional.empty() : Optional.ofNullable(this.wafv2);
    }

    @Import(name="wellarchitected")
      private @Nullable String wellarchitected;

    public Optional<String> wellarchitected() {
        return this.wellarchitected == null ? Optional.empty() : Optional.ofNullable(this.wellarchitected);
    }

    @Import(name="workdocs")
      private @Nullable String workdocs;

    public Optional<String> workdocs() {
        return this.workdocs == null ? Optional.empty() : Optional.ofNullable(this.workdocs);
    }

    @Import(name="worklink")
      private @Nullable String worklink;

    public Optional<String> worklink() {
        return this.worklink == null ? Optional.empty() : Optional.ofNullable(this.worklink);
    }

    @Import(name="workmail")
      private @Nullable String workmail;

    public Optional<String> workmail() {
        return this.workmail == null ? Optional.empty() : Optional.ofNullable(this.workmail);
    }

    @Import(name="workmailmessageflow")
      private @Nullable String workmailmessageflow;

    public Optional<String> workmailmessageflow() {
        return this.workmailmessageflow == null ? Optional.empty() : Optional.ofNullable(this.workmailmessageflow);
    }

    @Import(name="workspaces")
      private @Nullable String workspaces;

    public Optional<String> workspaces() {
        return this.workspaces == null ? Optional.empty() : Optional.ofNullable(this.workspaces);
    }

    @Import(name="xray")
      private @Nullable String xray;

    public Optional<String> xray() {
        return this.xray == null ? Optional.empty() : Optional.ofNullable(this.xray);
    }


    private Endpoints() {
        this.accessanalyzer = null;
        this.account = null;
        this.acm = null;
        this.acmpca = null;
        this.alexaforbusiness = null;
        this.amp = null;
        this.amplify = null;
        this.amplifybackend = null;
        this.apigateway = null;
        this.apigatewayv2 = null;
        this.appautoscaling = null;
        this.appconfig = null;
        this.appflow = null;
        this.appintegrations = null;
        this.appintegrationsservice = null;
        this.applicationautoscaling = null;
        this.applicationcostprofiler = null;
        this.applicationdiscovery = null;
        this.applicationdiscoveryservice = null;
        this.applicationinsights = null;
        this.appmesh = null;
        this.appregistry = null;
        this.apprunner = null;
        this.appstream = null;
        this.appsync = null;
        this.athena = null;
        this.auditmanager = null;
        this.augmentedairuntime = null;
        this.autoscaling = null;
        this.autoscalingplans = null;
        this.backup = null;
        this.batch = null;
        this.braket = null;
        this.budgets = null;
        this.chime = null;
        this.cloud9 = null;
        this.cloudcontrol = null;
        this.cloudcontrolapi = null;
        this.clouddirectory = null;
        this.cloudformation = null;
        this.cloudfront = null;
        this.cloudhsm = null;
        this.cloudhsmv2 = null;
        this.cloudsearch = null;
        this.cloudsearchdomain = null;
        this.cloudtrail = null;
        this.cloudwatch = null;
        this.cloudwatchevents = null;
        this.cloudwatchlogs = null;
        this.codeartifact = null;
        this.codebuild = null;
        this.codecommit = null;
        this.codedeploy = null;
        this.codeguruprofiler = null;
        this.codegurureviewer = null;
        this.codepipeline = null;
        this.codestar = null;
        this.codestarconnections = null;
        this.codestarnotifications = null;
        this.cognitoidentity = null;
        this.cognitoidentityprovider = null;
        this.cognitoidp = null;
        this.cognitosync = null;
        this.comprehend = null;
        this.comprehendmedical = null;
        this.config = null;
        this.configservice = null;
        this.connect = null;
        this.connectcontactlens = null;
        this.connectparticipant = null;
        this.costandusagereportservice = null;
        this.costexplorer = null;
        this.cur = null;
        this.databasemigration = null;
        this.databasemigrationservice = null;
        this.dataexchange = null;
        this.datapipeline = null;
        this.datasync = null;
        this.dax = null;
        this.detective = null;
        this.devicefarm = null;
        this.devopsguru = null;
        this.directconnect = null;
        this.dlm = null;
        this.dms = null;
        this.docdb = null;
        this.ds = null;
        this.dynamodb = null;
        this.dynamodbstreams = null;
        this.ec2 = null;
        this.ec2instanceconnect = null;
        this.ecr = null;
        this.ecrpublic = null;
        this.ecs = null;
        this.efs = null;
        this.eks = null;
        this.elasticache = null;
        this.elasticbeanstalk = null;
        this.elasticinference = null;
        this.elasticsearch = null;
        this.elasticsearchservice = null;
        this.elastictranscoder = null;
        this.elb = null;
        this.elbv2 = null;
        this.emr = null;
        this.emrcontainers = null;
        this.es = null;
        this.eventbridge = null;
        this.events = null;
        this.finspace = null;
        this.finspacedata = null;
        this.firehose = null;
        this.fis = null;
        this.fms = null;
        this.forecast = null;
        this.forecastquery = null;
        this.forecastqueryservice = null;
        this.forecastservice = null;
        this.frauddetector = null;
        this.fsx = null;
        this.gamelift = null;
        this.glacier = null;
        this.globalaccelerator = null;
        this.glue = null;
        this.gluedatabrew = null;
        this.greengrass = null;
        this.greengrassv2 = null;
        this.groundstation = null;
        this.guardduty = null;
        this.health = null;
        this.healthlake = null;
        this.honeycode = null;
        this.iam = null;
        this.identitystore = null;
        this.imagebuilder = null;
        this.inspector = null;
        this.iot = null;
        this.iot1clickdevices = null;
        this.iot1clickdevicesservice = null;
        this.iot1clickprojects = null;
        this.iotanalytics = null;
        this.iotdataplane = null;
        this.iotdeviceadvisor = null;
        this.iotevents = null;
        this.ioteventsdata = null;
        this.iotfleethub = null;
        this.iotjobsdataplane = null;
        this.iotsecuretunneling = null;
        this.iotsitewise = null;
        this.iotthingsgraph = null;
        this.iotwireless = null;
        this.kafka = null;
        this.kafkaconnect = null;
        this.kendra = null;
        this.kinesis = null;
        this.kinesisanalytics = null;
        this.kinesisanalyticsv2 = null;
        this.kinesisvideo = null;
        this.kinesisvideoarchivedmedia = null;
        this.kinesisvideomedia = null;
        this.kinesisvideosignalingchannels = null;
        this.kms = null;
        this.lakeformation = null;
        this.lambda = null;
        this.lexmodelbuilding = null;
        this.lexmodelbuildingservice = null;
        this.lexmodels = null;
        this.lexmodelsv2 = null;
        this.lexruntime = null;
        this.lexruntimeservice = null;
        this.lexruntimev2 = null;
        this.licensemanager = null;
        this.lightsail = null;
        this.location = null;
        this.lookoutequipment = null;
        this.lookoutforvision = null;
        this.lookoutmetrics = null;
        this.machinelearning = null;
        this.macie = null;
        this.macie2 = null;
        this.managedblockchain = null;
        this.marketplacecatalog = null;
        this.marketplacecommerceanalytics = null;
        this.marketplaceentitlement = null;
        this.marketplaceentitlementservice = null;
        this.marketplacemetering = null;
        this.mediaconnect = null;
        this.mediaconvert = null;
        this.medialive = null;
        this.mediapackage = null;
        this.mediapackagevod = null;
        this.mediastore = null;
        this.mediastoredata = null;
        this.mediatailor = null;
        this.memorydb = null;
        this.mgn = null;
        this.migrationhub = null;
        this.migrationhubconfig = null;
        this.mobile = null;
        this.mobileanalytics = null;
        this.mq = null;
        this.mturk = null;
        this.mwaa = null;
        this.neptune = null;
        this.networkfirewall = null;
        this.networkmanager = null;
        this.nimblestudio = null;
        this.opsworks = null;
        this.opsworkscm = null;
        this.organizations = null;
        this.outposts = null;
        this.personalize = null;
        this.personalizeevents = null;
        this.personalizeruntime = null;
        this.pi = null;
        this.pinpoint = null;
        this.pinpointemail = null;
        this.pinpointsmsvoice = null;
        this.polly = null;
        this.pricing = null;
        this.prometheus = null;
        this.prometheusservice = null;
        this.proton = null;
        this.qldb = null;
        this.qldbsession = null;
        this.quicksight = null;
        this.ram = null;
        this.rds = null;
        this.rdsdata = null;
        this.rdsdataservice = null;
        this.redshift = null;
        this.redshiftdata = null;
        this.rekognition = null;
        this.resourcegroups = null;
        this.resourcegroupstagging = null;
        this.resourcegroupstaggingapi = null;
        this.robomaker = null;
        this.route53 = null;
        this.route53domains = null;
        this.route53recoverycontrolconfig = null;
        this.route53recoveryreadiness = null;
        this.route53resolver = null;
        this.s3 = null;
        this.s3control = null;
        this.s3outposts = null;
        this.sagemaker = null;
        this.sagemakeredgemanager = null;
        this.sagemakerfeaturestoreruntime = null;
        this.sagemakerruntime = null;
        this.savingsplans = null;
        this.schemas = null;
        this.sdb = null;
        this.secretsmanager = null;
        this.securityhub = null;
        this.serverlessapplicationrepository = null;
        this.serverlessapprepo = null;
        this.serverlessrepo = null;
        this.servicecatalog = null;
        this.servicediscovery = null;
        this.servicequotas = null;
        this.ses = null;
        this.sesv2 = null;
        this.sfn = null;
        this.shield = null;
        this.signer = null;
        this.simpledb = null;
        this.sms = null;
        this.snowball = null;
        this.sns = null;
        this.sqs = null;
        this.ssm = null;
        this.ssmcontacts = null;
        this.ssmincidents = null;
        this.sso = null;
        this.ssoadmin = null;
        this.ssooidc = null;
        this.stepfunctions = null;
        this.storagegateway = null;
        this.sts = null;
        this.support = null;
        this.swf = null;
        this.synthetics = null;
        this.textract = null;
        this.timestreamquery = null;
        this.timestreamwrite = null;
        this.transcribe = null;
        this.transcribeservice = null;
        this.transcribestreaming = null;
        this.transcribestreamingservice = null;
        this.transfer = null;
        this.translate = null;
        this.waf = null;
        this.wafregional = null;
        this.wafv2 = null;
        this.wellarchitected = null;
        this.workdocs = null;
        this.worklink = null;
        this.workmail = null;
        this.workmailmessageflow = null;
        this.workspaces = null;
        this.xray = null;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Endpoints defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable String accessanalyzer;
        private @Nullable String account;
        private @Nullable String acm;
        private @Nullable String acmpca;
        private @Nullable String alexaforbusiness;
        private @Nullable String amp;
        private @Nullable String amplify;
        private @Nullable String amplifybackend;
        private @Nullable String apigateway;
        private @Nullable String apigatewayv2;
        private @Nullable String appautoscaling;
        private @Nullable String appconfig;
        private @Nullable String appflow;
        private @Nullable String appintegrations;
        private @Nullable String appintegrationsservice;
        private @Nullable String applicationautoscaling;
        private @Nullable String applicationcostprofiler;
        private @Nullable String applicationdiscovery;
        private @Nullable String applicationdiscoveryservice;
        private @Nullable String applicationinsights;
        private @Nullable String appmesh;
        private @Nullable String appregistry;
        private @Nullable String apprunner;
        private @Nullable String appstream;
        private @Nullable String appsync;
        private @Nullable String athena;
        private @Nullable String auditmanager;
        private @Nullable String augmentedairuntime;
        private @Nullable String autoscaling;
        private @Nullable String autoscalingplans;
        private @Nullable String backup;
        private @Nullable String batch;
        private @Nullable String braket;
        private @Nullable String budgets;
        private @Nullable String chime;
        private @Nullable String cloud9;
        private @Nullable String cloudcontrol;
        private @Nullable String cloudcontrolapi;
        private @Nullable String clouddirectory;
        private @Nullable String cloudformation;
        private @Nullable String cloudfront;
        private @Nullable String cloudhsm;
        private @Nullable String cloudhsmv2;
        private @Nullable String cloudsearch;
        private @Nullable String cloudsearchdomain;
        private @Nullable String cloudtrail;
        private @Nullable String cloudwatch;
        private @Nullable String cloudwatchevents;
        private @Nullable String cloudwatchlogs;
        private @Nullable String codeartifact;
        private @Nullable String codebuild;
        private @Nullable String codecommit;
        private @Nullable String codedeploy;
        private @Nullable String codeguruprofiler;
        private @Nullable String codegurureviewer;
        private @Nullable String codepipeline;
        private @Nullable String codestar;
        private @Nullable String codestarconnections;
        private @Nullable String codestarnotifications;
        private @Nullable String cognitoidentity;
        private @Nullable String cognitoidentityprovider;
        private @Nullable String cognitoidp;
        private @Nullable String cognitosync;
        private @Nullable String comprehend;
        private @Nullable String comprehendmedical;
        private @Nullable String config;
        private @Nullable String configservice;
        private @Nullable String connect;
        private @Nullable String connectcontactlens;
        private @Nullable String connectparticipant;
        private @Nullable String costandusagereportservice;
        private @Nullable String costexplorer;
        private @Nullable String cur;
        private @Nullable String databasemigration;
        private @Nullable String databasemigrationservice;
        private @Nullable String dataexchange;
        private @Nullable String datapipeline;
        private @Nullable String datasync;
        private @Nullable String dax;
        private @Nullable String detective;
        private @Nullable String devicefarm;
        private @Nullable String devopsguru;
        private @Nullable String directconnect;
        private @Nullable String dlm;
        private @Nullable String dms;
        private @Nullable String docdb;
        private @Nullable String ds;
        private @Nullable String dynamodb;
        private @Nullable String dynamodbstreams;
        private @Nullable String ec2;
        private @Nullable String ec2instanceconnect;
        private @Nullable String ecr;
        private @Nullable String ecrpublic;
        private @Nullable String ecs;
        private @Nullable String efs;
        private @Nullable String eks;
        private @Nullable String elasticache;
        private @Nullable String elasticbeanstalk;
        private @Nullable String elasticinference;
        private @Nullable String elasticsearch;
        private @Nullable String elasticsearchservice;
        private @Nullable String elastictranscoder;
        private @Nullable String elb;
        private @Nullable String elbv2;
        private @Nullable String emr;
        private @Nullable String emrcontainers;
        private @Nullable String es;
        private @Nullable String eventbridge;
        private @Nullable String events;
        private @Nullable String finspace;
        private @Nullable String finspacedata;
        private @Nullable String firehose;
        private @Nullable String fis;
        private @Nullable String fms;
        private @Nullable String forecast;
        private @Nullable String forecastquery;
        private @Nullable String forecastqueryservice;
        private @Nullable String forecastservice;
        private @Nullable String frauddetector;
        private @Nullable String fsx;
        private @Nullable String gamelift;
        private @Nullable String glacier;
        private @Nullable String globalaccelerator;
        private @Nullable String glue;
        private @Nullable String gluedatabrew;
        private @Nullable String greengrass;
        private @Nullable String greengrassv2;
        private @Nullable String groundstation;
        private @Nullable String guardduty;
        private @Nullable String health;
        private @Nullable String healthlake;
        private @Nullable String honeycode;
        private @Nullable String iam;
        private @Nullable String identitystore;
        private @Nullable String imagebuilder;
        private @Nullable String inspector;
        private @Nullable String iot;
        private @Nullable String iot1clickdevices;
        private @Nullable String iot1clickdevicesservice;
        private @Nullable String iot1clickprojects;
        private @Nullable String iotanalytics;
        private @Nullable String iotdataplane;
        private @Nullable String iotdeviceadvisor;
        private @Nullable String iotevents;
        private @Nullable String ioteventsdata;
        private @Nullable String iotfleethub;
        private @Nullable String iotjobsdataplane;
        private @Nullable String iotsecuretunneling;
        private @Nullable String iotsitewise;
        private @Nullable String iotthingsgraph;
        private @Nullable String iotwireless;
        private @Nullable String kafka;
        private @Nullable String kafkaconnect;
        private @Nullable String kendra;
        private @Nullable String kinesis;
        private @Nullable String kinesisanalytics;
        private @Nullable String kinesisanalyticsv2;
        private @Nullable String kinesisvideo;
        private @Nullable String kinesisvideoarchivedmedia;
        private @Nullable String kinesisvideomedia;
        private @Nullable String kinesisvideosignalingchannels;
        private @Nullable String kms;
        private @Nullable String lakeformation;
        private @Nullable String lambda;
        private @Nullable String lexmodelbuilding;
        private @Nullable String lexmodelbuildingservice;
        private @Nullable String lexmodels;
        private @Nullable String lexmodelsv2;
        private @Nullable String lexruntime;
        private @Nullable String lexruntimeservice;
        private @Nullable String lexruntimev2;
        private @Nullable String licensemanager;
        private @Nullable String lightsail;
        private @Nullable String location;
        private @Nullable String lookoutequipment;
        private @Nullable String lookoutforvision;
        private @Nullable String lookoutmetrics;
        private @Nullable String machinelearning;
        private @Nullable String macie;
        private @Nullable String macie2;
        private @Nullable String managedblockchain;
        private @Nullable String marketplacecatalog;
        private @Nullable String marketplacecommerceanalytics;
        private @Nullable String marketplaceentitlement;
        private @Nullable String marketplaceentitlementservice;
        private @Nullable String marketplacemetering;
        private @Nullable String mediaconnect;
        private @Nullable String mediaconvert;
        private @Nullable String medialive;
        private @Nullable String mediapackage;
        private @Nullable String mediapackagevod;
        private @Nullable String mediastore;
        private @Nullable String mediastoredata;
        private @Nullable String mediatailor;
        private @Nullable String memorydb;
        private @Nullable String mgn;
        private @Nullable String migrationhub;
        private @Nullable String migrationhubconfig;
        private @Nullable String mobile;
        private @Nullable String mobileanalytics;
        private @Nullable String mq;
        private @Nullable String mturk;
        private @Nullable String mwaa;
        private @Nullable String neptune;
        private @Nullable String networkfirewall;
        private @Nullable String networkmanager;
        private @Nullable String nimblestudio;
        private @Nullable String opsworks;
        private @Nullable String opsworkscm;
        private @Nullable String organizations;
        private @Nullable String outposts;
        private @Nullable String personalize;
        private @Nullable String personalizeevents;
        private @Nullable String personalizeruntime;
        private @Nullable String pi;
        private @Nullable String pinpoint;
        private @Nullable String pinpointemail;
        private @Nullable String pinpointsmsvoice;
        private @Nullable String polly;
        private @Nullable String pricing;
        private @Nullable String prometheus;
        private @Nullable String prometheusservice;
        private @Nullable String proton;
        private @Nullable String qldb;
        private @Nullable String qldbsession;
        private @Nullable String quicksight;
        private @Nullable String ram;
        private @Nullable String rds;
        private @Nullable String rdsdata;
        private @Nullable String rdsdataservice;
        private @Nullable String redshift;
        private @Nullable String redshiftdata;
        private @Nullable String rekognition;
        private @Nullable String resourcegroups;
        private @Nullable String resourcegroupstagging;
        private @Nullable String resourcegroupstaggingapi;
        private @Nullable String robomaker;
        private @Nullable String route53;
        private @Nullable String route53domains;
        private @Nullable String route53recoverycontrolconfig;
        private @Nullable String route53recoveryreadiness;
        private @Nullable String route53resolver;
        private @Nullable String s3;
        private @Nullable String s3control;
        private @Nullable String s3outposts;
        private @Nullable String sagemaker;
        private @Nullable String sagemakeredgemanager;
        private @Nullable String sagemakerfeaturestoreruntime;
        private @Nullable String sagemakerruntime;
        private @Nullable String savingsplans;
        private @Nullable String schemas;
        private @Nullable String sdb;
        private @Nullable String secretsmanager;
        private @Nullable String securityhub;
        private @Nullable String serverlessapplicationrepository;
        private @Nullable String serverlessapprepo;
        private @Nullable String serverlessrepo;
        private @Nullable String servicecatalog;
        private @Nullable String servicediscovery;
        private @Nullable String servicequotas;
        private @Nullable String ses;
        private @Nullable String sesv2;
        private @Nullable String sfn;
        private @Nullable String shield;
        private @Nullable String signer;
        private @Nullable String simpledb;
        private @Nullable String sms;
        private @Nullable String snowball;
        private @Nullable String sns;
        private @Nullable String sqs;
        private @Nullable String ssm;
        private @Nullable String ssmcontacts;
        private @Nullable String ssmincidents;
        private @Nullable String sso;
        private @Nullable String ssoadmin;
        private @Nullable String ssooidc;
        private @Nullable String stepfunctions;
        private @Nullable String storagegateway;
        private @Nullable String sts;
        private @Nullable String support;
        private @Nullable String swf;
        private @Nullable String synthetics;
        private @Nullable String textract;
        private @Nullable String timestreamquery;
        private @Nullable String timestreamwrite;
        private @Nullable String transcribe;
        private @Nullable String transcribeservice;
        private @Nullable String transcribestreaming;
        private @Nullable String transcribestreamingservice;
        private @Nullable String transfer;
        private @Nullable String translate;
        private @Nullable String waf;
        private @Nullable String wafregional;
        private @Nullable String wafv2;
        private @Nullable String wellarchitected;
        private @Nullable String workdocs;
        private @Nullable String worklink;
        private @Nullable String workmail;
        private @Nullable String workmailmessageflow;
        private @Nullable String workspaces;
        private @Nullable String xray;

        public Builder() {
    	      // Empty
        }

        public Builder(Endpoints defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessanalyzer = defaults.accessanalyzer;
    	      this.account = defaults.account;
    	      this.acm = defaults.acm;
    	      this.acmpca = defaults.acmpca;
    	      this.alexaforbusiness = defaults.alexaforbusiness;
    	      this.amp = defaults.amp;
    	      this.amplify = defaults.amplify;
    	      this.amplifybackend = defaults.amplifybackend;
    	      this.apigateway = defaults.apigateway;
    	      this.apigatewayv2 = defaults.apigatewayv2;
    	      this.appautoscaling = defaults.appautoscaling;
    	      this.appconfig = defaults.appconfig;
    	      this.appflow = defaults.appflow;
    	      this.appintegrations = defaults.appintegrations;
    	      this.appintegrationsservice = defaults.appintegrationsservice;
    	      this.applicationautoscaling = defaults.applicationautoscaling;
    	      this.applicationcostprofiler = defaults.applicationcostprofiler;
    	      this.applicationdiscovery = defaults.applicationdiscovery;
    	      this.applicationdiscoveryservice = defaults.applicationdiscoveryservice;
    	      this.applicationinsights = defaults.applicationinsights;
    	      this.appmesh = defaults.appmesh;
    	      this.appregistry = defaults.appregistry;
    	      this.apprunner = defaults.apprunner;
    	      this.appstream = defaults.appstream;
    	      this.appsync = defaults.appsync;
    	      this.athena = defaults.athena;
    	      this.auditmanager = defaults.auditmanager;
    	      this.augmentedairuntime = defaults.augmentedairuntime;
    	      this.autoscaling = defaults.autoscaling;
    	      this.autoscalingplans = defaults.autoscalingplans;
    	      this.backup = defaults.backup;
    	      this.batch = defaults.batch;
    	      this.braket = defaults.braket;
    	      this.budgets = defaults.budgets;
    	      this.chime = defaults.chime;
    	      this.cloud9 = defaults.cloud9;
    	      this.cloudcontrol = defaults.cloudcontrol;
    	      this.cloudcontrolapi = defaults.cloudcontrolapi;
    	      this.clouddirectory = defaults.clouddirectory;
    	      this.cloudformation = defaults.cloudformation;
    	      this.cloudfront = defaults.cloudfront;
    	      this.cloudhsm = defaults.cloudhsm;
    	      this.cloudhsmv2 = defaults.cloudhsmv2;
    	      this.cloudsearch = defaults.cloudsearch;
    	      this.cloudsearchdomain = defaults.cloudsearchdomain;
    	      this.cloudtrail = defaults.cloudtrail;
    	      this.cloudwatch = defaults.cloudwatch;
    	      this.cloudwatchevents = defaults.cloudwatchevents;
    	      this.cloudwatchlogs = defaults.cloudwatchlogs;
    	      this.codeartifact = defaults.codeartifact;
    	      this.codebuild = defaults.codebuild;
    	      this.codecommit = defaults.codecommit;
    	      this.codedeploy = defaults.codedeploy;
    	      this.codeguruprofiler = defaults.codeguruprofiler;
    	      this.codegurureviewer = defaults.codegurureviewer;
    	      this.codepipeline = defaults.codepipeline;
    	      this.codestar = defaults.codestar;
    	      this.codestarconnections = defaults.codestarconnections;
    	      this.codestarnotifications = defaults.codestarnotifications;
    	      this.cognitoidentity = defaults.cognitoidentity;
    	      this.cognitoidentityprovider = defaults.cognitoidentityprovider;
    	      this.cognitoidp = defaults.cognitoidp;
    	      this.cognitosync = defaults.cognitosync;
    	      this.comprehend = defaults.comprehend;
    	      this.comprehendmedical = defaults.comprehendmedical;
    	      this.config = defaults.config;
    	      this.configservice = defaults.configservice;
    	      this.connect = defaults.connect;
    	      this.connectcontactlens = defaults.connectcontactlens;
    	      this.connectparticipant = defaults.connectparticipant;
    	      this.costandusagereportservice = defaults.costandusagereportservice;
    	      this.costexplorer = defaults.costexplorer;
    	      this.cur = defaults.cur;
    	      this.databasemigration = defaults.databasemigration;
    	      this.databasemigrationservice = defaults.databasemigrationservice;
    	      this.dataexchange = defaults.dataexchange;
    	      this.datapipeline = defaults.datapipeline;
    	      this.datasync = defaults.datasync;
    	      this.dax = defaults.dax;
    	      this.detective = defaults.detective;
    	      this.devicefarm = defaults.devicefarm;
    	      this.devopsguru = defaults.devopsguru;
    	      this.directconnect = defaults.directconnect;
    	      this.dlm = defaults.dlm;
    	      this.dms = defaults.dms;
    	      this.docdb = defaults.docdb;
    	      this.ds = defaults.ds;
    	      this.dynamodb = defaults.dynamodb;
    	      this.dynamodbstreams = defaults.dynamodbstreams;
    	      this.ec2 = defaults.ec2;
    	      this.ec2instanceconnect = defaults.ec2instanceconnect;
    	      this.ecr = defaults.ecr;
    	      this.ecrpublic = defaults.ecrpublic;
    	      this.ecs = defaults.ecs;
    	      this.efs = defaults.efs;
    	      this.eks = defaults.eks;
    	      this.elasticache = defaults.elasticache;
    	      this.elasticbeanstalk = defaults.elasticbeanstalk;
    	      this.elasticinference = defaults.elasticinference;
    	      this.elasticsearch = defaults.elasticsearch;
    	      this.elasticsearchservice = defaults.elasticsearchservice;
    	      this.elastictranscoder = defaults.elastictranscoder;
    	      this.elb = defaults.elb;
    	      this.elbv2 = defaults.elbv2;
    	      this.emr = defaults.emr;
    	      this.emrcontainers = defaults.emrcontainers;
    	      this.es = defaults.es;
    	      this.eventbridge = defaults.eventbridge;
    	      this.events = defaults.events;
    	      this.finspace = defaults.finspace;
    	      this.finspacedata = defaults.finspacedata;
    	      this.firehose = defaults.firehose;
    	      this.fis = defaults.fis;
    	      this.fms = defaults.fms;
    	      this.forecast = defaults.forecast;
    	      this.forecastquery = defaults.forecastquery;
    	      this.forecastqueryservice = defaults.forecastqueryservice;
    	      this.forecastservice = defaults.forecastservice;
    	      this.frauddetector = defaults.frauddetector;
    	      this.fsx = defaults.fsx;
    	      this.gamelift = defaults.gamelift;
    	      this.glacier = defaults.glacier;
    	      this.globalaccelerator = defaults.globalaccelerator;
    	      this.glue = defaults.glue;
    	      this.gluedatabrew = defaults.gluedatabrew;
    	      this.greengrass = defaults.greengrass;
    	      this.greengrassv2 = defaults.greengrassv2;
    	      this.groundstation = defaults.groundstation;
    	      this.guardduty = defaults.guardduty;
    	      this.health = defaults.health;
    	      this.healthlake = defaults.healthlake;
    	      this.honeycode = defaults.honeycode;
    	      this.iam = defaults.iam;
    	      this.identitystore = defaults.identitystore;
    	      this.imagebuilder = defaults.imagebuilder;
    	      this.inspector = defaults.inspector;
    	      this.iot = defaults.iot;
    	      this.iot1clickdevices = defaults.iot1clickdevices;
    	      this.iot1clickdevicesservice = defaults.iot1clickdevicesservice;
    	      this.iot1clickprojects = defaults.iot1clickprojects;
    	      this.iotanalytics = defaults.iotanalytics;
    	      this.iotdataplane = defaults.iotdataplane;
    	      this.iotdeviceadvisor = defaults.iotdeviceadvisor;
    	      this.iotevents = defaults.iotevents;
    	      this.ioteventsdata = defaults.ioteventsdata;
    	      this.iotfleethub = defaults.iotfleethub;
    	      this.iotjobsdataplane = defaults.iotjobsdataplane;
    	      this.iotsecuretunneling = defaults.iotsecuretunneling;
    	      this.iotsitewise = defaults.iotsitewise;
    	      this.iotthingsgraph = defaults.iotthingsgraph;
    	      this.iotwireless = defaults.iotwireless;
    	      this.kafka = defaults.kafka;
    	      this.kafkaconnect = defaults.kafkaconnect;
    	      this.kendra = defaults.kendra;
    	      this.kinesis = defaults.kinesis;
    	      this.kinesisanalytics = defaults.kinesisanalytics;
    	      this.kinesisanalyticsv2 = defaults.kinesisanalyticsv2;
    	      this.kinesisvideo = defaults.kinesisvideo;
    	      this.kinesisvideoarchivedmedia = defaults.kinesisvideoarchivedmedia;
    	      this.kinesisvideomedia = defaults.kinesisvideomedia;
    	      this.kinesisvideosignalingchannels = defaults.kinesisvideosignalingchannels;
    	      this.kms = defaults.kms;
    	      this.lakeformation = defaults.lakeformation;
    	      this.lambda = defaults.lambda;
    	      this.lexmodelbuilding = defaults.lexmodelbuilding;
    	      this.lexmodelbuildingservice = defaults.lexmodelbuildingservice;
    	      this.lexmodels = defaults.lexmodels;
    	      this.lexmodelsv2 = defaults.lexmodelsv2;
    	      this.lexruntime = defaults.lexruntime;
    	      this.lexruntimeservice = defaults.lexruntimeservice;
    	      this.lexruntimev2 = defaults.lexruntimev2;
    	      this.licensemanager = defaults.licensemanager;
    	      this.lightsail = defaults.lightsail;
    	      this.location = defaults.location;
    	      this.lookoutequipment = defaults.lookoutequipment;
    	      this.lookoutforvision = defaults.lookoutforvision;
    	      this.lookoutmetrics = defaults.lookoutmetrics;
    	      this.machinelearning = defaults.machinelearning;
    	      this.macie = defaults.macie;
    	      this.macie2 = defaults.macie2;
    	      this.managedblockchain = defaults.managedblockchain;
    	      this.marketplacecatalog = defaults.marketplacecatalog;
    	      this.marketplacecommerceanalytics = defaults.marketplacecommerceanalytics;
    	      this.marketplaceentitlement = defaults.marketplaceentitlement;
    	      this.marketplaceentitlementservice = defaults.marketplaceentitlementservice;
    	      this.marketplacemetering = defaults.marketplacemetering;
    	      this.mediaconnect = defaults.mediaconnect;
    	      this.mediaconvert = defaults.mediaconvert;
    	      this.medialive = defaults.medialive;
    	      this.mediapackage = defaults.mediapackage;
    	      this.mediapackagevod = defaults.mediapackagevod;
    	      this.mediastore = defaults.mediastore;
    	      this.mediastoredata = defaults.mediastoredata;
    	      this.mediatailor = defaults.mediatailor;
    	      this.memorydb = defaults.memorydb;
    	      this.mgn = defaults.mgn;
    	      this.migrationhub = defaults.migrationhub;
    	      this.migrationhubconfig = defaults.migrationhubconfig;
    	      this.mobile = defaults.mobile;
    	      this.mobileanalytics = defaults.mobileanalytics;
    	      this.mq = defaults.mq;
    	      this.mturk = defaults.mturk;
    	      this.mwaa = defaults.mwaa;
    	      this.neptune = defaults.neptune;
    	      this.networkfirewall = defaults.networkfirewall;
    	      this.networkmanager = defaults.networkmanager;
    	      this.nimblestudio = defaults.nimblestudio;
    	      this.opsworks = defaults.opsworks;
    	      this.opsworkscm = defaults.opsworkscm;
    	      this.organizations = defaults.organizations;
    	      this.outposts = defaults.outposts;
    	      this.personalize = defaults.personalize;
    	      this.personalizeevents = defaults.personalizeevents;
    	      this.personalizeruntime = defaults.personalizeruntime;
    	      this.pi = defaults.pi;
    	      this.pinpoint = defaults.pinpoint;
    	      this.pinpointemail = defaults.pinpointemail;
    	      this.pinpointsmsvoice = defaults.pinpointsmsvoice;
    	      this.polly = defaults.polly;
    	      this.pricing = defaults.pricing;
    	      this.prometheus = defaults.prometheus;
    	      this.prometheusservice = defaults.prometheusservice;
    	      this.proton = defaults.proton;
    	      this.qldb = defaults.qldb;
    	      this.qldbsession = defaults.qldbsession;
    	      this.quicksight = defaults.quicksight;
    	      this.ram = defaults.ram;
    	      this.rds = defaults.rds;
    	      this.rdsdata = defaults.rdsdata;
    	      this.rdsdataservice = defaults.rdsdataservice;
    	      this.redshift = defaults.redshift;
    	      this.redshiftdata = defaults.redshiftdata;
    	      this.rekognition = defaults.rekognition;
    	      this.resourcegroups = defaults.resourcegroups;
    	      this.resourcegroupstagging = defaults.resourcegroupstagging;
    	      this.resourcegroupstaggingapi = defaults.resourcegroupstaggingapi;
    	      this.robomaker = defaults.robomaker;
    	      this.route53 = defaults.route53;
    	      this.route53domains = defaults.route53domains;
    	      this.route53recoverycontrolconfig = defaults.route53recoverycontrolconfig;
    	      this.route53recoveryreadiness = defaults.route53recoveryreadiness;
    	      this.route53resolver = defaults.route53resolver;
    	      this.s3 = defaults.s3;
    	      this.s3control = defaults.s3control;
    	      this.s3outposts = defaults.s3outposts;
    	      this.sagemaker = defaults.sagemaker;
    	      this.sagemakeredgemanager = defaults.sagemakeredgemanager;
    	      this.sagemakerfeaturestoreruntime = defaults.sagemakerfeaturestoreruntime;
    	      this.sagemakerruntime = defaults.sagemakerruntime;
    	      this.savingsplans = defaults.savingsplans;
    	      this.schemas = defaults.schemas;
    	      this.sdb = defaults.sdb;
    	      this.secretsmanager = defaults.secretsmanager;
    	      this.securityhub = defaults.securityhub;
    	      this.serverlessapplicationrepository = defaults.serverlessapplicationrepository;
    	      this.serverlessapprepo = defaults.serverlessapprepo;
    	      this.serverlessrepo = defaults.serverlessrepo;
    	      this.servicecatalog = defaults.servicecatalog;
    	      this.servicediscovery = defaults.servicediscovery;
    	      this.servicequotas = defaults.servicequotas;
    	      this.ses = defaults.ses;
    	      this.sesv2 = defaults.sesv2;
    	      this.sfn = defaults.sfn;
    	      this.shield = defaults.shield;
    	      this.signer = defaults.signer;
    	      this.simpledb = defaults.simpledb;
    	      this.sms = defaults.sms;
    	      this.snowball = defaults.snowball;
    	      this.sns = defaults.sns;
    	      this.sqs = defaults.sqs;
    	      this.ssm = defaults.ssm;
    	      this.ssmcontacts = defaults.ssmcontacts;
    	      this.ssmincidents = defaults.ssmincidents;
    	      this.sso = defaults.sso;
    	      this.ssoadmin = defaults.ssoadmin;
    	      this.ssooidc = defaults.ssooidc;
    	      this.stepfunctions = defaults.stepfunctions;
    	      this.storagegateway = defaults.storagegateway;
    	      this.sts = defaults.sts;
    	      this.support = defaults.support;
    	      this.swf = defaults.swf;
    	      this.synthetics = defaults.synthetics;
    	      this.textract = defaults.textract;
    	      this.timestreamquery = defaults.timestreamquery;
    	      this.timestreamwrite = defaults.timestreamwrite;
    	      this.transcribe = defaults.transcribe;
    	      this.transcribeservice = defaults.transcribeservice;
    	      this.transcribestreaming = defaults.transcribestreaming;
    	      this.transcribestreamingservice = defaults.transcribestreamingservice;
    	      this.transfer = defaults.transfer;
    	      this.translate = defaults.translate;
    	      this.waf = defaults.waf;
    	      this.wafregional = defaults.wafregional;
    	      this.wafv2 = defaults.wafv2;
    	      this.wellarchitected = defaults.wellarchitected;
    	      this.workdocs = defaults.workdocs;
    	      this.worklink = defaults.worklink;
    	      this.workmail = defaults.workmail;
    	      this.workmailmessageflow = defaults.workmailmessageflow;
    	      this.workspaces = defaults.workspaces;
    	      this.xray = defaults.xray;
        }

        public Builder accessanalyzer(@Nullable String accessanalyzer) {
            this.accessanalyzer = accessanalyzer;
            return this;
        }
        public Builder account(@Nullable String account) {
            this.account = account;
            return this;
        }
        public Builder acm(@Nullable String acm) {
            this.acm = acm;
            return this;
        }
        public Builder acmpca(@Nullable String acmpca) {
            this.acmpca = acmpca;
            return this;
        }
        public Builder alexaforbusiness(@Nullable String alexaforbusiness) {
            this.alexaforbusiness = alexaforbusiness;
            return this;
        }
        public Builder amp(@Nullable String amp) {
            this.amp = amp;
            return this;
        }
        public Builder amplify(@Nullable String amplify) {
            this.amplify = amplify;
            return this;
        }
        public Builder amplifybackend(@Nullable String amplifybackend) {
            this.amplifybackend = amplifybackend;
            return this;
        }
        public Builder apigateway(@Nullable String apigateway) {
            this.apigateway = apigateway;
            return this;
        }
        public Builder apigatewayv2(@Nullable String apigatewayv2) {
            this.apigatewayv2 = apigatewayv2;
            return this;
        }
        public Builder appautoscaling(@Nullable String appautoscaling) {
            this.appautoscaling = appautoscaling;
            return this;
        }
        public Builder appconfig(@Nullable String appconfig) {
            this.appconfig = appconfig;
            return this;
        }
        public Builder appflow(@Nullable String appflow) {
            this.appflow = appflow;
            return this;
        }
        public Builder appintegrations(@Nullable String appintegrations) {
            this.appintegrations = appintegrations;
            return this;
        }
        public Builder appintegrationsservice(@Nullable String appintegrationsservice) {
            this.appintegrationsservice = appintegrationsservice;
            return this;
        }
        public Builder applicationautoscaling(@Nullable String applicationautoscaling) {
            this.applicationautoscaling = applicationautoscaling;
            return this;
        }
        public Builder applicationcostprofiler(@Nullable String applicationcostprofiler) {
            this.applicationcostprofiler = applicationcostprofiler;
            return this;
        }
        public Builder applicationdiscovery(@Nullable String applicationdiscovery) {
            this.applicationdiscovery = applicationdiscovery;
            return this;
        }
        public Builder applicationdiscoveryservice(@Nullable String applicationdiscoveryservice) {
            this.applicationdiscoveryservice = applicationdiscoveryservice;
            return this;
        }
        public Builder applicationinsights(@Nullable String applicationinsights) {
            this.applicationinsights = applicationinsights;
            return this;
        }
        public Builder appmesh(@Nullable String appmesh) {
            this.appmesh = appmesh;
            return this;
        }
        public Builder appregistry(@Nullable String appregistry) {
            this.appregistry = appregistry;
            return this;
        }
        public Builder apprunner(@Nullable String apprunner) {
            this.apprunner = apprunner;
            return this;
        }
        public Builder appstream(@Nullable String appstream) {
            this.appstream = appstream;
            return this;
        }
        public Builder appsync(@Nullable String appsync) {
            this.appsync = appsync;
            return this;
        }
        public Builder athena(@Nullable String athena) {
            this.athena = athena;
            return this;
        }
        public Builder auditmanager(@Nullable String auditmanager) {
            this.auditmanager = auditmanager;
            return this;
        }
        public Builder augmentedairuntime(@Nullable String augmentedairuntime) {
            this.augmentedairuntime = augmentedairuntime;
            return this;
        }
        public Builder autoscaling(@Nullable String autoscaling) {
            this.autoscaling = autoscaling;
            return this;
        }
        public Builder autoscalingplans(@Nullable String autoscalingplans) {
            this.autoscalingplans = autoscalingplans;
            return this;
        }
        public Builder backup(@Nullable String backup) {
            this.backup = backup;
            return this;
        }
        public Builder batch(@Nullable String batch) {
            this.batch = batch;
            return this;
        }
        public Builder braket(@Nullable String braket) {
            this.braket = braket;
            return this;
        }
        public Builder budgets(@Nullable String budgets) {
            this.budgets = budgets;
            return this;
        }
        public Builder chime(@Nullable String chime) {
            this.chime = chime;
            return this;
        }
        public Builder cloud9(@Nullable String cloud9) {
            this.cloud9 = cloud9;
            return this;
        }
        public Builder cloudcontrol(@Nullable String cloudcontrol) {
            this.cloudcontrol = cloudcontrol;
            return this;
        }
        public Builder cloudcontrolapi(@Nullable String cloudcontrolapi) {
            this.cloudcontrolapi = cloudcontrolapi;
            return this;
        }
        public Builder clouddirectory(@Nullable String clouddirectory) {
            this.clouddirectory = clouddirectory;
            return this;
        }
        public Builder cloudformation(@Nullable String cloudformation) {
            this.cloudformation = cloudformation;
            return this;
        }
        public Builder cloudfront(@Nullable String cloudfront) {
            this.cloudfront = cloudfront;
            return this;
        }
        public Builder cloudhsm(@Nullable String cloudhsm) {
            this.cloudhsm = cloudhsm;
            return this;
        }
        public Builder cloudhsmv2(@Nullable String cloudhsmv2) {
            this.cloudhsmv2 = cloudhsmv2;
            return this;
        }
        public Builder cloudsearch(@Nullable String cloudsearch) {
            this.cloudsearch = cloudsearch;
            return this;
        }
        public Builder cloudsearchdomain(@Nullable String cloudsearchdomain) {
            this.cloudsearchdomain = cloudsearchdomain;
            return this;
        }
        public Builder cloudtrail(@Nullable String cloudtrail) {
            this.cloudtrail = cloudtrail;
            return this;
        }
        public Builder cloudwatch(@Nullable String cloudwatch) {
            this.cloudwatch = cloudwatch;
            return this;
        }
        public Builder cloudwatchevents(@Nullable String cloudwatchevents) {
            this.cloudwatchevents = cloudwatchevents;
            return this;
        }
        public Builder cloudwatchlogs(@Nullable String cloudwatchlogs) {
            this.cloudwatchlogs = cloudwatchlogs;
            return this;
        }
        public Builder codeartifact(@Nullable String codeartifact) {
            this.codeartifact = codeartifact;
            return this;
        }
        public Builder codebuild(@Nullable String codebuild) {
            this.codebuild = codebuild;
            return this;
        }
        public Builder codecommit(@Nullable String codecommit) {
            this.codecommit = codecommit;
            return this;
        }
        public Builder codedeploy(@Nullable String codedeploy) {
            this.codedeploy = codedeploy;
            return this;
        }
        public Builder codeguruprofiler(@Nullable String codeguruprofiler) {
            this.codeguruprofiler = codeguruprofiler;
            return this;
        }
        public Builder codegurureviewer(@Nullable String codegurureviewer) {
            this.codegurureviewer = codegurureviewer;
            return this;
        }
        public Builder codepipeline(@Nullable String codepipeline) {
            this.codepipeline = codepipeline;
            return this;
        }
        public Builder codestar(@Nullable String codestar) {
            this.codestar = codestar;
            return this;
        }
        public Builder codestarconnections(@Nullable String codestarconnections) {
            this.codestarconnections = codestarconnections;
            return this;
        }
        public Builder codestarnotifications(@Nullable String codestarnotifications) {
            this.codestarnotifications = codestarnotifications;
            return this;
        }
        public Builder cognitoidentity(@Nullable String cognitoidentity) {
            this.cognitoidentity = cognitoidentity;
            return this;
        }
        public Builder cognitoidentityprovider(@Nullable String cognitoidentityprovider) {
            this.cognitoidentityprovider = cognitoidentityprovider;
            return this;
        }
        public Builder cognitoidp(@Nullable String cognitoidp) {
            this.cognitoidp = cognitoidp;
            return this;
        }
        public Builder cognitosync(@Nullable String cognitosync) {
            this.cognitosync = cognitosync;
            return this;
        }
        public Builder comprehend(@Nullable String comprehend) {
            this.comprehend = comprehend;
            return this;
        }
        public Builder comprehendmedical(@Nullable String comprehendmedical) {
            this.comprehendmedical = comprehendmedical;
            return this;
        }
        public Builder config(@Nullable String config) {
            this.config = config;
            return this;
        }
        public Builder configservice(@Nullable String configservice) {
            this.configservice = configservice;
            return this;
        }
        public Builder connect(@Nullable String connect) {
            this.connect = connect;
            return this;
        }
        public Builder connectcontactlens(@Nullable String connectcontactlens) {
            this.connectcontactlens = connectcontactlens;
            return this;
        }
        public Builder connectparticipant(@Nullable String connectparticipant) {
            this.connectparticipant = connectparticipant;
            return this;
        }
        public Builder costandusagereportservice(@Nullable String costandusagereportservice) {
            this.costandusagereportservice = costandusagereportservice;
            return this;
        }
        public Builder costexplorer(@Nullable String costexplorer) {
            this.costexplorer = costexplorer;
            return this;
        }
        public Builder cur(@Nullable String cur) {
            this.cur = cur;
            return this;
        }
        public Builder databasemigration(@Nullable String databasemigration) {
            this.databasemigration = databasemigration;
            return this;
        }
        public Builder databasemigrationservice(@Nullable String databasemigrationservice) {
            this.databasemigrationservice = databasemigrationservice;
            return this;
        }
        public Builder dataexchange(@Nullable String dataexchange) {
            this.dataexchange = dataexchange;
            return this;
        }
        public Builder datapipeline(@Nullable String datapipeline) {
            this.datapipeline = datapipeline;
            return this;
        }
        public Builder datasync(@Nullable String datasync) {
            this.datasync = datasync;
            return this;
        }
        public Builder dax(@Nullable String dax) {
            this.dax = dax;
            return this;
        }
        public Builder detective(@Nullable String detective) {
            this.detective = detective;
            return this;
        }
        public Builder devicefarm(@Nullable String devicefarm) {
            this.devicefarm = devicefarm;
            return this;
        }
        public Builder devopsguru(@Nullable String devopsguru) {
            this.devopsguru = devopsguru;
            return this;
        }
        public Builder directconnect(@Nullable String directconnect) {
            this.directconnect = directconnect;
            return this;
        }
        public Builder dlm(@Nullable String dlm) {
            this.dlm = dlm;
            return this;
        }
        public Builder dms(@Nullable String dms) {
            this.dms = dms;
            return this;
        }
        public Builder docdb(@Nullable String docdb) {
            this.docdb = docdb;
            return this;
        }
        public Builder ds(@Nullable String ds) {
            this.ds = ds;
            return this;
        }
        public Builder dynamodb(@Nullable String dynamodb) {
            this.dynamodb = dynamodb;
            return this;
        }
        public Builder dynamodbstreams(@Nullable String dynamodbstreams) {
            this.dynamodbstreams = dynamodbstreams;
            return this;
        }
        public Builder ec2(@Nullable String ec2) {
            this.ec2 = ec2;
            return this;
        }
        public Builder ec2instanceconnect(@Nullable String ec2instanceconnect) {
            this.ec2instanceconnect = ec2instanceconnect;
            return this;
        }
        public Builder ecr(@Nullable String ecr) {
            this.ecr = ecr;
            return this;
        }
        public Builder ecrpublic(@Nullable String ecrpublic) {
            this.ecrpublic = ecrpublic;
            return this;
        }
        public Builder ecs(@Nullable String ecs) {
            this.ecs = ecs;
            return this;
        }
        public Builder efs(@Nullable String efs) {
            this.efs = efs;
            return this;
        }
        public Builder eks(@Nullable String eks) {
            this.eks = eks;
            return this;
        }
        public Builder elasticache(@Nullable String elasticache) {
            this.elasticache = elasticache;
            return this;
        }
        public Builder elasticbeanstalk(@Nullable String elasticbeanstalk) {
            this.elasticbeanstalk = elasticbeanstalk;
            return this;
        }
        public Builder elasticinference(@Nullable String elasticinference) {
            this.elasticinference = elasticinference;
            return this;
        }
        public Builder elasticsearch(@Nullable String elasticsearch) {
            this.elasticsearch = elasticsearch;
            return this;
        }
        public Builder elasticsearchservice(@Nullable String elasticsearchservice) {
            this.elasticsearchservice = elasticsearchservice;
            return this;
        }
        public Builder elastictranscoder(@Nullable String elastictranscoder) {
            this.elastictranscoder = elastictranscoder;
            return this;
        }
        public Builder elb(@Nullable String elb) {
            this.elb = elb;
            return this;
        }
        public Builder elbv2(@Nullable String elbv2) {
            this.elbv2 = elbv2;
            return this;
        }
        public Builder emr(@Nullable String emr) {
            this.emr = emr;
            return this;
        }
        public Builder emrcontainers(@Nullable String emrcontainers) {
            this.emrcontainers = emrcontainers;
            return this;
        }
        public Builder es(@Nullable String es) {
            this.es = es;
            return this;
        }
        public Builder eventbridge(@Nullable String eventbridge) {
            this.eventbridge = eventbridge;
            return this;
        }
        public Builder events(@Nullable String events) {
            this.events = events;
            return this;
        }
        public Builder finspace(@Nullable String finspace) {
            this.finspace = finspace;
            return this;
        }
        public Builder finspacedata(@Nullable String finspacedata) {
            this.finspacedata = finspacedata;
            return this;
        }
        public Builder firehose(@Nullable String firehose) {
            this.firehose = firehose;
            return this;
        }
        public Builder fis(@Nullable String fis) {
            this.fis = fis;
            return this;
        }
        public Builder fms(@Nullable String fms) {
            this.fms = fms;
            return this;
        }
        public Builder forecast(@Nullable String forecast) {
            this.forecast = forecast;
            return this;
        }
        public Builder forecastquery(@Nullable String forecastquery) {
            this.forecastquery = forecastquery;
            return this;
        }
        public Builder forecastqueryservice(@Nullable String forecastqueryservice) {
            this.forecastqueryservice = forecastqueryservice;
            return this;
        }
        public Builder forecastservice(@Nullable String forecastservice) {
            this.forecastservice = forecastservice;
            return this;
        }
        public Builder frauddetector(@Nullable String frauddetector) {
            this.frauddetector = frauddetector;
            return this;
        }
        public Builder fsx(@Nullable String fsx) {
            this.fsx = fsx;
            return this;
        }
        public Builder gamelift(@Nullable String gamelift) {
            this.gamelift = gamelift;
            return this;
        }
        public Builder glacier(@Nullable String glacier) {
            this.glacier = glacier;
            return this;
        }
        public Builder globalaccelerator(@Nullable String globalaccelerator) {
            this.globalaccelerator = globalaccelerator;
            return this;
        }
        public Builder glue(@Nullable String glue) {
            this.glue = glue;
            return this;
        }
        public Builder gluedatabrew(@Nullable String gluedatabrew) {
            this.gluedatabrew = gluedatabrew;
            return this;
        }
        public Builder greengrass(@Nullable String greengrass) {
            this.greengrass = greengrass;
            return this;
        }
        public Builder greengrassv2(@Nullable String greengrassv2) {
            this.greengrassv2 = greengrassv2;
            return this;
        }
        public Builder groundstation(@Nullable String groundstation) {
            this.groundstation = groundstation;
            return this;
        }
        public Builder guardduty(@Nullable String guardduty) {
            this.guardduty = guardduty;
            return this;
        }
        public Builder health(@Nullable String health) {
            this.health = health;
            return this;
        }
        public Builder healthlake(@Nullable String healthlake) {
            this.healthlake = healthlake;
            return this;
        }
        public Builder honeycode(@Nullable String honeycode) {
            this.honeycode = honeycode;
            return this;
        }
        public Builder iam(@Nullable String iam) {
            this.iam = iam;
            return this;
        }
        public Builder identitystore(@Nullable String identitystore) {
            this.identitystore = identitystore;
            return this;
        }
        public Builder imagebuilder(@Nullable String imagebuilder) {
            this.imagebuilder = imagebuilder;
            return this;
        }
        public Builder inspector(@Nullable String inspector) {
            this.inspector = inspector;
            return this;
        }
        public Builder iot(@Nullable String iot) {
            this.iot = iot;
            return this;
        }
        public Builder iot1clickdevices(@Nullable String iot1clickdevices) {
            this.iot1clickdevices = iot1clickdevices;
            return this;
        }
        public Builder iot1clickdevicesservice(@Nullable String iot1clickdevicesservice) {
            this.iot1clickdevicesservice = iot1clickdevicesservice;
            return this;
        }
        public Builder iot1clickprojects(@Nullable String iot1clickprojects) {
            this.iot1clickprojects = iot1clickprojects;
            return this;
        }
        public Builder iotanalytics(@Nullable String iotanalytics) {
            this.iotanalytics = iotanalytics;
            return this;
        }
        public Builder iotdataplane(@Nullable String iotdataplane) {
            this.iotdataplane = iotdataplane;
            return this;
        }
        public Builder iotdeviceadvisor(@Nullable String iotdeviceadvisor) {
            this.iotdeviceadvisor = iotdeviceadvisor;
            return this;
        }
        public Builder iotevents(@Nullable String iotevents) {
            this.iotevents = iotevents;
            return this;
        }
        public Builder ioteventsdata(@Nullable String ioteventsdata) {
            this.ioteventsdata = ioteventsdata;
            return this;
        }
        public Builder iotfleethub(@Nullable String iotfleethub) {
            this.iotfleethub = iotfleethub;
            return this;
        }
        public Builder iotjobsdataplane(@Nullable String iotjobsdataplane) {
            this.iotjobsdataplane = iotjobsdataplane;
            return this;
        }
        public Builder iotsecuretunneling(@Nullable String iotsecuretunneling) {
            this.iotsecuretunneling = iotsecuretunneling;
            return this;
        }
        public Builder iotsitewise(@Nullable String iotsitewise) {
            this.iotsitewise = iotsitewise;
            return this;
        }
        public Builder iotthingsgraph(@Nullable String iotthingsgraph) {
            this.iotthingsgraph = iotthingsgraph;
            return this;
        }
        public Builder iotwireless(@Nullable String iotwireless) {
            this.iotwireless = iotwireless;
            return this;
        }
        public Builder kafka(@Nullable String kafka) {
            this.kafka = kafka;
            return this;
        }
        public Builder kafkaconnect(@Nullable String kafkaconnect) {
            this.kafkaconnect = kafkaconnect;
            return this;
        }
        public Builder kendra(@Nullable String kendra) {
            this.kendra = kendra;
            return this;
        }
        public Builder kinesis(@Nullable String kinesis) {
            this.kinesis = kinesis;
            return this;
        }
        public Builder kinesisanalytics(@Nullable String kinesisanalytics) {
            this.kinesisanalytics = kinesisanalytics;
            return this;
        }
        public Builder kinesisanalyticsv2(@Nullable String kinesisanalyticsv2) {
            this.kinesisanalyticsv2 = kinesisanalyticsv2;
            return this;
        }
        public Builder kinesisvideo(@Nullable String kinesisvideo) {
            this.kinesisvideo = kinesisvideo;
            return this;
        }
        public Builder kinesisvideoarchivedmedia(@Nullable String kinesisvideoarchivedmedia) {
            this.kinesisvideoarchivedmedia = kinesisvideoarchivedmedia;
            return this;
        }
        public Builder kinesisvideomedia(@Nullable String kinesisvideomedia) {
            this.kinesisvideomedia = kinesisvideomedia;
            return this;
        }
        public Builder kinesisvideosignalingchannels(@Nullable String kinesisvideosignalingchannels) {
            this.kinesisvideosignalingchannels = kinesisvideosignalingchannels;
            return this;
        }
        public Builder kms(@Nullable String kms) {
            this.kms = kms;
            return this;
        }
        public Builder lakeformation(@Nullable String lakeformation) {
            this.lakeformation = lakeformation;
            return this;
        }
        public Builder lambda(@Nullable String lambda) {
            this.lambda = lambda;
            return this;
        }
        public Builder lexmodelbuilding(@Nullable String lexmodelbuilding) {
            this.lexmodelbuilding = lexmodelbuilding;
            return this;
        }
        public Builder lexmodelbuildingservice(@Nullable String lexmodelbuildingservice) {
            this.lexmodelbuildingservice = lexmodelbuildingservice;
            return this;
        }
        public Builder lexmodels(@Nullable String lexmodels) {
            this.lexmodels = lexmodels;
            return this;
        }
        public Builder lexmodelsv2(@Nullable String lexmodelsv2) {
            this.lexmodelsv2 = lexmodelsv2;
            return this;
        }
        public Builder lexruntime(@Nullable String lexruntime) {
            this.lexruntime = lexruntime;
            return this;
        }
        public Builder lexruntimeservice(@Nullable String lexruntimeservice) {
            this.lexruntimeservice = lexruntimeservice;
            return this;
        }
        public Builder lexruntimev2(@Nullable String lexruntimev2) {
            this.lexruntimev2 = lexruntimev2;
            return this;
        }
        public Builder licensemanager(@Nullable String licensemanager) {
            this.licensemanager = licensemanager;
            return this;
        }
        public Builder lightsail(@Nullable String lightsail) {
            this.lightsail = lightsail;
            return this;
        }
        public Builder location(@Nullable String location) {
            this.location = location;
            return this;
        }
        public Builder lookoutequipment(@Nullable String lookoutequipment) {
            this.lookoutequipment = lookoutequipment;
            return this;
        }
        public Builder lookoutforvision(@Nullable String lookoutforvision) {
            this.lookoutforvision = lookoutforvision;
            return this;
        }
        public Builder lookoutmetrics(@Nullable String lookoutmetrics) {
            this.lookoutmetrics = lookoutmetrics;
            return this;
        }
        public Builder machinelearning(@Nullable String machinelearning) {
            this.machinelearning = machinelearning;
            return this;
        }
        public Builder macie(@Nullable String macie) {
            this.macie = macie;
            return this;
        }
        public Builder macie2(@Nullable String macie2) {
            this.macie2 = macie2;
            return this;
        }
        public Builder managedblockchain(@Nullable String managedblockchain) {
            this.managedblockchain = managedblockchain;
            return this;
        }
        public Builder marketplacecatalog(@Nullable String marketplacecatalog) {
            this.marketplacecatalog = marketplacecatalog;
            return this;
        }
        public Builder marketplacecommerceanalytics(@Nullable String marketplacecommerceanalytics) {
            this.marketplacecommerceanalytics = marketplacecommerceanalytics;
            return this;
        }
        public Builder marketplaceentitlement(@Nullable String marketplaceentitlement) {
            this.marketplaceentitlement = marketplaceentitlement;
            return this;
        }
        public Builder marketplaceentitlementservice(@Nullable String marketplaceentitlementservice) {
            this.marketplaceentitlementservice = marketplaceentitlementservice;
            return this;
        }
        public Builder marketplacemetering(@Nullable String marketplacemetering) {
            this.marketplacemetering = marketplacemetering;
            return this;
        }
        public Builder mediaconnect(@Nullable String mediaconnect) {
            this.mediaconnect = mediaconnect;
            return this;
        }
        public Builder mediaconvert(@Nullable String mediaconvert) {
            this.mediaconvert = mediaconvert;
            return this;
        }
        public Builder medialive(@Nullable String medialive) {
            this.medialive = medialive;
            return this;
        }
        public Builder mediapackage(@Nullable String mediapackage) {
            this.mediapackage = mediapackage;
            return this;
        }
        public Builder mediapackagevod(@Nullable String mediapackagevod) {
            this.mediapackagevod = mediapackagevod;
            return this;
        }
        public Builder mediastore(@Nullable String mediastore) {
            this.mediastore = mediastore;
            return this;
        }
        public Builder mediastoredata(@Nullable String mediastoredata) {
            this.mediastoredata = mediastoredata;
            return this;
        }
        public Builder mediatailor(@Nullable String mediatailor) {
            this.mediatailor = mediatailor;
            return this;
        }
        public Builder memorydb(@Nullable String memorydb) {
            this.memorydb = memorydb;
            return this;
        }
        public Builder mgn(@Nullable String mgn) {
            this.mgn = mgn;
            return this;
        }
        public Builder migrationhub(@Nullable String migrationhub) {
            this.migrationhub = migrationhub;
            return this;
        }
        public Builder migrationhubconfig(@Nullable String migrationhubconfig) {
            this.migrationhubconfig = migrationhubconfig;
            return this;
        }
        public Builder mobile(@Nullable String mobile) {
            this.mobile = mobile;
            return this;
        }
        public Builder mobileanalytics(@Nullable String mobileanalytics) {
            this.mobileanalytics = mobileanalytics;
            return this;
        }
        public Builder mq(@Nullable String mq) {
            this.mq = mq;
            return this;
        }
        public Builder mturk(@Nullable String mturk) {
            this.mturk = mturk;
            return this;
        }
        public Builder mwaa(@Nullable String mwaa) {
            this.mwaa = mwaa;
            return this;
        }
        public Builder neptune(@Nullable String neptune) {
            this.neptune = neptune;
            return this;
        }
        public Builder networkfirewall(@Nullable String networkfirewall) {
            this.networkfirewall = networkfirewall;
            return this;
        }
        public Builder networkmanager(@Nullable String networkmanager) {
            this.networkmanager = networkmanager;
            return this;
        }
        public Builder nimblestudio(@Nullable String nimblestudio) {
            this.nimblestudio = nimblestudio;
            return this;
        }
        public Builder opsworks(@Nullable String opsworks) {
            this.opsworks = opsworks;
            return this;
        }
        public Builder opsworkscm(@Nullable String opsworkscm) {
            this.opsworkscm = opsworkscm;
            return this;
        }
        public Builder organizations(@Nullable String organizations) {
            this.organizations = organizations;
            return this;
        }
        public Builder outposts(@Nullable String outposts) {
            this.outposts = outposts;
            return this;
        }
        public Builder personalize(@Nullable String personalize) {
            this.personalize = personalize;
            return this;
        }
        public Builder personalizeevents(@Nullable String personalizeevents) {
            this.personalizeevents = personalizeevents;
            return this;
        }
        public Builder personalizeruntime(@Nullable String personalizeruntime) {
            this.personalizeruntime = personalizeruntime;
            return this;
        }
        public Builder pi(@Nullable String pi) {
            this.pi = pi;
            return this;
        }
        public Builder pinpoint(@Nullable String pinpoint) {
            this.pinpoint = pinpoint;
            return this;
        }
        public Builder pinpointemail(@Nullable String pinpointemail) {
            this.pinpointemail = pinpointemail;
            return this;
        }
        public Builder pinpointsmsvoice(@Nullable String pinpointsmsvoice) {
            this.pinpointsmsvoice = pinpointsmsvoice;
            return this;
        }
        public Builder polly(@Nullable String polly) {
            this.polly = polly;
            return this;
        }
        public Builder pricing(@Nullable String pricing) {
            this.pricing = pricing;
            return this;
        }
        public Builder prometheus(@Nullable String prometheus) {
            this.prometheus = prometheus;
            return this;
        }
        public Builder prometheusservice(@Nullable String prometheusservice) {
            this.prometheusservice = prometheusservice;
            return this;
        }
        public Builder proton(@Nullable String proton) {
            this.proton = proton;
            return this;
        }
        public Builder qldb(@Nullable String qldb) {
            this.qldb = qldb;
            return this;
        }
        public Builder qldbsession(@Nullable String qldbsession) {
            this.qldbsession = qldbsession;
            return this;
        }
        public Builder quicksight(@Nullable String quicksight) {
            this.quicksight = quicksight;
            return this;
        }
        public Builder ram(@Nullable String ram) {
            this.ram = ram;
            return this;
        }
        public Builder rds(@Nullable String rds) {
            this.rds = rds;
            return this;
        }
        public Builder rdsdata(@Nullable String rdsdata) {
            this.rdsdata = rdsdata;
            return this;
        }
        public Builder rdsdataservice(@Nullable String rdsdataservice) {
            this.rdsdataservice = rdsdataservice;
            return this;
        }
        public Builder redshift(@Nullable String redshift) {
            this.redshift = redshift;
            return this;
        }
        public Builder redshiftdata(@Nullable String redshiftdata) {
            this.redshiftdata = redshiftdata;
            return this;
        }
        public Builder rekognition(@Nullable String rekognition) {
            this.rekognition = rekognition;
            return this;
        }
        public Builder resourcegroups(@Nullable String resourcegroups) {
            this.resourcegroups = resourcegroups;
            return this;
        }
        public Builder resourcegroupstagging(@Nullable String resourcegroupstagging) {
            this.resourcegroupstagging = resourcegroupstagging;
            return this;
        }
        public Builder resourcegroupstaggingapi(@Nullable String resourcegroupstaggingapi) {
            this.resourcegroupstaggingapi = resourcegroupstaggingapi;
            return this;
        }
        public Builder robomaker(@Nullable String robomaker) {
            this.robomaker = robomaker;
            return this;
        }
        public Builder route53(@Nullable String route53) {
            this.route53 = route53;
            return this;
        }
        public Builder route53domains(@Nullable String route53domains) {
            this.route53domains = route53domains;
            return this;
        }
        public Builder route53recoverycontrolconfig(@Nullable String route53recoverycontrolconfig) {
            this.route53recoverycontrolconfig = route53recoverycontrolconfig;
            return this;
        }
        public Builder route53recoveryreadiness(@Nullable String route53recoveryreadiness) {
            this.route53recoveryreadiness = route53recoveryreadiness;
            return this;
        }
        public Builder route53resolver(@Nullable String route53resolver) {
            this.route53resolver = route53resolver;
            return this;
        }
        public Builder s3(@Nullable String s3) {
            this.s3 = s3;
            return this;
        }
        public Builder s3control(@Nullable String s3control) {
            this.s3control = s3control;
            return this;
        }
        public Builder s3outposts(@Nullable String s3outposts) {
            this.s3outposts = s3outposts;
            return this;
        }
        public Builder sagemaker(@Nullable String sagemaker) {
            this.sagemaker = sagemaker;
            return this;
        }
        public Builder sagemakeredgemanager(@Nullable String sagemakeredgemanager) {
            this.sagemakeredgemanager = sagemakeredgemanager;
            return this;
        }
        public Builder sagemakerfeaturestoreruntime(@Nullable String sagemakerfeaturestoreruntime) {
            this.sagemakerfeaturestoreruntime = sagemakerfeaturestoreruntime;
            return this;
        }
        public Builder sagemakerruntime(@Nullable String sagemakerruntime) {
            this.sagemakerruntime = sagemakerruntime;
            return this;
        }
        public Builder savingsplans(@Nullable String savingsplans) {
            this.savingsplans = savingsplans;
            return this;
        }
        public Builder schemas(@Nullable String schemas) {
            this.schemas = schemas;
            return this;
        }
        public Builder sdb(@Nullable String sdb) {
            this.sdb = sdb;
            return this;
        }
        public Builder secretsmanager(@Nullable String secretsmanager) {
            this.secretsmanager = secretsmanager;
            return this;
        }
        public Builder securityhub(@Nullable String securityhub) {
            this.securityhub = securityhub;
            return this;
        }
        public Builder serverlessapplicationrepository(@Nullable String serverlessapplicationrepository) {
            this.serverlessapplicationrepository = serverlessapplicationrepository;
            return this;
        }
        public Builder serverlessapprepo(@Nullable String serverlessapprepo) {
            this.serverlessapprepo = serverlessapprepo;
            return this;
        }
        public Builder serverlessrepo(@Nullable String serverlessrepo) {
            this.serverlessrepo = serverlessrepo;
            return this;
        }
        public Builder servicecatalog(@Nullable String servicecatalog) {
            this.servicecatalog = servicecatalog;
            return this;
        }
        public Builder servicediscovery(@Nullable String servicediscovery) {
            this.servicediscovery = servicediscovery;
            return this;
        }
        public Builder servicequotas(@Nullable String servicequotas) {
            this.servicequotas = servicequotas;
            return this;
        }
        public Builder ses(@Nullable String ses) {
            this.ses = ses;
            return this;
        }
        public Builder sesv2(@Nullable String sesv2) {
            this.sesv2 = sesv2;
            return this;
        }
        public Builder sfn(@Nullable String sfn) {
            this.sfn = sfn;
            return this;
        }
        public Builder shield(@Nullable String shield) {
            this.shield = shield;
            return this;
        }
        public Builder signer(@Nullable String signer) {
            this.signer = signer;
            return this;
        }
        public Builder simpledb(@Nullable String simpledb) {
            this.simpledb = simpledb;
            return this;
        }
        public Builder sms(@Nullable String sms) {
            this.sms = sms;
            return this;
        }
        public Builder snowball(@Nullable String snowball) {
            this.snowball = snowball;
            return this;
        }
        public Builder sns(@Nullable String sns) {
            this.sns = sns;
            return this;
        }
        public Builder sqs(@Nullable String sqs) {
            this.sqs = sqs;
            return this;
        }
        public Builder ssm(@Nullable String ssm) {
            this.ssm = ssm;
            return this;
        }
        public Builder ssmcontacts(@Nullable String ssmcontacts) {
            this.ssmcontacts = ssmcontacts;
            return this;
        }
        public Builder ssmincidents(@Nullable String ssmincidents) {
            this.ssmincidents = ssmincidents;
            return this;
        }
        public Builder sso(@Nullable String sso) {
            this.sso = sso;
            return this;
        }
        public Builder ssoadmin(@Nullable String ssoadmin) {
            this.ssoadmin = ssoadmin;
            return this;
        }
        public Builder ssooidc(@Nullable String ssooidc) {
            this.ssooidc = ssooidc;
            return this;
        }
        public Builder stepfunctions(@Nullable String stepfunctions) {
            this.stepfunctions = stepfunctions;
            return this;
        }
        public Builder storagegateway(@Nullable String storagegateway) {
            this.storagegateway = storagegateway;
            return this;
        }
        public Builder sts(@Nullable String sts) {
            this.sts = sts;
            return this;
        }
        public Builder support(@Nullable String support) {
            this.support = support;
            return this;
        }
        public Builder swf(@Nullable String swf) {
            this.swf = swf;
            return this;
        }
        public Builder synthetics(@Nullable String synthetics) {
            this.synthetics = synthetics;
            return this;
        }
        public Builder textract(@Nullable String textract) {
            this.textract = textract;
            return this;
        }
        public Builder timestreamquery(@Nullable String timestreamquery) {
            this.timestreamquery = timestreamquery;
            return this;
        }
        public Builder timestreamwrite(@Nullable String timestreamwrite) {
            this.timestreamwrite = timestreamwrite;
            return this;
        }
        public Builder transcribe(@Nullable String transcribe) {
            this.transcribe = transcribe;
            return this;
        }
        public Builder transcribeservice(@Nullable String transcribeservice) {
            this.transcribeservice = transcribeservice;
            return this;
        }
        public Builder transcribestreaming(@Nullable String transcribestreaming) {
            this.transcribestreaming = transcribestreaming;
            return this;
        }
        public Builder transcribestreamingservice(@Nullable String transcribestreamingservice) {
            this.transcribestreamingservice = transcribestreamingservice;
            return this;
        }
        public Builder transfer(@Nullable String transfer) {
            this.transfer = transfer;
            return this;
        }
        public Builder translate(@Nullable String translate) {
            this.translate = translate;
            return this;
        }
        public Builder waf(@Nullable String waf) {
            this.waf = waf;
            return this;
        }
        public Builder wafregional(@Nullable String wafregional) {
            this.wafregional = wafregional;
            return this;
        }
        public Builder wafv2(@Nullable String wafv2) {
            this.wafv2 = wafv2;
            return this;
        }
        public Builder wellarchitected(@Nullable String wellarchitected) {
            this.wellarchitected = wellarchitected;
            return this;
        }
        public Builder workdocs(@Nullable String workdocs) {
            this.workdocs = workdocs;
            return this;
        }
        public Builder worklink(@Nullable String worklink) {
            this.worklink = worklink;
            return this;
        }
        public Builder workmail(@Nullable String workmail) {
            this.workmail = workmail;
            return this;
        }
        public Builder workmailmessageflow(@Nullable String workmailmessageflow) {
            this.workmailmessageflow = workmailmessageflow;
            return this;
        }
        public Builder workspaces(@Nullable String workspaces) {
            this.workspaces = workspaces;
            return this;
        }
        public Builder xray(@Nullable String xray) {
            this.xray = xray;
            return this;
        }        public Endpoints build() {
            final var built = new Endpoints();

            built.accessanalyzer = accessanalyzer;
            built.account = account;
            built.acm = acm;
            built.acmpca = acmpca;
            built.alexaforbusiness = alexaforbusiness;
            built.amp = amp;
            built.amplify = amplify;
            built.amplifybackend = amplifybackend;
            built.apigateway = apigateway;
            built.apigatewayv2 = apigatewayv2;
            built.appautoscaling = appautoscaling;
            built.appconfig = appconfig;
            built.appflow = appflow;
            built.appintegrations = appintegrations;
            built.appintegrationsservice = appintegrationsservice;
            built.applicationautoscaling = applicationautoscaling;
            built.applicationcostprofiler = applicationcostprofiler;
            built.applicationdiscovery = applicationdiscovery;
            built.applicationdiscoveryservice = applicationdiscoveryservice;
            built.applicationinsights = applicationinsights;
            built.appmesh = appmesh;
            built.appregistry = appregistry;
            built.apprunner = apprunner;
            built.appstream = appstream;
            built.appsync = appsync;
            built.athena = athena;
            built.auditmanager = auditmanager;
            built.augmentedairuntime = augmentedairuntime;
            built.autoscaling = autoscaling;
            built.autoscalingplans = autoscalingplans;
            built.backup = backup;
            built.batch = batch;
            built.braket = braket;
            built.budgets = budgets;
            built.chime = chime;
            built.cloud9 = cloud9;
            built.cloudcontrol = cloudcontrol;
            built.cloudcontrolapi = cloudcontrolapi;
            built.clouddirectory = clouddirectory;
            built.cloudformation = cloudformation;
            built.cloudfront = cloudfront;
            built.cloudhsm = cloudhsm;
            built.cloudhsmv2 = cloudhsmv2;
            built.cloudsearch = cloudsearch;
            built.cloudsearchdomain = cloudsearchdomain;
            built.cloudtrail = cloudtrail;
            built.cloudwatch = cloudwatch;
            built.cloudwatchevents = cloudwatchevents;
            built.cloudwatchlogs = cloudwatchlogs;
            built.codeartifact = codeartifact;
            built.codebuild = codebuild;
            built.codecommit = codecommit;
            built.codedeploy = codedeploy;
            built.codeguruprofiler = codeguruprofiler;
            built.codegurureviewer = codegurureviewer;
            built.codepipeline = codepipeline;
            built.codestar = codestar;
            built.codestarconnections = codestarconnections;
            built.codestarnotifications = codestarnotifications;
            built.cognitoidentity = cognitoidentity;
            built.cognitoidentityprovider = cognitoidentityprovider;
            built.cognitoidp = cognitoidp;
            built.cognitosync = cognitosync;
            built.comprehend = comprehend;
            built.comprehendmedical = comprehendmedical;
            built.config = config;
            built.configservice = configservice;
            built.connect = connect;
            built.connectcontactlens = connectcontactlens;
            built.connectparticipant = connectparticipant;
            built.costandusagereportservice = costandusagereportservice;
            built.costexplorer = costexplorer;
            built.cur = cur;
            built.databasemigration = databasemigration;
            built.databasemigrationservice = databasemigrationservice;
            built.dataexchange = dataexchange;
            built.datapipeline = datapipeline;
            built.datasync = datasync;
            built.dax = dax;
            built.detective = detective;
            built.devicefarm = devicefarm;
            built.devopsguru = devopsguru;
            built.directconnect = directconnect;
            built.dlm = dlm;
            built.dms = dms;
            built.docdb = docdb;
            built.ds = ds;
            built.dynamodb = dynamodb;
            built.dynamodbstreams = dynamodbstreams;
            built.ec2 = ec2;
            built.ec2instanceconnect = ec2instanceconnect;
            built.ecr = ecr;
            built.ecrpublic = ecrpublic;
            built.ecs = ecs;
            built.efs = efs;
            built.eks = eks;
            built.elasticache = elasticache;
            built.elasticbeanstalk = elasticbeanstalk;
            built.elasticinference = elasticinference;
            built.elasticsearch = elasticsearch;
            built.elasticsearchservice = elasticsearchservice;
            built.elastictranscoder = elastictranscoder;
            built.elb = elb;
            built.elbv2 = elbv2;
            built.emr = emr;
            built.emrcontainers = emrcontainers;
            built.es = es;
            built.eventbridge = eventbridge;
            built.events = events;
            built.finspace = finspace;
            built.finspacedata = finspacedata;
            built.firehose = firehose;
            built.fis = fis;
            built.fms = fms;
            built.forecast = forecast;
            built.forecastquery = forecastquery;
            built.forecastqueryservice = forecastqueryservice;
            built.forecastservice = forecastservice;
            built.frauddetector = frauddetector;
            built.fsx = fsx;
            built.gamelift = gamelift;
            built.glacier = glacier;
            built.globalaccelerator = globalaccelerator;
            built.glue = glue;
            built.gluedatabrew = gluedatabrew;
            built.greengrass = greengrass;
            built.greengrassv2 = greengrassv2;
            built.groundstation = groundstation;
            built.guardduty = guardduty;
            built.health = health;
            built.healthlake = healthlake;
            built.honeycode = honeycode;
            built.iam = iam;
            built.identitystore = identitystore;
            built.imagebuilder = imagebuilder;
            built.inspector = inspector;
            built.iot = iot;
            built.iot1clickdevices = iot1clickdevices;
            built.iot1clickdevicesservice = iot1clickdevicesservice;
            built.iot1clickprojects = iot1clickprojects;
            built.iotanalytics = iotanalytics;
            built.iotdataplane = iotdataplane;
            built.iotdeviceadvisor = iotdeviceadvisor;
            built.iotevents = iotevents;
            built.ioteventsdata = ioteventsdata;
            built.iotfleethub = iotfleethub;
            built.iotjobsdataplane = iotjobsdataplane;
            built.iotsecuretunneling = iotsecuretunneling;
            built.iotsitewise = iotsitewise;
            built.iotthingsgraph = iotthingsgraph;
            built.iotwireless = iotwireless;
            built.kafka = kafka;
            built.kafkaconnect = kafkaconnect;
            built.kendra = kendra;
            built.kinesis = kinesis;
            built.kinesisanalytics = kinesisanalytics;
            built.kinesisanalyticsv2 = kinesisanalyticsv2;
            built.kinesisvideo = kinesisvideo;
            built.kinesisvideoarchivedmedia = kinesisvideoarchivedmedia;
            built.kinesisvideomedia = kinesisvideomedia;
            built.kinesisvideosignalingchannels = kinesisvideosignalingchannels;
            built.kms = kms;
            built.lakeformation = lakeformation;
            built.lambda = lambda;
            built.lexmodelbuilding = lexmodelbuilding;
            built.lexmodelbuildingservice = lexmodelbuildingservice;
            built.lexmodels = lexmodels;
            built.lexmodelsv2 = lexmodelsv2;
            built.lexruntime = lexruntime;
            built.lexruntimeservice = lexruntimeservice;
            built.lexruntimev2 = lexruntimev2;
            built.licensemanager = licensemanager;
            built.lightsail = lightsail;
            built.location = location;
            built.lookoutequipment = lookoutequipment;
            built.lookoutforvision = lookoutforvision;
            built.lookoutmetrics = lookoutmetrics;
            built.machinelearning = machinelearning;
            built.macie = macie;
            built.macie2 = macie2;
            built.managedblockchain = managedblockchain;
            built.marketplacecatalog = marketplacecatalog;
            built.marketplacecommerceanalytics = marketplacecommerceanalytics;
            built.marketplaceentitlement = marketplaceentitlement;
            built.marketplaceentitlementservice = marketplaceentitlementservice;
            built.marketplacemetering = marketplacemetering;
            built.mediaconnect = mediaconnect;
            built.mediaconvert = mediaconvert;
            built.medialive = medialive;
            built.mediapackage = mediapackage;
            built.mediapackagevod = mediapackagevod;
            built.mediastore = mediastore;
            built.mediastoredata = mediastoredata;
            built.mediatailor = mediatailor;
            built.memorydb = memorydb;
            built.mgn = mgn;
            built.migrationhub = migrationhub;
            built.migrationhubconfig = migrationhubconfig;
            built.mobile = mobile;
            built.mobileanalytics = mobileanalytics;
            built.mq = mq;
            built.mturk = mturk;
            built.mwaa = mwaa;
            built.neptune = neptune;
            built.networkfirewall = networkfirewall;
            built.networkmanager = networkmanager;
            built.nimblestudio = nimblestudio;
            built.opsworks = opsworks;
            built.opsworkscm = opsworkscm;
            built.organizations = organizations;
            built.outposts = outposts;
            built.personalize = personalize;
            built.personalizeevents = personalizeevents;
            built.personalizeruntime = personalizeruntime;
            built.pi = pi;
            built.pinpoint = pinpoint;
            built.pinpointemail = pinpointemail;
            built.pinpointsmsvoice = pinpointsmsvoice;
            built.polly = polly;
            built.pricing = pricing;
            built.prometheus = prometheus;
            built.prometheusservice = prometheusservice;
            built.proton = proton;
            built.qldb = qldb;
            built.qldbsession = qldbsession;
            built.quicksight = quicksight;
            built.ram = ram;
            built.rds = rds;
            built.rdsdata = rdsdata;
            built.rdsdataservice = rdsdataservice;
            built.redshift = redshift;
            built.redshiftdata = redshiftdata;
            built.rekognition = rekognition;
            built.resourcegroups = resourcegroups;
            built.resourcegroupstagging = resourcegroupstagging;
            built.resourcegroupstaggingapi = resourcegroupstaggingapi;
            built.robomaker = robomaker;
            built.route53 = route53;
            built.route53domains = route53domains;
            built.route53recoverycontrolconfig = route53recoverycontrolconfig;
            built.route53recoveryreadiness = route53recoveryreadiness;
            built.route53resolver = route53resolver;
            built.s3 = s3;
            built.s3control = s3control;
            built.s3outposts = s3outposts;
            built.sagemaker = sagemaker;
            built.sagemakeredgemanager = sagemakeredgemanager;
            built.sagemakerfeaturestoreruntime = sagemakerfeaturestoreruntime;
            built.sagemakerruntime = sagemakerruntime;
            built.savingsplans = savingsplans;
            built.schemas = schemas;
            built.sdb = sdb;
            built.secretsmanager = secretsmanager;
            built.securityhub = securityhub;
            built.serverlessapplicationrepository = serverlessapplicationrepository;
            built.serverlessapprepo = serverlessapprepo;
            built.serverlessrepo = serverlessrepo;
            built.servicecatalog = servicecatalog;
            built.servicediscovery = servicediscovery;
            built.servicequotas = servicequotas;
            built.ses = ses;
            built.sesv2 = sesv2;
            built.sfn = sfn;
            built.shield = shield;
            built.signer = signer;
            built.simpledb = simpledb;
            built.sms = sms;
            built.snowball = snowball;
            built.sns = sns;
            built.sqs = sqs;
            built.ssm = ssm;
            built.ssmcontacts = ssmcontacts;
            built.ssmincidents = ssmincidents;
            built.sso = sso;
            built.ssoadmin = ssoadmin;
            built.ssooidc = ssooidc;
            built.stepfunctions = stepfunctions;
            built.storagegateway = storagegateway;
            built.sts = sts;
            built.support = support;
            built.swf = swf;
            built.synthetics = synthetics;
            built.textract = textract;
            built.timestreamquery = timestreamquery;
            built.timestreamwrite = timestreamwrite;
            built.transcribe = transcribe;
            built.transcribeservice = transcribeservice;
            built.transcribestreaming = transcribestreaming;
            built.transcribestreamingservice = transcribestreamingservice;
            built.transfer = transfer;
            built.translate = translate;
            built.waf = waf;
            built.wafregional = wafregional;
            built.wafv2 = wafv2;
            built.wellarchitected = wellarchitected;
            built.workdocs = workdocs;
            built.worklink = worklink;
            built.workmail = workmail;
            built.workmailmessageflow = workmailmessageflow;
            built.workspaces = workspaces;
            built.xray = xray;
            return built;
        }
    }
}
