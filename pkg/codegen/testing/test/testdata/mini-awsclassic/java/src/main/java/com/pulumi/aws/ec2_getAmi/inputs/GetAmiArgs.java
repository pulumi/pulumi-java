// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.aws.ec2_getAmi.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAmiArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAmiArgs Empty = new GetAmiArgs();

    /**
     * Limit search to users with *explicit* launch permission on
     * the image. Valid items are the numeric account ID or `self`.
     * 
     */
    @Import(name="executableUsers")
    private @Nullable Output<List<String>> executableUsers;

    /**
     * @return Limit search to users with *explicit* launch permission on
     * the image. Valid items are the numeric account ID or `self`.
     * 
     */
    public Optional<Output<List<String>>> executableUsers() {
        return Optional.ofNullable(this.executableUsers);
    }

    /**
     * List of AMI owners to limit search. At least 1 value must be specified. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`).
     * 
     */
    @Import(name="owners", required=true)
    private Output<List<String>> owners;

    /**
     * @return List of AMI owners to limit search. At least 1 value must be specified. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`).
     * 
     */
    public Output<List<String>> owners() {
        return this.owners;
    }

    private GetAmiArgs() {}

    private GetAmiArgs(GetAmiArgs $) {
        this.executableUsers = $.executableUsers;
        this.owners = $.owners;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAmiArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAmiArgs $;

        public Builder() {
            $ = new GetAmiArgs();
        }

        public Builder(GetAmiArgs defaults) {
            $ = new GetAmiArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param executableUsers Limit search to users with *explicit* launch permission on
         * the image. Valid items are the numeric account ID or `self`.
         * 
         * @return builder
         * 
         */
        public Builder executableUsers(@Nullable Output<List<String>> executableUsers) {
            $.executableUsers = executableUsers;
            return this;
        }

        /**
         * @param executableUsers Limit search to users with *explicit* launch permission on
         * the image. Valid items are the numeric account ID or `self`.
         * 
         * @return builder
         * 
         */
        public Builder executableUsers(List<String> executableUsers) {
            return executableUsers(Output.of(executableUsers));
        }

        /**
         * @param executableUsers Limit search to users with *explicit* launch permission on
         * the image. Valid items are the numeric account ID or `self`.
         * 
         * @return builder
         * 
         */
        public Builder executableUsers(String... executableUsers) {
            return executableUsers(List.of(executableUsers));
        }

        /**
         * @param owners List of AMI owners to limit search. At least 1 value must be specified. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`).
         * 
         * @return builder
         * 
         */
        public Builder owners(Output<List<String>> owners) {
            $.owners = owners;
            return this;
        }

        /**
         * @param owners List of AMI owners to limit search. At least 1 value must be specified. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`).
         * 
         * @return builder
         * 
         */
        public Builder owners(List<String> owners) {
            return owners(Output.of(owners));
        }

        /**
         * @param owners List of AMI owners to limit search. At least 1 value must be specified. Valid values: an AWS account ID, `self` (the current account), or an AWS owner alias (e.g., `amazon`, `aws-marketplace`, `microsoft`).
         * 
         * @return builder
         * 
         */
        public Builder owners(String... owners) {
            return owners(List.of(owners));
        }

        public GetAmiArgs build() {
            $.owners = Objects.requireNonNull($.owners, "expected parameter 'owners' to be non-null");
            return $;
        }
    }

}
