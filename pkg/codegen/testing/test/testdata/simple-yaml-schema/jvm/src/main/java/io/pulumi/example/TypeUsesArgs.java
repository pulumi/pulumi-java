// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.example;

import io.pulumi.core.Output;
import io.pulumi.core.annotations.InputImport;
import io.pulumi.example.enums.RubberTreeVariety;
import io.pulumi.example.inputs.ObjectArgs;
import io.pulumi.example.inputs.ObjectWithNodeOptionalInputsArgs;
import io.pulumi.example.inputs.SomeOtherObjectArgs;
import java.util.Objects;
import javax.annotation.Nullable;


public final class TypeUsesArgs extends io.pulumi.resources.ResourceArgs {

    public static final TypeUsesArgs Empty = new TypeUsesArgs();

    @InputImport(name="bar")
      private final @Nullable Output<SomeOtherObjectArgs> bar;

    public Output<SomeOtherObjectArgs> getBar() {
        return this.bar == null ? Output.empty() : this.bar;
    }

    @InputImport(name="baz")
      private final @Nullable Output<ObjectWithNodeOptionalInputsArgs> baz;

    public Output<ObjectWithNodeOptionalInputsArgs> getBaz() {
        return this.baz == null ? Output.empty() : this.baz;
    }

    @InputImport(name="foo")
      private final @Nullable Output<ObjectArgs> foo;

    public Output<ObjectArgs> getFoo() {
        return this.foo == null ? Output.empty() : this.foo;
    }

    @InputImport(name="qux")
      private final @Nullable Output<RubberTreeVariety> qux;

    public Output<RubberTreeVariety> getQux() {
        return this.qux == null ? Output.empty() : this.qux;
    }

    public TypeUsesArgs(
        @Nullable Output<SomeOtherObjectArgs> bar,
        @Nullable Output<ObjectWithNodeOptionalInputsArgs> baz,
        @Nullable Output<ObjectArgs> foo,
        @Nullable Output<RubberTreeVariety> qux) {
        this.bar = bar;
        this.baz = baz;
        this.foo = foo;
        this.qux = qux;
    }

    private TypeUsesArgs() {
        this.bar = Output.empty();
        this.baz = Output.empty();
        this.foo = Output.empty();
        this.qux = Output.empty();
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TypeUsesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private @Nullable Output<SomeOtherObjectArgs> bar;
        private @Nullable Output<ObjectWithNodeOptionalInputsArgs> baz;
        private @Nullable Output<ObjectArgs> foo;
        private @Nullable Output<RubberTreeVariety> qux;

        public Builder() {
    	      // Empty
        }

        public Builder(TypeUsesArgs defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bar = defaults.bar;
    	      this.baz = defaults.baz;
    	      this.foo = defaults.foo;
    	      this.qux = defaults.qux;
        }

        public Builder bar(@Nullable Output<SomeOtherObjectArgs> bar) {
            this.bar = bar;
            return this;
        }

        public Builder bar(@Nullable SomeOtherObjectArgs bar) {
            this.bar = Output.ofNullable(bar);
            return this;
        }

        public Builder baz(@Nullable Output<ObjectWithNodeOptionalInputsArgs> baz) {
            this.baz = baz;
            return this;
        }

        public Builder baz(@Nullable ObjectWithNodeOptionalInputsArgs baz) {
            this.baz = Output.ofNullable(baz);
            return this;
        }

        public Builder foo(@Nullable Output<ObjectArgs> foo) {
            this.foo = foo;
            return this;
        }

        public Builder foo(@Nullable ObjectArgs foo) {
            this.foo = Output.ofNullable(foo);
            return this;
        }

        public Builder qux(@Nullable Output<RubberTreeVariety> qux) {
            this.qux = qux;
            return this;
        }

        public Builder qux(@Nullable RubberTreeVariety qux) {
            this.qux = Output.ofNullable(qux);
            return this;
        }
        public TypeUsesArgs build() {
            return new TypeUsesArgs(bar, baz, foo, qux);
        }
    }
}
