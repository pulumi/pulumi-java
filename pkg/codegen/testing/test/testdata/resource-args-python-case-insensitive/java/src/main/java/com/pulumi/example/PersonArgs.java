// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.example;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.example.inputs.PetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PersonArgs extends com.pulumi.resources.ResourceArgs {

    public static final PersonArgs Empty = new PersonArgs();

    @Import(name="name")
    private @Nullable Output<String> name;

    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="pets")
    private @Nullable Output<List<PetArgs>> pets;

    public Optional<Output<List<PetArgs>>> pets() {
        return Optional.ofNullable(this.pets);
    }

    private PersonArgs() {}

    private PersonArgs(PersonArgs $) {
        this.name = $.name;
        this.pets = $.pets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PersonArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PersonArgs $;

        public Builder() {
            $ = new PersonArgs();
        }

        public Builder(PersonArgs defaults) {
            $ = new PersonArgs(Objects.requireNonNull(defaults));
        }

        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder pets(@Nullable Output<List<PetArgs>> pets) {
            $.pets = pets;
            return this;
        }

        public Builder pets(List<PetArgs> pets) {
            return pets(Output.of(pets));
        }

        public Builder pets(PetArgs... pets) {
            return pets(List.of(pets));
        }

        public PersonArgs build() {
            return $;
        }
    }

}
