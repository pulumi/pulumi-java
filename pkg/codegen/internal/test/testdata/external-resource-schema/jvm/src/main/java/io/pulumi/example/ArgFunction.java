// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.example;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.example.Utilities;

public class ArgFunction {
    public static CompletableFuture<ArgFunction.Result> invokeAsync(@Nullable ArgFunction.Args args, @Nullable io.pulumi.deployment.InvokeOptions options) {
        return io.pulumi.deployment.Deployment.getInstance().invokeAsync("example::argFunction", io.pulumi.core.internal.Reflection.TypeShape.of(ArgFunction.Result.class), args == null ? ArgFunction.Args.Empty : args, Utilities.withVersion(options));
    }


    public static final class Args extends io.pulumi.resources.InvokeArgs {

        public static final Args Empty = Args.builder().build();

        @InputImport(name="name")
        private final @Nullable io.pulumi.random.RandomPet name;

        public Optional<io.pulumi.random.RandomPet> getName() {
            return Optional.ofNullable(this.name);
        }

        public Args(@Nullable io.pulumi.random.RandomPet name) {
            this.name = name;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static final class Builder {
            private @Nullable io.pulumi.random.RandomPet name;

            public Builder setName(@Nullable io.pulumi.random.RandomPet name) {
                this.name = name;
                return this;
            }

            public Builder setName(@Nullable io.pulumi.random.RandomPet name) {
                this.name = Input.ofNullable(name);
                return this;
            }

            public Args build() {
                return new Args(name);
            }
        }
    }

    @OutputCustomType
    public static final class Result {
        private final @Nullable Integer age;

        @OutputCustomType.Constructor({"age"})
        private Result(@Nullable Integer age) {
            this.age = age;
        }

        public Optional<Integer> getAge() {
            return Optional.ofNullable(this.age);
        }

        public static Builder builder() {
            return new Builder();
        }

        public static final class Builder {
            private @Nullable Integer age;

            public Builder setAge(@Nullable Integer age) {
                this.age = age;
                return this;
            }

            public Result build() {
                return new Result(age);
            }
        }
    }
}
