// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.example;

import javax.annotation.Nullable;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableList;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;

@ResourceType(type="example::Component")
public class Component extends io.pulumi.resources.ComponentResource {
    @OutputExport(name="a", type=Boolean.class, parameters={})
    private Output<Boolean> a;

    public Output<Boolean> getA() {
        return this.a;
    }
    @OutputExport(name="b", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> b;

    public Output</* @Nullable */ Boolean> getB() {
        return this.b;
    }
    @OutputExport(name="bar", type=Outputs.Foo.class, parameters={})
    private Output</* @Nullable */ Outputs.Foo> bar;

    public Output</* @Nullable */ Outputs.Foo> getBar() {
        return this.bar;
    }
    @OutputExport(name="baz", type=ImmutableList.class, parameters={Outputs.Foo.class})
    private Output</* @Nullable */ ImmutableList<Outputs.Foo>> baz;

    public Output</* @Nullable */ ImmutableList<Outputs.Foo>> getBaz() {
        return this.baz;
    }
    @OutputExport(name="c", type=Integer.class, parameters={})
    private Output<Integer> c;

    public Output<Integer> getC() {
        return this.c;
    }
    @OutputExport(name="d", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> d;

    public Output</* @Nullable */ Integer> getD() {
        return this.d;
    }
    @OutputExport(name="e", type=String.class, parameters={})
    private Output<String> e;

    public Output<String> getE() {
        return this.e;
    }
    @OutputExport(name="f", type=String.class, parameters={})
    private Output</* @Nullable */ String> f;

    public Output</* @Nullable */ String> getF() {
        return this.f;
    }
    @OutputExport(name="foo", type=Outputs.Foo.class, parameters={})
    private Output</* @Nullable */ Outputs.Foo> foo;

    public Output</* @Nullable */ Outputs.Foo> getFoo() {
        return this.foo;
    }

    public Component(String name, Component.Args args, @Nullable io.pulumi.resources.ComponentResourceOptions options) {
        super("example::Component", name, args == null ? Component.Args.Empty : args, makeResourceOptions(options, Input.empty()), true);
    }

    private static io.pulumi.resources.ComponentResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.ComponentResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.ComponentResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.ComponentResourceOptions.merge(defaultOptions, options, id);
    }


    public static final class Args extends io.pulumi.resources.ResourceArgs {
        @InputImport(name="a", required=true)
        private Boolean a;

        public Boolean getA() {
            return this.a;
        }

        @InputImport(name="b")
        private @Nullable Boolean b;

        public java.util.Optional<Boolean> getB() {
            return java.util.Optional.ofNullable(this.b);
        }

        @InputImport(name="bar")
        private @Nullable Inputs.Foo bar;

        public java.util.Optional<Inputs.Foo> getBar() {
            return java.util.Optional.ofNullable(this.bar);
        }

        @InputImport(name="baz")
        private @Nullable List<Inputs.Foo> baz;

        public java.util.Optional<List<Inputs.Foo>> getBaz() {
            return java.util.Optional.ofNullable(this.baz);
        }

        @InputImport(name="bazMap")
        private @Nullable Map<String,Inputs.Foo> bazMap;

        public java.util.Optional<Map<String,Inputs.Foo>> getBazMap() {
            return java.util.Optional.ofNullable(this.bazMap);
        }

        @InputImport(name="c", required=true)
        private Integer c;

        public Integer getC() {
            return this.c;
        }

        @InputImport(name="d")
        private @Nullable Integer d;

        public java.util.Optional<Integer> getD() {
            return java.util.Optional.ofNullable(this.d);
        }

        @InputImport(name="e", required=true)
        private String e;

        public String getE() {
            return this.e;
        }

        @InputImport(name="f")
        private @Nullable String f;

        public java.util.Optional<String> getF() {
            return java.util.Optional.ofNullable(this.f);
        }

        @InputImport(name="foo")
        private @Nullable Input<Inputs.FooArgs> foo;

        public java.util.Optional<Input<Inputs.FooArgs>> getFoo() {
            return java.util.Optional.ofNullable(this.foo);
        }

        public Args() {
        }
    }
}
