// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.plant;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.plant.Utilities;

public final class Outputs {

    @OutputCustomType
    public static final class Container {
        private final @Nullable io.pulumi.plant.Enums.ContainerBrightness brightness;
        private final @Nullable String color;
        private final @Nullable String material;
        private final io.pulumi.plant.Enums.ContainerSize size;

        @OutputCustomType.Constructor({"brightness","color","material","size"})
        private Container(
            @Nullable io.pulumi.plant.Enums.ContainerBrightness brightness,
            @Nullable String color,
            @Nullable String material,
            io.pulumi.plant.Enums.ContainerSize size) {
            this.brightness = brightness;
            this.color = color;
            this.material = material;
            this.size = Objects.requireNonNull(size);
        }

        public Optional<io.pulumi.plant.Enums.ContainerBrightness> getBrightness() {
            return Optional.ofNullable(this.brightness);
        }
        public Optional<String> getColor() {
            return Optional.ofNullable(this.color);
        }
        public Optional<String> getMaterial() {
            return Optional.ofNullable(this.material);
        }
        public io.pulumi.plant.Enums.ContainerSize getSize() {
            return this.size;
        }
    }
}
