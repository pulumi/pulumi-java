// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.plant.tree.v1;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.plant.Utilities;

@ResourceType(type="plant:tree/v1:RubberTree")
public class RubberTree extends io.pulumi.resources.CustomResource {
    @OutputExport(name="container", type=io.pulumi.plant.outputs.Container.class, parameters={})
    private Output</* @Nullable */ io.pulumi.plant.outputs.Container> container;

    public Output</* @Nullable */ io.pulumi.plant.outputs.Container> getContainer() {
        return this.container;
    }
    @OutputExport(name="diameter", type=io.pulumi.plant.tree.v1.enums.Diameter.class, parameters={})
    private Output<io.pulumi.plant.tree.v1.enums.Diameter> diameter;

    public Output<io.pulumi.plant.tree.v1.enums.Diameter> getDiameter() {
        return this.diameter;
    }
    @OutputExport(name="farm", type=String.class, parameters={})
    private Output</* @Nullable */ String> farm;

    public Output</* @Nullable */ String> getFarm() {
        return this.farm;
    }
    @OutputExport(name="size", type=io.pulumi.plant.tree.v1.enums.TreeSize.class, parameters={})
    private Output</* @Nullable */ io.pulumi.plant.tree.v1.enums.TreeSize> size;

    public Output</* @Nullable */ io.pulumi.plant.tree.v1.enums.TreeSize> getSize() {
        return this.size;
    }
    @OutputExport(name="type", type=io.pulumi.plant.tree.v1.enums.RubberTreeVariety.class, parameters={})
    private Output<io.pulumi.plant.tree.v1.enums.RubberTreeVariety> type;

    public Output<io.pulumi.plant.tree.v1.enums.RubberTreeVariety> getType() {
        return this.type;
    }

    public RubberTree(String name, RubberTree.Args args, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("plant:tree/v1:RubberTree", name, args == null ? RubberTree.Args.Empty : args, makeResourceOptions(options, Input.empty()));
    }

    private RubberTree(String name, Input<String> id, @Nullable RubberTree.State state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        super("plant:tree/v1:RubberTree", name, state, makeResourceOptions(options, id));
    }

    private static io.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable io.pulumi.resources.CustomResourceOptions options, @Nullable Input<String> id) {
        var defaultOptions = io.pulumi.resources.CustomResourceOptions.builder()
            .setVersion(Utilities.getVersion())
            .build();
        return io.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    public static RubberTree get(String name, Input<String> id, @Nullable RubberTree.State state, @Nullable io.pulumi.resources.CustomResourceOptions options) {
        return new RubberTree(name, id, state, options);
    }

    public static final class Args extends io.pulumi.resources.ResourceArgs {

        public static final Args Empty = Args.builder().build();

        @InputImport(name="container")
        private final @Nullable Input<io.pulumi.plant.inputs.ContainerArgs> container;

        public Input<io.pulumi.plant.inputs.ContainerArgs> getContainer() {
            return Input.ofNullable(this.container);
        }

        @InputImport(name="diameter", required=true)
        private final Input<io.pulumi.plant.tree.v1.enums.Diameter> diameter;

        public Input<io.pulumi.plant.tree.v1.enums.Diameter> getDiameter() {
            return this.diameter;
        }

        @InputImport(name="farm")
        private final @Nullable Input<Either<io.pulumi.plant.tree.v1.enums.Farm,String>> farm;

        public Input<Either<io.pulumi.plant.tree.v1.enums.Farm,String>> getFarm() {
            return Input.ofNullable(this.farm);
        }

        @InputImport(name="size")
        private final @Nullable Input<io.pulumi.plant.tree.v1.enums.TreeSize> size;

        public Input<io.pulumi.plant.tree.v1.enums.TreeSize> getSize() {
            return Input.ofNullable(this.size);
        }

        @InputImport(name="type", required=true)
        private final Input<io.pulumi.plant.tree.v1.enums.RubberTreeVariety> type;

        public Input<io.pulumi.plant.tree.v1.enums.RubberTreeVariety> getType() {
            return this.type;
        }

        public Args(
            @Nullable Input<io.pulumi.plant.inputs.ContainerArgs> container,
            Input<io.pulumi.plant.tree.v1.enums.Diameter> diameter,
            @Nullable Input<Either<io.pulumi.plant.tree.v1.enums.Farm,String>> farm,
            @Nullable Input<io.pulumi.plant.tree.v1.enums.TreeSize> size,
            Input<io.pulumi.plant.tree.v1.enums.RubberTreeVariety> type) {
            this.container = container;
            this.diameter = diameter == null ? Input.of(io.pulumi.plant.tree.v1.enums.Diameter.Sixinch) : Objects.requireNonNull(diameter);
            this.farm = farm == null ? Input.ofUnion("(unknown)", io.pulumi.plant.tree.v1.enums.Farm.class, String.class) : farm;
            this.size = size == null ? Input.of(io.pulumi.plant.tree.v1.enums.TreeSize.Medium) : size;
            this.type = type == null ? Input.of(io.pulumi.plant.tree.v1.enums.RubberTreeVariety.Burgundy) : Objects.requireNonNull(type);
        }

        public static Builder builder() {
            return new Builder();
        }

        public static final class Builder {
            private @Nullable Input<io.pulumi.plant.inputs.ContainerArgs> container;
            public Builder setContainer(@Nullable Input<io.pulumi.plant.inputs.ContainerArgs> container) {
                this.container = container;
                return this;
            }
            public Builder setContainer(@Nullable io.pulumi.plant.inputs.ContainerArgs container) {
                this.container = Input.ofNullable(container);
                return this;
            }
            private Input<io.pulumi.plant.tree.v1.enums.Diameter> diameter;
            public Builder setDiameter(Input<io.pulumi.plant.tree.v1.enums.Diameter> diameter) {
                this.diameter = Objects.requireNonNull(diameter);
                return this;
            }
            public Builder setDiameter(io.pulumi.plant.tree.v1.enums.Diameter diameter) {
                this.diameter = Input.of(Objects.requireNonNull(diameter));
                return this;
            }
            private @Nullable Input<Either<io.pulumi.plant.tree.v1.enums.Farm,String>> farm;
            public Builder setFarm(@Nullable Input<Either<io.pulumi.plant.tree.v1.enums.Farm,String>> farm) {
                this.farm = farm;
                return this;
            }
            public Builder setFarm(@Nullable Either<io.pulumi.plant.tree.v1.enums.Farm,String> farm) {
                this.farm = Input.ofNullable(farm);
                return this;
            }
            private @Nullable Input<io.pulumi.plant.tree.v1.enums.TreeSize> size;
            public Builder setSize(@Nullable Input<io.pulumi.plant.tree.v1.enums.TreeSize> size) {
                this.size = size;
                return this;
            }
            public Builder setSize(@Nullable io.pulumi.plant.tree.v1.enums.TreeSize size) {
                this.size = Input.ofNullable(size);
                return this;
            }
            private Input<io.pulumi.plant.tree.v1.enums.RubberTreeVariety> type;
            public Builder setType(Input<io.pulumi.plant.tree.v1.enums.RubberTreeVariety> type) {
                this.type = Objects.requireNonNull(type);
                return this;
            }
            public Builder setType(io.pulumi.plant.tree.v1.enums.RubberTreeVariety type) {
                this.type = Input.of(Objects.requireNonNull(type));
                return this;
            }
            public Args build() {
                return new Args(
                    this.container,
                    this.diameter,
                    this.farm,
                    this.size,
                    this.type
                );
            }
        }
    }

    public static final class State extends io.pulumi.resources.ResourceArgs {

        public static final State Empty = State.builder().build();

        @InputImport(name="farm")
        private final @Nullable Input<Either<io.pulumi.plant.tree.v1.enums.Farm,String>> farm;

        public Input<Either<io.pulumi.plant.tree.v1.enums.Farm,String>> getFarm() {
            return Input.ofNullable(this.farm);
        }

        public State(@Nullable Input<Either<io.pulumi.plant.tree.v1.enums.Farm,String>> farm) {
            this.farm = farm == null ? Input.ofUnion("(unknown)", io.pulumi.plant.tree.v1.enums.Farm.class, String.class) : farm;
        }

        public static Builder builder() {
            return new Builder();
        }

        public static final class Builder {
            private @Nullable Input<Either<io.pulumi.plant.tree.v1.enums.Farm,String>> farm;
            public Builder setFarm(@Nullable Input<Either<io.pulumi.plant.tree.v1.enums.Farm,String>> farm) {
                this.farm = farm;
                return this;
            }
            public Builder setFarm(@Nullable Either<io.pulumi.plant.tree.v1.enums.Farm,String> farm) {
                this.farm = Input.ofNullable(farm);
                return this;
            }
            public State build() {
                return new State(
                    this.farm
                );
            }
        }
    }
}
