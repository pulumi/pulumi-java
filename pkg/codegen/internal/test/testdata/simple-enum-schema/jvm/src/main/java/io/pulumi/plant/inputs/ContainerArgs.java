// *** WARNING: this file was generated by test. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package io.pulumi.plant.inputs;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;
import java.util.Map;
import java.util.List;
import java.util.concurrent.CompletableFuture;
import io.pulumi.core.*;
import io.pulumi.core.internal.annotations.*;
import io.pulumi.plant.Utilities;


public final class ContainerArgs extends io.pulumi.resources.ResourceArgs {

    public static final ContainerArgs Empty = ContainerArgs.builder().build();

    @InputImport(name="brightness")
    private final @Nullable Input<io.pulumi.plant.enums.ContainerBrightness> brightness;

    public Input<io.pulumi.plant.enums.ContainerBrightness> getBrightness() {
        return Input.ofNullable(this.brightness);
    }

    @InputImport(name="color")
    private final @Nullable Input<Either<io.pulumi.plant.enums.ContainerColor,String>> color;

    public Input<Either<io.pulumi.plant.enums.ContainerColor,String>> getColor() {
        return Input.ofNullable(this.color);
    }

    @InputImport(name="material")
    private final @Nullable Input<String> material;

    public Input<String> getMaterial() {
        return Input.ofNullable(this.material);
    }

    @InputImport(name="size", required=true)
    private final Input<io.pulumi.plant.enums.ContainerSize> size;

    public Input<io.pulumi.plant.enums.ContainerSize> getSize() {
        return this.size;
    }

    public ContainerArgs(
        @Nullable Input<io.pulumi.plant.enums.ContainerBrightness> brightness,
        @Nullable Input<Either<io.pulumi.plant.enums.ContainerColor,String>> color,
        @Nullable Input<String> material,
        Input<io.pulumi.plant.enums.ContainerSize> size) {
        this.brightness = brightness == null ? Input.of(io.pulumi.plant.enums.ContainerBrightness.One) : brightness;
        this.color = color;
        this.material = material;
        this.size = Objects.requireNonNull(size);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static final class Builder {
        private @Nullable Input<io.pulumi.plant.enums.ContainerBrightness> brightness;
        public Builder setBrightness(@Nullable Input<io.pulumi.plant.enums.ContainerBrightness> brightness) {
            this.brightness = brightness;
            return this;
        }
        public Builder setBrightness(@Nullable io.pulumi.plant.enums.ContainerBrightness brightness) {
            this.brightness = Input.ofNullable(brightness);
            return this;
        }
        private @Nullable Input<Either<io.pulumi.plant.enums.ContainerColor,String>> color;
        public Builder setColor(@Nullable Input<Either<io.pulumi.plant.enums.ContainerColor,String>> color) {
            this.color = color;
            return this;
        }
        public Builder setColor(@Nullable Either<io.pulumi.plant.enums.ContainerColor,String> color) {
            this.color = Input.ofNullable(color);
            return this;
        }
        private @Nullable Input<String> material;
        public Builder setMaterial(@Nullable Input<String> material) {
            this.material = material;
            return this;
        }
        public Builder setMaterial(@Nullable String material) {
            this.material = Input.ofNullable(material);
            return this;
        }
        private Input<io.pulumi.plant.enums.ContainerSize> size;
        public Builder setSize(Input<io.pulumi.plant.enums.ContainerSize> size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        public Builder setSize(io.pulumi.plant.enums.ContainerSize size) {
            this.size = Input.of(Objects.requireNonNull(size));
            return this;
        }
        public ContainerArgs build() {
            return new ContainerArgs(
                this.brightness,
                this.color,
                this.material,
                this.size
            );
        }
    }
}
