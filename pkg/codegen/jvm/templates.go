package jvm

import (
	"text/template"
)

// nolint:lll
const jvmUtilitiesTemplateText = `// *** WARNING: this file was generated. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package {{ .PackageName }};

import javax.annotation.Nullable;
import io.pulumi.deployment.InvokeOptions;

public class {{.ClassName}} {
    // TODO

	// TODO: this probably should be done via a mutator on the InvokeOptions
	public static InvokeOptions withVersion(@Nullable InvokeOptions options) {
            if (options != null && options.getVersion().isPresent()) {
                return options;
            }
            return new InvokeOptions(
                options == null ? null : options.getParent().orElse(null),
                options == null ? null : options.getProvider().orElse(null),
                getVersion()
            );
        }

	private static String version;
	public static String getVersion() {
        return version;
    }

	static {
    	// TODO
	}
}
`

var jvmUtilitiesTemplate = template.Must(template.New("JavaUtilities").Parse(jvmUtilitiesTemplateText))

type jvmUtilitiesTemplateContext struct {
	Name        string
	PackageName string
	ClassName   string
	Tool        string
}

// nolint:lll
const jvmBuildTemplateText = `// *** WARNING: this file was generated. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

plugins {
  id("java-library")
}

repositories {
  maven { // The google mirror is less flaky than mavenCentral()
      url("https://maven-central.storage-download.googleapis.com/maven2/")
  }
  mavenCentral()
  mavenLocal()
}

dependencies {
    implementation("io.pulumi:pulumi:3.6.0+")
    implementation("com.google.code.findbugs:jsr305:3.0.2")
    api("com.google.guava:guava:30.1-jre") // FIXME: do we really want to expose this dep?

    def junitVersion = "5.7.2"
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation("org.junit.jupiter:junit-jupiter-params:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testImplementation("org.assertj:assertj-core:3.20.2")
}
`

var jvmBuildTemplate = template.Must(template.New("JavaBuild").Parse(jvmBuildTemplateText))

type jvmBuildTemplateContext struct {
}

// nolint:lll
const jvmSettingsTemplateText = `// *** WARNING: this file was generated. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

pluginManagement {
  repositories {
    maven { // The google mirror is less flaky than mavenCentral()
      url("https://maven-central.storage-download.googleapis.com/maven2/")
    }
    gradlePluginPortal()
  }
}

rootProject.name = "{{ .PackageName }}"
include("lib")`

var jvmSettingsTemplate = template.Must(template.New("JavaSettings").Parse(jvmSettingsTemplateText))

type jvmSettingsTemplateContext struct {
	PackageName string
}
